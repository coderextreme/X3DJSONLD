load('X3Dautoclass.js');

// Javadoc annotations follow, see below for source.
/**
 * <p> Articulated 3D game character designed with a general graphics tool, then converted into an X3D HAnim model. </p>
 <p> Related links: JinLOA1.java source, <a href="https://www.web3d.org/x3d/content/examples/X3dResources.html" target="_blank">X3D Resources</a>, <a href="https://www.web3d.org/x3d/content/examples/X3dSceneAuthoringHints.html" target="_blank">X3D Scene Authoring Hints</a> and <a href="https://www.web3d.org/x3d/content/X3dTooltips.html" target="_blank">X3D Tooltips</a>. </p>
	<table style="color:black; border:0px solid; border-spacing:10px 0px;" summary="Scene Metadata">
		<tr style="background-color:silver; border-color:silver;">
			<td style="text-align:center; padding:10px 0px;"><i>meta tags</i></td>
			<td style="text-align:left;   padding:10px 0px;">net.x3djsonld.data.JinLOA1&nbsp; Document Metadata </td>
		</tr>

		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> title </i> </td>
			<td> <a href="https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Characters/JinLOA1.x3d">JinLOA1.x3d</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> creator </i> </td>
			<td> Jin Hoon Lee and Min Joo Lee </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> translator </i> </td>
			<td> Chul Hee Jung and Myeong Won Lee </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> created </i> </td>
			<td> 31 March 2011 </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> translated </i> </td>
			<td> 1 November 2014 </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> modified </i> </td>
			<td> 23 December 2021 </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> TODO </i> </td>
			<td> rescale smaller than 30m! convert inches to meters? what about motion scaling? </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> description </i> </td>
			<td> Articulated 3D game character designed with a general graphics tool, then converted into an X3D HAnim model. </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> reference </i> </td>
			<td> KoreanCharacter00ReadMe.txt </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> reference </i> </td>
			<td> <a href="https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Characters/KoreanCharacterHumanMotion_Infotech2014_140706.pdf">KoreanCharacterHumanMotion_Infotech2014_140706.pdf</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> reference </i> </td>
			<td> <a href="https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Characters/KoreanCharactersIllustrated.pdf">KoreanCharactersIllustrated.pdf</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> identifier </i> </td>
			<td> <a href="https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Characters/JinLOA1.x3d" target="_blank">https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Characters/JinLOA1.x3d</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> generator </i> </td>
			<td> 3DS MAX, <a href="http://www.autodesk.com/products/autodesk-3ds-max/overview" target="_blank">http://www.autodesk.com/products/autodesk-3ds-max/overview</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> generator </i> </td>
			<td> Suwon HAnim Converter </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> generator </i> </td>
			<td> Gnu Image Manipulation Program, <a href="http://www.gimp.org" target="_blank">http://www.gimp.org</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> generator </i> </td>
			<td> X3D-Edit 3.3, <a href="https://savage.nps.edu/X3D-Edit" target="_blank">https://savage.nps.edu/X3D-Edit</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> license </i> </td>
			<td> <a href="https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Characters/../license.html">../license.html</a> </td>
		</tr>
		<tr style="background-color:silver; border-color:silver;">
			<td style="text-align:center;" colspan="2">  &nbsp; </td>
		</tr>
	</table>

	<p>
		This program uses the
		<a href="https://www.web3d.org/specifications/java/X3DJSAIL.html" target="_blank">X3D Java Scene Access Interface Library (X3DJSAIL)</a>.
		It has been produced using the 
		<a href="https://www.web3d.org/x3d/stylesheets/X3dToES5.xslt" target="_blank">X3dToES5.xslt</a>
		stylesheet to create ES5 source code from an <code>.x3d</code> scene.
	</p>

	* @author Jin Hoon Lee and Min Joo Lee
 */

function JinLOA1
  /** Default constructor to create this object. */
  ()
  {
    /** The initialized model object, created within initialize() method. */
    this.x3dModel = {};
    this.initialize();
    return this;
  }
  function doubleToFloat(d) {
    if (Float32Array) {
        return new Float32Array([d])[0];
    }
  }
JinLOA1.prototype = {
  /** Create and initialize the X3D model. */
  initialize : function ()
  {

	/** Large attribute array: MetadataSet reference field, scene-graph level=4, element #23, 1 total value */
	this.MetadataSet_HAnimHumanoid.info_4_23_reference = new SFString("https://www.web3d.org/documents/specifications/19774/V2.0/Architecture/ObjectInterfaces.html#Humanoid");

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=8, element #34, 480 total numbers */
	this.IndexedFaceSet_8_34_coordIndex = new MFInt32(Java.to([0,1,2,-1,0,2,3,-1,0,3,4,-1,0,4,5,-1,0,5,6,-1,0,6,7,-1,0,7,8,-1,0,8,9,-1,0,9,10,-1,0,10,11,-1,0,11,12,-1,0,12,1,-1,14,2,1,-1,1,13,14,-1,15,3,2,-1,2,14,15,-1,16,4,3,-1,3,15,16,-1,17,5,4,-1,4,16,17,-1,18,6,5,-1,5,17,18,-1,19,7,6,-1,6,18,19,-1,20,8,7,-1,7,19,20,-1,21,9,8,-1,8,20,21,-1,22,10,9,-1,9,21,22,-1,23,11,10,-1,10,22,23,-1,24,12,11,-1,11,23,24,-1,13,1,12,-1,12,24,13,-1,26,14,13,-1,13,25,26,-1,27,15,14,-1,14,26,27,-1,28,16,15,-1,15,27,28,-1,29,17,16,-1,16,28,29,-1,30,18,17,-1,17,29,30,-1,31,19,18,-1,18,30,31,-1,32,20,19,-1,19,31,32,-1,33,21,20,-1,20,32,33,-1,34,22,21,-1,21,33,34,-1,35,23,22,-1,22,34,35,-1,36,24,23,-1,23,35,36,-1,25,13,24,-1,24,36,25,-1,38,26,25,-1,25,37,38,-1,39,27,26,-1,26,38,39,-1,40,28,27,-1,27,39,40,-1,41,29,28,-1,28,40,41,-1,42,30,29,-1,29,41,42,-1,43,31,30,-1,30,42,43,-1,44,32,31,-1,31,43,44,-1,45,33,32,-1,32,44,45,-1,46,34,33,-1,33,45,46,-1,47,35,34,-1,34,46,47,-1,48,36,35,-1,35,47,48,-1,37,25,36,-1,36,48,37,-1,50,38,37,-1,37,49,50,-1,51,39,38,-1,38,50,51,-1,52,40,39,-1,39,51,52,-1,53,41,40,-1,40,52,53,-1,54,42,41,-1,41,53,54,-1,55,43,42,-1,42,54,55,-1,56,44,43,-1,43,55,56,-1,57,45,44,-1,44,56,57,-1,58,46,45,-1,45,57,58,-1,59,47,46,-1,46,58,59,-1,60,48,47,-1,47,59,60,-1,49,37,48,-1,48,60,49,-1,61,50,49,-1,61,51,50,-1,61,52,51,-1,61,53,52,-1,61,54,53,-1,61,55,54,-1,61,56,55,-1,61,57,56,-1,61,58,57,-1,61,59,58,-1,61,60,59,-1,61,49,60,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=8, element #34, 480 total numbers */
	this.IndexedFaceSet_8_34_texCoordIndex = new MFInt32(Java.to([0,1,2,-1,0,2,3,-1,0,3,4,-1,0,4,5,-1,0,5,6,-1,0,6,7,-1,0,7,8,-1,0,8,9,-1,0,9,10,-1,0,10,11,-1,0,11,12,-1,0,12,1,-1,14,2,1,-1,1,13,14,-1,15,3,2,-1,2,14,15,-1,16,4,3,-1,3,15,16,-1,17,5,4,-1,4,16,17,-1,18,6,5,-1,5,17,18,-1,19,7,6,-1,6,18,19,-1,20,8,7,-1,7,19,20,-1,21,9,8,-1,8,20,21,-1,22,10,9,-1,9,21,22,-1,23,11,10,-1,10,22,23,-1,24,12,11,-1,11,23,24,-1,13,1,12,-1,12,24,13,-1,26,14,13,-1,13,25,26,-1,27,15,14,-1,14,26,27,-1,28,16,15,-1,15,27,28,-1,29,17,16,-1,16,28,29,-1,30,18,17,-1,17,29,30,-1,31,19,18,-1,18,30,31,-1,32,20,19,-1,19,31,32,-1,33,21,20,-1,20,32,33,-1,34,22,21,-1,21,33,34,-1,35,23,22,-1,22,34,35,-1,36,24,23,-1,23,35,36,-1,25,13,24,-1,24,36,25,-1,38,26,25,-1,25,37,38,-1,39,27,26,-1,26,38,39,-1,40,28,27,-1,27,39,40,-1,41,29,28,-1,28,40,41,-1,42,30,29,-1,29,41,42,-1,43,31,30,-1,30,42,43,-1,44,32,31,-1,31,43,44,-1,45,33,32,-1,32,44,45,-1,46,34,33,-1,33,45,46,-1,47,35,34,-1,34,46,47,-1,48,36,35,-1,35,47,48,-1,37,25,36,-1,36,48,37,-1,50,38,37,-1,37,49,50,-1,51,39,38,-1,38,50,51,-1,52,40,39,-1,39,51,52,-1,53,41,40,-1,40,52,53,-1,54,42,41,-1,41,53,54,-1,55,43,42,-1,42,54,55,-1,56,44,43,-1,43,55,56,-1,57,45,44,-1,44,56,57,-1,58,46,45,-1,45,57,58,-1,59,47,46,-1,46,58,59,-1,60,48,47,-1,47,59,60,-1,49,37,48,-1,48,60,49,-1,61,50,49,-1,61,51,50,-1,61,52,51,-1,61,53,52,-1,61,54,53,-1,61,55,54,-1,61,56,55,-1,61,57,56,-1,61,58,57,-1,61,59,58,-1,61,60,59,-1,61,49,60,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=9, element #34, 186 total numbers made up of 62 3-tuple values */
	this.Coordinate_9_34_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(0.0),doubleToFloat(10.7900),doubleToFloat(0.1424),doubleToFloat(0.0),doubleToFloat(10.0600),doubleToFloat(-2.8250),doubleToFloat(-2.2830),doubleToFloat(10.0600),doubleToFloat(-2.4280),doubleToFloat(-3.9540),doubleToFloat(10.0600),doubleToFloat(-1.9480),doubleToFloat(-4.5660),doubleToFloat(10.0600),doubleToFloat(0.1424),doubleToFloat(-3.9540),doubleToFloat(10.0600),doubleToFloat(2.2330),doubleToFloat(-2.2830),doubleToFloat(10.0600),doubleToFloat(2.7120),doubleToFloat(0.0),doubleToFloat(10.0600),doubleToFloat(3.1100),doubleToFloat(2.2830),doubleToFloat(10.0600),doubleToFloat(2.7120),doubleToFloat(3.9540),doubleToFloat(10.0600),doubleToFloat(2.2330)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(4.5660),doubleToFloat(10.0600),doubleToFloat(0.1424),doubleToFloat(3.9540),doubleToFloat(10.0600),doubleToFloat(-1.9480),doubleToFloat(2.2830),doubleToFloat(10.0600),doubleToFloat(-2.4280),doubleToFloat(0.0),doubleToFloat(8.0450),doubleToFloat(-4.6140),doubleToFloat(-2.9530),doubleToFloat(8.0450),doubleToFloat(-3.9770),doubleToFloat(-5.1140),doubleToFloat(8.0450),doubleToFloat(-2.2360),doubleToFloat(-5.9050),doubleToFloat(8.0450),doubleToFloat(0.1424),doubleToFloat(-5.1140),doubleToFloat(8.0450),doubleToFloat(2.5210),doubleToFloat(-2.9530),doubleToFloat(8.0450),doubleToFloat(3.6450),doubleToFloat(0.0),doubleToFloat(8.0450),doubleToFloat(4.2820)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(2.9530),doubleToFloat(8.0450),doubleToFloat(3.6450),doubleToFloat(5.1140),doubleToFloat(8.0450),doubleToFloat(2.5210),doubleToFloat(5.9050),doubleToFloat(8.0450),doubleToFloat(0.1424),doubleToFloat(5.1140),doubleToFloat(8.0450),doubleToFloat(-2.2360),doubleToFloat(2.9530),doubleToFloat(8.0450),doubleToFloat(-3.9770),doubleToFloat(0.0),doubleToFloat(5.2970),doubleToFloat(-5.0180),doubleToFloat(-3.4090),doubleToFloat(5.2970),doubleToFloat(-4.2820),doubleToFloat(-5.9050),doubleToFloat(5.2970),doubleToFloat(-2.2720),doubleToFloat(-6.8190),doubleToFloat(5.2970),doubleToFloat(0.1424),doubleToFloat(-5.9050),doubleToFloat(5.2970),doubleToFloat(2.8890)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-3.4090),doubleToFloat(5.2970),doubleToFloat(4.2820),doubleToFloat(0.0),doubleToFloat(5.2970),doubleToFloat(5.0180),doubleToFloat(3.4090),doubleToFloat(5.2970),doubleToFloat(4.2820),doubleToFloat(5.9050),doubleToFloat(5.2970),doubleToFloat(2.8890),doubleToFloat(6.8190),doubleToFloat(5.2970),doubleToFloat(0.1424),doubleToFloat(5.9050),doubleToFloat(5.2970),doubleToFloat(-2.2720),doubleToFloat(3.4090),doubleToFloat(5.2970),doubleToFloat(-4.2820),doubleToFloat(0.0),doubleToFloat(2.5480),doubleToFloat(-4.2820),doubleToFloat(-2.9530),doubleToFloat(2.5480),doubleToFloat(-3.6450),doubleToFloat(-5.1140),doubleToFloat(2.5480),doubleToFloat(-1.9040)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-5.9050),doubleToFloat(2.5480),doubleToFloat(0.1424),doubleToFloat(-5.1140),doubleToFloat(2.5480),doubleToFloat(2.5210),doubleToFloat(-2.9530),doubleToFloat(2.5480),doubleToFloat(3.6450),doubleToFloat(0.0),doubleToFloat(2.5480),doubleToFloat(4.2820),doubleToFloat(2.9530),doubleToFloat(2.5480),doubleToFloat(3.6450),doubleToFloat(5.1140),doubleToFloat(2.5480),doubleToFloat(2.5210),doubleToFloat(5.9050),doubleToFloat(2.5480),doubleToFloat(0.1424),doubleToFloat(5.1140),doubleToFloat(2.5480),doubleToFloat(-1.9040),doubleToFloat(2.9530),doubleToFloat(2.5480),doubleToFloat(-3.6450),doubleToFloat(0.0),doubleToFloat(0.5362),doubleToFloat(-2.2720)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.7050),doubleToFloat(0.5362),doubleToFloat(-1.9040),doubleToFloat(-2.9530),doubleToFloat(0.5362),doubleToFloat(-1.2310),doubleToFloat(-3.4090),doubleToFloat(0.5362),doubleToFloat(0.1424),doubleToFloat(-2.9530),doubleToFloat(0.5362),doubleToFloat(1.5160),doubleToFloat(-1.7050),doubleToFloat(0.5362),doubleToFloat(2.5210),doubleToFloat(0.0),doubleToFloat(0.5362),doubleToFloat(2.8890),doubleToFloat(1.7050),doubleToFloat(0.5362),doubleToFloat(2.5210),doubleToFloat(2.9530),doubleToFloat(0.5362),doubleToFloat(1.5160),doubleToFloat(3.4090),doubleToFloat(0.5362),doubleToFloat(0.1424),doubleToFloat(2.9530),doubleToFloat(0.5362),doubleToFloat(-1.2310)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(1.7050),doubleToFloat(0.5362),doubleToFloat(-1.9040),doubleToFloat(0.0),doubleToFloat(-0.2003),doubleToFloat(0.1424)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=9, element #35, 124 total numbers made up of 62 2-tuple values */
	this.TextureCoordinate_9_35_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.6211),doubleToFloat(0.5754),doubleToFloat(0.7851),doubleToFloat(0.5720),doubleToFloat(0.7614),doubleToFloat(0.5720),doubleToFloat(0.6907),doubleToFloat(0.5698),doubleToFloat(0.6200),doubleToFloat(0.5698),doubleToFloat(0.6158),doubleToFloat(0.5702),doubleToFloat(0.5451),doubleToFloat(0.5702),doubleToFloat(0.4167),doubleToFloat(0.5698),doubleToFloat(0.5451),doubleToFloat(0.5702),doubleToFloat(0.6158),doubleToFloat(0.5702)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.6200),doubleToFloat(0.5698),doubleToFloat(0.6907),doubleToFloat(0.5698),doubleToFloat(0.7614),doubleToFloat(0.5720),doubleToFloat(0.8036),doubleToFloat(0.5346),doubleToFloat(0.7761),doubleToFloat(0.5346),doubleToFloat(0.6989),doubleToFloat(0.4838),doubleToFloat(0.6219),doubleToFloat(0.4428),doubleToFloat(0.6154),doubleToFloat(0.4438),doubleToFloat(0.5492),doubleToFloat(0.4639),doubleToFloat(0.4166),doubleToFloat(0.5346)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5492),doubleToFloat(0.4639),doubleToFloat(0.6154),doubleToFloat(0.4438),doubleToFloat(0.6219),doubleToFloat(0.4428),doubleToFloat(0.6989),doubleToFloat(0.4838),doubleToFloat(0.7761),doubleToFloat(0.5346),doubleToFloat(0.7912),doubleToFloat(0.4044),doubleToFloat(0.7635),doubleToFloat(0.4044),doubleToFloat(0.7042),doubleToFloat(0.3925),doubleToFloat(0.6194),doubleToFloat(0.3907),doubleToFloat(0.6148),doubleToFloat(0.3907)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5450),doubleToFloat(0.3974),doubleToFloat(0.4163),doubleToFloat(0.4938),doubleToFloat(0.5450),doubleToFloat(0.3974),doubleToFloat(0.6148),doubleToFloat(0.3907),doubleToFloat(0.6194),doubleToFloat(0.3907),doubleToFloat(0.7042),doubleToFloat(0.3925),doubleToFloat(0.7635),doubleToFloat(0.4044),doubleToFloat(0.7950),doubleToFloat(0.3772),doubleToFloat(0.7662),doubleToFloat(0.3772),doubleToFloat(0.6945),doubleToFloat(0.3645)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.6236),doubleToFloat(0.3695),doubleToFloat(0.6160),doubleToFloat(0.3695),doubleToFloat(0.5438),doubleToFloat(0.3780),doubleToFloat(0.4160),doubleToFloat(0.4530),doubleToFloat(0.5438),doubleToFloat(0.3780),doubleToFloat(0.6160),doubleToFloat(0.3695),doubleToFloat(0.6236),doubleToFloat(0.3695),doubleToFloat(0.6945),doubleToFloat(0.3645),doubleToFloat(0.7662),doubleToFloat(0.3772),doubleToFloat(0.7887),doubleToFloat(0.3451)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7635),doubleToFloat(0.3451),doubleToFloat(0.6980),doubleToFloat(0.3508),doubleToFloat(0.6262),doubleToFloat(0.3508),doubleToFloat(0.6297),doubleToFloat(0.3503),doubleToFloat(0.5389),doubleToFloat(0.3503),doubleToFloat(0.4181),doubleToFloat(0.3884),doubleToFloat(0.5389),doubleToFloat(0.3503),doubleToFloat(0.6297),doubleToFloat(0.3503),doubleToFloat(0.6262),doubleToFloat(0.3508),doubleToFloat(0.6980),doubleToFloat(0.3508)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7635),doubleToFloat(0.3451),doubleToFloat(0.6237),doubleToFloat(0.3398)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=9, element #43, 480 total numbers */
	this.IndexedFaceSet_9_43_coordIndex = new MFInt32(Java.to([0,1,2,-1,0,2,3,-1,0,3,4,-1,0,4,5,-1,0,5,6,-1,0,6,7,-1,0,7,8,-1,0,8,9,-1,0,9,10,-1,0,10,11,-1,0,11,12,-1,0,12,1,-1,14,2,1,-1,1,13,14,-1,15,3,2,-1,2,14,15,-1,16,4,3,-1,3,15,16,-1,17,5,4,-1,4,16,17,-1,18,6,5,-1,5,17,18,-1,19,7,6,-1,6,18,19,-1,20,8,7,-1,7,19,20,-1,21,9,8,-1,8,20,21,-1,22,10,9,-1,9,21,22,-1,23,11,10,-1,10,22,23,-1,24,12,11,-1,11,23,24,-1,13,1,12,-1,12,24,13,-1,26,14,13,-1,13,25,26,-1,27,15,14,-1,14,26,27,-1,28,16,15,-1,15,27,28,-1,29,17,16,-1,16,28,29,-1,30,18,17,-1,17,29,30,-1,31,19,18,-1,18,30,31,-1,32,20,19,-1,19,31,32,-1,33,21,20,-1,20,32,33,-1,34,22,21,-1,21,33,34,-1,35,23,22,-1,22,34,35,-1,36,24,23,-1,23,35,36,-1,25,13,24,-1,24,36,25,-1,38,26,25,-1,25,37,38,-1,39,27,26,-1,26,38,39,-1,40,28,27,-1,27,39,40,-1,41,29,28,-1,28,40,41,-1,42,30,29,-1,29,41,42,-1,43,31,30,-1,30,42,43,-1,44,32,31,-1,31,43,44,-1,45,33,32,-1,32,44,45,-1,46,34,33,-1,33,45,46,-1,47,35,34,-1,34,46,47,-1,48,36,35,-1,35,47,48,-1,37,25,36,-1,36,48,37,-1,50,38,37,-1,37,49,50,-1,51,39,38,-1,38,50,51,-1,52,40,39,-1,39,51,52,-1,53,41,40,-1,40,52,53,-1,54,42,41,-1,41,53,54,-1,55,43,42,-1,42,54,55,-1,56,44,43,-1,43,55,56,-1,57,45,44,-1,44,56,57,-1,58,46,45,-1,45,57,58,-1,59,47,46,-1,46,58,59,-1,60,48,47,-1,47,59,60,-1,49,37,48,-1,48,60,49,-1,61,50,49,-1,61,51,50,-1,61,52,51,-1,61,53,52,-1,61,54,53,-1,61,55,54,-1,61,56,55,-1,61,57,56,-1,61,58,57,-1,61,59,58,-1,61,60,59,-1,61,49,60,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=9, element #43, 480 total numbers */
	this.IndexedFaceSet_9_43_texCoordIndex = new MFInt32(Java.to([0,1,2,-1,0,2,3,-1,0,3,4,-1,0,4,5,-1,0,5,6,-1,0,6,7,-1,0,7,8,-1,0,8,9,-1,0,9,10,-1,0,10,11,-1,0,11,12,-1,0,12,1,-1,14,2,1,-1,1,13,14,-1,15,3,2,-1,2,14,15,-1,16,4,3,-1,3,15,16,-1,17,5,4,-1,4,16,17,-1,18,6,5,-1,5,17,18,-1,19,7,6,-1,6,18,19,-1,20,8,7,-1,7,19,20,-1,21,9,8,-1,8,20,21,-1,22,10,9,-1,9,21,22,-1,23,11,10,-1,10,22,23,-1,24,12,11,-1,11,23,24,-1,13,1,12,-1,12,24,13,-1,26,14,13,-1,13,25,26,-1,27,15,14,-1,14,26,27,-1,28,16,15,-1,15,27,28,-1,29,17,16,-1,16,28,29,-1,30,18,17,-1,17,29,30,-1,31,19,18,-1,18,30,31,-1,32,20,19,-1,19,31,32,-1,33,21,20,-1,20,32,33,-1,34,22,21,-1,21,33,34,-1,35,23,22,-1,22,34,35,-1,36,24,23,-1,23,35,36,-1,25,13,24,-1,24,36,25,-1,38,26,25,-1,25,37,38,-1,39,27,26,-1,26,38,39,-1,40,28,27,-1,27,39,40,-1,41,29,28,-1,28,40,41,-1,42,30,29,-1,29,41,42,-1,43,31,30,-1,30,42,43,-1,44,32,31,-1,31,43,44,-1,45,33,32,-1,32,44,45,-1,46,34,33,-1,33,45,46,-1,47,35,34,-1,34,46,47,-1,48,36,35,-1,35,47,48,-1,37,25,36,-1,36,48,37,-1,50,38,37,-1,37,49,50,-1,51,39,38,-1,38,50,51,-1,52,40,39,-1,39,51,52,-1,53,41,40,-1,40,52,53,-1,54,42,41,-1,41,53,54,-1,55,43,42,-1,42,54,55,-1,56,44,43,-1,43,55,56,-1,57,45,44,-1,44,56,57,-1,58,46,45,-1,45,57,58,-1,59,47,46,-1,46,58,59,-1,60,48,47,-1,47,59,60,-1,49,37,48,-1,48,60,49,-1,61,50,49,-1,61,51,50,-1,61,52,51,-1,61,53,52,-1,61,54,53,-1,61,55,54,-1,61,56,55,-1,61,57,56,-1,61,58,57,-1,61,59,58,-1,61,60,59,-1,61,49,60,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=10, element #43, 186 total numbers made up of 62 3-tuple values */
	this.Coordinate_10_43_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(0.0),doubleToFloat(1.0530),doubleToFloat(0.0273),doubleToFloat(0.0),doubleToFloat(0.9123),doubleToFloat(-0.5414),doubleToFloat(-0.4375),doubleToFloat(0.9123),doubleToFloat(-0.4652),doubleToFloat(-0.7578),doubleToFloat(0.9123),doubleToFloat(-0.3733),doubleToFloat(-0.8750),doubleToFloat(0.9123),doubleToFloat(0.0273),doubleToFloat(-0.7578),doubleToFloat(0.9123),doubleToFloat(0.4279),doubleToFloat(-0.4375),doubleToFloat(0.9123),doubleToFloat(0.5198),doubleToFloat(0.0),doubleToFloat(0.9123),doubleToFloat(0.5960),doubleToFloat(0.4375),doubleToFloat(0.9123),doubleToFloat(0.5198),doubleToFloat(0.7578),doubleToFloat(0.9123),doubleToFloat(0.4279)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.8750),doubleToFloat(0.9123),doubleToFloat(0.0273),doubleToFloat(0.7578),doubleToFloat(0.9123),doubleToFloat(-0.3733),doubleToFloat(0.4375),doubleToFloat(0.9123),doubleToFloat(-0.4652),doubleToFloat(0.0),doubleToFloat(0.5267),doubleToFloat(-0.8842),doubleToFloat(-0.5658),doubleToFloat(0.5267),doubleToFloat(-0.7621),doubleToFloat(-0.9800),doubleToFloat(0.5267),doubleToFloat(-0.4285),doubleToFloat(-1.1320),doubleToFloat(0.5267),doubleToFloat(0.0273),doubleToFloat(-0.9800),doubleToFloat(0.5267),doubleToFloat(0.4830),doubleToFloat(-0.5658),doubleToFloat(0.5267),doubleToFloat(0.6985),doubleToFloat(0.0),doubleToFloat(0.5267),doubleToFloat(0.8206)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.5658),doubleToFloat(0.5267),doubleToFloat(0.6985),doubleToFloat(0.9800),doubleToFloat(0.5267),doubleToFloat(0.4830),doubleToFloat(1.1320),doubleToFloat(0.5267),doubleToFloat(0.0273),doubleToFloat(0.9800),doubleToFloat(0.5267),doubleToFloat(-0.4285),doubleToFloat(0.5658),doubleToFloat(0.5267),doubleToFloat(-0.7621),doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(-0.9616),doubleToFloat(-0.6534),doubleToFloat(0.0),doubleToFloat(-0.8206),doubleToFloat(-1.1320),doubleToFloat(0.0),doubleToFloat(-0.4353),doubleToFloat(-1.3070),doubleToFloat(0.0),doubleToFloat(0.0273),doubleToFloat(-1.1320),doubleToFloat(0.0),doubleToFloat(0.5536)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.6534),doubleToFloat(0.0),doubleToFloat(0.8206),doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.9616),doubleToFloat(0.6534),doubleToFloat(0.0),doubleToFloat(0.8206),doubleToFloat(1.1320),doubleToFloat(0.0),doubleToFloat(0.5536),doubleToFloat(1.3070),doubleToFloat(0.0),doubleToFloat(0.0273),doubleToFloat(1.1320),doubleToFloat(0.0),doubleToFloat(-0.4353),doubleToFloat(0.6534),doubleToFloat(0.0),doubleToFloat(-0.8206),doubleToFloat(0.0),doubleToFloat(-0.5267),doubleToFloat(-0.8206),doubleToFloat(-0.5658),doubleToFloat(-0.5267),doubleToFloat(-0.6985),doubleToFloat(-0.9800),doubleToFloat(-0.5267),doubleToFloat(-0.3648)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.1320),doubleToFloat(-0.5267),doubleToFloat(0.0273),doubleToFloat(-0.9800),doubleToFloat(-0.5267),doubleToFloat(0.4830),doubleToFloat(-0.5658),doubleToFloat(-0.5267),doubleToFloat(0.6985),doubleToFloat(0.0),doubleToFloat(-0.5267),doubleToFloat(0.8206),doubleToFloat(0.5658),doubleToFloat(-0.5267),doubleToFloat(0.6985),doubleToFloat(0.9800),doubleToFloat(-0.5267),doubleToFloat(0.4830),doubleToFloat(1.1320),doubleToFloat(-0.5267),doubleToFloat(0.0273),doubleToFloat(0.9800),doubleToFloat(-0.5267),doubleToFloat(-0.3648),doubleToFloat(0.5658),doubleToFloat(-0.5267),doubleToFloat(-0.6985),doubleToFloat(0.0),doubleToFloat(-0.9123),doubleToFloat(-0.4353)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.3267),doubleToFloat(-0.9123),doubleToFloat(-0.3648),doubleToFloat(-0.5658),doubleToFloat(-0.9123),doubleToFloat(-0.2358),doubleToFloat(-0.6534),doubleToFloat(-0.9123),doubleToFloat(0.0273),doubleToFloat(-0.5658),doubleToFloat(-0.9123),doubleToFloat(0.2904),doubleToFloat(-0.3267),doubleToFloat(-0.9123),doubleToFloat(0.4830),doubleToFloat(0.0),doubleToFloat(-0.9123),doubleToFloat(0.5536),doubleToFloat(0.3267),doubleToFloat(-0.9123),doubleToFloat(0.4830),doubleToFloat(0.5658),doubleToFloat(-0.9123),doubleToFloat(0.2904),doubleToFloat(0.6534),doubleToFloat(-0.9123),doubleToFloat(0.0273),doubleToFloat(0.5658),doubleToFloat(-0.9123),doubleToFloat(-0.2358)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.3267),doubleToFloat(-0.9123),doubleToFloat(-0.3648),doubleToFloat(0.0),doubleToFloat(-1.0530),doubleToFloat(0.0273)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=10, element #44, 124 total numbers made up of 62 2-tuple values */
	this.TextureCoordinate_10_44_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.6211),doubleToFloat(0.5754),doubleToFloat(0.7851),doubleToFloat(0.5720),doubleToFloat(0.7614),doubleToFloat(0.5720),doubleToFloat(0.6907),doubleToFloat(0.5698),doubleToFloat(0.6200),doubleToFloat(0.5698),doubleToFloat(0.6158),doubleToFloat(0.5702),doubleToFloat(0.5451),doubleToFloat(0.5702),doubleToFloat(0.4167),doubleToFloat(0.5698),doubleToFloat(0.5451),doubleToFloat(0.5702),doubleToFloat(0.6158),doubleToFloat(0.5702)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.6200),doubleToFloat(0.5698),doubleToFloat(0.6907),doubleToFloat(0.5698),doubleToFloat(0.7614),doubleToFloat(0.5720),doubleToFloat(0.8036),doubleToFloat(0.5346),doubleToFloat(0.7761),doubleToFloat(0.5346),doubleToFloat(0.6989),doubleToFloat(0.4838),doubleToFloat(0.6219),doubleToFloat(0.4428),doubleToFloat(0.6154),doubleToFloat(0.4438),doubleToFloat(0.5492),doubleToFloat(0.4639),doubleToFloat(0.4166),doubleToFloat(0.5346)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5492),doubleToFloat(0.4639),doubleToFloat(0.6154),doubleToFloat(0.4438),doubleToFloat(0.6219),doubleToFloat(0.4428),doubleToFloat(0.6989),doubleToFloat(0.4838),doubleToFloat(0.7761),doubleToFloat(0.5346),doubleToFloat(0.7912),doubleToFloat(0.4044),doubleToFloat(0.7635),doubleToFloat(0.4044),doubleToFloat(0.7042),doubleToFloat(0.3925),doubleToFloat(0.6194),doubleToFloat(0.3907),doubleToFloat(0.6148),doubleToFloat(0.3907)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5450),doubleToFloat(0.3974),doubleToFloat(0.4163),doubleToFloat(0.4938),doubleToFloat(0.5450),doubleToFloat(0.3974),doubleToFloat(0.6148),doubleToFloat(0.3907),doubleToFloat(0.6194),doubleToFloat(0.3907),doubleToFloat(0.7042),doubleToFloat(0.3925),doubleToFloat(0.7635),doubleToFloat(0.4044),doubleToFloat(0.7950),doubleToFloat(0.3772),doubleToFloat(0.7662),doubleToFloat(0.3772),doubleToFloat(0.6945),doubleToFloat(0.3645)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.6236),doubleToFloat(0.3695),doubleToFloat(0.6160),doubleToFloat(0.3695),doubleToFloat(0.5438),doubleToFloat(0.3780),doubleToFloat(0.4160),doubleToFloat(0.4530),doubleToFloat(0.5438),doubleToFloat(0.3780),doubleToFloat(0.6160),doubleToFloat(0.3695),doubleToFloat(0.6236),doubleToFloat(0.3695),doubleToFloat(0.6945),doubleToFloat(0.3645),doubleToFloat(0.7662),doubleToFloat(0.3772),doubleToFloat(0.7887),doubleToFloat(0.3451)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7635),doubleToFloat(0.3451),doubleToFloat(0.6980),doubleToFloat(0.3508),doubleToFloat(0.6262),doubleToFloat(0.3508),doubleToFloat(0.6297),doubleToFloat(0.3503),doubleToFloat(0.5389),doubleToFloat(0.3503),doubleToFloat(0.4181),doubleToFloat(0.3884),doubleToFloat(0.5389),doubleToFloat(0.3503),doubleToFloat(0.6297),doubleToFloat(0.3503),doubleToFloat(0.6262),doubleToFloat(0.3508),doubleToFloat(0.6980),doubleToFloat(0.3508)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7635),doubleToFloat(0.3451),doubleToFloat(0.6237),doubleToFloat(0.3398)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=10, element #52, 488 total numbers */
	this.IndexedFaceSet_10_52_coordIndex = new MFInt32(Java.to([47,46,45,-1,45,44,43,-1,45,43,42,-1,47,45,42,-1,48,47,42,-1,0,1,8,-1,8,7,0,-1,1,2,9,-1,9,8,1,-1,2,3,10,-1,10,9,2,-1,3,4,11,-1,11,10,3,-1,4,5,12,-1,12,11,4,-1,5,6,13,-1,13,12,5,-1,6,0,7,-1,7,13,6,-1,7,8,15,-1,15,14,7,-1,8,9,16,-1,16,15,8,-1,9,10,17,-1,17,16,9,-1,10,11,18,-1,18,17,10,-1,11,12,19,-1,19,18,11,-1,12,13,20,-1,20,19,12,-1,13,7,14,-1,14,20,13,-1,14,15,22,-1,22,21,14,-1,15,16,23,-1,23,22,15,-1,16,17,24,-1,24,23,16,-1,17,18,25,-1,25,24,17,-1,18,19,26,-1,26,25,18,-1,19,20,27,-1,27,26,19,-1,20,14,21,-1,21,27,20,-1,56,57,58,-1,58,59,60,-1,58,60,61,-1,56,58,61,-1,62,56,61,-1,29,28,21,-1,21,22,29,-1,30,29,22,-1,22,23,30,-1,31,30,23,-1,23,24,31,-1,32,31,24,-1,24,25,32,-1,33,32,25,-1,25,26,33,-1,34,33,26,-1,26,27,34,-1,28,34,27,-1,27,21,28,-1,36,35,28,-1,28,29,36,-1,37,36,29,-1,29,30,37,-1,38,37,30,-1,30,31,38,-1,39,38,31,-1,31,32,39,-1,40,39,32,-1,32,33,40,-1,41,40,33,-1,33,34,41,-1,35,41,34,-1,34,28,35,-1,42,43,1,-1,1,0,42,-1,43,44,2,-1,2,1,43,-1,44,45,3,-1,3,2,44,-1,45,46,4,-1,4,3,45,-1,46,47,5,-1,5,4,46,-1,47,48,6,-1,6,5,47,-1,48,42,0,-1,0,6,48,-1,50,49,35,-1,35,36,50,-1,51,50,36,-1,36,37,51,-1,52,51,37,-1,37,38,52,-1,53,52,38,-1,38,39,53,-1,54,53,39,-1,39,40,54,-1,55,54,40,-1,40,41,55,-1,49,55,41,-1,41,35,49,-1,57,56,49,-1,49,50,57,-1,58,57,50,-1,50,51,58,-1,59,58,51,-1,51,52,59,-1,60,59,52,-1,52,53,60,-1,61,60,53,-1,53,54,61,-1,62,61,54,-1,54,55,62,-1,56,62,55,-1,55,49,56,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=10, element #52, 488 total numbers */
	this.IndexedFaceSet_10_52_texCoordIndex = new MFInt32(Java.to([5,4,3,-1,3,2,0,-1,3,0,1,-1,5,3,1,-1,6,5,1,-1,7,10,8,-1,8,9,7,-1,10,12,11,-1,11,8,10,-1,12,14,13,-1,13,11,12,-1,14,16,15,-1,15,13,14,-1,16,18,17,-1,17,15,16,-1,18,20,19,-1,19,17,18,-1,20,7,9,-1,9,19,20,-1,9,8,21,-1,21,22,9,-1,8,11,23,-1,23,21,8,-1,11,13,24,-1,24,23,11,-1,13,15,25,-1,25,24,13,-1,15,17,26,-1,26,25,15,-1,17,19,27,-1,27,26,17,-1,19,9,22,-1,22,27,19,-1,22,21,28,-1,28,29,22,-1,21,23,30,-1,30,28,21,-1,23,24,31,-1,31,30,23,-1,24,25,32,-1,32,31,24,-1,25,26,33,-1,33,32,25,-1,26,27,34,-1,34,33,26,-1,27,22,29,-1,29,34,27,-1,42,43,44,-1,44,45,46,-1,44,46,47,-1,42,44,47,-1,48,42,47,-1,35,36,29,-1,29,28,35,-1,37,35,28,-1,28,30,37,-1,38,37,30,-1,30,31,38,-1,39,38,31,-1,31,32,39,-1,40,39,32,-1,32,33,40,-1,41,40,33,-1,33,34,41,-1,36,41,34,-1,34,29,36,-1,51,52,49,-1,49,50,51,-1,54,51,50,-1,50,53,54,-1,56,54,53,-1,53,55,56,-1,58,56,55,-1,55,57,58,-1,60,58,57,-1,57,59,60,-1,62,60,59,-1,59,61,62,-1,52,62,61,-1,61,49,52,-1,1,0,10,-1,10,7,1,-1,0,2,12,-1,12,10,0,-1,2,3,14,-1,14,12,2,-1,3,4,16,-1,16,14,3,-1,4,5,18,-1,18,16,4,-1,5,6,20,-1,20,18,5,-1,6,1,7,-1,7,20,6,-1,63,64,52,-1,52,51,63,-1,65,63,51,-1,51,54,65,-1,66,65,54,-1,54,56,66,-1,67,66,56,-1,56,58,67,-1,68,67,58,-1,58,60,68,-1,69,68,60,-1,60,62,69,-1,64,69,62,-1,62,52,64,-1,43,42,64,-1,64,63,43,-1,44,43,63,-1,63,65,44,-1,45,44,65,-1,65,66,45,-1,46,45,66,-1,66,67,46,-1,47,46,67,-1,67,68,47,-1,48,47,68,-1,68,69,48,-1,42,48,69,-1,69,64,42,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=11, element #52, 189 total numbers made up of 63 3-tuple values */
	this.Coordinate_11_52_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(2.9600),doubleToFloat(3.7380),doubleToFloat(0.0),doubleToFloat(1.6430),doubleToFloat(3.7380),doubleToFloat(3.2090),doubleToFloat(-1.3160),doubleToFloat(3.7380),doubleToFloat(4.0020),doubleToFloat(-3.3670),doubleToFloat(3.7380),doubleToFloat(1.7810),doubleToFloat(-3.3670),doubleToFloat(3.7380),doubleToFloat(-1.7810),doubleToFloat(-1.3160),doubleToFloat(3.7380),doubleToFloat(-4.0020),doubleToFloat(1.6430),doubleToFloat(3.7380),doubleToFloat(-3.2090),doubleToFloat(2.9600),doubleToFloat(-0.0114),doubleToFloat(0.0),doubleToFloat(1.6430),doubleToFloat(-0.0114),doubleToFloat(3.2090),doubleToFloat(-1.3160),doubleToFloat(-0.0114),doubleToFloat(4.0020)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-3.3670),doubleToFloat(-0.0114),doubleToFloat(1.7810),doubleToFloat(-3.3670),doubleToFloat(-0.0114),doubleToFloat(-1.7810),doubleToFloat(-1.3160),doubleToFloat(-0.0114),doubleToFloat(-4.0020),doubleToFloat(1.6430),doubleToFloat(-0.0114),doubleToFloat(-3.2090),doubleToFloat(2.9600),doubleToFloat(-6.5070),doubleToFloat(0.0),doubleToFloat(1.6430),doubleToFloat(-6.5070),doubleToFloat(3.2090),doubleToFloat(-1.3160),doubleToFloat(-6.5070),doubleToFloat(4.0020),doubleToFloat(-3.3670),doubleToFloat(-6.5070),doubleToFloat(1.7810),doubleToFloat(-3.3670),doubleToFloat(-6.5070),doubleToFloat(-1.7810),doubleToFloat(-1.3160),doubleToFloat(-6.5070),doubleToFloat(-4.0020)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(1.6430),doubleToFloat(-6.5070),doubleToFloat(-3.2090),doubleToFloat(3.3670),doubleToFloat(-13.1300),doubleToFloat(0.0),doubleToFloat(1.8970),doubleToFloat(-13.1300),doubleToFloat(3.5820),doubleToFloat(-1.4070),doubleToFloat(-13.1300),doubleToFloat(4.4670),doubleToFloat(-3.3550),doubleToFloat(-13.1300),doubleToFloat(1.9880),doubleToFloat(-3.3550),doubleToFloat(-13.1300),doubleToFloat(-1.9880),doubleToFloat(-1.4070),doubleToFloat(-13.1300),doubleToFloat(-4.4670),doubleToFloat(1.8970),doubleToFloat(-13.1300),doubleToFloat(-3.5820),doubleToFloat(2.1460),doubleToFloat(-4.9850),doubleToFloat(0.0),doubleToFloat(1.1360),doubleToFloat(-4.9850),doubleToFloat(2.4620)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.1350),doubleToFloat(-4.9850),doubleToFloat(3.0700),doubleToFloat(-2.6330),doubleToFloat(-4.9850),doubleToFloat(1.3660),doubleToFloat(-2.6330),doubleToFloat(-4.9850),doubleToFloat(-1.3660),doubleToFloat(-1.1350),doubleToFloat(-4.9850),doubleToFloat(-3.0700),doubleToFloat(1.1360),doubleToFloat(-4.9850),doubleToFloat(-2.4620),doubleToFloat(2.1560),doubleToFloat(-11.4500),doubleToFloat(0.0),doubleToFloat(1.2250),doubleToFloat(-11.4500),doubleToFloat(1.9560),doubleToFloat(-0.8662),doubleToFloat(-11.4500),doubleToFloat(2.4390),doubleToFloat(-2.5430),doubleToFloat(-11.4500),doubleToFloat(1.0850),doubleToFloat(-2.5430),doubleToFloat(-11.4500),doubleToFloat(-1.0850)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.8662),doubleToFloat(-11.4500),doubleToFloat(-2.4390),doubleToFloat(1.2250),doubleToFloat(-11.4500),doubleToFloat(-1.9560),doubleToFloat(2.0510),doubleToFloat(5.7290),doubleToFloat(0.0),doubleToFloat(1.0760),doubleToFloat(5.7290),doubleToFloat(2.3750),doubleToFloat(-1.1140),doubleToFloat(5.7290),doubleToFloat(2.9610),doubleToFloat(-2.8700),doubleToFloat(5.7290),doubleToFloat(1.3180),doubleToFloat(-2.8700),doubleToFloat(5.7290),doubleToFloat(-1.3180),doubleToFloat(-1.1140),doubleToFloat(5.7290),doubleToFloat(-2.9610),doubleToFloat(1.0760),doubleToFloat(5.7290),doubleToFloat(-2.3750),doubleToFloat(1.8420),doubleToFloat(-15.1200),doubleToFloat(0.0)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(1.0300),doubleToFloat(-15.1200),doubleToFloat(1.8730),doubleToFloat(-0.7965),doubleToFloat(-15.1200),doubleToFloat(2.2950),doubleToFloat(-2.2610),doubleToFloat(-15.1200),doubleToFloat(1.1130),doubleToFloat(-2.2610),doubleToFloat(-15.1200),doubleToFloat(-0.9478),doubleToFloat(-0.7965),doubleToFloat(-15.1200),doubleToFloat(-2.1300),doubleToFloat(1.0300),doubleToFloat(-15.1200),doubleToFloat(-1.7080),doubleToFloat(0.6277),doubleToFloat(-16.1),doubleToFloat(0.0),doubleToFloat(0.2723),doubleToFloat(-16.1),doubleToFloat(0.9120),doubleToFloat(-0.5262),doubleToFloat(-16.1),doubleToFloat(1.0960),doubleToFloat(-1.1670),doubleToFloat(-16.1),doubleToFloat(0.5796)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.1670),doubleToFloat(-16.1),doubleToFloat(-0.4145),doubleToFloat(-0.5262),doubleToFloat(-16.1),doubleToFloat(-0.9313),doubleToFloat(0.2723),doubleToFloat(-16.1),doubleToFloat(-0.7469)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=11, element #53, 140 total numbers made up of 70 2-tuple values */
	this.TextureCoordinate_11_53_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.7190),doubleToFloat(0.5576),doubleToFloat(0.6284),doubleToFloat(0.5576),doubleToFloat(0.7414),doubleToFloat(0.5576),doubleToFloat(0.6787),doubleToFloat(0.5576),doubleToFloat(0.5781),doubleToFloat(0.5576),doubleToFloat(0.5154),doubleToFloat(0.5576),doubleToFloat(0.5378),doubleToFloat(0.5576),doubleToFloat(0.6284),doubleToFloat(0.5029),doubleToFloat(0.7509),doubleToFloat(0.3997),doubleToFloat(0.6284),doubleToFloat(0.3997)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7509),doubleToFloat(0.5029),doubleToFloat(0.7811),doubleToFloat(0.3997),doubleToFloat(0.7811),doubleToFloat(0.5029),doubleToFloat(0.6964),doubleToFloat(0.3997),doubleToFloat(0.6964),doubleToFloat(0.5029),doubleToFloat(0.5604),doubleToFloat(0.3997),doubleToFloat(0.5604),doubleToFloat(0.5029),doubleToFloat(0.4756),doubleToFloat(0.3997),doubleToFloat(0.4756),doubleToFloat(0.5029),doubleToFloat(0.5059),doubleToFloat(0.3997)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5059),doubleToFloat(0.5029),doubleToFloat(0.7509),doubleToFloat(0.3197),doubleToFloat(0.6284),doubleToFloat(0.3197),doubleToFloat(0.7811),doubleToFloat(0.3197),doubleToFloat(0.6964),doubleToFloat(0.3197),doubleToFloat(0.5604),doubleToFloat(0.3197),doubleToFloat(0.4756),doubleToFloat(0.3197),doubleToFloat(0.5059),doubleToFloat(0.3197),doubleToFloat(0.7651),doubleToFloat(0.2166),doubleToFloat(0.6284),doubleToFloat(0.2166)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7989),doubleToFloat(0.2166),doubleToFloat(0.7043),doubleToFloat(0.2166),doubleToFloat(0.5525),doubleToFloat(0.2166),doubleToFloat(0.4579),doubleToFloat(0.2166),doubleToFloat(0.4917),doubleToFloat(0.2166),doubleToFloat(0.7224),doubleToFloat(0.2630),doubleToFloat(0.6284),doubleToFloat(0.2630),doubleToFloat(0.7456),doubleToFloat(0.2630),doubleToFloat(0.6805),doubleToFloat(0.2630),doubleToFloat(0.5762),doubleToFloat(0.2630)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5112),doubleToFloat(0.2630),doubleToFloat(0.5344),doubleToFloat(0.2630),doubleToFloat(0.8705),doubleToFloat(0.5452),doubleToFloat(0.8705),doubleToFloat(0.5383),doubleToFloat(0.8705),doubleToFloat(0.5369),doubleToFloat(0.8705),doubleToFloat(0.5408),doubleToFloat(0.8705),doubleToFloat(0.5483),doubleToFloat(0.8705),doubleToFloat(0.5522),doubleToFloat(0.8705),doubleToFloat(0.5509),doubleToFloat(0.9170),doubleToFloat(0.5452)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.9170),doubleToFloat(0.5266),doubleToFloat(0.8900),doubleToFloat(0.5304),doubleToFloat(0.8900),doubleToFloat(0.5452),doubleToFloat(0.9170),doubleToFloat(0.5220),doubleToFloat(0.8900),doubleToFloat(0.5268),doubleToFloat(0.9170),doubleToFloat(0.5349),doubleToFloat(0.8900),doubleToFloat(0.5370),doubleToFloat(0.9170),doubleToFloat(0.5555),doubleToFloat(0.8900),doubleToFloat(0.5534),doubleToFloat(0.9170),doubleToFloat(0.5684)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.8900),doubleToFloat(0.5636),doubleToFloat(0.9170),doubleToFloat(0.5638),doubleToFloat(0.8900),doubleToFloat(0.5600),doubleToFloat(0.8746),doubleToFloat(0.5310),doubleToFloat(0.8746),doubleToFloat(0.5452),doubleToFloat(0.8746),doubleToFloat(0.5279),doubleToFloat(0.8746),doubleToFloat(0.5368),doubleToFloat(0.8746),doubleToFloat(0.5524),doubleToFloat(0.8746),doubleToFloat(0.5613),doubleToFloat(0.8746),doubleToFloat(0.5581)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=11, element #61, 300 total numbers */
	this.IndexedFaceSet_11_61_coordIndex = new MFInt32(Java.to([4,3,2,-1,5,4,2,-1,2,1,0,-1,5,2,0,-1,6,5,0,-1,9,8,7,-1,7,10,9,-1,12,11,8,-1,8,9,12,-1,14,13,11,-1,11,12,14,-1,16,15,13,-1,13,14,16,-1,18,17,15,-1,15,16,18,-1,20,19,17,-1,17,18,20,-1,10,7,19,-1,19,20,10,-1,21,9,10,-1,10,22,21,-1,23,12,9,-1,9,21,23,-1,24,14,12,-1,12,23,24,-1,25,16,14,-1,14,24,25,-1,26,18,16,-1,16,25,26,-1,27,20,18,-1,18,26,27,-1,22,10,20,-1,20,27,22,-1,1,21,22,-1,22,0,1,-1,2,23,21,-1,21,1,2,-1,3,24,23,-1,23,2,3,-1,4,25,24,-1,24,3,4,-1,5,26,25,-1,25,4,5,-1,6,27,26,-1,26,5,6,-1,0,22,27,-1,27,6,0,-1,8,29,28,-1,28,7,8,-1,11,30,29,-1,29,8,11,-1,13,31,30,-1,30,11,13,-1,15,32,31,-1,31,13,15,-1,17,33,32,-1,32,15,17,-1,19,34,33,-1,33,17,19,-1,7,28,34,-1,34,19,7,-1,29,36,35,-1,35,28,29,-1,30,37,36,-1,36,29,30,-1,31,38,37,-1,37,30,31,-1,32,39,38,-1,38,31,32,-1,33,40,39,-1,39,32,33,-1,34,41,40,-1,40,33,34,-1,28,35,41,-1,41,34,28,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=11, element #61, 300 total numbers */
	this.IndexedFaceSet_11_61_texCoordIndex = new MFInt32(Java.to([4,3,2,-1,5,4,2,-1,2,1,0,-1,5,2,0,-1,6,5,0,-1,9,8,7,-1,7,10,9,-1,12,11,8,-1,8,9,12,-1,14,13,11,-1,11,12,14,-1,16,15,13,-1,13,14,16,-1,18,17,15,-1,15,16,18,-1,20,19,17,-1,17,18,20,-1,10,7,19,-1,19,20,10,-1,21,9,10,-1,10,22,21,-1,23,12,9,-1,9,21,23,-1,24,14,12,-1,12,23,24,-1,25,16,14,-1,14,24,25,-1,26,18,16,-1,16,25,26,-1,27,20,18,-1,18,26,27,-1,22,10,20,-1,20,27,22,-1,1,21,22,-1,22,0,1,-1,2,23,21,-1,21,1,2,-1,3,24,23,-1,23,2,3,-1,4,25,24,-1,24,3,4,-1,5,26,25,-1,25,4,5,-1,6,27,26,-1,26,5,6,-1,0,22,27,-1,27,6,0,-1,8,29,28,-1,28,7,8,-1,11,30,29,-1,29,8,11,-1,13,31,30,-1,30,11,13,-1,15,32,31,-1,31,13,15,-1,17,33,32,-1,32,15,17,-1,19,34,33,-1,33,17,19,-1,7,28,34,-1,34,19,7,-1,29,36,35,-1,35,28,29,-1,30,37,36,-1,36,29,30,-1,31,38,37,-1,37,30,31,-1,32,39,38,-1,38,31,32,-1,33,40,39,-1,39,32,33,-1,34,41,40,-1,40,33,34,-1,28,35,41,-1,41,34,28,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=12, element #61, 126 total numbers made up of 42 3-tuple values */
	this.Coordinate_12_61_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(0.7186),doubleToFloat(0.9688),doubleToFloat(0.0234),doubleToFloat(0.3632),doubleToFloat(0.9688),doubleToFloat(0.9354),doubleToFloat(-0.4353),doubleToFloat(0.9688),doubleToFloat(1.1200),doubleToFloat(-1.0760),doubleToFloat(0.9688),doubleToFloat(0.6030),doubleToFloat(-1.0760),doubleToFloat(0.9688),doubleToFloat(-0.3911),doubleToFloat(-0.4353),doubleToFloat(0.9688),doubleToFloat(-0.9079),doubleToFloat(0.3632),doubleToFloat(0.9688),doubleToFloat(-0.7235),doubleToFloat(2.3370),doubleToFloat(-4.6130),doubleToFloat(0.0234),doubleToFloat(1.4600),doubleToFloat(-3.6220),doubleToFloat(2.0190),doubleToFloat(1.2360),doubleToFloat(-1.6280),doubleToFloat(2.4200)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(2.1180),doubleToFloat(-1.9120),doubleToFloat(0.0234),doubleToFloat(-0.8111),doubleToFloat(-3.6220),doubleToFloat(2.5670),doubleToFloat(-0.7468),doubleToFloat(-1.6280),doubleToFloat(2.9030),doubleToFloat(-2.2540),doubleToFloat(-4.6130),doubleToFloat(1.2550),doubleToFloat(-2.3370),doubleToFloat(-1.9120),doubleToFloat(0.9793),doubleToFloat(-2.2540),doubleToFloat(-5.3830),doubleToFloat(-1.3680),doubleToFloat(-2.3370),doubleToFloat(-1.9120),doubleToFloat(-0.9325),doubleToFloat(-0.8111),doubleToFloat(-5.3830),doubleToFloat(-2.9030),doubleToFloat(-0.7468),doubleToFloat(-1.9120),doubleToFloat(-2.3680),doubleToFloat(1.4600),doubleToFloat(-5.3830),doubleToFloat(-2.3550)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(1.2360),doubleToFloat(-1.9120),doubleToFloat(-1.8850),doubleToFloat(1.1210),doubleToFloat(-0.0032),doubleToFloat(1.8960),doubleToFloat(1.9330),doubleToFloat(-0.0032),doubleToFloat(0.0234),doubleToFloat(-0.7056),doubleToFloat(-0.0032),doubleToFloat(2.3180),doubleToFloat(-2.1700),doubleToFloat(-0.0032),doubleToFloat(1.1360),doubleToFloat(-2.1700),doubleToFloat(-0.0032),doubleToFloat(-0.9244),doubleToFloat(-0.7056),doubleToFloat(-0.0032),doubleToFloat(-2.0610),doubleToFloat(1.1210),doubleToFloat(-0.0032),doubleToFloat(-1.6400),doubleToFloat(1.6070),doubleToFloat(-12.9200),doubleToFloat(0.0032),doubleToFloat(0.9216),doubleToFloat(-12.9100),doubleToFloat(1.5650)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.6190),doubleToFloat(-12.9100),doubleToFloat(1.9510),doubleToFloat(-1.8540),doubleToFloat(-12.9200),doubleToFloat(0.8701),doubleToFloat(-1.8540),doubleToFloat(-12.9400),doubleToFloat(-0.9762),doubleToFloat(-0.6190),doubleToFloat(-12.9400),doubleToFloat(-1.7420),doubleToFloat(0.9216),doubleToFloat(-12.9400),doubleToFloat(-1.3560),doubleToFloat(0.7072),doubleToFloat(-14.5300),doubleToFloat(0.0239),doubleToFloat(0.3604),doubleToFloat(-14.5300),doubleToFloat(0.8140),doubleToFloat(-0.4188),doubleToFloat(-14.5300),doubleToFloat(1.0090),doubleToFloat(-1.0440),doubleToFloat(-14.5300),doubleToFloat(0.4624),doubleToFloat(-1.0440),doubleToFloat(-14.5400),doubleToFloat(-0.4714)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.4188),doubleToFloat(-14.5400),doubleToFloat(-0.8587),doubleToFloat(0.3604),doubleToFloat(-14.5400),doubleToFloat(-0.6635)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=12, element #62, 84 total numbers made up of 42 2-tuple values */
	this.TextureCoordinate_12_62_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.9309),doubleToFloat(0.5848),doubleToFloat(0.9190),doubleToFloat(0.5848),doubleToFloat(0.8921),doubleToFloat(0.5848),doubleToFloat(0.8706),doubleToFloat(0.5848),doubleToFloat(0.8706),doubleToFloat(0.5848),doubleToFloat(0.8921),doubleToFloat(0.5848),doubleToFloat(0.9190),doubleToFloat(0.5848),doubleToFloat(0.9845),doubleToFloat(0.5321),doubleToFloat(0.9550),doubleToFloat(0.5475),doubleToFloat(0.9491),doubleToFloat(0.5599)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.9788),doubleToFloat(0.5571),doubleToFloat(0.8787),doubleToFloat(0.5475),doubleToFloat(0.8825),doubleToFloat(0.5599),doubleToFloat(0.8302),doubleToFloat(0.5321),doubleToFloat(0.8291),doubleToFloat(0.5571),doubleToFloat(0.8302),doubleToFloat(0.5200),doubleToFloat(0.8291),doubleToFloat(0.5571),doubleToFloat(0.8787),doubleToFloat(0.5200),doubleToFloat(0.8825),doubleToFloat(0.5571),doubleToFloat(0.9550),doubleToFloat(0.5200)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.9491),doubleToFloat(0.5571),doubleToFloat(0.9444),doubleToFloat(0.5755),doubleToFloat(0.9717),doubleToFloat(0.5755),doubleToFloat(0.8831),doubleToFloat(0.5755),doubleToFloat(0.8339),doubleToFloat(0.5755),doubleToFloat(0.8339),doubleToFloat(0.5755),doubleToFloat(0.8831),doubleToFloat(0.5755),doubleToFloat(0.9444),doubleToFloat(0.5755),doubleToFloat(0.9679),doubleToFloat(0.2444),doubleToFloat(0.9449),doubleToFloat(0.2445)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.8931),doubleToFloat(0.2445),doubleToFloat(0.8516),doubleToFloat(0.2444),doubleToFloat(0.8516),doubleToFloat(0.2442),doubleToFloat(0.8931),doubleToFloat(0.2442),doubleToFloat(0.9449),doubleToFloat(0.2442),doubleToFloat(0.9372),doubleToFloat(0.2243),doubleToFloat(0.9255),doubleToFloat(0.2244),doubleToFloat(0.8993),doubleToFloat(0.2244),doubleToFloat(0.8783),doubleToFloat(0.2243),doubleToFloat(0.8783),doubleToFloat(0.2243)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.8993),doubleToFloat(0.2243),doubleToFloat(0.9255),doubleToFloat(0.2243)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=12, element #70, 408 total numbers */
	this.IndexedFaceSet_12_70_coordIndex = new MFInt32(Java.to([1,11,14,-1,3,4,5,-1,5,6,3,-1,1,0,4,-1,4,3,1,-1,0,2,5,-1,5,4,0,-1,11,1,3,-1,3,6,11,-1,15,2,0,-1,0,12,15,-1,0,1,13,-1,13,12,0,-1,13,1,14,-1,7,18,11,-1,8,6,5,-1,5,9,8,-1,7,8,9,-1,9,10,7,-1,10,9,5,-1,5,2,10,-1,11,6,8,-1,8,7,11,-1,15,16,10,-1,10,2,15,-1,10,16,17,-1,17,7,10,-1,17,18,7,-1,21,22,23,-1,23,24,25,-1,25,26,19,-1,23,25,19,-1,21,23,19,-1,20,21,19,-1,15,12,20,-1,20,19,15,-1,12,13,21,-1,21,20,12,-1,13,14,22,-1,22,21,13,-1,14,11,23,-1,23,22,14,-1,11,18,24,-1,24,23,11,-1,18,17,25,-1,25,24,18,-1,17,16,26,-1,26,25,17,-1,16,15,19,-1,19,26,16,-1,33,31,30,-1,30,27,33,-1,36,27,30,-1,30,38,36,-1,29,33,27,-1,27,28,29,-1,37,28,27,-1,27,36,37,-1,28,37,42,-1,42,29,28,-1,33,32,34,-1,34,31,33,-1,39,40,34,-1,34,32,39,-1,29,35,32,-1,32,33,29,-1,41,39,32,-1,32,35,41,-1,35,29,42,-1,42,41,35,-1,44,45,46,-1,44,46,47,-1,44,47,43,-1,51,52,53,-1,54,48,49,-1,53,54,49,-1,51,53,49,-1,51,49,50,-1,30,31,44,-1,44,43,30,-1,31,34,45,-1,45,44,31,-1,34,40,46,-1,46,45,34,-1,40,38,47,-1,47,46,40,-1,38,30,43,-1,43,47,38,-1,37,36,49,-1,49,48,37,-1,36,38,50,-1,50,49,36,-1,38,40,51,-1,51,50,38,-1,40,39,52,-1,52,51,40,-1,39,41,53,-1,53,52,39,-1,41,42,54,-1,54,53,41,-1,42,37,48,-1,48,54,42,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=12, element #70, 408 total numbers */
	this.IndexedFaceSet_12_70_texCoordIndex = new MFInt32(Java.to([1,14,18,-1,3,4,5,-1,5,6,3,-1,1,0,4,-1,4,3,1,-1,0,2,5,-1,5,4,0,-1,14,1,3,-1,3,6,14,-1,19,2,0,-1,0,16,19,-1,0,1,17,-1,17,16,0,-1,17,1,18,-1,7,23,15,-1,9,8,11,-1,11,10,9,-1,7,9,10,-1,10,12,7,-1,12,10,11,-1,11,13,12,-1,15,8,9,-1,9,7,15,-1,20,21,12,-1,12,13,20,-1,12,21,22,-1,22,7,12,-1,22,23,7,-1,26,27,28,-1,28,29,30,-1,30,31,24,-1,28,30,24,-1,26,28,24,-1,25,26,24,-1,19,16,25,-1,25,24,19,-1,16,17,26,-1,26,25,16,-1,17,18,27,-1,27,26,17,-1,18,14,28,-1,28,27,18,-1,15,23,29,-1,29,28,15,-1,23,22,30,-1,30,29,23,-1,22,21,31,-1,31,30,22,-1,21,20,24,-1,24,31,21,-1,34,38,37,-1,37,32,34,-1,46,32,37,-1,37,48,46,-1,35,34,32,-1,32,33,35,-1,47,33,32,-1,32,46,47,-1,33,47,53,-1,53,36,33,-1,40,39,42,-1,42,41,40,-1,49,50,42,-1,42,39,49,-1,44,43,39,-1,39,40,44,-1,51,49,39,-1,39,43,51,-1,43,45,52,-1,52,51,43,-1,55,56,57,-1,55,57,58,-1,55,58,54,-1,62,63,64,-1,65,59,60,-1,64,65,60,-1,62,64,60,-1,62,60,61,-1,37,38,55,-1,55,54,37,-1,41,42,56,-1,56,55,41,-1,42,50,57,-1,57,56,42,-1,50,48,58,-1,58,57,50,-1,48,37,54,-1,54,58,48,-1,47,46,60,-1,60,59,47,-1,46,48,61,-1,61,60,46,-1,48,50,62,-1,62,61,48,-1,50,49,63,-1,63,62,50,-1,49,51,64,-1,64,63,49,-1,51,52,65,-1,65,64,51,-1,53,47,59,-1,59,65,53,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=13, element #70, 165 total numbers made up of 55 3-tuple values */
	this.Coordinate_13_70_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(0.9768),doubleToFloat(-0.0192),doubleToFloat(-1.6810),doubleToFloat(1.6570),doubleToFloat(-0.0192),doubleToFloat(0.4309),doubleToFloat(0.0),doubleToFloat(-0.0192),doubleToFloat(-1.6810),doubleToFloat(1.4030),doubleToFloat(0.7316),doubleToFloat(0.3540),doubleToFloat(0.8174),doubleToFloat(0.7316),doubleToFloat(-1.4630),doubleToFloat(0.0),doubleToFloat(0.7316),doubleToFloat(-1.4630),doubleToFloat(0.0),doubleToFloat(0.7316),doubleToFloat(1.4710),doubleToFloat(-1.6570),doubleToFloat(-0.0192),doubleToFloat(0.4309),doubleToFloat(-1.4030),doubleToFloat(0.7316),doubleToFloat(0.3540),doubleToFloat(-0.8174),doubleToFloat(0.7316),doubleToFloat(-1.4630)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.9768),doubleToFloat(-0.0192),doubleToFloat(-1.6810),doubleToFloat(0.0),doubleToFloat(-0.0192),doubleToFloat(1.7500),doubleToFloat(1.1090),doubleToFloat(-0.6007),doubleToFloat(-2.0460),doubleToFloat(2.0450),doubleToFloat(-0.6007),doubleToFloat(0.4309),doubleToFloat(1.6950),doubleToFloat(-0.2960),doubleToFloat(1.4290),doubleToFloat(0.0),doubleToFloat(-0.6007),doubleToFloat(-2.0460),doubleToFloat(-1.1090),doubleToFloat(-0.6007),doubleToFloat(-2.0460),doubleToFloat(-2.0450),doubleToFloat(-0.6007),doubleToFloat(0.4309),doubleToFloat(-1.6950),doubleToFloat(-0.2960),doubleToFloat(1.4290),doubleToFloat(0.0),doubleToFloat(-1.2070),doubleToFloat(-1.8410)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(1.0230),doubleToFloat(-1.2070),doubleToFloat(-1.8410),doubleToFloat(1.9130),doubleToFloat(-1.2230),doubleToFloat(0.5161),doubleToFloat(1.6010),doubleToFloat(-0.9325),doubleToFloat(1.4060),doubleToFloat(0.0),doubleToFloat(-0.6582),doubleToFloat(1.7080),doubleToFloat(-1.6010),doubleToFloat(-0.9325),doubleToFloat(1.4060),doubleToFloat(-1.9130),doubleToFloat(-1.2230),doubleToFloat(0.5161),doubleToFloat(-1.0230),doubleToFloat(-1.2070),doubleToFloat(-1.8410),doubleToFloat(1.4090),doubleToFloat(-1.9250),doubleToFloat(-2.8780),doubleToFloat(1.4090),doubleToFloat(-3.9470),doubleToFloat(-1.6810),doubleToFloat(0.0),doubleToFloat(-3.9470),doubleToFloat(-1.6810)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(1.1090),doubleToFloat(-0.6007),doubleToFloat(-2.0460),doubleToFloat(0.0),doubleToFloat(-0.6007),doubleToFloat(-2.0460),doubleToFloat(-1.4090),doubleToFloat(-1.9250),doubleToFloat(-2.8780),doubleToFloat(0.0),doubleToFloat(-1.9250),doubleToFloat(-2.8780),doubleToFloat(-1.1090),doubleToFloat(-0.6007),doubleToFloat(-2.0460),doubleToFloat(-1.4090),doubleToFloat(-3.9470),doubleToFloat(-1.6810),doubleToFloat(2.9270),doubleToFloat(-1.9250),doubleToFloat(0.4309),doubleToFloat(2.0890),doubleToFloat(-3.9470),doubleToFloat(0.4309),doubleToFloat(2.0450),doubleToFloat(-0.6007),doubleToFloat(0.4309),doubleToFloat(-2.9270),doubleToFloat(-1.9250),doubleToFloat(0.4309)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-2.0450),doubleToFloat(-0.6007),doubleToFloat(0.4309),doubleToFloat(-2.0890),doubleToFloat(-3.9470),doubleToFloat(0.4309),doubleToFloat(0.0),doubleToFloat(-3.9470),doubleToFloat(0.4309),doubleToFloat(0.9442),doubleToFloat(-0.3153),doubleToFloat(-1.6920),doubleToFloat(0.0),doubleToFloat(-0.3153),doubleToFloat(-1.6920),doubleToFloat(-0.9442),doubleToFloat(-0.3153),doubleToFloat(-1.6920),doubleToFloat(-1.7),doubleToFloat(-0.3153),doubleToFloat(0.3093),doubleToFloat(1.7),doubleToFloat(-0.3153),doubleToFloat(0.3093),doubleToFloat(1.8600),doubleToFloat(-3.7930),doubleToFloat(1.3640),doubleToFloat(2.5410),doubleToFloat(-1.9630),doubleToFloat(1.3640)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(1.8610),doubleToFloat(-0.9431),doubleToFloat(1.3640),doubleToFloat(-1.8610),doubleToFloat(-0.9431),doubleToFloat(1.3640),doubleToFloat(-2.5410),doubleToFloat(-1.9630),doubleToFloat(1.3640),doubleToFloat(-1.8600),doubleToFloat(-3.7930),doubleToFloat(1.3640),doubleToFloat(0.0),doubleToFloat(-3.7930),doubleToFloat(1.3640)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=13, element #71, 132 total numbers made up of 66 2-tuple values */
	this.TextureCoordinate_13_71_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.3819),doubleToFloat(0.1710),doubleToFloat(0.4216),doubleToFloat(0.1651),doubleToFloat(0.3819),doubleToFloat(0.1710),doubleToFloat(0.4216),doubleToFloat(0.1651),doubleToFloat(0.3819),doubleToFloat(0.1710),doubleToFloat(0.3819),doubleToFloat(0.1710),doubleToFloat(0.4637),doubleToFloat(0.1714),doubleToFloat(0.4216),doubleToFloat(0.1651),doubleToFloat(0.4637),doubleToFloat(0.1714),doubleToFloat(0.4216),doubleToFloat(0.1651)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.3819),doubleToFloat(0.1710),doubleToFloat(0.3819),doubleToFloat(0.1710),doubleToFloat(0.3819),doubleToFloat(0.1710),doubleToFloat(0.3819),doubleToFloat(0.1710),doubleToFloat(0.4637),doubleToFloat(0.1714),doubleToFloat(0.4637),doubleToFloat(0.1714),doubleToFloat(0.3861),doubleToFloat(0.1398),doubleToFloat(0.4244),doubleToFloat(0.1312),doubleToFloat(0.4394),doubleToFloat(0.1472),doubleToFloat(0.3836),doubleToFloat(0.1404)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.3836),doubleToFloat(0.1404),doubleToFloat(0.3861),doubleToFloat(0.1398),doubleToFloat(0.4244),doubleToFloat(0.1312),doubleToFloat(0.4394),doubleToFloat(0.1472),doubleToFloat(0.3836),doubleToFloat(0.1404),doubleToFloat(0.3861),doubleToFloat(0.1398),doubleToFloat(0.4244),doubleToFloat(0.1312),doubleToFloat(0.4394),doubleToFloat(0.1472),doubleToFloat(0.4637),doubleToFloat(0.1714),doubleToFloat(0.4394),doubleToFloat(0.1472)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4244),doubleToFloat(0.1312),doubleToFloat(0.3861),doubleToFloat(0.1398),doubleToFloat(0.3873),doubleToFloat(0.0706),doubleToFloat(0.3871),doubleToFloat(0.0221),doubleToFloat(0.3873),doubleToFloat(0.0706),doubleToFloat(0.3871),doubleToFloat(0.0221),doubleToFloat(0.3871),doubleToFloat(0.0221),doubleToFloat(0.3861),doubleToFloat(0.1398),doubleToFloat(0.3836),doubleToFloat(0.1404),doubleToFloat(0.3873),doubleToFloat(0.0706)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.3873),doubleToFloat(0.0706),doubleToFloat(0.3836),doubleToFloat(0.1404),doubleToFloat(0.3861),doubleToFloat(0.1398),doubleToFloat(0.3871),doubleToFloat(0.0221),doubleToFloat(0.3871),doubleToFloat(0.0221),doubleToFloat(0.3871),doubleToFloat(0.0221),doubleToFloat(0.4330),doubleToFloat(0.0595),doubleToFloat(0.4411),doubleToFloat(0.0186),doubleToFloat(0.4244),doubleToFloat(0.1312),doubleToFloat(0.4330),doubleToFloat(0.0595)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4244),doubleToFloat(0.1312),doubleToFloat(0.4411),doubleToFloat(0.0186),doubleToFloat(0.4411),doubleToFloat(0.0186),doubleToFloat(0.4411),doubleToFloat(0.0186),doubleToFloat(0.3861),doubleToFloat(0.1398),doubleToFloat(0.3836),doubleToFloat(0.1404),doubleToFloat(0.3861),doubleToFloat(0.1398),doubleToFloat(0.4244),doubleToFloat(0.1312),doubleToFloat(0.4244),doubleToFloat(0.1312),doubleToFloat(0.4411),doubleToFloat(0.0186)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4330),doubleToFloat(0.0595),doubleToFloat(0.4244),doubleToFloat(0.1312),doubleToFloat(0.4244),doubleToFloat(0.1312),doubleToFloat(0.4330),doubleToFloat(0.0595),doubleToFloat(0.4411),doubleToFloat(0.0186),doubleToFloat(0.4411),doubleToFloat(0.0186)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=13, element #79, 264 total numbers */
	this.IndexedFaceSet_13_79_coordIndex = new MFInt32(Java.to([3,4,10,-1,3,10,11,-1,0,3,11,-1,1,0,11,-1,11,12,1,-1,1,12,16,-1,16,9,1,-1,2,17,10,-1,10,4,2,-1,13,8,6,-1,14,13,6,-1,5,14,6,-1,7,15,14,-1,14,5,7,-1,7,9,16,-1,16,15,7,-1,2,8,13,-1,13,17,2,-1,20,21,22,-1,20,22,23,-1,20,23,24,-1,19,20,24,-1,19,24,18,-1,0,1,19,-1,19,18,0,-1,1,9,20,-1,20,19,1,-1,9,7,21,-1,21,20,9,-1,7,5,22,-1,22,21,7,-1,5,6,23,-1,23,22,5,-1,6,3,24,-1,24,23,6,-1,3,0,18,-1,18,24,3,-1,6,8,2,-1,3,6,2,-1,4,3,2,-1,28,26,25,-1,25,29,28,-1,35,27,26,-1,26,28,35,-1,27,35,40,-1,25,26,31,-1,31,30,25,-1,31,26,27,-1,27,32,31,-1,32,27,40,-1,40,41,32,-1,42,29,25,-1,25,30,42,-1,28,29,34,-1,34,33,28,-1,35,28,33,-1,33,36,35,-1,36,40,35,-1,34,37,38,-1,38,33,34,-1,38,39,36,-1,36,33,38,-1,39,41,40,-1,40,36,39,-1,42,37,34,-1,34,29,42,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=13, element #79, 264 total numbers */
	this.IndexedFaceSet_13_79_texCoordIndex = new MFInt32(Java.to([4,5,12,-1,4,12,13,-1,0,4,13,-1,1,0,13,-1,13,14,1,-1,1,14,19,-1,19,3,1,-1,2,21,12,-1,12,5,2,-1,15,10,7,-1,16,15,7,-1,6,16,7,-1,8,17,16,-1,16,6,8,-1,8,11,18,-1,18,17,8,-1,9,10,15,-1,15,20,9,-1,24,25,26,-1,24,26,27,-1,24,27,28,-1,23,24,28,-1,23,28,22,-1,0,1,23,-1,23,22,0,-1,1,3,24,-1,24,23,1,-1,11,8,25,-1,25,24,11,-1,8,6,26,-1,26,25,8,-1,6,7,27,-1,27,26,6,-1,7,4,28,-1,28,27,7,-1,4,0,22,-1,22,28,4,-1,7,10,9,-1,4,7,9,-1,5,4,9,-1,30,32,31,-1,31,29,30,-1,33,34,32,-1,32,30,33,-1,34,33,35,-1,31,32,37,-1,37,36,31,-1,37,32,34,-1,34,38,37,-1,38,34,35,-1,35,39,38,-1,40,29,31,-1,31,36,40,-1,41,44,43,-1,43,42,41,-1,45,41,42,-1,42,46,45,-1,46,50,45,-1,43,47,48,-1,48,42,43,-1,48,49,46,-1,46,42,48,-1,49,51,50,-1,50,46,49,-1,52,47,43,-1,43,44,52,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=14, element #79, 129 total numbers made up of 43 3-tuple values */
	this.Coordinate_14_79_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(2.9270),doubleToFloat(-1.6270),doubleToFloat(-1.0130),doubleToFloat(2.0890),doubleToFloat(-3.6480),doubleToFloat(-1.0130),doubleToFloat(0.0),doubleToFloat(0.2797),doubleToFloat(0.3064),doubleToFloat(2.0450),doubleToFloat(-0.3017),doubleToFloat(-1.0130),doubleToFloat(1.6950),doubleToFloat(0.0029),doubleToFloat(-0.0151),doubleToFloat(-2.9270),doubleToFloat(-1.6270),doubleToFloat(-1.0130),doubleToFloat(-2.0450),doubleToFloat(-0.3017),doubleToFloat(-1.0130),doubleToFloat(-2.0890),doubleToFloat(-3.6480),doubleToFloat(-1.0130),doubleToFloat(-1.6950),doubleToFloat(0.0029),doubleToFloat(-0.0151),doubleToFloat(0.0),doubleToFloat(-3.6480),doubleToFloat(-1.0130)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(1.7400),doubleToFloat(-0.3226),doubleToFloat(1.1580),doubleToFloat(2.6610),doubleToFloat(-1.8660),doubleToFloat(0.9192),doubleToFloat(2.1400),doubleToFloat(-3.6480),doubleToFloat(0.9192),doubleToFloat(-1.7400),doubleToFloat(-0.3226),doubleToFloat(1.1580),doubleToFloat(-2.6610),doubleToFloat(-1.8660),doubleToFloat(0.9192),doubleToFloat(-2.1400),doubleToFloat(-3.6480),doubleToFloat(0.9192),doubleToFloat(0.0),doubleToFloat(-3.6480),doubleToFloat(0.9192),doubleToFloat(0.0),doubleToFloat(-0.0274),doubleToFloat(1.6610),doubleToFloat(2.4050),doubleToFloat(-1.6560),doubleToFloat(-1.9150),doubleToFloat(1.7500),doubleToFloat(-2.9420),doubleToFloat(-1.9150)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.0),doubleToFloat(-2.9420),doubleToFloat(-1.9150),doubleToFloat(-1.7500),doubleToFloat(-2.9420),doubleToFloat(-1.9150),doubleToFloat(-2.4050),doubleToFloat(-1.6560),doubleToFloat(-1.9150),doubleToFloat(-1.7420),doubleToFloat(-0.5681),doubleToFloat(-1.9150),doubleToFloat(1.7420),doubleToFloat(-0.5681),doubleToFloat(-1.9150),doubleToFloat(1.7840),doubleToFloat(-0.6480),doubleToFloat(2.3320),doubleToFloat(2.2160),doubleToFloat(-2.2670),doubleToFloat(4.1440),doubleToFloat(2.2160),doubleToFloat(-3.6480),doubleToFloat(3.7760),doubleToFloat(0.0),doubleToFloat(-2.2670),doubleToFloat(5.4630),doubleToFloat(0.0),doubleToFloat(-0.5463),doubleToFloat(3.9500)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(1.7400),doubleToFloat(-0.3226),doubleToFloat(1.1580),doubleToFloat(2.6610),doubleToFloat(-1.8660),doubleToFloat(0.9192),doubleToFloat(2.1400),doubleToFloat(-3.6480),doubleToFloat(0.9192),doubleToFloat(-2.2160),doubleToFloat(-2.2670),doubleToFloat(4.1440),doubleToFloat(-1.7840),doubleToFloat(-0.6480),doubleToFloat(2.3320),doubleToFloat(0.0),doubleToFloat(-3.6480),doubleToFloat(5.0960),doubleToFloat(-2.2160),doubleToFloat(-3.6480),doubleToFloat(3.7760),doubleToFloat(-1.7400),doubleToFloat(-0.3226),doubleToFloat(1.1580),doubleToFloat(-2.6610),doubleToFloat(-1.8660),doubleToFloat(0.9192),doubleToFloat(-2.1400),doubleToFloat(-3.6480),doubleToFloat(0.9192)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.0),doubleToFloat(-3.6480),doubleToFloat(3.7760),doubleToFloat(0.0),doubleToFloat(-3.6480),doubleToFloat(0.9192),doubleToFloat(0.0),doubleToFloat(-0.0274),doubleToFloat(1.6610)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=14, element #80, 106 total numbers made up of 53 2-tuple values */
	this.TextureCoordinate_14_80_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.4330),doubleToFloat(0.0595),doubleToFloat(0.4411),doubleToFloat(0.0186),doubleToFloat(0.4637),doubleToFloat(0.1714),doubleToFloat(0.4411),doubleToFloat(0.0186),doubleToFloat(0.4244),doubleToFloat(0.1312),doubleToFloat(0.4394),doubleToFloat(0.1472),doubleToFloat(0.4330),doubleToFloat(0.0595),doubleToFloat(0.4244),doubleToFloat(0.1312),doubleToFloat(0.4411),doubleToFloat(0.0186),doubleToFloat(0.4637),doubleToFloat(0.1714)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4394),doubleToFloat(0.1472),doubleToFloat(0.4411),doubleToFloat(0.0186),doubleToFloat(0.4640),doubleToFloat(0.1246),doubleToFloat(0.4607),doubleToFloat(0.0558),doubleToFloat(0.4904),doubleToFloat(0.0166),doubleToFloat(0.4640),doubleToFloat(0.1246),doubleToFloat(0.4607),doubleToFloat(0.0558),doubleToFloat(0.4904),doubleToFloat(0.0166),doubleToFloat(0.4949),doubleToFloat(0.0186),doubleToFloat(0.4949),doubleToFloat(0.0186)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4868),doubleToFloat(0.1432),doubleToFloat(0.4868),doubleToFloat(0.1432),doubleToFloat(0.4330),doubleToFloat(0.0595),doubleToFloat(0.4411),doubleToFloat(0.0186),doubleToFloat(0.4411),doubleToFloat(0.0186),doubleToFloat(0.4411),doubleToFloat(0.0186),doubleToFloat(0.4330),doubleToFloat(0.0595),doubleToFloat(0.4244),doubleToFloat(0.1312),doubleToFloat(0.4244),doubleToFloat(0.1312),doubleToFloat(0.5320),doubleToFloat(0.0980)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5645),doubleToFloat(0.0707),doubleToFloat(0.4885),doubleToFloat(0.1020),doubleToFloat(0.5026),doubleToFloat(0.0440),doubleToFloat(0.5945),doubleToFloat(0.0186),doubleToFloat(0.5487),doubleToFloat(0.0186),doubleToFloat(0.5487),doubleToFloat(0.0186),doubleToFloat(0.4640),doubleToFloat(0.1246),doubleToFloat(0.4607),doubleToFloat(0.0558),doubleToFloat(0.4904),doubleToFloat(0.0166),doubleToFloat(0.4949),doubleToFloat(0.0186)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4868),doubleToFloat(0.1432),doubleToFloat(0.5645),doubleToFloat(0.0707),doubleToFloat(0.5026),doubleToFloat(0.0440),doubleToFloat(0.4885),doubleToFloat(0.1020),doubleToFloat(0.5320),doubleToFloat(0.0980),doubleToFloat(0.5945),doubleToFloat(0.0186),doubleToFloat(0.5487),doubleToFloat(0.0186),doubleToFloat(0.4640),doubleToFloat(0.1246),doubleToFloat(0.4607),doubleToFloat(0.0558),doubleToFloat(0.4904),doubleToFloat(0.0166)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5487),doubleToFloat(0.0186),doubleToFloat(0.4949),doubleToFloat(0.0186),doubleToFloat(0.4868),doubleToFloat(0.1432)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=10, element #92, 488 total numbers */
	this.IndexedFaceSet_10_92_coordIndex = new MFInt32(Java.to([43,44,45,-1,42,43,45,-1,45,46,47,-1,42,45,47,-1,48,42,47,-1,0,7,8,-1,8,1,0,-1,1,8,9,-1,9,2,1,-1,2,9,10,-1,10,3,2,-1,3,10,11,-1,11,4,3,-1,4,11,12,-1,12,5,4,-1,5,12,13,-1,13,6,5,-1,6,13,7,-1,7,0,6,-1,7,14,15,-1,15,8,7,-1,8,15,16,-1,16,9,8,-1,9,16,17,-1,17,10,9,-1,10,17,18,-1,18,11,10,-1,11,18,19,-1,19,12,11,-1,12,19,20,-1,20,13,12,-1,13,20,14,-1,14,7,13,-1,14,21,22,-1,22,15,14,-1,15,22,23,-1,23,16,15,-1,16,23,24,-1,24,17,16,-1,17,24,25,-1,25,18,17,-1,18,25,26,-1,26,19,18,-1,19,26,27,-1,27,20,19,-1,20,27,21,-1,21,14,20,-1,60,59,58,-1,61,60,58,-1,58,57,56,-1,61,58,56,-1,62,61,56,-1,29,22,21,-1,21,28,29,-1,30,23,22,-1,22,29,30,-1,31,24,23,-1,23,30,31,-1,32,25,24,-1,24,31,32,-1,33,26,25,-1,25,32,33,-1,34,27,26,-1,26,33,34,-1,28,21,27,-1,27,34,28,-1,36,29,28,-1,28,35,36,-1,37,30,29,-1,29,36,37,-1,38,31,30,-1,30,37,38,-1,39,32,31,-1,31,38,39,-1,40,33,32,-1,32,39,40,-1,41,34,33,-1,33,40,41,-1,35,28,34,-1,34,41,35,-1,42,0,1,-1,1,43,42,-1,43,1,2,-1,2,44,43,-1,44,2,3,-1,3,45,44,-1,45,3,4,-1,4,46,45,-1,46,4,5,-1,5,47,46,-1,47,5,6,-1,6,48,47,-1,48,6,0,-1,0,42,48,-1,50,36,35,-1,35,49,50,-1,51,37,36,-1,36,50,51,-1,52,38,37,-1,37,51,52,-1,53,39,38,-1,38,52,53,-1,54,40,39,-1,39,53,54,-1,55,41,40,-1,40,54,55,-1,49,35,41,-1,41,55,49,-1,57,50,49,-1,49,56,57,-1,58,51,50,-1,50,57,58,-1,59,52,51,-1,51,58,59,-1,60,53,52,-1,52,59,60,-1,61,54,53,-1,53,60,61,-1,62,55,54,-1,54,61,62,-1,56,49,55,-1,55,62,56,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=10, element #92, 488 total numbers */
	this.IndexedFaceSet_10_92_texCoordIndex = new MFInt32(Java.to([0,2,3,-1,1,0,3,-1,3,4,5,-1,1,3,5,-1,6,1,5,-1,7,9,8,-1,8,10,7,-1,10,8,11,-1,11,12,10,-1,12,11,13,-1,13,14,12,-1,14,13,15,-1,15,16,14,-1,16,15,17,-1,17,18,16,-1,18,17,19,-1,19,20,18,-1,20,19,9,-1,9,7,20,-1,9,22,21,-1,21,8,9,-1,8,21,23,-1,23,11,8,-1,11,23,24,-1,24,13,11,-1,13,24,25,-1,25,15,13,-1,15,25,26,-1,26,17,15,-1,17,26,27,-1,27,19,17,-1,19,27,22,-1,22,9,19,-1,22,29,28,-1,28,21,22,-1,21,28,30,-1,30,23,21,-1,23,30,31,-1,31,24,23,-1,24,31,32,-1,32,25,24,-1,25,32,33,-1,33,26,25,-1,26,33,34,-1,34,27,26,-1,27,34,29,-1,29,22,27,-1,46,45,44,-1,47,46,44,-1,44,43,42,-1,47,44,42,-1,48,47,42,-1,35,28,29,-1,29,36,35,-1,37,30,28,-1,28,35,37,-1,38,31,30,-1,30,37,38,-1,39,32,31,-1,31,38,39,-1,40,33,32,-1,32,39,40,-1,41,34,33,-1,33,40,41,-1,36,29,34,-1,34,41,36,-1,51,50,49,-1,49,52,51,-1,54,53,50,-1,50,51,54,-1,56,55,53,-1,53,54,56,-1,58,57,55,-1,55,56,58,-1,60,59,57,-1,57,58,60,-1,62,61,59,-1,59,60,62,-1,52,49,61,-1,61,62,52,-1,1,7,10,-1,10,0,1,-1,0,10,12,-1,12,2,0,-1,2,12,14,-1,14,3,2,-1,3,14,16,-1,16,4,3,-1,4,16,18,-1,18,5,4,-1,5,18,20,-1,20,6,5,-1,6,20,7,-1,7,1,6,-1,63,51,52,-1,52,64,63,-1,65,54,51,-1,51,63,65,-1,66,56,54,-1,54,65,66,-1,67,58,56,-1,56,66,67,-1,68,60,58,-1,58,67,68,-1,69,62,60,-1,60,68,69,-1,64,52,62,-1,62,69,64,-1,43,63,64,-1,64,42,43,-1,44,65,63,-1,63,43,44,-1,45,66,65,-1,65,44,45,-1,46,67,66,-1,66,45,46,-1,47,68,67,-1,67,46,47,-1,48,69,68,-1,68,47,48,-1,42,64,69,-1,69,48,42,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=11, element #92, 189 total numbers made up of 63 3-tuple values */
	this.Coordinate_11_92_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(-2.9600),doubleToFloat(3.7380),doubleToFloat(0.0),doubleToFloat(-1.6430),doubleToFloat(3.7380),doubleToFloat(3.2090),doubleToFloat(1.3160),doubleToFloat(3.7380),doubleToFloat(4.0020),doubleToFloat(3.3670),doubleToFloat(3.7380),doubleToFloat(1.7810),doubleToFloat(3.3670),doubleToFloat(3.7380),doubleToFloat(-1.7810),doubleToFloat(1.3160),doubleToFloat(3.7380),doubleToFloat(-4.0020),doubleToFloat(-1.6430),doubleToFloat(3.7380),doubleToFloat(-3.2090),doubleToFloat(-2.9600),doubleToFloat(-0.0114),doubleToFloat(0.0),doubleToFloat(-1.6430),doubleToFloat(-0.0114),doubleToFloat(3.2090),doubleToFloat(1.3160),doubleToFloat(-0.0114),doubleToFloat(4.0020)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(3.3670),doubleToFloat(-0.0114),doubleToFloat(1.7810),doubleToFloat(3.3670),doubleToFloat(-0.0114),doubleToFloat(-1.7810),doubleToFloat(1.3160),doubleToFloat(-0.0114),doubleToFloat(-4.0020),doubleToFloat(-1.6430),doubleToFloat(-0.0114),doubleToFloat(-3.2090),doubleToFloat(-2.9600),doubleToFloat(-6.5070),doubleToFloat(0.0),doubleToFloat(-1.6430),doubleToFloat(-6.5070),doubleToFloat(3.2090),doubleToFloat(1.3160),doubleToFloat(-6.5070),doubleToFloat(4.0020),doubleToFloat(3.3670),doubleToFloat(-6.5070),doubleToFloat(1.7810),doubleToFloat(3.3670),doubleToFloat(-6.5070),doubleToFloat(-1.7810),doubleToFloat(1.3160),doubleToFloat(-6.5070),doubleToFloat(-4.0020)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.6430),doubleToFloat(-6.5070),doubleToFloat(-3.2090),doubleToFloat(-3.3670),doubleToFloat(-13.1300),doubleToFloat(0.0),doubleToFloat(-1.8970),doubleToFloat(-13.1300),doubleToFloat(3.5820),doubleToFloat(1.4070),doubleToFloat(-13.1300),doubleToFloat(4.4670),doubleToFloat(3.3550),doubleToFloat(-13.1300),doubleToFloat(1.9880),doubleToFloat(3.3550),doubleToFloat(-13.1300),doubleToFloat(-1.9880),doubleToFloat(1.4070),doubleToFloat(-13.1300),doubleToFloat(-4.4670),doubleToFloat(-1.8970),doubleToFloat(-13.1300),doubleToFloat(-3.5820),doubleToFloat(-2.1460),doubleToFloat(-4.9850),doubleToFloat(0.0),doubleToFloat(-1.1360),doubleToFloat(-4.9850),doubleToFloat(2.4620)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(1.1350),doubleToFloat(-4.9850),doubleToFloat(3.0700),doubleToFloat(2.6330),doubleToFloat(-4.9850),doubleToFloat(1.3660),doubleToFloat(2.6330),doubleToFloat(-4.9850),doubleToFloat(-1.3660),doubleToFloat(1.1350),doubleToFloat(-4.9850),doubleToFloat(-3.0700),doubleToFloat(-1.1360),doubleToFloat(-4.9850),doubleToFloat(-2.4620),doubleToFloat(-2.1560),doubleToFloat(-11.4500),doubleToFloat(0.0),doubleToFloat(-1.2250),doubleToFloat(-11.4500),doubleToFloat(1.9560),doubleToFloat(0.8662),doubleToFloat(-11.4500),doubleToFloat(2.4390),doubleToFloat(2.5430),doubleToFloat(-11.4500),doubleToFloat(1.0850),doubleToFloat(2.5430),doubleToFloat(-11.4500),doubleToFloat(-1.0850)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.8662),doubleToFloat(-11.4500),doubleToFloat(-2.4390),doubleToFloat(-1.2250),doubleToFloat(-11.4500),doubleToFloat(-1.9560),doubleToFloat(-2.0510),doubleToFloat(5.7290),doubleToFloat(0.0),doubleToFloat(-1.0760),doubleToFloat(5.7290),doubleToFloat(2.3750),doubleToFloat(1.1140),doubleToFloat(5.7290),doubleToFloat(2.9610),doubleToFloat(2.8700),doubleToFloat(5.7290),doubleToFloat(1.3180),doubleToFloat(2.8700),doubleToFloat(5.7290),doubleToFloat(-1.3180),doubleToFloat(1.1140),doubleToFloat(5.7290),doubleToFloat(-2.9610),doubleToFloat(-1.0760),doubleToFloat(5.7290),doubleToFloat(-2.3750),doubleToFloat(-1.8420),doubleToFloat(-15.1200),doubleToFloat(0.0)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.0300),doubleToFloat(-15.1200),doubleToFloat(1.8730),doubleToFloat(0.7965),doubleToFloat(-15.1200),doubleToFloat(2.2950),doubleToFloat(2.2610),doubleToFloat(-15.1200),doubleToFloat(1.1130),doubleToFloat(2.2610),doubleToFloat(-15.1200),doubleToFloat(-0.9478),doubleToFloat(0.7965),doubleToFloat(-15.1200),doubleToFloat(-2.1300),doubleToFloat(-1.0300),doubleToFloat(-15.1200),doubleToFloat(-1.7080),doubleToFloat(-0.6277),doubleToFloat(-16.1),doubleToFloat(0.0),doubleToFloat(-0.2723),doubleToFloat(-16.1),doubleToFloat(0.9120),doubleToFloat(0.5262),doubleToFloat(-16.1),doubleToFloat(1.0960),doubleToFloat(1.1670),doubleToFloat(-16.1),doubleToFloat(0.5796)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(1.1670),doubleToFloat(-16.1),doubleToFloat(-0.4145),doubleToFloat(0.5262),doubleToFloat(-16.1),doubleToFloat(-0.9313),doubleToFloat(-0.2723),doubleToFloat(-16.1),doubleToFloat(-0.7469)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=11, element #93, 140 total numbers made up of 70 2-tuple values */
	this.TextureCoordinate_11_93_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.7190),doubleToFloat(0.5576),doubleToFloat(0.6284),doubleToFloat(0.5576),doubleToFloat(0.7414),doubleToFloat(0.5576),doubleToFloat(0.6787),doubleToFloat(0.5576),doubleToFloat(0.5781),doubleToFloat(0.5576),doubleToFloat(0.5154),doubleToFloat(0.5576),doubleToFloat(0.5378),doubleToFloat(0.5576),doubleToFloat(0.6284),doubleToFloat(0.5029),doubleToFloat(0.7509),doubleToFloat(0.3997),doubleToFloat(0.6284),doubleToFloat(0.3997)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7509),doubleToFloat(0.5029),doubleToFloat(0.7811),doubleToFloat(0.3997),doubleToFloat(0.7811),doubleToFloat(0.5029),doubleToFloat(0.6964),doubleToFloat(0.3997),doubleToFloat(0.6964),doubleToFloat(0.5029),doubleToFloat(0.5604),doubleToFloat(0.3997),doubleToFloat(0.5604),doubleToFloat(0.5029),doubleToFloat(0.4756),doubleToFloat(0.3997),doubleToFloat(0.4756),doubleToFloat(0.5029),doubleToFloat(0.5059),doubleToFloat(0.3997)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5059),doubleToFloat(0.5029),doubleToFloat(0.7509),doubleToFloat(0.3197),doubleToFloat(0.6284),doubleToFloat(0.3197),doubleToFloat(0.7811),doubleToFloat(0.3197),doubleToFloat(0.6964),doubleToFloat(0.3197),doubleToFloat(0.5604),doubleToFloat(0.3197),doubleToFloat(0.4756),doubleToFloat(0.3197),doubleToFloat(0.5059),doubleToFloat(0.3197),doubleToFloat(0.7651),doubleToFloat(0.2166),doubleToFloat(0.6284),doubleToFloat(0.2166)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7989),doubleToFloat(0.2166),doubleToFloat(0.7043),doubleToFloat(0.2166),doubleToFloat(0.5525),doubleToFloat(0.2166),doubleToFloat(0.4579),doubleToFloat(0.2166),doubleToFloat(0.4917),doubleToFloat(0.2166),doubleToFloat(0.7224),doubleToFloat(0.2630),doubleToFloat(0.6284),doubleToFloat(0.2630),doubleToFloat(0.7456),doubleToFloat(0.2630),doubleToFloat(0.6805),doubleToFloat(0.2630),doubleToFloat(0.5762),doubleToFloat(0.2630)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5112),doubleToFloat(0.2630),doubleToFloat(0.5344),doubleToFloat(0.2630),doubleToFloat(0.8705),doubleToFloat(0.5452),doubleToFloat(0.8705),doubleToFloat(0.5383),doubleToFloat(0.8705),doubleToFloat(0.5369),doubleToFloat(0.8705),doubleToFloat(0.5408),doubleToFloat(0.8705),doubleToFloat(0.5483),doubleToFloat(0.8705),doubleToFloat(0.5522),doubleToFloat(0.8705),doubleToFloat(0.5509),doubleToFloat(0.9170),doubleToFloat(0.5452)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.9170),doubleToFloat(0.5266),doubleToFloat(0.8900),doubleToFloat(0.5304),doubleToFloat(0.8900),doubleToFloat(0.5452),doubleToFloat(0.9170),doubleToFloat(0.5220),doubleToFloat(0.8900),doubleToFloat(0.5268),doubleToFloat(0.9170),doubleToFloat(0.5349),doubleToFloat(0.8900),doubleToFloat(0.5370),doubleToFloat(0.9170),doubleToFloat(0.5555),doubleToFloat(0.8900),doubleToFloat(0.5534),doubleToFloat(0.9170),doubleToFloat(0.5684)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.8900),doubleToFloat(0.5636),doubleToFloat(0.9170),doubleToFloat(0.5638),doubleToFloat(0.8900),doubleToFloat(0.5600),doubleToFloat(0.8746),doubleToFloat(0.5310),doubleToFloat(0.8746),doubleToFloat(0.5452),doubleToFloat(0.8746),doubleToFloat(0.5279),doubleToFloat(0.8746),doubleToFloat(0.5368),doubleToFloat(0.8746),doubleToFloat(0.5524),doubleToFloat(0.8746),doubleToFloat(0.5613),doubleToFloat(0.8746),doubleToFloat(0.5581)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=11, element #101, 300 total numbers */
	this.IndexedFaceSet_11_101_coordIndex = new MFInt32(Java.to([0,1,2,-1,2,3,4,-1,2,4,5,-1,0,2,5,-1,6,0,5,-1,9,10,7,-1,7,8,9,-1,12,9,8,-1,8,11,12,-1,14,12,11,-1,11,13,14,-1,16,14,13,-1,13,15,16,-1,18,16,15,-1,15,17,18,-1,20,18,17,-1,17,19,20,-1,10,20,19,-1,19,7,10,-1,21,22,10,-1,10,9,21,-1,23,21,9,-1,9,12,23,-1,24,23,12,-1,12,14,24,-1,25,24,14,-1,14,16,25,-1,26,25,16,-1,16,18,26,-1,27,26,18,-1,18,20,27,-1,22,27,20,-1,20,10,22,-1,1,0,22,-1,22,21,1,-1,2,1,21,-1,21,23,2,-1,3,2,23,-1,23,24,3,-1,4,3,24,-1,24,25,4,-1,5,4,25,-1,25,26,5,-1,6,5,26,-1,26,27,6,-1,0,6,27,-1,27,22,0,-1,8,7,28,-1,28,29,8,-1,11,8,29,-1,29,30,11,-1,13,11,30,-1,30,31,13,-1,15,13,31,-1,31,32,15,-1,17,15,32,-1,32,33,17,-1,19,17,33,-1,33,34,19,-1,7,19,34,-1,34,28,7,-1,29,28,35,-1,35,36,29,-1,30,29,36,-1,36,37,30,-1,31,30,37,-1,37,38,31,-1,32,31,38,-1,38,39,32,-1,33,32,39,-1,39,40,33,-1,34,33,40,-1,40,41,34,-1,28,34,41,-1,41,35,28,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=11, element #101, 300 total numbers */
	this.IndexedFaceSet_11_101_texCoordIndex = new MFInt32(Java.to([0,1,2,-1,2,3,4,-1,2,4,5,-1,0,2,5,-1,6,0,5,-1,9,10,7,-1,7,8,9,-1,12,9,8,-1,8,11,12,-1,14,12,11,-1,11,13,14,-1,16,14,13,-1,13,15,16,-1,18,16,15,-1,15,17,18,-1,20,18,17,-1,17,19,20,-1,10,20,19,-1,19,7,10,-1,21,22,10,-1,10,9,21,-1,23,21,9,-1,9,12,23,-1,24,23,12,-1,12,14,24,-1,25,24,14,-1,14,16,25,-1,26,25,16,-1,16,18,26,-1,27,26,18,-1,18,20,27,-1,22,27,20,-1,20,10,22,-1,1,0,22,-1,22,21,1,-1,2,1,21,-1,21,23,2,-1,3,2,23,-1,23,24,3,-1,4,3,24,-1,24,25,4,-1,5,4,25,-1,25,26,5,-1,6,5,26,-1,26,27,6,-1,0,6,27,-1,27,22,0,-1,8,7,28,-1,28,29,8,-1,11,8,29,-1,29,30,11,-1,13,11,30,-1,30,31,13,-1,15,13,31,-1,31,32,15,-1,17,15,32,-1,32,33,17,-1,19,17,33,-1,33,34,19,-1,7,19,34,-1,34,28,7,-1,29,28,35,-1,35,36,29,-1,30,29,36,-1,36,37,30,-1,31,30,37,-1,37,38,31,-1,32,31,38,-1,38,39,32,-1,33,32,39,-1,39,40,33,-1,34,33,40,-1,40,41,34,-1,28,34,41,-1,41,35,28,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=12, element #101, 126 total numbers made up of 42 3-tuple values */
	this.Coordinate_12_101_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(-0.7186),doubleToFloat(0.9688),doubleToFloat(0.0234),doubleToFloat(-0.3632),doubleToFloat(0.9688),doubleToFloat(0.9354),doubleToFloat(0.4353),doubleToFloat(0.9688),doubleToFloat(1.1200),doubleToFloat(1.0760),doubleToFloat(0.9688),doubleToFloat(0.6030),doubleToFloat(1.0760),doubleToFloat(0.9688),doubleToFloat(-0.3911),doubleToFloat(0.4353),doubleToFloat(0.9688),doubleToFloat(-0.9079),doubleToFloat(-0.3632),doubleToFloat(0.9688),doubleToFloat(-0.7235),doubleToFloat(-2.3370),doubleToFloat(-4.6130),doubleToFloat(0.0234),doubleToFloat(-1.4600),doubleToFloat(-3.6220),doubleToFloat(2.0190),doubleToFloat(-1.2360),doubleToFloat(-1.6280),doubleToFloat(2.4200)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-2.1180),doubleToFloat(-1.9120),doubleToFloat(0.0234),doubleToFloat(0.8111),doubleToFloat(-3.6220),doubleToFloat(2.5670),doubleToFloat(0.7468),doubleToFloat(-1.6280),doubleToFloat(2.9030),doubleToFloat(2.2540),doubleToFloat(-4.6130),doubleToFloat(1.2550),doubleToFloat(2.3370),doubleToFloat(-1.9120),doubleToFloat(0.9793),doubleToFloat(2.2540),doubleToFloat(-5.3830),doubleToFloat(-1.3680),doubleToFloat(2.3370),doubleToFloat(-1.9120),doubleToFloat(-0.9325),doubleToFloat(0.8111),doubleToFloat(-5.3830),doubleToFloat(-2.9030),doubleToFloat(0.7468),doubleToFloat(-1.9120),doubleToFloat(-2.3680),doubleToFloat(-1.4600),doubleToFloat(-5.3830),doubleToFloat(-2.3550)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.2360),doubleToFloat(-1.9120),doubleToFloat(-1.8850),doubleToFloat(-1.1210),doubleToFloat(-0.0032),doubleToFloat(1.8960),doubleToFloat(-1.9330),doubleToFloat(-0.0032),doubleToFloat(0.0234),doubleToFloat(0.7056),doubleToFloat(-0.0032),doubleToFloat(2.3180),doubleToFloat(2.1700),doubleToFloat(-0.0032),doubleToFloat(1.1360),doubleToFloat(2.1700),doubleToFloat(-0.0032),doubleToFloat(-0.9244),doubleToFloat(0.7056),doubleToFloat(-0.0032),doubleToFloat(-2.0610),doubleToFloat(-1.1210),doubleToFloat(-0.0032),doubleToFloat(-1.6400),doubleToFloat(-1.6070),doubleToFloat(-12.9200),doubleToFloat(0.0032),doubleToFloat(-0.9216),doubleToFloat(-12.9100),doubleToFloat(1.5650)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.6190),doubleToFloat(-12.9100),doubleToFloat(1.9510),doubleToFloat(1.8540),doubleToFloat(-12.9200),doubleToFloat(0.8701),doubleToFloat(1.8540),doubleToFloat(-12.9400),doubleToFloat(-0.9762),doubleToFloat(0.6190),doubleToFloat(-12.9400),doubleToFloat(-1.7420),doubleToFloat(-0.9216),doubleToFloat(-12.9400),doubleToFloat(-1.3560),doubleToFloat(-0.7072),doubleToFloat(-14.5300),doubleToFloat(0.0239),doubleToFloat(-0.3604),doubleToFloat(-14.5300),doubleToFloat(0.8140),doubleToFloat(0.4188),doubleToFloat(-14.5300),doubleToFloat(1.0090),doubleToFloat(1.0440),doubleToFloat(-14.5300),doubleToFloat(0.4624),doubleToFloat(1.0440),doubleToFloat(-14.5400),doubleToFloat(-0.4714)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.4188),doubleToFloat(-14.5400),doubleToFloat(-0.8587),doubleToFloat(-0.3604),doubleToFloat(-14.5400),doubleToFloat(-0.6635)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=12, element #102, 84 total numbers made up of 42 2-tuple values */
	this.TextureCoordinate_12_102_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.9309),doubleToFloat(0.5848),doubleToFloat(0.9190),doubleToFloat(0.5848),doubleToFloat(0.8921),doubleToFloat(0.5848),doubleToFloat(0.8706),doubleToFloat(0.5848),doubleToFloat(0.8706),doubleToFloat(0.5848),doubleToFloat(0.8921),doubleToFloat(0.5848),doubleToFloat(0.9190),doubleToFloat(0.5848),doubleToFloat(0.9845),doubleToFloat(0.5321),doubleToFloat(0.9550),doubleToFloat(0.5475),doubleToFloat(0.9491),doubleToFloat(0.5599)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.9788),doubleToFloat(0.5571),doubleToFloat(0.8787),doubleToFloat(0.5475),doubleToFloat(0.8825),doubleToFloat(0.5599),doubleToFloat(0.8302),doubleToFloat(0.5321),doubleToFloat(0.8291),doubleToFloat(0.5571),doubleToFloat(0.8302),doubleToFloat(0.5200),doubleToFloat(0.8291),doubleToFloat(0.5571),doubleToFloat(0.8787),doubleToFloat(0.5200),doubleToFloat(0.8825),doubleToFloat(0.5571),doubleToFloat(0.9550),doubleToFloat(0.5200)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.9491),doubleToFloat(0.5571),doubleToFloat(0.9444),doubleToFloat(0.5755),doubleToFloat(0.9717),doubleToFloat(0.5755),doubleToFloat(0.8831),doubleToFloat(0.5755),doubleToFloat(0.8339),doubleToFloat(0.5755),doubleToFloat(0.8339),doubleToFloat(0.5755),doubleToFloat(0.8831),doubleToFloat(0.5755),doubleToFloat(0.9444),doubleToFloat(0.5755),doubleToFloat(0.9679),doubleToFloat(0.2444),doubleToFloat(0.9449),doubleToFloat(0.2445)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.8931),doubleToFloat(0.2445),doubleToFloat(0.8516),doubleToFloat(0.2444),doubleToFloat(0.8516),doubleToFloat(0.2442),doubleToFloat(0.8931),doubleToFloat(0.2442),doubleToFloat(0.9449),doubleToFloat(0.2442),doubleToFloat(0.9372),doubleToFloat(0.2243),doubleToFloat(0.9255),doubleToFloat(0.2244),doubleToFloat(0.8993),doubleToFloat(0.2244),doubleToFloat(0.8783),doubleToFloat(0.2243),doubleToFloat(0.8783),doubleToFloat(0.2243)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.8993),doubleToFloat(0.2243),doubleToFloat(0.9255),doubleToFloat(0.2243)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=12, element #110, 408 total numbers */
	this.IndexedFaceSet_12_110_coordIndex = new MFInt32(Java.to([1,14,11,-1,3,6,5,-1,5,4,3,-1,1,3,4,-1,4,0,1,-1,0,4,5,-1,5,2,0,-1,11,6,3,-1,3,1,11,-1,15,12,0,-1,0,2,15,-1,0,12,13,-1,13,1,0,-1,13,14,1,-1,7,11,18,-1,8,9,5,-1,5,6,8,-1,7,10,9,-1,9,8,7,-1,10,2,5,-1,5,9,10,-1,11,7,8,-1,8,6,11,-1,15,2,10,-1,10,16,15,-1,10,7,17,-1,17,16,10,-1,17,7,18,-1,19,26,25,-1,25,24,23,-1,19,25,23,-1,23,22,21,-1,19,23,21,-1,20,19,21,-1,15,19,20,-1,20,12,15,-1,12,20,21,-1,21,13,12,-1,13,21,22,-1,22,14,13,-1,14,22,23,-1,23,11,14,-1,11,23,24,-1,24,18,11,-1,18,24,25,-1,25,17,18,-1,17,25,26,-1,26,16,17,-1,16,26,19,-1,19,15,16,-1,33,27,30,-1,30,31,33,-1,36,38,30,-1,30,27,36,-1,29,28,27,-1,27,33,29,-1,37,36,27,-1,27,28,37,-1,28,29,42,-1,42,37,28,-1,33,31,34,-1,34,32,33,-1,39,32,34,-1,34,40,39,-1,29,33,32,-1,32,35,29,-1,41,35,32,-1,32,39,41,-1,35,41,42,-1,42,29,35,-1,44,43,47,-1,44,47,46,-1,44,46,45,-1,51,50,49,-1,49,48,54,-1,49,54,53,-1,51,49,53,-1,51,53,52,-1,30,43,44,-1,44,31,30,-1,31,44,45,-1,45,34,31,-1,34,45,46,-1,46,40,34,-1,40,46,47,-1,47,38,40,-1,38,47,43,-1,43,30,38,-1,37,48,49,-1,49,36,37,-1,36,49,50,-1,50,38,36,-1,38,50,51,-1,51,40,38,-1,40,51,52,-1,52,39,40,-1,39,52,53,-1,53,41,39,-1,41,53,54,-1,54,42,41,-1,42,54,48,-1,48,37,42,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=12, element #110, 408 total numbers */
	this.IndexedFaceSet_12_110_texCoordIndex = new MFInt32(Java.to([1,18,14,-1,3,6,5,-1,5,4,3,-1,1,3,4,-1,4,0,1,-1,0,4,5,-1,5,2,0,-1,14,6,3,-1,3,1,14,-1,19,16,0,-1,0,2,19,-1,0,16,17,-1,17,1,0,-1,17,18,1,-1,7,15,23,-1,9,10,11,-1,11,8,9,-1,7,12,10,-1,10,9,7,-1,12,13,11,-1,11,10,12,-1,15,7,9,-1,9,8,15,-1,20,13,12,-1,12,21,20,-1,12,7,22,-1,22,21,12,-1,22,7,23,-1,24,31,30,-1,30,29,28,-1,24,30,28,-1,28,27,26,-1,24,28,26,-1,25,24,26,-1,19,24,25,-1,25,16,19,-1,16,25,26,-1,26,17,16,-1,17,26,27,-1,27,18,17,-1,18,27,28,-1,28,14,18,-1,15,28,29,-1,29,23,15,-1,23,29,30,-1,30,22,23,-1,22,30,31,-1,31,21,22,-1,21,31,24,-1,24,20,21,-1,34,32,37,-1,37,38,34,-1,46,48,37,-1,37,32,46,-1,35,33,32,-1,32,34,35,-1,47,46,32,-1,32,33,47,-1,33,36,53,-1,53,47,33,-1,40,41,42,-1,42,39,40,-1,49,39,42,-1,42,50,49,-1,44,40,39,-1,39,43,44,-1,51,43,39,-1,39,49,51,-1,43,51,52,-1,52,45,43,-1,55,54,58,-1,55,58,57,-1,55,57,56,-1,62,61,60,-1,60,59,65,-1,60,65,64,-1,62,60,64,-1,62,64,63,-1,37,54,55,-1,55,38,37,-1,41,55,56,-1,56,42,41,-1,42,56,57,-1,57,50,42,-1,50,57,58,-1,58,48,50,-1,48,58,54,-1,54,37,48,-1,47,59,60,-1,60,46,47,-1,46,60,61,-1,61,48,46,-1,48,61,62,-1,62,50,48,-1,50,62,63,-1,63,49,50,-1,49,63,64,-1,64,51,49,-1,51,64,65,-1,65,52,51,-1,53,65,59,-1,59,47,53,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=13, element #110, 165 total numbers made up of 55 3-tuple values */
	this.Coordinate_13_110_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(-0.9768),doubleToFloat(-0.0192),doubleToFloat(-1.6810),doubleToFloat(-1.6570),doubleToFloat(-0.0192),doubleToFloat(0.4309),doubleToFloat(0.0),doubleToFloat(-0.0192),doubleToFloat(-1.6810),doubleToFloat(-1.4030),doubleToFloat(0.7316),doubleToFloat(0.3540),doubleToFloat(-0.8174),doubleToFloat(0.7316),doubleToFloat(-1.4630),doubleToFloat(0.0),doubleToFloat(0.7316),doubleToFloat(-1.4630),doubleToFloat(0.0),doubleToFloat(0.7316),doubleToFloat(1.4710),doubleToFloat(1.6570),doubleToFloat(-0.0192),doubleToFloat(0.4309),doubleToFloat(1.4030),doubleToFloat(0.7316),doubleToFloat(0.3540),doubleToFloat(0.8174),doubleToFloat(0.7316),doubleToFloat(-1.4630)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.9768),doubleToFloat(-0.0192),doubleToFloat(-1.6810),doubleToFloat(0.0),doubleToFloat(-0.0192),doubleToFloat(1.7500),doubleToFloat(-1.1090),doubleToFloat(-0.6007),doubleToFloat(-2.0460),doubleToFloat(-2.0450),doubleToFloat(-0.6007),doubleToFloat(0.4309),doubleToFloat(-1.6950),doubleToFloat(-0.2960),doubleToFloat(1.4290),doubleToFloat(0.0),doubleToFloat(-0.6007),doubleToFloat(-2.0460),doubleToFloat(1.1090),doubleToFloat(-0.6007),doubleToFloat(-2.0460),doubleToFloat(2.0450),doubleToFloat(-0.6007),doubleToFloat(0.4309),doubleToFloat(1.6950),doubleToFloat(-0.2960),doubleToFloat(1.4290),doubleToFloat(0.0),doubleToFloat(-1.2070),doubleToFloat(-1.8410)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.0230),doubleToFloat(-1.2070),doubleToFloat(-1.8410),doubleToFloat(-1.9130),doubleToFloat(-1.2230),doubleToFloat(0.5161),doubleToFloat(-1.6010),doubleToFloat(-0.9325),doubleToFloat(1.4060),doubleToFloat(0.0),doubleToFloat(-0.6582),doubleToFloat(1.7080),doubleToFloat(1.6010),doubleToFloat(-0.9325),doubleToFloat(1.4060),doubleToFloat(1.9130),doubleToFloat(-1.2230),doubleToFloat(0.5161),doubleToFloat(1.0230),doubleToFloat(-1.2070),doubleToFloat(-1.8410),doubleToFloat(-1.4090),doubleToFloat(-1.9250),doubleToFloat(-2.8780),doubleToFloat(-1.4090),doubleToFloat(-3.9470),doubleToFloat(-1.6810),doubleToFloat(0.0),doubleToFloat(-3.9470),doubleToFloat(-1.6810)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.1090),doubleToFloat(-0.6007),doubleToFloat(-2.0460),doubleToFloat(0.0),doubleToFloat(-0.6007),doubleToFloat(-2.0460),doubleToFloat(1.4090),doubleToFloat(-1.9250),doubleToFloat(-2.8780),doubleToFloat(0.0),doubleToFloat(-1.9250),doubleToFloat(-2.8780),doubleToFloat(1.1090),doubleToFloat(-0.6007),doubleToFloat(-2.0460),doubleToFloat(1.4090),doubleToFloat(-3.9470),doubleToFloat(-1.6810),doubleToFloat(-2.9270),doubleToFloat(-1.9250),doubleToFloat(0.4309),doubleToFloat(-2.0890),doubleToFloat(-3.9470),doubleToFloat(0.4309),doubleToFloat(-2.0450),doubleToFloat(-0.6007),doubleToFloat(0.4309),doubleToFloat(2.9270),doubleToFloat(-1.9250),doubleToFloat(0.4309)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(2.0450),doubleToFloat(-0.6007),doubleToFloat(0.4309),doubleToFloat(2.0890),doubleToFloat(-3.9470),doubleToFloat(0.4309),doubleToFloat(0.0),doubleToFloat(-3.9470),doubleToFloat(0.4309),doubleToFloat(-0.9442),doubleToFloat(-0.3153),doubleToFloat(-1.6920),doubleToFloat(0.0),doubleToFloat(-0.3153),doubleToFloat(-1.6920),doubleToFloat(0.9442),doubleToFloat(-0.3153),doubleToFloat(-1.6920),doubleToFloat(1.7),doubleToFloat(-0.3153),doubleToFloat(0.3093),doubleToFloat(-1.7),doubleToFloat(-0.3153),doubleToFloat(0.3093),doubleToFloat(-1.8600),doubleToFloat(-3.7930),doubleToFloat(1.3640),doubleToFloat(-2.5410),doubleToFloat(-1.9630),doubleToFloat(1.3640)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.8610),doubleToFloat(-0.9431),doubleToFloat(1.3640),doubleToFloat(1.8610),doubleToFloat(-0.9431),doubleToFloat(1.3640),doubleToFloat(2.5410),doubleToFloat(-1.9630),doubleToFloat(1.3640),doubleToFloat(1.8600),doubleToFloat(-3.7930),doubleToFloat(1.3640),doubleToFloat(0.0),doubleToFloat(-3.7930),doubleToFloat(1.3640)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=13, element #111, 132 total numbers made up of 66 2-tuple values */
	this.TextureCoordinate_13_111_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.3819),doubleToFloat(0.1710),doubleToFloat(0.4216),doubleToFloat(0.1651),doubleToFloat(0.3819),doubleToFloat(0.1710),doubleToFloat(0.4216),doubleToFloat(0.1651),doubleToFloat(0.3819),doubleToFloat(0.1710),doubleToFloat(0.3819),doubleToFloat(0.1710),doubleToFloat(0.4637),doubleToFloat(0.1714),doubleToFloat(0.4216),doubleToFloat(0.1651),doubleToFloat(0.4637),doubleToFloat(0.1714),doubleToFloat(0.4216),doubleToFloat(0.1651)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.3819),doubleToFloat(0.1710),doubleToFloat(0.3819),doubleToFloat(0.1710),doubleToFloat(0.3819),doubleToFloat(0.1710),doubleToFloat(0.3819),doubleToFloat(0.1710),doubleToFloat(0.4637),doubleToFloat(0.1714),doubleToFloat(0.4637),doubleToFloat(0.1714),doubleToFloat(0.3861),doubleToFloat(0.1398),doubleToFloat(0.4244),doubleToFloat(0.1312),doubleToFloat(0.4394),doubleToFloat(0.1472),doubleToFloat(0.3836),doubleToFloat(0.1404)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.3836),doubleToFloat(0.1404),doubleToFloat(0.3861),doubleToFloat(0.1398),doubleToFloat(0.4244),doubleToFloat(0.1312),doubleToFloat(0.4394),doubleToFloat(0.1472),doubleToFloat(0.3836),doubleToFloat(0.1404),doubleToFloat(0.3861),doubleToFloat(0.1398),doubleToFloat(0.4244),doubleToFloat(0.1312),doubleToFloat(0.4394),doubleToFloat(0.1472),doubleToFloat(0.4637),doubleToFloat(0.1714),doubleToFloat(0.4394),doubleToFloat(0.1472)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4244),doubleToFloat(0.1312),doubleToFloat(0.3861),doubleToFloat(0.1398),doubleToFloat(0.3873),doubleToFloat(0.0706),doubleToFloat(0.3871),doubleToFloat(0.0221),doubleToFloat(0.3873),doubleToFloat(0.0706),doubleToFloat(0.3871),doubleToFloat(0.0221),doubleToFloat(0.3871),doubleToFloat(0.0221),doubleToFloat(0.3861),doubleToFloat(0.1398),doubleToFloat(0.3836),doubleToFloat(0.1404),doubleToFloat(0.3873),doubleToFloat(0.0706)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.3873),doubleToFloat(0.0706),doubleToFloat(0.3836),doubleToFloat(0.1404),doubleToFloat(0.3861),doubleToFloat(0.1398),doubleToFloat(0.3871),doubleToFloat(0.0221),doubleToFloat(0.3871),doubleToFloat(0.0221),doubleToFloat(0.3871),doubleToFloat(0.0221),doubleToFloat(0.4330),doubleToFloat(0.0595),doubleToFloat(0.4411),doubleToFloat(0.0186),doubleToFloat(0.4244),doubleToFloat(0.1312),doubleToFloat(0.4330),doubleToFloat(0.0595)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4244),doubleToFloat(0.1312),doubleToFloat(0.4411),doubleToFloat(0.0186),doubleToFloat(0.4411),doubleToFloat(0.0186),doubleToFloat(0.4411),doubleToFloat(0.0186),doubleToFloat(0.3861),doubleToFloat(0.1398),doubleToFloat(0.3836),doubleToFloat(0.1404),doubleToFloat(0.3861),doubleToFloat(0.1398),doubleToFloat(0.4244),doubleToFloat(0.1312),doubleToFloat(0.4244),doubleToFloat(0.1312),doubleToFloat(0.4411),doubleToFloat(0.0186)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4330),doubleToFloat(0.0595),doubleToFloat(0.4244),doubleToFloat(0.1312),doubleToFloat(0.4244),doubleToFloat(0.1312),doubleToFloat(0.4330),doubleToFloat(0.0595),doubleToFloat(0.4411),doubleToFloat(0.0186),doubleToFloat(0.4411),doubleToFloat(0.0186)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=13, element #119, 264 total numbers */
	this.IndexedFaceSet_13_119_coordIndex = new MFInt32(Java.to([10,4,3,-1,11,10,3,-1,0,11,3,-1,1,12,11,-1,11,0,1,-1,1,9,16,-1,16,12,1,-1,2,4,10,-1,10,17,2,-1,6,8,13,-1,6,13,14,-1,5,6,14,-1,7,5,14,-1,14,15,7,-1,7,15,16,-1,16,9,7,-1,2,17,13,-1,13,8,2,-1,19,18,24,-1,22,21,20,-1,23,22,20,-1,24,23,20,-1,19,24,20,-1,0,18,19,-1,19,1,0,-1,1,19,20,-1,20,9,1,-1,9,20,21,-1,21,7,9,-1,7,21,22,-1,22,5,7,-1,5,22,23,-1,23,6,5,-1,6,23,24,-1,24,3,6,-1,3,24,18,-1,18,0,3,-1,2,8,6,-1,2,6,3,-1,4,2,3,-1,28,29,25,-1,25,26,28,-1,35,28,26,-1,26,27,35,-1,27,40,35,-1,25,30,31,-1,31,26,25,-1,31,32,27,-1,27,26,31,-1,32,41,40,-1,40,27,32,-1,42,30,25,-1,25,29,42,-1,28,33,34,-1,34,29,28,-1,35,36,33,-1,33,28,35,-1,36,35,40,-1,34,33,38,-1,38,37,34,-1,38,33,36,-1,36,39,38,-1,39,36,40,-1,40,41,39,-1,42,29,34,-1,34,37,42,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=13, element #119, 264 total numbers */
	this.IndexedFaceSet_13_119_texCoordIndex = new MFInt32(Java.to([12,5,4,-1,13,12,4,-1,0,13,4,-1,1,14,13,-1,13,0,1,-1,1,3,19,-1,19,14,1,-1,2,5,12,-1,12,21,2,-1,7,10,15,-1,7,15,16,-1,6,7,16,-1,8,6,16,-1,16,17,8,-1,8,17,18,-1,18,11,8,-1,9,20,15,-1,15,10,9,-1,23,22,28,-1,26,25,24,-1,27,26,24,-1,28,27,24,-1,23,28,24,-1,0,22,23,-1,23,1,0,-1,1,23,24,-1,24,3,1,-1,11,24,25,-1,25,8,11,-1,8,25,26,-1,26,6,8,-1,6,26,27,-1,27,7,6,-1,7,27,28,-1,28,4,7,-1,4,28,22,-1,22,0,4,-1,9,10,7,-1,9,7,4,-1,5,9,4,-1,30,29,31,-1,31,32,30,-1,33,30,32,-1,32,34,33,-1,34,35,33,-1,31,36,37,-1,37,32,31,-1,37,38,34,-1,34,32,37,-1,38,39,35,-1,35,34,38,-1,40,36,31,-1,31,29,40,-1,41,42,43,-1,43,44,41,-1,45,46,42,-1,42,41,45,-1,46,45,50,-1,43,42,48,-1,48,47,43,-1,48,42,46,-1,46,49,48,-1,49,46,50,-1,50,51,49,-1,52,44,43,-1,43,47,52,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=14, element #119, 129 total numbers made up of 43 3-tuple values */
	this.Coordinate_14_119_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(-2.9270),doubleToFloat(-1.6270),doubleToFloat(-1.0130),doubleToFloat(-2.0890),doubleToFloat(-3.6480),doubleToFloat(-1.0130),doubleToFloat(0.0),doubleToFloat(0.2797),doubleToFloat(0.3064),doubleToFloat(-2.0450),doubleToFloat(-0.3017),doubleToFloat(-1.0130),doubleToFloat(-1.6950),doubleToFloat(0.0029),doubleToFloat(-0.0151),doubleToFloat(2.9270),doubleToFloat(-1.6270),doubleToFloat(-1.0130),doubleToFloat(2.0450),doubleToFloat(-0.3017),doubleToFloat(-1.0130),doubleToFloat(2.0890),doubleToFloat(-3.6480),doubleToFloat(-1.0130),doubleToFloat(1.6950),doubleToFloat(0.0029),doubleToFloat(-0.0151),doubleToFloat(0.0),doubleToFloat(-3.6480),doubleToFloat(-1.0130)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.7400),doubleToFloat(-0.3226),doubleToFloat(1.1580),doubleToFloat(-2.6610),doubleToFloat(-1.8660),doubleToFloat(0.9192),doubleToFloat(-2.1400),doubleToFloat(-3.6480),doubleToFloat(0.9192),doubleToFloat(1.7400),doubleToFloat(-0.3226),doubleToFloat(1.1580),doubleToFloat(2.6610),doubleToFloat(-1.8660),doubleToFloat(0.9192),doubleToFloat(2.1400),doubleToFloat(-3.6480),doubleToFloat(0.9192),doubleToFloat(0.0),doubleToFloat(-3.6480),doubleToFloat(0.9192),doubleToFloat(0.0),doubleToFloat(-0.0274),doubleToFloat(1.6610),doubleToFloat(-2.4050),doubleToFloat(-1.6560),doubleToFloat(-1.9150),doubleToFloat(-1.7500),doubleToFloat(-2.9420),doubleToFloat(-1.9150)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.0),doubleToFloat(-2.9420),doubleToFloat(-1.9150),doubleToFloat(1.7500),doubleToFloat(-2.9420),doubleToFloat(-1.9150),doubleToFloat(2.4050),doubleToFloat(-1.6560),doubleToFloat(-1.9150),doubleToFloat(1.7420),doubleToFloat(-0.5681),doubleToFloat(-1.9150),doubleToFloat(-1.7420),doubleToFloat(-0.5681),doubleToFloat(-1.9150),doubleToFloat(-1.7840),doubleToFloat(-0.6480),doubleToFloat(2.3320),doubleToFloat(-2.2160),doubleToFloat(-2.2670),doubleToFloat(4.1440),doubleToFloat(-2.2160),doubleToFloat(-3.6480),doubleToFloat(3.7760),doubleToFloat(0.0),doubleToFloat(-2.2670),doubleToFloat(5.4630),doubleToFloat(0.0),doubleToFloat(-0.5463),doubleToFloat(3.9500)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.7400),doubleToFloat(-0.3226),doubleToFloat(1.1580),doubleToFloat(-2.6610),doubleToFloat(-1.8660),doubleToFloat(0.9192),doubleToFloat(-2.1400),doubleToFloat(-3.6480),doubleToFloat(0.9192),doubleToFloat(2.2160),doubleToFloat(-2.2670),doubleToFloat(4.1440),doubleToFloat(1.7840),doubleToFloat(-0.6480),doubleToFloat(2.3320),doubleToFloat(0.0),doubleToFloat(-3.6480),doubleToFloat(5.0960),doubleToFloat(2.2160),doubleToFloat(-3.6480),doubleToFloat(3.7760),doubleToFloat(1.7400),doubleToFloat(-0.3226),doubleToFloat(1.1580),doubleToFloat(2.6610),doubleToFloat(-1.8660),doubleToFloat(0.9192),doubleToFloat(2.1400),doubleToFloat(-3.6480),doubleToFloat(0.9192)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.0),doubleToFloat(-3.6480),doubleToFloat(3.7760),doubleToFloat(0.0),doubleToFloat(-3.6480),doubleToFloat(0.9192),doubleToFloat(0.0),doubleToFloat(-0.0274),doubleToFloat(1.6610)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=14, element #120, 106 total numbers made up of 53 2-tuple values */
	this.TextureCoordinate_14_120_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.4330),doubleToFloat(0.0595),doubleToFloat(0.4411),doubleToFloat(0.0186),doubleToFloat(0.4637),doubleToFloat(0.1714),doubleToFloat(0.4411),doubleToFloat(0.0186),doubleToFloat(0.4244),doubleToFloat(0.1312),doubleToFloat(0.4394),doubleToFloat(0.1472),doubleToFloat(0.4330),doubleToFloat(0.0595),doubleToFloat(0.4244),doubleToFloat(0.1312),doubleToFloat(0.4411),doubleToFloat(0.0186),doubleToFloat(0.4637),doubleToFloat(0.1714)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4394),doubleToFloat(0.1472),doubleToFloat(0.4411),doubleToFloat(0.0186),doubleToFloat(0.4640),doubleToFloat(0.1246),doubleToFloat(0.4607),doubleToFloat(0.0558),doubleToFloat(0.4904),doubleToFloat(0.0166),doubleToFloat(0.4640),doubleToFloat(0.1246),doubleToFloat(0.4607),doubleToFloat(0.0558),doubleToFloat(0.4904),doubleToFloat(0.0166),doubleToFloat(0.4949),doubleToFloat(0.0186),doubleToFloat(0.4949),doubleToFloat(0.0186)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4868),doubleToFloat(0.1432),doubleToFloat(0.4868),doubleToFloat(0.1432),doubleToFloat(0.4330),doubleToFloat(0.0595),doubleToFloat(0.4411),doubleToFloat(0.0186),doubleToFloat(0.4411),doubleToFloat(0.0186),doubleToFloat(0.4411),doubleToFloat(0.0186),doubleToFloat(0.4330),doubleToFloat(0.0595),doubleToFloat(0.4244),doubleToFloat(0.1312),doubleToFloat(0.4244),doubleToFloat(0.1312),doubleToFloat(0.5320),doubleToFloat(0.0980)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5645),doubleToFloat(0.0707),doubleToFloat(0.4885),doubleToFloat(0.1020),doubleToFloat(0.5026),doubleToFloat(0.0440),doubleToFloat(0.5945),doubleToFloat(0.0186),doubleToFloat(0.5487),doubleToFloat(0.0186),doubleToFloat(0.5487),doubleToFloat(0.0186),doubleToFloat(0.4640),doubleToFloat(0.1246),doubleToFloat(0.4607),doubleToFloat(0.0558),doubleToFloat(0.4904),doubleToFloat(0.0166),doubleToFloat(0.4949),doubleToFloat(0.0186)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4868),doubleToFloat(0.1432),doubleToFloat(0.5645),doubleToFloat(0.0707),doubleToFloat(0.5026),doubleToFloat(0.0440),doubleToFloat(0.4885),doubleToFloat(0.1020),doubleToFloat(0.5320),doubleToFloat(0.0980),doubleToFloat(0.5945),doubleToFloat(0.0186),doubleToFloat(0.5487),doubleToFloat(0.0186),doubleToFloat(0.4640),doubleToFloat(0.1246),doubleToFloat(0.4607),doubleToFloat(0.0558),doubleToFloat(0.4904),doubleToFloat(0.0166)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5487),doubleToFloat(0.0186),doubleToFloat(0.4949),doubleToFloat(0.0186),doubleToFloat(0.4868),doubleToFloat(0.1432)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=9, element #133, 1336 total numbers */
	this.IndexedFaceSet_9_133_coordIndex = new MFInt32(Java.to([3,4,7,-1,7,5,3,-1,4,66,68,-1,68,8,4,-1,4,8,7,-1,1,0,9,-1,9,10,1,-1,0,2,11,-1,11,9,0,-1,15,71,73,-1,73,16,15,-1,14,15,16,-1,16,17,14,-1,71,15,8,-1,8,68,71,-1,15,14,7,-1,7,8,15,-1,73,72,69,-1,69,70,73,-1,16,73,70,-1,70,12,16,-1,16,12,13,-1,13,17,16,-1,21,20,22,-1,22,23,21,-1,20,14,17,-1,17,22,20,-1,20,21,6,-1,6,5,20,-1,14,20,5,-1,5,7,14,-1,23,22,18,-1,18,19,23,-1,22,17,13,-1,13,18,22,-1,2,6,11,-1,28,27,30,-1,30,31,28,-1,27,29,32,-1,32,30,27,-1,29,21,23,-1,23,32,29,-1,27,28,10,-1,10,9,27,-1,29,27,9,-1,9,11,29,-1,21,29,11,-1,11,6,21,-1,31,30,24,-1,24,25,31,-1,30,32,26,-1,26,24,30,-1,32,23,19,-1,19,26,32,-1,12,70,74,-1,74,33,12,-1,24,26,36,-1,36,35,24,-1,33,74,75,-1,75,37,33,-1,34,33,37,-1,37,38,34,-1,39,12,33,-1,33,34,39,-1,19,40,26,-1,26,40,41,-1,41,36,26,-1,39,34,41,-1,41,40,39,-1,35,36,43,-1,43,42,35,-1,36,41,44,-1,44,43,36,-1,41,34,38,-1,38,44,41,-1,37,75,76,-1,76,45,37,-1,38,37,45,-1,45,46,38,-1,42,43,48,-1,48,47,42,-1,44,38,46,-1,46,49,44,-1,45,76,77,-1,77,50,45,-1,46,45,50,-1,50,51,46,-1,47,48,53,-1,53,52,47,-1,48,49,54,-1,54,53,48,-1,49,46,51,-1,51,54,49,-1,50,77,78,-1,78,55,50,-1,51,50,55,-1,55,56,51,-1,52,53,58,-1,58,57,52,-1,53,54,59,-1,59,58,53,-1,54,51,56,-1,56,59,54,-1,19,18,60,-1,60,61,19,-1,18,13,62,-1,62,60,18,-1,13,39,63,-1,63,62,13,-1,40,19,61,-1,61,64,40,-1,39,40,64,-1,64,63,39,-1,2,3,5,-1,2,5,6,-1,13,12,39,-1,25,24,35,-1,70,69,74,-1,67,68,66,-1,66,65,67,-1,79,71,68,-1,68,67,79,-1,72,73,71,-1,71,79,72,-1,49,48,43,-1,43,44,49,-1,63,64,60,-1,60,62,63,-1,60,64,61,-1,86,83,82,-1,82,84,86,-1,141,140,83,-1,83,87,141,-1,83,86,87,-1,88,80,1,-1,1,10,88,-1,89,81,80,-1,80,88,89,-1,144,143,93,-1,93,94,144,-1,94,93,92,-1,92,95,94,-1,87,93,143,-1,143,141,87,-1,86,92,93,-1,93,87,86,-1,69,72,144,-1,144,142,69,-1,142,144,94,-1,94,90,142,-1,91,90,94,-1,94,95,91,-1,100,98,99,-1,99,101,100,-1,95,92,98,-1,98,100,95,-1,85,99,98,-1,98,84,85,-1,84,98,92,-1,92,86,84,-1,96,100,101,-1,101,97,96,-1,91,95,100,-1,100,96,91,-1,81,89,85,-1,106,104,28,-1,28,31,106,-1,107,105,104,-1,104,106,107,-1,101,99,105,-1,105,107,101,-1,10,28,104,-1,104,88,10,-1,88,104,105,-1,105,89,88,-1,89,105,99,-1,99,85,89,-1,102,106,31,-1,31,25,102,-1,103,107,106,-1,106,102,103,-1,97,101,107,-1,107,103,97,-1,145,142,90,-1,90,108,145,-1,111,103,102,-1,102,110,111,-1,146,145,108,-1,108,112,146,-1,112,108,109,-1,109,113,112,-1,108,90,114,-1,114,109,108,-1,97,103,115,-1,116,115,103,-1,103,111,116,-1,116,109,114,-1,114,115,116,-1,118,111,110,-1,110,117,118,-1,119,116,111,-1,111,118,119,-1,113,109,116,-1,116,119,113,-1,147,146,112,-1,112,120,147,-1,120,112,113,-1,113,121,120,-1,123,118,117,-1,117,122,123,-1,121,113,119,-1,119,124,121,-1,148,147,120,-1,120,125,148,-1,125,120,121,-1,121,126,125,-1,128,123,122,-1,122,127,128,-1,129,124,123,-1,123,128,129,-1,126,121,124,-1,124,129,126,-1,149,148,125,-1,125,130,149,-1,130,125,126,-1,126,131,130,-1,133,128,127,-1,127,132,133,-1,134,129,128,-1,128,133,134,-1,131,126,129,-1,129,134,131,-1,135,96,97,-1,97,136,135,-1,137,91,96,-1,96,135,137,-1,138,114,91,-1,91,137,138,-1,136,97,115,-1,115,139,136,-1,139,115,114,-1,114,138,139,-1,81,84,82,-1,81,85,84,-1,91,114,90,-1,25,110,102,-1,142,145,69,-1,140,141,67,-1,67,65,140,-1,141,143,79,-1,79,67,141,-1,143,144,72,-1,72,79,143,-1,118,123,124,-1,124,119,118,-1,135,139,138,-1,138,137,135,-1,135,136,139,-1,25,35,110,-1,117,110,35,-1,35,42,117,-1,47,122,117,-1,117,42,47,-1,127,122,47,-1,47,52,127,-1,132,127,52,-1,52,57,132,-1,69,145,74,-1,75,74,145,-1,145,146,75,-1,76,75,146,-1,146,147,76,-1,77,76,147,-1,147,148,77,-1,78,77,148,-1,148,149,78,-1,57,78,149,-1,149,132,57,-1,58,55,78,-1,78,57,58,-1,59,56,55,-1,55,58,59,-1,132,149,130,-1,130,133,132,-1,133,130,131,-1,131,134,133,-1,151,150,155,-1,155,156,151,-1,150,152,157,-1,157,155,150,-1,152,153,158,-1,158,157,152,-1,153,154,159,-1,159,158,153,-1,160,161,162,-1,162,163,160,-1,154,160,163,-1,163,159,154,-1,168,164,151,-1,151,156,168,-1,169,165,164,-1,164,168,169,-1,170,166,165,-1,165,169,170,-1,171,167,166,-1,166,170,171,-1,162,161,172,-1,172,173,162,-1,173,172,167,-1,167,171,173,-1,4,3,158,-1,158,159,4,-1,66,4,159,-1,159,163,66,-1,0,1,156,-1,156,155,0,-1,2,0,155,-1,155,157,2,-1,3,2,157,-1,157,158,3,-1,65,66,163,-1,163,162,65,-1,82,83,171,-1,171,170,82,-1,83,140,173,-1,173,171,83,-1,1,80,168,-1,168,156,1,-1,80,81,169,-1,169,168,80,-1,81,82,170,-1,170,169,81,-1,140,65,162,-1,162,173,140,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=9, element #133, 1336 total numbers */
	this.IndexedFaceSet_9_133_texCoordIndex = new MFInt32(Java.to([2,3,0,-1,0,1,2,-1,3,6,4,-1,4,5,3,-1,3,5,0,-1,20,21,18,-1,18,19,20,-1,21,23,22,-1,22,18,21,-1,26,27,24,-1,24,25,26,-1,29,26,25,-1,25,28,29,-1,27,26,30,-1,30,31,27,-1,26,29,32,-1,32,30,26,-1,24,35,33,-1,33,34,24,-1,25,24,34,-1,34,36,25,-1,25,36,37,-1,37,28,25,-1,40,41,38,-1,38,39,40,-1,41,29,28,-1,28,38,41,-1,41,40,42,-1,42,43,41,-1,29,41,43,-1,43,32,29,-1,39,38,44,-1,44,45,39,-1,38,28,37,-1,37,44,38,-1,23,42,22,-1,48,162,161,-1,161,47,48,-1,49,51,50,-1,50,46,49,-1,51,40,39,-1,39,50,51,-1,163,48,164,-1,164,181,163,-1,51,49,18,-1,18,22,51,-1,40,51,22,-1,22,42,40,-1,47,166,165,-1,165,53,47,-1,46,50,54,-1,54,52,46,-1,50,39,45,-1,45,54,50,-1,36,34,55,-1,55,56,36,-1,52,54,57,-1,57,58,52,-1,56,55,59,-1,59,60,56,-1,62,56,60,-1,60,61,62,-1,63,36,56,-1,56,62,63,-1,45,64,54,-1,54,64,65,-1,65,57,54,-1,63,62,65,-1,65,64,63,-1,58,57,66,-1,66,67,58,-1,57,65,68,-1,68,66,57,-1,65,62,61,-1,61,68,65,-1,60,59,69,-1,69,70,60,-1,61,60,70,-1,70,71,61,-1,67,66,72,-1,72,73,67,-1,68,61,71,-1,71,74,68,-1,70,69,75,-1,75,76,70,-1,71,70,76,-1,76,77,71,-1,73,72,78,-1,78,79,73,-1,72,74,80,-1,80,78,72,-1,74,71,77,-1,77,80,74,-1,76,75,81,-1,81,82,76,-1,77,76,82,-1,82,83,77,-1,79,78,84,-1,84,85,79,-1,78,80,86,-1,86,84,78,-1,80,77,83,-1,83,86,80,-1,45,44,87,-1,87,88,45,-1,44,37,89,-1,89,87,44,-1,37,63,90,-1,90,89,37,-1,64,45,88,-1,88,91,64,-1,63,64,91,-1,91,90,63,-1,7,2,1,-1,23,43,42,-1,37,36,63,-1,53,167,168,-1,34,33,55,-1,9,4,6,-1,6,8,9,-1,93,27,31,-1,31,92,93,-1,35,24,27,-1,27,93,35,-1,74,72,66,-1,66,68,74,-1,90,91,87,-1,87,89,90,-1,87,91,88,-1,10,11,12,-1,12,13,10,-1,14,15,11,-1,11,16,14,-1,11,10,16,-1,94,95,169,-1,169,170,94,-1,96,97,95,-1,95,94,96,-1,98,101,99,-1,99,100,98,-1,100,99,102,-1,102,103,100,-1,104,99,101,-1,101,105,104,-1,106,102,99,-1,99,104,106,-1,33,35,98,-1,98,107,33,-1,107,98,100,-1,100,108,107,-1,109,108,100,-1,100,103,109,-1,110,113,111,-1,111,112,110,-1,103,102,113,-1,113,110,103,-1,114,111,113,-1,113,115,114,-1,115,113,102,-1,102,106,115,-1,116,110,112,-1,112,117,116,-1,109,103,110,-1,110,116,109,-1,97,96,114,-1,118,119,48,-1,48,47,118,-1,120,121,119,-1,119,118,120,-1,112,111,121,-1,121,120,112,-1,171,48,119,-1,119,94,171,-1,94,119,121,-1,121,96,94,-1,96,121,111,-1,111,114,96,-1,122,118,47,-1,47,53,122,-1,123,120,118,-1,118,122,123,-1,117,112,120,-1,120,123,117,-1,124,107,108,-1,108,125,124,-1,126,123,122,-1,122,127,126,-1,128,124,125,-1,125,129,128,-1,129,125,130,-1,130,131,129,-1,125,108,132,-1,132,130,125,-1,117,123,133,-1,134,133,123,-1,123,126,134,-1,134,130,132,-1,132,133,134,-1,135,126,127,-1,127,136,135,-1,137,134,126,-1,126,135,137,-1,131,130,134,-1,134,137,131,-1,138,128,129,-1,129,139,138,-1,139,129,131,-1,131,140,139,-1,141,135,136,-1,136,142,141,-1,140,131,137,-1,137,143,140,-1,144,138,139,-1,139,145,144,-1,145,139,140,-1,140,146,145,-1,147,141,142,-1,142,148,147,-1,149,143,141,-1,141,147,149,-1,146,140,143,-1,143,149,146,-1,150,144,145,-1,145,151,150,-1,151,145,146,-1,146,152,151,-1,153,147,148,-1,148,154,153,-1,155,149,147,-1,147,153,155,-1,152,146,149,-1,149,155,152,-1,156,116,117,-1,117,157,156,-1,158,109,116,-1,116,156,158,-1,159,132,109,-1,109,158,159,-1,157,117,133,-1,133,160,157,-1,160,133,132,-1,132,159,160,-1,17,13,12,-1,97,114,115,-1,109,132,108,-1,53,127,122,-1,107,124,33,-1,15,14,9,-1,9,8,15,-1,105,101,93,-1,93,92,105,-1,101,98,35,-1,35,93,101,-1,135,141,143,-1,143,137,135,-1,156,160,159,-1,159,158,156,-1,156,157,160,-1,53,172,127,-1,136,127,173,-1,173,174,136,-1,176,142,136,-1,136,175,176,-1,148,142,177,-1,177,178,148,-1,154,148,179,-1,179,180,154,-1,33,124,55,-1,59,55,124,-1,124,128,59,-1,69,59,128,-1,128,138,69,-1,75,69,138,-1,138,144,75,-1,81,75,144,-1,144,150,81,-1,85,81,150,-1,150,182,85,-1,84,82,81,-1,81,85,84,-1,86,83,82,-1,82,84,86,-1,154,150,151,-1,151,153,154,-1,153,151,152,-1,152,155,153,-1,185,186,183,-1,183,184,185,-1,186,188,187,-1,187,183,186,-1,188,190,189,-1,189,187,188,-1,190,192,191,-1,191,189,190,-1,195,196,193,-1,193,194,195,-1,192,195,194,-1,194,191,192,-1,197,198,185,-1,185,184,197,-1,199,200,198,-1,198,197,199,-1,201,202,200,-1,200,199,201,-1,203,204,202,-1,202,201,203,-1,193,196,205,-1,205,206,193,-1,206,205,204,-1,204,203,206,-1,3,2,189,-1,189,191,3,-1,6,3,191,-1,191,194,6,-1,207,208,184,-1,184,183,207,-1,7,207,183,-1,183,187,7,-1,2,7,187,-1,187,189,2,-1,8,6,194,-1,194,193,8,-1,12,11,203,-1,203,201,12,-1,11,15,206,-1,206,203,11,-1,208,209,197,-1,197,184,208,-1,209,17,199,-1,199,197,209,-1,17,12,201,-1,201,199,17,-1,15,8,193,-1,193,206,15,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=10, element #133, 522 total numbers made up of 174 3-tuple values */
	this.Coordinate_10_133_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(0.6928),doubleToFloat(14.7200),doubleToFloat(-1.2630),doubleToFloat(0.0),doubleToFloat(14.7700),doubleToFloat(-1.3550),doubleToFloat(1.4700),doubleToFloat(14.9300),doubleToFloat(-0.9099),doubleToFloat(2.0160),doubleToFloat(14.9100),doubleToFloat(0.2814),doubleToFloat(1.5730),doubleToFloat(14.6100),doubleToFloat(1.1100),doubleToFloat(2.9140),doubleToFloat(14.4600),doubleToFloat(0.3331),doubleToFloat(2.5990),doubleToFloat(15.3600),doubleToFloat(-1.4060),doubleToFloat(3.1870),doubleToFloat(13.6),doubleToFloat(1.5430),doubleToFloat(2.2390),doubleToFloat(13.3800),doubleToFloat(3.2300),doubleToFloat(0.9629),doubleToFloat(15.3900),doubleToFloat(-3.1520)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.0),doubleToFloat(15.3600),doubleToFloat(-3.3170),doubleToFloat(2.0350),doubleToFloat(15.4100),doubleToFloat(-2.8150),doubleToFloat(3.3160),doubleToFloat(12.3200),doubleToFloat(2.9700),doubleToFloat(5.0860),doubleToFloat(13.1300),doubleToFloat(2.0110),doubleToFloat(2.9820),doubleToFloat(14.2400),doubleToFloat(2.1810),doubleToFloat(2.2450),doubleToFloat(13.3800),doubleToFloat(3.8210),doubleToFloat(3.1310),doubleToFloat(12.6400),doubleToFloat(3.9),doubleToFloat(4.4200),doubleToFloat(13.9400),doubleToFloat(2.1050),doubleToFloat(5.6020),doubleToFloat(13.7300),doubleToFloat(0.1863),doubleToFloat(5.4720),doubleToFloat(13.0600),doubleToFloat(-1.4520)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(3.4390),doubleToFloat(15.3),doubleToFloat(0.3672),doubleToFloat(3.9530),doubleToFloat(14.4400),doubleToFloat(-2.2270),doubleToFloat(5.0730),doubleToFloat(14.7700),doubleToFloat(0.3672),doubleToFloat(4.6550),doubleToFloat(13.4900),doubleToFloat(-1.7800),doubleToFloat(1.8110),doubleToFloat(9.8370),doubleToFloat(-2.4300),doubleToFloat(0.0),doubleToFloat(9.5330),doubleToFloat(-2.5640),doubleToFloat(4.2410),doubleToFloat(10.8),doubleToFloat(-2.0430),doubleToFloat(1.0320),doubleToFloat(12.5400),doubleToFloat(-4.4270),doubleToFloat(0.0),doubleToFloat(12.5400),doubleToFloat(-4.5620),doubleToFloat(2.3900),doubleToFloat(12.9200),doubleToFloat(-3.9140)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(1.6770),doubleToFloat(9.1920),doubleToFloat(-3.1470),doubleToFloat(0.0),doubleToFloat(8.8700),doubleToFloat(-3.2660),doubleToFloat(4.1200),doubleToFloat(10.7100),doubleToFloat(-3.0320),doubleToFloat(4.2720),doubleToFloat(8.1320),doubleToFloat(4.1860),doubleToFloat(6.3540),doubleToFloat(8.7640),doubleToFloat(1.5430),doubleToFloat(2.1400),doubleToFloat(8.5820),doubleToFloat(-2.3620),doubleToFloat(4.3),doubleToFloat(8.6850),doubleToFloat(-1.8480),doubleToFloat(3.6950),doubleToFloat(5.5850),doubleToFloat(2.7680),doubleToFloat(5.0810),doubleToFloat(5.6220),doubleToFloat(1.5050),doubleToFloat(6.0960),doubleToFloat(10.2600),doubleToFloat(1.6700)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(5.9040),doubleToFloat(10.2500),doubleToFloat(-0.3303),doubleToFloat(5.5330),doubleToFloat(8.7180),doubleToFloat(-0.7796),doubleToFloat(1.4190),doubleToFloat(5.4730),doubleToFloat(-2.2200),doubleToFloat(3.5800),doubleToFloat(5.5280),doubleToFloat(-1.4340),doubleToFloat(4.7930),doubleToFloat(5.5780),doubleToFloat(-0.2489),doubleToFloat(3.6820),doubleToFloat(3.5920),doubleToFloat(2.8240),doubleToFloat(5.0770),doubleToFloat(3.6310),doubleToFloat(1.5270),doubleToFloat(1.2820),doubleToFloat(3.3030),doubleToFloat(-2.3650),doubleToFloat(3.5860),doubleToFloat(3.5010),doubleToFloat(-1.4370),doubleToFloat(4.7920),doubleToFloat(3.5750),doubleToFloat(-0.2999)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(4.1780),doubleToFloat(1.2620),doubleToFloat(3.9510),doubleToFloat(5.7600),doubleToFloat(1.2980),doubleToFloat(1.9940),doubleToFloat(1.5200),doubleToFloat(1.1050),doubleToFloat(-3.6780),doubleToFloat(3.9500),doubleToFloat(1.1150),doubleToFloat(-2.5360),doubleToFloat(5.3090),doubleToFloat(1.2200),doubleToFloat(-0.7397),doubleToFloat(3.7890),doubleToFloat(0.1874),doubleToFloat(3.2090),doubleToFloat(5.1660),doubleToFloat(0.2191),doubleToFloat(1.6850),doubleToFloat(1.5930),doubleToFloat(0.0680),doubleToFloat(-2.6760),doubleToFloat(3.6),doubleToFloat(0.0905),doubleToFloat(-1.8470),doubleToFloat(4.8410),doubleToFloat(0.1375),doubleToFloat(-0.4441)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(7.3990),doubleToFloat(13.4600),doubleToFloat(0.1863),doubleToFloat(6.9790),doubleToFloat(12.6400),doubleToFloat(-1.4520),doubleToFloat(6.9980),doubleToFloat(12.7),doubleToFloat(1.8990),doubleToFloat(6.2980),doubleToFloat(10.4200),doubleToFloat(1.6700),doubleToFloat(6.2920),doubleToFloat(10.4100),doubleToFloat(-0.3303),doubleToFloat(0.0),doubleToFloat(14.3400),doubleToFloat(1.7300),doubleToFloat(0.7806),doubleToFloat(14.3500),doubleToFloat(1.6080),doubleToFloat(0.0),doubleToFloat(12.1500),doubleToFloat(3.9010),doubleToFloat(1.3730),doubleToFloat(12.6900),doubleToFloat(3.6680),doubleToFloat(0.0),doubleToFloat(11.0500),doubleToFloat(3.8450)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(1.7130),doubleToFloat(11.8),doubleToFloat(3.6680),doubleToFloat(1.3800),doubleToFloat(12.6900),doubleToFloat(4.1370),doubleToFloat(0.0),doubleToFloat(11.4500),doubleToFloat(4.3610),doubleToFloat(1.5930),doubleToFloat(12.1200),doubleToFloat(4.3380),doubleToFloat(1.5790),doubleToFloat(8.7370),doubleToFloat(4.0810),doubleToFloat(1.2920),doubleToFloat(5.5540),doubleToFloat(3.2280),doubleToFloat(1.2810),doubleToFloat(3.3860),doubleToFloat(3.3360),doubleToFloat(1.6350),doubleToFloat(1.2310),doubleToFloat(4.5620),doubleToFloat(1.5950),doubleToFloat(0.1486),doubleToFloat(3.6450),doubleToFloat(0.0),doubleToFloat(12.2100),doubleToFloat(4.0600)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.6928),doubleToFloat(14.7200),doubleToFloat(-1.2630),doubleToFloat(-1.4700),doubleToFloat(14.9300),doubleToFloat(-0.9099),doubleToFloat(-2.0160),doubleToFloat(14.9100),doubleToFloat(0.2814),doubleToFloat(-1.5730),doubleToFloat(14.6100),doubleToFloat(1.1100),doubleToFloat(-2.9140),doubleToFloat(14.4600),doubleToFloat(0.3331),doubleToFloat(-2.5990),doubleToFloat(15.3600),doubleToFloat(-1.4060),doubleToFloat(-3.1870),doubleToFloat(13.6),doubleToFloat(1.5430),doubleToFloat(-2.2390),doubleToFloat(13.3800),doubleToFloat(3.2300),doubleToFloat(-0.9629),doubleToFloat(15.3900),doubleToFloat(-3.1520),doubleToFloat(-2.0350),doubleToFloat(15.4100),doubleToFloat(-2.8150)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-3.3160),doubleToFloat(12.3200),doubleToFloat(2.9700),doubleToFloat(-5.0860),doubleToFloat(13.1300),doubleToFloat(2.0110),doubleToFloat(-2.9820),doubleToFloat(14.2400),doubleToFloat(2.1810),doubleToFloat(-2.2450),doubleToFloat(13.3800),doubleToFloat(3.8210),doubleToFloat(-3.1310),doubleToFloat(12.6400),doubleToFloat(3.9),doubleToFloat(-4.4200),doubleToFloat(13.9400),doubleToFloat(2.1050),doubleToFloat(-5.6020),doubleToFloat(13.7300),doubleToFloat(0.1863),doubleToFloat(-5.4720),doubleToFloat(13.0600),doubleToFloat(-1.4520),doubleToFloat(-3.4390),doubleToFloat(15.3),doubleToFloat(0.3672),doubleToFloat(-3.9530),doubleToFloat(14.4400),doubleToFloat(-2.2270)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-5.0730),doubleToFloat(14.7700),doubleToFloat(0.3672),doubleToFloat(-4.6550),doubleToFloat(13.4900),doubleToFloat(-1.7800),doubleToFloat(-1.8110),doubleToFloat(9.8370),doubleToFloat(-2.4300),doubleToFloat(-4.2410),doubleToFloat(10.8),doubleToFloat(-2.0430),doubleToFloat(-1.0320),doubleToFloat(12.5400),doubleToFloat(-4.4270),doubleToFloat(-2.3900),doubleToFloat(12.9200),doubleToFloat(-3.9140),doubleToFloat(-1.6770),doubleToFloat(9.1920),doubleToFloat(-3.1470),doubleToFloat(-4.1200),doubleToFloat(10.7100),doubleToFloat(-3.0320),doubleToFloat(-4.2720),doubleToFloat(8.1320),doubleToFloat(4.1860),doubleToFloat(-6.3540),doubleToFloat(8.7640),doubleToFloat(1.5430)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-2.1400),doubleToFloat(8.5820),doubleToFloat(-2.3620),doubleToFloat(-4.3),doubleToFloat(8.6850),doubleToFloat(-1.8480),doubleToFloat(-3.6950),doubleToFloat(5.5850),doubleToFloat(2.7680),doubleToFloat(-5.0810),doubleToFloat(5.6220),doubleToFloat(1.5050),doubleToFloat(-6.0960),doubleToFloat(10.2600),doubleToFloat(1.6700),doubleToFloat(-5.9040),doubleToFloat(10.2500),doubleToFloat(-0.3303),doubleToFloat(-5.5330),doubleToFloat(8.7180),doubleToFloat(-0.7796),doubleToFloat(-1.4190),doubleToFloat(5.4730),doubleToFloat(-2.2200),doubleToFloat(-3.5800),doubleToFloat(5.5280),doubleToFloat(-1.4340),doubleToFloat(-4.7930),doubleToFloat(5.5780),doubleToFloat(-0.2489)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-3.6820),doubleToFloat(3.5920),doubleToFloat(2.8240),doubleToFloat(-5.0770),doubleToFloat(3.6310),doubleToFloat(1.5270),doubleToFloat(-1.2820),doubleToFloat(3.3030),doubleToFloat(-2.3650),doubleToFloat(-3.5860),doubleToFloat(3.5010),doubleToFloat(-1.4370),doubleToFloat(-4.7920),doubleToFloat(3.5750),doubleToFloat(-0.2999),doubleToFloat(-4.1780),doubleToFloat(1.2620),doubleToFloat(3.9510),doubleToFloat(-5.7600),doubleToFloat(1.2980),doubleToFloat(1.9940),doubleToFloat(-1.5200),doubleToFloat(1.1050),doubleToFloat(-3.6780),doubleToFloat(-3.9500),doubleToFloat(1.1150),doubleToFloat(-2.5360),doubleToFloat(-5.3090),doubleToFloat(1.2200),doubleToFloat(-0.7397)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-3.7890),doubleToFloat(0.1874),doubleToFloat(3.2090),doubleToFloat(-5.1660),doubleToFloat(0.2191),doubleToFloat(1.6850),doubleToFloat(-1.5930),doubleToFloat(0.0680),doubleToFloat(-2.6760),doubleToFloat(-3.6),doubleToFloat(0.0905),doubleToFloat(-1.8470),doubleToFloat(-4.8410),doubleToFloat(0.1375),doubleToFloat(-0.4441),doubleToFloat(-7.3990),doubleToFloat(13.4600),doubleToFloat(0.1863),doubleToFloat(-6.9790),doubleToFloat(12.6400),doubleToFloat(-1.4520),doubleToFloat(-6.9980),doubleToFloat(12.7),doubleToFloat(1.8990),doubleToFloat(-6.2980),doubleToFloat(10.4200),doubleToFloat(1.6700),doubleToFloat(-6.2920),doubleToFloat(10.4100),doubleToFloat(-0.3303)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.7806),doubleToFloat(14.3500),doubleToFloat(1.6080),doubleToFloat(-1.3730),doubleToFloat(12.6900),doubleToFloat(3.6680),doubleToFloat(-1.7130),doubleToFloat(11.8),doubleToFloat(3.6680),doubleToFloat(-1.3800),doubleToFloat(12.6900),doubleToFloat(4.1370),doubleToFloat(-1.5930),doubleToFloat(12.1200),doubleToFloat(4.3380),doubleToFloat(-1.5790),doubleToFloat(8.7370),doubleToFloat(4.0810),doubleToFloat(-1.2920),doubleToFloat(5.5540),doubleToFloat(3.2280),doubleToFloat(-1.2810),doubleToFloat(3.3860),doubleToFloat(3.3360),doubleToFloat(-1.6350),doubleToFloat(1.2310),doubleToFloat(4.5620),doubleToFloat(-1.5950),doubleToFloat(0.1486),doubleToFloat(3.6450)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.5369),doubleToFloat(17.7700),doubleToFloat(-0.9410),doubleToFloat(0.0),doubleToFloat(17.7700),doubleToFloat(-1.0120),doubleToFloat(1.1390),doubleToFloat(17.7700),doubleToFloat(-0.6672),doubleToFloat(1.5620),doubleToFloat(17.7700),doubleToFloat(0.2561),doubleToFloat(1.2190),doubleToFloat(17.7700),doubleToFloat(0.8985),doubleToFloat(0.5424),doubleToFloat(14.7200),doubleToFloat(-0.9523),doubleToFloat(0.0),doubleToFloat(14.7700),doubleToFloat(-1.0240),doubleToFloat(1.1510),doubleToFloat(14.9300),doubleToFloat(-0.6757),doubleToFloat(1.5780),doubleToFloat(14.9100),doubleToFloat(0.2570),doubleToFloat(1.2320),doubleToFloat(14.6100),doubleToFloat(0.9059)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.6050),doubleToFloat(17.9),doubleToFloat(1.2850),doubleToFloat(0.0),doubleToFloat(17.3400),doubleToFloat(1.3790),doubleToFloat(0.0),doubleToFloat(14.3400),doubleToFloat(1.3910),doubleToFloat(0.6111),doubleToFloat(14.3500),doubleToFloat(1.2960),doubleToFloat(-0.5369),doubleToFloat(17.7700),doubleToFloat(-0.9410),doubleToFloat(-1.1390),doubleToFloat(17.7700),doubleToFloat(-0.6672),doubleToFloat(-1.5620),doubleToFloat(17.7700),doubleToFloat(0.2561),doubleToFloat(-1.2190),doubleToFloat(17.7700),doubleToFloat(0.8985),doubleToFloat(-0.5424),doubleToFloat(14.7200),doubleToFloat(-0.9523),doubleToFloat(-1.1510),doubleToFloat(14.9300),doubleToFloat(-0.6757)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.5780),doubleToFloat(14.9100),doubleToFloat(0.2570),doubleToFloat(-1.2320),doubleToFloat(14.6100),doubleToFloat(0.9059),doubleToFloat(-0.6050),doubleToFloat(17.9),doubleToFloat(1.2850),doubleToFloat(-0.6111),doubleToFloat(14.3500),doubleToFloat(1.2960)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=10, element #134, 420 total numbers made up of 210 2-tuple values */
	this.TextureCoordinate_10_134_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.4756),doubleToFloat(0.6180),doubleToFloat(0.4724),doubleToFloat(0.6293),doubleToFloat(0.4618),doubleToFloat(0.6351),doubleToFloat(0.4566),doubleToFloat(0.6312),doubleToFloat(0.4542),doubleToFloat(0.6062),doubleToFloat(0.4644),doubleToFloat(0.6152),doubleToFloat(0.4472),doubleToFloat(0.6278),doubleToFloat(0.4554),doubleToFloat(0.6354),doubleToFloat(0.4381),doubleToFloat(0.6277),doubleToFloat(0.4381),doubleToFloat(0.5991)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4005),doubleToFloat(0.6180),doubleToFloat(0.4195),doubleToFloat(0.6312),doubleToFloat(0.4143),doubleToFloat(0.6351),doubleToFloat(0.4037),doubleToFloat(0.6293),doubleToFloat(0.4219),doubleToFloat(0.6062),doubleToFloat(0.4289),doubleToFloat(0.6278),doubleToFloat(0.4117),doubleToFloat(0.6152),doubleToFloat(0.4207),doubleToFloat(0.6354),doubleToFloat(0.2661),doubleToFloat(0.5914),doubleToFloat(0.3505),doubleToFloat(0.5919)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.3554),doubleToFloat(0.5911),doubleToFloat(0.2505),doubleToFloat(0.5754),doubleToFloat(0.2410),doubleToFloat(0.5920),doubleToFloat(0.2112),doubleToFloat(0.5805),doubleToFloat(0.0763),doubleToFloat(0.4945),doubleToFloat(0.1025),doubleToFloat(0.5076),doubleToFloat(0.0865),doubleToFloat(0.5614),doubleToFloat(0.0652),doubleToFloat(0.5465),doubleToFloat(0.1412),doubleToFloat(0.5207),doubleToFloat(0.1108),doubleToFloat(0.5655)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.0786),doubleToFloat(0.5849),doubleToFloat(0.0516),doubleToFloat(0.5759),doubleToFloat(0.1073),doubleToFloat(0.5839),doubleToFloat(0.0639),doubleToFloat(0.4488),doubleToFloat(0.0877),doubleToFloat(0.4617),doubleToFloat(0.0525),doubleToFloat(0.4715),doubleToFloat(0.1185),doubleToFloat(0.4741),doubleToFloat(0.1474),doubleToFloat(0.4856),doubleToFloat(0.1724),doubleToFloat(0.5255),doubleToFloat(0.2089),doubleToFloat(0.5196)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.2133),doubleToFloat(0.5560),doubleToFloat(0.1645),doubleToFloat(0.5709),doubleToFloat(0.2067),doubleToFloat(0.5908),doubleToFloat(0.1632),doubleToFloat(0.5887),doubleToFloat(0.1708),doubleToFloat(0.4854),doubleToFloat(0.1963),doubleToFloat(0.4863),doubleToFloat(0.2708),doubleToFloat(0.4736),doubleToFloat(0.3470),doubleToFloat(0.4316),doubleToFloat(0.3616),doubleToFloat(0.5328),doubleToFloat(0.2733),doubleToFloat(0.5359)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.2380),doubleToFloat(0.4930),doubleToFloat(0.2490),doubleToFloat(0.5451),doubleToFloat(0.2638),doubleToFloat(0.4568),doubleToFloat(0.3214),doubleToFloat(0.4203),doubleToFloat(0.2252),doubleToFloat(0.4828),doubleToFloat(0.0420),doubleToFloat(0.4060),doubleToFloat(0.0909),doubleToFloat(0.3980),doubleToFloat(0.2183),doubleToFloat(0.3850),doubleToFloat(0.3504),doubleToFloat(0.3844),doubleToFloat(0.0206),doubleToFloat(0.3452)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.0903),doubleToFloat(0.3446),doubleToFloat(0.1491),doubleToFloat(0.3449),doubleToFloat(0.1525),doubleToFloat(0.3869),doubleToFloat(0.1538),doubleToFloat(0.4251),doubleToFloat(0.1784),doubleToFloat(0.4249),doubleToFloat(0.1911),doubleToFloat(0.3858),doubleToFloat(0.2175),doubleToFloat(0.3427),doubleToFloat(0.3608),doubleToFloat(0.3469),doubleToFloat(0.1838),doubleToFloat(0.3438),doubleToFloat(0.0177),doubleToFloat(0.3051)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.0982),doubleToFloat(0.3020),doubleToFloat(0.1487),doubleToFloat(0.2975),doubleToFloat(0.2175),doubleToFloat(0.2944),doubleToFloat(0.3621),doubleToFloat(0.2922),doubleToFloat(0.1849),doubleToFloat(0.2961),doubleToFloat(0.0190),doubleToFloat(0.2349),doubleToFloat(0.1011),doubleToFloat(0.2410),doubleToFloat(0.1445),doubleToFloat(0.2419),doubleToFloat(0.2369),doubleToFloat(0.2375),doubleToFloat(0.3561),doubleToFloat(0.2404)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1927),doubleToFloat(0.2400),doubleToFloat(0.0206),doubleToFloat(0.2122),doubleToFloat(0.1067),doubleToFloat(0.2154),doubleToFloat(0.1463),doubleToFloat(0.2162),doubleToFloat(0.2270),doubleToFloat(0.2131),doubleToFloat(0.3536),doubleToFloat(0.2151),doubleToFloat(0.1879),doubleToFloat(0.2143),doubleToFloat(0.1715),doubleToFloat(0.4655),doubleToFloat(0.1797),doubleToFloat(0.4646),doubleToFloat(0.1569),doubleToFloat(0.4642)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1544),doubleToFloat(0.4288),doubleToFloat(0.1782),doubleToFloat(0.4286),doubleToFloat(0.0346),doubleToFloat(0.5664),doubleToFloat(0.0399),doubleToFloat(0.5407),doubleToFloat(0.2661),doubleToFloat(0.5914),doubleToFloat(0.2505),doubleToFloat(0.5754),doubleToFloat(0.2410),doubleToFloat(0.5920),doubleToFloat(0.2112),doubleToFloat(0.5805),doubleToFloat(0.0763),doubleToFloat(0.4945),doubleToFloat(0.0865),doubleToFloat(0.5614)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1025),doubleToFloat(0.5076),doubleToFloat(0.0652),doubleToFloat(0.5465),doubleToFloat(0.1108),doubleToFloat(0.5655),doubleToFloat(0.1412),doubleToFloat(0.5207),doubleToFloat(0.0786),doubleToFloat(0.5849),doubleToFloat(0.0516),doubleToFloat(0.5759),doubleToFloat(0.1073),doubleToFloat(0.5839),doubleToFloat(0.0877),doubleToFloat(0.4617),doubleToFloat(0.1185),doubleToFloat(0.4741),doubleToFloat(0.1474),doubleToFloat(0.4857)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1724),doubleToFloat(0.5255),doubleToFloat(0.2133),doubleToFloat(0.5560),doubleToFloat(0.2089),doubleToFloat(0.5196),doubleToFloat(0.1645),doubleToFloat(0.5709),doubleToFloat(0.2067),doubleToFloat(0.5908),doubleToFloat(0.1632),doubleToFloat(0.5887),doubleToFloat(0.1708),doubleToFloat(0.4854),doubleToFloat(0.1963),doubleToFloat(0.4863),doubleToFloat(0.2708),doubleToFloat(0.4736),doubleToFloat(0.2733),doubleToFloat(0.5359)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.2380),doubleToFloat(0.4930),doubleToFloat(0.2490),doubleToFloat(0.5451),doubleToFloat(0.2638),doubleToFloat(0.4568),doubleToFloat(0.2252),doubleToFloat(0.4828),doubleToFloat(0.0420),doubleToFloat(0.4060),doubleToFloat(0.0909),doubleToFloat(0.3980),doubleToFloat(0.2183),doubleToFloat(0.3850),doubleToFloat(0.3504),doubleToFloat(0.3844),doubleToFloat(0.0206),doubleToFloat(0.3452),doubleToFloat(0.0903),doubleToFloat(0.3446)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1525),doubleToFloat(0.3869),doubleToFloat(0.1491),doubleToFloat(0.3449),doubleToFloat(0.1538),doubleToFloat(0.4251),doubleToFloat(0.1784),doubleToFloat(0.4249),doubleToFloat(0.1911),doubleToFloat(0.3858),doubleToFloat(0.2175),doubleToFloat(0.3427),doubleToFloat(0.3608),doubleToFloat(0.3469),doubleToFloat(0.1838),doubleToFloat(0.3438),doubleToFloat(0.0177),doubleToFloat(0.3051),doubleToFloat(0.0982),doubleToFloat(0.3020)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1487),doubleToFloat(0.2975),doubleToFloat(0.2175),doubleToFloat(0.2944),doubleToFloat(0.3621),doubleToFloat(0.2922),doubleToFloat(0.1849),doubleToFloat(0.2961),doubleToFloat(0.0190),doubleToFloat(0.2349),doubleToFloat(0.1011),doubleToFloat(0.2410),doubleToFloat(0.1445),doubleToFloat(0.2419),doubleToFloat(0.2369),doubleToFloat(0.2375),doubleToFloat(0.3561),doubleToFloat(0.2404),doubleToFloat(0.1927),doubleToFloat(0.2400)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.0206),doubleToFloat(0.2122),doubleToFloat(0.1067),doubleToFloat(0.2154),doubleToFloat(0.1463),doubleToFloat(0.2162),doubleToFloat(0.2270),doubleToFloat(0.2131),doubleToFloat(0.3536),doubleToFloat(0.2151),doubleToFloat(0.1879),doubleToFloat(0.2143),doubleToFloat(0.1715),doubleToFloat(0.4655),doubleToFloat(0.1797),doubleToFloat(0.4646),doubleToFloat(0.1569),doubleToFloat(0.4642),doubleToFloat(0.1544),doubleToFloat(0.4288)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1782),doubleToFloat(0.4286),doubleToFloat(0.3477),doubleToFloat(0.4310),doubleToFloat(0.3623),doubleToFloat(0.5333),doubleToFloat(0.3623),doubleToFloat(0.5333),doubleToFloat(0.3505),doubleToFloat(0.5919),doubleToFloat(0.3223),doubleToFloat(0.4192),doubleToFloat(0.3477),doubleToFloat(0.4310),doubleToFloat(0.3223),doubleToFloat(0.4192),doubleToFloat(0.3518),doubleToFloat(0.3851),doubleToFloat(0.3554),doubleToFloat(0.5911)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.3505),doubleToFloat(0.5919),doubleToFloat(0.3505),doubleToFloat(0.5919),doubleToFloat(0.3518),doubleToFloat(0.3851),doubleToFloat(0.3518),doubleToFloat(0.3851),doubleToFloat(0.3629),doubleToFloat(0.3439),doubleToFloat(0.3629),doubleToFloat(0.3439),doubleToFloat(0.3633),doubleToFloat(0.2922),doubleToFloat(0.3633),doubleToFloat(0.2922),doubleToFloat(0.3553),doubleToFloat(0.2398),doubleToFloat(0.3553),doubleToFloat(0.2398)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.3555),doubleToFloat(0.2151),doubleToFloat(0.3511),doubleToFloat(0.5932),doubleToFloat(0.3536),doubleToFloat(0.2151),doubleToFloat(0.4444),doubleToFloat(0.6326),doubleToFloat(0.4381),doubleToFloat(0.6333),doubleToFloat(0.4381),doubleToFloat(0.6725),doubleToFloat(0.4444),doubleToFloat(0.6725),doubleToFloat(0.4516),doubleToFloat(0.6354),doubleToFloat(0.4515),doubleToFloat(0.6725),doubleToFloat(0.4566),doubleToFloat(0.6351)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4565),doubleToFloat(0.6725),doubleToFloat(0.4526),doubleToFloat(0.6312),doubleToFloat(0.4524),doubleToFloat(0.6725),doubleToFloat(0.4381),doubleToFloat(0.6277),doubleToFloat(0.4453),doubleToFloat(0.6278),doubleToFloat(0.4452),doubleToFloat(0.6742),doubleToFloat(0.4381),doubleToFloat(0.6669),doubleToFloat(0.4317),doubleToFloat(0.6326),doubleToFloat(0.4317),doubleToFloat(0.6725),doubleToFloat(0.4245),doubleToFloat(0.6354)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4246),doubleToFloat(0.6725),doubleToFloat(0.4195),doubleToFloat(0.6351),doubleToFloat(0.4197),doubleToFloat(0.6725),doubleToFloat(0.4235),doubleToFloat(0.6312),doubleToFloat(0.4237),doubleToFloat(0.6725),doubleToFloat(0.4309),doubleToFloat(0.6742),doubleToFloat(0.4309),doubleToFloat(0.6278),doubleToFloat(0.4462),doubleToFloat(0.6326),doubleToFloat(0.4381),doubleToFloat(0.6333),doubleToFloat(0.4299),doubleToFloat(0.6326)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=10, element #142, 2368 total numbers */
	this.IndexedFaceSet_10_142_coordIndex = new MFInt32(Java.to([58,44,47,-1,47,49,58,-1,49,60,59,-1,59,1,49,-1,56,48,47,-1,47,44,56,-1,50,51,59,-1,59,60,50,-1,173,168,58,-1,58,49,173,-1,171,173,49,-1,49,1,171,-1,14,12,18,-1,18,15,14,-1,162,160,14,-1,14,15,162,-1,16,57,33,-1,21,18,12,-1,18,79,19,-1,80,20,19,-1,11,10,79,-1,18,21,79,-1,11,79,21,-1,21,12,78,-1,11,21,22,-1,321,345,320,-1,322,323,346,-1,80,25,24,-1,24,20,80,-1,26,38,24,-1,23,13,38,-1,20,77,18,-1,18,19,20,-1,38,29,30,-1,30,23,38,-1,27,30,29,-1,27,28,30,-1,30,28,23,-1,33,31,16,-1,31,37,16,-1,28,34,23,-1,17,35,36,-1,36,28,17,-1,33,36,35,-1,17,32,35,-1,32,33,35,-1,33,34,36,-1,36,34,28,-1,10,19,79,-1,4,40,37,-1,40,42,41,-1,40,41,37,-1,40,4,42,-1,56,43,4,-1,4,46,56,-1,45,43,56,-1,56,44,45,-1,43,45,4,-1,48,56,46,-1,46,3,48,-1,50,60,3,-1,51,50,3,-1,3,2,51,-1,58,168,52,-1,52,168,170,-1,61,52,170,-1,4,45,52,-1,52,61,4,-1,52,45,44,-1,44,58,52,-1,61,170,53,-1,170,165,39,-1,39,53,170,-1,4,61,53,-1,53,42,4,-1,53,39,41,-1,41,42,53,-1,165,57,39,-1,13,23,54,-1,16,37,57,-1,41,39,57,-1,37,41,57,-1,57,165,166,-1,54,166,13,-1,33,57,34,-1,34,57,54,-1,34,54,23,-1,166,162,55,-1,55,162,15,-1,77,55,15,-1,15,18,77,-1,166,77,13,-1,77,166,55,-1,13,77,24,-1,24,38,13,-1,20,24,77,-1,54,57,166,-1,47,60,49,-1,48,3,47,-1,3,60,47,-1,3,63,2,-1,72,62,63,-1,3,65,63,-1,3,46,64,-1,64,66,3,-1,6,66,64,-1,3,66,65,-1,6,73,8,-1,8,73,67,-1,6,75,73,-1,5,71,73,-1,73,75,5,-1,6,70,75,-1,64,46,69,-1,75,70,69,-1,75,69,344,-1,2,63,62,-1,8,66,6,-1,63,8,72,-1,9,74,71,-1,68,74,9,-1,74,8,67,-1,68,72,74,-1,72,8,74,-1,67,71,74,-1,67,73,71,-1,65,8,63,-1,65,66,8,-1,70,6,64,-1,70,64,69,-1,4,0,344,-1,69,46,4,-1,69,4,344,-1,76,344,0,-1,5,76,0,-1,5,75,76,-1,75,344,76,-1,133,125,123,-1,123,120,133,-1,125,1,59,-1,59,134,125,-1,131,120,123,-1,123,124,131,-1,126,134,59,-1,59,51,126,-1,172,125,133,-1,133,167,172,-1,171,1,125,-1,125,172,171,-1,14,91,94,-1,94,12,14,-1,161,91,14,-1,14,160,161,-1,109,132,92,-1,12,94,97,-1,95,149,94,-1,95,96,150,-1,149,88,89,-1,149,97,94,-1,97,149,89,-1,78,12,97,-1,98,97,89,-1,325,348,324,-1,354,326,327,-1,150,96,100,-1,100,101,150,-1,100,114,102,-1,114,90,99,-1,96,95,94,-1,94,148,96,-1,114,99,106,-1,106,105,114,-1,105,106,103,-1,106,104,103,-1,99,104,106,-1,92,107,109,-1,92,113,107,-1,99,110,104,-1,93,104,112,-1,112,111,93,-1,111,112,109,-1,111,108,93,-1,111,109,108,-1,112,110,109,-1,104,110,112,-1,149,95,88,-1,113,116,83,-1,117,118,116,-1,113,117,116,-1,118,83,116,-1,131,122,83,-1,83,119,131,-1,121,120,131,-1,131,119,121,-1,83,121,119,-1,124,82,122,-1,122,131,124,-1,82,134,126,-1,51,2,82,-1,82,126,51,-1,127,167,133,-1,169,167,127,-1,169,127,135,-1,83,135,127,-1,127,121,83,-1,127,133,120,-1,120,121,127,-1,128,169,135,-1,169,128,115,-1,115,163,169,-1,83,118,128,-1,128,135,83,-1,128,118,117,-1,117,115,128,-1,115,132,163,-1,129,99,90,-1,132,113,92,-1,132,115,117,-1,132,117,113,-1,164,163,132,-1,90,164,129,-1,110,132,109,-1,129,132,110,-1,99,129,110,-1,130,161,164,-1,91,161,130,-1,148,94,91,-1,91,130,148,-1,90,148,164,-1,130,164,148,-1,90,114,100,-1,100,148,90,-1,148,100,96,-1,164,132,129,-1,125,134,123,-1,123,82,124,-1,123,134,82,-1,2,136,82,-1,136,62,72,-1,136,138,82,-1,82,139,137,-1,137,122,82,-1,137,139,85,-1,138,139,82,-1,87,144,85,-1,140,144,87,-1,144,146,85,-1,84,146,144,-1,144,143,84,-1,146,142,85,-1,141,122,137,-1,141,142,146,-1,347,141,146,-1,62,136,2,-1,85,139,87,-1,72,87,136,-1,143,145,9,-1,9,145,68,-1,145,140,87,-1,68,145,72,-1,72,145,87,-1,145,143,140,-1,143,144,140,-1,136,87,138,-1,87,139,138,-1,137,85,142,-1,141,137,142,-1,347,81,83,-1,83,122,141,-1,347,83,141,-1,81,347,147,-1,81,147,84,-1,147,146,84,-1,147,347,146,-1,162,166,152,-1,151,160,162,-1,162,152,151,-1,152,166,165,-1,165,154,152,-1,154,165,170,-1,170,156,154,-1,152,154,155,-1,155,151,152,-1,156,153,155,-1,155,154,156,-1,173,156,170,-1,170,168,173,-1,171,153,156,-1,156,173,171,-1,157,164,161,-1,151,157,161,-1,161,160,151,-1,157,158,163,-1,163,164,157,-1,158,159,169,-1,169,163,158,-1,157,151,155,-1,155,158,157,-1,159,158,155,-1,155,153,159,-1,172,167,169,-1,169,159,172,-1,171,172,159,-1,159,153,171,-1,355,237,223,-1,174,236,237,-1,236,174,175,-1,179,238,176,-1,179,176,177,-1,179,177,178,-1,178,174,179,-1,174,178,175,-1,180,226,236,-1,238,180,236,-1,180,230,226,-1,237,236,223,-1,223,236,218,-1,225,355,223,-1,223,224,225,-1,328,329,239,-1,330,331,350,-1,228,227,219,-1,219,222,228,-1,236,226,218,-1,174,237,0,-1,0,237,355,-1,0,179,174,-1,318,355,225,-1,220,228,222,-1,221,228,220,-1,5,0,355,-1,218,182,223,-1,183,223,182,-1,181,183,185,-1,181,185,242,-1,213,212,244,-1,244,246,213,-1,213,246,245,-1,245,214,213,-1,245,247,184,-1,184,214,245,-1,214,184,206,-1,206,207,214,-1,217,319,225,-1,225,224,217,-1,183,181,217,-1,217,224,183,-1,224,223,183,-1,226,209,218,-1,218,209,184,-1,182,185,183,-1,218,184,182,-1,207,208,232,-1,232,214,207,-1,232,215,214,-1,209,206,184,-1,186,192,190,-1,190,188,186,-1,197,192,208,-1,208,207,197,-1,190,222,219,-1,219,188,190,-1,194,195,190,-1,226,189,209,-1,187,189,226,-1,192,186,208,-1,191,216,205,-1,196,205,216,-1,195,196,216,-1,196,195,194,-1,209,189,198,-1,199,197,207,-1,207,206,199,-1,233,234,197,-1,197,199,233,-1,209,198,199,-1,199,206,209,-1,233,199,198,-1,198,200,233,-1,248,194,202,-1,201,205,250,-1,248,249,196,-1,196,194,248,-1,196,249,250,-1,250,205,196,-1,234,203,197,-1,203,192,197,-1,194,190,202,-1,200,198,189,-1,189,204,200,-1,202,190,192,-1,202,192,203,-1,205,210,191,-1,210,205,201,-1,220,222,193,-1,204,189,187,-1,187,210,204,-1,210,201,204,-1,210,187,191,-1,195,211,190,-1,195,193,211,-1,193,222,211,-1,211,222,190,-1,215,212,213,-1,213,214,215,-1,230,187,226,-1,230,191,187,-1,229,221,230,-1,229,228,221,-1,9,355,318,-1,5,355,71,-1,71,355,9,-1,231,247,185,-1,182,231,185,-1,184,231,182,-1,184,247,231,-1,238,230,180,-1,230,221,191,-1,221,235,191,-1,191,235,216,-1,221,220,235,-1,193,235,220,-1,216,235,193,-1,193,195,216,-1,250,249,233,-1,203,234,248,-1,234,233,249,-1,250,233,200,-1,249,248,234,-1,243,241,240,-1,241,243,247,-1,204,201,250,-1,200,204,250,-1,203,248,202,-1,247,243,242,-1,247,242,185,-1,332,333,349,-1,334,335,7,-1,292,304,353,-1,304,303,251,-1,252,251,303,-1,253,305,256,-1,254,253,256,-1,256,251,255,-1,255,254,256,-1,252,255,251,-1,303,295,257,-1,303,257,305,-1,295,298,257,-1,292,303,304,-1,288,303,292,-1,294,352,292,-1,292,353,294,-1,336,337,293,-1,306,338,339,-1,296,291,219,-1,219,227,296,-1,288,295,303,-1,81,304,251,-1,353,304,81,-1,251,256,81,-1,294,353,317,-1,291,296,289,-1,289,296,290,-1,353,81,84,-1,292,258,288,-1,258,292,259,-1,261,259,181,-1,242,261,181,-1,285,309,244,-1,244,212,285,-1,285,286,308,-1,308,309,285,-1,308,286,260,-1,260,310,308,-1,286,281,280,-1,280,260,286,-1,217,352,294,-1,294,319,217,-1,259,352,217,-1,217,181,259,-1,259,292,352,-1,288,282,295,-1,260,282,288,-1,259,261,258,-1,258,260,288,-1,281,286,232,-1,232,208,281,-1,286,215,232,-1,260,280,282,-1,186,188,264,-1,264,266,186,-1,271,281,208,-1,208,266,271,-1,264,188,219,-1,219,291,264,-1,264,269,268,-1,282,263,295,-1,295,263,262,-1,208,186,266,-1,279,287,265,-1,287,279,270,-1,287,270,269,-1,268,269,270,-1,272,263,282,-1,273,280,281,-1,281,271,273,-1,300,273,271,-1,271,301,300,-1,282,280,273,-1,273,272,282,-1,300,274,272,-1,272,273,300,-1,276,268,311,-1,313,279,275,-1,311,268,270,-1,270,312,311,-1,270,279,313,-1,313,312,270,-1,271,277,301,-1,271,266,277,-1,276,264,268,-1,274,278,263,-1,263,272,274,-1,266,264,276,-1,277,266,276,-1,265,283,279,-1,275,279,283,-1,267,291,289,-1,278,283,262,-1,262,263,278,-1,278,275,283,-1,265,262,283,-1,264,284,269,-1,284,267,269,-1,284,291,267,-1,264,291,284,-1,285,212,215,-1,215,286,285,-1,295,262,298,-1,262,265,298,-1,298,290,297,-1,290,296,297,-1,317,353,9,-1,143,353,84,-1,9,353,143,-1,261,310,299,-1,261,299,258,-1,258,299,260,-1,299,310,260,-1,257,298,305,-1,265,290,298,-1,265,302,290,-1,287,302,265,-1,302,289,290,-1,289,302,267,-1,287,269,267,-1,267,302,287,-1,300,312,313,-1,311,301,277,-1,312,300,301,-1,274,300,313,-1,301,311,312,-1,240,307,243,-1,310,243,307,-1,313,275,278,-1,313,278,274,-1,276,311,277,-1,242,243,310,-1,261,242,310,-1,351,340,341,-1,86,342,343,-1,244,314,315,-1,315,246,244,-1,246,315,247,-1,247,245,246,-1,244,309,316,-1,316,314,244,-1,309,308,310,-1,310,316,309,-1,175,176,238,-1,238,236,175,-1,177,176,175,-1,175,178,177,-1,252,303,305,-1,305,253,252,-1,254,255,252,-1,252,253,254,-1,318,225,319,-1,319,9,318,-1,317,9,319,-1,319,294,317,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=10, element #142, 2368 total numbers */
	this.IndexedFaceSet_10_142_texCoordIndex = new MFInt32(Java.to([0,3,2,-1,2,1,0,-1,1,6,5,-1,5,4,1,-1,7,8,2,-1,2,3,7,-1,9,10,5,-1,5,6,9,-1,11,12,0,-1,0,1,11,-1,13,11,1,-1,1,4,13,-1,14,17,16,-1,16,15,14,-1,18,19,14,-1,14,15,18,-1,22,21,20,-1,23,16,17,-1,16,25,24,-1,27,26,24,-1,29,28,25,-1,16,23,25,-1,29,25,23,-1,31,17,30,-1,29,23,32,-1,33,32,31,-1,33,31,30,-1,27,35,34,-1,34,26,27,-1,37,36,34,-1,39,38,36,-1,26,40,16,-1,16,24,26,-1,36,42,41,-1,41,39,36,-1,43,41,42,-1,43,44,41,-1,41,44,39,-1,20,45,22,-1,45,46,22,-1,44,47,39,-1,48,50,49,-1,49,44,48,-1,20,49,50,-1,48,51,50,-1,51,20,50,-1,20,47,49,-1,49,47,44,-1,28,24,25,-1,53,52,46,-1,52,55,54,-1,52,54,46,-1,52,53,55,-1,7,57,53,-1,53,56,7,-1,58,57,7,-1,7,59,58,-1,57,58,53,-1,8,7,56,-1,56,60,8,-1,9,6,60,-1,10,9,60,-1,60,61,10,-1,0,12,62,-1,62,12,63,-1,64,62,63,-1,53,58,62,-1,62,64,53,-1,62,58,59,-1,59,0,62,-1,64,63,65,-1,63,67,66,-1,66,65,63,-1,53,64,65,-1,65,55,53,-1,65,66,54,-1,54,55,65,-1,67,21,66,-1,38,39,68,-1,22,46,21,-1,54,66,21,-1,46,54,21,-1,21,67,69,-1,68,69,38,-1,20,21,47,-1,47,21,68,-1,47,68,39,-1,69,18,70,-1,70,18,15,-1,40,70,15,-1,15,16,40,-1,69,71,38,-1,71,69,70,-1,38,71,34,-1,34,36,38,-1,26,34,71,-1,68,21,69,-1,2,6,1,-1,8,60,2,-1,60,6,2,-1,74,73,72,-1,77,76,75,-1,74,78,73,-1,74,81,80,-1,80,79,74,-1,82,79,80,-1,74,79,78,-1,82,84,83,-1,83,84,85,-1,82,86,84,-1,87,90,89,-1,89,88,87,-1,92,91,88,-1,80,81,93,-1,88,91,94,-1,86,93,95,-1,72,73,96,-1,83,79,82,-1,73,83,97,-1,100,99,98,-1,103,102,101,-1,99,83,85,-1,104,97,99,-1,97,83,99,-1,105,90,102,-1,105,89,90,-1,107,106,75,-1,107,108,106,-1,109,82,80,-1,109,80,93,-1,112,111,110,-1,93,81,113,-1,93,113,95,-1,114,110,111,-1,115,114,111,-1,87,86,116,-1,86,95,116,-1,117,120,119,-1,119,118,117,-1,120,123,122,-1,122,121,120,-1,124,118,119,-1,119,125,124,-1,126,121,122,-1,122,127,126,-1,128,120,117,-1,117,129,128,-1,130,123,120,-1,120,128,130,-1,14,132,131,-1,131,17,14,-1,133,132,14,-1,14,19,133,-1,136,135,134,-1,17,131,137,-1,139,138,131,-1,139,141,140,-1,138,143,142,-1,138,137,131,-1,137,138,142,-1,30,17,144,-1,145,137,142,-1,144,145,146,-1,30,144,146,-1,140,141,148,-1,148,147,140,-1,148,150,149,-1,150,152,151,-1,141,139,131,-1,131,153,141,-1,150,151,155,-1,155,154,150,-1,154,155,156,-1,155,157,156,-1,151,157,155,-1,134,158,136,-1,134,159,158,-1,151,160,157,-1,161,157,163,-1,163,162,161,-1,162,163,136,-1,162,164,161,-1,162,136,164,-1,163,160,136,-1,157,160,163,-1,138,139,143,-1,159,166,165,-1,168,167,166,-1,159,168,166,-1,167,165,166,-1,124,170,165,-1,165,169,124,-1,171,172,124,-1,124,169,171,-1,165,171,169,-1,125,173,170,-1,170,124,125,-1,173,121,126,-1,127,174,173,-1,173,126,127,-1,175,129,117,-1,176,129,175,-1,176,175,177,-1,165,177,175,-1,175,171,165,-1,175,117,172,-1,172,171,175,-1,178,176,177,-1,176,178,180,-1,180,179,176,-1,165,167,178,-1,178,177,165,-1,178,167,168,-1,168,180,178,-1,180,135,179,-1,181,151,152,-1,135,159,134,-1,135,180,168,-1,135,168,159,-1,182,179,135,-1,152,182,181,-1,160,135,136,-1,181,135,160,-1,151,181,160,-1,183,133,182,-1,132,133,183,-1,153,131,132,-1,132,183,153,-1,152,184,182,-1,183,182,184,-1,152,150,148,-1,148,184,152,-1,184,148,141,-1,182,135,181,-1,120,121,119,-1,119,173,125,-1,119,121,173,-1,72,186,185,-1,187,76,77,-1,186,188,185,-1,185,191,190,-1,190,189,185,-1,190,191,192,-1,188,191,185,-1,194,193,192,-1,195,193,194,-1,193,196,192,-1,197,200,199,-1,199,198,197,-1,200,202,201,-1,203,189,190,-1,204,202,200,-1,205,203,196,-1,96,186,72,-1,192,191,194,-1,97,194,186,-1,207,206,100,-1,101,208,103,-1,206,195,194,-1,104,206,97,-1,97,206,194,-1,208,198,209,-1,198,199,209,-1,187,211,210,-1,211,212,210,-1,190,192,213,-1,203,190,213,-1,216,215,214,-1,217,189,203,-1,205,217,203,-1,215,216,218,-1,215,218,219,-1,220,196,197,-1,220,205,196,-1,18,69,221,-1,222,19,18,-1,18,221,222,-1,221,69,67,-1,67,223,221,-1,223,67,63,-1,63,224,223,-1,221,223,225,-1,225,222,221,-1,224,226,225,-1,225,223,224,-1,11,224,63,-1,63,12,11,-1,13,226,224,-1,224,11,13,-1,227,182,133,-1,222,227,133,-1,133,19,222,-1,227,228,179,-1,179,182,227,-1,228,229,176,-1,176,179,228,-1,227,222,225,-1,225,228,227,-1,229,228,225,-1,225,230,229,-1,128,129,176,-1,176,229,128,-1,130,128,229,-1,229,230,130,-1,233,232,231,-1,235,234,232,-1,234,235,236,-1,239,238,237,-1,239,237,240,-1,239,240,241,-1,241,235,239,-1,235,241,236,-1,243,242,234,-1,238,243,234,-1,243,244,242,-1,232,234,231,-1,231,234,245,-1,246,233,231,-1,231,247,246,-1,247,246,233,-1,231,247,233,-1,248,251,250,-1,250,249,248,-1,234,242,245,-1,235,232,252,-1,252,232,233,-1,252,239,235,-1,253,233,246,-1,254,248,249,-1,255,248,254,-1,256,252,233,-1,245,257,231,-1,258,231,257,-1,261,260,259,-1,261,259,262,-1,263,266,265,-1,265,264,263,-1,263,264,268,-1,268,267,263,-1,268,270,269,-1,269,267,268,-1,267,269,272,-1,272,271,267,-1,273,274,246,-1,246,247,273,-1,258,275,273,-1,273,247,258,-1,247,231,258,-1,278,277,276,-1,276,277,269,-1,279,259,260,-1,276,269,279,-1,271,281,280,-1,280,267,271,-1,280,282,267,-1,277,272,269,-1,284,287,286,-1,286,285,284,-1,288,287,281,-1,281,271,288,-1,286,249,250,-1,250,285,286,-1,290,289,286,-1,278,291,277,-1,292,291,278,-1,287,284,283,-1,295,294,293,-1,296,293,294,-1,289,296,294,-1,296,289,290,-1,277,291,297,-1,298,288,271,-1,271,272,298,-1,299,300,288,-1,288,298,299,-1,277,297,298,-1,298,272,277,-1,299,298,297,-1,297,301,299,-1,303,290,302,-1,305,293,304,-1,303,306,296,-1,296,290,303,-1,296,306,304,-1,304,293,296,-1,300,307,288,-1,307,287,288,-1,290,286,302,-1,301,297,291,-1,291,308,301,-1,302,286,287,-1,309,287,307,-1,293,310,295,-1,310,293,305,-1,254,249,311,-1,308,291,292,-1,292,310,308,-1,310,305,308,-1,310,292,295,-1,289,312,286,-1,289,311,312,-1,311,249,312,-1,312,249,286,-1,282,266,263,-1,263,267,282,-1,313,292,278,-1,313,295,292,-1,314,255,313,-1,314,248,255,-1,315,233,253,-1,256,233,316,-1,316,233,315,-1,317,270,259,-1,279,317,259,-1,269,317,279,-1,269,270,317,-1,238,244,243,-1,313,255,295,-1,255,318,295,-1,295,318,294,-1,255,254,318,-1,311,318,254,-1,294,318,311,-1,311,289,294,-1,304,306,299,-1,307,300,303,-1,300,299,306,-1,304,299,301,-1,306,303,300,-1,321,320,319,-1,320,321,270,-1,308,305,304,-1,301,308,304,-1,307,303,309,-1,270,321,262,-1,270,262,259,-1,252,322,239,-1,252,256,322,-1,231,232,233,-1,232,234,235,-1,236,235,234,-1,237,238,239,-1,240,237,239,-1,239,235,241,-1,241,240,239,-1,236,241,235,-1,234,242,243,-1,234,243,238,-1,242,244,243,-1,231,234,232,-1,245,234,231,-1,246,247,231,-1,231,233,246,-1,233,246,247,-1,233,247,231,-1,323,324,250,-1,250,251,323,-1,245,242,234,-1,252,232,235,-1,233,232,252,-1,235,239,252,-1,246,233,253,-1,324,323,325,-1,325,323,326,-1,233,252,256,-1,231,257,245,-1,257,231,258,-1,329,328,327,-1,330,329,327,-1,331,332,265,-1,265,266,331,-1,331,334,333,-1,333,332,331,-1,333,334,336,-1,336,335,333,-1,334,338,337,-1,337,336,334,-1,273,247,246,-1,246,274,273,-1,258,247,273,-1,273,275,258,-1,258,231,247,-1,341,340,339,-1,336,340,341,-1,328,329,342,-1,342,336,341,-1,338,334,280,-1,280,343,338,-1,334,282,280,-1,336,337,340,-1,284,285,345,-1,345,344,284,-1,346,338,343,-1,343,344,346,-1,345,285,250,-1,250,324,345,-1,345,348,347,-1,340,349,339,-1,339,349,350,-1,283,284,344,-1,353,352,351,-1,352,353,354,-1,352,354,348,-1,347,348,354,-1,355,349,340,-1,356,337,338,-1,338,346,356,-1,357,356,346,-1,346,358,357,-1,340,337,356,-1,356,355,340,-1,357,359,355,-1,355,356,357,-1,361,347,360,-1,363,353,362,-1,360,347,354,-1,354,364,360,-1,354,353,363,-1,363,364,354,-1,346,365,358,-1,346,344,365,-1,361,345,347,-1,359,366,349,-1,349,355,359,-1,344,345,361,-1,365,344,367,-1,351,368,353,-1,362,353,368,-1,369,324,325,-1,366,368,350,-1,350,349,366,-1,366,362,368,-1,351,350,368,-1,345,370,348,-1,370,369,348,-1,370,324,369,-1,345,324,370,-1,331,266,282,-1,282,334,331,-1,339,350,371,-1,350,351,371,-1,371,326,372,-1,326,323,372,-1,253,233,315,-1,316,233,256,-1,315,233,316,-1,329,335,373,-1,329,373,342,-1,342,373,336,-1,373,335,336,-1,243,244,238,-1,351,326,371,-1,351,374,326,-1,352,374,351,-1,374,325,326,-1,325,374,369,-1,352,348,369,-1,369,374,352,-1,357,364,363,-1,360,358,365,-1,364,357,358,-1,359,357,363,-1,358,360,364,-1,319,376,375,-1,335,375,376,-1,363,362,366,-1,363,366,359,-1,367,360,365,-1,330,375,335,-1,329,330,335,-1,239,322,252,-1,322,256,252,-1,265,378,377,-1,377,264,265,-1,264,377,270,-1,270,268,264,-1,265,332,379,-1,379,378,265,-1,332,333,335,-1,335,379,332,-1,380,383,382,-1,382,381,380,-1,384,383,380,-1,380,385,384,-1,380,381,382,-1,382,383,380,-1,384,385,380,-1,380,383,384,-1,253,246,274,-1,274,100,253,-1,253,100,274,-1,274,246,253,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=11, element #142, 1068 total numbers made up of 356 3-tuple values */
	this.Coordinate_11_142_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(4.7340),doubleToFloat(2.2950),doubleToFloat(-0.4780),doubleToFloat(0.0),doubleToFloat(7.9250),doubleToFloat(-7.3470),doubleToFloat(0.0),doubleToFloat(2.7380),doubleToFloat(-7.5510),doubleToFloat(2.5960),doubleToFloat(3.0550),doubleToFloat(-7.1130),doubleToFloat(5.8200),doubleToFloat(3.9150),doubleToFloat(-2.2390),doubleToFloat(3.7120),doubleToFloat(1.2250),doubleToFloat(-2.2900),doubleToFloat(3.2610),doubleToFloat(1.4530),doubleToFloat(-4.2520),doubleToFloat(5.6580),doubleToFloat(2.5990),doubleToFloat(-1.9830),doubleToFloat(1.8200),doubleToFloat(1.2890),doubleToFloat(-5.1640),doubleToFloat(0.0),doubleToFloat(0.1375),doubleToFloat(-3.5920)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(2.3950),doubleToFloat(4.9500),doubleToFloat(6.3460),doubleToFloat(0.7761),doubleToFloat(4.9120),doubleToFloat(6.8830),doubleToFloat(0.0),doubleToFloat(9.7400),doubleToFloat(6.8590),doubleToFloat(4.4080),doubleToFloat(9.2030),doubleToFloat(3.6730),doubleToFloat(0.0),doubleToFloat(11.2500),doubleToFloat(5.6500),doubleToFloat(2.2250),doubleToFloat(10.8900),doubleToFloat(5.3040),doubleToFloat(5.9620),doubleToFloat(4.4140),doubleToFloat(1.1650),doubleToFloat(4.0410),doubleToFloat(0.8383),doubleToFloat(3.5230),doubleToFloat(1.9720),doubleToFloat(9.6010),doubleToFloat(6.3570),doubleToFloat(2.5370),doubleToFloat(7.0010),doubleToFloat(6.3620)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(3.6940),doubleToFloat(6.6490),doubleToFloat(5.2870),doubleToFloat(0.4475),doubleToFloat(7.3410),doubleToFloat(7.3620),doubleToFloat(0.5130),doubleToFloat(6.6980),doubleToFloat(7.1190),doubleToFloat(4.8430),doubleToFloat(6.1880),doubleToFloat(3.4310),doubleToFloat(3.8860),doubleToFloat(6.5930),doubleToFloat(4.9510),doubleToFloat(3.6810),doubleToFloat(5.1940),doubleToFloat(5.0010),doubleToFloat(3.8260),doubleToFloat(5.0010),doubleToFloat(4.6640),doubleToFloat(3.2840),doubleToFloat(2.4720),doubleToFloat(4.4900),doubleToFloat(4.5430),doubleToFloat(4.1240),doubleToFloat(3.4990),doubleToFloat(3.8590),doubleToFloat(3.8610),doubleToFloat(4.3640)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(4.5750),doubleToFloat(3.7920),doubleToFloat(4.0060),doubleToFloat(5.0650),doubleToFloat(1.1830),doubleToFloat(1.2470),doubleToFloat(4.8630),doubleToFloat(1.7300),doubleToFloat(2.3700),doubleToFloat(5.2560),doubleToFloat(2.6950),doubleToFloat(2.0240),doubleToFloat(5.5490),doubleToFloat(5.5320),doubleToFloat(2.7140),doubleToFloat(5.1610),doubleToFloat(2.0350),doubleToFloat(2.7220),doubleToFloat(5.4420),doubleToFloat(3.8780),doubleToFloat(2.8870),doubleToFloat(6.1110),doubleToFloat(4.3890),doubleToFloat(0.2634),doubleToFloat(4.0620),doubleToFloat(5.8680),doubleToFloat(4.2210),doubleToFloat(6.0070),doubleToFloat(7.8560),doubleToFloat(-0.5637)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(7.0210),doubleToFloat(1.6610),doubleToFloat(-0.9157),doubleToFloat(6.5680),doubleToFloat(4.8550),doubleToFloat(-0.7308),doubleToFloat(6.3260),doubleToFloat(4.6910),doubleToFloat(-1.5500),doubleToFloat(6.2300),doubleToFloat(0.8303),doubleToFloat(-3.4410),doubleToFloat(4.9770),doubleToFloat(5.3640),doubleToFloat(-5.6730),doubleToFloat(6.3260),doubleToFloat(4.6560),doubleToFloat(-2.9500),doubleToFloat(4.2160),doubleToFloat(3.4270),doubleToFloat(-5.1310),doubleToFloat(3.5220),doubleToFloat(5.8180),doubleToFloat(-7.1660),doubleToFloat(3.4240),doubleToFloat(1.8600),doubleToFloat(-7.2780),doubleToFloat(2.4790),doubleToFloat(7.9250),doubleToFloat(-6.7570)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(1.9270),doubleToFloat(1.9810),doubleToFloat(-8.8900),doubleToFloat(0.0),doubleToFloat(3.7530),doubleToFloat(-8.4540),doubleToFloat(5.5840),doubleToFloat(7.6910),doubleToFloat(-2.7800),doubleToFloat(5.8530),doubleToFloat(7.6830),doubleToFloat(-1.7720),doubleToFloat(5.1810),doubleToFloat(8.4760),doubleToFloat(2.1040),doubleToFloat(3.0380),doubleToFloat(10.7900),doubleToFloat(4.4440),doubleToFloat(5.1230),doubleToFloat(3.0320),doubleToFloat(-5.3040),doubleToFloat(5.6640),doubleToFloat(8.0610),doubleToFloat(0.8754),doubleToFloat(4.7210),doubleToFloat(7.9250),doubleToFloat(-5.2580),doubleToFloat(0.0),doubleToFloat(5.5190),doubleToFloat(-7.9650)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(2.4790),doubleToFloat(5.8200),doubleToFloat(-7.4830),doubleToFloat(5.5950),doubleToFloat(7.6300),doubleToFloat(-2.1410),doubleToFloat(0.0),doubleToFloat(0.1227),doubleToFloat(-8.2810),doubleToFloat(1.1730),doubleToFloat(1.8320),doubleToFloat(-6.1140),doubleToFloat(3.9780),doubleToFloat(2.3240),doubleToFloat(-4.6400),doubleToFloat(2.9170),doubleToFloat(-0.9285),doubleToFloat(-7.3100),doubleToFloat(3.3230),doubleToFloat(2.0800),doubleToFloat(-5.3710),doubleToFloat(1.9680),doubleToFloat(-1.5610),doubleToFloat(-5.0130),doubleToFloat(0.0),doubleToFloat(-0.9435),doubleToFloat(-6.5400),doubleToFloat(4.7130),doubleToFloat(2.4440),doubleToFloat(-3.4770)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(4.4200),doubleToFloat(-0.2924),doubleToFloat(-4.4770),doubleToFloat(1.4110),doubleToFloat(0.5541),doubleToFloat(-3.4840),doubleToFloat(0.0),doubleToFloat(1.0350),doubleToFloat(-6.0310),doubleToFloat(2.2750),doubleToFloat(0.8807),doubleToFloat(-3.7630),doubleToFloat(0.9407),doubleToFloat(0.7103),doubleToFloat(-4.5370),doubleToFloat(3.8180),doubleToFloat(1.7290),doubleToFloat(-3.1390),doubleToFloat(4.6640),doubleToFloat(1.8660),doubleToFloat(-1.4360),doubleToFloat(3.6570),doubleToFloat(9.1880),doubleToFloat(4.9600),doubleToFloat(0.0),doubleToFloat(7.5480),doubleToFloat(7.4050),doubleToFloat(1.5590),doubleToFloat(7.2660),doubleToFloat(7.0080)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(2.7910),doubleToFloat(5.0410),doubleToFloat(6.0170),doubleToFloat(-4.7340),doubleToFloat(2.2950),doubleToFloat(-0.4780),doubleToFloat(-2.5960),doubleToFloat(3.0550),doubleToFloat(-7.1130),doubleToFloat(-5.8200),doubleToFloat(3.9150),doubleToFloat(-2.2390),doubleToFloat(-3.7120),doubleToFloat(1.2250),doubleToFloat(-2.2900),doubleToFloat(-3.2610),doubleToFloat(1.4530),doubleToFloat(-4.2520),doubleToFloat(-5.6580),doubleToFloat(2.5990),doubleToFloat(-1.9830),doubleToFloat(-1.8200),doubleToFloat(1.2890),doubleToFloat(-5.1640),doubleToFloat(-2.3950),doubleToFloat(4.9500),doubleToFloat(6.3460),doubleToFloat(-0.7761),doubleToFloat(4.9120),doubleToFloat(6.8830)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-4.4080),doubleToFloat(9.2030),doubleToFloat(3.6730),doubleToFloat(-2.2250),doubleToFloat(10.8900),doubleToFloat(5.3040),doubleToFloat(-5.9620),doubleToFloat(4.4140),doubleToFloat(1.1650),doubleToFloat(-4.0410),doubleToFloat(0.8383),doubleToFloat(3.5230),doubleToFloat(-1.9720),doubleToFloat(9.6010),doubleToFloat(6.3570),doubleToFloat(-2.5370),doubleToFloat(7.0010),doubleToFloat(6.3620),doubleToFloat(-3.6940),doubleToFloat(6.6490),doubleToFloat(5.2870),doubleToFloat(-0.4475),doubleToFloat(7.3410),doubleToFloat(7.3620),doubleToFloat(-0.5130),doubleToFloat(6.6980),doubleToFloat(7.1190),doubleToFloat(-4.8430),doubleToFloat(6.1880),doubleToFloat(3.4310)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-3.8860),doubleToFloat(6.5930),doubleToFloat(4.9510),doubleToFloat(-3.6810),doubleToFloat(5.1940),doubleToFloat(5.0010),doubleToFloat(-3.8260),doubleToFloat(5.0010),doubleToFloat(4.6640),doubleToFloat(-3.2840),doubleToFloat(2.4720),doubleToFloat(4.4900),doubleToFloat(-4.5430),doubleToFloat(4.1240),doubleToFloat(3.4990),doubleToFloat(-3.8590),doubleToFloat(3.8610),doubleToFloat(4.3640),doubleToFloat(-4.5750),doubleToFloat(3.7920),doubleToFloat(4.0060),doubleToFloat(-5.0650),doubleToFloat(1.1830),doubleToFloat(1.2470),doubleToFloat(-4.8630),doubleToFloat(1.7300),doubleToFloat(2.3700),doubleToFloat(-5.2560),doubleToFloat(2.6950),doubleToFloat(2.0240)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-5.5490),doubleToFloat(5.5320),doubleToFloat(2.7140),doubleToFloat(-5.1610),doubleToFloat(2.0350),doubleToFloat(2.7220),doubleToFloat(-5.4420),doubleToFloat(3.8780),doubleToFloat(2.8870),doubleToFloat(-6.1110),doubleToFloat(4.3890),doubleToFloat(0.2634),doubleToFloat(-4.0620),doubleToFloat(5.8680),doubleToFloat(4.2210),doubleToFloat(-6.0070),doubleToFloat(7.8560),doubleToFloat(-0.5637),doubleToFloat(-7.0210),doubleToFloat(1.6610),doubleToFloat(-0.9157),doubleToFloat(-6.5680),doubleToFloat(4.8550),doubleToFloat(-0.7308),doubleToFloat(-6.3260),doubleToFloat(4.6910),doubleToFloat(-1.5500),doubleToFloat(-6.2300),doubleToFloat(0.8303),doubleToFloat(-3.4410)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-4.9770),doubleToFloat(5.3640),doubleToFloat(-5.6730),doubleToFloat(-6.3260),doubleToFloat(4.6560),doubleToFloat(-2.9500),doubleToFloat(-4.2160),doubleToFloat(3.4270),doubleToFloat(-5.1310),doubleToFloat(-3.5220),doubleToFloat(5.8180),doubleToFloat(-7.1660),doubleToFloat(-3.4240),doubleToFloat(1.8600),doubleToFloat(-7.2780),doubleToFloat(-2.4790),doubleToFloat(7.9250),doubleToFloat(-6.7570),doubleToFloat(-1.9270),doubleToFloat(1.9810),doubleToFloat(-8.8900),doubleToFloat(-5.5840),doubleToFloat(7.6910),doubleToFloat(-2.7800),doubleToFloat(-5.8530),doubleToFloat(7.6830),doubleToFloat(-1.7720),doubleToFloat(-5.1810),doubleToFloat(8.4760),doubleToFloat(2.1040)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-3.0380),doubleToFloat(10.7900),doubleToFloat(4.4440),doubleToFloat(-5.1230),doubleToFloat(3.0320),doubleToFloat(-5.3040),doubleToFloat(-5.6640),doubleToFloat(8.0610),doubleToFloat(0.8754),doubleToFloat(-4.7210),doubleToFloat(7.9250),doubleToFloat(-5.2580),doubleToFloat(-2.4790),doubleToFloat(5.8200),doubleToFloat(-7.4830),doubleToFloat(-5.5950),doubleToFloat(7.6300),doubleToFloat(-2.1410),doubleToFloat(-1.1730),doubleToFloat(1.8320),doubleToFloat(-6.1140),doubleToFloat(-3.9780),doubleToFloat(2.3240),doubleToFloat(-4.6400),doubleToFloat(-2.9170),doubleToFloat(-0.9285),doubleToFloat(-7.3100),doubleToFloat(-3.3230),doubleToFloat(2.0800),doubleToFloat(-5.3710)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.9680),doubleToFloat(-1.5610),doubleToFloat(-5.0130),doubleToFloat(-4.7130),doubleToFloat(2.4440),doubleToFloat(-3.4770),doubleToFloat(-4.4200),doubleToFloat(-0.2924),doubleToFloat(-4.4770),doubleToFloat(-1.4110),doubleToFloat(0.5541),doubleToFloat(-3.4840),doubleToFloat(-2.2750),doubleToFloat(0.8807),doubleToFloat(-3.7630),doubleToFloat(-0.9407),doubleToFloat(0.7103),doubleToFloat(-4.5370),doubleToFloat(-3.8180),doubleToFloat(1.7290),doubleToFloat(-3.1390),doubleToFloat(-4.6640),doubleToFloat(1.8660),doubleToFloat(-1.4360),doubleToFloat(-3.6570),doubleToFloat(9.1880),doubleToFloat(4.9600),doubleToFloat(-1.5590),doubleToFloat(7.2660),doubleToFloat(7.0080)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-2.7910),doubleToFloat(5.0410),doubleToFloat(6.0170),doubleToFloat(0.0),doubleToFloat(12.8900),doubleToFloat(2.1910),doubleToFloat(2.4790),doubleToFloat(12.6),doubleToFloat(2.1910),doubleToFloat(0.0),doubleToFloat(12.7700),doubleToFloat(-3.0730),doubleToFloat(2.4790),doubleToFloat(13.0100),doubleToFloat(-0.5905),doubleToFloat(0.0),doubleToFloat(13.3),doubleToFloat(-0.5905),doubleToFloat(2.4790),doubleToFloat(12.4700),doubleToFloat(-3.0730),doubleToFloat(-2.4790),doubleToFloat(12.6),doubleToFloat(2.1910),doubleToFloat(-2.4790),doubleToFloat(13.0100),doubleToFloat(-0.5905),doubleToFloat(-2.4790),doubleToFloat(12.4700),doubleToFloat(-3.0730)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.0),doubleToFloat(12.1900),doubleToFloat(4.0690),doubleToFloat(-2.4790),doubleToFloat(11.8),doubleToFloat(3.6650),doubleToFloat(2.4790),doubleToFloat(11.8),doubleToFloat(3.6650),doubleToFloat(-4.7380),doubleToFloat(11.1300),doubleToFloat(-0.5905),doubleToFloat(-4.5810),doubleToFloat(10.5900),doubleToFloat(1.8930),doubleToFloat(4.7380),doubleToFloat(11.1300),doubleToFloat(-0.5905),doubleToFloat(4.5810),doubleToFloat(10.5900),doubleToFloat(1.8930),doubleToFloat(-4.7760),doubleToFloat(9.3420),doubleToFloat(-4.2540),doubleToFloat(4.7760),doubleToFloat(9.3420),doubleToFloat(-4.2540),doubleToFloat(-4.6510),doubleToFloat(10.9400),doubleToFloat(-2.6960)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(4.6510),doubleToFloat(10.9400),doubleToFloat(-2.6960),doubleToFloat(0.0),doubleToFloat(10.9100),doubleToFloat(-6.0640),doubleToFloat(-2.4790),doubleToFloat(10.5800),doubleToFloat(-5.8730),doubleToFloat(2.4790),doubleToFloat(10.5800),doubleToFloat(-5.8730),doubleToFloat(5.0380),doubleToFloat(2.0870),doubleToFloat(0.2634),doubleToFloat(5.3510),doubleToFloat(2.2690),doubleToFloat(0.2568),doubleToFloat(5.5750),doubleToFloat(4.9930),doubleToFloat(0.4877),doubleToFloat(5.7590),doubleToFloat(4.3130),doubleToFloat(-0.6689),doubleToFloat(5.6720),doubleToFloat(3.1190),doubleToFloat(-0.6884),doubleToFloat(5.0540),doubleToFloat(4.3890),doubleToFloat(0.2634)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(4.6170),doubleToFloat(3.9190),doubleToFloat(1.9810),doubleToFloat(0.0),doubleToFloat(-1.2990),doubleToFloat(4.2830),doubleToFloat(2.5070),doubleToFloat(0.2122),doubleToFloat(3.4670),doubleToFloat(1.2520),doubleToFloat(-0.7037),doubleToFloat(3.7530),doubleToFloat(2.1810),doubleToFloat(1.2900),doubleToFloat(4.7030),doubleToFloat(1.0830),doubleToFloat(-0.2065),doubleToFloat(4.5310),doubleToFloat(0.0),doubleToFloat(3.9490),doubleToFloat(5.8230),doubleToFloat(4.1220),doubleToFloat(4.7520),doubleToFloat(3.4340),doubleToFloat(0.0),doubleToFloat(4.4570),doubleToFloat(6.5290),doubleToFloat(3.8430),doubleToFloat(3.4860),doubleToFloat(3.4740)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.6247),doubleToFloat(4.2870),doubleToFloat(6.2170),doubleToFloat(3.8840),doubleToFloat(5.3400),doubleToFloat(4.1440),doubleToFloat(0.2615),doubleToFloat(3.9490),doubleToFloat(5.8230),doubleToFloat(2.1030),doubleToFloat(4.8810),doubleToFloat(5.7800),doubleToFloat(1.5990),doubleToFloat(4.2250),doubleToFloat(5.4290),doubleToFloat(2.1030),doubleToFloat(4.7630),doubleToFloat(5.7130),doubleToFloat(2.1750),doubleToFloat(4.4220),doubleToFloat(5.2920),doubleToFloat(1.0610),doubleToFloat(2.8410),doubleToFloat(5.2400),doubleToFloat(3.3450),doubleToFloat(2.8060),doubleToFloat(3.9870),doubleToFloat(2.5360),doubleToFloat(2.7410),doubleToFloat(4.5590)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(3.0820),doubleToFloat(3.5810),doubleToFloat(4.2060),doubleToFloat(3.3680),doubleToFloat(4.0770),doubleToFloat(4.0550),doubleToFloat(1.0440),doubleToFloat(3.8850),doubleToFloat(5.4540),doubleToFloat(1.3560),doubleToFloat(3.6420),doubleToFloat(5.2410),doubleToFloat(3.2270),doubleToFloat(3.7070),doubleToFloat(4.1110),doubleToFloat(3.0280),doubleToFloat(4.5670),doubleToFloat(4.6830),doubleToFloat(2.4720),doubleToFloat(2.0230),doubleToFloat(4.7220),doubleToFloat(0.9194),doubleToFloat(2.3540),doubleToFloat(5.3820),doubleToFloat(0.0),doubleToFloat(2.9980),doubleToFloat(5.8720),doubleToFloat(3.5150),doubleToFloat(2.1990),doubleToFloat(3.6310)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(3.6850),doubleToFloat(4.2250),doubleToFloat(3.8910),doubleToFloat(1.1100),doubleToFloat(4.5590),doubleToFloat(6.0740),doubleToFloat(0.0),doubleToFloat(1.1410),doubleToFloat(5.9680),doubleToFloat(0.1458),doubleToFloat(1.1410),doubleToFloat(5.9670),doubleToFloat(0.4592),doubleToFloat(1.4420),doubleToFloat(5.5490),doubleToFloat(0.0),doubleToFloat(1.7530),doubleToFloat(6.8110),doubleToFloat(3.2400),doubleToFloat(5.1320),doubleToFloat(4.8320),doubleToFloat(0.0),doubleToFloat(-1.2300),doubleToFloat(3.5750),doubleToFloat(3.4430),doubleToFloat(1.2200),doubleToFloat(3.2010),doubleToFloat(0.0),doubleToFloat(6.5770),doubleToFloat(6.5290)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(1.9720),doubleToFloat(6.6860),doubleToFloat(5.7690),doubleToFloat(3.5510),doubleToFloat(6.4680),doubleToFloat(4.6600),doubleToFloat(1.1250),doubleToFloat(6.6410),doubleToFloat(6.2240),doubleToFloat(2.7990),doubleToFloat(0.2961),doubleToFloat(1.9810),doubleToFloat(1.4380),doubleToFloat(-0.7799),doubleToFloat(2.9200),doubleToFloat(2.0980),doubleToFloat(-0.0622),doubleToFloat(0.3894),doubleToFloat(4.3420),doubleToFloat(2.9940),doubleToFloat(2.4840),doubleToFloat(0.0),doubleToFloat(9.8370),doubleToFloat(5.8),doubleToFloat(1.9720),doubleToFloat(10.1800),doubleToFloat(5.2980),doubleToFloat(3.8290),doubleToFloat(8.0810),doubleToFloat(4.0780)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(4.7540),doubleToFloat(5.5190),doubleToFloat(2.9700),doubleToFloat(1.6410),doubleToFloat(0.4521),doubleToFloat(4.7050),doubleToFloat(0.0),doubleToFloat(2.2060),doubleToFloat(6.4460),doubleToFloat(2.7950),doubleToFloat(3.5680),doubleToFloat(4.4970),doubleToFloat(1.8350),doubleToFloat(3.5870),doubleToFloat(5.0110),doubleToFloat(3.2430),doubleToFloat(5.1880),doubleToFloat(4.8260),doubleToFloat(4.0740),doubleToFloat(1.8130),doubleToFloat(1.4890),doubleToFloat(4.0730),doubleToFloat(1.5370),doubleToFloat(-0.2510),doubleToFloat(4.7980),doubleToFloat(4.4140),doubleToFloat(1.1650),doubleToFloat(3.5610),doubleToFloat(1.0810),doubleToFloat(-1.5540)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.0),doubleToFloat(0.5923),doubleToFloat(5.3700),doubleToFloat(0.2244),doubleToFloat(0.5923),doubleToFloat(5.3700),doubleToFloat(0.0),doubleToFloat(-0.2097),doubleToFloat(4.9490),doubleToFloat(0.0),doubleToFloat(0.1669),doubleToFloat(5.3750),doubleToFloat(0.0),doubleToFloat(0.7989),doubleToFloat(5.8430),doubleToFloat(0.4079),doubleToFloat(0.7711),doubleToFloat(5.7330),doubleToFloat(0.2244),doubleToFloat(0.7989),doubleToFloat(5.8430),doubleToFloat(1.1840),doubleToFloat(0.5011),doubleToFloat(4.8950),doubleToFloat(1.6950),doubleToFloat(4.1),doubleToFloat(5.3870),doubleToFloat(2.1830),doubleToFloat(4.2620),doubleToFloat(5.1590)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(2.9370),doubleToFloat(4.3720),doubleToFloat(4.6590),doubleToFloat(-5.0380),doubleToFloat(2.0870),doubleToFloat(0.2634),doubleToFloat(-5.3510),doubleToFloat(2.2690),doubleToFloat(0.2568),doubleToFloat(-5.5750),doubleToFloat(4.9930),doubleToFloat(0.4877),doubleToFloat(-5.7590),doubleToFloat(4.3130),doubleToFloat(-0.6689),doubleToFloat(-5.6720),doubleToFloat(3.1190),doubleToFloat(-0.6884),doubleToFloat(-5.0540),doubleToFloat(4.3890),doubleToFloat(0.2634),doubleToFloat(-4.6170),doubleToFloat(3.9190),doubleToFloat(1.9810),doubleToFloat(-2.5070),doubleToFloat(0.2122),doubleToFloat(3.4670),doubleToFloat(-1.2520),doubleToFloat(-0.7037),doubleToFloat(3.7530)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-2.1810),doubleToFloat(1.2900),doubleToFloat(4.7030),doubleToFloat(-1.0830),doubleToFloat(-0.2065),doubleToFloat(4.5310),doubleToFloat(-4.1220),doubleToFloat(4.7520),doubleToFloat(3.4340),doubleToFloat(-3.8430),doubleToFloat(3.4860),doubleToFloat(3.4740),doubleToFloat(-0.6247),doubleToFloat(4.2870),doubleToFloat(6.2170),doubleToFloat(-3.8840),doubleToFloat(5.3400),doubleToFloat(4.1440),doubleToFloat(-0.2615),doubleToFloat(3.9490),doubleToFloat(5.8230),doubleToFloat(-2.1030),doubleToFloat(4.8810),doubleToFloat(5.7800),doubleToFloat(-1.5990),doubleToFloat(4.2250),doubleToFloat(5.4290),doubleToFloat(-2.1030),doubleToFloat(4.7630),doubleToFloat(5.7130)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-2.1750),doubleToFloat(4.4220),doubleToFloat(5.2920),doubleToFloat(-1.0610),doubleToFloat(2.8410),doubleToFloat(5.2400),doubleToFloat(-3.3450),doubleToFloat(2.8060),doubleToFloat(3.9870),doubleToFloat(-2.5360),doubleToFloat(2.7410),doubleToFloat(4.5590),doubleToFloat(-3.0820),doubleToFloat(3.5810),doubleToFloat(4.2060),doubleToFloat(-3.3680),doubleToFloat(4.0770),doubleToFloat(4.0550),doubleToFloat(-1.0440),doubleToFloat(3.8850),doubleToFloat(5.4540),doubleToFloat(-1.3560),doubleToFloat(3.6420),doubleToFloat(5.2410),doubleToFloat(-3.2270),doubleToFloat(3.7070),doubleToFloat(4.1110),doubleToFloat(-3.0280),doubleToFloat(4.5670),doubleToFloat(4.6830)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-2.4720),doubleToFloat(2.0230),doubleToFloat(4.7220),doubleToFloat(-0.9194),doubleToFloat(2.3540),doubleToFloat(5.3820),doubleToFloat(-3.5150),doubleToFloat(2.1990),doubleToFloat(3.6310),doubleToFloat(-3.6850),doubleToFloat(4.2250),doubleToFloat(3.8910),doubleToFloat(-1.1100),doubleToFloat(4.5590),doubleToFloat(6.0740),doubleToFloat(-0.1458),doubleToFloat(1.1410),doubleToFloat(5.9670),doubleToFloat(-0.4592),doubleToFloat(1.4420),doubleToFloat(5.5490),doubleToFloat(-3.2400),doubleToFloat(5.1320),doubleToFloat(4.8320),doubleToFloat(-3.4430),doubleToFloat(1.2200),doubleToFloat(3.2010),doubleToFloat(-1.9720),doubleToFloat(6.6860),doubleToFloat(5.7690)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-3.5510),doubleToFloat(6.4680),doubleToFloat(4.6600),doubleToFloat(-1.1250),doubleToFloat(6.6410),doubleToFloat(6.2240),doubleToFloat(-2.7990),doubleToFloat(0.2961),doubleToFloat(1.9810),doubleToFloat(-1.4380),doubleToFloat(-0.7799),doubleToFloat(2.9200),doubleToFloat(-2.0980),doubleToFloat(-0.0622),doubleToFloat(0.3894),doubleToFloat(-4.3420),doubleToFloat(2.9940),doubleToFloat(2.4840),doubleToFloat(-1.9720),doubleToFloat(10.1800),doubleToFloat(5.2980),doubleToFloat(-3.8290),doubleToFloat(8.0810),doubleToFloat(4.0780),doubleToFloat(-4.7540),doubleToFloat(5.5190),doubleToFloat(2.9700),doubleToFloat(-1.6410),doubleToFloat(0.4521),doubleToFloat(4.7050)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-2.7950),doubleToFloat(3.5680),doubleToFloat(4.4970),doubleToFloat(-1.8350),doubleToFloat(3.5870),doubleToFloat(5.0110),doubleToFloat(-3.2430),doubleToFloat(5.1880),doubleToFloat(4.8260),doubleToFloat(-4.0740),doubleToFloat(1.8130),doubleToFloat(1.4890),doubleToFloat(-4.0730),doubleToFloat(1.5370),doubleToFloat(-0.2510),doubleToFloat(-4.7980),doubleToFloat(4.4140),doubleToFloat(1.1650),doubleToFloat(-3.5610),doubleToFloat(1.0810),doubleToFloat(-1.5540),doubleToFloat(-0.2244),doubleToFloat(0.5923),doubleToFloat(5.3700),doubleToFloat(-0.4079),doubleToFloat(0.7711),doubleToFloat(5.7330),doubleToFloat(-0.2244),doubleToFloat(0.7989),doubleToFloat(5.8430)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.1840),doubleToFloat(0.5011),doubleToFloat(4.8950),doubleToFloat(-1.6950),doubleToFloat(4.1),doubleToFloat(5.3870),doubleToFloat(-2.1830),doubleToFloat(4.2620),doubleToFloat(5.1590),doubleToFloat(-2.9370),doubleToFloat(4.3720),doubleToFloat(4.6590),doubleToFloat(0.0),doubleToFloat(0.5907),doubleToFloat(5.5450),doubleToFloat(0.2244),doubleToFloat(0.5907),doubleToFloat(5.5450),doubleToFloat(-0.2244),doubleToFloat(0.5907),doubleToFloat(5.5450),doubleToFloat(-2.0910),doubleToFloat(-0.0943),doubleToFloat(-1.6290),doubleToFloat(2.0910),doubleToFloat(-0.0943),doubleToFloat(-1.6290),doubleToFloat(0.0),doubleToFloat(-0.6349),doubleToFloat(1.5320)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.4475),doubleToFloat(7.3410),doubleToFloat(7.3620),doubleToFloat(0.7761),doubleToFloat(4.9120),doubleToFloat(6.8830),doubleToFloat(0.7761),doubleToFloat(4.9120),doubleToFloat(6.8830),doubleToFloat(0.4475),doubleToFloat(7.3410),doubleToFloat(7.3620),doubleToFloat(-0.7761),doubleToFloat(4.9120),doubleToFloat(6.8830),doubleToFloat(-0.4475),doubleToFloat(7.3410),doubleToFloat(7.3620),doubleToFloat(-0.4475),doubleToFloat(7.3410),doubleToFloat(7.3620),doubleToFloat(-0.7761),doubleToFloat(4.9120),doubleToFloat(6.8830),doubleToFloat(1.4380),doubleToFloat(-0.7799),doubleToFloat(2.9200),doubleToFloat(2.0980),doubleToFloat(-0.0622),doubleToFloat(0.3894)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(2.7990),doubleToFloat(0.2961),doubleToFloat(1.9810),doubleToFloat(1.4380),doubleToFloat(-0.7799),doubleToFloat(2.9200),doubleToFloat(4.7340),doubleToFloat(2.2950),doubleToFloat(-0.4780),doubleToFloat(5.6580),doubleToFloat(2.5990),doubleToFloat(-1.9830),doubleToFloat(4.7340),doubleToFloat(2.2950),doubleToFloat(-0.4780),doubleToFloat(3.7120),doubleToFloat(1.2250),doubleToFloat(-2.2900),doubleToFloat(-3.5610),doubleToFloat(1.0810),doubleToFloat(-1.5540),doubleToFloat(-2.0980),doubleToFloat(-0.0622),doubleToFloat(0.3894),doubleToFloat(-1.4380),doubleToFloat(-0.7799),doubleToFloat(2.9200),doubleToFloat(-2.7990),doubleToFloat(0.2961),doubleToFloat(1.9810)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-5.6580),doubleToFloat(2.5990),doubleToFloat(-1.9830),doubleToFloat(-4.7340),doubleToFloat(2.2950),doubleToFloat(-0.4780),doubleToFloat(-3.7120),doubleToFloat(1.2250),doubleToFloat(-2.2900),doubleToFloat(-4.7340),doubleToFloat(2.2950),doubleToFloat(-0.4780),doubleToFloat(5.6580),doubleToFloat(2.5990),doubleToFloat(-1.9830),doubleToFloat(0.5130),doubleToFloat(6.6980),doubleToFloat(7.1190),doubleToFloat(0.0),doubleToFloat(7.5480),doubleToFloat(7.4050),doubleToFloat(-5.6580),doubleToFloat(2.5990),doubleToFloat(-1.9830),doubleToFloat(-0.5130),doubleToFloat(6.6980),doubleToFloat(7.1190),doubleToFloat(5.0540),doubleToFloat(4.3890),doubleToFloat(0.2634)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(3.5610),doubleToFloat(1.0810),doubleToFloat(-1.5540),doubleToFloat(-5.0540),doubleToFloat(4.3890),doubleToFloat(0.2634),doubleToFloat(-1.4380),doubleToFloat(-0.7799),doubleToFloat(2.9200),doubleToFloat(-3.5610),doubleToFloat(1.0810),doubleToFloat(-1.5540),doubleToFloat(0.0),doubleToFloat(7.5480),doubleToFloat(7.4050),doubleToFloat(3.5610),doubleToFloat(1.0810),doubleToFloat(-1.5540)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=11, element #143, 772 total numbers made up of 386 2-tuple values */
	this.TextureCoordinate_11_143_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.9175),doubleToFloat(0.8974),doubleToFloat(0.9509),doubleToFloat(0.8981),doubleToFloat(0.9421),doubleToFloat(0.8701),doubleToFloat(0.9240),doubleToFloat(0.8702),doubleToFloat(0.9824),doubleToFloat(0.8971),doubleToFloat(0.9824),doubleToFloat(0.8682),doubleToFloat(0.9541),doubleToFloat(0.8718),doubleToFloat(0.9147),doubleToFloat(0.8129),doubleToFloat(0.9437),doubleToFloat(0.8153),doubleToFloat(0.9638),doubleToFloat(0.8095)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.9824),doubleToFloat(0.8090),doubleToFloat(0.9461),doubleToFloat(0.9230),doubleToFloat(0.9071),doubleToFloat(0.9135),doubleToFloat(0.9824),doubleToFloat(0.9287),doubleToFloat(0.7343),doubleToFloat(0.9169),doubleToFloat(0.7616),doubleToFloat(0.9147),doubleToFloat(0.7553),doubleToFloat(0.8982),doubleToFloat(0.7343),doubleToFloat(0.8968),doubleToFloat(0.7739),doubleToFloat(0.9327),doubleToFloat(0.7343),doubleToFloat(0.9365)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.8187),doubleToFloat(0.8433),doubleToFloat(0.8348),doubleToFloat(0.9045),doubleToFloat(0.8324),doubleToFloat(0.8647),doubleToFloat(0.7400),doubleToFloat(0.8745),doubleToFloat(0.7610),doubleToFloat(0.8768),doubleToFloat(0.7497),doubleToFloat(0.8755),doubleToFloat(0.7770),doubleToFloat(0.8787),doubleToFloat(0.7647),doubleToFloat(0.8593),doubleToFloat(0.7596),doubleToFloat(0.8565),doubleToFloat(0.7438),doubleToFloat(0.8546)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7343),doubleToFloat(0.8756),doubleToFloat(0.7372),doubleToFloat(0.8736),doubleToFloat(0.7394),doubleToFloat(0.8706),doubleToFloat(0.7405),doubleToFloat(0.8536),doubleToFloat(0.7808),doubleToFloat(0.8802),doubleToFloat(0.7786),doubleToFloat(0.8666),doubleToFloat(0.7875),doubleToFloat(0.8787),doubleToFloat(0.7821),doubleToFloat(0.8667),doubleToFloat(0.7952),doubleToFloat(0.9076),doubleToFloat(0.8011),doubleToFloat(0.8823)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7745),doubleToFloat(0.9003),doubleToFloat(0.7939),doubleToFloat(0.8518),doubleToFloat(0.7845),doubleToFloat(0.8549),doubleToFloat(0.7731),doubleToFloat(0.8049),doubleToFloat(0.7979),doubleToFloat(0.8609),doubleToFloat(0.8185),doubleToFloat(0.8054),doubleToFloat(0.8439),doubleToFloat(0.8655),doubleToFloat(0.8131),doubleToFloat(0.8741),doubleToFloat(0.7860),doubleToFloat(0.7876),doubleToFloat(0.8107),doubleToFloat(0.8538)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.8058),doubleToFloat(0.8252),doubleToFloat(0.8096),doubleToFloat(0.8166),doubleToFloat(0.8589),doubleToFloat(0.7975),doubleToFloat(0.8767),doubleToFloat(0.8622),doubleToFloat(0.8568),doubleToFloat(0.8668),doubleToFloat(0.8669),doubleToFloat(0.8674),doubleToFloat(0.9208),doubleToFloat(0.8549),doubleToFloat(0.8792),doubleToFloat(0.7991),doubleToFloat(0.8835),doubleToFloat(0.8633),doubleToFloat(0.9139),doubleToFloat(0.8636)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.9513),doubleToFloat(0.8400),doubleToFloat(0.9824),doubleToFloat(0.8358),doubleToFloat(0.8845),doubleToFloat(0.9021),doubleToFloat(0.8880),doubleToFloat(0.9310),doubleToFloat(0.8761),doubleToFloat(0.9036),doubleToFloat(0.8705),doubleToFloat(0.9018),doubleToFloat(0.8544),doubleToFloat(0.9020),doubleToFloat(0.8538),doubleToFloat(0.9345),doubleToFloat(0.8173),doubleToFloat(0.9068),doubleToFloat(0.8156),doubleToFloat(0.9257)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7753),doubleToFloat(0.9186),doubleToFloat(0.7832),doubleToFloat(0.9041),doubleToFloat(0.7338),doubleToFloat(0.8385),doubleToFloat(0.7279),doubleToFloat(0.8339),doubleToFloat(0.7208),doubleToFloat(0.8401),doubleToFloat(0.7397),doubleToFloat(0.7767),doubleToFloat(0.7338),doubleToFloat(0.7681),doubleToFloat(0.7338),doubleToFloat(0.7727),doubleToFloat(0.7192),doubleToFloat(0.8201),doubleToFloat(0.7171),doubleToFloat(0.8352)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7139),doubleToFloat(0.8364),doubleToFloat(0.7127),doubleToFloat(0.8419),doubleToFloat(0.7175),doubleToFloat(0.8320),doubleToFloat(0.7247),doubleToFloat(0.8312),doubleToFloat(0.7224),doubleToFloat(0.8292),doubleToFloat(0.7239),doubleToFloat(0.8169),doubleToFloat(0.7146),doubleToFloat(0.8334),doubleToFloat(0.7152),doubleToFloat(0.8309),doubleToFloat(0.7530),doubleToFloat(0.7762),doubleToFloat(0.7452),doubleToFloat(0.7720)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7409),doubleToFloat(0.7703),doubleToFloat(0.7560),doubleToFloat(0.7661),doubleToFloat(0.7502),doubleToFloat(0.7748),doubleToFloat(0.7102),doubleToFloat(0.8370),doubleToFloat(0.7574),doubleToFloat(0.7798),doubleToFloat(0.7054),doubleToFloat(0.8378),doubleToFloat(0.7338),doubleToFloat(0.8253),doubleToFloat(0.7338),doubleToFloat(0.8299),doubleToFloat(0.7267),doubleToFloat(0.8275),doubleToFloat(0.7291),doubleToFloat(0.8283)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7338),doubleToFloat(0.8254),doubleToFloat(0.7338),doubleToFloat(0.7682),doubleToFloat(0.7385),doubleToFloat(0.7711),doubleToFloat(0.7338),doubleToFloat(0.7628),doubleToFloat(0.7338),doubleToFloat(0.8200),doubleToFloat(0.7437),doubleToFloat(0.7597),doubleToFloat(0.7429),doubleToFloat(0.7740),doubleToFloat(0.7484),doubleToFloat(0.7629),doubleToFloat(0.7505),doubleToFloat(0.7780),doubleToFloat(0.7116),doubleToFloat(0.8233)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7622),doubleToFloat(0.7806),doubleToFloat(0.7576),doubleToFloat(0.7790),doubleToFloat(0.7630),doubleToFloat(0.7872),doubleToFloat(0.7046),doubleToFloat(0.8444),doubleToFloat(0.7572),doubleToFloat(0.7769),doubleToFloat(0.7524),doubleToFloat(0.7737),doubleToFloat(0.7104),doubleToFloat(0.8341),doubleToFloat(0.5511),doubleToFloat(0.8974),doubleToFloat(0.5442),doubleToFloat(0.8881),doubleToFloat(0.5261),doubleToFloat(0.8880)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5173),doubleToFloat(0.9160),doubleToFloat(0.5142),doubleToFloat(0.8897),doubleToFloat(0.4859),doubleToFloat(0.8861),doubleToFloat(0.4859),doubleToFloat(0.9150),doubleToFloat(0.5538),doubleToFloat(0.8129),doubleToFloat(0.5221),doubleToFloat(0.9505),doubleToFloat(0.5019),doubleToFloat(0.9448),doubleToFloat(0.4833),doubleToFloat(0.9442),doubleToFloat(0.5221),doubleToFloat(0.9409),doubleToFloat(0.5615),doubleToFloat(0.9135)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4859),doubleToFloat(0.9465),doubleToFloat(0.7132),doubleToFloat(0.8982),doubleToFloat(0.7070),doubleToFloat(0.9147),doubleToFloat(0.6947),doubleToFloat(0.9327),doubleToFloat(0.6362),doubleToFloat(0.8647),doubleToFloat(0.6338),doubleToFloat(0.9045),doubleToFloat(0.6499),doubleToFloat(0.8433),doubleToFloat(0.7286),doubleToFloat(0.8745),doubleToFloat(0.7189),doubleToFloat(0.8755),doubleToFloat(0.7076),doubleToFloat(0.8768)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7039),doubleToFloat(0.8593),doubleToFloat(0.6916),doubleToFloat(0.8787),doubleToFloat(0.7247),doubleToFloat(0.8546),doubleToFloat(0.7090),doubleToFloat(0.8565),doubleToFloat(0.7314),doubleToFloat(0.8736),doubleToFloat(0.7292),doubleToFloat(0.8706),doubleToFloat(0.7280),doubleToFloat(0.8536),doubleToFloat(0.6900),doubleToFloat(0.8666),doubleToFloat(0.6878),doubleToFloat(0.8802),doubleToFloat(0.6865),doubleToFloat(0.8667)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.6811),doubleToFloat(0.8787),doubleToFloat(0.6675),doubleToFloat(0.8823),doubleToFloat(0.6734),doubleToFloat(0.9076),doubleToFloat(0.6941),doubleToFloat(0.9003),doubleToFloat(0.6841),doubleToFloat(0.8549),doubleToFloat(0.6747),doubleToFloat(0.8518),doubleToFloat(0.6955),doubleToFloat(0.8049),doubleToFloat(0.6707),doubleToFloat(0.8609),doubleToFloat(0.6500),doubleToFloat(0.8054),doubleToFloat(0.6247),doubleToFloat(0.8655)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.6555),doubleToFloat(0.8741),doubleToFloat(0.6826),doubleToFloat(0.7876),doubleToFloat(0.6628),doubleToFloat(0.8252),doubleToFloat(0.6579),doubleToFloat(0.8538),doubleToFloat(0.6590),doubleToFloat(0.8166),doubleToFloat(0.5919),doubleToFloat(0.8622),doubleToFloat(0.6097),doubleToFloat(0.7975),doubleToFloat(0.6017),doubleToFloat(0.8674),doubleToFloat(0.6119),doubleToFloat(0.8668),doubleToFloat(0.5894),doubleToFloat(0.7991)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5477),doubleToFloat(0.8549),doubleToFloat(0.5851),doubleToFloat(0.8633),doubleToFloat(0.5547),doubleToFloat(0.8636),doubleToFloat(0.5069),doubleToFloat(0.9121),doubleToFloat(0.4833),doubleToFloat(0.9711),doubleToFloat(0.5841),doubleToFloat(0.9021),doubleToFloat(0.5806),doubleToFloat(0.9310),doubleToFloat(0.5925),doubleToFloat(0.9036),doubleToFloat(0.5981),doubleToFloat(0.9018),doubleToFloat(0.6148),doubleToFloat(0.9345)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.6142),doubleToFloat(0.9020),doubleToFloat(0.6513),doubleToFloat(0.9068),doubleToFloat(0.6530),doubleToFloat(0.9257),doubleToFloat(0.6932),doubleToFloat(0.9186),doubleToFloat(0.6854),doubleToFloat(0.9041),doubleToFloat(0.7468),doubleToFloat(0.8401),doubleToFloat(0.7397),doubleToFloat(0.8339),doubleToFloat(0.7279),doubleToFloat(0.7767),doubleToFloat(0.7484),doubleToFloat(0.8201),doubleToFloat(0.7549),doubleToFloat(0.8419)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7538),doubleToFloat(0.8364),doubleToFloat(0.7505),doubleToFloat(0.8352),doubleToFloat(0.7502),doubleToFloat(0.8320),doubleToFloat(0.7452),doubleToFloat(0.8292),doubleToFloat(0.7429),doubleToFloat(0.8312),doubleToFloat(0.7437),doubleToFloat(0.8169),doubleToFloat(0.7530),doubleToFloat(0.8334),doubleToFloat(0.7524),doubleToFloat(0.8309),doubleToFloat(0.7267),doubleToFloat(0.7703),doubleToFloat(0.7224),doubleToFloat(0.7720)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7146),doubleToFloat(0.7762),doubleToFloat(0.7175),doubleToFloat(0.7748),doubleToFloat(0.7116),doubleToFloat(0.7661),doubleToFloat(0.7574),doubleToFloat(0.8370),doubleToFloat(0.7102),doubleToFloat(0.7798),doubleToFloat(0.7622),doubleToFloat(0.8378),doubleToFloat(0.7385),doubleToFloat(0.8283),doubleToFloat(0.7409),doubleToFloat(0.8275),doubleToFloat(0.7291),doubleToFloat(0.7711),doubleToFloat(0.7239),doubleToFloat(0.7597)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7192),doubleToFloat(0.7629),doubleToFloat(0.7247),doubleToFloat(0.7740),doubleToFloat(0.7171),doubleToFloat(0.7780),doubleToFloat(0.7560),doubleToFloat(0.8233),doubleToFloat(0.7046),doubleToFloat(0.7872),doubleToFloat(0.7100),doubleToFloat(0.7790),doubleToFloat(0.7054),doubleToFloat(0.7806),doubleToFloat(0.7630),doubleToFloat(0.8444),doubleToFloat(0.7104),doubleToFloat(0.7769),doubleToFloat(0.7152),doubleToFloat(0.7737)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7572),doubleToFloat(0.8341),doubleToFloat(0.7881),doubleToFloat(0.9479),doubleToFloat(0.7343),doubleToFloat(0.9577),doubleToFloat(0.8497),doubleToFloat(0.9637),doubleToFloat(0.9158),doubleToFloat(0.9539),doubleToFloat(0.7343),doubleToFloat(0.9872),doubleToFloat(0.9824),doubleToFloat(0.9663),doubleToFloat(0.6805),doubleToFloat(0.9479),doubleToFloat(0.6189),doubleToFloat(0.9637),doubleToFloat(0.5528),doubleToFloat(0.9539)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4859),doubleToFloat(0.9842),doubleToFloat(0.4263),doubleToFloat(0.6263),doubleToFloat(0.4421),doubleToFloat(0.6351),doubleToFloat(0.4514),doubleToFloat(0.6319),doubleToFloat(0.4298),doubleToFloat(0.6370),doubleToFloat(0.4385),doubleToFloat(0.6390),doubleToFloat(0.4385),doubleToFloat(0.6403),doubleToFloat(0.4369),doubleToFloat(0.6596),doubleToFloat(0.4321),doubleToFloat(0.6555),doubleToFloat(0.4385),doubleToFloat(0.6553)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4451),doubleToFloat(0.6548),doubleToFloat(0.4452),doubleToFloat(0.6463),doubleToFloat(0.4227),doubleToFloat(0.6454),doubleToFloat(0.4263),doubleToFloat(0.6520),doubleToFloat(0.4193),doubleToFloat(0.6633),doubleToFloat(0.4176),doubleToFloat(0.6328),doubleToFloat(0.4376),doubleToFloat(0.6237),doubleToFloat(0.4196),doubleToFloat(0.6187),doubleToFloat(0.3384),doubleToFloat(0.9887),doubleToFloat(0.2979),doubleToFloat(0.9448)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.2441),doubleToFloat(0.9417),doubleToFloat(0.2441),doubleToFloat(0.9723),doubleToFloat(0.4437),doubleToFloat(0.6405),doubleToFloat(0.4519),doubleToFloat(0.6235),doubleToFloat(0.3384),doubleToFloat(0.9469),doubleToFloat(0.4140),doubleToFloat(0.9365),doubleToFloat(0.4566),doubleToFloat(0.6329),doubleToFloat(0.4157),doubleToFloat(0.6257),doubleToFloat(0.4137),doubleToFloat(0.6192),doubleToFloat(0.2959),doubleToFloat(0.6260)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.3051),doubleToFloat(0.6166),doubleToFloat(0.2580),doubleToFloat(0.6076),doubleToFloat(0.2606),doubleToFloat(0.6259),doubleToFloat(0.2511),doubleToFloat(0.6816),doubleToFloat(0.2548),doubleToFloat(0.6653),doubleToFloat(0.2441),doubleToFloat(0.6653),doubleToFloat(0.2441),doubleToFloat(0.6816),doubleToFloat(0.2661),doubleToFloat(0.6960),doubleToFloat(0.2636),doubleToFloat(0.6640),doubleToFloat(0.3484),doubleToFloat(0.6888)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.3007),doubleToFloat(0.6510),doubleToFloat(0.2881),doubleToFloat(0.7397),doubleToFloat(0.3623),doubleToFloat(0.7239),doubleToFloat(0.4151),doubleToFloat(0.6155),doubleToFloat(0.4295),doubleToFloat(0.6197),doubleToFloat(0.4116),doubleToFloat(0.6201),doubleToFloat(0.4088),doubleToFloat(0.6855),doubleToFloat(0.4123),doubleToFloat(0.7323),doubleToFloat(0.4518),doubleToFloat(0.7703),doubleToFloat(0.3640),doubleToFloat(0.6372)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.2441),doubleToFloat(0.7326),doubleToFloat(0.2496),doubleToFloat(0.7705),doubleToFloat(0.2441),doubleToFloat(0.7109),doubleToFloat(0.2441),doubleToFloat(0.7705),doubleToFloat(0.2441),doubleToFloat(0.8160),doubleToFloat(0.2441),doubleToFloat(0.8403),doubleToFloat(0.2740),doubleToFloat(0.8322),doubleToFloat(0.2566),doubleToFloat(0.8160),doubleToFloat(0.2949),doubleToFloat(0.7630),doubleToFloat(0.3447),doubleToFloat(0.8549)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.3206),doubleToFloat(0.8292),doubleToFloat(0.4279),doubleToFloat(0.7939),doubleToFloat(0.4413),doubleToFloat(0.8544),doubleToFloat(0.3889),doubleToFloat(0.8456),doubleToFloat(0.3991),doubleToFloat(0.8726),doubleToFloat(0.4299),doubleToFloat(0.8825),doubleToFloat(0.3482),doubleToFloat(0.8386),doubleToFloat(0.4041),doubleToFloat(0.7613),doubleToFloat(0.3654),doubleToFloat(0.7582),doubleToFloat(0.3778),doubleToFloat(0.7978)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.3319),doubleToFloat(0.7987),doubleToFloat(0.3916),doubleToFloat(0.7984),doubleToFloat(0.2943),doubleToFloat(0.8150),doubleToFloat(0.3252),doubleToFloat(0.8232),doubleToFloat(0.3846),doubleToFloat(0.8362),doubleToFloat(0.4052),doubleToFloat(0.8221),doubleToFloat(0.3485),doubleToFloat(0.8310),doubleToFloat(0.3090),doubleToFloat(0.8013),doubleToFloat(0.3985),doubleToFloat(0.8044),doubleToFloat(0.2937),doubleToFloat(0.8109)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4204),doubleToFloat(0.8292),doubleToFloat(0.3447),doubleToFloat(0.8606),doubleToFloat(0.2972),doubleToFloat(0.8452),doubleToFloat(0.4715),doubleToFloat(0.8911),doubleToFloat(0.4310),doubleToFloat(0.9594),doubleToFloat(0.4658),doubleToFloat(0.6252),doubleToFloat(0.4650),doubleToFloat(0.6281),doubleToFloat(0.3226),doubleToFloat(0.6487),doubleToFloat(0.3993),doubleToFloat(0.8753),doubleToFloat(0.2441),doubleToFloat(0.6554)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.2548),doubleToFloat(0.6554),doubleToFloat(0.2557),doubleToFloat(0.6351),doubleToFloat(0.4544),doubleToFloat(0.6426),doubleToFloat(0.1498),doubleToFloat(0.9887),doubleToFloat(0.1903),doubleToFloat(0.9448),doubleToFloat(0.1498),doubleToFloat(0.9469),doubleToFloat(0.0742),doubleToFloat(0.9365),doubleToFloat(0.2323),doubleToFloat(0.6076),doubleToFloat(0.1853),doubleToFloat(0.6166),doubleToFloat(0.1923),doubleToFloat(0.6260)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.2275),doubleToFloat(0.6259),doubleToFloat(0.2371),doubleToFloat(0.6816),doubleToFloat(0.2334),doubleToFloat(0.6653),doubleToFloat(0.2246),doubleToFloat(0.6640),doubleToFloat(0.2221),doubleToFloat(0.6960),doubleToFloat(0.1875),doubleToFloat(0.6510),doubleToFloat(0.1398),doubleToFloat(0.6888),doubleToFloat(0.1258),doubleToFloat(0.7239),doubleToFloat(0.2001),doubleToFloat(0.7397),doubleToFloat(0.0364),doubleToFloat(0.7703)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.0759),doubleToFloat(0.7323),doubleToFloat(0.0794),doubleToFloat(0.6855),doubleToFloat(0.1242),doubleToFloat(0.6372),doubleToFloat(0.2386),doubleToFloat(0.7705),doubleToFloat(0.2316),doubleToFloat(0.8160),doubleToFloat(0.2142),doubleToFloat(0.8322),doubleToFloat(0.1933),doubleToFloat(0.7630),doubleToFloat(0.1676),doubleToFloat(0.8292),doubleToFloat(0.1435),doubleToFloat(0.8549),doubleToFloat(0.0602),doubleToFloat(0.7939)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.0469),doubleToFloat(0.8544),doubleToFloat(0.0583),doubleToFloat(0.8825),doubleToFloat(0.0891),doubleToFloat(0.8726),doubleToFloat(0.0992),doubleToFloat(0.8456),doubleToFloat(0.1400),doubleToFloat(0.8386),doubleToFloat(0.0840),doubleToFloat(0.7613),doubleToFloat(0.1228),doubleToFloat(0.7582),doubleToFloat(0.1104),doubleToFloat(0.7978),doubleToFloat(0.1563),doubleToFloat(0.7987),doubleToFloat(0.0966),doubleToFloat(0.7984)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1630),doubleToFloat(0.8232),doubleToFloat(0.1939),doubleToFloat(0.8150),doubleToFloat(0.0830),doubleToFloat(0.8221),doubleToFloat(0.1036),doubleToFloat(0.8362),doubleToFloat(0.1397),doubleToFloat(0.8310),doubleToFloat(0.1792),doubleToFloat(0.8013),doubleToFloat(0.0897),doubleToFloat(0.8044),doubleToFloat(0.1944),doubleToFloat(0.8109),doubleToFloat(0.0678),doubleToFloat(0.8292),doubleToFloat(0.1435),doubleToFloat(0.8606)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1910),doubleToFloat(0.8452),doubleToFloat(0.0166),doubleToFloat(0.8911),doubleToFloat(0.0646),doubleToFloat(0.9594),doubleToFloat(0.1656),doubleToFloat(0.6487),doubleToFloat(0.0889),doubleToFloat(0.8753),doubleToFloat(0.2325),doubleToFloat(0.6351),doubleToFloat(0.2334),doubleToFloat(0.6554),doubleToFloat(0.2548),doubleToFloat(0.6553),doubleToFloat(0.2441),doubleToFloat(0.6553),doubleToFloat(0.2334),doubleToFloat(0.6553)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4156),doubleToFloat(0.6279),doubleToFloat(0.3783),doubleToFloat(0.6250),doubleToFloat(0.3984),doubleToFloat(0.6490),doubleToFloat(0.4325),doubleToFloat(0.6718),doubleToFloat(0.4443),doubleToFloat(0.6446),doubleToFloat(0.4280),doubleToFloat(0.6022)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=11, element #151, 304 total numbers */
	this.IndexedFaceSet_11_151_coordIndex = new MFInt32(Java.to([2,1,0,-1,3,2,0,-1,4,3,0,-1,0,1,6,-1,6,5,0,-1,1,2,7,-1,7,6,1,-1,2,3,8,-1,8,7,2,-1,3,4,9,-1,9,8,3,-1,4,0,5,-1,5,9,4,-1,5,6,11,-1,11,10,5,-1,6,7,12,-1,12,11,6,-1,7,8,13,-1,13,12,7,-1,8,9,14,-1,14,13,8,-1,9,5,10,-1,10,14,9,-1,10,11,16,-1,16,15,10,-1,11,12,17,-1,17,16,11,-1,12,13,18,-1,18,17,12,-1,13,14,19,-1,19,18,13,-1,14,10,15,-1,15,19,14,-1,36,37,38,-1,35,36,38,-1,39,35,38,-1,21,20,15,-1,15,16,21,-1,22,21,16,-1,16,17,22,-1,23,22,17,-1,17,18,23,-1,24,23,18,-1,18,19,24,-1,20,24,19,-1,19,15,20,-1,26,25,20,-1,20,21,26,-1,27,26,21,-1,21,22,27,-1,28,27,22,-1,22,23,28,-1,29,28,23,-1,23,24,29,-1,25,29,24,-1,24,20,25,-1,31,30,25,-1,25,26,31,-1,32,31,26,-1,26,27,32,-1,33,32,27,-1,27,28,33,-1,34,33,28,-1,28,29,34,-1,30,34,29,-1,29,25,30,-1,36,35,30,-1,30,31,36,-1,37,36,31,-1,31,32,37,-1,38,37,32,-1,32,33,38,-1,39,38,33,-1,33,34,39,-1,35,39,34,-1,34,30,35,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=11, element #151, 304 total numbers */
	this.IndexedFaceSet_11_151_texCoordIndex = new MFInt32(Java.to([2,0,1,-1,3,2,1,-1,61,3,1,-1,1,0,5,-1,5,6,1,-1,0,2,7,-1,7,5,0,-1,2,3,8,-1,8,7,2,-1,25,4,9,-1,9,26,25,-1,4,1,6,-1,6,9,4,-1,6,5,10,-1,10,11,6,-1,5,7,12,-1,12,10,5,-1,7,8,13,-1,13,12,7,-1,27,9,14,-1,14,28,27,-1,9,6,11,-1,11,14,9,-1,11,10,15,-1,15,16,11,-1,10,12,17,-1,17,15,10,-1,12,13,18,-1,18,17,12,-1,29,14,19,-1,19,30,29,-1,14,11,16,-1,16,19,14,-1,54,35,36,-1,53,54,36,-1,37,53,36,-1,20,21,16,-1,16,15,20,-1,22,20,15,-1,15,17,22,-1,23,22,17,-1,17,18,23,-1,24,32,31,-1,31,19,24,-1,21,24,19,-1,19,16,21,-1,40,41,38,-1,38,39,40,-1,43,56,55,-1,55,42,43,-1,45,43,42,-1,42,44,45,-1,47,45,44,-1,44,46,47,-1,41,47,46,-1,46,38,41,-1,48,49,41,-1,41,40,48,-1,50,58,57,-1,57,43,50,-1,51,50,43,-1,43,45,51,-1,52,51,45,-1,45,47,52,-1,49,52,47,-1,47,41,49,-1,34,33,49,-1,49,48,34,-1,35,60,59,-1,59,50,35,-1,36,35,50,-1,50,51,36,-1,37,36,51,-1,51,52,37,-1,33,37,52,-1,52,49,33,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=12, element #151, 120 total numbers made up of 40 3-tuple values */
	this.Coordinate_12_151_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(2.5250),doubleToFloat(1.2460),doubleToFloat(-1.6800),doubleToFloat(3.6810),doubleToFloat(1.2360),doubleToFloat(0.0337),doubleToFloat(2.4080),doubleToFloat(1.2470),doubleToFloat(1.6630),doubleToFloat(0.4657),doubleToFloat(1.2640),doubleToFloat(0.9556),doubleToFloat(0.5379),doubleToFloat(1.2640),doubleToFloat(-1.1100),doubleToFloat(2.7430),doubleToFloat(-0.0209),doubleToFloat(-2.3100),doubleToFloat(4.3390),doubleToFloat(-0.0351),doubleToFloat(0.0570),doubleToFloat(2.5810),doubleToFloat(-0.0195),doubleToFloat(2.3070),doubleToFloat(-0.1009),doubleToFloat(0.0044),doubleToFloat(1.3300),doubleToFloat(-0.0013),doubleToFloat(0.0036),doubleToFloat(-1.5230)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(2.7200),doubleToFloat(-2.5340),doubleToFloat(-2.3100),doubleToFloat(4.3170),doubleToFloat(-2.5480),doubleToFloat(0.0570),doubleToFloat(2.5590),doubleToFloat(-2.5330),doubleToFloat(2.3070),doubleToFloat(-0.1233),doubleToFloat(-2.5090),doubleToFloat(1.3300),doubleToFloat(-0.0237),doubleToFloat(-2.5100),doubleToFloat(-1.5230),doubleToFloat(2.7590),doubleToFloat(-3.6090),doubleToFloat(-2.4420),doubleToFloat(4.4480),doubleToFloat(-3.6240),doubleToFloat(0.0619),doubleToFloat(2.5880),doubleToFloat(-3.6080),doubleToFloat(2.4420),doubleToFloat(-0.2497),doubleToFloat(-3.5830),doubleToFloat(1.4090),doubleToFloat(-0.1443),doubleToFloat(-3.5830),doubleToFloat(-1.6100)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(2.2450),doubleToFloat(-1.7580),doubleToFloat(-1.9390),doubleToFloat(3.4650),doubleToFloat(-1.7690),doubleToFloat(-0.4543),doubleToFloat(2.8340),doubleToFloat(-1.7630),doubleToFloat(1.6290),doubleToFloat(1.2230),doubleToFloat(-1.7490),doubleToFloat(1.4320),doubleToFloat(0.8596),doubleToFloat(-1.7460),doubleToFloat(-0.7734),doubleToFloat(2.2630),doubleToFloat(-7.5660),doubleToFloat(-1.5690),doubleToFloat(3.5310),doubleToFloat(-7.5770),doubleToFloat(-0.3780),doubleToFloat(2.8750),doubleToFloat(-7.5710),doubleToFloat(1.2930),doubleToFloat(1.2020),doubleToFloat(-7.5560),doubleToFloat(1.1350),doubleToFloat(0.8242),doubleToFloat(-7.5530),doubleToFloat(-0.6340)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(2.2670),doubleToFloat(-11.6200),doubleToFloat(-1.5110),doubleToFloat(3.4870),doubleToFloat(-11.6300),doubleToFloat(-0.3651),doubleToFloat(2.8560),doubleToFloat(-11.6200),doubleToFloat(1.2430),doubleToFloat(1.2450),doubleToFloat(-11.6100),doubleToFloat(1.0910),doubleToFloat(0.8817),doubleToFloat(-11.6),doubleToFloat(-0.6115),doubleToFloat(2.2130),doubleToFloat(-12.1700),doubleToFloat(-0.8985),doubleToFloat(2.9280),doubleToFloat(-12.1700),doubleToFloat(-0.2267),doubleToFloat(2.5580),doubleToFloat(-12.1700),doubleToFloat(0.7160),doubleToFloat(1.6140),doubleToFloat(-12.1600),doubleToFloat(0.6268),doubleToFloat(1.4010),doubleToFloat(-12.1600),doubleToFloat(-0.3711)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=12, element #152, 124 total numbers made up of 62 2-tuple values */
	this.TextureCoordinate_12_152_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.2986),doubleToFloat(0.2114),doubleToFloat(0.2726),doubleToFloat(0.2114),doubleToFloat(0.3201),doubleToFloat(0.2114),doubleToFloat(0.3415),doubleToFloat(0.2114),doubleToFloat(0.2466),doubleToFloat(0.2114),doubleToFloat(0.2979),doubleToFloat(0.2417),doubleToFloat(0.2726),doubleToFloat(0.2417),doubleToFloat(0.3197),doubleToFloat(0.2417),doubleToFloat(0.3418),doubleToFloat(0.2417),doubleToFloat(0.2473),doubleToFloat(0.2417)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.2979),doubleToFloat(0.3018),doubleToFloat(0.2726),doubleToFloat(0.3018),doubleToFloat(0.3197),doubleToFloat(0.3018),doubleToFloat(0.3418),doubleToFloat(0.3018),doubleToFloat(0.2473),doubleToFloat(0.3018),doubleToFloat(0.2978),doubleToFloat(0.3276),doubleToFloat(0.2726),doubleToFloat(0.3276),doubleToFloat(0.3197),doubleToFloat(0.3276),doubleToFloat(0.3419),doubleToFloat(0.3276),doubleToFloat(0.2474),doubleToFloat(0.3276)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.2932),doubleToFloat(0.2834),doubleToFloat(0.2689),doubleToFloat(0.2834),doubleToFloat(0.3160),doubleToFloat(0.2834),doubleToFloat(0.3322),doubleToFloat(0.2834),doubleToFloat(0.2450),doubleToFloat(0.2834),doubleToFloat(0.2251),doubleToFloat(0.2114),doubleToFloat(0.2255),doubleToFloat(0.2417),doubleToFloat(0.2255),doubleToFloat(0.2417),doubleToFloat(0.2255),doubleToFloat(0.3018),doubleToFloat(0.2255),doubleToFloat(0.3018)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.2255),doubleToFloat(0.3276),doubleToFloat(0.2255),doubleToFloat(0.3276),doubleToFloat(0.2159),doubleToFloat(0.2834),doubleToFloat(0.4315),doubleToFloat(0.6736),doubleToFloat(0.4420),doubleToFloat(0.6736),doubleToFloat(0.3947),doubleToFloat(0.6736),doubleToFloat(0.4041),doubleToFloat(0.6736),doubleToFloat(0.4180),doubleToFloat(0.6736),doubleToFloat(0.4296),doubleToFloat(0.6167),doubleToFloat(0.4409),doubleToFloat(0.6167)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4415),doubleToFloat(0.6485),doubleToFloat(0.4303),doubleToFloat(0.6485),doubleToFloat(0.3965),doubleToFloat(0.6167),doubleToFloat(0.3953),doubleToFloat(0.6485),doubleToFloat(0.4047),doubleToFloat(0.6167),doubleToFloat(0.4053),doubleToFloat(0.6485),doubleToFloat(0.4189),doubleToFloat(0.6167),doubleToFloat(0.4180),doubleToFloat(0.6485),doubleToFloat(0.4415),doubleToFloat(0.6706),doubleToFloat(0.4306),doubleToFloat(0.6706)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.3950),doubleToFloat(0.6706),doubleToFloat(0.4051),doubleToFloat(0.6706),doubleToFloat(0.4182),doubleToFloat(0.6706),doubleToFloat(0.3746),doubleToFloat(0.6736),doubleToFloat(0.3851),doubleToFloat(0.6736),doubleToFloat(0.3840),doubleToFloat(0.6167),doubleToFloat(0.3845),doubleToFloat(0.6485),doubleToFloat(0.3845),doubleToFloat(0.6485),doubleToFloat(0.3846),doubleToFloat(0.6706),doubleToFloat(0.3846),doubleToFloat(0.6706)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.3851),doubleToFloat(0.6736),doubleToFloat(0.3481),doubleToFloat(0.2114)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=12, element #160, 184 total numbers */
	this.IndexedFaceSet_12_160_coordIndex = new MFInt32(Java.to([2,1,0,-1,3,2,0,-1,4,3,0,-1,0,1,6,-1,6,5,0,-1,1,2,7,-1,7,6,1,-1,2,3,8,-1,8,7,2,-1,3,4,9,-1,9,8,3,-1,4,0,5,-1,5,9,4,-1,5,6,11,-1,11,10,5,-1,6,7,12,-1,12,11,6,-1,7,8,13,-1,13,12,7,-1,8,9,14,-1,14,13,8,-1,9,5,10,-1,10,14,9,-1,10,11,16,-1,16,15,10,-1,11,12,17,-1,17,16,11,-1,12,13,18,-1,18,17,12,-1,13,14,19,-1,19,18,13,-1,14,10,15,-1,15,19,14,-1,21,22,23,-1,20,21,23,-1,24,20,23,-1,21,20,15,-1,15,16,21,-1,22,21,16,-1,16,17,22,-1,23,22,17,-1,17,18,23,-1,24,23,18,-1,18,19,24,-1,20,24,19,-1,19,15,20,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=12, element #160, 184 total numbers */
	this.IndexedFaceSet_12_160_texCoordIndex = new MFInt32(Java.to([2,25,26,-1,3,2,26,-1,4,3,26,-1,0,1,6,-1,6,5,0,-1,27,2,7,-1,7,28,27,-1,2,3,8,-1,8,7,2,-1,3,4,9,-1,9,8,3,-1,4,0,5,-1,5,9,4,-1,5,6,11,-1,11,10,5,-1,29,7,12,-1,12,30,29,-1,7,8,13,-1,13,12,7,-1,8,9,14,-1,14,13,8,-1,9,5,10,-1,10,14,9,-1,10,11,16,-1,16,15,10,-1,31,12,17,-1,17,32,31,-1,12,13,18,-1,18,17,12,-1,13,14,19,-1,19,18,13,-1,14,10,15,-1,15,19,14,-1,34,22,23,-1,33,34,23,-1,24,33,23,-1,21,20,15,-1,15,16,21,-1,22,36,35,-1,35,17,22,-1,23,22,17,-1,17,18,23,-1,24,23,18,-1,18,19,24,-1,20,24,19,-1,19,15,20,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=13, element #160, 75 total numbers made up of 25 3-tuple values */
	this.Coordinate_13_160_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(0.2150),doubleToFloat(0.3047),doubleToFloat(-1.1520),doubleToFloat(1.1550),doubleToFloat(0.2966),doubleToFloat(-0.2588),doubleToFloat(0.6199),doubleToFloat(0.3013),doubleToFloat(1.0400),doubleToFloat(-0.6505),doubleToFloat(0.3122),doubleToFloat(0.9491),doubleToFloat(-0.9008),doubleToFloat(0.3143),doubleToFloat(-0.4054),doubleToFloat(0.1442),doubleToFloat(-0.8448),doubleToFloat(-1.6250),doubleToFloat(1.4720),doubleToFloat(-0.8561),doubleToFloat(-0.4271),doubleToFloat(0.7164),doubleToFloat(-0.8496),doubleToFloat(1.6250),doubleToFloat(-1.0790),doubleToFloat(-0.8342),doubleToFloat(1.4820),doubleToFloat(-1.4330),doubleToFloat(-0.8312),doubleToFloat(-0.6588)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.1328),doubleToFloat(-3.5),doubleToFloat(-1.6070),doubleToFloat(1.5510),doubleToFloat(-3.5130),doubleToFloat(-0.4225),doubleToFloat(0.7810),doubleToFloat(-2.9250),doubleToFloat(1.6100),doubleToFloat(-1.1360),doubleToFloat(-2.9090),doubleToFloat(1.4680),doubleToFloat(-1.5510),doubleToFloat(-3.4860),doubleToFloat(-0.6519),doubleToFloat(0.0592),doubleToFloat(-8.7130),doubleToFloat(-1.4370),doubleToFloat(1.0930),doubleToFloat(-8.7220),doubleToFloat(-0.1279),doubleToFloat(0.5047),doubleToFloat(-8.7160),doubleToFloat(1.5100),doubleToFloat(-0.8932),doubleToFloat(-8.7040),doubleToFloat(1.3770),doubleToFloat(-1.1690),doubleToFloat(-8.7020),doubleToFloat(-0.3428)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.0092),doubleToFloat(-9.3360),doubleToFloat(-0.8855),doubleToFloat(0.7154),doubleToFloat(-9.3420),doubleToFloat(0.0084),doubleToFloat(0.3135),doubleToFloat(-9.3390),doubleToFloat(1.0430),doubleToFloat(-0.6412),doubleToFloat(-9.3310),doubleToFloat(0.9519),doubleToFloat(-0.8292),doubleToFloat(-9.3290),doubleToFloat(-0.1383)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=13, element #161, 74 total numbers made up of 37 2-tuple values */
	this.TextureCoordinate_13_161_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.4222),doubleToFloat(0.6201),doubleToFloat(0.4327),doubleToFloat(0.6201),doubleToFloat(0.3884),doubleToFloat(0.6201),doubleToFloat(0.3987),doubleToFloat(0.6201),doubleToFloat(0.4103),doubleToFloat(0.6201),doubleToFloat(0.4213),doubleToFloat(0.6265),doubleToFloat(0.4321),doubleToFloat(0.6265),doubleToFloat(0.3894),doubleToFloat(0.6265),doubleToFloat(0.3990),doubleToFloat(0.6265),doubleToFloat(0.4105),doubleToFloat(0.6265)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4214),doubleToFloat(0.6413),doubleToFloat(0.4323),doubleToFloat(0.6413),doubleToFloat(0.3890),doubleToFloat(0.6381),doubleToFloat(0.3992),doubleToFloat(0.6381),doubleToFloat(0.4103),doubleToFloat(0.6413),doubleToFloat(0.4213),doubleToFloat(0.6705),doubleToFloat(0.4336),doubleToFloat(0.6705),doubleToFloat(0.3899),doubleToFloat(0.6705),doubleToFloat(0.3981),doubleToFloat(0.6705),doubleToFloat(0.4094),doubleToFloat(0.6705)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4215),doubleToFloat(0.6740),doubleToFloat(0.4346),doubleToFloat(0.6740),doubleToFloat(0.3899),doubleToFloat(0.6740),doubleToFloat(0.3980),doubleToFloat(0.6740),doubleToFloat(0.4083),doubleToFloat(0.6740),doubleToFloat(0.3787),doubleToFloat(0.6201),doubleToFloat(0.3682),doubleToFloat(0.6201),doubleToFloat(0.3787),doubleToFloat(0.6201),doubleToFloat(0.3782),doubleToFloat(0.6265),doubleToFloat(0.3782),doubleToFloat(0.6265)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.3783),doubleToFloat(0.6413),doubleToFloat(0.3783),doubleToFloat(0.6413),doubleToFloat(0.3796),doubleToFloat(0.6705),doubleToFloat(0.3676),doubleToFloat(0.6740),doubleToFloat(0.3806),doubleToFloat(0.6740),doubleToFloat(0.3796),doubleToFloat(0.6705),doubleToFloat(0.3806),doubleToFloat(0.6740)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=13, element #169, 160 total numbers */
	this.IndexedFaceSet_13_169_coordIndex = new MFInt32(Java.to([4,5,0,-1,0,2,4,-1,6,7,3,-1,3,1,6,-1,1,0,5,-1,5,6,1,-1,8,9,5,-1,5,4,8,-1,10,11,7,-1,7,6,10,-1,9,10,6,-1,6,5,9,-1,12,13,9,-1,9,8,12,-1,14,15,11,-1,11,10,14,-1,13,14,10,-1,10,9,13,-1,4,2,16,-1,2,3,7,-1,7,16,2,-1,17,19,18,-1,18,20,17,-1,21,16,7,-1,7,11,21,-1,8,21,12,-1,12,21,11,-1,11,15,12,-1,13,12,15,-1,15,14,13,-1,8,4,19,-1,19,17,8,-1,4,16,18,-1,18,19,4,-1,16,21,20,-1,20,18,16,-1,21,8,17,-1,17,20,21,-1,22,27,23,-1,26,25,24,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=13, element #169, 160 total numbers */
	this.IndexedFaceSet_13_169_texCoordIndex = new MFInt32(Java.to([4,6,5,-1,5,7,4,-1,2,3,1,-1,1,0,2,-1,14,16,15,-1,15,17,14,-1,8,9,6,-1,6,4,8,-1,38,40,39,-1,39,41,38,-1,18,19,36,-1,36,37,18,-1,10,11,9,-1,9,8,10,-1,42,43,40,-1,40,38,42,-1,20,21,19,-1,19,18,20,-1,22,24,23,-1,24,26,25,-1,25,23,24,-1,27,29,28,-1,28,30,27,-1,31,23,25,-1,25,32,31,-1,33,31,34,-1,34,31,32,-1,32,35,34,-1,20,34,35,-1,35,21,20,-1,8,4,12,-1,12,13,8,-1,22,23,28,-1,28,29,22,-1,23,31,30,-1,30,28,23,-1,31,33,27,-1,27,30,31,-1,14,24,26,-1,14,16,24,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=14, element #169, 84 total numbers made up of 28 3-tuple values */
	this.Coordinate_14_169_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(1.2470),doubleToFloat(0.0700),doubleToFloat(0.7975),doubleToFloat(1.2090),doubleToFloat(0.0872),doubleToFloat(-1.3490),doubleToFloat(-0.7098),doubleToFloat(-0.0015),doubleToFloat(0.8912),doubleToFloat(-0.7183),doubleToFloat(0.0002),doubleToFloat(-1.2830),doubleToFloat(-0.9295),doubleToFloat(-0.6130),doubleToFloat(1.4780),doubleToFloat(1.6470),doubleToFloat(-0.4252),doubleToFloat(1.3880),doubleToFloat(1.5890),doubleToFloat(-0.3921),doubleToFloat(-1.9890),doubleToFloat(-1.0440),doubleToFloat(-0.5947),doubleToFloat(-1.9840),doubleToFloat(-0.8227),doubleToFloat(-2.5210),doubleToFloat(2.4080),doubleToFloat(1.9510),doubleToFloat(-2.3340),doubleToFloat(2.0800)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(1.8920),doubleToFloat(-2.3010),doubleToFloat(-2.4090),doubleToFloat(-1.1920),doubleToFloat(-2.6140),doubleToFloat(-2.2480),doubleToFloat(-0.5703),doubleToFloat(-3.9580),doubleToFloat(1.6940),doubleToFloat(0.8836),doubleToFloat(-4.2),doubleToFloat(1.7500),doubleToFloat(0.8251),doubleToFloat(-4.1670),doubleToFloat(-2.0710),doubleToFloat(-0.7842),doubleToFloat(-3.9680),doubleToFloat(-1.9340),doubleToFloat(-1.0370),doubleToFloat(-0.5968),doubleToFloat(-0.1872),doubleToFloat(-1.6420),doubleToFloat(-2.5610),doubleToFloat(1.9410),doubleToFloat(-1.9510),doubleToFloat(-0.9492),doubleToFloat(0.0580),doubleToFloat(-1.9140),doubleToFloat(-1.0160),doubleToFloat(1.8850)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.6490),doubleToFloat(-2.5600),doubleToFloat(0.1377),doubleToFloat(-1.0660),doubleToFloat(-2.6100),doubleToFloat(-0.2014),doubleToFloat(1.2090),doubleToFloat(0.0872),doubleToFloat(-1.3490),doubleToFloat(-0.7183),doubleToFloat(0.0002),doubleToFloat(-1.2830),doubleToFloat(-0.7098),doubleToFloat(-0.0015),doubleToFloat(0.8912),doubleToFloat(1.2470),doubleToFloat(0.0700),doubleToFloat(0.7975),doubleToFloat(1.2090),doubleToFloat(0.0872),doubleToFloat(-1.3490),doubleToFloat(-0.7098),doubleToFloat(-0.0015),doubleToFloat(0.8912)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=14, element #170, 88 total numbers made up of 44 2-tuple values */
	this.TextureCoordinate_14_170_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.8107),doubleToFloat(0.9924),doubleToFloat(0.8122),doubleToFloat(0.9033),doubleToFloat(0.7694),doubleToFloat(0.9912),doubleToFloat(0.7683),doubleToFloat(0.9026),doubleToFloat(0.1329),doubleToFloat(0.0347),doubleToFloat(0.0307),doubleToFloat(0.0051),doubleToFloat(0.0134),doubleToFloat(0.0353),doubleToFloat(0.1366),doubleToFloat(0.0058),doubleToFloat(0.1249),doubleToFloat(0.1081),doubleToFloat(0.0147),doubleToFloat(0.1170)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1349),doubleToFloat(0.1856),doubleToFloat(0.0462),doubleToFloat(0.1842),doubleToFloat(0.1559),doubleToFloat(0.0454),doubleToFloat(0.1480),doubleToFloat(0.1033),doubleToFloat(0.3244),doubleToFloat(0.0096),doubleToFloat(0.1758),doubleToFloat(0.0039),doubleToFloat(0.1759),doubleToFloat(0.0110),doubleToFloat(0.3241),doubleToFloat(0.0033),doubleToFloat(0.1730),doubleToFloat(0.1764),doubleToFloat(0.3074),doubleToFloat(0.1757)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1732),doubleToFloat(0.1519),doubleToFloat(0.3074),doubleToFloat(0.1513),doubleToFloat(0.1756),doubleToFloat(0.0320),doubleToFloat(0.2159),doubleToFloat(0.0368),doubleToFloat(0.1791),doubleToFloat(0.0165),doubleToFloat(0.3169),doubleToFloat(0.0458),doubleToFloat(0.3158),doubleToFloat(0.0193),doubleToFloat(0.1720),doubleToFloat(0.0594),doubleToFloat(0.2087),doubleToFloat(0.0476),doubleToFloat(0.1736),doubleToFloat(0.0504)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.2073),doubleToFloat(0.0640),doubleToFloat(0.2362),doubleToFloat(0.0821),doubleToFloat(0.3267),doubleToFloat(0.0796),doubleToFloat(0.1717),doubleToFloat(0.0822),doubleToFloat(0.1726),doubleToFloat(0.1297),doubleToFloat(0.3077),doubleToFloat(0.1289),doubleToFloat(0.3074),doubleToFloat(0.1865),doubleToFloat(0.1742),doubleToFloat(0.1840),doubleToFloat(0.0061),doubleToFloat(0.1086),doubleToFloat(0.1366),doubleToFloat(0.0368)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1241),doubleToFloat(0.1189),doubleToFloat(0.0168),doubleToFloat(0.0309),doubleToFloat(0.0211),doubleToFloat(0.1882),doubleToFloat(0.1400),doubleToFloat(0.1857)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=11, element #181, 304 total numbers */
	this.IndexedFaceSet_11_181_coordIndex = new MFInt32(Java.to([0,1,2,-1,0,2,3,-1,4,0,3,-1,0,5,6,-1,6,1,0,-1,1,6,7,-1,7,2,1,-1,2,7,8,-1,8,3,2,-1,3,8,9,-1,9,4,3,-1,4,9,5,-1,5,0,4,-1,5,10,11,-1,11,6,5,-1,6,11,12,-1,12,7,6,-1,7,12,13,-1,13,8,7,-1,8,13,14,-1,14,9,8,-1,9,14,10,-1,10,5,9,-1,10,15,16,-1,16,11,10,-1,11,16,17,-1,17,12,11,-1,12,17,18,-1,18,13,12,-1,13,18,19,-1,19,14,13,-1,14,19,15,-1,15,10,14,-1,38,37,36,-1,38,36,35,-1,39,38,35,-1,21,16,15,-1,15,20,21,-1,22,17,16,-1,16,21,22,-1,23,18,17,-1,17,22,23,-1,24,19,18,-1,18,23,24,-1,20,15,19,-1,19,24,20,-1,26,21,20,-1,20,25,26,-1,27,22,21,-1,21,26,27,-1,28,23,22,-1,22,27,28,-1,29,24,23,-1,23,28,29,-1,25,20,24,-1,24,29,25,-1,31,26,25,-1,25,30,31,-1,32,27,26,-1,26,31,32,-1,33,28,27,-1,27,32,33,-1,34,29,28,-1,28,33,34,-1,30,25,29,-1,29,34,30,-1,36,31,30,-1,30,35,36,-1,37,32,31,-1,31,36,37,-1,38,33,32,-1,32,37,38,-1,39,34,33,-1,33,38,39,-1,35,30,34,-1,34,39,35,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=11, element #181, 304 total numbers */
	this.IndexedFaceSet_11_181_texCoordIndex = new MFInt32(Java.to([1,0,2,-1,1,2,3,-1,61,1,3,-1,1,6,5,-1,5,0,1,-1,0,5,7,-1,7,2,0,-1,2,7,8,-1,8,3,2,-1,25,26,9,-1,9,4,25,-1,4,9,6,-1,6,1,4,-1,6,11,10,-1,10,5,6,-1,5,10,12,-1,12,7,5,-1,7,12,13,-1,13,8,7,-1,27,28,14,-1,14,9,27,-1,9,14,11,-1,11,6,9,-1,11,16,15,-1,15,10,11,-1,10,15,17,-1,17,12,10,-1,12,17,18,-1,18,13,12,-1,29,30,19,-1,19,14,29,-1,14,19,16,-1,16,11,14,-1,36,35,54,-1,36,54,53,-1,37,36,53,-1,20,15,16,-1,16,21,20,-1,22,17,15,-1,15,20,22,-1,23,18,17,-1,17,22,23,-1,24,19,31,-1,31,32,24,-1,21,16,19,-1,19,24,21,-1,40,39,38,-1,38,41,40,-1,43,42,55,-1,55,56,43,-1,45,44,42,-1,42,43,45,-1,47,46,44,-1,44,45,47,-1,41,38,46,-1,46,47,41,-1,48,40,41,-1,41,49,48,-1,50,43,57,-1,57,58,50,-1,51,45,43,-1,43,50,51,-1,52,47,45,-1,45,51,52,-1,49,41,47,-1,47,52,49,-1,34,48,49,-1,49,33,34,-1,35,50,59,-1,59,60,35,-1,36,51,50,-1,50,35,36,-1,37,52,51,-1,51,36,37,-1,33,49,52,-1,52,37,33,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=12, element #181, 120 total numbers made up of 40 3-tuple values */
	this.Coordinate_12_181_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(-2.5250),doubleToFloat(1.2460),doubleToFloat(-1.6800),doubleToFloat(-3.6810),doubleToFloat(1.2360),doubleToFloat(0.0337),doubleToFloat(-2.4080),doubleToFloat(1.2470),doubleToFloat(1.6630),doubleToFloat(-0.4657),doubleToFloat(1.2640),doubleToFloat(0.9556),doubleToFloat(-0.5379),doubleToFloat(1.2640),doubleToFloat(-1.1100),doubleToFloat(-2.7430),doubleToFloat(-0.0209),doubleToFloat(-2.3100),doubleToFloat(-4.3390),doubleToFloat(-0.0351),doubleToFloat(0.0570),doubleToFloat(-2.5810),doubleToFloat(-0.0195),doubleToFloat(2.3070),doubleToFloat(0.1009),doubleToFloat(0.0044),doubleToFloat(1.3300),doubleToFloat(0.0013),doubleToFloat(0.0036),doubleToFloat(-1.5230)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-2.7200),doubleToFloat(-2.5340),doubleToFloat(-2.3100),doubleToFloat(-4.3170),doubleToFloat(-2.5480),doubleToFloat(0.0570),doubleToFloat(-2.5590),doubleToFloat(-2.5330),doubleToFloat(2.3070),doubleToFloat(0.1233),doubleToFloat(-2.5090),doubleToFloat(1.3300),doubleToFloat(0.0237),doubleToFloat(-2.5100),doubleToFloat(-1.5230),doubleToFloat(-2.7590),doubleToFloat(-3.6090),doubleToFloat(-2.4420),doubleToFloat(-4.4480),doubleToFloat(-3.6240),doubleToFloat(0.0619),doubleToFloat(-2.5880),doubleToFloat(-3.6080),doubleToFloat(2.4420),doubleToFloat(0.2497),doubleToFloat(-3.5830),doubleToFloat(1.4090),doubleToFloat(0.1443),doubleToFloat(-3.5830),doubleToFloat(-1.6100)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-2.2450),doubleToFloat(-1.7580),doubleToFloat(-1.9390),doubleToFloat(-3.4650),doubleToFloat(-1.7690),doubleToFloat(-0.4543),doubleToFloat(-2.8340),doubleToFloat(-1.7630),doubleToFloat(1.6290),doubleToFloat(-1.2230),doubleToFloat(-1.7490),doubleToFloat(1.4320),doubleToFloat(-0.8596),doubleToFloat(-1.7460),doubleToFloat(-0.7734),doubleToFloat(-2.2630),doubleToFloat(-7.5660),doubleToFloat(-1.5690),doubleToFloat(-3.5310),doubleToFloat(-7.5770),doubleToFloat(-0.3780),doubleToFloat(-2.8750),doubleToFloat(-7.5710),doubleToFloat(1.2930),doubleToFloat(-1.2020),doubleToFloat(-7.5560),doubleToFloat(1.1350),doubleToFloat(-0.8242),doubleToFloat(-7.5530),doubleToFloat(-0.6340)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-2.2670),doubleToFloat(-11.6200),doubleToFloat(-1.5110),doubleToFloat(-3.4870),doubleToFloat(-11.6300),doubleToFloat(-0.3651),doubleToFloat(-2.8560),doubleToFloat(-11.6200),doubleToFloat(1.2430),doubleToFloat(-1.2450),doubleToFloat(-11.6100),doubleToFloat(1.0910),doubleToFloat(-0.8817),doubleToFloat(-11.6),doubleToFloat(-0.6115),doubleToFloat(-2.2130),doubleToFloat(-12.1700),doubleToFloat(-0.8985),doubleToFloat(-2.9280),doubleToFloat(-12.1700),doubleToFloat(-0.2267),doubleToFloat(-2.5580),doubleToFloat(-12.1700),doubleToFloat(0.7160),doubleToFloat(-1.6140),doubleToFloat(-12.1600),doubleToFloat(0.6268),doubleToFloat(-1.4010),doubleToFloat(-12.1600),doubleToFloat(-0.3711)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=12, element #182, 124 total numbers made up of 62 2-tuple values */
	this.TextureCoordinate_12_182_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.2986),doubleToFloat(0.2114),doubleToFloat(0.2726),doubleToFloat(0.2114),doubleToFloat(0.3201),doubleToFloat(0.2114),doubleToFloat(0.3415),doubleToFloat(0.2114),doubleToFloat(0.2466),doubleToFloat(0.2114),doubleToFloat(0.2979),doubleToFloat(0.2417),doubleToFloat(0.2726),doubleToFloat(0.2417),doubleToFloat(0.3197),doubleToFloat(0.2417),doubleToFloat(0.3418),doubleToFloat(0.2417),doubleToFloat(0.2473),doubleToFloat(0.2417)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.2979),doubleToFloat(0.3018),doubleToFloat(0.2726),doubleToFloat(0.3018),doubleToFloat(0.3197),doubleToFloat(0.3018),doubleToFloat(0.3418),doubleToFloat(0.3018),doubleToFloat(0.2473),doubleToFloat(0.3018),doubleToFloat(0.2978),doubleToFloat(0.3276),doubleToFloat(0.2726),doubleToFloat(0.3276),doubleToFloat(0.3197),doubleToFloat(0.3276),doubleToFloat(0.3419),doubleToFloat(0.3276),doubleToFloat(0.2474),doubleToFloat(0.3276)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.2932),doubleToFloat(0.2834),doubleToFloat(0.2689),doubleToFloat(0.2834),doubleToFloat(0.3160),doubleToFloat(0.2834),doubleToFloat(0.3322),doubleToFloat(0.2834),doubleToFloat(0.2450),doubleToFloat(0.2834),doubleToFloat(0.2251),doubleToFloat(0.2114),doubleToFloat(0.2255),doubleToFloat(0.2417),doubleToFloat(0.2255),doubleToFloat(0.2417),doubleToFloat(0.2255),doubleToFloat(0.3018),doubleToFloat(0.2255),doubleToFloat(0.3018)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.2255),doubleToFloat(0.3276),doubleToFloat(0.2255),doubleToFloat(0.3276),doubleToFloat(0.2159),doubleToFloat(0.2834),doubleToFloat(0.4315),doubleToFloat(0.6736),doubleToFloat(0.4420),doubleToFloat(0.6736),doubleToFloat(0.3947),doubleToFloat(0.6736),doubleToFloat(0.4041),doubleToFloat(0.6736),doubleToFloat(0.4180),doubleToFloat(0.6736),doubleToFloat(0.4296),doubleToFloat(0.6167),doubleToFloat(0.4409),doubleToFloat(0.6167)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4415),doubleToFloat(0.6485),doubleToFloat(0.4303),doubleToFloat(0.6485),doubleToFloat(0.3965),doubleToFloat(0.6167),doubleToFloat(0.3953),doubleToFloat(0.6485),doubleToFloat(0.4047),doubleToFloat(0.6167),doubleToFloat(0.4053),doubleToFloat(0.6485),doubleToFloat(0.4189),doubleToFloat(0.6167),doubleToFloat(0.4180),doubleToFloat(0.6485),doubleToFloat(0.4415),doubleToFloat(0.6706),doubleToFloat(0.4306),doubleToFloat(0.6706)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.3950),doubleToFloat(0.6706),doubleToFloat(0.4051),doubleToFloat(0.6706),doubleToFloat(0.4182),doubleToFloat(0.6706),doubleToFloat(0.3746),doubleToFloat(0.6736),doubleToFloat(0.3851),doubleToFloat(0.6736),doubleToFloat(0.3840),doubleToFloat(0.6167),doubleToFloat(0.3845),doubleToFloat(0.6485),doubleToFloat(0.3845),doubleToFloat(0.6485),doubleToFloat(0.3846),doubleToFloat(0.6706),doubleToFloat(0.3846),doubleToFloat(0.6706)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.3851),doubleToFloat(0.6736),doubleToFloat(0.3481),doubleToFloat(0.2114)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=12, element #190, 184 total numbers */
	this.IndexedFaceSet_12_190_coordIndex = new MFInt32(Java.to([0,1,2,-1,0,2,3,-1,4,0,3,-1,0,5,6,-1,6,1,0,-1,1,6,7,-1,7,2,1,-1,2,7,8,-1,8,3,2,-1,3,8,9,-1,9,4,3,-1,4,9,5,-1,5,0,4,-1,5,10,11,-1,11,6,5,-1,6,11,12,-1,12,7,6,-1,7,12,13,-1,13,8,7,-1,8,13,14,-1,14,9,8,-1,9,14,10,-1,10,5,9,-1,10,15,16,-1,16,11,10,-1,11,16,17,-1,17,12,11,-1,12,17,18,-1,18,13,12,-1,13,18,19,-1,19,14,13,-1,14,19,15,-1,15,10,14,-1,23,22,21,-1,23,21,20,-1,24,23,20,-1,21,16,15,-1,15,20,21,-1,22,17,16,-1,16,21,22,-1,23,18,17,-1,17,22,23,-1,24,19,18,-1,18,23,24,-1,20,15,19,-1,19,24,20,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=12, element #190, 184 total numbers */
	this.IndexedFaceSet_12_190_texCoordIndex = new MFInt32(Java.to([26,25,2,-1,26,2,3,-1,4,26,3,-1,0,5,6,-1,6,1,0,-1,27,28,7,-1,7,2,27,-1,2,7,8,-1,8,3,2,-1,3,8,9,-1,9,4,3,-1,4,9,5,-1,5,0,4,-1,5,10,11,-1,11,6,5,-1,29,30,12,-1,12,7,29,-1,7,12,13,-1,13,8,7,-1,8,13,14,-1,14,9,8,-1,9,14,10,-1,10,5,9,-1,10,15,16,-1,16,11,10,-1,31,32,17,-1,17,12,31,-1,12,17,18,-1,18,13,12,-1,13,18,19,-1,19,14,13,-1,14,19,15,-1,15,10,14,-1,23,22,34,-1,23,34,33,-1,24,23,33,-1,21,16,15,-1,15,20,21,-1,22,17,35,-1,35,36,22,-1,23,18,17,-1,17,22,23,-1,24,19,18,-1,18,23,24,-1,20,15,19,-1,19,24,20,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=13, element #190, 75 total numbers made up of 25 3-tuple values */
	this.Coordinate_13_190_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(-0.2150),doubleToFloat(0.3047),doubleToFloat(-1.1520),doubleToFloat(-1.1550),doubleToFloat(0.2966),doubleToFloat(-0.2588),doubleToFloat(-0.6199),doubleToFloat(0.3013),doubleToFloat(1.0400),doubleToFloat(0.6505),doubleToFloat(0.3122),doubleToFloat(0.9491),doubleToFloat(0.9008),doubleToFloat(0.3143),doubleToFloat(-0.4054),doubleToFloat(-0.1442),doubleToFloat(-0.8448),doubleToFloat(-1.6250),doubleToFloat(-1.4720),doubleToFloat(-0.8561),doubleToFloat(-0.4271),doubleToFloat(-0.7164),doubleToFloat(-0.8496),doubleToFloat(1.6250),doubleToFloat(1.0790),doubleToFloat(-0.8342),doubleToFloat(1.4820),doubleToFloat(1.4330),doubleToFloat(-0.8312),doubleToFloat(-0.6588)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.1328),doubleToFloat(-3.5),doubleToFloat(-1.6070),doubleToFloat(-1.5510),doubleToFloat(-3.5130),doubleToFloat(-0.4225),doubleToFloat(-0.7810),doubleToFloat(-2.9250),doubleToFloat(1.6100),doubleToFloat(1.1360),doubleToFloat(-2.9090),doubleToFloat(1.4680),doubleToFloat(1.5510),doubleToFloat(-3.4860),doubleToFloat(-0.6519),doubleToFloat(-0.0592),doubleToFloat(-8.7130),doubleToFloat(-1.4370),doubleToFloat(-1.0930),doubleToFloat(-8.7220),doubleToFloat(-0.1279),doubleToFloat(-0.5047),doubleToFloat(-8.7160),doubleToFloat(1.5100),doubleToFloat(0.8932),doubleToFloat(-8.7040),doubleToFloat(1.3770),doubleToFloat(1.1690),doubleToFloat(-8.7020),doubleToFloat(-0.3428)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.0092),doubleToFloat(-9.3360),doubleToFloat(-0.8855),doubleToFloat(-0.7154),doubleToFloat(-9.3420),doubleToFloat(0.0084),doubleToFloat(-0.3135),doubleToFloat(-9.3390),doubleToFloat(1.0430),doubleToFloat(0.6412),doubleToFloat(-9.3310),doubleToFloat(0.9519),doubleToFloat(0.8292),doubleToFloat(-9.3290),doubleToFloat(-0.1383)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=13, element #191, 74 total numbers made up of 37 2-tuple values */
	this.TextureCoordinate_13_191_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.4222),doubleToFloat(0.6201),doubleToFloat(0.4327),doubleToFloat(0.6201),doubleToFloat(0.3884),doubleToFloat(0.6201),doubleToFloat(0.3987),doubleToFloat(0.6201),doubleToFloat(0.4103),doubleToFloat(0.6201),doubleToFloat(0.4213),doubleToFloat(0.6265),doubleToFloat(0.4321),doubleToFloat(0.6265),doubleToFloat(0.3894),doubleToFloat(0.6265),doubleToFloat(0.3990),doubleToFloat(0.6265),doubleToFloat(0.4105),doubleToFloat(0.6265)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4214),doubleToFloat(0.6413),doubleToFloat(0.4323),doubleToFloat(0.6413),doubleToFloat(0.3890),doubleToFloat(0.6381),doubleToFloat(0.3992),doubleToFloat(0.6381),doubleToFloat(0.4103),doubleToFloat(0.6413),doubleToFloat(0.4213),doubleToFloat(0.6705),doubleToFloat(0.4336),doubleToFloat(0.6705),doubleToFloat(0.3899),doubleToFloat(0.6705),doubleToFloat(0.3981),doubleToFloat(0.6705),doubleToFloat(0.4094),doubleToFloat(0.6705)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4215),doubleToFloat(0.6740),doubleToFloat(0.4346),doubleToFloat(0.6740),doubleToFloat(0.3899),doubleToFloat(0.6740),doubleToFloat(0.3980),doubleToFloat(0.6740),doubleToFloat(0.4083),doubleToFloat(0.6740),doubleToFloat(0.3787),doubleToFloat(0.6201),doubleToFloat(0.3682),doubleToFloat(0.6201),doubleToFloat(0.3787),doubleToFloat(0.6201),doubleToFloat(0.3782),doubleToFloat(0.6265),doubleToFloat(0.3782),doubleToFloat(0.6265)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.3783),doubleToFloat(0.6413),doubleToFloat(0.3783),doubleToFloat(0.6413),doubleToFloat(0.3796),doubleToFloat(0.6705),doubleToFloat(0.3676),doubleToFloat(0.6740),doubleToFloat(0.3806),doubleToFloat(0.6740),doubleToFloat(0.3796),doubleToFloat(0.6705),doubleToFloat(0.3806),doubleToFloat(0.6740)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=13, element #199, 160 total numbers */
	this.IndexedFaceSet_13_199_coordIndex = new MFInt32(Java.to([4,2,0,-1,0,5,4,-1,6,1,3,-1,3,7,6,-1,1,6,5,-1,5,0,1,-1,8,4,5,-1,5,9,8,-1,10,6,7,-1,7,11,10,-1,9,5,6,-1,6,10,9,-1,12,8,9,-1,9,13,12,-1,14,10,11,-1,11,15,14,-1,13,9,10,-1,10,14,13,-1,4,16,2,-1,2,16,7,-1,7,3,2,-1,17,20,18,-1,18,19,17,-1,21,11,7,-1,7,16,21,-1,8,12,21,-1,12,15,11,-1,11,21,12,-1,13,14,15,-1,15,12,13,-1,8,17,19,-1,19,4,8,-1,4,19,18,-1,18,16,4,-1,16,18,20,-1,20,21,16,-1,21,20,17,-1,17,8,21,-1,22,23,27,-1,26,24,25,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=13, element #199, 160 total numbers */
	this.IndexedFaceSet_13_199_texCoordIndex = new MFInt32(Java.to([4,7,5,-1,5,6,4,-1,2,0,1,-1,1,3,2,-1,14,17,15,-1,15,16,14,-1,8,4,6,-1,6,9,8,-1,38,41,39,-1,39,40,38,-1,18,37,36,-1,36,19,18,-1,10,8,9,-1,9,11,10,-1,42,38,40,-1,40,43,42,-1,20,18,19,-1,19,21,20,-1,22,23,24,-1,24,23,25,-1,25,26,24,-1,27,30,28,-1,28,29,27,-1,31,32,25,-1,25,23,31,-1,33,34,31,-1,34,35,32,-1,32,31,34,-1,20,21,35,-1,35,34,20,-1,8,13,12,-1,12,4,8,-1,22,29,28,-1,28,23,22,-1,23,28,30,-1,30,31,23,-1,31,30,27,-1,27,33,31,-1,14,26,24,-1,14,24,16,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=14, element #199, 84 total numbers made up of 28 3-tuple values */
	this.Coordinate_14_199_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(-1.2470),doubleToFloat(0.0700),doubleToFloat(0.7975),doubleToFloat(-1.2090),doubleToFloat(0.0872),doubleToFloat(-1.3490),doubleToFloat(0.7098),doubleToFloat(-0.0015),doubleToFloat(0.8912),doubleToFloat(0.7183),doubleToFloat(0.0002),doubleToFloat(-1.2830),doubleToFloat(0.9295),doubleToFloat(-0.6130),doubleToFloat(1.4780),doubleToFloat(-1.6470),doubleToFloat(-0.4252),doubleToFloat(1.3880),doubleToFloat(-1.5890),doubleToFloat(-0.3921),doubleToFloat(-1.9890),doubleToFloat(1.0440),doubleToFloat(-0.5947),doubleToFloat(-1.9840),doubleToFloat(0.8227),doubleToFloat(-2.5210),doubleToFloat(2.4080),doubleToFloat(-1.9510),doubleToFloat(-2.3340),doubleToFloat(2.0800)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.8920),doubleToFloat(-2.3010),doubleToFloat(-2.4090),doubleToFloat(1.1920),doubleToFloat(-2.6140),doubleToFloat(-2.2480),doubleToFloat(0.5703),doubleToFloat(-3.9580),doubleToFloat(1.6940),doubleToFloat(-0.8836),doubleToFloat(-4.2),doubleToFloat(1.7500),doubleToFloat(-0.8251),doubleToFloat(-4.1670),doubleToFloat(-2.0710),doubleToFloat(0.7842),doubleToFloat(-3.9680),doubleToFloat(-1.9340),doubleToFloat(1.0370),doubleToFloat(-0.5968),doubleToFloat(-0.1872),doubleToFloat(1.6420),doubleToFloat(-2.5610),doubleToFloat(1.9410),doubleToFloat(1.9510),doubleToFloat(-0.9492),doubleToFloat(0.0580),doubleToFloat(1.9140),doubleToFloat(-1.0160),doubleToFloat(1.8850)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(1.6490),doubleToFloat(-2.5600),doubleToFloat(0.1377),doubleToFloat(1.0660),doubleToFloat(-2.6100),doubleToFloat(-0.2014),doubleToFloat(-1.2090),doubleToFloat(0.0872),doubleToFloat(-1.3490),doubleToFloat(0.7183),doubleToFloat(0.0002),doubleToFloat(-1.2830),doubleToFloat(0.7098),doubleToFloat(-0.0015),doubleToFloat(0.8912),doubleToFloat(-1.2470),doubleToFloat(0.0700),doubleToFloat(0.7975),doubleToFloat(-1.2090),doubleToFloat(0.0872),doubleToFloat(-1.3490),doubleToFloat(0.7098),doubleToFloat(-0.0015),doubleToFloat(0.8912)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=14, element #200, 88 total numbers made up of 44 2-tuple values */
	this.TextureCoordinate_14_200_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.8107),doubleToFloat(0.9924),doubleToFloat(0.8122),doubleToFloat(0.9033),doubleToFloat(0.7694),doubleToFloat(0.9912),doubleToFloat(0.7683),doubleToFloat(0.9026),doubleToFloat(0.1329),doubleToFloat(0.0347),doubleToFloat(0.0307),doubleToFloat(0.0051),doubleToFloat(0.0134),doubleToFloat(0.0353),doubleToFloat(0.1366),doubleToFloat(0.0058),doubleToFloat(0.1249),doubleToFloat(0.1081),doubleToFloat(0.0147),doubleToFloat(0.1170)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1349),doubleToFloat(0.1856),doubleToFloat(0.0462),doubleToFloat(0.1842),doubleToFloat(0.1559),doubleToFloat(0.0454),doubleToFloat(0.1480),doubleToFloat(0.1033),doubleToFloat(0.3244),doubleToFloat(0.0096),doubleToFloat(0.1758),doubleToFloat(0.0039),doubleToFloat(0.1759),doubleToFloat(0.0110),doubleToFloat(0.3241),doubleToFloat(0.0033),doubleToFloat(0.1730),doubleToFloat(0.1764),doubleToFloat(0.3074),doubleToFloat(0.1757)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1732),doubleToFloat(0.1519),doubleToFloat(0.3074),doubleToFloat(0.1513),doubleToFloat(0.1756),doubleToFloat(0.0320),doubleToFloat(0.2159),doubleToFloat(0.0368),doubleToFloat(0.1791),doubleToFloat(0.0165),doubleToFloat(0.3169),doubleToFloat(0.0458),doubleToFloat(0.3158),doubleToFloat(0.0193),doubleToFloat(0.1720),doubleToFloat(0.0594),doubleToFloat(0.2087),doubleToFloat(0.0476),doubleToFloat(0.1736),doubleToFloat(0.0504)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.2073),doubleToFloat(0.0640),doubleToFloat(0.2362),doubleToFloat(0.0821),doubleToFloat(0.3267),doubleToFloat(0.0796),doubleToFloat(0.1717),doubleToFloat(0.0822),doubleToFloat(0.1726),doubleToFloat(0.1297),doubleToFloat(0.3077),doubleToFloat(0.1289),doubleToFloat(0.3074),doubleToFloat(0.1865),doubleToFloat(0.1742),doubleToFloat(0.1840),doubleToFloat(0.0061),doubleToFloat(0.1086),doubleToFloat(0.1366),doubleToFloat(0.0368)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1241),doubleToFloat(0.1189),doubleToFloat(0.0168),doubleToFloat(0.0309),doubleToFloat(0.0211),doubleToFloat(0.1882),doubleToFloat(0.1400),doubleToFloat(0.1857)], Java.type("float[]"))));
  this.x3dModel = new X3D().setProfile("Immersive").setVersion("4.0")
  .setHead(new head()
    .addComponent(new component().setName("HAnim").setLevel(1))
    .addMeta(new meta().setName("title").setContent("JinLOA1.x3d"))
    .addMeta(new meta().setName("creator").setContent("Jin Hoon Lee and Min Joo Lee"))
    .addMeta(new meta().setName("translator").setContent("Chul Hee Jung and Myeong Won Lee"))
    .addMeta(new meta().setName("created").setContent("31 March 2011"))
    .addMeta(new meta().setName("translated").setContent("1 November 2014"))
    .addMeta(new meta().setName("modified").setContent("23 December 2021"))
    .addMeta(new meta().setName("TODO").setContent("rescale smaller than 30m! convert inches to meters? what about motion scaling?"))
    .addMeta(new meta().setName("description").setContent("Articulated 3D game character designed with a general graphics tool, then converted into an X3D HAnim model."))
    .addMeta(new meta().setName("reference").setContent("KoreanCharacter00ReadMe.txt"))
    .addMeta(new meta().setName("reference").setContent("KoreanCharacterHumanMotion_Infotech2014_140706.pdf"))
    .addMeta(new meta().setName("reference").setContent("KoreanCharactersIllustrated.pdf"))
    .addMeta(new meta().setName("identifier").setContent("https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Characters/JinLOA1.x3d"))
    .addMeta(new meta().setName("generator").setContent("3DS MAX, http://www.autodesk.com/products/autodesk-3ds-max/overview"))
    .addMeta(new meta().setName("generator").setContent("Suwon HAnim Converter"))
    .addMeta(new meta().setName("generator").setContent("Gnu Image Manipulation Program, http://www.gimp.org"))
    .addMeta(new meta().setName("generator").setContent("X3D-Edit 3.3, https://savage.nps.edu/X3D-Edit"))
    .addMeta(new meta().setName("license").setContent("../license.html")))
  .setScene(new Scene()
    .addChild(new WorldInfo().setTitle("JinLOA1.x3d"))
    .addChild(new NavigationInfo().setSpeed(1.5))
    .addChild(new Viewpoint().setDescription("JinLOA1").setCenterOfRotation(doubleToFloat(0.0),doubleToFloat(1.0),doubleToFloat(0.0)).setPosition(doubleToFloat(0.0),doubleToFloat(1.0),doubleToFloat(3.0)))
    .addChild(new HAnimHumanoid("hanim_JinLOA1").setName("JinLOA1").setLoa(1).setScale(doubleToFloat(0.0225),doubleToFloat(0.0225),doubleToFloat(0.0225)).setVersion("2.0")
      .setMetadata(new MetadataSet().setName("HAnimHumanoid.info").setReference(this.MetadataSet_HAnimHumanoid.info_4_23_reference)
        .addValue(new MetadataString().setName("authorName").setValue(new MFString("\"Jin Hoon Lee and Min Joo Lee, Chul Hee Jung and Myeong Won Lee\"")))
        .addValue(new MetadataString().setName("authorEmail").setValue(new MFString("\"myeongwonlee@gmail.com\"")))
        .addValue(new MetadataString().setName("creationDate").setValue(new MFString("\"31 March 2011\"")))
        .addValue(new MetadataString().setName("gender").setValue(new MFString("\"female\"")))
        .addValue(new MetadataFloat().setName("height").setValue(Java.to([doubleToFloat(1.5)], Java.type("float[]"))))
        .addValue(new MetadataFloat().setName("weight").setValue(Java.to([doubleToFloat(50.0)], Java.type("float[]"))))
        .addValue(new MetadataString().setName("humanoidVersion").setValue(new MFString("\"validation testing\""))))
      .addSkeleton(new HAnimJoint("hanim_humanoid_root").setName("humanoid_root").setCenter(doubleToFloat(0.0),doubleToFloat(30.530001),doubleToFloat(-0.707600)).setLlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]")))
        .addChild(new HAnimSegment("hanim_sacrum").setName("sacrum")
          .addChild(new Transform().setTranslation(doubleToFloat(0.0),doubleToFloat(30.530001),doubleToFloat(-0.707600))
            .addChild(new Shape()
              .setAppearance(new Appearance()
                .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588),doubleToFloat(0.588),doubleToFloat(0.588)))
                .setTexture(new ImageTexture("JinLOA1TextureAtlas").setUrl(new MFString("\"images/Jin.png\" \"https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Characters/images/Jin.png\""))))
              .setGeometry(new IndexedFaceSet().setCreaseAngle(3.14159).setCoordIndex(this.IndexedFaceSet_8_34_coordIndex).setTexCoordIndex(this.IndexedFaceSet_8_34_texCoordIndex)
                .setCoord(new Coordinate().setPoint(this.Coordinate_9_34_point))
                .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_9_35_point))))))
        .addChild(new HAnimJoint("hanim_sacroiliac").setName("sacroiliac").setCenter(doubleToFloat(0.0),doubleToFloat(35.799999),doubleToFloat(-0.707600)).setLlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]")))
          .addChild(new HAnimSegment("hanim_pelvis").setName("pelvis")
            .addChild(new Transform().setTranslation(doubleToFloat(0.0),doubleToFloat(35.799999),doubleToFloat(-0.707600))
              .addChild(new Shape()
                .setAppearance(new Appearance()
                  .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588),doubleToFloat(0.588),doubleToFloat(0.588)))
                  .setTexture(new ImageTexture()))
                .setGeometry(new IndexedFaceSet().setCreaseAngle(3.14159).setCoordIndex(this.IndexedFaceSet_9_43_coordIndex).setTexCoordIndex(this.IndexedFaceSet_9_43_texCoordIndex)
                  .setCoord(new Coordinate().setPoint(this.Coordinate_10_43_point))
                  .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_10_44_point))))))
          .addChild(new HAnimJoint("hanim_l_hip").setName("l_hip").setCenter(doubleToFloat(4.207),doubleToFloat(32.020),doubleToFloat(-0.815500)).setLlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]")))
            .addChild(new HAnimSegment("hanim_l_thigh").setName("l_thigh")
              .addChild(new Transform().setTranslation(doubleToFloat(4.207),doubleToFloat(32.020),doubleToFloat(-0.815500))
                .addChild(new Shape()
                  .setAppearance(new Appearance()
                    .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588),doubleToFloat(0.588),doubleToFloat(0.588)))
                    .setTexture(new ImageTexture()))
                  .setGeometry(new IndexedFaceSet().setCreaseAngle(3.14159).setCoordIndex(this.IndexedFaceSet_10_52_coordIndex).setTexCoordIndex(this.IndexedFaceSet_10_52_texCoordIndex)
                    .setCoord(new Coordinate().setPoint(this.Coordinate_11_52_point))
                    .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_11_53_point))))))
            .addChild(new HAnimJoint("hanim_l_knee").setName("l_knee").setCenter(doubleToFloat(4.116),doubleToFloat(17.260),doubleToFloat(-0.863900)).setLlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]")))
              .addChild(new HAnimSegment("hanim_l_calf").setName("l_calf")
                .addChild(new Transform().setTranslation(doubleToFloat(4.116),doubleToFloat(17.260),doubleToFloat(-0.863900))
                  .addChild(new Shape()
                    .setAppearance(new Appearance()
                      .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588),doubleToFloat(0.588),doubleToFloat(0.588)))
                      .setTexture(new ImageTexture()))
                    .setGeometry(new IndexedFaceSet().setCreaseAngle(3.14159).setCoordIndex(this.IndexedFaceSet_11_61_coordIndex).setTexCoordIndex(this.IndexedFaceSet_11_61_texCoordIndex)
                      .setCoord(new Coordinate().setPoint(this.Coordinate_12_61_point))
                      .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_12_62_point))))))
              .addChild(new HAnimJoint("hanim_l_talocrural").setName("l_talocrural").setCenter(doubleToFloat(3.854),doubleToFloat(3.939),doubleToFloat(-0.703800)).setLlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]")))
                .addChild(new HAnimSegment("hanim_l_talus").setName("l_talus")
                  .addChild(new Transform().setTranslation(doubleToFloat(3.854),doubleToFloat(3.939),doubleToFloat(-0.703800))
                    .addChild(new Shape()
                      .setAppearance(new Appearance()
                        .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588),doubleToFloat(0.588),doubleToFloat(0.588)))
                        .setTexture(new ImageTexture()))
                      .setGeometry(new IndexedFaceSet().setCreaseAngle(3.14159).setCoordIndex(this.IndexedFaceSet_12_70_coordIndex).setTexCoordIndex(this.IndexedFaceSet_12_70_texCoordIndex)
                        .setCoord(new Coordinate().setPoint(this.Coordinate_13_70_point))
                        .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_13_71_point))))))
                .addChild(new HAnimJoint("hanim_l_metatarsophalangeal_2").setName("l_metatarsophalangeal_2").setCenter(doubleToFloat(3.854),doubleToFloat(3.640),doubleToFloat(0.740200)).setLlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]")))
                  .addChild(new HAnimSegment("hanim_l_tarsal_proximal_phalanx_2").setName("l_tarsal_proximal_phalanx_2")
                    .addComments(" TODO append _2 ")
                    .addChild(new Transform().setTranslation(doubleToFloat(3.854),doubleToFloat(3.640),doubleToFloat(0.740200))
                      .addChild(new Shape()
                        .setAppearance(new Appearance()
                          .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588),doubleToFloat(0.588),doubleToFloat(0.588)))
                          .setTexture(new ImageTexture()))
                        .setGeometry(new IndexedFaceSet().setCreaseAngle(3.14159).setCoordIndex(this.IndexedFaceSet_13_79_coordIndex).setTexCoordIndex(this.IndexedFaceSet_13_79_texCoordIndex)
                          .setCoord(new Coordinate().setPoint(this.Coordinate_14_79_point))
                          .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_14_80_point))))))))))
          .addChild(new HAnimJoint("hanim_r_hip").setName("r_hip").setCenter(doubleToFloat(-4.207),doubleToFloat(32.020),doubleToFloat(-0.815500)).setLlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]")))
            .addChild(new HAnimSegment("hanim_r_thigh").setName("r_thigh")
              .addChild(new Transform().setTranslation(doubleToFloat(-4.207),doubleToFloat(32.020),doubleToFloat(-0.815500))
                .addChild(new Shape()
                  .setAppearance(new Appearance()
                    .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588),doubleToFloat(0.588),doubleToFloat(0.588)))
                    .setTexture(new ImageTexture()))
                  .setGeometry(new IndexedFaceSet().setCreaseAngle(3.14159).setCoordIndex(this.IndexedFaceSet_10_92_coordIndex).setTexCoordIndex(this.IndexedFaceSet_10_92_texCoordIndex)
                    .setCoord(new Coordinate().setPoint(this.Coordinate_11_92_point))
                    .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_11_93_point))))))
            .addChild(new HAnimJoint("hanim_r_knee").setName("r_knee").setCenter(doubleToFloat(-4.116),doubleToFloat(17.260),doubleToFloat(-0.863900)).setLlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]")))
              .addChild(new HAnimSegment("hanim_r_calf").setName("r_calf")
                .addChild(new Transform().setTranslation(doubleToFloat(-4.116),doubleToFloat(17.260),doubleToFloat(-0.863900))
                  .addChild(new Shape()
                    .setAppearance(new Appearance()
                      .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588),doubleToFloat(0.588),doubleToFloat(0.588)))
                      .setTexture(new ImageTexture()))
                    .setGeometry(new IndexedFaceSet().setCreaseAngle(3.14159).setCoordIndex(this.IndexedFaceSet_11_101_coordIndex).setTexCoordIndex(this.IndexedFaceSet_11_101_texCoordIndex)
                      .setCoord(new Coordinate().setPoint(this.Coordinate_12_101_point))
                      .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_12_102_point))))))
              .addChild(new HAnimJoint("hanim_r_talocrural").setName("r_talocrural").setCenter(doubleToFloat(-3.854),doubleToFloat(3.939),doubleToFloat(-0.703800)).setLlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]")))
                .addChild(new HAnimSegment("hanim_r_talus").setName("r_talus")
                  .addChild(new Transform().setTranslation(doubleToFloat(-3.854),doubleToFloat(3.939),doubleToFloat(-0.703800))
                    .addChild(new Shape()
                      .setAppearance(new Appearance()
                        .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588),doubleToFloat(0.588),doubleToFloat(0.588)))
                        .setTexture(new ImageTexture()))
                      .setGeometry(new IndexedFaceSet().setCreaseAngle(3.14159).setCoordIndex(this.IndexedFaceSet_12_110_coordIndex).setTexCoordIndex(this.IndexedFaceSet_12_110_texCoordIndex)
                        .setCoord(new Coordinate().setPoint(this.Coordinate_13_110_point))
                        .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_13_111_point))))))
                .addChild(new HAnimJoint("hanim_r_metatarsophalangeal_2").setName("r_metatarsophalangeal_2").setCenter(doubleToFloat(-3.854),doubleToFloat(3.640),doubleToFloat(0.740200)).setLlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]")))
                  .addChild(new HAnimSegment("hanim_r_tarsal_proximal_phalanx_2").setName("r_tarsal_proximal_phalanx_2")
                    .addComments(" TODO append _2 ")
                    .addChild(new Transform().setTranslation(doubleToFloat(-3.854),doubleToFloat(3.640),doubleToFloat(0.740200))
                      .addChild(new Shape()
                        .setAppearance(new Appearance()
                          .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588),doubleToFloat(0.588),doubleToFloat(0.588)))
                          .setTexture(new ImageTexture()))
                        .setGeometry(new IndexedFaceSet().setCreaseAngle(3.14159).setCoordIndex(this.IndexedFaceSet_13_119_coordIndex).setTexCoordIndex(this.IndexedFaceSet_13_119_texCoordIndex)
                          .setCoord(new Coordinate().setPoint(this.Coordinate_14_119_point))
                          .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_14_120_point)))))))))))
        .addChild(new HAnimJoint("hanim_vl5").setName("vl5").setCenter(doubleToFloat(0.0),doubleToFloat(40.070),doubleToFloat(-0.852700)).setLlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]")))
          .addChild(new HAnimSegment("hanim_l5").setName("l5")
            .addChild(new Transform().setTranslation(doubleToFloat(0.0),doubleToFloat(40.070),doubleToFloat(-0.852700))
              .addChild(new Shape()
                .setAppearance(new Appearance()
                  .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588),doubleToFloat(0.588),doubleToFloat(0.588)))
                  .setTexture(new ImageTexture()))
                .setGeometry(new IndexedFaceSet().setCreaseAngle(3.14159).setCoordIndex(this.IndexedFaceSet_9_133_coordIndex).setTexCoordIndex(this.IndexedFaceSet_9_133_texCoordIndex)
                  .setCoord(new Coordinate().setPoint(this.Coordinate_10_133_point))
                  .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_10_134_point))))))
          .addChild(new HAnimJoint("hanim_skullbase").setName("skullbase").setCenter(doubleToFloat(0.0),doubleToFloat(57.430),doubleToFloat(-0.686300)).setLlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]")))
            .addChild(new HAnimSegment("hanim_skull").setName("skull")
              .addChild(new Transform().setTranslation(doubleToFloat(0.0),doubleToFloat(57.430),doubleToFloat(-0.686300))
                .addChild(new Shape()
                  .setAppearance(new Appearance()
                    .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588),doubleToFloat(0.588),doubleToFloat(0.588)))
                    .setTexture(new ImageTexture()))
                  .setGeometry(new IndexedFaceSet().setCreaseAngle(3.14159).setCoordIndex(this.IndexedFaceSet_10_142_coordIndex).setTexCoordIndex(this.IndexedFaceSet_10_142_texCoordIndex)
                    .setCoord(new Coordinate().setPoint(this.Coordinate_11_142_point))
                    .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_11_143_point))))))
            .addChild(new HAnimJoint("hanim_l_shoulder").setName("l_shoulder").setCenter(doubleToFloat(5.975),doubleToFloat(52.0),doubleToFloat(-0.145200)).setLlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]")))
              .addChild(new HAnimSegment("hanim_l_upperarm").setName("l_upperarm")
                .addChild(new Transform().setTranslation(doubleToFloat(5.975),doubleToFloat(52.0),doubleToFloat(-0.145200))
                  .addChild(new Shape()
                    .setAppearance(new Appearance()
                      .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588),doubleToFloat(0.588),doubleToFloat(0.588)))
                      .setTexture(new ImageTexture()))
                    .setGeometry(new IndexedFaceSet().setCreaseAngle(3.14159).setCoordIndex(this.IndexedFaceSet_11_151_coordIndex).setTexCoordIndex(this.IndexedFaceSet_11_151_texCoordIndex)
                      .setCoord(new Coordinate().setPoint(this.Coordinate_12_151_point))
                      .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_12_152_point))))))
              .addChild(new HAnimJoint("hanim_l_elbow").setName("l_elbow").setCenter(doubleToFloat(8.093),doubleToFloat(40.380001),doubleToFloat(-0.250200)).setLlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]")))
                .addChild(new HAnimSegment("hanim_l_forearm").setName("l_forearm")
                  .addChild(new Transform().setTranslation(doubleToFloat(8.093),doubleToFloat(40.380001),doubleToFloat(-0.250200))
                    .addChild(new Shape()
                      .setAppearance(new Appearance()
                        .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588),doubleToFloat(0.588),doubleToFloat(0.588)))
                        .setTexture(new ImageTexture()))
                      .setGeometry(new IndexedFaceSet().setCreaseAngle(3.14159).setCoordIndex(this.IndexedFaceSet_12_160_coordIndex).setTexCoordIndex(this.IndexedFaceSet_12_160_texCoordIndex)
                        .setCoord(new Coordinate().setPoint(this.Coordinate_13_160_point))
                        .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_13_161_point))))))
                .addChild(new HAnimJoint("hanim_l_radiocarpal").setName("l_radiocarpal").setCenter(doubleToFloat(7.808),doubleToFloat(31.459999),doubleToFloat(-0.058490)).setLlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]")))
                  .addChild(new HAnimSegment("hanim_l_carpal").setName("l_carpal")
                    .addChild(new Transform().setTranslation(doubleToFloat(7.808),doubleToFloat(31.459999),doubleToFloat(-0.058490))
                      .addChild(new Shape()
                        .setAppearance(new Appearance()
                          .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588),doubleToFloat(0.588),doubleToFloat(0.588)))
                          .setTexture(new ImageTexture()))
                        .setGeometry(new IndexedFaceSet().setCreaseAngle(3.14159).setCoordIndex(this.IndexedFaceSet_13_169_coordIndex).setTexCoordIndex(this.IndexedFaceSet_13_169_texCoordIndex)
                          .setCoord(new Coordinate().setPoint(this.Coordinate_14_169_point))
                          .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_14_170_point)))))))))
            .addChild(new HAnimJoint("hanim_r_shoulder").setName("r_shoulder").setCenter(doubleToFloat(-5.975),doubleToFloat(52.0),doubleToFloat(-0.145200)).setLlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]")))
              .addChild(new HAnimSegment("hanim_r_upperarm").setName("r_upperarm")
                .addChild(new Transform().setTranslation(doubleToFloat(-5.975),doubleToFloat(52.0),doubleToFloat(-0.145200))
                  .addChild(new Shape()
                    .setAppearance(new Appearance()
                      .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588),doubleToFloat(0.588),doubleToFloat(0.588)))
                      .setTexture(new ImageTexture()))
                    .setGeometry(new IndexedFaceSet().setCreaseAngle(3.14159).setCoordIndex(this.IndexedFaceSet_11_181_coordIndex).setTexCoordIndex(this.IndexedFaceSet_11_181_texCoordIndex)
                      .setCoord(new Coordinate().setPoint(this.Coordinate_12_181_point))
                      .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_12_182_point))))))
              .addChild(new HAnimJoint("hanim_r_elbow").setName("r_elbow").setCenter(doubleToFloat(-8.093),doubleToFloat(40.380001),doubleToFloat(-0.250200)).setLlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]")))
                .addChild(new HAnimSegment("hanim_r_forearm").setName("r_forearm")
                  .addChild(new Transform().setTranslation(doubleToFloat(-8.093),doubleToFloat(40.380001),doubleToFloat(-0.250200))
                    .addChild(new Shape()
                      .setAppearance(new Appearance()
                        .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588),doubleToFloat(0.588),doubleToFloat(0.588)))
                        .setTexture(new ImageTexture()))
                      .setGeometry(new IndexedFaceSet().setCreaseAngle(3.14159).setCoordIndex(this.IndexedFaceSet_12_190_coordIndex).setTexCoordIndex(this.IndexedFaceSet_12_190_texCoordIndex)
                        .setCoord(new Coordinate().setPoint(this.Coordinate_13_190_point))
                        .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_13_191_point))))))
                .addChild(new HAnimJoint("hanim_r_radiocarpal").setName("r_radiocarpal").setCenter(doubleToFloat(-7.808),doubleToFloat(31.459999),doubleToFloat(-0.058490)).setLlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]")))
                  .addChild(new HAnimSegment("hanim_r_carpal").setName("r_carpal")
                    .addChild(new Transform().setTranslation(doubleToFloat(-7.808),doubleToFloat(31.459999),doubleToFloat(-0.058490))
                      .addChild(new Shape()
                        .setAppearance(new Appearance()
                          .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588),doubleToFloat(0.588),doubleToFloat(0.588)))
                          .setTexture(new ImageTexture()))
                        .setGeometry(new IndexedFaceSet().setCreaseAngle(3.14159).setCoordIndex(this.IndexedFaceSet_13_199_coordIndex).setTexCoordIndex(this.IndexedFaceSet_13_199_texCoordIndex)
                          .setCoord(new Coordinate().setPoint(this.Coordinate_14_199_point))
                          .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_14_200_point))))))))))))
      .addJoints(new HAnimJoint().setLlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))))
      .addJoints(new HAnimJoint().setLlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))))
      .addJoints(new HAnimJoint().setLlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))))
      .addJoints(new HAnimJoint().setLlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))))
      .addJoints(new HAnimJoint().setLlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))))
      .addJoints(new HAnimJoint().setLlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))))
      .addJoints(new HAnimJoint().setLlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))))
      .addJoints(new HAnimJoint().setLlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))))
      .addJoints(new HAnimJoint().setLlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))))
      .addJoints(new HAnimJoint().setLlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))))
      .addJoints(new HAnimJoint().setLlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))))
      .addJoints(new HAnimJoint().setLlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))))
      .addJoints(new HAnimJoint().setLlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))))
      .addJoints(new HAnimJoint().setLlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))))
      .addJoints(new HAnimJoint().setLlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))))
      .addJoints(new HAnimJoint().setLlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))))
      .addJoints(new HAnimJoint().setLlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))))
      .addJoints(new HAnimJoint().setLlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))))
      .addSegments(new HAnimSegment())
      .addSegments(new HAnimSegment())
      .addSegments(new HAnimSegment())
      .addSegments(new HAnimSegment())
      .addSegments(new HAnimSegment())
      .addSegments(new HAnimSegment())
      .addSegments(new HAnimSegment())
      .addSegments(new HAnimSegment())
      .addSegments(new HAnimSegment())
      .addSegments(new HAnimSegment())
      .addSegments(new HAnimSegment())
      .addSegments(new HAnimSegment())
      .addSegments(new HAnimSegment())
      .addSegments(new HAnimSegment())
      .addSegments(new HAnimSegment())
      .addSegments(new HAnimSegment())
      .addSegments(new HAnimSegment())
      .addSegments(new HAnimSegment())));
  },
  // end of initialize() method


  /** Provide a shallow copy of the X3D model.
   * @return JinLOA1 model
   */
  getX3dModel : function()
  {	  
	  return this.x3dModel;
  },
  
  /** Indicate X3DJSAIL validation results for this X3D model.
   * @return validation results plus exception information, if any
   */
  validateSelf : function()
  {
	var       metaResult = "";
	var validationResult = "";
	var  exceptionResult = "";
	try
	{
		this.initialize();
		
		if ((this.getX3dModel() == null) || (this.getX3dModel().getHead() == null))
		{
			validationResult = "empty scene, nothing to validate. " + this.x3dModel.validate();
			return validationResult;
		}
		// first list informational meta elements of interest
		var metaList = this.getX3dModel().getHead().getMetaList();
		for (var m in metaList) {
			var metaObject = metaList[m];
			if (metaObject.getName().equals(metaObject.NAME_ERROR) ||
				metaObject.getName().equals(metaObject.NAME_WARNING) ||
				metaObject.getName().equals(metaObject.NAME_HINT) ||
				metaObject.getName().equals(metaObject.NAME_INFO) ||
				metaObject.getName().equals(metaObject.NAME_TODO))
			{
				metaResult += metaObject.toStringX3D();
			}
		}
		validationResult += this.x3dModel.validate(); // walk entire tree to validate correctness
	}
	catch (e)
	{
		exceptionResult = e; // report exception failures, if any
	}
	if  (metaResult === "" && exceptionResult === "" && validationResult === "")
	     return "success";
	else
	{
		var returnMessage = metaResult;
		if  (exceptionResult !== "" && validationResult !== "")
			returnMessage += "\n*** ";
		returnMessage += exceptionResult;
		if  (exceptionResult === "" && validationResult !== "")
			returnMessage = "\n" + returnMessage; // skip line before meta tags, etc.
		returnMessage += validationResult;
		return returnMessage;
	}
  },
    /** Default main() method provided for test purposes.
     * @param argv input parameters
     */
    main : function (argv)
    {
		var testObject = new JinLOA1();
		print ("JinLOA1 execution self-validation test results: " + testObject.validateSelf());
	}
}
new JinLOA1().main();