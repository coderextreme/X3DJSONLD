load('X3Dautoclass.js');

// Javadoc annotations follow, see below for source.
/**
 * <p> Articulated 3D game character designed with a general graphics tool, then converted into an X3D HAnim model. </p>
 <p> Related links: KoreanCharacter05Ju.java source, <a href="https://www.web3d.org/x3d/content/examples/X3dResources.html" target="_blank">X3D Resources</a>, <a href="https://www.web3d.org/x3d/content/examples/X3dSceneAuthoringHints.html" target="_blank">X3D Scene Authoring Hints</a> and <a href="https://www.web3d.org/x3d/content/X3dTooltips.html" target="_blank">X3D Tooltips</a>. </p>
	<table style="color:black; border:0px solid; border-spacing:10px 0px;" summary="Scene Metadata">
		<tr style="background-color:silver; border-color:silver;">
			<td style="text-align:center; padding:10px 0px;"><i>meta tags</i></td>
			<td style="text-align:left;   padding:10px 0px;">net.x3djsonld.data.KoreanCharacter05Ju&nbsp; Document Metadata </td>
		</tr>

		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> title </i> </td>
			<td> <a href="https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Characters/KoreanCharacter05Ju.x3d">KoreanCharacter05Ju.x3d</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> creator </i> </td>
			<td> Jin Hoon Lee and Min Joo Lee </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> translator </i> </td>
			<td> Chul Hee Jung and Myeong Won Lee </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> created </i> </td>
			<td> 31 March 2011 </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> translated </i> </td>
			<td> 1 November 2014 </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> modified </i> </td>
			<td> 23 December 2021 </td>
		</tr>
		<tr style="color:burntorange">
			<td style="text-align:right; vertical-align: text-top;"> <i> warning </i> </td>
			<td> HAnimJoint and HAnimSegment names upgraded to HAnim2 but graph topology has inconsistencies that do not match loa=1 specification hierarchy </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> description </i> </td>
			<td> Articulated 3D game character designed with a general graphics tool, then converted into an X3D HAnim model. </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> reference </i> </td>
			<td> KoreanCharacter00ReadMe.txt </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> reference </i> </td>
			<td> <a href="https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Characters/KoreanCharacterHumanMotion_Infotech2014_140706.pdf">KoreanCharacterHumanMotion_Infotech2014_140706.pdf</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> reference </i> </td>
			<td> <a href="https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Characters/KoreanCharactersIllustrated.pdf">KoreanCharactersIllustrated.pdf</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> identifier </i> </td>
			<td> <a href="https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Characters/KoreanCharacter05Ju.x3d" target="_blank">https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Characters/KoreanCharacter05Ju.x3d</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> generator </i> </td>
			<td> 3DS MAX, <a href="http://www.autodesk.com/products/autodesk-3ds-max/overview" target="_blank">http://www.autodesk.com/products/autodesk-3ds-max/overview</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> generator </i> </td>
			<td> Suwon University HAnim Editor </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> generator </i> </td>
			<td> Gnu Image Manipulation Program, <a href="http://www.gimp.org" target="_blank">http://www.gimp.org</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> generator </i> </td>
			<td> X3D-Edit 3.3, <a href="https://savage.nps.edu/X3D-Edit" target="_blank">https://savage.nps.edu/X3D-Edit</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> license </i> </td>
			<td> <a href="https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Characters/../license.html">../license.html</a> </td>
		</tr>
		<tr style="background-color:silver; border-color:silver;">
			<td style="text-align:center;" colspan="2">  &nbsp; </td>
		</tr>
	</table>

	<p>
		This program uses the
		<a href="https://www.web3d.org/specifications/java/X3DJSAIL.html" target="_blank">X3D Java Scene Access Interface Library (X3DJSAIL)</a>.
		It has been produced using the 
		<a href="https://www.web3d.org/x3d/stylesheets/X3dToES5.xslt" target="_blank">X3dToES5.xslt</a>
		stylesheet to create ES5 source code from an <code>.x3d</code> scene.
	</p>

	* @author Jin Hoon Lee and Min Joo Lee
 */

function KoreanCharacter05Ju
  /** Default constructor to create this object. */
  ()
  {
    /** The initialized model object, created within initialize() method. */
    this.x3dModel = {};
    this.initialize();
    return this;
  }
  function doubleToFloat(d) {
    if (Float32Array) {
        return new Float32Array([d])[0];
    }
  }
KoreanCharacter05Ju.prototype = {
  /** Create and initialize the X3D model. */
  initialize : function ()
  {

	/** Large attribute array: MetadataSet reference field, scene-graph level=4, element #23, 1 total value */
	this.MetadataSet_HAnimHumanoid.info_4_23_reference = new SFString("https://www.web3d.org/documents/specifications/19774/V2.0/Architecture/ObjectInterfaces.html#Humanoid");

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=8, element #33, 480 total numbers */
	this.IndexedFaceSet_8_33_coordIndex = new MFInt32(Java.to([2,3,0,-1,0,1,2,-1,4,5,3,-1,3,2,4,-1,6,7,5,-1,5,4,6,-1,8,9,7,-1,7,6,8,-1,10,11,9,-1,9,8,10,-1,12,13,11,-1,11,10,12,-1,14,15,13,-1,13,12,14,-1,16,17,15,-1,15,14,16,-1,18,19,17,-1,17,16,18,-1,20,21,19,-1,19,18,20,-1,22,23,21,-1,21,20,22,-1,1,0,23,-1,23,22,1,-1,25,2,1,-1,1,24,25,-1,26,4,2,-1,2,25,26,-1,27,6,4,-1,4,26,27,-1,28,8,6,-1,6,27,28,-1,29,10,8,-1,8,28,29,-1,30,12,10,-1,10,29,30,-1,31,14,12,-1,12,30,31,-1,32,16,14,-1,14,31,32,-1,33,18,16,-1,16,32,33,-1,34,20,18,-1,18,33,34,-1,35,22,20,-1,20,34,35,-1,24,1,22,-1,22,35,24,-1,37,25,24,-1,24,36,37,-1,38,26,25,-1,25,37,38,-1,39,27,26,-1,26,38,39,-1,40,28,27,-1,27,39,40,-1,41,29,28,-1,28,40,41,-1,42,30,29,-1,29,41,42,-1,43,31,30,-1,30,42,43,-1,44,32,31,-1,31,43,44,-1,45,33,32,-1,32,44,45,-1,46,34,33,-1,33,45,46,-1,47,35,34,-1,34,46,47,-1,36,24,35,-1,35,47,36,-1,48,37,36,-1,48,38,37,-1,48,39,38,-1,48,40,39,-1,48,41,40,-1,48,42,41,-1,48,43,42,-1,48,44,43,-1,48,45,44,-1,48,46,45,-1,48,47,46,-1,48,36,47,-1,0,3,50,-1,50,49,0,-1,3,5,51,-1,51,50,3,-1,5,7,52,-1,52,51,5,-1,7,9,53,-1,53,52,7,-1,9,11,54,-1,54,53,9,-1,11,13,55,-1,55,54,11,-1,13,15,56,-1,56,55,13,-1,15,17,57,-1,57,56,15,-1,17,19,58,-1,58,57,17,-1,19,21,59,-1,59,58,19,-1,21,23,60,-1,60,59,21,-1,23,0,49,-1,49,60,23,-1,49,50,61,-1,50,51,61,-1,51,52,61,-1,52,53,61,-1,53,54,61,-1,54,55,61,-1,55,56,61,-1,56,57,61,-1,57,58,61,-1,58,59,61,-1,59,60,61,-1,60,49,61,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=8, element #33, 480 total numbers */
	this.IndexedFaceSet_8_33_texCoordIndex = new MFInt32(Java.to([2,3,0,-1,0,1,2,-1,4,5,3,-1,3,2,4,-1,6,7,5,-1,5,4,6,-1,8,9,7,-1,7,6,8,-1,10,11,9,-1,9,8,10,-1,12,13,11,-1,11,10,12,-1,14,15,13,-1,13,12,14,-1,16,17,15,-1,15,14,16,-1,18,19,17,-1,17,16,18,-1,20,21,19,-1,19,18,20,-1,22,23,21,-1,21,20,22,-1,1,0,23,-1,23,22,1,-1,25,2,1,-1,1,24,25,-1,26,4,2,-1,2,25,26,-1,27,6,4,-1,4,26,27,-1,28,8,6,-1,6,27,28,-1,29,10,8,-1,8,28,29,-1,30,12,10,-1,10,29,30,-1,31,14,12,-1,12,30,31,-1,32,16,14,-1,14,31,32,-1,33,18,16,-1,16,32,33,-1,34,20,18,-1,18,33,34,-1,35,22,20,-1,20,34,35,-1,24,1,22,-1,22,35,24,-1,37,25,24,-1,24,36,37,-1,38,26,25,-1,25,37,38,-1,39,27,26,-1,26,38,39,-1,40,28,27,-1,27,39,40,-1,41,29,28,-1,28,40,41,-1,42,30,29,-1,29,41,42,-1,43,31,30,-1,30,42,43,-1,44,32,31,-1,31,43,44,-1,45,33,32,-1,32,44,45,-1,46,34,33,-1,33,45,46,-1,47,35,34,-1,34,46,47,-1,36,24,35,-1,35,47,36,-1,48,37,36,-1,48,38,37,-1,48,39,38,-1,48,40,39,-1,48,41,40,-1,48,42,41,-1,48,43,42,-1,48,44,43,-1,48,45,44,-1,48,46,45,-1,48,47,46,-1,48,36,47,-1,0,3,50,-1,50,49,0,-1,3,5,51,-1,51,50,3,-1,5,7,52,-1,52,51,5,-1,7,9,53,-1,53,52,7,-1,9,11,54,-1,54,53,9,-1,11,13,55,-1,55,54,11,-1,13,15,56,-1,56,55,13,-1,15,17,57,-1,57,56,15,-1,17,19,58,-1,58,57,17,-1,19,21,59,-1,59,58,19,-1,21,23,60,-1,60,59,21,-1,23,0,49,-1,49,60,23,-1,49,50,61,-1,50,51,61,-1,51,52,61,-1,52,53,61,-1,53,54,61,-1,54,55,61,-1,55,56,61,-1,56,57,61,-1,57,58,61,-1,58,59,61,-1,59,60,61,-1,60,49,61,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=9, element #33, 186 total numbers made up of 62 3-tuple values */
	this.Coordinate_9_33_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(0.0000),doubleToFloat(0.4454),doubleToFloat(-0.7459),doubleToFloat(0.0000),doubleToFloat(0.0007),doubleToFloat(-0.8150),doubleToFloat(-0.5564),doubleToFloat(0.0003),doubleToFloat(-0.6950),doubleToFloat(-0.4789),doubleToFloat(0.4454),doubleToFloat(-0.6425),doubleToFloat(-0.9644),doubleToFloat(-0.0008),doubleToFloat(-0.4321),doubleToFloat(-0.8298),doubleToFloat(0.4454),doubleToFloat(-0.3599),doubleToFloat(-1.1130),doubleToFloat(-0.0019),doubleToFloat(0.0252),doubleToFloat(-0.9580),doubleToFloat(0.4454),doubleToFloat(0.0246),doubleToFloat(-0.9670),doubleToFloat(-0.0019),doubleToFloat(0.4693),doubleToFloat(-0.8331),doubleToFloat(0.4454),doubleToFloat(0.3868)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.5615),doubleToFloat(-0.0019),doubleToFloat(0.6928),doubleToFloat(-0.4847),doubleToFloat(0.4454),doubleToFloat(0.5842),doubleToFloat(0.0000),doubleToFloat(-0.0021),doubleToFloat(0.8150),doubleToFloat(0.0000),doubleToFloat(0.4454),doubleToFloat(0.7124),doubleToFloat(0.5615),doubleToFloat(-0.0023),doubleToFloat(0.6928),doubleToFloat(0.4843),doubleToFloat(0.4454),doubleToFloat(0.5843),doubleToFloat(0.9670),doubleToFloat(-0.0023),doubleToFloat(0.4693),doubleToFloat(0.8333),doubleToFloat(0.4454),doubleToFloat(0.3864),doubleToFloat(1.1130),doubleToFloat(-0.0021),doubleToFloat(0.0254),doubleToFloat(0.9579),doubleToFloat(0.4454),doubleToFloat(0.0250)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.9643),doubleToFloat(-0.0010),doubleToFloat(-0.4322),doubleToFloat(0.8295),doubleToFloat(0.4454),doubleToFloat(-0.3602),doubleToFloat(0.5564),doubleToFloat(0.0003),doubleToFloat(-0.6950),doubleToFloat(0.4789),doubleToFloat(0.4454),doubleToFloat(-0.6425),doubleToFloat(0.0000),doubleToFloat(-0.4517),doubleToFloat(-0.6943),doubleToFloat(-0.4820),doubleToFloat(-0.4521),doubleToFloat(-0.5899),doubleToFloat(-0.8344),doubleToFloat(-0.4524),doubleToFloat(-0.3056),doubleToFloat(-0.9635),doubleToFloat(-0.4517),doubleToFloat(0.0254),doubleToFloat(-0.8367),doubleToFloat(-0.4526),doubleToFloat(0.4089),doubleToFloat(-0.4855),doubleToFloat(-0.4549),doubleToFloat(0.5870)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.0000),doubleToFloat(-0.4553),doubleToFloat(0.6926),doubleToFloat(0.4853),doubleToFloat(-0.4539),doubleToFloat(0.5876),doubleToFloat(0.8372),doubleToFloat(-0.4519),doubleToFloat(0.4089),doubleToFloat(0.9634),doubleToFloat(-0.4519),doubleToFloat(0.0254),doubleToFloat(0.8348),doubleToFloat(-0.4521),doubleToFloat(-0.3053),doubleToFloat(0.4817),doubleToFloat(-0.4517),doubleToFloat(-0.5903),doubleToFloat(0.0000),doubleToFloat(-0.7806),doubleToFloat(-0.3645),doubleToFloat(-0.2802),doubleToFloat(-0.7803),doubleToFloat(-0.3039),doubleToFloat(-0.4810),doubleToFloat(-0.7808),doubleToFloat(-0.1965),doubleToFloat(-0.5545),doubleToFloat(-0.7803),doubleToFloat(0.0248)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.4804),doubleToFloat(-0.7802),doubleToFloat(0.2480),doubleToFloat(-0.2774),doubleToFloat(-0.7821),doubleToFloat(0.4083),doubleToFloat(0.0000),doubleToFloat(-0.7830),doubleToFloat(0.4674),doubleToFloat(0.2758),doubleToFloat(-0.7826),doubleToFloat(0.4083),doubleToFloat(0.4803),doubleToFloat(-0.7808),doubleToFloat(0.2466),doubleToFloat(0.5547),doubleToFloat(-0.7802),doubleToFloat(0.0246),doubleToFloat(0.4812),doubleToFloat(-0.7814),doubleToFloat(-0.1946),doubleToFloat(0.2787),doubleToFloat(-0.7807),doubleToFloat(-0.3037),doubleToFloat(0.0000),doubleToFloat(-0.8996),doubleToFloat(0.0253),doubleToFloat(-0.0001),doubleToFloat(0.7482),doubleToFloat(-0.4760)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.3509),doubleToFloat(0.7482),doubleToFloat(-0.4061),doubleToFloat(-0.5969),doubleToFloat(0.7482),doubleToFloat(-0.2229),doubleToFloat(-0.6804),doubleToFloat(0.7482),doubleToFloat(0.0088),doubleToFloat(-0.6042),doubleToFloat(0.7482),doubleToFloat(0.2133),doubleToFloat(-0.3645),doubleToFloat(0.7482),doubleToFloat(0.3391),doubleToFloat(-0.0001),doubleToFloat(0.7482),doubleToFloat(0.4284),doubleToFloat(0.3640),doubleToFloat(0.7482),doubleToFloat(0.3391),doubleToFloat(0.6042),doubleToFloat(0.7482),doubleToFloat(0.2130),doubleToFloat(0.6802),doubleToFloat(0.7482),doubleToFloat(0.0091),doubleToFloat(0.5965),doubleToFloat(0.7482),doubleToFloat(-0.2231)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.3508),doubleToFloat(0.7482),doubleToFloat(-0.4061),doubleToFloat(-0.0002),doubleToFloat(0.8996),doubleToFloat(-0.0243)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=9, element #34, 124 total numbers made up of 62 2-tuple values */
	this.TextureCoordinate_9_34_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.9950),doubleToFloat(0.6227),doubleToFloat(0.9911),doubleToFloat(0.5634),doubleToFloat(0.9445),doubleToFloat(0.5634),doubleToFloat(0.9587),doubleToFloat(0.6143),doubleToFloat(0.8611),doubleToFloat(0.5667),doubleToFloat(0.8645),doubleToFloat(0.6158),doubleToFloat(0.8296),doubleToFloat(0.5725),doubleToFloat(0.8297),doubleToFloat(0.6181),doubleToFloat(0.7843),doubleToFloat(0.5725),doubleToFloat(0.7986),doubleToFloat(0.6221)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7343),doubleToFloat(0.5716),doubleToFloat(0.7402),doubleToFloat(0.6181),doubleToFloat(0.6899),doubleToFloat(0.5733),doubleToFloat(0.7033),doubleToFloat(0.6238),doubleToFloat(0.7343),doubleToFloat(0.5716),doubleToFloat(0.7402),doubleToFloat(0.6181),doubleToFloat(0.7843),doubleToFloat(0.5724),doubleToFloat(0.7986),doubleToFloat(0.6221),doubleToFloat(0.8296),doubleToFloat(0.5725),doubleToFloat(0.8297),doubleToFloat(0.6181)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.8611),doubleToFloat(0.5667),doubleToFloat(0.8646),doubleToFloat(0.6158),doubleToFloat(0.9445),doubleToFloat(0.5634),doubleToFloat(0.9587),doubleToFloat(0.6143),doubleToFloat(0.9874),doubleToFloat(0.5161),doubleToFloat(0.9409),doubleToFloat(0.5169),doubleToFloat(0.8667),doubleToFloat(0.5270),doubleToFloat(0.8296),doubleToFloat(0.5279),doubleToFloat(0.7882),doubleToFloat(0.5304),doubleToFloat(0.7381),doubleToFloat(0.5276)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.6693),doubleToFloat(0.5234),doubleToFloat(0.7380),doubleToFloat(0.5277),doubleToFloat(0.7882),doubleToFloat(0.5305),doubleToFloat(0.8296),doubleToFloat(0.5279),doubleToFloat(0.8666),doubleToFloat(0.5271),doubleToFloat(0.9409),doubleToFloat(0.5170),doubleToFloat(0.9852),doubleToFloat(0.4793),doubleToFloat(0.8833),doubleToFloat(0.4954),doubleToFloat(0.8658),doubleToFloat(0.4954),doubleToFloat(0.8297),doubleToFloat(0.4954)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7933),doubleToFloat(0.4954),doubleToFloat(0.7672),doubleToFloat(0.4952),doubleToFloat(0.6706),doubleToFloat(0.4859),doubleToFloat(0.7672),doubleToFloat(0.4952),doubleToFloat(0.7936),doubleToFloat(0.4954),doubleToFloat(0.8297),doubleToFloat(0.4954),doubleToFloat(0.8655),doubleToFloat(0.4953),doubleToFloat(0.8832),doubleToFloat(0.4954),doubleToFloat(0.8296),doubleToFloat(0.4836),doubleToFloat(0.9950),doubleToFloat(0.6227)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.9587),doubleToFloat(0.6143),doubleToFloat(0.8645),doubleToFloat(0.6158),doubleToFloat(0.8297),doubleToFloat(0.6181),doubleToFloat(0.7986),doubleToFloat(0.6221),doubleToFloat(0.7402),doubleToFloat(0.6181),doubleToFloat(0.7033),doubleToFloat(0.6238),doubleToFloat(0.7402),doubleToFloat(0.6181),doubleToFloat(0.7986),doubleToFloat(0.6221),doubleToFloat(0.8297),doubleToFloat(0.6181),doubleToFloat(0.8646),doubleToFloat(0.6158)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.9587),doubleToFloat(0.6143),doubleToFloat(0.8402),doubleToFloat(0.6186)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=9, element #42, 384 total numbers */
	this.IndexedFaceSet_9_42_coordIndex = new MFInt32(Java.to([33,32,31,-1,31,30,29,-1,31,29,28,-1,33,31,28,-1,34,33,28,-1,0,1,8,-1,8,7,0,-1,1,2,9,-1,9,8,1,-1,2,3,10,-1,10,9,2,-1,3,4,11,-1,11,10,3,-1,4,5,12,-1,12,11,4,-1,5,6,13,-1,13,12,5,-1,6,0,7,-1,7,13,6,-1,7,8,15,-1,15,14,7,-1,8,9,16,-1,16,15,8,-1,9,10,17,-1,17,16,9,-1,10,11,18,-1,18,17,10,-1,11,12,19,-1,19,18,11,-1,12,13,20,-1,20,19,12,-1,13,7,14,-1,14,20,13,-1,14,15,22,-1,22,21,14,-1,15,16,23,-1,23,22,15,-1,16,17,24,-1,24,23,16,-1,17,18,25,-1,25,24,17,-1,18,19,26,-1,26,25,18,-1,19,20,27,-1,27,26,19,-1,20,14,21,-1,21,27,20,-1,28,29,1,-1,1,0,28,-1,29,30,2,-1,2,1,29,-1,30,31,3,-1,3,2,30,-1,31,32,4,-1,4,3,31,-1,32,33,5,-1,5,4,32,-1,33,34,6,-1,6,5,33,-1,34,28,0,-1,0,6,34,-1,21,22,35,-1,35,36,21,-1,22,23,37,-1,37,35,22,-1,23,24,38,-1,38,37,23,-1,24,25,39,-1,39,38,24,-1,25,26,40,-1,40,39,25,-1,26,27,41,-1,41,40,26,-1,27,21,36,-1,36,41,27,-1,36,35,42,-1,42,43,36,-1,35,37,44,-1,44,42,35,-1,37,38,45,-1,45,44,37,-1,38,39,46,-1,46,45,38,-1,39,40,47,-1,47,46,39,-1,40,41,48,-1,48,47,40,-1,41,36,43,-1,43,48,41,-1,43,42,49,-1,42,44,49,-1,44,45,49,-1,45,46,49,-1,46,47,49,-1,47,48,49,-1,48,43,49,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=9, element #42, 384 total numbers */
	this.IndexedFaceSet_9_42_texCoordIndex = new MFInt32(Java.to([5,4,3,-1,3,2,0,-1,3,0,1,-1,5,3,1,-1,6,5,1,-1,7,10,8,-1,8,9,7,-1,10,12,11,-1,11,8,10,-1,12,14,13,-1,13,11,12,-1,14,16,15,-1,15,13,14,-1,16,18,17,-1,17,15,16,-1,18,20,19,-1,19,17,18,-1,20,7,9,-1,9,19,20,-1,9,8,21,-1,21,22,9,-1,8,11,23,-1,23,21,8,-1,11,13,24,-1,24,23,11,-1,13,15,25,-1,25,24,13,-1,15,17,26,-1,26,25,15,-1,17,19,27,-1,27,26,17,-1,19,9,22,-1,22,27,19,-1,22,21,28,-1,28,29,22,-1,21,23,30,-1,30,28,21,-1,23,24,31,-1,31,30,23,-1,24,25,32,-1,32,31,24,-1,25,26,33,-1,33,32,25,-1,26,27,34,-1,34,33,26,-1,27,22,29,-1,29,34,27,-1,1,0,10,-1,10,7,1,-1,0,2,12,-1,12,10,0,-1,2,3,14,-1,14,12,2,-1,3,4,16,-1,16,14,3,-1,4,5,18,-1,18,16,4,-1,5,6,20,-1,20,18,5,-1,6,1,7,-1,7,20,6,-1,29,28,35,-1,35,36,29,-1,28,30,37,-1,37,35,28,-1,30,31,38,-1,38,37,30,-1,31,32,39,-1,39,38,31,-1,32,33,40,-1,40,39,32,-1,33,34,41,-1,41,40,33,-1,34,29,36,-1,36,41,34,-1,36,35,42,-1,42,43,36,-1,35,37,44,-1,44,42,35,-1,37,38,45,-1,45,44,37,-1,38,39,46,-1,46,45,38,-1,39,40,47,-1,47,46,39,-1,40,41,48,-1,48,47,40,-1,41,36,43,-1,43,48,41,-1,43,42,49,-1,42,44,49,-1,44,45,49,-1,45,46,49,-1,46,47,49,-1,47,48,49,-1,48,43,49,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=10, element #42, 150 total numbers made up of 50 3-tuple values */
	this.Coordinate_10_42_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(2.6170),doubleToFloat(2.2310),doubleToFloat(0.2976),doubleToFloat(1.5270),doubleToFloat(2.2310),doubleToFloat(2.5920),doubleToFloat(-0.9211),doubleToFloat(2.2310),doubleToFloat(3.1590),doubleToFloat(-2.6170),doubleToFloat(2.2310),doubleToFloat(1.5710),doubleToFloat(-2.6170),doubleToFloat(2.2310),doubleToFloat(-1.5710),doubleToFloat(-0.9211),doubleToFloat(2.2310),doubleToFloat(-3.1590),doubleToFloat(1.5270),doubleToFloat(2.2310),doubleToFloat(-2.2900),doubleToFloat(2.6170),doubleToFloat(-1.2380),doubleToFloat(0.2976),doubleToFloat(1.5270),doubleToFloat(-1.2380),doubleToFloat(2.5920),doubleToFloat(-0.9211),doubleToFloat(-1.2380),doubleToFloat(3.1590)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-2.6170),doubleToFloat(-1.2380),doubleToFloat(1.5710),doubleToFloat(-2.6170),doubleToFloat(-1.2380),doubleToFloat(-0.9758),doubleToFloat(-0.9211),doubleToFloat(-1.2380),doubleToFloat(-3.0090),doubleToFloat(1.5270),doubleToFloat(-1.2380),doubleToFloat(-2.4420),doubleToFloat(2.6170),doubleToFloat(-6.5930),doubleToFloat(0.2976),doubleToFloat(1.5270),doubleToFloat(-6.5930),doubleToFloat(2.5800),doubleToFloat(-0.9211),doubleToFloat(-6.5930),doubleToFloat(3.1470),doubleToFloat(-2.6170),doubleToFloat(-6.5930),doubleToFloat(1.5710),doubleToFloat(-2.6170),doubleToFloat(-6.5930),doubleToFloat(-0.9758),doubleToFloat(-0.9211),doubleToFloat(-6.5930),doubleToFloat(-2.5640)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(1.5270),doubleToFloat(-6.5930),doubleToFloat(-1.9970),doubleToFloat(2.2640),doubleToFloat(-11.9200),doubleToFloat(0.2976),doubleToFloat(1.3210),doubleToFloat(-11.9200),doubleToFloat(2.2820),doubleToFloat(-0.7969),doubleToFloat(-11.9200),doubleToFloat(2.7730),doubleToFloat(-2.0460),doubleToFloat(-11.9200),doubleToFloat(1.3990),doubleToFloat(-2.0460),doubleToFloat(-11.9200),doubleToFloat(-0.8039),doubleToFloat(-0.7969),doubleToFloat(-11.9200),doubleToFloat(-2.1770),doubleToFloat(1.3210),doubleToFloat(-11.9200),doubleToFloat(-1.6870),doubleToFloat(1.8640),doubleToFloat(4.0730),doubleToFloat(0.2976),doubleToFloat(1.0580),doubleToFloat(4.0730),doubleToFloat(1.9950)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.7536),doubleToFloat(4.0730),doubleToFloat(2.4150),doubleToFloat(-2.2060),doubleToFloat(4.0730),doubleToFloat(1.2400),doubleToFloat(-2.2060),doubleToFloat(4.0730),doubleToFloat(-0.6446),doubleToFloat(-0.7536),doubleToFloat(4.0730),doubleToFloat(-1.8190),doubleToFloat(1.0580),doubleToFloat(4.0730),doubleToFloat(-1.4000),doubleToFloat(1.0330),doubleToFloat(-14.6700),doubleToFloat(1.8830),doubleToFloat(1.7860),doubleToFloat(-14.6700),doubleToFloat(0.2976),doubleToFloat(-0.6591),doubleToFloat(-14.6700),doubleToFloat(2.2750),doubleToFloat(-1.6570),doubleToFloat(-14.6700),doubleToFloat(1.1780),doubleToFloat(-1.6570),doubleToFloat(-14.6700),doubleToFloat(-0.5825)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.6591),doubleToFloat(-14.6700),doubleToFloat(-1.6800),doubleToFloat(1.0330),doubleToFloat(-14.6700),doubleToFloat(-1.2880),doubleToFloat(0.4256),doubleToFloat(-15.9900),doubleToFloat(1.0410),doubleToFloat(0.7788),doubleToFloat(-15.9900),doubleToFloat(0.2976),doubleToFloat(-0.3682),doubleToFloat(-15.9900),doubleToFloat(1.2250),doubleToFloat(-0.8362),doubleToFloat(-15.9900),doubleToFloat(0.7104),doubleToFloat(-0.8362),doubleToFloat(-15.9900),doubleToFloat(-0.1152),doubleToFloat(-0.3682),doubleToFloat(-15.9900),doubleToFloat(-0.6300),doubleToFloat(0.4256),doubleToFloat(-15.9900),doubleToFloat(-0.4463),doubleToFloat(-0.1114),doubleToFloat(-16.1700),doubleToFloat(0.2976)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=10, element #43, 100 total numbers made up of 50 2-tuple values */
	this.TextureCoordinate_10_43_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.7387),doubleToFloat(0.5078),doubleToFloat(0.7519),doubleToFloat(0.5078),doubleToFloat(0.7092),doubleToFloat(0.5078),doubleToFloat(0.6855),doubleToFloat(0.5078),doubleToFloat(0.6855),doubleToFloat(0.5078),doubleToFloat(0.7092),doubleToFloat(0.5078),doubleToFloat(0.7387),doubleToFloat(0.5078),doubleToFloat(0.7641),doubleToFloat(0.4868),doubleToFloat(0.7464),doubleToFloat(0.4472),doubleToFloat(0.7641),doubleToFloat(0.4472)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7464),doubleToFloat(0.4868),doubleToFloat(0.7065),doubleToFloat(0.4472),doubleToFloat(0.7065),doubleToFloat(0.4868),doubleToFloat(0.6788),doubleToFloat(0.4472),doubleToFloat(0.6788),doubleToFloat(0.4868),doubleToFloat(0.6788),doubleToFloat(0.4472),doubleToFloat(0.6788),doubleToFloat(0.4868),doubleToFloat(0.7065),doubleToFloat(0.4472),doubleToFloat(0.7065),doubleToFloat(0.4868),doubleToFloat(0.7464),doubleToFloat(0.4472)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7464),doubleToFloat(0.4868),doubleToFloat(0.7464),doubleToFloat(0.3861),doubleToFloat(0.7641),doubleToFloat(0.3861),doubleToFloat(0.7065),doubleToFloat(0.3861),doubleToFloat(0.6788),doubleToFloat(0.3861),doubleToFloat(0.6788),doubleToFloat(0.3861),doubleToFloat(0.7065),doubleToFloat(0.3861),doubleToFloat(0.7464),doubleToFloat(0.3861),doubleToFloat(0.7430),doubleToFloat(0.3252),doubleToFloat(0.7584),doubleToFloat(0.3252)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7085),doubleToFloat(0.3252),doubleToFloat(0.6882),doubleToFloat(0.3252),doubleToFloat(0.6882),doubleToFloat(0.3252),doubleToFloat(0.7085),doubleToFloat(0.3252),doubleToFloat(0.7430),doubleToFloat(0.3252),doubleToFloat(0.7383),doubleToFloat(0.2938),doubleToFloat(0.7506),doubleToFloat(0.2938),doubleToFloat(0.7107),doubleToFloat(0.2938),doubleToFloat(0.6945),doubleToFloat(0.2938),doubleToFloat(0.6945),doubleToFloat(0.2938)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7107),doubleToFloat(0.2938),doubleToFloat(0.7383),doubleToFloat(0.2938),doubleToFloat(0.7284),doubleToFloat(0.2787),doubleToFloat(0.7342),doubleToFloat(0.2787),doubleToFloat(0.7155),doubleToFloat(0.2787),doubleToFloat(0.7079),doubleToFloat(0.2787),doubleToFloat(0.7079),doubleToFloat(0.2787),doubleToFloat(0.7155),doubleToFloat(0.2787),doubleToFloat(0.7284),doubleToFloat(0.2787),doubleToFloat(0.7197),doubleToFloat(0.2768)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=10, element #51, 300 total numbers */
	this.IndexedFaceSet_10_51_coordIndex = new MFInt32(Java.to([4,3,2,-1,2,1,0,-1,4,2,0,-1,5,4,0,-1,6,5,0,-1,9,8,7,-1,7,10,9,-1,12,11,8,-1,8,9,12,-1,14,13,11,-1,11,12,14,-1,16,15,13,-1,13,14,16,-1,18,17,15,-1,15,16,18,-1,20,19,17,-1,17,18,20,-1,10,7,19,-1,19,20,10,-1,21,9,10,-1,10,22,21,-1,23,12,9,-1,9,21,23,-1,24,14,12,-1,12,23,24,-1,25,16,14,-1,14,24,25,-1,26,18,16,-1,16,25,26,-1,27,20,18,-1,18,26,27,-1,22,10,20,-1,20,27,22,-1,1,21,22,-1,22,0,1,-1,2,23,21,-1,21,1,2,-1,3,24,23,-1,23,2,3,-1,4,25,24,-1,24,3,4,-1,5,26,25,-1,25,4,5,-1,6,27,26,-1,26,5,6,-1,0,22,27,-1,27,6,0,-1,8,29,28,-1,28,7,8,-1,11,30,29,-1,29,8,11,-1,13,31,30,-1,30,11,13,-1,15,32,31,-1,31,13,15,-1,17,33,32,-1,32,15,17,-1,19,34,33,-1,33,17,19,-1,7,28,34,-1,34,19,7,-1,29,36,35,-1,35,28,29,-1,30,37,36,-1,36,29,30,-1,31,38,37,-1,37,30,31,-1,32,39,38,-1,38,31,32,-1,33,40,39,-1,39,32,33,-1,34,41,40,-1,40,33,34,-1,28,35,41,-1,41,34,28,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=10, element #51, 300 total numbers */
	this.IndexedFaceSet_10_51_texCoordIndex = new MFInt32(Java.to([4,3,2,-1,2,1,0,-1,4,2,0,-1,5,4,0,-1,6,5,0,-1,9,8,7,-1,7,10,9,-1,12,11,8,-1,8,9,12,-1,14,13,11,-1,11,12,14,-1,16,15,13,-1,13,14,16,-1,18,17,15,-1,15,16,18,-1,20,19,17,-1,17,18,20,-1,10,7,19,-1,19,20,10,-1,21,9,10,-1,10,22,21,-1,23,12,9,-1,9,21,23,-1,24,14,12,-1,12,23,24,-1,25,16,14,-1,14,24,25,-1,26,18,16,-1,16,25,26,-1,27,20,18,-1,18,26,27,-1,22,10,20,-1,20,27,22,-1,1,21,22,-1,22,0,1,-1,2,23,21,-1,21,1,2,-1,3,24,23,-1,23,2,3,-1,4,25,24,-1,24,3,4,-1,5,26,25,-1,25,4,5,-1,6,27,26,-1,26,5,6,-1,0,22,27,-1,27,6,0,-1,8,29,28,-1,28,7,8,-1,11,30,29,-1,29,8,11,-1,13,31,30,-1,30,11,13,-1,15,32,31,-1,31,13,15,-1,17,33,32,-1,32,15,17,-1,19,34,33,-1,33,17,19,-1,7,28,34,-1,34,19,7,-1,29,36,35,-1,35,28,29,-1,30,37,36,-1,36,29,30,-1,31,38,37,-1,37,30,31,-1,32,39,38,-1,38,31,32,-1,33,40,39,-1,39,32,33,-1,34,41,40,-1,40,33,34,-1,28,35,41,-1,41,34,28,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=11, element #51, 126 total numbers made up of 42 3-tuple values */
	this.Coordinate_11_51_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(0.7406),doubleToFloat(0.9639),doubleToFloat(0.0216),doubleToFloat(0.4117),doubleToFloat(0.9639),doubleToFloat(0.8655),doubleToFloat(-0.3272),doubleToFloat(0.9639),doubleToFloat(1.0360),doubleToFloat(-0.9197),doubleToFloat(0.9639),doubleToFloat(0.5579),doubleToFloat(-0.9197),doubleToFloat(0.9639),doubleToFloat(-0.3619),doubleToFloat(-0.3272),doubleToFloat(0.9639),doubleToFloat(-0.8401),doubleToFloat(0.4117),doubleToFloat(0.9639),doubleToFloat(-0.6694),doubleToFloat(2.2380),doubleToFloat(-4.2010),doubleToFloat(0.0216),doubleToFloat(1.4260),doubleToFloat(-3.2840),doubleToFloat(1.8680),doubleToFloat(1.2190),doubleToFloat(-1.4390),doubleToFloat(2.2390)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(2.0360),doubleToFloat(-1.7010),doubleToFloat(0.0216),doubleToFloat(-0.6748),doubleToFloat(-3.2840),doubleToFloat(2.3750),doubleToFloat(-0.6153),doubleToFloat(-1.4390),doubleToFloat(2.6860),doubleToFloat(-2.0100),doubleToFloat(-4.2010),doubleToFloat(1.1610),doubleToFloat(-2.0860),doubleToFloat(-1.7010),doubleToFloat(0.9061),doubleToFloat(-2.0100),doubleToFloat(-4.9130),doubleToFloat(-1.2650),doubleToFloat(-2.0860),doubleToFloat(-1.7010),doubleToFloat(-0.8628),doubleToFloat(-0.6748),doubleToFloat(-4.9130),doubleToFloat(-2.6860),doubleToFloat(-0.6153),doubleToFloat(-1.7010),doubleToFloat(-2.1910),doubleToFloat(1.4260),doubleToFloat(-4.9130),doubleToFloat(-2.1790)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(1.2190),doubleToFloat(-1.7010),doubleToFloat(-1.7440),doubleToFloat(1.1120),doubleToFloat(0.0646),doubleToFloat(1.7550),doubleToFloat(1.8640),doubleToFloat(0.0646),doubleToFloat(0.0216),doubleToFloat(-0.5772),doubleToFloat(0.0646),doubleToFloat(2.1450),doubleToFloat(-1.9320),doubleToFloat(0.0646),doubleToFloat(1.0510),doubleToFloat(-1.9320),doubleToFloat(0.0646),doubleToFloat(-0.8553),doubleToFloat(-0.5772),doubleToFloat(0.0646),doubleToFloat(-1.9070),doubleToFloat(1.1120),doubleToFloat(0.0646),doubleToFloat(-1.5170),doubleToFloat(2.3450),doubleToFloat(-14.6900),doubleToFloat(-0.0151),doubleToFloat(1.4160),doubleToFloat(-14.6700),doubleToFloat(2.1020)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.6712),doubleToFloat(-14.6700),doubleToFloat(2.6240),doubleToFloat(-2.3450),doubleToFloat(-14.6900),doubleToFloat(1.1600),doubleToFloat(-2.3450),doubleToFloat(-14.7100),doubleToFloat(-1.3420),doubleToFloat(-0.6712),doubleToFloat(-14.7100),doubleToFloat(-2.3800),doubleToFloat(1.4160),doubleToFloat(-14.7100),doubleToFloat(-1.8570),doubleToFloat(0.7300),doubleToFloat(-16.1800),doubleToFloat(0.0221),doubleToFloat(0.4092),doubleToFloat(-16.1700),doubleToFloat(0.7532),doubleToFloat(-0.3118),doubleToFloat(-16.1700),doubleToFloat(0.9337),doubleToFloat(-0.8900),doubleToFloat(-16.1800),doubleToFloat(0.4278),doubleToFloat(-0.8900),doubleToFloat(-16.1900),doubleToFloat(-0.4362)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.3118),doubleToFloat(-16.1900),doubleToFloat(-0.7945),doubleToFloat(0.4092),doubleToFloat(-16.1900),doubleToFloat(-0.6140)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=11, element #52, 84 total numbers made up of 42 2-tuple values */
	this.TextureCoordinate_11_52_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.7637),doubleToFloat(0.1720),doubleToFloat(0.7550),doubleToFloat(0.1720),doubleToFloat(0.7356),doubleToFloat(0.1720),doubleToFloat(0.7200),doubleToFloat(0.1720),doubleToFloat(0.7200),doubleToFloat(0.1720),doubleToFloat(0.7356),doubleToFloat(0.1720),doubleToFloat(0.7550),doubleToFloat(0.1720),doubleToFloat(0.8032),doubleToFloat(0.2271),doubleToFloat(0.7818),doubleToFloat(0.2173),doubleToFloat(0.7763),doubleToFloat(0.1976)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7978),doubleToFloat(0.2004),doubleToFloat(0.7264),doubleToFloat(0.2173),doubleToFloat(0.7280),doubleToFloat(0.1976),doubleToFloat(0.6912),doubleToFloat(0.2271),doubleToFloat(0.6892),doubleToFloat(0.2004),doubleToFloat(0.6912),doubleToFloat(0.2347),doubleToFloat(0.6892),doubleToFloat(0.2004),doubleToFloat(0.7264),doubleToFloat(0.2347),doubleToFloat(0.7280),doubleToFloat(0.2004),doubleToFloat(0.7818),doubleToFloat(0.2347)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7763),doubleToFloat(0.2004),doubleToFloat(0.7735),doubleToFloat(0.1816),doubleToFloat(0.7933),doubleToFloat(0.1816),doubleToFloat(0.7290),doubleToFloat(0.1816),doubleToFloat(0.6933),doubleToFloat(0.1816),doubleToFloat(0.6933),doubleToFloat(0.1816),doubleToFloat(0.7290),doubleToFloat(0.1816),doubleToFloat(0.7735),doubleToFloat(0.1816),doubleToFloat(0.8060),doubleToFloat(0.3390),doubleToFloat(0.7815),doubleToFloat(0.3388)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7265),doubleToFloat(0.3388),doubleToFloat(0.6824),doubleToFloat(0.3390),doubleToFloat(0.6824),doubleToFloat(0.3392),doubleToFloat(0.7265),doubleToFloat(0.3392),doubleToFloat(0.7815),doubleToFloat(0.3392),doubleToFloat(0.7634),doubleToFloat(0.3549),doubleToFloat(0.7550),doubleToFloat(0.3548),doubleToFloat(0.7360),doubleToFloat(0.3548),doubleToFloat(0.7207),doubleToFloat(0.3549),doubleToFloat(0.7207),doubleToFloat(0.3550)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7360),doubleToFloat(0.3550),doubleToFloat(0.7550),doubleToFloat(0.3550)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=11, element #60, 288 total numbers */
	this.IndexedFaceSet_11_60_coordIndex = new MFInt32(Java.to([1,11,12,-1,3,4,5,-1,5,6,3,-1,1,0,4,-1,4,3,1,-1,0,2,5,-1,5,4,0,-1,11,1,3,-1,3,6,11,-1,18,2,0,-1,0,17,18,-1,0,1,25,-1,25,17,0,-1,25,1,12,-1,7,13,11,-1,8,6,5,-1,5,9,8,-1,7,8,9,-1,9,10,7,-1,10,9,5,-1,5,2,10,-1,11,6,8,-1,8,7,11,-1,18,21,10,-1,10,2,18,-1,10,21,27,-1,27,7,10,-1,27,13,7,-1,12,11,37,-1,37,35,12,-1,11,13,36,-1,36,37,11,-1,20,18,17,-1,17,14,20,-1,23,14,17,-1,17,25,23,-1,16,20,14,-1,14,15,16,-1,24,15,14,-1,14,23,24,-1,15,24,29,-1,29,16,15,-1,20,19,21,-1,21,18,20,-1,26,27,21,-1,21,19,26,-1,16,22,19,-1,19,20,16,-1,28,26,19,-1,19,22,28,-1,22,16,29,-1,29,28,22,-1,36,32,33,-1,34,30,31,-1,33,34,31,-1,36,33,31,-1,36,31,35,-1,24,23,31,-1,31,30,24,-1,23,25,35,-1,35,31,23,-1,27,26,32,-1,32,36,27,-1,26,28,33,-1,33,32,26,-1,28,29,34,-1,34,33,28,-1,29,24,30,-1,30,34,29,-1,36,35,37,-1,12,35,25,-1,27,36,13,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=11, element #60, 288 total numbers */
	this.IndexedFaceSet_11_60_texCoordIndex = new MFInt32(Java.to([1,14,18,-1,3,4,5,-1,5,6,3,-1,1,0,4,-1,4,3,1,-1,0,2,5,-1,5,4,0,-1,14,1,3,-1,3,6,14,-1,19,2,0,-1,0,16,19,-1,0,1,17,-1,17,16,0,-1,17,1,18,-1,7,23,15,-1,9,8,11,-1,11,10,9,-1,7,9,10,-1,10,12,7,-1,12,10,11,-1,11,13,12,-1,15,8,9,-1,9,7,15,-1,20,21,12,-1,12,13,20,-1,12,21,22,-1,22,7,12,-1,22,23,7,-1,18,14,25,-1,25,24,18,-1,15,23,26,-1,26,25,15,-1,29,33,32,-1,32,27,29,-1,41,27,32,-1,32,43,41,-1,30,29,27,-1,27,28,30,-1,42,28,27,-1,27,41,42,-1,28,42,48,-1,48,31,28,-1,35,34,37,-1,37,36,35,-1,44,45,37,-1,37,34,44,-1,39,38,34,-1,34,35,39,-1,46,44,34,-1,34,38,46,-1,38,40,47,-1,47,46,38,-1,52,53,54,-1,55,49,50,-1,54,55,50,-1,52,54,50,-1,52,50,51,-1,42,41,50,-1,50,49,42,-1,41,43,51,-1,51,50,41,-1,45,44,53,-1,53,52,45,-1,44,46,54,-1,54,53,44,-1,46,47,55,-1,55,54,46,-1,48,42,49,-1,49,55,48,-1,52,51,56,-1,18,24,43,-1,22,52,23,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=12, element #60, 114 total numbers made up of 38 3-tuple values */
	this.Coordinate_12_60_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(0.8966),doubleToFloat(-0.0174),doubleToFloat(-1.5680),doubleToFloat(1.5210),doubleToFloat(-0.0174),doubleToFloat(0.4019),doubleToFloat(0.0000),doubleToFloat(-0.0174),doubleToFloat(-1.5680),doubleToFloat(1.2880),doubleToFloat(0.6634),doubleToFloat(0.3302),doubleToFloat(0.7503),doubleToFloat(0.6634),doubleToFloat(-1.3640),doubleToFloat(0.0000),doubleToFloat(0.6634),doubleToFloat(-1.3640),doubleToFloat(0.0000),doubleToFloat(0.6634),doubleToFloat(1.3720),doubleToFloat(-1.5210),doubleToFloat(-0.0174),doubleToFloat(0.4019),doubleToFloat(-1.2880),doubleToFloat(0.6634),doubleToFloat(0.3302),doubleToFloat(-0.7503),doubleToFloat(0.6634),doubleToFloat(-1.3640)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.8967),doubleToFloat(-0.0174),doubleToFloat(-1.5680),doubleToFloat(0.0000),doubleToFloat(-0.0174),doubleToFloat(1.6330),doubleToFloat(1.5560),doubleToFloat(-0.2684),doubleToFloat(1.3330),doubleToFloat(-1.5560),doubleToFloat(-0.2684),doubleToFloat(1.3330),doubleToFloat(1.2930),doubleToFloat(-1.7460),doubleToFloat(-2.6840),doubleToFloat(1.2930),doubleToFloat(-3.5790),doubleToFloat(-1.5680),doubleToFloat(0.0000),doubleToFloat(-3.5790),doubleToFloat(-1.5680),doubleToFloat(1.0180),doubleToFloat(-0.5447),doubleToFloat(-1.9080),doubleToFloat(0.0000),doubleToFloat(-0.5447),doubleToFloat(-1.9080),doubleToFloat(-1.2930),doubleToFloat(-1.7460),doubleToFloat(-2.6840)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.0000),doubleToFloat(-1.7460),doubleToFloat(-2.6840),doubleToFloat(-1.0180),doubleToFloat(-0.5447),doubleToFloat(-1.9080),doubleToFloat(-1.2930),doubleToFloat(-3.5790),doubleToFloat(-1.5680),doubleToFloat(2.6870),doubleToFloat(-1.7460),doubleToFloat(0.4019),doubleToFloat(1.9180),doubleToFloat(-3.5790),doubleToFloat(0.4019),doubleToFloat(1.8770),doubleToFloat(-0.5447),doubleToFloat(0.4019),doubleToFloat(-2.6870),doubleToFloat(-1.7460),doubleToFloat(0.4019),doubleToFloat(-1.8770),doubleToFloat(-0.5447),doubleToFloat(0.4019),doubleToFloat(-1.9180),doubleToFloat(-3.5790),doubleToFloat(0.4019),doubleToFloat(0.0000),doubleToFloat(-3.5790),doubleToFloat(0.4019)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(1.7080),doubleToFloat(-3.4390),doubleToFloat(1.2720),doubleToFloat(2.3320),doubleToFloat(-1.7800),doubleToFloat(1.2720),doubleToFloat(-2.3320),doubleToFloat(-1.7800),doubleToFloat(1.2720),doubleToFloat(-1.7080),doubleToFloat(-3.4390),doubleToFloat(1.2720),doubleToFloat(0.0000),doubleToFloat(-3.4390),doubleToFloat(1.2720),doubleToFloat(1.4690),doubleToFloat(-0.8455),doubleToFloat(1.3110),doubleToFloat(-1.4690),doubleToFloat(-0.8455),doubleToFloat(1.3110),doubleToFloat(0.0000),doubleToFloat(-0.5969),doubleToFloat(1.5930)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=12, element #61, 114 total numbers made up of 57 2-tuple values */
	this.TextureCoordinate_12_61_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.4269),doubleToFloat(0.4898),doubleToFloat(0.4623),doubleToFloat(0.4901),doubleToFloat(0.4269),doubleToFloat(0.4898),doubleToFloat(0.4623),doubleToFloat(0.4901),doubleToFloat(0.4269),doubleToFloat(0.4898),doubleToFloat(0.4269),doubleToFloat(0.4898),doubleToFloat(0.4777),doubleToFloat(0.4914),doubleToFloat(0.4623),doubleToFloat(0.4901),doubleToFloat(0.4777),doubleToFloat(0.4914),doubleToFloat(0.4623),doubleToFloat(0.4901)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4269),doubleToFloat(0.4898),doubleToFloat(0.4269),doubleToFloat(0.4898),doubleToFloat(0.4269),doubleToFloat(0.4898),doubleToFloat(0.4269),doubleToFloat(0.4898),doubleToFloat(0.4777),doubleToFloat(0.4914),doubleToFloat(0.4777),doubleToFloat(0.4914),doubleToFloat(0.4309),doubleToFloat(0.4635),doubleToFloat(0.4687),doubleToFloat(0.4544),doubleToFloat(0.4611),doubleToFloat(0.4911),doubleToFloat(0.4284),doubleToFloat(0.4641)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4284),doubleToFloat(0.4641),doubleToFloat(0.4309),doubleToFloat(0.4635),doubleToFloat(0.4687),doubleToFloat(0.4544),doubleToFloat(0.4611),doubleToFloat(0.4911),doubleToFloat(0.4611),doubleToFloat(0.4911),doubleToFloat(0.4777),doubleToFloat(0.4914),doubleToFloat(0.4611),doubleToFloat(0.4911),doubleToFloat(0.4321),doubleToFloat(0.4164),doubleToFloat(0.4315),doubleToFloat(0.3728),doubleToFloat(0.4321),doubleToFloat(0.4164)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4315),doubleToFloat(0.3728),doubleToFloat(0.4315),doubleToFloat(0.3728),doubleToFloat(0.4309),doubleToFloat(0.4635),doubleToFloat(0.4284),doubleToFloat(0.4641),doubleToFloat(0.4321),doubleToFloat(0.4164),doubleToFloat(0.4321),doubleToFloat(0.4164),doubleToFloat(0.4284),doubleToFloat(0.4641),doubleToFloat(0.4309),doubleToFloat(0.4635),doubleToFloat(0.4315),doubleToFloat(0.3728),doubleToFloat(0.4315),doubleToFloat(0.3728)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4315),doubleToFloat(0.3728),doubleToFloat(0.4804),doubleToFloat(0.4170),doubleToFloat(0.4726),doubleToFloat(0.3714),doubleToFloat(0.4687),doubleToFloat(0.4544),doubleToFloat(0.4804),doubleToFloat(0.4170),doubleToFloat(0.4687),doubleToFloat(0.4544),doubleToFloat(0.4726),doubleToFloat(0.3714),doubleToFloat(0.4726),doubleToFloat(0.3714),doubleToFloat(0.4726),doubleToFloat(0.3714),doubleToFloat(0.4726),doubleToFloat(0.3714)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4804),doubleToFloat(0.4170),doubleToFloat(0.4687),doubleToFloat(0.4544),doubleToFloat(0.4687),doubleToFloat(0.4544),doubleToFloat(0.4804),doubleToFloat(0.4170),doubleToFloat(0.4726),doubleToFloat(0.3714),doubleToFloat(0.4726),doubleToFloat(0.3714),doubleToFloat(0.4687),doubleToFloat(0.4544)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=12, element #69, 264 total numbers */
	this.IndexedFaceSet_12_69_coordIndex = new MFInt32(Java.to([3,4,25,-1,3,25,26,-1,0,3,26,-1,1,0,26,-1,26,10,1,-1,1,10,12,-1,12,9,1,-1,2,34,25,-1,25,4,2,-1,31,8,6,-1,32,31,6,-1,5,32,6,-1,7,11,32,-1,32,5,7,-1,7,9,12,-1,12,11,7,-1,2,8,31,-1,31,34,2,-1,15,16,17,-1,15,17,18,-1,15,18,19,-1,14,15,19,-1,14,19,13,-1,0,1,14,-1,14,13,0,-1,1,9,15,-1,15,14,1,-1,9,7,16,-1,16,15,9,-1,7,5,17,-1,17,16,7,-1,5,6,18,-1,18,17,5,-1,6,3,19,-1,19,18,6,-1,3,0,13,-1,13,19,3,-1,6,8,2,-1,3,6,2,-1,4,3,2,-1,23,21,20,-1,20,24,23,-1,29,22,21,-1,21,23,29,-1,22,29,33,-1,20,21,26,-1,26,25,20,-1,26,21,22,-1,22,10,26,-1,10,22,33,-1,33,12,10,-1,34,24,20,-1,20,25,34,-1,23,24,28,-1,28,27,23,-1,29,23,27,-1,27,30,29,-1,30,33,29,-1,28,31,32,-1,32,27,28,-1,32,11,30,-1,30,27,32,-1,11,12,33,-1,33,30,11,-1,34,31,28,-1,28,24,34,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=12, element #69, 264 total numbers */
	this.IndexedFaceSet_12_69_texCoordIndex = new MFInt32(Java.to([4,5,12,-1,4,12,13,-1,0,4,13,-1,1,0,13,-1,13,14,1,-1,1,14,18,-1,18,3,1,-1,2,20,12,-1,12,5,2,-1,12,10,7,-1,15,12,7,-1,6,15,7,-1,8,16,15,-1,15,6,8,-1,8,11,17,-1,17,16,8,-1,9,10,12,-1,12,19,9,-1,23,24,25,-1,23,25,26,-1,23,26,27,-1,22,23,27,-1,22,27,21,-1,0,1,22,-1,22,21,0,-1,1,3,23,-1,23,22,1,-1,11,8,24,-1,24,23,11,-1,8,6,25,-1,25,24,8,-1,6,7,26,-1,26,25,6,-1,7,4,27,-1,27,26,7,-1,4,0,21,-1,21,27,4,-1,7,10,9,-1,4,7,9,-1,5,4,9,-1,29,30,12,-1,12,28,29,-1,31,32,30,-1,30,29,31,-1,32,31,33,-1,12,30,34,-1,34,12,12,-1,34,30,32,-1,32,35,34,-1,35,32,33,-1,33,36,35,-1,37,28,12,-1,12,12,37,-1,38,40,12,-1,12,39,38,-1,41,38,39,-1,39,42,41,-1,42,45,41,-1,12,12,43,-1,43,39,12,-1,43,44,42,-1,42,39,43,-1,44,46,45,-1,45,42,44,-1,47,12,12,-1,12,40,47,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=13, element #69, 105 total numbers made up of 35 3-tuple values */
	this.Coordinate_13_69_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(2.6870),doubleToFloat(-1.4750),doubleToFloat(-0.9449),doubleToFloat(1.9180),doubleToFloat(-3.3080),doubleToFloat(-0.9449),doubleToFloat(0.0000),doubleToFloat(0.2536),doubleToFloat(0.2858),doubleToFloat(1.8770),doubleToFloat(-0.2736),doubleToFloat(-0.9449),doubleToFloat(1.5560),doubleToFloat(0.0026),doubleToFloat(-0.0141),doubleToFloat(-2.6870),doubleToFloat(-1.4750),doubleToFloat(-0.9449),doubleToFloat(-1.8770),doubleToFloat(-0.2736),doubleToFloat(-0.9449),doubleToFloat(-1.9180),doubleToFloat(-3.3080),doubleToFloat(-0.9449),doubleToFloat(-1.5560),doubleToFloat(0.0026),doubleToFloat(-0.0141),doubleToFloat(0.0000),doubleToFloat(-3.3080),doubleToFloat(-0.9449)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(1.9650),doubleToFloat(-3.3080),doubleToFloat(0.8573),doubleToFloat(-1.9650),doubleToFloat(-3.3080),doubleToFloat(0.8573),doubleToFloat(0.0000),doubleToFloat(-3.3080),doubleToFloat(0.8573),doubleToFloat(2.2080),doubleToFloat(-1.5010),doubleToFloat(-1.7860),doubleToFloat(1.6070),doubleToFloat(-2.6680),doubleToFloat(-1.7860),doubleToFloat(0.0000),doubleToFloat(-2.6680),doubleToFloat(-1.7860),doubleToFloat(-1.6070),doubleToFloat(-2.6680),doubleToFloat(-1.7860),doubleToFloat(-2.2080),doubleToFloat(-1.5010),doubleToFloat(-1.7860),doubleToFloat(-1.5990),doubleToFloat(-0.5151),doubleToFloat(-1.7860),doubleToFloat(1.5990),doubleToFloat(-0.5151),doubleToFloat(-1.7860)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(1.6380),doubleToFloat(-0.5877),doubleToFloat(2.1750),doubleToFloat(2.0340),doubleToFloat(-2.0550),doubleToFloat(3.8650),doubleToFloat(2.0340),doubleToFloat(-3.3080),doubleToFloat(3.5220),doubleToFloat(0.0000),doubleToFloat(-2.0550),doubleToFloat(5.0960),doubleToFloat(0.0000),doubleToFloat(-0.4955),doubleToFloat(3.6840),doubleToFloat(1.5970),doubleToFloat(-0.2925),doubleToFloat(1.0800),doubleToFloat(2.4420),doubleToFloat(-1.6920),doubleToFloat(0.8573),doubleToFloat(-2.0340),doubleToFloat(-2.0550),doubleToFloat(3.8650),doubleToFloat(-1.6380),doubleToFloat(-0.5877),doubleToFloat(2.1750),doubleToFloat(0.0000),doubleToFloat(-3.3080),doubleToFloat(4.7530)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-2.0340),doubleToFloat(-3.3080),doubleToFloat(3.5220),doubleToFloat(-1.5970),doubleToFloat(-0.2925),doubleToFloat(1.0800),doubleToFloat(-2.4420),doubleToFloat(-1.6920),doubleToFloat(0.8573),doubleToFloat(0.0000),doubleToFloat(-3.3080),doubleToFloat(3.5220),doubleToFloat(0.0000),doubleToFloat(-0.0249),doubleToFloat(1.5500)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=13, element #70, 96 total numbers made up of 48 2-tuple values */
	this.TextureCoordinate_13_70_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.4804),doubleToFloat(0.4170),doubleToFloat(0.4726),doubleToFloat(0.3714),doubleToFloat(0.4777),doubleToFloat(0.4914),doubleToFloat(0.4726),doubleToFloat(0.3714),doubleToFloat(0.4687),doubleToFloat(0.4544),doubleToFloat(0.4611),doubleToFloat(0.4911),doubleToFloat(0.4804),doubleToFloat(0.4170),doubleToFloat(0.4687),doubleToFloat(0.4544),doubleToFloat(0.4726),doubleToFloat(0.3714),doubleToFloat(0.4777),doubleToFloat(0.4914)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4611),doubleToFloat(0.4911),doubleToFloat(0.4726),doubleToFloat(0.3714),doubleToFloat(0.5184),doubleToFloat(0.4692),doubleToFloat(0.5392),doubleToFloat(0.4090),doubleToFloat(0.5352),doubleToFloat(0.3721),doubleToFloat(0.5392),doubleToFloat(0.4090),doubleToFloat(0.5352),doubleToFloat(0.3721),doubleToFloat(0.5370),doubleToFloat(0.3715),doubleToFloat(0.5370),doubleToFloat(0.3715),doubleToFloat(0.5123),doubleToFloat(0.4770)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5123),doubleToFloat(0.4770),doubleToFloat(0.4804),doubleToFloat(0.4170),doubleToFloat(0.4726),doubleToFloat(0.3714),doubleToFloat(0.4726),doubleToFloat(0.3714),doubleToFloat(0.4726),doubleToFloat(0.3714),doubleToFloat(0.4804),doubleToFloat(0.4170),doubleToFloat(0.4687),doubleToFloat(0.4544),doubleToFloat(0.4687),doubleToFloat(0.4544),doubleToFloat(0.5785),doubleToFloat(0.4537),doubleToFloat(0.6010),doubleToFloat(0.4307)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5382),doubleToFloat(0.4079),doubleToFloat(0.6345),doubleToFloat(0.3741),doubleToFloat(0.5897),doubleToFloat(0.3729),doubleToFloat(0.5897),doubleToFloat(0.3729),doubleToFloat(0.5392),doubleToFloat(0.4090),doubleToFloat(0.5352),doubleToFloat(0.3721),doubleToFloat(0.5370),doubleToFloat(0.3715),doubleToFloat(0.5123),doubleToFloat(0.4770),doubleToFloat(0.6010),doubleToFloat(0.4307),doubleToFloat(0.5382),doubleToFloat(0.4079)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5785),doubleToFloat(0.4537),doubleToFloat(0.6345),doubleToFloat(0.3741),doubleToFloat(0.5897),doubleToFloat(0.3729),doubleToFloat(0.5392),doubleToFloat(0.4090),doubleToFloat(0.5352),doubleToFloat(0.3721),doubleToFloat(0.5897),doubleToFloat(0.3729),doubleToFloat(0.5370),doubleToFloat(0.3715),doubleToFloat(0.5123),doubleToFloat(0.4770)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=9, element #82, 384 total numbers */
	this.IndexedFaceSet_9_82_coordIndex = new MFInt32(Java.to([29,30,31,-1,28,29,31,-1,31,32,33,-1,28,31,33,-1,34,28,33,-1,0,7,8,-1,8,1,0,-1,1,8,9,-1,9,2,1,-1,2,9,10,-1,10,3,2,-1,3,10,11,-1,11,4,3,-1,4,11,12,-1,12,5,4,-1,5,12,13,-1,13,6,5,-1,6,13,7,-1,7,0,6,-1,7,14,15,-1,15,8,7,-1,8,15,16,-1,16,9,8,-1,9,16,17,-1,17,10,9,-1,10,17,18,-1,18,11,10,-1,11,18,19,-1,19,12,11,-1,12,19,20,-1,20,13,12,-1,13,20,14,-1,14,7,13,-1,14,21,22,-1,22,15,14,-1,15,22,23,-1,23,16,15,-1,16,23,24,-1,24,17,16,-1,17,24,25,-1,25,18,17,-1,18,25,26,-1,26,19,18,-1,19,26,27,-1,27,20,19,-1,20,27,21,-1,21,14,20,-1,28,0,1,-1,1,29,28,-1,29,1,2,-1,2,30,29,-1,30,2,3,-1,3,31,30,-1,31,3,4,-1,4,32,31,-1,32,4,5,-1,5,33,32,-1,33,5,6,-1,6,34,33,-1,34,6,0,-1,0,28,34,-1,21,36,35,-1,35,22,21,-1,22,35,37,-1,37,23,22,-1,23,37,38,-1,38,24,23,-1,24,38,39,-1,39,25,24,-1,25,39,40,-1,40,26,25,-1,26,40,41,-1,41,27,26,-1,27,41,36,-1,36,21,27,-1,36,43,42,-1,42,35,36,-1,35,42,44,-1,44,37,35,-1,37,44,45,-1,45,38,37,-1,38,45,46,-1,46,39,38,-1,39,46,47,-1,47,40,39,-1,40,47,48,-1,48,41,40,-1,41,48,43,-1,43,36,41,-1,43,49,42,-1,42,49,44,-1,44,49,45,-1,45,49,46,-1,46,49,47,-1,47,49,48,-1,48,49,43,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=9, element #82, 384 total numbers */
	this.IndexedFaceSet_9_82_texCoordIndex = new MFInt32(Java.to([0,2,3,-1,1,0,3,-1,3,4,5,-1,1,3,5,-1,6,1,5,-1,7,9,8,-1,8,10,7,-1,10,8,11,-1,11,12,10,-1,12,11,13,-1,13,14,12,-1,14,13,15,-1,15,16,14,-1,16,15,17,-1,17,18,16,-1,18,17,19,-1,19,20,18,-1,20,19,9,-1,9,7,20,-1,9,22,21,-1,21,8,9,-1,8,21,23,-1,23,11,8,-1,11,23,24,-1,24,13,11,-1,13,24,25,-1,25,15,13,-1,15,25,26,-1,26,17,15,-1,17,26,27,-1,27,19,17,-1,19,27,22,-1,22,9,19,-1,22,29,28,-1,28,21,22,-1,21,28,30,-1,30,23,21,-1,23,30,31,-1,31,24,23,-1,24,31,32,-1,32,25,24,-1,25,32,33,-1,33,26,25,-1,26,33,34,-1,34,27,26,-1,27,34,29,-1,29,22,27,-1,1,7,10,-1,10,0,1,-1,0,10,12,-1,12,2,0,-1,2,12,14,-1,14,3,2,-1,3,14,16,-1,16,4,3,-1,4,16,18,-1,18,5,4,-1,5,18,20,-1,20,6,5,-1,6,20,7,-1,7,1,6,-1,29,36,35,-1,35,28,29,-1,28,35,37,-1,37,30,28,-1,30,37,38,-1,38,31,30,-1,31,38,39,-1,39,32,31,-1,32,39,40,-1,40,33,32,-1,33,40,41,-1,41,34,33,-1,34,41,36,-1,36,29,34,-1,36,43,42,-1,42,35,36,-1,35,42,44,-1,44,37,35,-1,37,44,45,-1,45,38,37,-1,38,45,46,-1,46,39,38,-1,39,46,47,-1,47,40,39,-1,40,47,48,-1,48,41,40,-1,41,48,43,-1,43,36,41,-1,43,49,42,-1,42,49,44,-1,44,49,45,-1,45,49,46,-1,46,49,47,-1,47,49,48,-1,48,49,43,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=10, element #82, 150 total numbers made up of 50 3-tuple values */
	this.Coordinate_10_82_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(-2.6170),doubleToFloat(2.2310),doubleToFloat(0.2976),doubleToFloat(-1.5270),doubleToFloat(2.2310),doubleToFloat(2.5920),doubleToFloat(0.9211),doubleToFloat(2.2310),doubleToFloat(3.1590),doubleToFloat(2.6170),doubleToFloat(2.2310),doubleToFloat(1.5710),doubleToFloat(2.6170),doubleToFloat(2.2310),doubleToFloat(-1.5710),doubleToFloat(0.9211),doubleToFloat(2.2310),doubleToFloat(-3.1590),doubleToFloat(-1.5270),doubleToFloat(2.2310),doubleToFloat(-2.2900),doubleToFloat(-2.6170),doubleToFloat(-1.2380),doubleToFloat(0.2976),doubleToFloat(-1.5270),doubleToFloat(-1.2380),doubleToFloat(2.5920),doubleToFloat(0.9211),doubleToFloat(-1.2380),doubleToFloat(3.1590)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(2.6170),doubleToFloat(-1.2380),doubleToFloat(1.5710),doubleToFloat(2.6170),doubleToFloat(-1.2380),doubleToFloat(-0.9758),doubleToFloat(0.9211),doubleToFloat(-1.2380),doubleToFloat(-3.0090),doubleToFloat(-1.5270),doubleToFloat(-1.2380),doubleToFloat(-2.4420),doubleToFloat(-2.6170),doubleToFloat(-6.5930),doubleToFloat(0.2976),doubleToFloat(-1.5270),doubleToFloat(-6.5930),doubleToFloat(2.5800),doubleToFloat(0.9211),doubleToFloat(-6.5930),doubleToFloat(3.1470),doubleToFloat(2.6170),doubleToFloat(-6.5930),doubleToFloat(1.5710),doubleToFloat(2.6170),doubleToFloat(-6.5930),doubleToFloat(-0.9758),doubleToFloat(0.9211),doubleToFloat(-6.5930),doubleToFloat(-2.5640)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.5270),doubleToFloat(-6.5930),doubleToFloat(-1.9970),doubleToFloat(-2.2640),doubleToFloat(-11.9200),doubleToFloat(0.2976),doubleToFloat(-1.3210),doubleToFloat(-11.9200),doubleToFloat(2.2820),doubleToFloat(0.7969),doubleToFloat(-11.9200),doubleToFloat(2.7730),doubleToFloat(2.0460),doubleToFloat(-11.9200),doubleToFloat(1.3990),doubleToFloat(2.0460),doubleToFloat(-11.9200),doubleToFloat(-0.8039),doubleToFloat(0.7969),doubleToFloat(-11.9200),doubleToFloat(-2.1770),doubleToFloat(-1.3210),doubleToFloat(-11.9200),doubleToFloat(-1.6870),doubleToFloat(-1.8640),doubleToFloat(4.0730),doubleToFloat(0.2976),doubleToFloat(-1.0580),doubleToFloat(4.0730),doubleToFloat(1.9950)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.7536),doubleToFloat(4.0730),doubleToFloat(2.4150),doubleToFloat(2.2060),doubleToFloat(4.0730),doubleToFloat(1.2400),doubleToFloat(2.2060),doubleToFloat(4.0730),doubleToFloat(-0.6446),doubleToFloat(0.7536),doubleToFloat(4.0730),doubleToFloat(-1.8190),doubleToFloat(-1.0580),doubleToFloat(4.0730),doubleToFloat(-1.4000),doubleToFloat(-1.0330),doubleToFloat(-14.6700),doubleToFloat(1.8830),doubleToFloat(-1.7860),doubleToFloat(-14.6700),doubleToFloat(0.2976),doubleToFloat(0.6591),doubleToFloat(-14.6700),doubleToFloat(2.2750),doubleToFloat(1.6570),doubleToFloat(-14.6700),doubleToFloat(1.1780),doubleToFloat(1.6570),doubleToFloat(-14.6700),doubleToFloat(-0.5825)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.6591),doubleToFloat(-14.6700),doubleToFloat(-1.6800),doubleToFloat(-1.0330),doubleToFloat(-14.6700),doubleToFloat(-1.2880),doubleToFloat(-0.4256),doubleToFloat(-15.9900),doubleToFloat(1.0410),doubleToFloat(-0.7788),doubleToFloat(-15.9900),doubleToFloat(0.2976),doubleToFloat(0.3682),doubleToFloat(-15.9900),doubleToFloat(1.2250),doubleToFloat(0.8362),doubleToFloat(-15.9900),doubleToFloat(0.7104),doubleToFloat(0.8362),doubleToFloat(-15.9900),doubleToFloat(-0.1152),doubleToFloat(0.3682),doubleToFloat(-15.9900),doubleToFloat(-0.6300),doubleToFloat(-0.4256),doubleToFloat(-15.9900),doubleToFloat(-0.4463),doubleToFloat(0.1114),doubleToFloat(-16.1700),doubleToFloat(0.2976)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=10, element #83, 100 total numbers made up of 50 2-tuple values */
	this.TextureCoordinate_10_83_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.7387),doubleToFloat(0.5078),doubleToFloat(0.7519),doubleToFloat(0.5078),doubleToFloat(0.7092),doubleToFloat(0.5078),doubleToFloat(0.6855),doubleToFloat(0.5078),doubleToFloat(0.6855),doubleToFloat(0.5078),doubleToFloat(0.7092),doubleToFloat(0.5078),doubleToFloat(0.7387),doubleToFloat(0.5078),doubleToFloat(0.7641),doubleToFloat(0.4868),doubleToFloat(0.7464),doubleToFloat(0.4472),doubleToFloat(0.7641),doubleToFloat(0.4472)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7464),doubleToFloat(0.4868),doubleToFloat(0.7065),doubleToFloat(0.4472),doubleToFloat(0.7065),doubleToFloat(0.4868),doubleToFloat(0.6788),doubleToFloat(0.4472),doubleToFloat(0.6788),doubleToFloat(0.4868),doubleToFloat(0.6788),doubleToFloat(0.4472),doubleToFloat(0.6788),doubleToFloat(0.4868),doubleToFloat(0.7065),doubleToFloat(0.4472),doubleToFloat(0.7065),doubleToFloat(0.4868),doubleToFloat(0.7464),doubleToFloat(0.4472)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7464),doubleToFloat(0.4868),doubleToFloat(0.7464),doubleToFloat(0.3861),doubleToFloat(0.7641),doubleToFloat(0.3861),doubleToFloat(0.7065),doubleToFloat(0.3861),doubleToFloat(0.6788),doubleToFloat(0.3861),doubleToFloat(0.6788),doubleToFloat(0.3861),doubleToFloat(0.7065),doubleToFloat(0.3861),doubleToFloat(0.7464),doubleToFloat(0.3861),doubleToFloat(0.7430),doubleToFloat(0.3252),doubleToFloat(0.7584),doubleToFloat(0.3252)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7085),doubleToFloat(0.3252),doubleToFloat(0.6882),doubleToFloat(0.3252),doubleToFloat(0.6882),doubleToFloat(0.3252),doubleToFloat(0.7085),doubleToFloat(0.3252),doubleToFloat(0.7430),doubleToFloat(0.3252),doubleToFloat(0.7383),doubleToFloat(0.2938),doubleToFloat(0.7506),doubleToFloat(0.2938),doubleToFloat(0.7107),doubleToFloat(0.2938),doubleToFloat(0.6945),doubleToFloat(0.2938),doubleToFloat(0.6945),doubleToFloat(0.2938)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7107),doubleToFloat(0.2938),doubleToFloat(0.7383),doubleToFloat(0.2938),doubleToFloat(0.7284),doubleToFloat(0.2787),doubleToFloat(0.7342),doubleToFloat(0.2787),doubleToFloat(0.7155),doubleToFloat(0.2787),doubleToFloat(0.7079),doubleToFloat(0.2787),doubleToFloat(0.7079),doubleToFloat(0.2787),doubleToFloat(0.7155),doubleToFloat(0.2787),doubleToFloat(0.7284),doubleToFloat(0.2787),doubleToFloat(0.7197),doubleToFloat(0.2768)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=10, element #91, 300 total numbers */
	this.IndexedFaceSet_10_91_coordIndex = new MFInt32(Java.to([0,1,2,-1,2,3,4,-1,0,2,4,-1,0,4,5,-1,6,0,5,-1,9,10,7,-1,7,8,9,-1,12,9,8,-1,8,11,12,-1,14,12,11,-1,11,13,14,-1,16,14,13,-1,13,15,16,-1,18,16,15,-1,15,17,18,-1,20,18,17,-1,17,19,20,-1,10,20,19,-1,19,7,10,-1,21,22,10,-1,10,9,21,-1,23,21,9,-1,9,12,23,-1,24,23,12,-1,12,14,24,-1,25,24,14,-1,14,16,25,-1,26,25,16,-1,16,18,26,-1,27,26,18,-1,18,20,27,-1,22,27,20,-1,20,10,22,-1,1,0,22,-1,22,21,1,-1,2,1,21,-1,21,23,2,-1,3,2,23,-1,23,24,3,-1,4,3,24,-1,24,25,4,-1,5,4,25,-1,25,26,5,-1,6,5,26,-1,26,27,6,-1,0,6,27,-1,27,22,0,-1,8,7,28,-1,28,29,8,-1,11,8,29,-1,29,30,11,-1,13,11,30,-1,30,31,13,-1,15,13,31,-1,31,32,15,-1,17,15,32,-1,32,33,17,-1,19,17,33,-1,33,34,19,-1,7,19,34,-1,34,28,7,-1,29,28,35,-1,35,36,29,-1,30,29,36,-1,36,37,30,-1,31,30,37,-1,37,38,31,-1,32,31,38,-1,38,39,32,-1,33,32,39,-1,39,40,33,-1,34,33,40,-1,40,41,34,-1,28,34,41,-1,41,35,28,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=10, element #91, 300 total numbers */
	this.IndexedFaceSet_10_91_texCoordIndex = new MFInt32(Java.to([0,1,2,-1,2,3,4,-1,0,2,4,-1,0,4,5,-1,6,0,5,-1,9,10,7,-1,7,8,9,-1,12,9,8,-1,8,11,12,-1,14,12,11,-1,11,13,14,-1,16,14,13,-1,13,15,16,-1,18,16,15,-1,15,17,18,-1,20,18,17,-1,17,19,20,-1,10,20,19,-1,19,7,10,-1,21,22,10,-1,10,9,21,-1,23,21,9,-1,9,12,23,-1,24,23,12,-1,12,14,24,-1,25,24,14,-1,14,16,25,-1,26,25,16,-1,16,18,26,-1,27,26,18,-1,18,20,27,-1,22,27,20,-1,20,10,22,-1,1,0,22,-1,22,21,1,-1,2,1,21,-1,21,23,2,-1,3,2,23,-1,23,24,3,-1,4,3,24,-1,24,25,4,-1,5,4,25,-1,25,26,5,-1,6,5,26,-1,26,27,6,-1,0,6,27,-1,27,22,0,-1,8,7,28,-1,28,29,8,-1,11,8,29,-1,29,30,11,-1,13,11,30,-1,30,31,13,-1,15,13,31,-1,31,32,15,-1,17,15,32,-1,32,33,17,-1,19,17,33,-1,33,34,19,-1,7,19,34,-1,34,28,7,-1,29,28,35,-1,35,36,29,-1,30,29,36,-1,36,37,30,-1,31,30,37,-1,37,38,31,-1,32,31,38,-1,38,39,32,-1,33,32,39,-1,39,40,33,-1,34,33,40,-1,40,41,34,-1,28,34,41,-1,41,35,28,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=11, element #91, 126 total numbers made up of 42 3-tuple values */
	this.Coordinate_11_91_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(-0.7406),doubleToFloat(0.9639),doubleToFloat(0.0216),doubleToFloat(-0.4117),doubleToFloat(0.9639),doubleToFloat(0.8655),doubleToFloat(0.3272),doubleToFloat(0.9639),doubleToFloat(1.0360),doubleToFloat(0.9197),doubleToFloat(0.9639),doubleToFloat(0.5579),doubleToFloat(0.9197),doubleToFloat(0.9639),doubleToFloat(-0.3619),doubleToFloat(0.3272),doubleToFloat(0.9639),doubleToFloat(-0.8401),doubleToFloat(-0.4117),doubleToFloat(0.9639),doubleToFloat(-0.6694),doubleToFloat(-2.2380),doubleToFloat(-4.2010),doubleToFloat(0.0216),doubleToFloat(-1.4260),doubleToFloat(-3.2840),doubleToFloat(1.8680),doubleToFloat(-1.2190),doubleToFloat(-1.4390),doubleToFloat(2.2390)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-2.0360),doubleToFloat(-1.7010),doubleToFloat(0.0216),doubleToFloat(0.6748),doubleToFloat(-3.2840),doubleToFloat(2.3750),doubleToFloat(0.6153),doubleToFloat(-1.4390),doubleToFloat(2.6860),doubleToFloat(2.0100),doubleToFloat(-4.2010),doubleToFloat(1.1610),doubleToFloat(2.0860),doubleToFloat(-1.7010),doubleToFloat(0.9061),doubleToFloat(2.0100),doubleToFloat(-4.9130),doubleToFloat(-1.2650),doubleToFloat(2.0860),doubleToFloat(-1.7010),doubleToFloat(-0.8628),doubleToFloat(0.6748),doubleToFloat(-4.9130),doubleToFloat(-2.6860),doubleToFloat(0.6153),doubleToFloat(-1.7010),doubleToFloat(-2.1910),doubleToFloat(-1.4260),doubleToFloat(-4.9130),doubleToFloat(-2.1790)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.2190),doubleToFloat(-1.7010),doubleToFloat(-1.7440),doubleToFloat(-1.1120),doubleToFloat(0.0646),doubleToFloat(1.7550),doubleToFloat(-1.8640),doubleToFloat(0.0646),doubleToFloat(0.0216),doubleToFloat(0.5772),doubleToFloat(0.0646),doubleToFloat(2.1450),doubleToFloat(1.9320),doubleToFloat(0.0646),doubleToFloat(1.0510),doubleToFloat(1.9320),doubleToFloat(0.0646),doubleToFloat(-0.8553),doubleToFloat(0.5772),doubleToFloat(0.0646),doubleToFloat(-1.9070),doubleToFloat(-1.1120),doubleToFloat(0.0646),doubleToFloat(-1.5170),doubleToFloat(-2.3450),doubleToFloat(-14.6900),doubleToFloat(-0.0151),doubleToFloat(-1.4160),doubleToFloat(-14.6700),doubleToFloat(2.1020)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.6712),doubleToFloat(-14.6700),doubleToFloat(2.6240),doubleToFloat(2.3450),doubleToFloat(-14.6900),doubleToFloat(1.1600),doubleToFloat(2.3450),doubleToFloat(-14.7100),doubleToFloat(-1.3420),doubleToFloat(0.6712),doubleToFloat(-14.7100),doubleToFloat(-2.3800),doubleToFloat(-1.4160),doubleToFloat(-14.7100),doubleToFloat(-1.8570),doubleToFloat(-0.7300),doubleToFloat(-16.1800),doubleToFloat(0.0221),doubleToFloat(-0.4092),doubleToFloat(-16.1700),doubleToFloat(0.7532),doubleToFloat(0.3118),doubleToFloat(-16.1700),doubleToFloat(0.9337),doubleToFloat(0.8900),doubleToFloat(-16.1800),doubleToFloat(0.4278),doubleToFloat(0.8900),doubleToFloat(-16.1900),doubleToFloat(-0.4362)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.3118),doubleToFloat(-16.1900),doubleToFloat(-0.7945),doubleToFloat(-0.4092),doubleToFloat(-16.1900),doubleToFloat(-0.6140)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=11, element #92, 84 total numbers made up of 42 2-tuple values */
	this.TextureCoordinate_11_92_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.7637),doubleToFloat(0.1720),doubleToFloat(0.7550),doubleToFloat(0.1720),doubleToFloat(0.7356),doubleToFloat(0.1720),doubleToFloat(0.7200),doubleToFloat(0.1720),doubleToFloat(0.7200),doubleToFloat(0.1720),doubleToFloat(0.7356),doubleToFloat(0.1720),doubleToFloat(0.7550),doubleToFloat(0.1720),doubleToFloat(0.8032),doubleToFloat(0.2271),doubleToFloat(0.7818),doubleToFloat(0.2173),doubleToFloat(0.7763),doubleToFloat(0.1976)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7978),doubleToFloat(0.2004),doubleToFloat(0.7264),doubleToFloat(0.2173),doubleToFloat(0.7280),doubleToFloat(0.1976),doubleToFloat(0.6912),doubleToFloat(0.2271),doubleToFloat(0.6892),doubleToFloat(0.2004),doubleToFloat(0.6912),doubleToFloat(0.2347),doubleToFloat(0.6892),doubleToFloat(0.2004),doubleToFloat(0.7264),doubleToFloat(0.2347),doubleToFloat(0.7280),doubleToFloat(0.2004),doubleToFloat(0.7818),doubleToFloat(0.2347)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7763),doubleToFloat(0.2004),doubleToFloat(0.7735),doubleToFloat(0.1816),doubleToFloat(0.7933),doubleToFloat(0.1816),doubleToFloat(0.7290),doubleToFloat(0.1816),doubleToFloat(0.6933),doubleToFloat(0.1816),doubleToFloat(0.6933),doubleToFloat(0.1816),doubleToFloat(0.7290),doubleToFloat(0.1816),doubleToFloat(0.7735),doubleToFloat(0.1816),doubleToFloat(0.8060),doubleToFloat(0.3390),doubleToFloat(0.7815),doubleToFloat(0.3388)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7265),doubleToFloat(0.3388),doubleToFloat(0.6824),doubleToFloat(0.3390),doubleToFloat(0.6824),doubleToFloat(0.3392),doubleToFloat(0.7265),doubleToFloat(0.3392),doubleToFloat(0.7815),doubleToFloat(0.3392),doubleToFloat(0.7634),doubleToFloat(0.3549),doubleToFloat(0.7550),doubleToFloat(0.3548),doubleToFloat(0.7360),doubleToFloat(0.3548),doubleToFloat(0.7207),doubleToFloat(0.3549),doubleToFloat(0.7207),doubleToFloat(0.3550)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7360),doubleToFloat(0.3550),doubleToFloat(0.7550),doubleToFloat(0.3550)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=11, element #100, 288 total numbers */
	this.IndexedFaceSet_11_100_coordIndex = new MFInt32(Java.to([1,12,11,-1,3,6,5,-1,5,4,3,-1,1,3,4,-1,4,0,1,-1,0,4,5,-1,5,2,0,-1,11,6,3,-1,3,1,11,-1,18,17,0,-1,0,2,18,-1,0,17,25,-1,25,1,0,-1,25,12,1,-1,7,11,13,-1,8,9,5,-1,5,6,8,-1,7,10,9,-1,9,8,7,-1,10,2,5,-1,5,9,10,-1,11,7,8,-1,8,6,11,-1,18,2,10,-1,10,21,18,-1,10,7,27,-1,27,21,10,-1,27,7,13,-1,12,35,37,-1,37,11,12,-1,11,37,36,-1,36,13,11,-1,20,14,17,-1,17,18,20,-1,23,25,17,-1,17,14,23,-1,16,15,14,-1,14,20,16,-1,24,23,14,-1,14,15,24,-1,15,16,29,-1,29,24,15,-1,20,18,21,-1,21,19,20,-1,26,19,21,-1,21,27,26,-1,16,20,19,-1,19,22,16,-1,28,22,19,-1,19,26,28,-1,22,28,29,-1,29,16,22,-1,36,35,31,-1,31,30,34,-1,31,34,33,-1,36,31,33,-1,36,33,32,-1,24,30,31,-1,31,23,24,-1,23,31,35,-1,35,25,23,-1,27,36,32,-1,32,26,27,-1,26,32,33,-1,33,28,26,-1,28,33,34,-1,34,29,28,-1,29,34,30,-1,30,24,29,-1,36,37,35,-1,12,25,35,-1,27,13,36,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=11, element #100, 288 total numbers */
	this.IndexedFaceSet_11_100_texCoordIndex = new MFInt32(Java.to([1,18,14,-1,3,6,5,-1,5,4,3,-1,1,3,4,-1,4,0,1,-1,0,4,5,-1,5,2,0,-1,14,6,3,-1,3,1,14,-1,19,16,0,-1,0,2,19,-1,0,16,17,-1,17,1,0,-1,17,18,1,-1,7,15,23,-1,9,10,11,-1,11,8,9,-1,7,12,10,-1,10,9,7,-1,12,13,11,-1,11,10,12,-1,15,7,9,-1,9,8,15,-1,20,13,12,-1,12,21,20,-1,12,7,22,-1,22,21,12,-1,22,7,23,-1,18,24,25,-1,25,14,18,-1,15,25,26,-1,26,23,15,-1,29,27,32,-1,32,33,29,-1,41,43,32,-1,32,27,41,-1,30,28,27,-1,27,29,30,-1,42,41,27,-1,27,28,42,-1,28,31,48,-1,48,42,28,-1,35,36,37,-1,37,34,35,-1,44,34,37,-1,37,45,44,-1,39,35,34,-1,34,38,39,-1,46,38,34,-1,34,44,46,-1,38,46,47,-1,47,40,38,-1,52,51,50,-1,50,49,55,-1,50,55,54,-1,52,50,54,-1,52,54,53,-1,42,49,50,-1,50,41,42,-1,41,50,51,-1,51,43,41,-1,45,52,53,-1,53,44,45,-1,44,53,54,-1,54,46,44,-1,46,54,55,-1,55,47,46,-1,48,55,49,-1,49,42,48,-1,52,56,51,-1,18,43,24,-1,22,23,52,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=12, element #100, 114 total numbers made up of 38 3-tuple values */
	this.Coordinate_12_100_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(-0.8966),doubleToFloat(-0.0174),doubleToFloat(-1.5680),doubleToFloat(-1.5210),doubleToFloat(-0.0174),doubleToFloat(0.4019),doubleToFloat(0.0000),doubleToFloat(-0.0174),doubleToFloat(-1.5680),doubleToFloat(-1.2880),doubleToFloat(0.6634),doubleToFloat(0.3302),doubleToFloat(-0.7503),doubleToFloat(0.6634),doubleToFloat(-1.3640),doubleToFloat(0.0000),doubleToFloat(0.6634),doubleToFloat(-1.3640),doubleToFloat(0.0000),doubleToFloat(0.6634),doubleToFloat(1.3720),doubleToFloat(1.5210),doubleToFloat(-0.0174),doubleToFloat(0.4019),doubleToFloat(1.2880),doubleToFloat(0.6634),doubleToFloat(0.3302),doubleToFloat(0.7503),doubleToFloat(0.6634),doubleToFloat(-1.3640)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.8967),doubleToFloat(-0.0174),doubleToFloat(-1.5680),doubleToFloat(0.0000),doubleToFloat(-0.0174),doubleToFloat(1.6330),doubleToFloat(-1.5560),doubleToFloat(-0.2684),doubleToFloat(1.3330),doubleToFloat(1.5560),doubleToFloat(-0.2684),doubleToFloat(1.3330),doubleToFloat(-1.2930),doubleToFloat(-1.7460),doubleToFloat(-2.6840),doubleToFloat(-1.2930),doubleToFloat(-3.5790),doubleToFloat(-1.5680),doubleToFloat(0.0000),doubleToFloat(-3.5790),doubleToFloat(-1.5680),doubleToFloat(-1.0180),doubleToFloat(-0.5447),doubleToFloat(-1.9080),doubleToFloat(0.0000),doubleToFloat(-0.5447),doubleToFloat(-1.9080),doubleToFloat(1.2930),doubleToFloat(-1.7460),doubleToFloat(-2.6840)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.0000),doubleToFloat(-1.7460),doubleToFloat(-2.6840),doubleToFloat(1.0180),doubleToFloat(-0.5447),doubleToFloat(-1.9080),doubleToFloat(1.2930),doubleToFloat(-3.5790),doubleToFloat(-1.5680),doubleToFloat(-2.6870),doubleToFloat(-1.7460),doubleToFloat(0.4019),doubleToFloat(-1.9180),doubleToFloat(-3.5790),doubleToFloat(0.4019),doubleToFloat(-1.8770),doubleToFloat(-0.5447),doubleToFloat(0.4019),doubleToFloat(2.6870),doubleToFloat(-1.7460),doubleToFloat(0.4019),doubleToFloat(1.8770),doubleToFloat(-0.5447),doubleToFloat(0.4019),doubleToFloat(1.9180),doubleToFloat(-3.5790),doubleToFloat(0.4019),doubleToFloat(0.0000),doubleToFloat(-3.5790),doubleToFloat(0.4019)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.7080),doubleToFloat(-3.4390),doubleToFloat(1.2720),doubleToFloat(-2.3320),doubleToFloat(-1.7800),doubleToFloat(1.2720),doubleToFloat(2.3320),doubleToFloat(-1.7800),doubleToFloat(1.2720),doubleToFloat(1.7080),doubleToFloat(-3.4390),doubleToFloat(1.2720),doubleToFloat(0.0000),doubleToFloat(-3.4390),doubleToFloat(1.2720),doubleToFloat(-1.4690),doubleToFloat(-0.8455),doubleToFloat(1.3110),doubleToFloat(1.4690),doubleToFloat(-0.8455),doubleToFloat(1.3110),doubleToFloat(0.0000),doubleToFloat(-0.5969),doubleToFloat(1.5930)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=12, element #101, 114 total numbers made up of 57 2-tuple values */
	this.TextureCoordinate_12_101_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.4269),doubleToFloat(0.4898),doubleToFloat(0.4623),doubleToFloat(0.4901),doubleToFloat(0.4269),doubleToFloat(0.4898),doubleToFloat(0.4623),doubleToFloat(0.4901),doubleToFloat(0.4269),doubleToFloat(0.4898),doubleToFloat(0.4269),doubleToFloat(0.4898),doubleToFloat(0.4777),doubleToFloat(0.4914),doubleToFloat(0.4623),doubleToFloat(0.4901),doubleToFloat(0.4777),doubleToFloat(0.4914),doubleToFloat(0.4623),doubleToFloat(0.4901)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4269),doubleToFloat(0.4898),doubleToFloat(0.4269),doubleToFloat(0.4898),doubleToFloat(0.4269),doubleToFloat(0.4898),doubleToFloat(0.4269),doubleToFloat(0.4898),doubleToFloat(0.4777),doubleToFloat(0.4914),doubleToFloat(0.4777),doubleToFloat(0.4914),doubleToFloat(0.4309),doubleToFloat(0.4635),doubleToFloat(0.4687),doubleToFloat(0.4544),doubleToFloat(0.4611),doubleToFloat(0.4911),doubleToFloat(0.4284),doubleToFloat(0.4641)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4284),doubleToFloat(0.4641),doubleToFloat(0.4309),doubleToFloat(0.4635),doubleToFloat(0.4687),doubleToFloat(0.4544),doubleToFloat(0.4611),doubleToFloat(0.4911),doubleToFloat(0.4611),doubleToFloat(0.4911),doubleToFloat(0.4777),doubleToFloat(0.4914),doubleToFloat(0.4611),doubleToFloat(0.4911),doubleToFloat(0.4321),doubleToFloat(0.4164),doubleToFloat(0.4315),doubleToFloat(0.3728),doubleToFloat(0.4321),doubleToFloat(0.4164)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4315),doubleToFloat(0.3728),doubleToFloat(0.4315),doubleToFloat(0.3728),doubleToFloat(0.4309),doubleToFloat(0.4635),doubleToFloat(0.4284),doubleToFloat(0.4641),doubleToFloat(0.4321),doubleToFloat(0.4164),doubleToFloat(0.4321),doubleToFloat(0.4164),doubleToFloat(0.4284),doubleToFloat(0.4641),doubleToFloat(0.4309),doubleToFloat(0.4635),doubleToFloat(0.4315),doubleToFloat(0.3728),doubleToFloat(0.4315),doubleToFloat(0.3728)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4315),doubleToFloat(0.3728),doubleToFloat(0.4804),doubleToFloat(0.4170),doubleToFloat(0.4726),doubleToFloat(0.3714),doubleToFloat(0.4687),doubleToFloat(0.4544),doubleToFloat(0.4804),doubleToFloat(0.4170),doubleToFloat(0.4687),doubleToFloat(0.4544),doubleToFloat(0.4726),doubleToFloat(0.3714),doubleToFloat(0.4726),doubleToFloat(0.3714),doubleToFloat(0.4726),doubleToFloat(0.3714),doubleToFloat(0.4726),doubleToFloat(0.3714)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4804),doubleToFloat(0.4170),doubleToFloat(0.4687),doubleToFloat(0.4544),doubleToFloat(0.4687),doubleToFloat(0.4544),doubleToFloat(0.4804),doubleToFloat(0.4170),doubleToFloat(0.4726),doubleToFloat(0.3714),doubleToFloat(0.4726),doubleToFloat(0.3714),doubleToFloat(0.4687),doubleToFloat(0.4544)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=12, element #109, 264 total numbers */
	this.IndexedFaceSet_12_109_coordIndex = new MFInt32(Java.to([25,4,3,-1,26,25,3,-1,0,26,3,-1,1,10,26,-1,26,0,1,-1,1,9,12,-1,12,10,1,-1,2,4,25,-1,25,34,2,-1,6,8,31,-1,6,31,32,-1,5,6,32,-1,7,5,32,-1,32,11,7,-1,7,11,12,-1,12,9,7,-1,2,34,31,-1,31,8,2,-1,14,13,19,-1,17,16,15,-1,18,17,15,-1,19,18,15,-1,14,19,15,-1,0,13,14,-1,14,1,0,-1,1,14,15,-1,15,9,1,-1,9,15,16,-1,16,7,9,-1,7,16,17,-1,17,5,7,-1,5,17,18,-1,18,6,5,-1,6,18,19,-1,19,3,6,-1,3,19,13,-1,13,0,3,-1,2,8,6,-1,2,6,3,-1,4,2,3,-1,23,24,20,-1,20,21,23,-1,29,23,21,-1,21,22,29,-1,22,33,29,-1,20,25,26,-1,26,21,20,-1,26,10,22,-1,22,21,26,-1,10,12,33,-1,33,22,10,-1,34,25,20,-1,20,24,34,-1,23,27,28,-1,28,24,23,-1,29,30,27,-1,27,23,29,-1,30,29,33,-1,28,27,32,-1,32,31,28,-1,32,27,30,-1,30,11,32,-1,11,30,33,-1,33,12,11,-1,34,24,28,-1,28,31,34,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=12, element #109, 264 total numbers */
	this.IndexedFaceSet_12_109_texCoordIndex = new MFInt32(Java.to([12,5,4,-1,13,12,4,-1,0,13,4,-1,1,14,13,-1,13,0,1,-1,1,3,18,-1,18,14,1,-1,2,5,12,-1,12,20,2,-1,7,10,12,-1,7,12,15,-1,6,7,15,-1,8,6,15,-1,15,16,8,-1,8,16,17,-1,17,11,8,-1,9,19,12,-1,12,10,9,-1,22,21,27,-1,25,24,23,-1,26,25,23,-1,27,26,23,-1,22,27,23,-1,0,21,22,-1,22,1,0,-1,1,22,23,-1,23,3,1,-1,11,23,24,-1,24,8,11,-1,8,24,25,-1,25,6,8,-1,6,25,26,-1,26,7,6,-1,7,26,27,-1,27,4,7,-1,4,27,21,-1,21,0,4,-1,9,10,7,-1,9,7,4,-1,5,9,4,-1,29,28,12,-1,12,30,29,-1,31,29,30,-1,30,32,31,-1,32,33,31,-1,12,12,34,-1,34,30,12,-1,34,35,32,-1,32,30,34,-1,35,36,33,-1,33,32,35,-1,37,12,12,-1,12,28,37,-1,38,39,12,-1,12,40,38,-1,41,42,39,-1,39,38,41,-1,42,41,45,-1,12,39,43,-1,43,12,12,-1,43,39,42,-1,42,44,43,-1,44,42,45,-1,45,46,44,-1,47,40,12,-1,12,12,47,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=13, element #109, 105 total numbers made up of 35 3-tuple values */
	this.Coordinate_13_109_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(-2.6870),doubleToFloat(-1.4750),doubleToFloat(-0.9449),doubleToFloat(-1.9180),doubleToFloat(-3.3080),doubleToFloat(-0.9449),doubleToFloat(0.0000),doubleToFloat(0.2536),doubleToFloat(0.2858),doubleToFloat(-1.8770),doubleToFloat(-0.2736),doubleToFloat(-0.9449),doubleToFloat(-1.5560),doubleToFloat(0.0026),doubleToFloat(-0.0141),doubleToFloat(2.6870),doubleToFloat(-1.4750),doubleToFloat(-0.9449),doubleToFloat(1.8770),doubleToFloat(-0.2736),doubleToFloat(-0.9449),doubleToFloat(1.9180),doubleToFloat(-3.3080),doubleToFloat(-0.9449),doubleToFloat(1.5560),doubleToFloat(0.0026),doubleToFloat(-0.0141),doubleToFloat(0.0000),doubleToFloat(-3.3080),doubleToFloat(-0.9449)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.9650),doubleToFloat(-3.3080),doubleToFloat(0.8573),doubleToFloat(1.9650),doubleToFloat(-3.3080),doubleToFloat(0.8573),doubleToFloat(0.0000),doubleToFloat(-3.3080),doubleToFloat(0.8573),doubleToFloat(-2.2080),doubleToFloat(-1.5010),doubleToFloat(-1.7860),doubleToFloat(-1.6070),doubleToFloat(-2.6680),doubleToFloat(-1.7860),doubleToFloat(0.0000),doubleToFloat(-2.6680),doubleToFloat(-1.7860),doubleToFloat(1.6070),doubleToFloat(-2.6680),doubleToFloat(-1.7860),doubleToFloat(2.2080),doubleToFloat(-1.5010),doubleToFloat(-1.7860),doubleToFloat(1.5990),doubleToFloat(-0.5151),doubleToFloat(-1.7860),doubleToFloat(-1.5990),doubleToFloat(-0.5151),doubleToFloat(-1.7860)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.6380),doubleToFloat(-0.5877),doubleToFloat(2.1750),doubleToFloat(-2.0340),doubleToFloat(-2.0550),doubleToFloat(3.8650),doubleToFloat(-2.0340),doubleToFloat(-3.3080),doubleToFloat(3.5220),doubleToFloat(0.0000),doubleToFloat(-2.0550),doubleToFloat(5.0960),doubleToFloat(0.0000),doubleToFloat(-0.4955),doubleToFloat(3.6840),doubleToFloat(-1.5970),doubleToFloat(-0.2925),doubleToFloat(1.0800),doubleToFloat(-2.4420),doubleToFloat(-1.6920),doubleToFloat(0.8573),doubleToFloat(2.0340),doubleToFloat(-2.0550),doubleToFloat(3.8650),doubleToFloat(1.6380),doubleToFloat(-0.5877),doubleToFloat(2.1750),doubleToFloat(0.0000),doubleToFloat(-3.3080),doubleToFloat(4.7530)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(2.0340),doubleToFloat(-3.3080),doubleToFloat(3.5220),doubleToFloat(1.5970),doubleToFloat(-0.2925),doubleToFloat(1.0800),doubleToFloat(2.4420),doubleToFloat(-1.6920),doubleToFloat(0.8573),doubleToFloat(0.0000),doubleToFloat(-3.3080),doubleToFloat(3.5220),doubleToFloat(0.0000),doubleToFloat(-0.0249),doubleToFloat(1.5500)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=13, element #110, 96 total numbers made up of 48 2-tuple values */
	this.TextureCoordinate_13_110_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.4804),doubleToFloat(0.4170),doubleToFloat(0.4726),doubleToFloat(0.3714),doubleToFloat(0.4777),doubleToFloat(0.4914),doubleToFloat(0.4726),doubleToFloat(0.3714),doubleToFloat(0.4687),doubleToFloat(0.4544),doubleToFloat(0.4611),doubleToFloat(0.4911),doubleToFloat(0.4804),doubleToFloat(0.4170),doubleToFloat(0.4687),doubleToFloat(0.4544),doubleToFloat(0.4726),doubleToFloat(0.3714),doubleToFloat(0.4777),doubleToFloat(0.4914)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4611),doubleToFloat(0.4911),doubleToFloat(0.4726),doubleToFloat(0.3714),doubleToFloat(0.5246),doubleToFloat(0.4611),doubleToFloat(0.5392),doubleToFloat(0.4090),doubleToFloat(0.5352),doubleToFloat(0.3721),doubleToFloat(0.5392),doubleToFloat(0.4090),doubleToFloat(0.5352),doubleToFloat(0.3721),doubleToFloat(0.5370),doubleToFloat(0.3715),doubleToFloat(0.5370),doubleToFloat(0.3715),doubleToFloat(0.5123),doubleToFloat(0.4770)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5123),doubleToFloat(0.4770),doubleToFloat(0.4804),doubleToFloat(0.4170),doubleToFloat(0.4726),doubleToFloat(0.3714),doubleToFloat(0.4726),doubleToFloat(0.3714),doubleToFloat(0.4726),doubleToFloat(0.3714),doubleToFloat(0.4804),doubleToFloat(0.4170),doubleToFloat(0.4687),doubleToFloat(0.4544),doubleToFloat(0.4687),doubleToFloat(0.4544),doubleToFloat(0.5785),doubleToFloat(0.4537),doubleToFloat(0.6010),doubleToFloat(0.4307)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5382),doubleToFloat(0.4079),doubleToFloat(0.6345),doubleToFloat(0.3741),doubleToFloat(0.5897),doubleToFloat(0.3729),doubleToFloat(0.5897),doubleToFloat(0.3729),doubleToFloat(0.5392),doubleToFloat(0.4090),doubleToFloat(0.5352),doubleToFloat(0.3721),doubleToFloat(0.5370),doubleToFloat(0.3715),doubleToFloat(0.5123),doubleToFloat(0.4770),doubleToFloat(0.6010),doubleToFloat(0.4307),doubleToFloat(0.5382),doubleToFloat(0.4079)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5785),doubleToFloat(0.4537),doubleToFloat(0.6345),doubleToFloat(0.3741),doubleToFloat(0.5897),doubleToFloat(0.3729),doubleToFloat(0.5392),doubleToFloat(0.4090),doubleToFloat(0.5352),doubleToFloat(0.3721),doubleToFloat(0.5897),doubleToFloat(0.3729),doubleToFloat(0.5370),doubleToFloat(0.3715),doubleToFloat(0.5123),doubleToFloat(0.4770)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=9, element #122, 576 total numbers */
	this.IndexedFaceSet_9_122_coordIndex = new MFInt32(Java.to([0,1,2,-1,0,2,3,-1,0,3,4,-1,0,4,5,-1,0,5,6,-1,0,6,7,-1,0,7,8,-1,0,8,9,-1,0,9,10,-1,0,10,11,-1,0,11,12,-1,0,12,1,-1,14,2,1,-1,1,13,14,-1,15,3,2,-1,2,14,15,-1,16,4,3,-1,3,15,16,-1,17,5,4,-1,4,16,17,-1,18,6,5,-1,5,17,18,-1,19,7,6,-1,6,18,19,-1,20,8,7,-1,7,19,20,-1,21,9,8,-1,8,20,21,-1,22,10,9,-1,9,21,22,-1,23,11,10,-1,10,22,23,-1,24,12,11,-1,11,23,24,-1,13,1,12,-1,12,24,13,-1,26,63,62,-1,62,25,26,-1,27,64,63,-1,63,26,27,-1,28,65,64,-1,64,27,28,-1,29,66,65,-1,65,28,29,-1,30,67,66,-1,66,29,30,-1,31,68,67,-1,67,30,31,-1,32,69,68,-1,68,31,32,-1,33,70,69,-1,69,32,33,-1,34,71,70,-1,70,33,34,-1,35,72,71,-1,71,34,35,-1,36,73,72,-1,72,35,36,-1,25,62,73,-1,73,36,25,-1,38,26,25,-1,25,37,38,-1,39,27,26,-1,26,38,39,-1,40,28,27,-1,27,39,40,-1,41,29,28,-1,28,40,41,-1,42,30,29,-1,29,41,42,-1,43,31,30,-1,30,42,43,-1,44,32,31,-1,31,43,44,-1,45,33,32,-1,32,44,45,-1,46,34,33,-1,33,45,46,-1,47,35,34,-1,34,46,47,-1,48,36,35,-1,35,47,48,-1,37,25,36,-1,36,48,37,-1,50,38,37,-1,37,49,50,-1,51,39,38,-1,38,50,51,-1,52,40,39,-1,39,51,52,-1,53,41,40,-1,40,52,53,-1,54,42,41,-1,41,53,54,-1,55,43,42,-1,42,54,55,-1,56,44,43,-1,43,55,56,-1,57,45,44,-1,44,56,57,-1,58,46,45,-1,45,57,58,-1,59,47,46,-1,46,58,59,-1,60,48,47,-1,47,59,60,-1,49,37,48,-1,48,60,49,-1,61,50,49,-1,61,51,50,-1,61,52,51,-1,61,53,52,-1,61,54,53,-1,61,55,54,-1,61,56,55,-1,61,57,56,-1,61,58,57,-1,61,59,58,-1,61,60,59,-1,61,49,60,-1,62,63,14,-1,14,13,62,-1,63,64,15,-1,15,14,63,-1,64,65,16,-1,16,15,64,-1,65,66,17,-1,17,16,65,-1,66,67,18,-1,18,17,66,-1,67,68,19,-1,19,18,67,-1,68,69,20,-1,20,19,68,-1,69,70,21,-1,21,20,69,-1,70,71,22,-1,22,21,70,-1,71,72,23,-1,23,22,71,-1,72,73,24,-1,24,23,72,-1,73,62,13,-1,13,24,73,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=9, element #122, 576 total numbers */
	this.IndexedFaceSet_9_122_texCoordIndex = new MFInt32(Java.to([0,1,2,-1,0,2,3,-1,0,3,4,-1,0,4,5,-1,0,5,6,-1,0,6,7,-1,0,7,8,-1,0,8,9,-1,0,9,10,-1,0,10,11,-1,0,11,12,-1,0,12,1,-1,14,2,1,-1,1,13,14,-1,15,3,2,-1,2,14,15,-1,16,4,3,-1,3,15,16,-1,17,5,4,-1,4,16,17,-1,18,6,5,-1,5,17,18,-1,19,7,6,-1,6,18,19,-1,20,8,7,-1,7,19,20,-1,21,9,8,-1,8,20,21,-1,22,10,9,-1,9,21,22,-1,23,11,10,-1,10,22,23,-1,24,12,11,-1,11,23,24,-1,13,1,12,-1,12,24,13,-1,39,40,37,-1,37,38,39,-1,41,42,40,-1,40,39,41,-1,43,44,42,-1,42,41,43,-1,45,46,44,-1,44,43,45,-1,47,48,46,-1,46,45,47,-1,49,50,48,-1,48,47,49,-1,51,52,50,-1,50,49,51,-1,53,54,52,-1,52,51,53,-1,55,56,54,-1,54,53,55,-1,57,58,56,-1,56,55,57,-1,59,60,58,-1,58,57,59,-1,38,37,60,-1,60,59,38,-1,62,39,38,-1,38,61,62,-1,63,41,39,-1,39,62,63,-1,64,43,41,-1,41,63,64,-1,65,45,43,-1,43,64,65,-1,66,47,45,-1,45,65,66,-1,67,49,47,-1,47,66,67,-1,68,51,49,-1,49,67,68,-1,69,53,51,-1,51,68,69,-1,70,55,53,-1,53,69,70,-1,71,57,55,-1,55,70,71,-1,72,59,57,-1,57,71,72,-1,61,38,59,-1,59,72,61,-1,74,62,61,-1,61,73,74,-1,75,63,62,-1,62,74,75,-1,76,64,63,-1,63,75,76,-1,77,65,64,-1,64,76,77,-1,78,66,65,-1,65,77,78,-1,79,67,66,-1,66,78,79,-1,80,68,67,-1,67,79,80,-1,81,69,68,-1,68,80,81,-1,82,70,69,-1,69,81,82,-1,83,71,70,-1,70,82,83,-1,84,72,71,-1,71,83,84,-1,73,61,72,-1,72,84,73,-1,85,74,73,-1,85,75,74,-1,85,76,75,-1,85,77,76,-1,85,78,77,-1,85,79,78,-1,85,80,79,-1,85,81,80,-1,85,82,81,-1,85,83,82,-1,85,84,83,-1,85,73,84,-1,25,26,14,-1,14,13,25,-1,26,27,15,-1,15,14,26,-1,27,28,16,-1,16,15,27,-1,28,29,17,-1,17,16,28,-1,29,30,18,-1,18,17,29,-1,30,31,19,-1,19,18,30,-1,31,32,20,-1,20,19,31,-1,32,33,21,-1,21,20,32,-1,33,34,22,-1,22,21,33,-1,34,35,23,-1,23,22,34,-1,35,36,24,-1,24,23,35,-1,36,25,13,-1,13,24,36,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=10, element #122, 222 total numbers made up of 74 3-tuple values */
	this.Coordinate_10_122_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(0.0000),doubleToFloat(10.0300),doubleToFloat(0.1297),doubleToFloat(0.0000),doubleToFloat(9.0570),doubleToFloat(-2.5670),doubleToFloat(-2.0750),doubleToFloat(9.0570),doubleToFloat(-2.2060),doubleToFloat(-3.5940),doubleToFloat(9.0570),doubleToFloat(-1.7700),doubleToFloat(-4.1500),doubleToFloat(9.0570),doubleToFloat(0.1297),doubleToFloat(-3.5940),doubleToFloat(9.0570),doubleToFloat(2.0300),doubleToFloat(-2.0750),doubleToFloat(9.0570),doubleToFloat(2.4650),doubleToFloat(0.0000),doubleToFloat(9.0570),doubleToFloat(2.8270),doubleToFloat(2.0750),doubleToFloat(9.0570),doubleToFloat(2.4650),doubleToFloat(3.5940),doubleToFloat(9.0570),doubleToFloat(2.0300)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(4.1500),doubleToFloat(9.0570),doubleToFloat(0.1297),doubleToFloat(3.5940),doubleToFloat(9.0570),doubleToFloat(-1.7700),doubleToFloat(2.0750),doubleToFloat(9.0570),doubleToFloat(-2.2060),doubleToFloat(0.0000),doubleToFloat(6.7250),doubleToFloat(-4.1930),doubleToFloat(-2.6840),doubleToFloat(7.0010),doubleToFloat(-3.6140),doubleToFloat(-4.6480),doubleToFloat(7.2280),doubleToFloat(-2.0320),doubleToFloat(-5.3670),doubleToFloat(7.2280),doubleToFloat(0.1297),doubleToFloat(-4.6480),doubleToFloat(7.4000),doubleToFloat(2.1890),doubleToFloat(-2.6840),doubleToFloat(7.2280),doubleToFloat(3.3130),doubleToFloat(0.0000),doubleToFloat(7.0240),doubleToFloat(4.0040)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(2.6840),doubleToFloat(7.2280),doubleToFloat(3.3130),doubleToFloat(4.6480),doubleToFloat(7.4000),doubleToFloat(2.1890),doubleToFloat(5.3670),doubleToFloat(7.2280),doubleToFloat(0.1297),doubleToFloat(4.6480),doubleToFloat(7.2280),doubleToFloat(-2.0320),doubleToFloat(2.6840),doubleToFloat(7.0010),doubleToFloat(-3.6140),doubleToFloat(0.0000),doubleToFloat(4.7450),doubleToFloat(-4.3000),doubleToFloat(-2.9360),doubleToFloat(4.7430),doubleToFloat(-3.6670),doubleToFloat(-5.0890),doubleToFloat(4.7380),doubleToFloat(-2.2800),doubleToFloat(-5.8740),doubleToFloat(4.7310),doubleToFloat(0.1330),doubleToFloat(-5.1020),doubleToFloat(4.7310),doubleToFloat(2.4760)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-2.9630),doubleToFloat(4.7310),doubleToFloat(3.6560),doubleToFloat(0.0000),doubleToFloat(4.7300),doubleToFloat(4.3000),doubleToFloat(2.9630),doubleToFloat(4.7300),doubleToFloat(3.6560),doubleToFloat(5.1020),doubleToFloat(4.7300),doubleToFloat(2.4760),doubleToFloat(5.8740),doubleToFloat(4.7310),doubleToFloat(0.1340),doubleToFloat(5.0880),doubleToFloat(4.7370),doubleToFloat(-2.2810),doubleToFloat(2.9360),doubleToFloat(4.7430),doubleToFloat(-3.6670),doubleToFloat(0.0000),doubleToFloat(2.3580),doubleToFloat(-3.6630),doubleToFloat(-2.5430),doubleToFloat(2.3560),doubleToFloat(-3.1130),doubleToFloat(-4.4020),doubleToFloat(2.3550),doubleToFloat(-1.6130)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-5.0840),doubleToFloat(2.3580),doubleToFloat(0.1340),doubleToFloat(-4.4150),doubleToFloat(2.3540),doubleToFloat(2.1570),doubleToFloat(-2.5620),doubleToFloat(2.3410),doubleToFloat(3.0970),doubleToFloat(0.0000),doubleToFloat(2.3390),doubleToFloat(3.6540),doubleToFloat(2.5600),doubleToFloat(2.3470),doubleToFloat(3.1010),doubleToFloat(4.4170),doubleToFloat(2.3570),doubleToFloat(2.1580),doubleToFloat(5.0830),doubleToFloat(2.3570),doubleToFloat(0.1338),doubleToFloat(4.4040),doubleToFloat(2.3560),doubleToFloat(-1.6110),doubleToFloat(2.5420),doubleToFloat(2.3580),doubleToFloat(-3.1150),doubleToFloat(0.0000),doubleToFloat(0.6228),doubleToFloat(-1.9230)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.4780),doubleToFloat(0.6244),doubleToFloat(-1.6030),doubleToFloat(-2.5380),doubleToFloat(0.6220),doubleToFloat(-1.0370),doubleToFloat(-2.9260),doubleToFloat(0.6243),doubleToFloat(0.1308),doubleToFloat(-2.5350),doubleToFloat(0.6248),doubleToFloat(1.3080),doubleToFloat(-1.4640),doubleToFloat(0.6148),doubleToFloat(2.1540),doubleToFloat(0.0000),doubleToFloat(0.6102),doubleToFloat(2.4660),doubleToFloat(1.4550),doubleToFloat(0.6123),doubleToFloat(2.1540),doubleToFloat(2.5340),doubleToFloat(0.6219),doubleToFloat(1.3010),doubleToFloat(2.9270),doubleToFloat(0.6248),doubleToFloat(0.1297),doubleToFloat(2.5390),doubleToFloat(0.6184),doubleToFloat(-1.0270)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(1.4710),doubleToFloat(0.6221),doubleToFloat(-1.6020),doubleToFloat(0.0000),doubleToFloat(-0.0048),doubleToFloat(0.1335),doubleToFloat(0.0000),doubleToFloat(6.6870),doubleToFloat(-3.9360),doubleToFloat(-2.5270),doubleToFloat(6.9600),doubleToFloat(-3.3900),doubleToFloat(-4.3780),doubleToFloat(7.1740),doubleToFloat(-1.8990),doubleToFloat(-5.0550),doubleToFloat(7.1610),doubleToFloat(0.1297),doubleToFloat(-4.3960),doubleToFloat(7.3300),doubleToFloat(2.0410),doubleToFloat(-2.5580),doubleToFloat(7.1610),doubleToFloat(3.0820),doubleToFloat(0.0000),doubleToFloat(6.8340),doubleToFloat(3.7590),doubleToFloat(2.5550),doubleToFloat(7.1630),doubleToFloat(3.0830)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(4.3970),doubleToFloat(7.3320),doubleToFloat(2.0390),doubleToFloat(5.0540),doubleToFloat(7.1630),doubleToFloat(0.1318),doubleToFloat(4.3760),doubleToFloat(7.1760),doubleToFloat(-1.9000),doubleToFloat(2.5270),doubleToFloat(6.9600),doubleToFloat(-3.3900)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=10, element #123, 172 total numbers made up of 86 2-tuple values */
	this.TextureCoordinate_10_123_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.2061),doubleToFloat(0.2498),doubleToFloat(0.2067),doubleToFloat(0.1822),doubleToFloat(0.1471),doubleToFloat(0.1822),doubleToFloat(0.1035),doubleToFloat(0.1822),doubleToFloat(0.0875),doubleToFloat(0.1822),doubleToFloat(0.1035),doubleToFloat(0.1822),doubleToFloat(0.1471),doubleToFloat(0.1822),doubleToFloat(0.2067),doubleToFloat(0.1822),doubleToFloat(0.2663),doubleToFloat(0.1822),doubleToFloat(0.3100),doubleToFloat(0.1822)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.3259),doubleToFloat(0.1822),doubleToFloat(0.3100),doubleToFloat(0.1822),doubleToFloat(0.2663),doubleToFloat(0.1822),doubleToFloat(0.2080),doubleToFloat(0.1494),doubleToFloat(0.1373),doubleToFloat(0.1495),doubleToFloat(0.0855),doubleToFloat(0.1495),doubleToFloat(0.0666),doubleToFloat(0.1495),doubleToFloat(0.0855),doubleToFloat(0.1496),doubleToFloat(0.1373),doubleToFloat(0.1495),doubleToFloat(0.2080),doubleToFloat(0.1495)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.2788),doubleToFloat(0.1495),doubleToFloat(0.3305),doubleToFloat(0.1496),doubleToFloat(0.3495),doubleToFloat(0.1495),doubleToFloat(0.3305),doubleToFloat(0.1495),doubleToFloat(0.2788),doubleToFloat(0.1495),doubleToFloat(0.2080),doubleToFloat(0.1494),doubleToFloat(0.1414),doubleToFloat(0.1495),doubleToFloat(0.0926),doubleToFloat(0.1495),doubleToFloat(0.0748),doubleToFloat(0.1495),doubleToFloat(0.0922),doubleToFloat(0.1495)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1406),doubleToFloat(0.1495),doubleToFloat(0.2080),doubleToFloat(0.1495),doubleToFloat(0.2754),doubleToFloat(0.1495),doubleToFloat(0.3239),doubleToFloat(0.1495),doubleToFloat(0.3412),doubleToFloat(0.1495),doubleToFloat(0.3234),doubleToFloat(0.1495),doubleToFloat(0.2746),doubleToFloat(0.1495),doubleToFloat(0.9950),doubleToFloat(0.6227),doubleToFloat(0.9911),doubleToFloat(0.5634),doubleToFloat(0.9445),doubleToFloat(0.5634)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.9587),doubleToFloat(0.6143),doubleToFloat(0.8611),doubleToFloat(0.5667),doubleToFloat(0.8645),doubleToFloat(0.6158),doubleToFloat(0.8296),doubleToFloat(0.5725),doubleToFloat(0.8297),doubleToFloat(0.6181),doubleToFloat(0.7843),doubleToFloat(0.5725),doubleToFloat(0.7986),doubleToFloat(0.6221),doubleToFloat(0.7343),doubleToFloat(0.5716),doubleToFloat(0.7402),doubleToFloat(0.6181),doubleToFloat(0.6899),doubleToFloat(0.5733)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7033),doubleToFloat(0.6238),doubleToFloat(0.7343),doubleToFloat(0.5716),doubleToFloat(0.7402),doubleToFloat(0.6181),doubleToFloat(0.7843),doubleToFloat(0.5724),doubleToFloat(0.7986),doubleToFloat(0.6221),doubleToFloat(0.8296),doubleToFloat(0.5725),doubleToFloat(0.8297),doubleToFloat(0.6181),doubleToFloat(0.8611),doubleToFloat(0.5667),doubleToFloat(0.8646),doubleToFloat(0.6158),doubleToFloat(0.9445),doubleToFloat(0.5634)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.9587),doubleToFloat(0.6143),doubleToFloat(0.9874),doubleToFloat(0.5161),doubleToFloat(0.9409),doubleToFloat(0.5169),doubleToFloat(0.8667),doubleToFloat(0.5270),doubleToFloat(0.8296),doubleToFloat(0.5279),doubleToFloat(0.7882),doubleToFloat(0.5304),doubleToFloat(0.7381),doubleToFloat(0.5276),doubleToFloat(0.6693),doubleToFloat(0.5234),doubleToFloat(0.7380),doubleToFloat(0.5277),doubleToFloat(0.7882),doubleToFloat(0.5305)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.8296),doubleToFloat(0.5279),doubleToFloat(0.8666),doubleToFloat(0.5271),doubleToFloat(0.9409),doubleToFloat(0.5170),doubleToFloat(0.9852),doubleToFloat(0.4793),doubleToFloat(0.8833),doubleToFloat(0.4954),doubleToFloat(0.8658),doubleToFloat(0.4954),doubleToFloat(0.8297),doubleToFloat(0.4954),doubleToFloat(0.7933),doubleToFloat(0.4954),doubleToFloat(0.7672),doubleToFloat(0.4952),doubleToFloat(0.6706),doubleToFloat(0.4859)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7672),doubleToFloat(0.4952),doubleToFloat(0.7936),doubleToFloat(0.4954),doubleToFloat(0.8297),doubleToFloat(0.4954),doubleToFloat(0.8655),doubleToFloat(0.4953),doubleToFloat(0.8832),doubleToFloat(0.4954),doubleToFloat(0.8296),doubleToFloat(0.4836)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=10, element #131, 304 total numbers */
	this.IndexedFaceSet_10_131_coordIndex = new MFInt32(Java.to([2,1,0,-1,3,2,0,-1,4,3,0,-1,0,1,6,-1,6,5,0,-1,1,2,7,-1,7,6,1,-1,2,3,8,-1,8,7,2,-1,3,4,9,-1,9,8,3,-1,4,0,5,-1,5,9,4,-1,5,6,11,-1,11,10,5,-1,6,7,12,-1,12,11,6,-1,7,8,13,-1,13,12,7,-1,8,9,14,-1,14,13,8,-1,9,5,10,-1,10,14,9,-1,10,11,16,-1,16,15,10,-1,11,12,17,-1,17,16,11,-1,12,13,18,-1,18,17,12,-1,13,14,19,-1,19,18,13,-1,14,10,15,-1,15,19,14,-1,36,37,38,-1,35,36,38,-1,39,35,38,-1,21,20,15,-1,15,16,21,-1,22,21,16,-1,16,17,22,-1,23,22,17,-1,17,18,23,-1,24,23,18,-1,18,19,24,-1,20,24,19,-1,19,15,20,-1,26,25,20,-1,20,21,26,-1,27,26,21,-1,21,22,27,-1,28,27,22,-1,22,23,28,-1,29,28,23,-1,23,24,29,-1,25,29,24,-1,24,20,25,-1,31,30,25,-1,25,26,31,-1,32,31,26,-1,26,27,32,-1,33,32,27,-1,27,28,33,-1,34,33,28,-1,28,29,34,-1,30,34,29,-1,29,25,30,-1,36,35,30,-1,30,31,36,-1,37,36,31,-1,31,32,37,-1,38,37,32,-1,32,33,38,-1,39,38,33,-1,33,34,39,-1,35,39,34,-1,34,30,35,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=10, element #131, 304 total numbers */
	this.IndexedFaceSet_10_131_texCoordIndex = new MFInt32(Java.to([2,0,53,-1,3,2,53,-1,54,3,53,-1,1,0,5,-1,5,6,1,-1,0,2,7,-1,7,5,0,-1,2,3,8,-1,8,7,2,-1,25,4,9,-1,9,26,25,-1,4,1,6,-1,6,9,4,-1,6,5,10,-1,10,11,6,-1,5,7,12,-1,12,10,5,-1,7,8,13,-1,13,12,7,-1,27,9,14,-1,14,28,27,-1,9,6,11,-1,11,14,9,-1,11,10,15,-1,15,16,11,-1,10,12,17,-1,17,15,10,-1,12,13,18,-1,18,17,12,-1,29,14,19,-1,19,30,29,-1,14,11,16,-1,16,19,14,-1,34,35,36,-1,33,34,36,-1,37,33,36,-1,20,21,16,-1,16,15,20,-1,22,20,15,-1,15,17,22,-1,23,22,17,-1,17,18,23,-1,24,32,31,-1,31,19,24,-1,21,24,19,-1,19,16,21,-1,40,41,38,-1,38,39,40,-1,43,40,39,-1,39,42,43,-1,45,43,42,-1,42,44,45,-1,47,45,44,-1,44,46,47,-1,41,47,46,-1,46,38,41,-1,48,49,41,-1,41,40,48,-1,50,48,40,-1,40,43,50,-1,51,50,43,-1,43,45,51,-1,52,51,45,-1,45,47,52,-1,49,52,47,-1,47,41,49,-1,34,33,49,-1,49,48,34,-1,35,34,48,-1,48,50,35,-1,36,35,50,-1,50,51,36,-1,37,36,51,-1,51,52,37,-1,33,37,52,-1,52,49,33,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=11, element #131, 120 total numbers made up of 40 3-tuple values */
	this.Coordinate_11_131_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(0.7458),doubleToFloat(1.6790),doubleToFloat(-1.1890),doubleToFloat(1.5650),doubleToFloat(1.6790),doubleToFloat(0.0238),doubleToFloat(0.6631),doubleToFloat(1.6790),doubleToFloat(1.1770),doubleToFloat(-0.7140),doubleToFloat(1.6790),doubleToFloat(0.6762),doubleToFloat(-0.6628),doubleToFloat(1.6790),doubleToFloat(-0.7857),doubleToFloat(0.9082),doubleToFloat(0.4486),doubleToFloat(-1.6340),doubleToFloat(2.0400),doubleToFloat(0.4486),doubleToFloat(0.0404),doubleToFloat(0.7940),doubleToFloat(0.4486),doubleToFloat(1.6320),doubleToFloat(-1.1080),doubleToFloat(0.4486),doubleToFloat(0.9413),doubleToFloat(-1.0370),doubleToFloat(0.4486),doubleToFloat(-1.0780)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.9397),doubleToFloat(-2.6110),doubleToFloat(-1.6340),doubleToFloat(2.0710),doubleToFloat(-2.6110),doubleToFloat(0.0404),doubleToFloat(0.8254),doubleToFloat(-2.6110),doubleToFloat(1.6320),doubleToFloat(-1.0760),doubleToFloat(-2.6110),doubleToFloat(0.9413),doubleToFloat(-1.0060),doubleToFloat(-2.6110),doubleToFloat(-1.0780),doubleToFloat(0.9738),doubleToFloat(-3.6560),doubleToFloat(-1.7280),doubleToFloat(2.1710),doubleToFloat(-3.6560),doubleToFloat(0.0439),doubleToFloat(0.8529),doubleToFloat(-3.6560),doubleToFloat(1.7280),doubleToFloat(-1.1590),doubleToFloat(-3.6560),doubleToFloat(0.9971),doubleToFloat(-1.0840),doubleToFloat(-3.6560),doubleToFloat(-1.1390)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.5980),doubleToFloat(-1.8600),doubleToFloat(-1.3720),doubleToFloat(1.4630),doubleToFloat(-1.8600),doubleToFloat(-0.3215),doubleToFloat(1.0150),doubleToFloat(-1.8600),doubleToFloat(1.1530),doubleToFloat(-0.1265),doubleToFloat(-1.8600),doubleToFloat(1.0130),doubleToFloat(-0.3843),doubleToFloat(-1.8600),doubleToFloat(-0.5473),doubleToFloat(0.6162),doubleToFloat(-6.8960),doubleToFloat(-1.1100),doubleToFloat(1.5150),doubleToFloat(-6.8960),doubleToFloat(-0.2675),doubleToFloat(1.0490),doubleToFloat(-6.8960),doubleToFloat(0.9149),doubleToFloat(-0.1364),doubleToFloat(-6.8960),doubleToFloat(0.8029),doubleToFloat(-0.4042),doubleToFloat(-6.8960),doubleToFloat(-0.4486)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.6445),doubleToFloat(-10.8400),doubleToFloat(-1.0700),doubleToFloat(1.5090),doubleToFloat(-10.8400),doubleToFloat(-0.2583),doubleToFloat(1.0620),doubleToFloat(-10.8400),doubleToFloat(0.8800),doubleToFloat(-0.0801),doubleToFloat(-10.8400),doubleToFloat(0.7722),doubleToFloat(-0.3379),doubleToFloat(-10.8400),doubleToFloat(-0.4327),doubleToFloat(0.6093),doubleToFloat(-11.3700),doubleToFloat(-0.6358),doubleToFloat(1.1160),doubleToFloat(-11.3700),doubleToFloat(-0.1604),doubleToFloat(0.8538),doubleToFloat(-11.3700),doubleToFloat(0.5067),doubleToFloat(0.1847),doubleToFloat(-11.3700),doubleToFloat(0.4436),doubleToFloat(0.0336),doubleToFloat(-11.3700),doubleToFloat(-0.2626)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=11, element #132, 110 total numbers made up of 55 2-tuple values */
	this.TextureCoordinate_11_132_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.2661),doubleToFloat(0.1332),doubleToFloat(0.3717),doubleToFloat(0.1332),doubleToFloat(0.1245),doubleToFloat(0.1332),doubleToFloat(0.0067),doubleToFloat(0.1321),doubleToFloat(0.2119),doubleToFloat(0.1332),doubleToFloat(0.2707),doubleToFloat(0.1099),doubleToFloat(0.3728),doubleToFloat(0.1099),doubleToFloat(0.1275),doubleToFloat(0.1099),doubleToFloat(0.0049),doubleToFloat(0.1088),doubleToFloat(0.2167),doubleToFloat(0.1099)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.2710),doubleToFloat(0.0284),doubleToFloat(0.3751),doubleToFloat(0.0284),doubleToFloat(0.1295),doubleToFloat(0.0284),doubleToFloat(0.0061),doubleToFloat(0.0273),doubleToFloat(0.2178),doubleToFloat(0.0284),doubleToFloat(0.2716),doubleToFloat(0.0086),doubleToFloat(0.3751),doubleToFloat(0.0086),doubleToFloat(0.1299),doubleToFloat(0.0086),doubleToFloat(0.0058),doubleToFloat(0.0075),doubleToFloat(0.2184),doubleToFloat(0.0086)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.2836),doubleToFloat(0.0426),doubleToFloat(0.3685),doubleToFloat(0.0426),doubleToFloat(0.1368),doubleToFloat(0.0426),doubleToFloat(0.0085),doubleToFloat(0.0415),doubleToFloat(0.2198),doubleToFloat(0.0426),doubleToFloat(0.0067),doubleToFloat(0.1343),doubleToFloat(0.0084),doubleToFloat(0.1110),doubleToFloat(0.0084),doubleToFloat(0.1110),doubleToFloat(0.0073),doubleToFloat(0.0295),doubleToFloat(0.0073),doubleToFloat(0.0295)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.0076),doubleToFloat(0.0097),doubleToFloat(0.0076),doubleToFloat(0.0097),doubleToFloat(0.0065),doubleToFloat(0.0437),doubleToFloat(0.6285),doubleToFloat(0.3174),doubleToFloat(0.6285),doubleToFloat(0.3316),doubleToFloat(0.6285),doubleToFloat(0.3312),doubleToFloat(0.6285),doubleToFloat(0.3167),doubleToFloat(0.6285),doubleToFloat(0.3082),doubleToFloat(0.5864),doubleToFloat(0.3116),doubleToFloat(0.5864),doubleToFloat(0.3376)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.6087),doubleToFloat(0.3390),doubleToFloat(0.6087),doubleToFloat(0.3139),doubleToFloat(0.5864),doubleToFloat(0.3394),doubleToFloat(0.6087),doubleToFloat(0.3383),doubleToFloat(0.5864),doubleToFloat(0.3146),doubleToFloat(0.6087),doubleToFloat(0.3128),doubleToFloat(0.5864),doubleToFloat(0.2974),doubleToFloat(0.6087),doubleToFloat(0.2977),doubleToFloat(0.6261),doubleToFloat(0.3390),doubleToFloat(0.6261),doubleToFloat(0.3148)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.6261),doubleToFloat(0.3383),doubleToFloat(0.6261),doubleToFloat(0.3137),doubleToFloat(0.6261),doubleToFloat(0.2992),doubleToFloat(0.0441),doubleToFloat(0.1287),doubleToFloat(-0.1162),doubleToFloat(0.1280)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=11, element #140, 184 total numbers */
	this.IndexedFaceSet_11_140_coordIndex = new MFInt32(Java.to([3,2,1,-1,3,1,0,-1,4,3,0,-1,0,1,6,-1,6,5,0,-1,1,2,7,-1,7,6,1,-1,2,3,8,-1,8,7,2,-1,3,4,9,-1,9,8,3,-1,4,0,5,-1,5,9,4,-1,5,6,11,-1,11,10,5,-1,6,7,12,-1,12,11,6,-1,7,8,13,-1,13,12,7,-1,8,9,14,-1,14,13,8,-1,9,5,10,-1,10,14,9,-1,10,11,16,-1,16,15,10,-1,11,12,17,-1,17,16,11,-1,12,13,18,-1,18,17,12,-1,13,14,19,-1,19,18,13,-1,14,10,15,-1,15,19,14,-1,21,22,23,-1,20,21,23,-1,24,20,23,-1,21,20,15,-1,15,16,21,-1,22,21,16,-1,16,17,22,-1,23,22,17,-1,17,18,23,-1,24,23,18,-1,18,19,24,-1,20,24,19,-1,19,15,20,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=11, element #140, 184 total numbers */
	this.IndexedFaceSet_11_140_texCoordIndex = new MFInt32(Java.to([3,2,0,-1,3,0,1,-1,4,3,1,-1,1,0,5,-1,5,6,1,-1,0,2,7,-1,7,5,0,-1,2,3,8,-1,8,7,2,-1,3,4,9,-1,9,8,3,-1,4,1,6,-1,6,9,4,-1,6,5,10,-1,10,11,6,-1,5,7,12,-1,12,10,5,-1,7,8,13,-1,13,12,7,-1,8,9,14,-1,14,13,8,-1,9,6,11,-1,11,14,9,-1,11,10,15,-1,15,16,11,-1,10,12,17,-1,17,15,10,-1,12,13,18,-1,18,17,12,-1,13,14,19,-1,19,18,13,-1,14,11,16,-1,16,19,14,-1,21,22,23,-1,20,21,23,-1,24,20,23,-1,21,20,16,-1,16,15,21,-1,22,21,15,-1,15,17,22,-1,23,22,17,-1,17,18,23,-1,24,23,18,-1,18,19,24,-1,20,24,19,-1,19,16,20,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=12, element #140, 75 total numbers made up of 25 3-tuple values */
	this.Coordinate_12_140_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(0.1284),doubleToFloat(0.6566),doubleToFloat(-0.7940),doubleToFloat(0.7947),doubleToFloat(0.6566),doubleToFloat(-0.1619),doubleToFloat(0.4154),doubleToFloat(0.6566),doubleToFloat(0.7570),doubleToFloat(-0.4852),doubleToFloat(0.6566),doubleToFloat(0.6929),doubleToFloat(-0.6626),doubleToFloat(0.6566),doubleToFloat(-0.2657),doubleToFloat(0.0855),doubleToFloat(-0.4623),doubleToFloat(-1.1290),doubleToFloat(1.0270),doubleToFloat(-0.4623),doubleToFloat(-0.2810),doubleToFloat(0.4911),doubleToFloat(-0.4623),doubleToFloat(1.1710),doubleToFloat(-0.7817),doubleToFloat(-0.4623),doubleToFloat(1.0700),doubleToFloat(-1.0320),doubleToFloat(-0.4623),doubleToFloat(-0.4450)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.0941),doubleToFloat(-3.0460),doubleToFloat(-1.1160),doubleToFloat(1.1000),doubleToFloat(-3.0460),doubleToFloat(-0.2777),doubleToFloat(0.5500),doubleToFloat(-2.4810),doubleToFloat(1.1600),doubleToFloat(-0.8091),doubleToFloat(-2.4810),doubleToFloat(1.0600),doubleToFloat(-1.1000),doubleToFloat(-3.0460),doubleToFloat(-0.4401),doubleToFloat(0.0840),doubleToFloat(-8.0100),doubleToFloat(-1.1710),doubleToFloat(1.0250),doubleToFloat(-7.9820),doubleToFloat(-0.1359),doubleToFloat(0.3907),doubleToFloat(-8.1180),doubleToFloat(1.0900),doubleToFloat(-0.6003),doubleToFloat(-8.1180),doubleToFloat(0.9957),doubleToFloat(-0.9132),doubleToFloat(-8.1090),doubleToFloat(-0.2244)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.0434),doubleToFloat(-8.7250),doubleToFloat(-0.6054),doubleToFloat(0.5441),doubleToFloat(-8.7250),doubleToFloat(0.0272),doubleToFloat(0.2591),doubleToFloat(-8.7250),doubleToFloat(0.7590),doubleToFloat(-0.4177),doubleToFloat(-8.7250),doubleToFloat(0.6949),doubleToFloat(-0.5510),doubleToFloat(-8.7250),doubleToFloat(-0.0767)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=12, element #141, 50 total numbers made up of 25 2-tuple values */
	this.TextureCoordinate_12_141_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.5159),doubleToFloat(0.3385),doubleToFloat(0.5159),doubleToFloat(0.3244),doubleToFloat(0.5159),doubleToFloat(0.3332),doubleToFloat(0.5159),doubleToFloat(0.3157),doubleToFloat(0.5159),doubleToFloat(0.3103),doubleToFloat(0.5210),doubleToFloat(0.3428),doubleToFloat(0.5210),doubleToFloat(0.3229),doubleToFloat(0.5210),doubleToFloat(0.3355),doubleToFloat(0.5210),doubleToFloat(0.3108),doubleToFloat(0.5210),doubleToFloat(0.3029)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5327),doubleToFloat(0.3442),doubleToFloat(0.5327),doubleToFloat(0.3231),doubleToFloat(0.5302),doubleToFloat(0.3366),doubleToFloat(0.5302),doubleToFloat(0.3103),doubleToFloat(0.5327),doubleToFloat(0.3016),doubleToFloat(0.5558),doubleToFloat(0.3390),doubleToFloat(0.5558),doubleToFloat(0.3230),doubleToFloat(0.5558),doubleToFloat(0.3334),doubleToFloat(0.5558),doubleToFloat(0.3141),doubleToFloat(0.5558),doubleToFloat(0.3079)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5585),doubleToFloat(0.3232),doubleToFloat(0.5585),doubleToFloat(0.3341),doubleToFloat(0.5585),doubleToFloat(0.3302),doubleToFloat(0.5585),doubleToFloat(0.3170),doubleToFloat(0.5585),doubleToFloat(0.3129)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=12, element #149, 160 total numbers */
	this.IndexedFaceSet_12_149_coordIndex = new MFInt32(Java.to([4,5,0,-1,0,2,4,-1,6,7,3,-1,3,1,6,-1,1,0,5,-1,5,6,1,-1,8,9,5,-1,5,4,8,-1,10,11,7,-1,7,6,10,-1,9,10,6,-1,6,5,9,-1,12,13,9,-1,9,8,12,-1,14,15,11,-1,11,10,14,-1,13,14,10,-1,10,9,13,-1,4,2,16,-1,2,3,7,-1,7,16,2,-1,17,19,18,-1,18,20,17,-1,21,16,7,-1,7,11,21,-1,8,21,12,-1,12,21,11,-1,11,15,12,-1,13,12,15,-1,15,14,13,-1,8,4,19,-1,19,17,8,-1,4,16,18,-1,18,19,4,-1,16,21,20,-1,20,18,16,-1,21,8,17,-1,17,20,21,-1,3,2,0,-1,0,1,3,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=12, element #149, 160 total numbers */
	this.IndexedFaceSet_12_149_texCoordIndex = new MFInt32(Java.to([0,2,1,-1,1,3,0,-1,36,38,37,-1,37,39,36,-1,28,30,29,-1,29,31,28,-1,4,5,2,-1,2,0,4,-1,40,41,38,-1,38,36,40,-1,32,33,31,-1,31,29,32,-1,6,7,5,-1,5,4,6,-1,42,43,41,-1,41,40,42,-1,34,35,33,-1,33,32,34,-1,10,12,11,-1,12,14,13,-1,13,11,12,-1,15,17,16,-1,16,18,15,-1,19,11,13,-1,13,20,19,-1,21,19,22,-1,22,19,20,-1,20,23,22,-1,24,22,23,-1,23,25,24,-1,4,0,8,-1,8,9,4,-1,10,11,16,-1,16,17,10,-1,11,19,18,-1,18,16,11,-1,19,21,15,-1,15,18,19,-1,14,12,26,-1,26,27,14,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=13, element #149, 66 total numbers made up of 22 3-tuple values */
	this.Coordinate_13_149_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(0.8732),doubleToFloat(0.4437),doubleToFloat(0.6298),doubleToFloat(0.8463),doubleToFloat(0.4584),doubleToFloat(-1.0650),doubleToFloat(-0.5135),doubleToFloat(0.3661),doubleToFloat(0.7037),doubleToFloat(-0.5196),doubleToFloat(0.3675),doubleToFloat(-1.0130),doubleToFloat(-0.6654),doubleToFloat(-0.1688),doubleToFloat(1.1670),doubleToFloat(1.1600),doubleToFloat(0.0150),doubleToFloat(1.0960),doubleToFloat(1.1190),doubleToFloat(0.0434),doubleToFloat(-1.5710),doubleToFloat(-0.7470),doubleToFloat(-0.1537),doubleToFloat(-1.5660),doubleToFloat(-0.5777),doubleToFloat(-1.8320),doubleToFloat(1.9020),doubleToFloat(1.3870),doubleToFloat(-1.6470),doubleToFloat(1.6430)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(1.3450),doubleToFloat(-1.6190),doubleToFloat(-1.9020),doubleToFloat(-0.8391),doubleToFloat(-1.9160),doubleToFloat(-1.7750),doubleToFloat(-0.3897),doubleToFloat(-3.0830),doubleToFloat(1.3380),doubleToFloat(0.6425),doubleToFloat(-3.2830),doubleToFloat(1.3820),doubleToFloat(0.6009),doubleToFloat(-3.2550),doubleToFloat(-1.6360),doubleToFloat(-0.5412),doubleToFloat(-3.0940),doubleToFloat(-1.5270),doubleToFloat(-0.7420),doubleToFloat(-0.1555),doubleToFloat(-0.1478),doubleToFloat(-1.1590),doubleToFloat(-1.8730),doubleToFloat(1.5330),doubleToFloat(-1.3870),doubleToFloat(-0.4699),doubleToFloat(0.0458),doubleToFloat(-1.3610),doubleToFloat(-0.5281),doubleToFloat(1.4880)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.1630),doubleToFloat(-1.8720),doubleToFloat(0.1088),doubleToFloat(-0.7494),doubleToFloat(-1.9120),doubleToFloat(-0.1591)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=13, element #150, 88 total numbers made up of 44 2-tuple values */
	this.TextureCoordinate_13_150_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.4675),doubleToFloat(0.2229),doubleToFloat(0.4534),doubleToFloat(0.3224),doubleToFloat(0.4709),doubleToFloat(0.3268),doubleToFloat(0.4579),doubleToFloat(0.2308),doubleToFloat(0.5552),doubleToFloat(0.2330),doubleToFloat(0.5504),doubleToFloat(0.3288),doubleToFloat(0.6215),doubleToFloat(0.2576),doubleToFloat(0.6159),doubleToFloat(0.3282),doubleToFloat(0.4780),doubleToFloat(0.1884),doubleToFloat(0.5527),doubleToFloat(0.2007)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4618),doubleToFloat(0.1862),doubleToFloat(0.4629),doubleToFloat(0.1191),doubleToFloat(0.4583),doubleToFloat(0.1920),doubleToFloat(0.4802),doubleToFloat(0.0435),doubleToFloat(0.4672),doubleToFloat(0.0405),doubleToFloat(0.5177),doubleToFloat(0.1794),doubleToFloat(0.4789),doubleToFloat(0.1246),doubleToFloat(0.4811),doubleToFloat(0.1812),doubleToFloat(0.5150),doubleToFloat(0.1320),doubleToFloat(0.5380),doubleToFloat(0.1232)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5459),doubleToFloat(0.0341),doubleToFloat(0.5348),doubleToFloat(0.1824),doubleToFloat(0.6006),doubleToFloat(0.1887),doubleToFloat(0.5977),doubleToFloat(0.0452),doubleToFloat(0.6323),doubleToFloat(0.1888),doubleToFloat(0.6290),doubleToFloat(0.0403),doubleToFloat(0.4501),doubleToFloat(0.1899),doubleToFloat(0.4535),doubleToFloat(0.0388),doubleToFloat(0.5577),doubleToFloat(0.3108),doubleToFloat(0.5496),doubleToFloat(0.3395)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5573),doubleToFloat(0.3333),doubleToFloat(0.5503),doubleToFloat(0.3041),doubleToFloat(0.5263),doubleToFloat(0.3468),doubleToFloat(0.5270),doubleToFloat(0.2997),doubleToFloat(0.5106),doubleToFloat(0.3433),doubleToFloat(0.5113),doubleToFloat(0.3032),doubleToFloat(0.4584),doubleToFloat(0.3225),doubleToFloat(0.4544),doubleToFloat(0.2224),doubleToFloat(0.4607),doubleToFloat(0.2253),doubleToFloat(0.4525),doubleToFloat(0.3250)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5365),doubleToFloat(0.3334),doubleToFloat(0.5532),doubleToFloat(0.2053),doubleToFloat(0.6323),doubleToFloat(0.3251),doubleToFloat(0.6179),doubleToFloat(0.2145)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=10, element #161, 304 total numbers */
	this.IndexedFaceSet_10_161_coordIndex = new MFInt32(Java.to([0,1,2,-1,0,2,3,-1,4,0,3,-1,0,5,6,-1,6,1,0,-1,1,6,7,-1,7,2,1,-1,2,7,8,-1,8,3,2,-1,3,8,9,-1,9,4,3,-1,4,9,5,-1,5,0,4,-1,5,10,11,-1,11,6,5,-1,6,11,12,-1,12,7,6,-1,7,12,13,-1,13,8,7,-1,8,13,14,-1,14,9,8,-1,9,14,10,-1,10,5,9,-1,10,15,16,-1,16,11,10,-1,11,16,17,-1,17,12,11,-1,12,17,18,-1,18,13,12,-1,13,18,19,-1,19,14,13,-1,14,19,15,-1,15,10,14,-1,38,37,36,-1,38,36,35,-1,39,38,35,-1,21,16,15,-1,15,20,21,-1,22,17,16,-1,16,21,22,-1,23,18,17,-1,17,22,23,-1,24,19,18,-1,18,23,24,-1,20,15,19,-1,19,24,20,-1,26,21,20,-1,20,25,26,-1,27,22,21,-1,21,26,27,-1,28,23,22,-1,22,27,28,-1,29,24,23,-1,23,28,29,-1,25,20,24,-1,24,29,25,-1,31,26,25,-1,25,30,31,-1,32,27,26,-1,26,31,32,-1,33,28,27,-1,27,32,33,-1,34,29,28,-1,28,33,34,-1,30,25,29,-1,29,34,30,-1,36,31,30,-1,30,35,36,-1,37,32,31,-1,31,36,37,-1,38,33,32,-1,32,37,38,-1,39,34,33,-1,33,38,39,-1,35,30,34,-1,34,39,35,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=10, element #161, 304 total numbers */
	this.IndexedFaceSet_10_161_texCoordIndex = new MFInt32(Java.to([53,0,2,-1,53,2,3,-1,54,53,3,-1,1,6,5,-1,5,0,1,-1,0,5,7,-1,7,2,0,-1,2,7,8,-1,8,3,2,-1,25,26,9,-1,9,4,25,-1,4,9,6,-1,6,1,4,-1,6,11,10,-1,10,5,6,-1,5,10,12,-1,12,7,5,-1,7,12,13,-1,13,8,7,-1,27,28,14,-1,14,9,27,-1,9,14,11,-1,11,6,9,-1,11,16,15,-1,15,10,11,-1,10,15,17,-1,17,12,10,-1,12,17,18,-1,18,13,12,-1,29,30,19,-1,19,14,29,-1,14,19,16,-1,16,11,14,-1,36,35,34,-1,36,34,33,-1,37,36,33,-1,20,15,16,-1,16,21,20,-1,22,17,15,-1,15,20,22,-1,23,18,17,-1,17,22,23,-1,24,19,31,-1,31,32,24,-1,21,16,19,-1,19,24,21,-1,40,39,38,-1,38,41,40,-1,43,42,39,-1,39,40,43,-1,45,44,42,-1,42,43,45,-1,47,46,44,-1,44,45,47,-1,41,38,46,-1,46,47,41,-1,48,40,41,-1,41,49,48,-1,50,43,40,-1,40,48,50,-1,51,45,43,-1,43,50,51,-1,52,47,45,-1,45,51,52,-1,49,41,47,-1,47,52,49,-1,34,48,49,-1,49,33,34,-1,35,50,48,-1,48,34,35,-1,36,51,50,-1,50,35,36,-1,37,52,51,-1,51,36,37,-1,33,49,52,-1,52,37,33,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=11, element #161, 120 total numbers made up of 40 3-tuple values */
	this.Coordinate_11_161_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(-0.7458),doubleToFloat(1.6790),doubleToFloat(-1.1890),doubleToFloat(-1.5650),doubleToFloat(1.6790),doubleToFloat(0.0238),doubleToFloat(-0.6631),doubleToFloat(1.6790),doubleToFloat(1.1770),doubleToFloat(0.7140),doubleToFloat(1.6790),doubleToFloat(0.6762),doubleToFloat(0.6628),doubleToFloat(1.6790),doubleToFloat(-0.7857),doubleToFloat(-0.9082),doubleToFloat(0.4486),doubleToFloat(-1.6340),doubleToFloat(-2.0400),doubleToFloat(0.4486),doubleToFloat(0.0404),doubleToFloat(-0.7940),doubleToFloat(0.4486),doubleToFloat(1.6320),doubleToFloat(1.1080),doubleToFloat(0.4486),doubleToFloat(0.9413),doubleToFloat(1.0370),doubleToFloat(0.4486),doubleToFloat(-1.0780)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.9397),doubleToFloat(-2.6110),doubleToFloat(-1.6340),doubleToFloat(-2.0710),doubleToFloat(-2.6110),doubleToFloat(0.0404),doubleToFloat(-0.8254),doubleToFloat(-2.6110),doubleToFloat(1.6320),doubleToFloat(1.0760),doubleToFloat(-2.6110),doubleToFloat(0.9413),doubleToFloat(1.0060),doubleToFloat(-2.6110),doubleToFloat(-1.0780),doubleToFloat(-0.9738),doubleToFloat(-3.6560),doubleToFloat(-1.7280),doubleToFloat(-2.1710),doubleToFloat(-3.6560),doubleToFloat(0.0439),doubleToFloat(-0.8529),doubleToFloat(-3.6560),doubleToFloat(1.7280),doubleToFloat(1.1590),doubleToFloat(-3.6560),doubleToFloat(0.9971),doubleToFloat(1.0840),doubleToFloat(-3.6560),doubleToFloat(-1.1390)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.5980),doubleToFloat(-1.8600),doubleToFloat(-1.3720),doubleToFloat(-1.4630),doubleToFloat(-1.8600),doubleToFloat(-0.3215),doubleToFloat(-1.0150),doubleToFloat(-1.8600),doubleToFloat(1.1530),doubleToFloat(0.1265),doubleToFloat(-1.8600),doubleToFloat(1.0130),doubleToFloat(0.3843),doubleToFloat(-1.8600),doubleToFloat(-0.5473),doubleToFloat(-0.6162),doubleToFloat(-6.8960),doubleToFloat(-1.1100),doubleToFloat(-1.5150),doubleToFloat(-6.8960),doubleToFloat(-0.2675),doubleToFloat(-1.0490),doubleToFloat(-6.8960),doubleToFloat(0.9149),doubleToFloat(0.1364),doubleToFloat(-6.8960),doubleToFloat(0.8029),doubleToFloat(0.4042),doubleToFloat(-6.8960),doubleToFloat(-0.4486)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.6445),doubleToFloat(-10.8400),doubleToFloat(-1.0700),doubleToFloat(-1.5090),doubleToFloat(-10.8400),doubleToFloat(-0.2583),doubleToFloat(-1.0620),doubleToFloat(-10.8400),doubleToFloat(0.8800),doubleToFloat(0.0801),doubleToFloat(-10.8400),doubleToFloat(0.7722),doubleToFloat(0.3379),doubleToFloat(-10.8400),doubleToFloat(-0.4327),doubleToFloat(-0.6093),doubleToFloat(-11.3700),doubleToFloat(-0.6358),doubleToFloat(-1.1160),doubleToFloat(-11.3700),doubleToFloat(-0.1604),doubleToFloat(-0.8538),doubleToFloat(-11.3700),doubleToFloat(0.5067),doubleToFloat(-0.1847),doubleToFloat(-11.3700),doubleToFloat(0.4436),doubleToFloat(-0.0336),doubleToFloat(-11.3700),doubleToFloat(-0.2626)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=11, element #162, 110 total numbers made up of 55 2-tuple values */
	this.TextureCoordinate_11_162_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.2661),doubleToFloat(0.1332),doubleToFloat(0.3717),doubleToFloat(0.1332),doubleToFloat(0.1245),doubleToFloat(0.1332),doubleToFloat(0.0067),doubleToFloat(0.1321),doubleToFloat(0.2119),doubleToFloat(0.1332),doubleToFloat(0.2707),doubleToFloat(0.1099),doubleToFloat(0.3728),doubleToFloat(0.1099),doubleToFloat(0.1275),doubleToFloat(0.1099),doubleToFloat(0.0049),doubleToFloat(0.1088),doubleToFloat(0.2167),doubleToFloat(0.1099)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.2710),doubleToFloat(0.0284),doubleToFloat(0.3751),doubleToFloat(0.0284),doubleToFloat(0.1295),doubleToFloat(0.0284),doubleToFloat(0.0061),doubleToFloat(0.0273),doubleToFloat(0.2178),doubleToFloat(0.0284),doubleToFloat(0.2716),doubleToFloat(0.0086),doubleToFloat(0.3751),doubleToFloat(0.0086),doubleToFloat(0.1299),doubleToFloat(0.0086),doubleToFloat(0.0058),doubleToFloat(0.0075),doubleToFloat(0.2184),doubleToFloat(0.0086)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.2836),doubleToFloat(0.0426),doubleToFloat(0.3685),doubleToFloat(0.0426),doubleToFloat(0.1368),doubleToFloat(0.0426),doubleToFloat(0.0085),doubleToFloat(0.0415),doubleToFloat(0.2198),doubleToFloat(0.0426),doubleToFloat(0.0067),doubleToFloat(0.1343),doubleToFloat(0.0084),doubleToFloat(0.1110),doubleToFloat(0.0084),doubleToFloat(0.1110),doubleToFloat(0.0073),doubleToFloat(0.0295),doubleToFloat(0.0073),doubleToFloat(0.0295)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.0076),doubleToFloat(0.0097),doubleToFloat(0.0076),doubleToFloat(0.0097),doubleToFloat(0.0065),doubleToFloat(0.0437),doubleToFloat(0.6285),doubleToFloat(0.3174),doubleToFloat(0.6285),doubleToFloat(0.3316),doubleToFloat(0.6285),doubleToFloat(0.3312),doubleToFloat(0.6285),doubleToFloat(0.3167),doubleToFloat(0.6285),doubleToFloat(0.3082),doubleToFloat(0.5864),doubleToFloat(0.3116),doubleToFloat(0.5864),doubleToFloat(0.3376)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.6087),doubleToFloat(0.3390),doubleToFloat(0.6087),doubleToFloat(0.3139),doubleToFloat(0.5864),doubleToFloat(0.3394),doubleToFloat(0.6087),doubleToFloat(0.3383),doubleToFloat(0.5864),doubleToFloat(0.3146),doubleToFloat(0.6087),doubleToFloat(0.3128),doubleToFloat(0.5864),doubleToFloat(0.2974),doubleToFloat(0.6087),doubleToFloat(0.2977),doubleToFloat(0.6261),doubleToFloat(0.3390),doubleToFloat(0.6261),doubleToFloat(0.3148)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.6261),doubleToFloat(0.3383),doubleToFloat(0.6261),doubleToFloat(0.3137),doubleToFloat(0.6261),doubleToFloat(0.2992),doubleToFloat(0.0441),doubleToFloat(0.1287),doubleToFloat(-0.1162),doubleToFloat(0.1280)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=11, element #170, 184 total numbers */
	this.IndexedFaceSet_11_170_coordIndex = new MFInt32(Java.to([1,2,3,-1,0,1,3,-1,4,0,3,-1,0,5,6,-1,6,1,0,-1,1,6,7,-1,7,2,1,-1,2,7,8,-1,8,3,2,-1,3,8,9,-1,9,4,3,-1,4,9,5,-1,5,0,4,-1,5,10,11,-1,11,6,5,-1,6,11,12,-1,12,7,6,-1,7,12,13,-1,13,8,7,-1,8,13,14,-1,14,9,8,-1,9,14,10,-1,10,5,9,-1,10,15,16,-1,16,11,10,-1,11,16,17,-1,17,12,11,-1,12,17,18,-1,18,13,12,-1,13,18,19,-1,19,14,13,-1,14,19,15,-1,15,10,14,-1,23,22,21,-1,23,21,20,-1,24,23,20,-1,21,16,15,-1,15,20,21,-1,22,17,16,-1,16,21,22,-1,23,18,17,-1,17,22,23,-1,24,19,18,-1,18,23,24,-1,20,15,19,-1,19,24,20,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=11, element #170, 184 total numbers */
	this.IndexedFaceSet_11_170_texCoordIndex = new MFInt32(Java.to([0,2,3,-1,1,0,3,-1,4,1,3,-1,1,6,5,-1,5,0,1,-1,0,5,7,-1,7,2,0,-1,2,7,8,-1,8,3,2,-1,3,8,9,-1,9,4,3,-1,4,9,6,-1,6,1,4,-1,6,11,10,-1,10,5,6,-1,5,10,12,-1,12,7,5,-1,7,12,13,-1,13,8,7,-1,8,13,14,-1,14,9,8,-1,9,14,11,-1,11,6,9,-1,11,16,15,-1,15,10,11,-1,10,15,17,-1,17,12,10,-1,12,17,18,-1,18,13,12,-1,13,18,19,-1,19,14,13,-1,14,19,16,-1,16,11,14,-1,23,22,21,-1,23,21,20,-1,24,23,20,-1,21,15,16,-1,16,20,21,-1,22,17,15,-1,15,21,22,-1,23,18,17,-1,17,22,23,-1,24,19,18,-1,18,23,24,-1,20,16,19,-1,19,24,20,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=12, element #170, 75 total numbers made up of 25 3-tuple values */
	this.Coordinate_12_170_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(-0.1284),doubleToFloat(0.6566),doubleToFloat(-0.7940),doubleToFloat(-0.7947),doubleToFloat(0.6566),doubleToFloat(-0.1619),doubleToFloat(-0.4154),doubleToFloat(0.6566),doubleToFloat(0.7570),doubleToFloat(0.4852),doubleToFloat(0.6566),doubleToFloat(0.6929),doubleToFloat(0.6626),doubleToFloat(0.6566),doubleToFloat(-0.2657),doubleToFloat(-0.0855),doubleToFloat(-0.4623),doubleToFloat(-1.1290),doubleToFloat(-1.0270),doubleToFloat(-0.4623),doubleToFloat(-0.2810),doubleToFloat(-0.4911),doubleToFloat(-0.4623),doubleToFloat(1.1710),doubleToFloat(0.7817),doubleToFloat(-0.4623),doubleToFloat(1.0700),doubleToFloat(1.0320),doubleToFloat(-0.4623),doubleToFloat(-0.4450)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.0941),doubleToFloat(-3.0460),doubleToFloat(-1.1160),doubleToFloat(-1.1000),doubleToFloat(-3.0460),doubleToFloat(-0.2777),doubleToFloat(-0.5500),doubleToFloat(-2.4810),doubleToFloat(1.1600),doubleToFloat(0.8091),doubleToFloat(-2.4810),doubleToFloat(1.0600),doubleToFloat(1.1000),doubleToFloat(-3.0460),doubleToFloat(-0.4401),doubleToFloat(-0.0840),doubleToFloat(-8.0100),doubleToFloat(-1.1710),doubleToFloat(-1.0250),doubleToFloat(-7.9820),doubleToFloat(-0.1359),doubleToFloat(-0.3907),doubleToFloat(-8.1180),doubleToFloat(1.0900),doubleToFloat(0.6003),doubleToFloat(-8.1180),doubleToFloat(0.9957),doubleToFloat(0.9132),doubleToFloat(-8.1090),doubleToFloat(-0.2244)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.0434),doubleToFloat(-8.7250),doubleToFloat(-0.6054),doubleToFloat(-0.5441),doubleToFloat(-8.7250),doubleToFloat(0.0272),doubleToFloat(-0.2591),doubleToFloat(-8.7250),doubleToFloat(0.7590),doubleToFloat(0.4177),doubleToFloat(-8.7250),doubleToFloat(0.6949),doubleToFloat(0.5510),doubleToFloat(-8.7250),doubleToFloat(-0.0767)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=12, element #171, 50 total numbers made up of 25 2-tuple values */
	this.TextureCoordinate_12_171_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.5159),doubleToFloat(0.3385),doubleToFloat(0.5159),doubleToFloat(0.3244),doubleToFloat(0.5159),doubleToFloat(0.3332),doubleToFloat(0.5159),doubleToFloat(0.3157),doubleToFloat(0.5159),doubleToFloat(0.3103),doubleToFloat(0.5210),doubleToFloat(0.3428),doubleToFloat(0.5210),doubleToFloat(0.3229),doubleToFloat(0.5210),doubleToFloat(0.3355),doubleToFloat(0.5210),doubleToFloat(0.3108),doubleToFloat(0.5210),doubleToFloat(0.3029)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5327),doubleToFloat(0.3442),doubleToFloat(0.5327),doubleToFloat(0.3231),doubleToFloat(0.5302),doubleToFloat(0.3366),doubleToFloat(0.5302),doubleToFloat(0.3103),doubleToFloat(0.5327),doubleToFloat(0.3016),doubleToFloat(0.5558),doubleToFloat(0.3390),doubleToFloat(0.5558),doubleToFloat(0.3230),doubleToFloat(0.5558),doubleToFloat(0.3334),doubleToFloat(0.5558),doubleToFloat(0.3141),doubleToFloat(0.5558),doubleToFloat(0.3079)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5585),doubleToFloat(0.3232),doubleToFloat(0.5585),doubleToFloat(0.3341),doubleToFloat(0.5585),doubleToFloat(0.3302),doubleToFloat(0.5585),doubleToFloat(0.3170),doubleToFloat(0.5585),doubleToFloat(0.3129)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=12, element #179, 160 total numbers */
	this.IndexedFaceSet_12_179_coordIndex = new MFInt32(Java.to([4,2,0,-1,0,5,4,-1,6,1,3,-1,3,7,6,-1,1,6,5,-1,5,0,1,-1,8,4,5,-1,5,9,8,-1,10,6,7,-1,7,11,10,-1,9,5,6,-1,6,10,9,-1,12,8,9,-1,9,13,12,-1,14,10,11,-1,11,15,14,-1,13,9,10,-1,10,14,13,-1,4,16,2,-1,2,16,7,-1,7,3,2,-1,17,20,18,-1,18,19,17,-1,21,11,7,-1,7,16,21,-1,8,12,21,-1,12,15,11,-1,11,21,12,-1,13,14,15,-1,15,12,13,-1,8,17,19,-1,19,4,8,-1,4,19,18,-1,18,16,4,-1,16,18,20,-1,20,21,16,-1,21,20,17,-1,17,8,21,-1,3,1,0,-1,0,2,3,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=12, element #179, 160 total numbers */
	this.IndexedFaceSet_12_179_texCoordIndex = new MFInt32(Java.to([0,3,1,-1,1,2,0,-1,36,39,37,-1,37,38,36,-1,28,31,29,-1,29,30,28,-1,4,0,2,-1,2,5,4,-1,40,36,38,-1,38,41,40,-1,32,29,31,-1,31,33,32,-1,6,4,5,-1,5,7,6,-1,42,40,41,-1,41,43,42,-1,34,32,33,-1,33,35,34,-1,10,11,12,-1,12,11,13,-1,13,14,12,-1,15,18,16,-1,16,17,15,-1,19,20,13,-1,13,11,19,-1,21,22,19,-1,22,23,20,-1,20,19,22,-1,24,25,23,-1,23,22,24,-1,4,9,8,-1,8,0,4,-1,10,17,16,-1,16,11,10,-1,11,16,18,-1,18,19,11,-1,19,18,15,-1,15,21,19,-1,14,27,26,-1,26,12,14,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=13, element #179, 66 total numbers made up of 22 3-tuple values */
	this.Coordinate_13_179_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(-0.8732),doubleToFloat(0.4437),doubleToFloat(0.6298),doubleToFloat(-0.8463),doubleToFloat(0.4584),doubleToFloat(-1.0650),doubleToFloat(0.5135),doubleToFloat(0.3661),doubleToFloat(0.7037),doubleToFloat(0.5196),doubleToFloat(0.3675),doubleToFloat(-1.0130),doubleToFloat(0.6654),doubleToFloat(-0.1688),doubleToFloat(1.1670),doubleToFloat(-1.1600),doubleToFloat(0.0150),doubleToFloat(1.0960),doubleToFloat(-1.1190),doubleToFloat(0.0434),doubleToFloat(-1.5710),doubleToFloat(0.7470),doubleToFloat(-0.1537),doubleToFloat(-1.5660),doubleToFloat(0.5777),doubleToFloat(-1.8320),doubleToFloat(1.9020),doubleToFloat(-1.3870),doubleToFloat(-1.6470),doubleToFloat(1.6430)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.3450),doubleToFloat(-1.6190),doubleToFloat(-1.9020),doubleToFloat(0.8391),doubleToFloat(-1.9160),doubleToFloat(-1.7750),doubleToFloat(0.3897),doubleToFloat(-3.0830),doubleToFloat(1.3380),doubleToFloat(-0.6425),doubleToFloat(-3.2830),doubleToFloat(1.3820),doubleToFloat(-0.6009),doubleToFloat(-3.2550),doubleToFloat(-1.6360),doubleToFloat(0.5412),doubleToFloat(-3.0940),doubleToFloat(-1.5270),doubleToFloat(0.7420),doubleToFloat(-0.1555),doubleToFloat(-0.1478),doubleToFloat(1.1590),doubleToFloat(-1.8730),doubleToFloat(1.5330),doubleToFloat(1.3870),doubleToFloat(-0.4699),doubleToFloat(0.0458),doubleToFloat(1.3610),doubleToFloat(-0.5281),doubleToFloat(1.4880)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(1.1630),doubleToFloat(-1.8720),doubleToFloat(0.1088),doubleToFloat(0.7494),doubleToFloat(-1.9120),doubleToFloat(-0.1591)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=13, element #180, 88 total numbers made up of 44 2-tuple values */
	this.TextureCoordinate_13_180_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.4675),doubleToFloat(0.2229),doubleToFloat(0.4534),doubleToFloat(0.3224),doubleToFloat(0.4709),doubleToFloat(0.3268),doubleToFloat(0.4579),doubleToFloat(0.2308),doubleToFloat(0.5552),doubleToFloat(0.2330),doubleToFloat(0.5504),doubleToFloat(0.3288),doubleToFloat(0.6215),doubleToFloat(0.2576),doubleToFloat(0.6159),doubleToFloat(0.3282),doubleToFloat(0.4780),doubleToFloat(0.1884),doubleToFloat(0.5527),doubleToFloat(0.2007)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4618),doubleToFloat(0.1862),doubleToFloat(0.4629),doubleToFloat(0.1191),doubleToFloat(0.4583),doubleToFloat(0.1920),doubleToFloat(0.4802),doubleToFloat(0.0435),doubleToFloat(0.4672),doubleToFloat(0.0405),doubleToFloat(0.5177),doubleToFloat(0.1794),doubleToFloat(0.4789),doubleToFloat(0.1246),doubleToFloat(0.4811),doubleToFloat(0.1812),doubleToFloat(0.5150),doubleToFloat(0.1320),doubleToFloat(0.5380),doubleToFloat(0.1232)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5459),doubleToFloat(0.0341),doubleToFloat(0.5348),doubleToFloat(0.1824),doubleToFloat(0.6006),doubleToFloat(0.1887),doubleToFloat(0.5977),doubleToFloat(0.0452),doubleToFloat(0.6323),doubleToFloat(0.1888),doubleToFloat(0.6290),doubleToFloat(0.0403),doubleToFloat(0.4501),doubleToFloat(0.1899),doubleToFloat(0.4535),doubleToFloat(0.0388),doubleToFloat(0.5577),doubleToFloat(0.3108),doubleToFloat(0.5496),doubleToFloat(0.3395)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5573),doubleToFloat(0.3333),doubleToFloat(0.5503),doubleToFloat(0.3041),doubleToFloat(0.5263),doubleToFloat(0.3468),doubleToFloat(0.5270),doubleToFloat(0.2997),doubleToFloat(0.5106),doubleToFloat(0.3433),doubleToFloat(0.5113),doubleToFloat(0.3032),doubleToFloat(0.4584),doubleToFloat(0.3225),doubleToFloat(0.4544),doubleToFloat(0.2224),doubleToFloat(0.4607),doubleToFloat(0.2253),doubleToFloat(0.4525),doubleToFloat(0.3250)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5365),doubleToFloat(0.3334),doubleToFloat(0.5532),doubleToFloat(0.2053),doubleToFloat(0.6323),doubleToFloat(0.3251),doubleToFloat(0.6179),doubleToFloat(0.2145)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=10, element #191, 584 total numbers */
	this.IndexedFaceSet_10_191_coordIndex = new MFInt32(Java.to([7,10,11,-1,11,9,7,-1,33,10,7,-1,34,10,33,-1,7,9,13,-1,13,12,7,-1,12,33,7,-1,11,8,9,-1,8,13,9,-1,33,12,0,-1,14,17,1,-1,14,1,0,-1,17,2,1,-1,16,42,17,-1,42,2,17,-1,42,16,15,-1,15,4,42,-1,11,16,8,-1,11,15,16,-1,11,6,15,-1,6,11,10,-1,34,6,10,-1,19,6,5,-1,22,16,17,-1,17,23,22,-1,23,17,14,-1,14,21,23,-1,23,21,20,-1,20,22,23,-1,13,21,14,-1,21,13,20,-1,8,20,13,-1,6,19,15,-1,18,15,19,-1,18,4,15,-1,52,4,18,-1,14,0,12,-1,13,14,12,-1,5,6,34,-1,3,5,34,-1,19,5,24,-1,24,25,19,-1,18,19,25,-1,25,26,18,-1,52,18,26,-1,26,27,52,-1,5,3,28,-1,28,24,5,-1,16,22,20,-1,20,8,16,-1,31,30,29,-1,29,32,31,-1,33,31,32,-1,34,33,32,-1,31,36,35,-1,35,30,31,-1,36,31,33,-1,29,30,37,-1,37,30,35,-1,33,0,36,-1,38,40,39,-1,38,0,40,-1,39,40,2,-1,41,39,42,-1,42,39,2,-1,42,4,43,-1,43,41,42,-1,29,37,41,-1,29,41,43,-1,29,43,44,-1,44,32,29,-1,34,32,44,-1,45,46,44,-1,48,47,39,-1,39,41,48,-1,47,49,38,-1,38,39,47,-1,47,48,50,-1,50,49,47,-1,35,38,49,-1,49,50,35,-1,37,35,50,-1,44,43,45,-1,51,45,43,-1,51,43,4,-1,52,51,4,-1,38,36,0,-1,35,36,38,-1,46,34,44,-1,3,34,46,-1,45,54,53,-1,53,46,45,-1,51,55,54,-1,54,45,51,-1,52,27,55,-1,55,51,52,-1,46,53,28,-1,28,3,46,-1,41,37,50,-1,50,48,41,-1,68,69,58,-1,58,56,68,-1,56,58,59,-1,59,57,56,-1,69,60,61,-1,61,58,69,-1,58,61,62,-1,62,59,58,-1,59,62,75,-1,75,72,59,-1,60,76,63,-1,63,61,60,-1,61,63,64,-1,64,62,61,-1,66,63,76,-1,76,65,66,-1,67,64,63,-1,63,66,67,-1,64,67,80,-1,80,78,64,-1,68,71,70,-1,70,69,68,-1,71,73,72,-1,72,70,71,-1,73,57,59,-1,59,72,73,-1,69,70,74,-1,74,60,69,-1,70,72,75,-1,75,74,70,-1,60,74,77,-1,77,76,60,-1,74,75,78,-1,78,77,74,-1,75,62,64,-1,64,78,75,-1,79,65,76,-1,76,77,79,-1,80,79,77,-1,77,78,80,-1,57,73,71,-1,57,71,68,-1,56,57,68,-1,80,67,66,-1,79,80,66,-1,65,79,66,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=10, element #191, 584 total numbers */
	this.IndexedFaceSet_10_191_texCoordIndex = new MFInt32(Java.to([2,3,0,-1,0,1,2,-1,4,3,2,-1,5,3,4,-1,2,1,6,-1,6,7,2,-1,7,4,2,-1,0,8,1,-1,8,6,1,-1,4,7,9,-1,10,11,12,-1,10,12,9,-1,11,13,12,-1,14,15,11,-1,15,13,11,-1,15,14,16,-1,16,17,15,-1,0,14,8,-1,0,16,14,-1,0,18,16,-1,18,0,3,-1,5,18,3,-1,19,18,20,-1,22,14,11,-1,11,21,22,-1,21,11,10,-1,10,23,21,-1,21,23,24,-1,24,22,21,-1,6,23,10,-1,23,6,24,-1,8,24,6,-1,18,19,16,-1,25,16,19,-1,25,17,16,-1,26,17,25,-1,10,9,7,-1,6,10,7,-1,20,18,5,-1,27,20,5,-1,19,20,28,-1,28,29,19,-1,25,19,29,-1,29,30,25,-1,26,25,30,-1,30,31,26,-1,20,27,32,-1,32,28,20,-1,14,22,24,-1,24,8,14,-1,35,34,33,-1,33,36,35,-1,37,35,36,-1,38,37,36,-1,35,40,39,-1,39,34,35,-1,40,35,37,-1,33,34,41,-1,41,34,39,-1,37,42,40,-1,43,45,44,-1,43,42,45,-1,44,45,46,-1,47,44,48,-1,48,44,46,-1,48,50,49,-1,49,47,48,-1,33,41,47,-1,33,47,49,-1,33,49,51,-1,51,36,33,-1,38,36,51,-1,52,53,51,-1,55,54,44,-1,44,47,55,-1,54,56,43,-1,43,44,54,-1,54,55,57,-1,57,56,54,-1,39,43,56,-1,56,57,39,-1,41,39,57,-1,51,49,52,-1,58,52,49,-1,58,49,50,-1,59,58,50,-1,43,40,42,-1,39,40,43,-1,53,38,51,-1,60,38,53,-1,52,62,61,-1,61,53,52,-1,58,63,62,-1,62,52,58,-1,59,64,63,-1,63,58,59,-1,53,61,65,-1,65,60,53,-1,47,41,57,-1,57,55,47,-1,67,70,69,-1,69,66,67,-1,66,69,71,-1,71,68,66,-1,70,73,72,-1,72,69,70,-1,69,72,74,-1,74,71,69,-1,71,74,89,-1,89,85,71,-1,73,76,75,-1,75,72,73,-1,72,75,77,-1,77,74,72,-1,79,75,76,-1,76,78,79,-1,80,77,75,-1,75,79,80,-1,77,80,95,-1,95,92,77,-1,81,84,83,-1,83,82,81,-1,84,86,85,-1,85,83,84,-1,86,68,71,-1,71,85,86,-1,82,83,88,-1,88,87,82,-1,83,85,89,-1,89,88,83,-1,87,88,91,-1,91,90,87,-1,88,89,92,-1,92,91,88,-1,89,74,77,-1,77,92,89,-1,94,93,90,-1,90,91,94,-1,95,94,91,-1,91,92,95,-1,68,86,84,-1,68,84,81,-1,66,68,81,-1,95,80,79,-1,94,95,79,-1,78,94,79,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=11, element #191, 243 total numbers made up of 81 3-tuple values */
	this.Coordinate_11_191_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(0.0000),doubleToFloat(13.4100),doubleToFloat(-0.7672),doubleToFloat(1.0200),doubleToFloat(13.8500),doubleToFloat(-2.2500),doubleToFloat(0.0000),doubleToFloat(13.5100),doubleToFloat(-3.7690),doubleToFloat(0.0000),doubleToFloat(0.8188),doubleToFloat(3.1560),doubleToFloat(0.0000),doubleToFloat(3.5630),doubleToFloat(-3.3330),doubleToFloat(3.6610),doubleToFloat(0.1281),doubleToFloat(2.2430),doubleToFloat(3.6210),doubleToFloat(3.1180),doubleToFloat(2.0230),doubleToFloat(2.8140),doubleToFloat(9.0800),doubleToFloat(2.9000),doubleToFloat(4.4060),doubleToFloat(8.8250),doubleToFloat(0.0214),doubleToFloat(4.3140),doubleToFloat(8.8460),doubleToFloat(1.7190)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(2.2990),doubleToFloat(6.5380),doubleToFloat(2.7340),doubleToFloat(4.0320),doubleToFloat(6.4100),doubleToFloat(1.2620),doubleToFloat(2.2900),doubleToFloat(10.9100),doubleToFloat(1.1790),doubleToFloat(3.4070),doubleToFloat(10.9500),doubleToFloat(0.0607),doubleToFloat(2.6210),doubleToFloat(13.2700),doubleToFloat(-1.2460),doubleToFloat(3.7150),doubleToFloat(3.0860),doubleToFloat(-1.7880),doubleToFloat(4.0670),doubleToFloat(8.7230),doubleToFloat(-3.8360),doubleToFloat(2.3410),doubleToFloat(13.3000),doubleToFloat(-3.6870),doubleToFloat(4.2890),doubleToFloat(0.3935),doubleToFloat(-1.6580),doubleToFloat(4.7340),doubleToFloat(0.1406),doubleToFloat(-0.1384)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(5.6520),doubleToFloat(10.7200),doubleToFloat(-0.9836),doubleToFloat(4.8110),doubleToFloat(12.9000),doubleToFloat(-1.6030),doubleToFloat(5.3450),doubleToFloat(10.4700),doubleToFloat(-3.6470),doubleToFloat(4.8110),doubleToFloat(12.9000),doubleToFloat(-3.5940),doubleToFloat(2.5170),doubleToFloat(-1.6690),doubleToFloat(1.5020),doubleToFloat(3.2550),doubleToFloat(-1.6600),doubleToFloat(-0.1346),doubleToFloat(2.9480),doubleToFloat(-1.4860),doubleToFloat(-1.8680),doubleToFloat(0.0000),doubleToFloat(-1.2810),doubleToFloat(-2.3130),doubleToFloat(0.0000),doubleToFloat(-1.1940),doubleToFloat(2.3040),doubleToFloat(-4.0320),doubleToFloat(6.4100),doubleToFloat(1.2620)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-4.3140),doubleToFloat(8.8460),doubleToFloat(1.7190),doubleToFloat(-2.8140),doubleToFloat(9.0800),doubleToFloat(2.9000),doubleToFloat(-2.2990),doubleToFloat(6.5380),doubleToFloat(2.7340),doubleToFloat(0.0000),doubleToFloat(9.1360),doubleToFloat(2.2460),doubleToFloat(0.0000),doubleToFloat(4.7160),doubleToFloat(3.2260),doubleToFloat(-3.4070),doubleToFloat(10.9500),doubleToFloat(0.0607),doubleToFloat(-2.2900),doubleToFloat(10.9100),doubleToFloat(1.1790),doubleToFloat(-4.4060),doubleToFloat(8.8250),doubleToFloat(0.0214),doubleToFloat(-2.6210),doubleToFloat(13.2700),doubleToFloat(-1.2460),doubleToFloat(-2.3410),doubleToFloat(13.3000),doubleToFloat(-3.6870)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.0200),doubleToFloat(13.8500),doubleToFloat(-2.2500),doubleToFloat(-4.0670),doubleToFloat(8.7230),doubleToFloat(-3.8360),doubleToFloat(0.0000),doubleToFloat(8.0740),doubleToFloat(-4.2770),doubleToFloat(-3.7150),doubleToFloat(3.0860),doubleToFloat(-1.7880),doubleToFloat(-3.6210),doubleToFloat(3.1180),doubleToFloat(2.0230),doubleToFloat(-4.7340),doubleToFloat(0.1406),doubleToFloat(-0.1384),doubleToFloat(-3.6610),doubleToFloat(0.1281),doubleToFloat(2.2430),doubleToFloat(-4.8110),doubleToFloat(12.9000),doubleToFloat(-3.5940),doubleToFloat(-5.3450),doubleToFloat(10.4700),doubleToFloat(-3.6470),doubleToFloat(-4.8110),doubleToFloat(12.9000),doubleToFloat(-1.6030)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-5.6520),doubleToFloat(10.7200),doubleToFloat(-0.9836),doubleToFloat(-4.2890),doubleToFloat(0.3935),doubleToFloat(-1.6580),doubleToFloat(0.0000),doubleToFloat(0.6918),doubleToFloat(-2.9920),doubleToFloat(-2.5170),doubleToFloat(-1.6690),doubleToFloat(1.5020),doubleToFloat(-3.2550),doubleToFloat(-1.6600),doubleToFloat(-0.1346),doubleToFloat(-2.9480),doubleToFloat(-1.4860),doubleToFloat(-1.8680),doubleToFloat(0.8892),doubleToFloat(12.9400),doubleToFloat(-2.6080),doubleToFloat(0.5160),doubleToFloat(12.7300),doubleToFloat(-1.4310),doubleToFloat(1.1460),doubleToFloat(13.3900),doubleToFloat(-2.6940),doubleToFloat(0.6275),doubleToFloat(13.0600),doubleToFloat(-0.8358)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.0000),doubleToFloat(14.5700),doubleToFloat(-3.5440),doubleToFloat(1.2360),doubleToFloat(14.3800),doubleToFloat(-2.5220),doubleToFloat(0.6992),doubleToFloat(13.8400),doubleToFloat(-0.7186),doubleToFloat(1.1760),doubleToFloat(16.2300),doubleToFloat(-2.0130),doubleToFloat(0.5348),doubleToFloat(16.0000),doubleToFloat(-0.4293),doubleToFloat(-0.0000),doubleToFloat(16.6200),doubleToFloat(-2.5200),doubleToFloat(0.6489),doubleToFloat(16.4700),doubleToFloat(-1.7390),doubleToFloat(0.3707),doubleToFloat(16.3100),doubleToFloat(-0.8024),doubleToFloat(-0.0000),doubleToFloat(13.0800),doubleToFloat(-3.3820),doubleToFloat(-0.0000),doubleToFloat(13.5900),doubleToFloat(-3.7310)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.1460),doubleToFloat(13.3900),doubleToFloat(-2.6940),doubleToFloat(-0.8893),doubleToFloat(12.9400),doubleToFloat(-2.6080),doubleToFloat(-0.6275),doubleToFloat(13.0600),doubleToFloat(-0.8358),doubleToFloat(-0.5160),doubleToFloat(12.7300),doubleToFloat(-1.4310),doubleToFloat(-1.2360),doubleToFloat(14.3800),doubleToFloat(-2.5220),doubleToFloat(-0.6992),doubleToFloat(13.8400),doubleToFloat(-0.7186),doubleToFloat(-0.0000),doubleToFloat(16.4700),doubleToFloat(-3.2850),doubleToFloat(-1.1760),doubleToFloat(16.2300),doubleToFloat(-2.0130),doubleToFloat(-0.5348),doubleToFloat(16.0000),doubleToFloat(-0.4293),doubleToFloat(-0.6489),doubleToFloat(16.4700),doubleToFloat(-1.7390)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.3708),doubleToFloat(16.3100),doubleToFloat(-0.8024)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=11, element #192, 192 total numbers made up of 96 2-tuple values */
	this.TextureCoordinate_11_192_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.2049),doubleToFloat(0.3383),doubleToFloat(0.2002),doubleToFloat(0.3958),doubleToFloat(0.1360),doubleToFloat(0.3803),doubleToFloat(0.1281),doubleToFloat(0.3329),doubleToFloat(0.0546),doubleToFloat(0.3857),doubleToFloat(0.0447),doubleToFloat(0.2768),doubleToFloat(0.1678),doubleToFloat(0.4532),doubleToFloat(0.1416),doubleToFloat(0.4193),doubleToFloat(0.2035),doubleToFloat(0.3953),doubleToFloat(0.0762),doubleToFloat(0.5156)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1396),doubleToFloat(0.5164),doubleToFloat(0.1296),doubleToFloat(0.5174),doubleToFloat(0.0824),doubleToFloat(0.5324),doubleToFloat(0.0762),doubleToFloat(0.5185),doubleToFloat(0.1914),doubleToFloat(0.3925),doubleToFloat(0.0546),doubleToFloat(0.3830),doubleToFloat(0.2122),doubleToFloat(0.2712),doubleToFloat(0.0453),doubleToFloat(0.2902),doubleToFloat(0.2088),doubleToFloat(0.2721),doubleToFloat(0.2379),doubleToFloat(0.2057)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1995),doubleToFloat(0.2053),doubleToFloat(0.2239),doubleToFloat(0.5518),doubleToFloat(0.2203),doubleToFloat(0.4727),doubleToFloat(0.2239),doubleToFloat(0.5518),doubleToFloat(0.2313),doubleToFloat(0.4794),doubleToFloat(0.2219),doubleToFloat(0.2126),doubleToFloat(0.0439),doubleToFloat(0.2148),doubleToFloat(0.0439),doubleToFloat(0.2182),doubleToFloat(0.1625),doubleToFloat(0.1691),doubleToFloat(0.1889),doubleToFloat(0.1693)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1779),doubleToFloat(0.1741),doubleToFloat(0.0675),doubleToFloat(0.1679),doubleToFloat(0.0675),doubleToFloat(0.1702),doubleToFloat(0.2049),doubleToFloat(0.3383),doubleToFloat(0.2002),doubleToFloat(0.3958),doubleToFloat(0.1360),doubleToFloat(0.3803),doubleToFloat(0.1281),doubleToFloat(0.3329),doubleToFloat(0.0546),doubleToFloat(0.3857),doubleToFloat(0.0447),doubleToFloat(0.2768),doubleToFloat(0.1678),doubleToFloat(0.4532)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1416),doubleToFloat(0.4193),doubleToFloat(0.2035),doubleToFloat(0.3953),doubleToFloat(0.0762),doubleToFloat(0.5156),doubleToFloat(0.1396),doubleToFloat(0.5164),doubleToFloat(0.1296),doubleToFloat(0.5174),doubleToFloat(0.0824),doubleToFloat(0.5324),doubleToFloat(0.0762),doubleToFloat(0.5185),doubleToFloat(0.1914),doubleToFloat(0.3925),doubleToFloat(0.0546),doubleToFloat(0.3830),doubleToFloat(0.2122),doubleToFloat(0.2712)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.0453),doubleToFloat(0.2902),doubleToFloat(0.2088),doubleToFloat(0.2721),doubleToFloat(0.2379),doubleToFloat(0.2057),doubleToFloat(0.1995),doubleToFloat(0.2053),doubleToFloat(0.2239),doubleToFloat(0.5518),doubleToFloat(0.2203),doubleToFloat(0.4727),doubleToFloat(0.2239),doubleToFloat(0.5518),doubleToFloat(0.2313),doubleToFloat(0.4794),doubleToFloat(0.2219),doubleToFloat(0.2126),doubleToFloat(0.0439),doubleToFloat(0.2148)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.0439),doubleToFloat(0.2182),doubleToFloat(0.1625),doubleToFloat(0.1691),doubleToFloat(0.1889),doubleToFloat(0.1693),doubleToFloat(0.1779),doubleToFloat(0.1741),doubleToFloat(0.0675),doubleToFloat(0.1679),doubleToFloat(0.0675),doubleToFloat(0.1702),doubleToFloat(0.5159),doubleToFloat(0.3385),doubleToFloat(0.5159),doubleToFloat(0.3244),doubleToFloat(0.5159),doubleToFloat(0.3332),doubleToFloat(0.5210),doubleToFloat(0.3428)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5210),doubleToFloat(0.3229),doubleToFloat(0.5210),doubleToFloat(0.3355),doubleToFloat(0.5327),doubleToFloat(0.3442),doubleToFloat(0.5327),doubleToFloat(0.3231),doubleToFloat(0.5302),doubleToFloat(0.3366),doubleToFloat(0.5558),doubleToFloat(0.3390),doubleToFloat(0.5558),doubleToFloat(0.3230),doubleToFloat(0.5558),doubleToFloat(0.3334),doubleToFloat(0.5585),doubleToFloat(0.3232),doubleToFloat(0.5585),doubleToFloat(0.3341)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5585),doubleToFloat(0.3302),doubleToFloat(0.5159),doubleToFloat(0.3244),doubleToFloat(0.5210),doubleToFloat(0.3229),doubleToFloat(0.5210),doubleToFloat(0.3428),doubleToFloat(0.5159),doubleToFloat(0.3385),doubleToFloat(0.5210),doubleToFloat(0.3355),doubleToFloat(0.5159),doubleToFloat(0.3332),doubleToFloat(0.5327),doubleToFloat(0.3231),doubleToFloat(0.5327),doubleToFloat(0.3442),doubleToFloat(0.5302),doubleToFloat(0.3366)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5558),doubleToFloat(0.3230),doubleToFloat(0.5558),doubleToFloat(0.3390),doubleToFloat(0.5558),doubleToFloat(0.3334),doubleToFloat(0.5585),doubleToFloat(0.3232),doubleToFloat(0.5585),doubleToFloat(0.3341),doubleToFloat(0.5585),doubleToFloat(0.3302)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=11, element #200, 1200 total numbers */
	this.IndexedFaceSet_11_200_coordIndex = new MFInt32(Java.to([66,67,10,-1,10,9,66,-1,67,66,0,-1,0,1,67,-1,9,10,8,-1,8,119,9,-1,2,11,5,-1,6,11,2,-1,69,12,68,-1,10,67,68,-1,68,12,10,-1,10,12,7,-1,7,8,10,-1,71,72,7,-1,7,12,71,-1,70,12,69,-1,70,71,12,-1,72,73,13,-1,13,7,72,-1,73,72,3,-1,3,4,73,-1,73,74,13,-1,66,9,149,-1,149,153,66,-1,119,149,9,-1,149,119,16,-1,16,15,149,-1,74,14,18,-1,18,13,74,-1,19,17,18,-1,18,14,19,-1,22,25,27,-1,27,21,22,-1,26,25,16,-1,27,25,26,-1,18,17,26,-1,22,23,28,-1,28,25,22,-1,25,28,15,-1,15,16,25,-1,65,153,149,-1,149,24,65,-1,15,24,149,-1,15,28,24,-1,28,23,24,-1,38,37,36,-1,36,34,38,-1,29,161,16,-1,16,119,29,-1,30,29,119,-1,119,164,30,-1,29,30,31,-1,18,161,13,-1,18,26,161,-1,17,27,26,-1,13,161,7,-1,7,161,8,-1,147,130,119,-1,160,161,130,-1,119,130,161,-1,161,131,119,-1,164,119,131,-1,131,132,164,-1,150,132,131,-1,32,33,26,-1,26,16,35,-1,32,26,35,-1,33,34,161,-1,161,26,33,-1,16,161,34,-1,34,36,35,-1,16,34,35,-1,37,35,36,-1,34,33,38,-1,37,38,33,-1,33,32,37,-1,35,37,32,-1,20,21,27,-1,41,20,27,-1,43,41,27,-1,43,27,44,-1,17,46,45,-1,17,45,39,-1,17,39,44,-1,17,44,27,-1,20,41,152,-1,39,43,44,-1,151,45,46,-1,52,47,39,-1,39,45,52,-1,51,49,41,-1,41,43,51,-1,49,50,152,-1,152,41,49,-1,47,51,43,-1,43,39,47,-1,48,52,45,-1,45,151,48,-1,58,53,47,-1,47,52,58,-1,57,55,49,-1,49,51,57,-1,53,57,51,-1,51,47,53,-1,55,56,50,-1,50,49,55,-1,54,58,52,-1,52,48,54,-1,64,59,53,-1,53,58,64,-1,63,61,55,-1,55,57,63,-1,59,63,57,-1,57,53,59,-1,61,62,56,-1,56,55,61,-1,60,64,58,-1,58,54,60,-1,65,148,153,-1,0,66,153,-1,153,148,0,-1,5,68,67,-1,67,1,5,-1,11,69,68,-1,68,5,11,-1,6,70,69,-1,69,11,6,-1,3,71,70,-1,70,6,3,-1,71,3,72,-1,14,74,73,-1,73,4,14,-1,75,78,77,-1,77,76,75,-1,0,77,78,-1,78,1,0,-1,79,75,76,-1,76,136,79,-1,2,5,80,-1,6,2,80,-1,81,83,82,-1,83,78,75,-1,75,82,83,-1,84,82,75,-1,75,79,84,-1,84,88,85,-1,85,82,84,-1,86,81,82,-1,86,82,85,-1,87,89,88,-1,88,84,87,-1,3,88,89,-1,89,4,3,-1,89,87,90,-1,163,76,77,-1,77,156,163,-1,136,76,163,-1,92,136,163,-1,163,93,92,-1,94,91,90,-1,90,87,94,-1,94,17,19,-1,19,91,94,-1,95,96,22,-1,22,21,95,-1,97,92,96,-1,95,97,96,-1,94,97,17,-1,98,23,22,-1,22,96,98,-1,93,98,96,-1,96,92,93,-1,163,156,65,-1,65,24,163,-1,93,163,24,-1,93,24,98,-1,98,24,23,-1,101,110,100,-1,100,99,101,-1,92,103,102,-1,102,136,92,-1,136,102,104,-1,104,165,136,-1,102,105,104,-1,94,87,103,-1,94,103,97,-1,17,97,95,-1,139,165,134,-1,87,84,103,-1,84,79,103,-1,154,139,135,-1,162,135,103,-1,139,103,135,-1,103,139,137,-1,165,137,136,-1,137,165,138,-1,157,137,138,-1,165,139,155,-1,107,92,97,-1,108,107,97,-1,108,97,109,-1,103,99,109,-1,109,97,103,-1,107,101,99,-1,92,107,99,-1,92,99,103,-1,110,101,107,-1,99,100,109,-1,109,100,110,-1,110,108,109,-1,107,108,110,-1,111,106,95,-1,95,21,20,-1,95,20,152,-1,111,95,152,-1,17,95,106,-1,17,106,112,-1,17,112,151,-1,17,151,46,-1,140,141,42,-1,112,106,111,-1,142,143,40,-1,65,156,148,-1,156,77,0,-1,0,148,156,-1,78,83,5,-1,5,1,78,-1,83,81,80,-1,80,5,83,-1,81,86,6,-1,6,80,81,-1,86,85,3,-1,3,6,86,-1,85,88,3,-1,89,90,91,-1,91,4,89,-1,112,113,48,-1,48,151,112,-1,152,50,114,-1,114,111,152,-1,111,114,113,-1,113,112,111,-1,113,115,54,-1,54,48,113,-1,50,56,116,-1,116,114,50,-1,114,116,115,-1,115,113,114,-1,115,117,60,-1,60,54,115,-1,56,62,118,-1,118,116,56,-1,116,118,117,-1,117,115,116,-1,122,125,158,-1,158,121,122,-1,120,121,158,-1,158,124,120,-1,122,123,119,-1,119,125,122,-1,129,127,126,-1,126,159,129,-1,126,120,124,-1,124,159,126,-1,128,127,129,-1,129,139,128,-1,124,144,146,-1,146,159,124,-1,144,124,158,-1,158,145,144,-1,125,133,145,-1,145,158,125,-1,159,146,155,-1,155,129,159,-1,155,139,129,-1,133,125,119,-1,4,19,14,-1,4,91,19,-1,167,168,169,-1,169,170,171,-1,167,169,171,-1,171,172,173,-1,171,173,166,-1,167,171,166,-1,166,59,64,-1,64,167,166,-1,64,60,168,-1,168,167,64,-1,60,117,169,-1,169,168,60,-1,117,118,170,-1,170,169,117,-1,118,62,171,-1,171,170,118,-1,62,61,172,-1,172,171,62,-1,61,63,173,-1,173,172,61,-1,63,59,166,-1,166,173,63,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=11, element #200, 1200 total numbers */
	this.IndexedFaceSet_11_200_texCoordIndex = new MFInt32(Java.to([55,58,53,-1,53,54,55,-1,58,55,56,-1,56,57,58,-1,54,53,59,-1,59,60,54,-1,61,62,63,-1,64,62,61,-1,65,66,67,-1,53,58,67,-1,67,66,53,-1,53,66,68,-1,68,59,53,-1,69,72,68,-1,68,66,69,-1,70,66,65,-1,70,69,66,-1,72,75,71,-1,71,68,72,-1,75,72,73,-1,73,74,75,-1,75,76,71,-1,30,1,4,-1,4,29,30,-1,2,4,1,-1,136,137,134,-1,134,135,136,-1,157,160,158,-1,158,159,157,-1,161,162,158,-1,158,160,161,-1,165,166,163,-1,163,164,165,-1,167,166,168,-1,163,166,167,-1,158,162,167,-1,165,171,170,-1,170,166,165,-1,166,170,172,-1,172,168,166,-1,139,145,136,-1,136,138,139,-1,135,138,136,-1,172,170,173,-1,170,171,173,-1,78,83,79,-1,79,77,78,-1,140,141,134,-1,134,137,140,-1,143,140,137,-1,137,142,143,-1,140,143,144,-1,158,174,159,-1,158,167,174,-1,162,163,167,-1,71,80,68,-1,68,80,59,-1,59,81,60,-1,59,80,81,-1,137,134,141,-1,141,140,137,-1,142,137,140,-1,140,143,142,-1,144,143,140,-1,177,178,167,-1,167,168,176,-1,177,167,176,-1,178,179,174,-1,174,167,178,-1,81,80,77,-1,77,79,82,-1,81,77,82,-1,83,82,79,-1,77,84,78,-1,83,78,84,-1,84,85,83,-1,82,83,85,-1,169,164,163,-1,181,169,163,-1,180,181,163,-1,180,163,175,-1,162,186,182,-1,162,182,183,-1,162,183,175,-1,162,175,163,-1,169,181,184,-1,183,180,175,-1,185,182,186,-1,16,13,6,-1,6,9,16,-1,17,15,8,-1,8,7,17,-1,14,20,11,-1,11,5,14,-1,13,17,7,-1,7,6,13,-1,18,19,12,-1,12,10,18,-1,24,21,13,-1,13,16,24,-1,25,23,15,-1,15,17,25,-1,21,25,17,-1,17,13,21,-1,22,28,20,-1,20,14,22,-1,26,27,19,-1,19,18,26,-1,207,208,205,-1,205,206,207,-1,211,212,209,-1,209,210,211,-1,208,211,210,-1,210,205,208,-1,212,214,213,-1,213,209,212,-1,216,207,206,-1,206,215,216,-1,139,146,145,-1,0,30,29,-1,29,3,0,-1,63,67,58,-1,58,57,63,-1,62,65,67,-1,67,63,62,-1,64,70,65,-1,65,62,64,-1,73,69,70,-1,70,64,73,-1,69,73,72,-1,86,76,75,-1,75,74,86,-1,87,90,88,-1,88,89,87,-1,56,88,90,-1,90,57,56,-1,91,87,89,-1,89,92,91,-1,61,63,93,-1,64,61,93,-1,94,95,96,-1,95,90,87,-1,87,96,95,-1,97,96,87,-1,87,91,97,-1,97,101,98,-1,98,96,97,-1,99,94,96,-1,99,96,98,-1,100,102,101,-1,101,97,100,-1,73,101,102,-1,102,74,73,-1,102,100,103,-1,35,31,32,-1,32,36,35,-1,34,31,35,-1,147,150,148,-1,148,149,147,-1,189,190,187,-1,187,188,189,-1,189,162,161,-1,161,190,189,-1,191,192,165,-1,165,164,191,-1,193,194,192,-1,191,193,192,-1,189,193,162,-1,195,171,165,-1,165,192,195,-1,196,195,192,-1,192,194,196,-1,148,156,139,-1,139,138,148,-1,149,148,138,-1,196,173,195,-1,195,173,171,-1,105,110,106,-1,106,104,105,-1,147,152,151,-1,151,150,147,-1,150,151,153,-1,153,154,150,-1,151,155,153,-1,189,188,197,-1,189,197,193,-1,162,193,191,-1,38,39,37,-1,100,97,107,-1,97,91,107,-1,91,92,108,-1,91,108,107,-1,150,152,147,-1,152,150,151,-1,154,151,150,-1,151,154,153,-1,155,151,153,-1,154,150,148,-1,199,194,193,-1,200,199,193,-1,200,193,201,-1,197,202,201,-1,201,193,197,-1,109,105,104,-1,108,109,104,-1,108,104,107,-1,110,105,109,-1,104,106,111,-1,111,106,110,-1,110,112,111,-1,109,112,110,-1,203,198,191,-1,191,164,169,-1,191,169,184,-1,203,191,184,-1,162,191,198,-1,162,198,204,-1,162,204,185,-1,162,185,186,-1,169,181,184,-1,204,198,203,-1,182,186,185,-1,139,156,146,-1,36,32,33,-1,33,40,36,-1,90,95,63,-1,63,57,90,-1,95,94,93,-1,93,63,95,-1,94,99,64,-1,64,93,94,-1,99,98,73,-1,73,64,99,-1,98,101,73,-1,102,103,113,-1,113,74,102,-1,41,44,43,-1,43,42,41,-1,45,48,47,-1,47,46,45,-1,46,47,44,-1,44,41,46,-1,44,50,49,-1,49,43,44,-1,48,52,51,-1,51,47,48,-1,47,51,50,-1,50,44,47,-1,217,218,216,-1,216,215,217,-1,213,214,219,-1,219,220,213,-1,220,219,218,-1,218,217,220,-1,117,118,115,-1,115,116,117,-1,120,116,115,-1,115,119,120,-1,117,122,121,-1,121,118,117,-1,125,126,123,-1,123,124,125,-1,123,120,119,-1,119,124,123,-1,128,126,125,-1,125,127,128,-1,119,130,129,-1,129,124,119,-1,130,119,115,-1,115,131,130,-1,118,132,131,-1,131,115,118,-1,124,129,133,-1,133,125,124,-1,133,127,125,-1,132,118,121,-1,74,114,86,-1,74,113,114,-1,222,223,224,-1,224,225,226,-1,222,224,226,-1,226,227,228,-1,226,228,221,-1,222,226,221,-1,221,208,207,-1,207,222,221,-1,207,216,223,-1,223,222,207,-1,216,218,224,-1,224,223,216,-1,218,219,225,-1,225,224,218,-1,219,214,226,-1,226,225,219,-1,214,212,227,-1,227,226,214,-1,212,211,228,-1,228,227,212,-1,211,208,221,-1,221,228,211,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=12, element #200, 522 total numbers made up of 174 3-tuple values */
	this.Coordinate_12_200_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(0.0000),doubleToFloat(6.2480),doubleToFloat(3.8610),doubleToFloat(0.0000),doubleToFloat(3.6040),doubleToFloat(3.3320),doubleToFloat(0.0000),doubleToFloat(1.6780),doubleToFloat(4.1320),doubleToFloat(0.0000),doubleToFloat(-1.0600),doubleToFloat(2.1320),doubleToFloat(0.0000),doubleToFloat(-0.6113),doubleToFloat(0.4257),doubleToFloat(0.0000),doubleToFloat(2.5080),doubleToFloat(3.4800),doubleToFloat(0.0000),doubleToFloat(1.0560),doubleToFloat(3.5690),doubleToFloat(3.1220),doubleToFloat(1.0310),doubleToFloat(1.0870),doubleToFloat(3.8640),doubleToFloat(3.3700),doubleToFloat(0.8051),doubleToFloat(3.0960),doubleToFloat(6.1850),doubleToFloat(2.7850)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(2.9620),doubleToFloat(3.5860),doubleToFloat(2.4680),doubleToFloat(0.6641),doubleToFloat(1.5400),doubleToFloat(3.4400),doubleToFloat(2.6050),doubleToFloat(1.2600),doubleToFloat(2.5240),doubleToFloat(3.0410),doubleToFloat(1.0310),doubleToFloat(-0.4007),doubleToFloat(1.0880),doubleToFloat(-0.0485),doubleToFloat(-0.7313),doubleToFloat(3.0080),doubleToFloat(9.0380),doubleToFloat(-0.4634),doubleToFloat(4.5990),doubleToFloat(7.1930),doubleToFloat(-1.7640),doubleToFloat(0.0000),doubleToFloat(0.8780),doubleToFloat(-3.2760),doubleToFloat(1.8830),doubleToFloat(1.0690),doubleToFloat(-2.2600),doubleToFloat(0.0000),doubleToFloat(0.1453),doubleToFloat(-2.2440)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.0000),doubleToFloat(2.4770),doubleToFloat(-5.2520),doubleToFloat(0.0000),doubleToFloat(3.2790),doubleToFloat(-5.6060),doubleToFloat(0.0000),doubleToFloat(8.1310),doubleToFloat(-5.0260),doubleToFloat(0.0000),doubleToFloat(9.8340),doubleToFloat(-2.7140),doubleToFloat(0.0000),doubleToFloat(10.0800),doubleToFloat(0.3393),doubleToFloat(2.9850),doubleToFloat(7.6770),doubleToFloat(-4.1170),doubleToFloat(3.3210),doubleToFloat(2.7790),doubleToFloat(-2.8660),doubleToFloat(2.4850),doubleToFloat(2.7480),doubleToFloat(-4.5230),doubleToFloat(2.6090),doubleToFloat(9.1480),doubleToFloat(-2.6230),doubleToFloat(3.9220),doubleToFloat(0.9315),doubleToFloat(0.1364)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(3.2940),doubleToFloat(1.4890),doubleToFloat(2.3280),doubleToFloat(2.9420),doubleToFloat(-0.3907),doubleToFloat(1.6400),doubleToFloat(4.1190),doubleToFloat(4.3010),doubleToFloat(-2.3110),doubleToFloat(3.7110),doubleToFloat(3.0210),doubleToFloat(-2.4170),doubleToFloat(3.8740),doubleToFloat(2.7920),doubleToFloat(-1.6430),doubleToFloat(4.3380),doubleToFloat(5.1720),doubleToFloat(-1.8630),doubleToFloat(4.1710),doubleToFloat(4.3420),doubleToFloat(-1.7960),doubleToFloat(4.4130),doubleToFloat(4.6510),doubleToFloat(-2.8810),doubleToFloat(4.0050),doubleToFloat(2.8830),doubleToFloat(-2.5900),doubleToFloat(0.4904),doubleToFloat(1.5130),doubleToFloat(-4.3620)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.2841),doubleToFloat(1.3610),doubleToFloat(-4.3190),doubleToFloat(0.2529),doubleToFloat(1.8790),doubleToFloat(-4.8750),doubleToFloat(-0.2529),doubleToFloat(1.8790),doubleToFloat(-4.8750),doubleToFloat(0.4533),doubleToFloat(1.7520),doubleToFloat(-4.7720),doubleToFloat(0.9863),doubleToFloat(1.7370),doubleToFloat(-4.5570),doubleToFloat(0.2841),doubleToFloat(1.3610),doubleToFloat(-4.3190),doubleToFloat(0.0000),doubleToFloat(1.0640),doubleToFloat(-3.7690),doubleToFloat(0.4904),doubleToFloat(1.3130),doubleToFloat(-4.7290),doubleToFloat(-0.2841),doubleToFloat(1.0930),doubleToFloat(-4.6610),doubleToFloat(0.2529),doubleToFloat(1.6910),doubleToFloat(-5.1200)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.2529),doubleToFloat(1.6910),doubleToFloat(-5.1200),doubleToFloat(0.4533),doubleToFloat(1.5240),doubleToFloat(-4.9470),doubleToFloat(0.2841),doubleToFloat(1.0930),doubleToFloat(-4.6610),doubleToFloat(0.3923),doubleToFloat(1.3870),doubleToFloat(-4.9210),doubleToFloat(-0.2512),doubleToFloat(1.1860),doubleToFloat(-4.7390),doubleToFloat(0.2427),doubleToFloat(1.7090),doubleToFloat(-5.0580),doubleToFloat(-0.2427),doubleToFloat(1.7090),doubleToFloat(-5.0580),doubleToFloat(0.3975),doubleToFloat(1.6360),doubleToFloat(-5.0020),doubleToFloat(0.2512),doubleToFloat(1.2910),doubleToFloat(-4.9200),doubleToFloat(0.8498),doubleToFloat(0.4808),doubleToFloat(-5.3450)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.4084),doubleToFloat(0.2239),doubleToFloat(-5.6210),doubleToFloat(0.4082),doubleToFloat(1.5260),doubleToFloat(-5.6250),doubleToFloat(-0.2698),doubleToFloat(1.6350),doubleToFloat(-6.0830),doubleToFloat(0.8735),doubleToFloat(0.8532),doubleToFloat(-5.4880),doubleToFloat(0.4140),doubleToFloat(0.3346),doubleToFloat(-5.2330),doubleToFloat(0.0000),doubleToFloat(9.5980),doubleToFloat(1.6570),doubleToFloat(1.7990),doubleToFloat(6.2110),doubleToFloat(3.2360),doubleToFloat(1.6070),doubleToFloat(3.5960),doubleToFloat(2.9150),doubleToFloat(1.3830),doubleToFloat(1.8450),doubleToFloat(2.9730),doubleToFloat(1.3930),doubleToFloat(1.4340),doubleToFloat(3.0960)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(1.3920),doubleToFloat(1.1650),doubleToFloat(3.0110),doubleToFloat(1.5250),doubleToFloat(-0.0858),doubleToFloat(2.3430),doubleToFloat(1.6290),doubleToFloat(-0.2382),doubleToFloat(1.6700),doubleToFloat(1.1910),doubleToFloat(0.0201),doubleToFloat(0.2184),doubleToFloat(1.8050),doubleToFloat(0.3477),doubleToFloat(-0.6100),doubleToFloat(-2.9620),doubleToFloat(3.5860),doubleToFloat(2.4680),doubleToFloat(-3.0960),doubleToFloat(6.1850),doubleToFloat(2.7850),doubleToFloat(-1.7990),doubleToFloat(6.2110),doubleToFloat(3.2360),doubleToFloat(-1.6070),doubleToFloat(3.5960),doubleToFloat(2.9150),doubleToFloat(-3.8640),doubleToFloat(3.3700),doubleToFloat(0.8051)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.6641),doubleToFloat(1.5400),doubleToFloat(3.4400),doubleToFloat(-1.3930),doubleToFloat(1.4340),doubleToFloat(3.0960),doubleToFloat(-2.6050),doubleToFloat(1.2600),doubleToFloat(2.5240),doubleToFloat(-1.3830),doubleToFloat(1.8450),doubleToFloat(2.9730),doubleToFloat(-3.1220),doubleToFloat(1.0310),doubleToFloat(1.0870),doubleToFloat(-1.5250),doubleToFloat(-0.0858),doubleToFloat(2.3430),doubleToFloat(-1.3920),doubleToFloat(1.1650),doubleToFloat(3.0110),doubleToFloat(-3.0410),doubleToFloat(1.0310),doubleToFloat(-0.4007),doubleToFloat(-1.6290),doubleToFloat(-0.2382),doubleToFloat(1.6700),doubleToFloat(-1.1910),doubleToFloat(0.0201),doubleToFloat(0.2184)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.8050),doubleToFloat(0.3477),doubleToFloat(-0.6100),doubleToFloat(-1.0880),doubleToFloat(-0.0485),doubleToFloat(-0.7313),doubleToFloat(-4.5990),doubleToFloat(6.4950),doubleToFloat(-1.7640),doubleToFloat(-3.0080),doubleToFloat(9.0380),doubleToFloat(-0.4634),doubleToFloat(-1.8830),doubleToFloat(1.0690),doubleToFloat(-2.2600),doubleToFloat(-2.4850),doubleToFloat(2.7480),doubleToFloat(-4.5230),doubleToFloat(-2.9850),doubleToFloat(7.6770),doubleToFloat(-4.1170),doubleToFloat(-3.3210),doubleToFloat(2.7790),doubleToFloat(-2.8660),doubleToFloat(-2.6090),doubleToFloat(9.1480),doubleToFloat(-2.6230),doubleToFloat(-3.8740),doubleToFloat(2.7920),doubleToFloat(-1.6430)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-4.0050),doubleToFloat(2.8830),doubleToFloat(-2.5900),doubleToFloat(-4.1710),doubleToFloat(4.3420),doubleToFloat(-1.7960),doubleToFloat(-3.9240),doubleToFloat(0.7167),doubleToFloat(0.1364),doubleToFloat(-3.7030),doubleToFloat(1.8520),doubleToFloat(-1.5740),doubleToFloat(-3.2940),doubleToFloat(1.5260),doubleToFloat(2.3280),doubleToFloat(-2.9440),doubleToFloat(-0.6055),doubleToFloat(1.6400),doubleToFloat(-0.9863),doubleToFloat(1.7370),doubleToFloat(-4.5570),doubleToFloat(-4.3380),doubleToFloat(5.1720),doubleToFloat(-1.8630),doubleToFloat(-4.1190),doubleToFloat(4.3010),doubleToFloat(-2.3110),doubleToFloat(-3.7110),doubleToFloat(3.0210),doubleToFloat(-2.4170)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-4.4130),doubleToFloat(4.6510),doubleToFloat(-2.8810),doubleToFloat(-0.4533),doubleToFloat(1.7520),doubleToFloat(-4.7720),doubleToFloat(-0.4904),doubleToFloat(1.5130),doubleToFloat(-4.3620),doubleToFloat(-0.4904),doubleToFloat(1.3130),doubleToFloat(-4.7290),doubleToFloat(-0.4533),doubleToFloat(1.5240),doubleToFloat(-4.9470),doubleToFloat(-0.3923),doubleToFloat(1.3870),doubleToFloat(-4.9210),doubleToFloat(-0.3975),doubleToFloat(1.6360),doubleToFloat(-5.0020),doubleToFloat(-0.8610),doubleToFloat(0.4917),doubleToFloat(-5.6790),doubleToFloat(-0.8735),doubleToFloat(1.0840),doubleToFloat(-5.8730),doubleToFloat(4.4200),doubleToFloat(6.0720),doubleToFloat(0.8408)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.0000),doubleToFloat(4.0780),doubleToFloat(5.4650),doubleToFloat(2.6090),doubleToFloat(4.2380),doubleToFloat(4.3830),doubleToFloat(4.4910),doubleToFloat(4.5190),doubleToFloat(2.8590),doubleToFloat(4.8120),doubleToFloat(4.6410),doubleToFloat(0.2500),doubleToFloat(0.0000),doubleToFloat(7.2810),doubleToFloat(4.8470),doubleToFloat(4.0890),doubleToFloat(6.8110),doubleToFloat(2.6570),doubleToFloat(-2.6090),doubleToFloat(4.2380),doubleToFloat(4.3830),doubleToFloat(-4.4910),doubleToFloat(4.5190),doubleToFloat(2.8590),doubleToFloat(-4.8120),doubleToFloat(4.6410),doubleToFloat(0.2500),doubleToFloat(-4.0890),doubleToFloat(6.8110),doubleToFloat(2.6570)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(4.5990),doubleToFloat(7.1930),doubleToFloat(-1.7640),doubleToFloat(3.9220),doubleToFloat(0.9315),doubleToFloat(0.1364),doubleToFloat(3.2940),doubleToFloat(1.4890),doubleToFloat(2.3280),doubleToFloat(3.0510),doubleToFloat(8.4170),doubleToFloat(1.9030),doubleToFloat(-3.0510),doubleToFloat(8.4170),doubleToFloat(1.9030),doubleToFloat(-4.5990),doubleToFloat(6.4950),doubleToFloat(-1.7640),doubleToFloat(-4.5730),doubleToFloat(6.0710),doubleToFloat(0.8593),doubleToFloat(-3.9240),doubleToFloat(0.7167),doubleToFloat(0.1364),doubleToFloat(-3.2940),doubleToFloat(1.5260),doubleToFloat(2.3280),doubleToFloat(-4.5730),doubleToFloat(6.0710),doubleToFloat(0.8593)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.0000),doubleToFloat(2.4770),doubleToFloat(-5.2520),doubleToFloat(0.2529),doubleToFloat(1.8790),doubleToFloat(-4.8750),doubleToFloat(0.2841),doubleToFloat(1.3610),doubleToFloat(-4.3190),doubleToFloat(0.0000),doubleToFloat(1.0640),doubleToFloat(-3.7690),doubleToFloat(0.0000),doubleToFloat(8.8760),doubleToFloat(2.9440),doubleToFloat(1.4010),doubleToFloat(8.7280),doubleToFloat(2.4430),doubleToFloat(-1.4010),doubleToFloat(8.7280),doubleToFloat(2.4430),doubleToFloat(3.8640),doubleToFloat(3.3700),doubleToFloat(0.8051),doubleToFloat(0.0000),doubleToFloat(8.8760),doubleToFloat(2.9440),doubleToFloat(3.0510),doubleToFloat(8.4170),doubleToFloat(1.9030)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(2.9420),doubleToFloat(-0.3907),doubleToFloat(1.6400),doubleToFloat(-0.2841),doubleToFloat(1.3610),doubleToFloat(-4.3190),doubleToFloat(-0.2529),doubleToFloat(1.8790),doubleToFloat(-4.8750),doubleToFloat(1.4010),doubleToFloat(8.7280),doubleToFloat(2.4430),doubleToFloat(-3.8640),doubleToFloat(3.3700),doubleToFloat(0.8051),doubleToFloat(-3.0510),doubleToFloat(8.4170),doubleToFloat(1.9030),doubleToFloat(-1.4010),doubleToFloat(8.7280),doubleToFloat(2.4430),doubleToFloat(-2.9440),doubleToFloat(-0.6055),doubleToFloat(1.6400),doubleToFloat(2.1600),doubleToFloat(7.2390),doubleToFloat(4.1440),doubleToFloat(-2.1600),doubleToFloat(7.2390),doubleToFloat(4.1440)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(3.8640),doubleToFloat(3.3700),doubleToFloat(0.8051),doubleToFloat(3.7030),doubleToFloat(2.5500),doubleToFloat(-1.5740),doubleToFloat(-3.8640),doubleToFloat(3.3700),doubleToFloat(0.8051),doubleToFloat(-3.0510),doubleToFloat(8.4170),doubleToFloat(1.9030),doubleToFloat(3.8870),doubleToFloat(6.4020),doubleToFloat(2.2150),doubleToFloat(-3.8870),doubleToFloat(5.7040),doubleToFloat(2.2150),doubleToFloat(0.0275),doubleToFloat(0.6889),doubleToFloat(-6.3680),doubleToFloat(0.0275),doubleToFloat(0.6889),doubleToFloat(-6.3680),doubleToFloat(0.0275),doubleToFloat(0.6889),doubleToFloat(-6.3680),doubleToFloat(0.0275),doubleToFloat(0.6889),doubleToFloat(-6.3680)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.0275),doubleToFloat(0.6889),doubleToFloat(-6.3680),doubleToFloat(0.0275),doubleToFloat(0.6889),doubleToFloat(-6.3680),doubleToFloat(0.0275),doubleToFloat(0.6889),doubleToFloat(-6.3680),doubleToFloat(0.0275),doubleToFloat(0.6889),doubleToFloat(-6.3680)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=12, element #201, 458 total numbers made up of 229 2-tuple values */
	this.TextureCoordinate_12_201_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.0199),doubleToFloat(0.7411),doubleToFloat(0.3040),doubleToFloat(0.7353),doubleToFloat(0.4514),doubleToFloat(0.7245),doubleToFloat(0.0199),doubleToFloat(0.9847),doubleToFloat(0.3019),doubleToFloat(0.9545),doubleToFloat(0.3150),doubleToFloat(0.9067),doubleToFloat(0.2582),doubleToFloat(0.5588),doubleToFloat(0.2318),doubleToFloat(0.8287),doubleToFloat(0.3150),doubleToFloat(0.9067),doubleToFloat(0.3537),doubleToFloat(0.4343)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5009),doubleToFloat(0.4343),doubleToFloat(0.5516),doubleToFloat(0.8015),doubleToFloat(0.4488),doubleToFloat(0.3265),doubleToFloat(0.2582),doubleToFloat(0.5588),doubleToFloat(0.3150),doubleToFloat(0.9067),doubleToFloat(0.3150),doubleToFloat(0.9067),doubleToFloat(0.3537),doubleToFloat(0.4343),doubleToFloat(0.2318),doubleToFloat(0.8287),doubleToFloat(0.5009),doubleToFloat(0.4343),doubleToFloat(0.4488),doubleToFloat(0.3265)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5516),doubleToFloat(0.8015),doubleToFloat(0.2582),doubleToFloat(0.5588),doubleToFloat(0.3150),doubleToFloat(0.9067),doubleToFloat(0.3150),doubleToFloat(0.9067),doubleToFloat(0.3537),doubleToFloat(0.4343),doubleToFloat(0.2318),doubleToFloat(0.8287),doubleToFloat(0.5009),doubleToFloat(0.4343),doubleToFloat(0.4488),doubleToFloat(0.3265),doubleToFloat(0.5516),doubleToFloat(0.8015),doubleToFloat(0.1984),doubleToFloat(0.9656)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1850),doubleToFloat(0.7377),doubleToFloat(0.3040),doubleToFloat(0.7353),doubleToFloat(0.1850),doubleToFloat(0.7377),doubleToFloat(0.0199),doubleToFloat(0.7411),doubleToFloat(0.4514),doubleToFloat(0.7245),doubleToFloat(0.3019),doubleToFloat(0.9545),doubleToFloat(0.1984),doubleToFloat(0.9656),doubleToFloat(0.0634),doubleToFloat(0.8794),doubleToFloat(0.0815),doubleToFloat(0.8144),doubleToFloat(0.0592),doubleToFloat(0.7948)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.0199),doubleToFloat(0.9847),doubleToFloat(0.2582),doubleToFloat(0.5588),doubleToFloat(0.3537),doubleToFloat(0.4343),doubleToFloat(0.3537),doubleToFloat(0.4343),doubleToFloat(0.2582),doubleToFloat(0.5588),doubleToFloat(0.3150),doubleToFloat(0.9067),doubleToFloat(0.2318),doubleToFloat(0.8287),doubleToFloat(0.2318),doubleToFloat(0.8287),doubleToFloat(0.3150),doubleToFloat(0.9067),doubleToFloat(0.3537),doubleToFloat(0.4343)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.2582),doubleToFloat(0.5588),doubleToFloat(0.2318),doubleToFloat(0.8287),doubleToFloat(0.3150),doubleToFloat(0.9067),doubleToFloat(0.4022),doubleToFloat(0.8072),doubleToFloat(0.4092),doubleToFloat(0.9332),doubleToFloat(0.3423),doubleToFloat(0.9345),doubleToFloat(0.2496),doubleToFloat(0.9363),doubleToFloat(0.2496),doubleToFloat(0.8080),doubleToFloat(0.3324),doubleToFloat(0.8076),doubleToFloat(0.4487),doubleToFloat(0.7966)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4853),doubleToFloat(0.9277),doubleToFloat(0.2496),doubleToFloat(0.7146),doubleToFloat(0.2838),doubleToFloat(0.7079),doubleToFloat(0.2496),doubleToFloat(0.7548),doubleToFloat(0.2496),doubleToFloat(0.6844),doubleToFloat(0.3214),doubleToFloat(0.7028),doubleToFloat(0.3839),doubleToFloat(0.6943),doubleToFloat(0.3208),doubleToFloat(0.7227),doubleToFloat(0.4105),doubleToFloat(0.6832),doubleToFloat(0.3282),doubleToFloat(0.6290)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.3213),doubleToFloat(0.6897),doubleToFloat(0.4063),doubleToFloat(0.6832),doubleToFloat(0.3336),doubleToFloat(0.6217),doubleToFloat(0.2485),doubleToFloat(0.6026),doubleToFloat(0.2485),doubleToFloat(0.6244),doubleToFloat(0.3109),doubleToFloat(0.6342),doubleToFloat(0.3426),doubleToFloat(0.6501),doubleToFloat(0.4492),doubleToFloat(0.7686),doubleToFloat(0.4560),doubleToFloat(0.7730),doubleToFloat(0.4645),doubleToFloat(0.8438)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4405),doubleToFloat(0.7230),doubleToFloat(0.4866),doubleToFloat(0.9483),doubleToFloat(0.4732),doubleToFloat(0.8841),doubleToFloat(0.4770),doubleToFloat(0.8588),doubleToFloat(0.4408),doubleToFloat(0.7797),doubleToFloat(0.4619),doubleToFloat(0.8418),doubleToFloat(0.3056),doubleToFloat(0.6309),doubleToFloat(0.0969),doubleToFloat(0.8072),doubleToFloat(0.1568),doubleToFloat(0.9345),doubleToFloat(0.0900),doubleToFloat(0.9332)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1668),doubleToFloat(0.8076),doubleToFloat(0.0504),doubleToFloat(0.7966),doubleToFloat(0.0139),doubleToFloat(0.9277),doubleToFloat(0.2154),doubleToFloat(0.7079),doubleToFloat(0.1778),doubleToFloat(0.7028),doubleToFloat(0.1783),doubleToFloat(0.7227),doubleToFloat(0.1153),doubleToFloat(0.6943),doubleToFloat(0.0887),doubleToFloat(0.6832),doubleToFloat(0.1710),doubleToFloat(0.6290),doubleToFloat(0.1778),doubleToFloat(0.6897)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.0928),doubleToFloat(0.6832),doubleToFloat(0.1656),doubleToFloat(0.6217),doubleToFloat(0.1882),doubleToFloat(0.6342),doubleToFloat(0.1566),doubleToFloat(0.6501),doubleToFloat(0.0499),doubleToFloat(0.7686),doubleToFloat(0.0346),doubleToFloat(0.8438),doubleToFloat(0.0432),doubleToFloat(0.7730),doubleToFloat(0.0587),doubleToFloat(0.7230),doubleToFloat(0.0125),doubleToFloat(0.9483),doubleToFloat(0.0260),doubleToFloat(0.8841)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.0222),doubleToFloat(0.8588),doubleToFloat(0.0583),doubleToFloat(0.7797),doubleToFloat(0.0373),doubleToFloat(0.8418),doubleToFloat(0.1935),doubleToFloat(0.6309),doubleToFloat(0.2496),doubleToFloat(0.6403),doubleToFloat(0.5986),doubleToFloat(0.9248),doubleToFloat(0.6012),doubleToFloat(0.8499),doubleToFloat(0.6890),doubleToFloat(0.8561),doubleToFloat(0.6892),doubleToFloat(0.9241),doubleToFloat(0.5242),doubleToFloat(0.9216)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5225),doubleToFloat(0.8475),doubleToFloat(0.7915),doubleToFloat(0.8970),doubleToFloat(0.8075),doubleToFloat(0.8685),doubleToFloat(0.6012),doubleToFloat(0.8499),doubleToFloat(0.5986),doubleToFloat(0.9248),doubleToFloat(0.6892),doubleToFloat(0.9241),doubleToFloat(0.6890),doubleToFloat(0.8561),doubleToFloat(0.7915),doubleToFloat(0.8970),doubleToFloat(0.8075),doubleToFloat(0.8685),doubleToFloat(0.6078),doubleToFloat(0.9826)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5191),doubleToFloat(0.9846),doubleToFloat(0.6077),doubleToFloat(0.9826),doubleToFloat(0.7007),doubleToFloat(0.9832),doubleToFloat(0.7008),doubleToFloat(0.9832),doubleToFloat(0.9771),doubleToFloat(0.7722),doubleToFloat(0.9707),doubleToFloat(0.8593),doubleToFloat(0.8581),doubleToFloat(0.8585),doubleToFloat(0.8839),doubleToFloat(0.7747),doubleToFloat(0.9591),doubleToFloat(0.9681),doubleToFloat(0.9000),doubleToFloat(0.9681)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.9199),doubleToFloat(0.6984),doubleToFloat(0.9684),doubleToFloat(0.7206),doubleToFloat(0.8499),doubleToFloat(0.7752),doubleToFloat(0.8458),doubleToFloat(0.7262),doubleToFloat(0.8298),doubleToFloat(0.6747),doubleToFloat(0.8650),doubleToFloat(0.9347),doubleToFloat(0.8697),doubleToFloat(0.9696),doubleToFloat(0.9771),doubleToFloat(0.7722),doubleToFloat(0.8581),doubleToFloat(0.8585),doubleToFloat(0.9707),doubleToFloat(0.8593)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.8839),doubleToFloat(0.7747),doubleToFloat(0.9199),doubleToFloat(0.6984),doubleToFloat(0.9684),doubleToFloat(0.7206),doubleToFloat(0.8458),doubleToFloat(0.7262),doubleToFloat(0.8499),doubleToFloat(0.7752),doubleToFloat(0.8298),doubleToFloat(0.6747),doubleToFloat(0.8650),doubleToFloat(0.9347),doubleToFloat(0.5498),doubleToFloat(0.7202),doubleToFloat(0.5638),doubleToFloat(0.7169),doubleToFloat(0.5718),doubleToFloat(0.7409)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5371),doubleToFloat(0.7082),doubleToFloat(0.5326),doubleToFloat(0.6846),doubleToFloat(0.5382),doubleToFloat(0.6801),doubleToFloat(0.5866),doubleToFloat(0.6942),doubleToFloat(0.5873),doubleToFloat(0.6680),doubleToFloat(0.6438),doubleToFloat(0.6775),doubleToFloat(0.6181),doubleToFloat(0.7065),doubleToFloat(0.5894),doubleToFloat(0.7192),doubleToFloat(0.6547),doubleToFloat(0.7510),doubleToFloat(0.5605),doubleToFloat(0.6719)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.6790),doubleToFloat(0.7289),doubleToFloat(0.7191),doubleToFloat(0.6946),doubleToFloat(0.7036),doubleToFloat(0.7620),doubleToFloat(0.7595),doubleToFloat(0.7600),doubleToFloat(0.5920),doubleToFloat(0.7489),doubleToFloat(0.5625),doubleToFloat(0.6941),doubleToFloat(0.6380),doubleToFloat(0.7485),doubleToFloat(0.6245),doubleToFloat(0.7448),doubleToFloat(0.6138),doubleToFloat(0.7412),doubleToFloat(0.6107),doubleToFloat(0.7461)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5568),doubleToFloat(0.6838),doubleToFloat(0.5564),doubleToFloat(0.6793),doubleToFloat(0.5495),doubleToFloat(0.6819),doubleToFloat(0.5528),doubleToFloat(0.6851),doubleToFloat(0.5564),doubleToFloat(0.6793),doubleToFloat(0.5495),doubleToFloat(0.6819),doubleToFloat(0.5416),doubleToFloat(0.6788),doubleToFloat(0.5498),doubleToFloat(0.7202),doubleToFloat(0.5718),doubleToFloat(0.7409),doubleToFloat(0.5638),doubleToFloat(0.7169)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5371),doubleToFloat(0.7082),doubleToFloat(0.5866),doubleToFloat(0.6942),doubleToFloat(0.6181),doubleToFloat(0.7065),doubleToFloat(0.5894),doubleToFloat(0.7191),doubleToFloat(0.6547),doubleToFloat(0.7510),doubleToFloat(0.6790),doubleToFloat(0.7289),doubleToFloat(0.7036),doubleToFloat(0.7619),doubleToFloat(0.5920),doubleToFloat(0.7489),doubleToFloat(0.5625),doubleToFloat(0.6941),doubleToFloat(0.6380),doubleToFloat(0.7485)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.6245),doubleToFloat(0.7448),doubleToFloat(0.6138),doubleToFloat(0.7412),doubleToFloat(0.6107),doubleToFloat(0.7461),doubleToFloat(0.5568),doubleToFloat(0.6838),doubleToFloat(0.5528),doubleToFloat(0.6851),doubleToFloat(0.9104),doubleToFloat(0.7460),doubleToFloat(0.9034),doubleToFloat(0.7467),doubleToFloat(0.9112),doubleToFloat(0.7728),doubleToFloat(0.9336),doubleToFloat(0.7719),doubleToFloat(0.9030),doubleToFloat(0.7463)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.9106),doubleToFloat(0.7457),doubleToFloat(0.9342),doubleToFloat(0.7713),doubleToFloat(0.9112),doubleToFloat(0.7717),doubleToFloat(0.8789),doubleToFloat(0.7463),doubleToFloat(0.8707),doubleToFloat(0.7717),doubleToFloat(0.8785),doubleToFloat(0.7467),doubleToFloat(0.8707),doubleToFloat(0.7728),doubleToFloat(0.8715),doubleToFloat(0.7460),doubleToFloat(0.8483),doubleToFloat(0.7719),doubleToFloat(0.8477),doubleToFloat(0.7713)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.8713),doubleToFloat(0.7457),doubleToFloat(0.9336),doubleToFloat(0.7719),doubleToFloat(0.9112),doubleToFloat(0.7728),doubleToFloat(0.8707),doubleToFloat(0.7728),doubleToFloat(0.8483),doubleToFloat(0.7719),doubleToFloat(0.8477),doubleToFloat(0.7713),doubleToFloat(0.8707),doubleToFloat(0.7717),doubleToFloat(0.9112),doubleToFloat(0.7717),doubleToFloat(0.9342),doubleToFloat(0.7713)], Java.type("float[]"))));
  this.x3dModel = new X3D().setProfile("Immersive").setVersion("4.0")
  .setHead(new head()
    .addComponent(new component().setName("HAnim").setLevel(1))
    .addMeta(new meta().setName("title").setContent("KoreanCharacter05Ju.x3d"))
    .addMeta(new meta().setName("creator").setContent("Jin Hoon Lee and Min Joo Lee"))
    .addMeta(new meta().setName("translator").setContent("Chul Hee Jung and Myeong Won Lee"))
    .addMeta(new meta().setName("created").setContent("31 March 2011"))
    .addMeta(new meta().setName("translated").setContent("1 November 2014"))
    .addMeta(new meta().setName("modified").setContent("23 December 2021"))
    .addMeta(new meta().setName("warning").setContent("HAnimJoint and HAnimSegment names upgraded to HAnim2 but graph topology has inconsistencies that do not match loa=1 specification hierarchy"))
    .addMeta(new meta().setName("description").setContent("Articulated 3D game character designed with a general graphics tool, then converted into an X3D HAnim model."))
    .addMeta(new meta().setName("reference").setContent("KoreanCharacter00ReadMe.txt"))
    .addMeta(new meta().setName("reference").setContent("KoreanCharacterHumanMotion_Infotech2014_140706.pdf"))
    .addMeta(new meta().setName("reference").setContent("KoreanCharactersIllustrated.pdf"))
    .addMeta(new meta().setName("identifier").setContent("https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Characters/KoreanCharacter05Ju.x3d"))
    .addMeta(new meta().setName("generator").setContent("3DS MAX, http://www.autodesk.com/products/autodesk-3ds-max/overview"))
    .addMeta(new meta().setName("generator").setContent("Suwon University HAnim Editor"))
    .addMeta(new meta().setName("generator").setContent("Gnu Image Manipulation Program, http://www.gimp.org"))
    .addMeta(new meta().setName("generator").setContent("X3D-Edit 3.3, https://savage.nps.edu/X3D-Edit"))
    .addMeta(new meta().setName("license").setContent("../license.html")))
  .setScene(new Scene()
    .addChild(new WorldInfo().setTitle("KoreanCharacter05Ju.x3d"))
    .addChild(new NavigationInfo().setSpeed(1.5))
    .addChild(new Viewpoint().setDescription("Ju").setCenterOfRotation(doubleToFloat(0.0),doubleToFloat(1.0),doubleToFloat(0.0)).setPosition(doubleToFloat(0.0),doubleToFloat(1.0),doubleToFloat(3.0)))
    .addChild(new HAnimHumanoid("hanim_Ju").setName("Ju").setScale(doubleToFloat(0.0225),doubleToFloat(0.0225),doubleToFloat(0.0225)).setVersion("2.0")
      .addComments(" original HAnimHumanoid info='\"authorName=Chul Hee Jung and Myeong Won Lee\" \"authorEmail=myeongwonlee@gmail.com\" \"creationDate=31 March 2011\" \"humanoidVersion=2.0\" \"gender=female\" \"height=1.5\"' ")
      .setMetadata(new MetadataSet().setName("HAnimHumanoid.info").setReference(this.MetadataSet_HAnimHumanoid.info_4_23_reference)
        .addValue(new MetadataString().setName("authorName").setValue(new MFString("\"Chul Hee Jung and Myeong Won Lee\"")))
        .addValue(new MetadataString().setName("authorEmail").setValue(new MFString("\"myeongwonlee@gmail.com\"")))
        .addValue(new MetadataString().setName("creationDate").setValue(new MFString("\"31 March 2011\"")))
        .addValue(new MetadataString().setName("gender").setValue(new MFString("\"female\"")))
        .addValue(new MetadataFloat().setName("height").setValue(Java.to([doubleToFloat(1.5)], Java.type("float[]"))))
        .addValue(new MetadataString().setName("humanoidVersion").setValue(new MFString("\"2.0\""))))
      .addSkeleton(new HAnimJoint("hanim_humanoid_root").setName("humanoid_root").setCenter(doubleToFloat(0.0),doubleToFloat(36.0),doubleToFloat(-0.008798))
        .addChild(new HAnimSegment("hanim_sacrum").setName("sacrum")
          .addChild(new Transform().setTranslation(doubleToFloat(0.0),doubleToFloat(36.0),doubleToFloat(-0.008798))
            .addChild(new Shape()
              .setAppearance(new Appearance()
                .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588000),doubleToFloat(0.588000),doubleToFloat(0.588000)))
                .setTexture(new ImageTexture("JuTextureAtlas").setUrl(new MFString("\"images/Ju.png\" \"https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Characters/images/Ju.png\""))))
              .setGeometry(new IndexedFaceSet().setCreaseAngle(1.57).setCoordIndex(this.IndexedFaceSet_8_33_coordIndex).setTexCoordIndex(this.IndexedFaceSet_8_33_texCoordIndex)
                .setCoord(new Coordinate().setPoint(this.Coordinate_9_33_point))
                .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_9_34_point))))))
        .addChild(new HAnimJoint("hanim_l_hip").setName("l_hip").setCenter(doubleToFloat(3.220000),doubleToFloat(33.619999),doubleToFloat(-0.283200))
          .addChild(new HAnimSegment("hanim_l_thigh").setName("l_thigh")
            .addChild(new Transform().setTranslation(doubleToFloat(3.220000),doubleToFloat(33.619999),doubleToFloat(-0.283200))
              .addChild(new Shape()
                .setAppearance(new Appearance()
                  .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588000),doubleToFloat(0.588000),doubleToFloat(0.588000)))
                  .setTexture(new ImageTexture().setUSE("JuTextureAtlas")))
                .setGeometry(new IndexedFaceSet().setCreaseAngle(1.57).setCoordIndex(this.IndexedFaceSet_9_42_coordIndex).setTexCoordIndex(this.IndexedFaceSet_9_42_texCoordIndex)
                  .setCoord(new Coordinate().setPoint(this.Coordinate_10_42_point))
                  .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_10_43_point))))))
          .addChild(new HAnimJoint("hanim_l_knee").setName("l_knee").setCenter(doubleToFloat(3.454000),doubleToFloat(18.670000),doubleToFloat(-0.021580))
            .addChild(new HAnimSegment("hanim_l_calf").setName("l_calf")
              .addChild(new Transform().setTranslation(doubleToFloat(3.454000),doubleToFloat(18.670000),doubleToFloat(-0.021580))
                .addChild(new Shape()
                  .setAppearance(new Appearance()
                    .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588000),doubleToFloat(0.588000),doubleToFloat(0.588000)))
                    .setTexture(new ImageTexture().setUSE("JuTextureAtlas")))
                  .setGeometry(new IndexedFaceSet().setCreaseAngle(1.57).setCoordIndex(this.IndexedFaceSet_10_51_coordIndex).setTexCoordIndex(this.IndexedFaceSet_10_51_texCoordIndex)
                    .setCoord(new Coordinate().setPoint(this.Coordinate_11_51_point))
                    .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_11_52_point))))))
            .addChild(new HAnimJoint("hanim_l_talocrural").setName("l_talocrural").setCenter(doubleToFloat(3.467000),doubleToFloat(3.522000),doubleToFloat(0.118000))
              .addChild(new HAnimSegment("hanim_l_talus").setName("l_talus")
                .addChild(new Transform().setTranslation(doubleToFloat(3.467000),doubleToFloat(3.522000),doubleToFloat(0.118000))
                  .addChild(new Shape()
                    .setAppearance(new Appearance()
                      .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588000),doubleToFloat(0.588000),doubleToFloat(0.588000)))
                      .setTexture(new ImageTexture().setUSE("JuTextureAtlas")))
                    .setGeometry(new IndexedFaceSet().setCreaseAngle(1.57).setCoordIndex(this.IndexedFaceSet_11_60_coordIndex).setTexCoordIndex(this.IndexedFaceSet_11_60_texCoordIndex)
                      .setCoord(new Coordinate().setPoint(this.Coordinate_12_60_point))
                      .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_12_61_point))))))
              .addChild(new HAnimJoint("hanim_l_metatarsophalangeal_2").setName("l_metatarsophalangeal_2").setCenter(doubleToFloat(3.467000),doubleToFloat(3.251000),doubleToFloat(1.465000))
                .addChild(new HAnimSegment("hanim_l_tarsal_proximal_phalanx_2").setName("l_tarsal_proximal_phalanx_2")
                  .addChild(new Transform().setTranslation(doubleToFloat(3.467000),doubleToFloat(3.251000),doubleToFloat(1.465000))
                    .addChild(new Shape()
                      .setAppearance(new Appearance()
                        .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588000),doubleToFloat(0.588000),doubleToFloat(0.588000)))
                        .setTexture(new ImageTexture().setUSE("JuTextureAtlas")))
                      .setGeometry(new IndexedFaceSet().setCreaseAngle(1.57).setCoordIndex(this.IndexedFaceSet_12_69_coordIndex).setTexCoordIndex(this.IndexedFaceSet_12_69_texCoordIndex)
                        .setCoord(new Coordinate().setPoint(this.Coordinate_13_69_point))
                        .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_13_70_point))))))))))
        .addChild(new HAnimJoint("hanim_r_hip").setName("r_hip").setCenter(doubleToFloat(-3.220000),doubleToFloat(33.619999),doubleToFloat(-0.283200))
          .addChild(new HAnimSegment("hanim_r_thigh").setName("r_thigh")
            .addChild(new Transform().setTranslation(doubleToFloat(-3.220000),doubleToFloat(33.619999),doubleToFloat(-0.283200))
              .addChild(new Shape()
                .setAppearance(new Appearance()
                  .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588000),doubleToFloat(0.588000),doubleToFloat(0.588000)))
                  .setTexture(new ImageTexture().setUSE("JuTextureAtlas")))
                .setGeometry(new IndexedFaceSet().setCreaseAngle(1.57).setCoordIndex(this.IndexedFaceSet_9_82_coordIndex).setTexCoordIndex(this.IndexedFaceSet_9_82_texCoordIndex)
                  .setCoord(new Coordinate().setPoint(this.Coordinate_10_82_point))
                  .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_10_83_point))))))
          .addChild(new HAnimJoint("hanim_r_knee").setName("r_knee").setCenter(doubleToFloat(-3.454000),doubleToFloat(18.670000),doubleToFloat(-0.021580))
            .addChild(new HAnimSegment("hanim_r_calf").setName("r_calf")
              .addChild(new Transform().setTranslation(doubleToFloat(-3.454000),doubleToFloat(18.670000),doubleToFloat(-0.021580))
                .addChild(new Shape()
                  .setAppearance(new Appearance()
                    .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588000),doubleToFloat(0.588000),doubleToFloat(0.588000)))
                    .setTexture(new ImageTexture().setUSE("JuTextureAtlas")))
                  .setGeometry(new IndexedFaceSet().setCreaseAngle(1.57).setCoordIndex(this.IndexedFaceSet_10_91_coordIndex).setTexCoordIndex(this.IndexedFaceSet_10_91_texCoordIndex)
                    .setCoord(new Coordinate().setPoint(this.Coordinate_11_91_point))
                    .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_11_92_point))))))
            .addChild(new HAnimJoint("hanim_r_talocrural").setName("r_talocrural").setCenter(doubleToFloat(-3.679000),doubleToFloat(3.522000),doubleToFloat(0.118000))
              .addChild(new HAnimSegment("hanim_r_talus").setName("r_talus")
                .addChild(new Transform().setTranslation(doubleToFloat(-3.679000),doubleToFloat(3.522000),doubleToFloat(0.118000))
                  .addChild(new Shape()
                    .setAppearance(new Appearance()
                      .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588000),doubleToFloat(0.588000),doubleToFloat(0.588000)))
                      .setTexture(new ImageTexture().setUSE("JuTextureAtlas")))
                    .setGeometry(new IndexedFaceSet().setCreaseAngle(1.57).setCoordIndex(this.IndexedFaceSet_11_100_coordIndex).setTexCoordIndex(this.IndexedFaceSet_11_100_texCoordIndex)
                      .setCoord(new Coordinate().setPoint(this.Coordinate_12_100_point))
                      .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_12_101_point))))))
              .addChild(new HAnimJoint("hanim_r_metatarsophalangeal_2").setName("r_metatarsophalangeal_2").setCenter(doubleToFloat(-3.679000),doubleToFloat(3.251000),doubleToFloat(1.465000))
                .addChild(new HAnimSegment("hanim_r_tarsal_proximal_phalanx_2").setName("r_tarsal_proximal_phalanx_2")
                  .addChild(new Transform().setTranslation(doubleToFloat(-3.679000),doubleToFloat(3.251000),doubleToFloat(1.465000))
                    .addChild(new Shape()
                      .setAppearance(new Appearance()
                        .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588000),doubleToFloat(0.588000),doubleToFloat(0.588000)))
                        .setTexture(new ImageTexture().setUSE("JuTextureAtlas")))
                      .setGeometry(new IndexedFaceSet().setCreaseAngle(1.57).setCoordIndex(this.IndexedFaceSet_12_109_coordIndex).setTexCoordIndex(this.IndexedFaceSet_12_109_texCoordIndex)
                        .setCoord(new Coordinate().setPoint(this.Coordinate_13_109_point))
                        .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_13_110_point))))))))))
        .addChild(new HAnimJoint("hanim_sacroiliac").setName("sacroiliac").setCenter(doubleToFloat(0.000034),doubleToFloat(31.260000),doubleToFloat(-0.008798))
          .addChild(new HAnimSegment("hanim_pelvis").setName("pelvis")
            .addChild(new Transform().setTranslation(doubleToFloat(0.000034),doubleToFloat(31.260000),doubleToFloat(-0.008798))
              .addChild(new Shape()
                .setAppearance(new Appearance()
                  .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588000),doubleToFloat(0.588000),doubleToFloat(0.588000)))
                  .setTexture(new ImageTexture().setUSE("JuTextureAtlas")))
                .setGeometry(new IndexedFaceSet().setCreaseAngle(1.57).setCoordIndex(this.IndexedFaceSet_9_122_coordIndex).setTexCoordIndex(this.IndexedFaceSet_9_122_texCoordIndex)
                  .setCoord(new Coordinate().setPoint(this.Coordinate_10_122_point))
                  .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_10_123_point))))))
          .addChild(new HAnimJoint("hanim_l_shoulder").setName("l_shoulder").setCenter(doubleToFloat(4.778000),doubleToFloat(51.029999),doubleToFloat(-2.069000))
            .addChild(new HAnimSegment("hanim_l_upperarm").setName("l_upperarm")
              .addChild(new Transform().setTranslation(doubleToFloat(4.778000),doubleToFloat(51.029999),doubleToFloat(-2.069000))
                .addChild(new Shape()
                  .setAppearance(new Appearance()
                    .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588000),doubleToFloat(0.588000),doubleToFloat(0.588000)))
                    .setTexture(new ImageTexture().setUSE("JuTextureAtlas")))
                  .setGeometry(new IndexedFaceSet().setCreaseAngle(1.57).setCoordIndex(this.IndexedFaceSet_10_131_coordIndex).setTexCoordIndex(this.IndexedFaceSet_10_131_texCoordIndex)
                    .setCoord(new Coordinate().setPoint(this.Coordinate_11_131_point))
                    .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_11_132_point))))))
            .addChild(new HAnimJoint("hanim_l_elbow").setName("l_elbow").setCenter(doubleToFloat(5.297000),doubleToFloat(40.119999),doubleToFloat(-2.055000))
              .addChild(new HAnimSegment("hanim_l_forearm").setName("l_forearm")
                .addChild(new Transform().setTranslation(doubleToFloat(5.297000),doubleToFloat(40.119999),doubleToFloat(-2.055000))
                  .addChild(new Shape()
                    .setAppearance(new Appearance()
                      .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588000),doubleToFloat(0.588000),doubleToFloat(0.588000)))
                      .setTexture(new ImageTexture().setUSE("JuTextureAtlas")))
                    .setGeometry(new IndexedFaceSet().setCreaseAngle(1.57).setCoordIndex(this.IndexedFaceSet_11_140_coordIndex).setTexCoordIndex(this.IndexedFaceSet_11_140_texCoordIndex)
                      .setCoord(new Coordinate().setPoint(this.Coordinate_12_140_point))
                      .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_12_141_point))))))
              .addChild(new HAnimJoint("hanim_l_radiocarpal").setName("l_radiocarpal").setCenter(doubleToFloat(5.070000),doubleToFloat(31.990000),doubleToFloat(-1.559000))
                .addChild(new HAnimSegment("hanim_l_carpal").setName("l_carpal")
                  .addChild(new Transform().setTranslation(doubleToFloat(5.070000),doubleToFloat(31.990000),doubleToFloat(-1.559000))
                    .addChild(new Shape()
                      .setAppearance(new Appearance()
                        .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588000),doubleToFloat(0.588000),doubleToFloat(0.588000)))
                        .setTexture(new ImageTexture().setUSE("JuTextureAtlas")))
                      .setGeometry(new IndexedFaceSet().setCreaseAngle(1.57).setCoordIndex(this.IndexedFaceSet_12_149_coordIndex).setTexCoordIndex(this.IndexedFaceSet_12_149_texCoordIndex)
                        .setCoord(new Coordinate().setPoint(this.Coordinate_13_149_point))
                        .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_13_150_point)))))))))
          .addChild(new HAnimJoint("hanim_r_shoulder").setName("r_shoulder").setCenter(doubleToFloat(-4.778000),doubleToFloat(51.029999),doubleToFloat(-2.069000))
            .addChild(new HAnimSegment("hanim_r_upperarm").setName("r_upperarm")
              .addChild(new Transform().setTranslation(doubleToFloat(-4.778000),doubleToFloat(51.029999),doubleToFloat(-2.069000))
                .addChild(new Shape()
                  .setAppearance(new Appearance()
                    .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588000),doubleToFloat(0.588000),doubleToFloat(0.588000)))
                    .setTexture(new ImageTexture().setUSE("JuTextureAtlas")))
                  .setGeometry(new IndexedFaceSet().setCreaseAngle(1.57).setCoordIndex(this.IndexedFaceSet_10_161_coordIndex).setTexCoordIndex(this.IndexedFaceSet_10_161_texCoordIndex)
                    .setCoord(new Coordinate().setPoint(this.Coordinate_11_161_point))
                    .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_11_162_point))))))
            .addChild(new HAnimJoint("hanim_r_elbow").setName("r_elbow").setCenter(doubleToFloat(-5.297000),doubleToFloat(40.119999),doubleToFloat(-2.055000))
              .addChild(new HAnimSegment("hanim_r_forearm").setName("r_forearm")
                .addChild(new Transform().setTranslation(doubleToFloat(-5.297000),doubleToFloat(40.119999),doubleToFloat(-2.055000))
                  .addChild(new Shape()
                    .setAppearance(new Appearance()
                      .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588000),doubleToFloat(0.588000),doubleToFloat(0.588000)))
                      .setTexture(new ImageTexture().setUSE("JuTextureAtlas")))
                    .setGeometry(new IndexedFaceSet().setCreaseAngle(1.57).setCoordIndex(this.IndexedFaceSet_11_170_coordIndex).setTexCoordIndex(this.IndexedFaceSet_11_170_texCoordIndex)
                      .setCoord(new Coordinate().setPoint(this.Coordinate_12_170_point))
                      .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_12_171_point))))))
              .addChild(new HAnimJoint("hanim_r_radiocarpal").setName("r_radiocarpal").setCenter(doubleToFloat(-5.070000),doubleToFloat(31.990000),doubleToFloat(-1.559000))
                .addChild(new HAnimSegment("hanim_r_carpal").setName("r_carpal")
                  .addChild(new Transform().setTranslation(doubleToFloat(-5.070000),doubleToFloat(31.990000),doubleToFloat(-1.559000))
                    .addChild(new Shape()
                      .setAppearance(new Appearance()
                        .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588000),doubleToFloat(0.588000),doubleToFloat(0.588000)))
                        .setTexture(new ImageTexture().setUSE("JuTextureAtlas")))
                      .setGeometry(new IndexedFaceSet().setCreaseAngle(1.57).setCoordIndex(this.IndexedFaceSet_12_179_coordIndex).setTexCoordIndex(this.IndexedFaceSet_12_179_texCoordIndex)
                        .setCoord(new Coordinate().setPoint(this.Coordinate_13_179_point))
                        .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_13_180_point)))))))))
          .addChild(new HAnimJoint("hanim_vl5").setName("vl5").setCenter(doubleToFloat(0.000025),doubleToFloat(39.840000),doubleToFloat(0.116300))
            .addChild(new HAnimSegment("hanim_l5").setName("l5")
              .addChild(new Transform().setTranslation(doubleToFloat(0.000025),doubleToFloat(39.840000),doubleToFloat(0.116300))
                .addChild(new Shape()
                  .setAppearance(new Appearance()
                    .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588000),doubleToFloat(0.588000),doubleToFloat(0.588000)))
                    .setTexture(new ImageTexture().setUSE("JuTextureAtlas")))
                  .setGeometry(new IndexedFaceSet().setCreaseAngle(1.57).setCoordIndex(this.IndexedFaceSet_10_191_coordIndex).setTexCoordIndex(this.IndexedFaceSet_10_191_texCoordIndex)
                    .setCoord(new Coordinate().setPoint(this.Coordinate_11_191_point))
                    .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_11_192_point))))))
            .addChild(new HAnimJoint("hanim_skullbase").setName("skullbase").setCenter(doubleToFloat(0.000025),doubleToFloat(56.070000),doubleToFloat(-1.554000))
              .addChild(new HAnimSegment("hanim_skull").setName("skull")
                .addChild(new Transform().setTranslation(doubleToFloat(0.000025),doubleToFloat(56.070000),doubleToFloat(-1.554000))
                  .addChild(new Shape()
                    .setAppearance(new Appearance()
                      .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588000),doubleToFloat(0.588000),doubleToFloat(0.588000)))
                      .setTexture(new ImageTexture().setUSE("JuTextureAtlas")))
                    .setGeometry(new IndexedFaceSet().setCreaseAngle(1.57).setCoordIndex(this.IndexedFaceSet_11_200_coordIndex).setTexCoordIndex(this.IndexedFaceSet_11_200_texCoordIndex)
                      .setCoord(new Coordinate().setPoint(this.Coordinate_12_200_point))
                      .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_12_201_point))))))))))
      .addJoints(new HAnimJoint().setUSE("hanim_humanoid_root"))
      .addJoints(new HAnimJoint().setUSE("hanim_sacroiliac"))
      .addJoints(new HAnimJoint().setUSE("hanim_skullbase"))
      .addJoints(new HAnimJoint().setUSE("hanim_vl5"))
      .addJoints(new HAnimJoint().setUSE("hanim_l_elbow"))
      .addJoints(new HAnimJoint().setUSE("hanim_r_elbow"))
      .addJoints(new HAnimJoint().setUSE("hanim_l_hip"))
      .addJoints(new HAnimJoint().setUSE("hanim_r_hip"))
      .addJoints(new HAnimJoint().setUSE("hanim_l_knee"))
      .addJoints(new HAnimJoint().setUSE("hanim_r_knee"))
      .addJoints(new HAnimJoint().setUSE("hanim_l_metatarsophalangeal_2"))
      .addJoints(new HAnimJoint().setUSE("hanim_r_metatarsophalangeal_2"))
      .addJoints(new HAnimJoint().setUSE("hanim_l_radiocarpal"))
      .addJoints(new HAnimJoint().setUSE("hanim_r_radiocarpal"))
      .addJoints(new HAnimJoint().setUSE("hanim_l_shoulder"))
      .addJoints(new HAnimJoint().setUSE("hanim_r_shoulder"))
      .addJoints(new HAnimJoint().setUSE("hanim_l_talocrural"))
      .addJoints(new HAnimJoint().setUSE("hanim_r_talocrural"))
      .addSegments(new HAnimSegment().setUSE("hanim_l5"))
      .addSegments(new HAnimSegment().setUSE("hanim_pelvis"))
      .addSegments(new HAnimSegment().setUSE("hanim_sacrum"))
      .addSegments(new HAnimSegment().setUSE("hanim_skull"))
      .addSegments(new HAnimSegment().setUSE("hanim_l_calf"))
      .addSegments(new HAnimSegment().setUSE("hanim_r_calf"))
      .addSegments(new HAnimSegment().setUSE("hanim_l_carpal"))
      .addSegments(new HAnimSegment().setUSE("hanim_r_carpal"))
      .addSegments(new HAnimSegment().setUSE("hanim_l_forearm"))
      .addSegments(new HAnimSegment().setUSE("hanim_r_forearm"))
      .addSegments(new HAnimSegment().setUSE("hanim_l_talus"))
      .addSegments(new HAnimSegment().setUSE("hanim_r_talus"))
      .addSegments(new HAnimSegment().setUSE("hanim_l_tarsal_proximal_phalanx_2"))
      .addSegments(new HAnimSegment().setUSE("hanim_r_tarsal_proximal_phalanx_2"))
      .addSegments(new HAnimSegment().setUSE("hanim_l_thigh"))
      .addSegments(new HAnimSegment().setUSE("hanim_r_thigh"))
      .addSegments(new HAnimSegment().setUSE("hanim_l_upperarm"))
      .addSegments(new HAnimSegment().setUSE("hanim_r_upperarm"))));
  },
  // end of initialize() method


  /** Provide a shallow copy of the X3D model.
   * @return KoreanCharacter05Ju model
   */
  getX3dModel : function()
  {	  
	  return this.x3dModel;
  },
  
  /** Indicate X3DJSAIL validation results for this X3D model.
   * @return validation results plus exception information, if any
   */
  validateSelf : function()
  {
	var       metaResult = "";
	var validationResult = "";
	var  exceptionResult = "";
	try
	{
		this.initialize();
		
		if ((this.getX3dModel() == null) || (this.getX3dModel().getHead() == null))
		{
			validationResult = "empty scene, nothing to validate. " + this.x3dModel.validate();
			return validationResult;
		}
		// first list informational meta elements of interest
		var metaList = this.getX3dModel().getHead().getMetaList();
		for (var m in metaList) {
			var metaObject = metaList[m];
			if (metaObject.getName() === metaObject.NAME_ERROR ||
				metaObject.getName() === metaObject.NAME_WARNING ||
				metaObject.getName() === metaObject.NAME_HINT ||
				metaObject.getName() === metaObject.NAME_INFO ||
				metaObject.getName() === metaObject.NAME_TODO)
			{
				metaResult += metaObject.toStringX3D();
			}
		}
		validationResult += this.x3dModel.validate(); // walk entire tree to validate correctness
	}
	catch (e)
	{
		exceptionResult = e; // report exception failures, if any
	}
	if  (metaResult === "" && exceptionResult === "" && validationResult === "")
	     return "success";
	else
	{
		var returnMessage = metaResult;
		if  (exceptionResult !== "" && validationResult !== "")
			returnMessage += "\n*** ";
		returnMessage += exceptionResult;
		if  (exceptionResult === "" && validationResult !== "")
			returnMessage = "\n" + returnMessage; // skip line before meta tags, etc.
		returnMessage += validationResult;
		return returnMessage;
	}
  },
    /** Default main() method provided for test purposes.
     * @param argv input parameters
     */
    main : function (argv)
    {
		var testObject = new KoreanCharacter05Ju();
		print ("KoreanCharacter05Ju execution self-validation test results: " + testObject.validateSelf());
	}
}
new KoreanCharacter05Ju().main();