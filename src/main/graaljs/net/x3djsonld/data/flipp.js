load('X3Dautoclass.js');

// Javadoc annotations follow, see below for source.
/**
 * <p> flipper flopping around. </p>
 <p> Related links: flipp.java source, <a href="https://www.web3d.org/x3d/content/examples/X3dResources.html" target="_blank">X3D Resources</a>, <a href="https://www.web3d.org/x3d/content/examples/X3dSceneAuthoringHints.html" target="_blank">X3D Scene Authoring Hints</a> and <a href="https://www.web3d.org/x3d/content/X3dTooltips.html" target="_blank">X3D Tooltips</a>. </p>
	<table style="color:black; border:0px solid; border-spacing:10px 0px;" summary="Scene Metadata">
		<tr style="background-color:silver; border-color:silver;">
			<td style="text-align:center; padding:10px 0px;"><i>meta tags</i></td>
			<td style="text-align:left;   padding:10px 0px;">net.x3djsonld.data.flipp&nbsp; Document Metadata </td>
		</tr>

		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> generator </i> </td>
			<td> hand conversion from <a href="http://www.x3dom.org/x3dom/test/functional/flipper.html" target="_blank">http://www.x3dom.org/x3dom/test/functional/flipper.html</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> title </i> </td>
			<td> <a href="http://www.x3dom.org/x3dom/test/functional/flipp.x3d">flipp.x3d</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> description </i> </td>
			<td> flipper flopping around </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> identifier </i> </td>
			<td> <a href="http://www.x3dom.org/x3dom/test/functional/flipp.x3d" target="_blank">http://www.x3dom.org/x3dom/test/functional/flipp.x3d</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> creator </i> </td>
			<td> Yvonne Jung, metadata by John Carlson </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> translated </i> </td>
			<td> 13 March 2016 </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> generator </i> </td>
			<td> X3dToJson.xslt, <a href="https://www.web3d.org/x3d/stylesheets/X3dToJson.html" target="_blank">https://www.web3d.org/x3d/stylesheets/X3dToJson.html</a> </td>
		</tr>
		<tr style="background-color:silver; border-color:silver;">
			<td style="text-align:center;" colspan="2">  &nbsp; </td>
		</tr>
	</table>

	<p>
		This program uses the
		<a href="https://www.web3d.org/specifications/java/X3DJSAIL.html" target="_blank">X3D Java Scene Access Interface Library (X3DJSAIL)</a>.
		It has been produced using the 
		<a href="https://www.web3d.org/x3d/stylesheets/X3dToES5.xslt" target="_blank">X3dToES5.xslt</a>
		stylesheet to create ES5 source code from an <code>.x3d</code> scene.
	</p>

	* @author Yvonne Jung, metadata by John Carlson
 */

function flipp
  /** Default constructor to create this object. */
  ()
  {
    /** The initialized model object, created within initialize() method. */
    this.x3dModel = {};
    this.initialize();
    return this;
  }
  function doubleToFloat(d) {
    if (Float32Array) {
        return new Float32Array([d])[0];
    }
  }
flipp.prototype = {
  /** Create and initialize the X3D model. */
  initialize : function ()
  {

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=5, element #17, 2256 total numbers */
	this.IndexedFaceSet_5_17_coordIndex = new MFInt32(Java.to([0,1,2,-1,2,3,0,-1,3,2,4,-1,4,5,3,-1,5,4,6,-1,6,7,5,-1,7,6,8,-1,9,10,11,-1,12,0,3,-1,3,13,12,-1,13,3,5,-1,5,14,13,-1,14,5,7,-1,15,16,17,-1,16,15,18,-1,18,19,16,-1,20,21,22,-1,22,23,20,-1,24,20,23,-1,23,22,25,-1,25,26,23,-1,26,25,1,-1,1,0,26,-1,26,0,27,-1,27,0,12,-1,12,28,27,-1,28,12,9,-1,9,29,28,-1,29,9,11,-1,30,29,11,-1,11,31,30,-1,30,31,32,-1,32,33,30,-1,33,32,34,-1,34,35,33,-1,35,34,36,-1,36,37,35,-1,37,36,38,-1,38,39,37,-1,39,38,40,-1,40,41,39,-1,42,19,24,-1,43,42,24,-1,44,43,24,-1,24,23,44,-1,44,23,26,-1,26,45,44,-1,45,26,27,-1,27,46,45,-1,46,27,28,-1,28,47,46,-1,47,28,29,-1,29,48,47,-1,48,29,30,-1,30,49,48,-1,49,30,33,-1,43,50,51,-1,51,42,43,-1,42,51,52,-1,52,19,42,-1,19,52,53,-1,53,16,19,-1,16,53,54,-1,50,55,56,-1,56,51,50,-1,51,56,52,-1,53,57,54,-1,58,59,60,-1,60,57,58,-1,61,62,63,-1,63,64,61,-1,16,54,64,-1,64,17,16,-1,17,64,63,-1,65,52,66,-1,66,67,65,-1,68,53,52,-1,52,65,68,-1,68,65,67,-1,67,69,68,-1,57,68,69,-1,69,58,57,-1,59,58,70,-1,70,71,59,-1,70,58,69,-1,69,72,70,-1,69,67,73,-1,72,73,74,-1,74,75,72,-1,64,54,57,-1,76,67,66,-1,76,66,77,-1,76,77,55,-1,76,55,78,-1,76,78,73,-1,76,73,67,-1,79,80,71,-1,71,70,79,-1,75,79,70,-1,70,72,75,-1,81,75,82,-1,82,74,81,-1,83,81,74,-1,75,81,84,-1,84,85,75,-1,83,74,86,-1,86,87,83,-1,86,74,88,-1,88,89,86,-1,74,78,88,-1,88,78,55,-1,55,90,88,-1,55,50,43,-1,43,91,55,-1,90,55,91,-1,88,90,92,-1,92,89,88,-1,89,92,93,-1,93,94,89,-1,94,93,95,-1,95,96,94,-1,96,95,97,-1,97,98,96,-1,98,97,99,-1,99,100,98,-1,100,99,101,-1,101,102,100,-1,102,101,103,-1,103,104,102,-1,104,103,105,-1,105,106,104,-1,106,105,107,-1,107,108,106,-1,92,90,91,-1,92,91,44,-1,44,91,43,-1,92,44,45,-1,45,93,92,-1,93,45,46,-1,46,95,93,-1,95,46,47,-1,47,97,95,-1,97,47,48,-1,48,99,97,-1,99,48,49,-1,49,101,99,-1,101,49,33,-1,33,103,101,-1,103,33,35,-1,35,105,103,-1,105,35,37,-1,37,107,105,-1,107,37,39,-1,39,109,107,-1,109,39,41,-1,86,89,94,-1,94,110,86,-1,110,94,96,-1,96,111,110,-1,111,96,98,-1,98,112,111,-1,112,98,100,-1,100,113,112,-1,113,100,102,-1,102,114,113,-1,114,102,104,-1,104,115,114,-1,115,104,106,-1,106,116,115,-1,116,106,108,-1,108,117,116,-1,117,108,118,-1,87,86,119,-1,119,120,87,-1,119,86,110,-1,110,121,119,-1,119,121,122,-1,122,123,119,-1,124,119,123,-1,110,111,125,-1,125,126,110,-1,127,113,114,-1,114,128,127,-1,129,116,117,-1,117,130,129,-1,131,83,87,-1,87,132,131,-1,132,87,110,-1,110,126,132,-1,133,81,83,-1,83,131,133,-1,134,84,81,-1,81,133,134,-1,135,136,84,-1,84,134,135,-1,136,85,84,-1,135,137,138,-1,138,136,135,-1,139,140,141,-1,142,143,41,-1,41,144,142,-1,145,142,144,-1,144,146,145,-1,107,109,147,-1,147,108,107,-1,108,147,118,-1,64,57,60,-1,60,61,64,-1,61,148,149,-1,149,62,61,-1,148,61,60,-1,60,59,148,-1,85,79,75,-1,85,136,80,-1,80,79,85,-1,138,80,136,-1,80,138,150,-1,150,71,80,-1,71,150,148,-1,148,59,71,-1,150,138,137,-1,137,151,150,-1,151,149,148,-1,148,150,151,-1,66,52,56,-1,56,55,77,-1,73,78,74,-1,53,68,57,-1,56,77,66,-1,123,152,153,-1,153,124,123,-1,120,119,124,-1,124,153,120,-1,152,123,122,-1,87,120,121,-1,121,110,87,-1,153,152,122,-1,122,121,153,-1,120,153,121,-1,12,13,10,-1,10,9,12,-1,14,154,10,-1,10,13,14,-1,8,155,154,-1,154,14,8,-1,7,8,14,-1,156,112,113,-1,113,127,156,-1,111,112,156,-1,156,125,111,-1,115,116,129,-1,129,157,115,-1,115,157,128,-1,128,114,115,-1,158,130,117,-1,117,118,158,-1,140,159,160,-1,160,161,140,-1,118,147,161,-1,161,160,118,-1,159,140,139,-1,40,144,41,-1,146,158,118,-1,162,145,146,-1,146,118,162,-1,160,162,118,-1,159,141,162,-1,162,160,159,-1,139,141,159,-1,162,141,140,-1,140,161,162,-1,142,145,162,-1,162,161,142,-1,143,142,161,-1,147,143,161,-1,109,41,143,-1,143,147,109,-1,20,163,21,-1,163,20,19,-1,19,18,163,-1,20,24,19,-1,164,2,1,-1,1,165,164,-1,166,4,2,-1,2,164,166,-1,167,6,4,-1,4,166,167,-1,8,6,167,-1,11,10,168,-1,169,164,165,-1,165,170,169,-1,171,166,164,-1,164,169,171,-1,167,166,171,-1,17,172,15,-1,173,18,15,-1,15,172,173,-1,22,21,174,-1,174,175,22,-1,176,22,175,-1,177,25,22,-1,22,176,177,-1,165,1,25,-1,25,177,165,-1,178,165,177,-1,179,170,165,-1,165,178,179,-1,180,168,170,-1,170,179,180,-1,11,168,180,-1,31,11,180,-1,180,181,31,-1,182,32,31,-1,31,181,182,-1,183,34,32,-1,32,182,183,-1,184,36,34,-1,34,183,184,-1,185,38,36,-1,36,184,185,-1,186,40,38,-1,38,185,186,-1,175,173,187,-1,175,187,188,-1,176,175,188,-1,188,189,176,-1,190,177,176,-1,176,189,190,-1,191,178,177,-1,177,190,191,-1,192,179,178,-1,178,191,192,-1,193,180,179,-1,179,192,193,-1,194,181,180,-1,180,193,194,-1,182,181,194,-1,187,195,196,-1,196,188,187,-1,173,197,195,-1,195,187,173,-1,198,197,173,-1,173,172,198,-1,199,198,172,-1,195,200,201,-1,201,196,195,-1,197,200,195,-1,199,202,198,-1,202,203,204,-1,204,205,202,-1,206,63,62,-1,62,207,206,-1,17,206,199,-1,199,172,17,-1,63,206,17,-1,208,209,197,-1,197,210,208,-1,210,197,198,-1,198,211,210,-1,212,208,210,-1,210,211,212,-1,205,212,211,-1,211,202,205,-1,213,214,205,-1,205,204,213,-1,215,212,205,-1,205,214,215,-1,216,208,212,-1,217,218,216,-1,216,215,217,-1,202,199,206,-1,209,208,219,-1,220,209,219,-1,201,220,219,-1,221,201,219,-1,216,221,219,-1,208,216,219,-1,214,213,222,-1,222,223,214,-1,215,214,223,-1,223,217,215,-1,224,217,225,-1,225,226,224,-1,218,224,226,-1,227,228,225,-1,225,217,227,-1,229,230,218,-1,218,226,229,-1,231,232,218,-1,218,230,231,-1,232,221,218,-1,233,201,221,-1,221,232,233,-1,188,196,201,-1,201,233,188,-1,234,188,233,-1,231,235,233,-1,233,232,231,-1,236,237,235,-1,235,231,236,-1,238,239,237,-1,237,236,238,-1,240,241,239,-1,239,238,240,-1,242,243,241,-1,241,240,242,-1,244,245,243,-1,243,242,244,-1,246,247,245,-1,245,244,246,-1,248,249,247,-1,247,246,248,-1,250,251,249,-1,249,248,250,-1,234,233,235,-1,189,234,235,-1,188,234,189,-1,237,190,189,-1,189,235,237,-1,239,191,190,-1,190,237,239,-1,241,192,191,-1,191,239,241,-1,243,193,192,-1,192,241,243,-1,245,194,193,-1,193,243,245,-1,247,182,194,-1,194,245,247,-1,249,183,182,-1,182,247,249,-1,251,184,183,-1,183,249,251,-1,252,185,184,-1,184,251,252,-1,186,185,252,-1,253,236,231,-1,231,230,253,-1,254,238,236,-1,236,253,254,-1,255,240,238,-1,238,254,255,-1,256,242,240,-1,240,255,256,-1,257,244,242,-1,242,256,257,-1,258,246,244,-1,244,257,258,-1,259,248,246,-1,246,258,259,-1,260,250,248,-1,248,259,260,-1,261,250,260,-1,262,263,230,-1,230,229,262,-1,264,253,230,-1,230,263,264,-1,265,264,263,-1,263,266,265,-1,267,265,266,-1,126,125,254,-1,254,253,126,-1,128,257,256,-1,256,127,128,-1,130,260,259,-1,259,129,130,-1,132,229,226,-1,226,131,132,-1,126,253,229,-1,229,132,126,-1,131,226,225,-1,225,133,131,-1,133,225,228,-1,228,134,133,-1,134,228,268,-1,268,135,134,-1,228,227,268,-1,268,269,137,-1,137,135,268,-1,270,271,272,-1,144,186,273,-1,273,274,144,-1,146,144,274,-1,274,275,146,-1,250,276,252,-1,252,251,250,-1,261,276,250,-1,207,203,202,-1,202,206,207,-1,62,149,277,-1,277,207,62,-1,204,203,207,-1,207,277,204,-1,217,223,227,-1,223,222,268,-1,268,227,223,-1,268,222,269,-1,213,278,269,-1,269,222,213,-1,204,277,278,-1,278,213,204,-1,151,137,269,-1,269,278,151,-1,278,277,149,-1,149,151,278,-1,200,197,209,-1,220,201,200,-1,218,221,216,-1,202,211,198,-1,209,220,200,-1,266,279,280,-1,280,267,266,-1,279,266,263,-1,263,262,279,-1,265,267,280,-1,253,264,262,-1,262,229,253,-1,265,280,279,-1,279,262,265,-1,264,265,262,-1,168,10,169,-1,169,170,168,-1,169,10,154,-1,154,171,169,-1,154,155,8,-1,8,167,154,-1,171,154,167,-1,127,256,255,-1,255,156,127,-1,125,156,255,-1,255,254,125,-1,157,129,259,-1,259,258,157,-1,257,128,157,-1,157,258,257,-1,261,260,130,-1,130,158,261,-1,281,282,283,-1,283,271,281,-1,282,281,276,-1,276,261,282,-1,272,271,283,-1,186,144,40,-1,261,158,146,-1,146,275,284,-1,284,282,146,-1,261,146,282,-1,282,284,270,-1,270,283,282,-1,283,270,272,-1,281,271,270,-1,270,284,281,-1,281,284,275,-1,275,274,281,-1,281,274,273,-1,281,273,276,-1,276,273,186,-1,186,252,276,-1,21,163,174,-1,18,173,174,-1,174,163,18,-1,173,175,174,-1,212,215,216,-1,73,72,69,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate DEF='pointList' point field, scene-graph level=6, element #17, 855 total numbers made up of 285 3-tuple values */
	this.pointList_6_17_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(-23.495),doubleToFloat(90.55),doubleToFloat(-8.13),doubleToFloat(-28.825),doubleToFloat(91.31),doubleToFloat(0.0),doubleToFloat(9.77497),doubleToFloat(126.11),doubleToFloat(0.0),doubleToFloat(17.395),doubleToFloat(124.84),doubleToFloat(-6.1),doubleToFloat(42.795),doubleToFloat(142.11),doubleToFloat(0.0),doubleToFloat(46.105),doubleToFloat(139.07),doubleToFloat(-3.56),doubleToFloat(74.295),doubleToFloat(144.4),doubleToFloat(0.0),doubleToFloat(76.075),doubleToFloat(140.08),doubleToFloat(-1.27),doubleToFloat(92.325),doubleToFloat(139.57),doubleToFloat(0.0),doubleToFloat(74.805),doubleToFloat(80.9),doubleToFloat(-9.91)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(74.295),doubleToFloat(98.93),doubleToFloat(0.0),doubleToFloat(84.965),doubleToFloat(74.04),doubleToFloat(0.0),doubleToFloat(35.175),doubleToFloat(88.77),doubleToFloat(-11.68),doubleToFloat(50.165),doubleToFloat(110.11),doubleToFloat(-6.1),doubleToFloat(60.835),doubleToFloat(121.79),doubleToFloat(-3.56),doubleToFloat(-194.695),doubleToFloat(-8.0),doubleToFloat(0.0),doubleToFloat(-200.025),doubleToFloat(-15.87),doubleToFloat(-7.62),doubleToFloat(-205.105),doubleToFloat(-19.68),doubleToFloat(0.0),doubleToFloat(-177.165),doubleToFloat(7.75),doubleToFloat(0.0),doubleToFloat(-180.975),doubleToFloat(1.39999),doubleToFloat(-13.97)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-156.335),doubleToFloat(22.23),doubleToFloat(-5.33),doubleToFloat(-151.515),doubleToFloat(27.05),doubleToFloat(0.0),doubleToFloat(-117.475),doubleToFloat(50.67),doubleToFloat(0.0),doubleToFloat(-118.495),doubleToFloat(44.58),doubleToFloat(-18.29),doubleToFloat(-155.325),doubleToFloat(20.19),doubleToFloat(-13.97),doubleToFloat(-74.805),doubleToFloat(71.25),doubleToFloat(0.0),doubleToFloat(-75.565),doubleToFloat(65.91),doubleToFloat(-22.35),doubleToFloat(-26.545),doubleToFloat(75.57),doubleToFloat(-24.64),doubleToFloat(31.625),doubleToFloat(74.04),doubleToFloat(-26.67),doubleToFloat(87.755),doubleToFloat(62.1),doubleToFloat(-20.32)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(154.055),doubleToFloat(26.04),doubleToFloat(-11.68),doubleToFloat(155.325),doubleToFloat(30.1),doubleToFloat(0.0),doubleToFloat(195.965),doubleToFloat(-4.95001),doubleToFloat(0.0),doubleToFloat(188.345),doubleToFloat(-14.1),doubleToFloat(-14.73),doubleToFloat(213.995),doubleToFloat(-28.57),doubleToFloat(0.0),doubleToFloat(204.085),doubleToFloat(-41.02),doubleToFloat(-11.94),doubleToFloat(226.445),doubleToFloat(-52.45),doubleToFloat(0.0),doubleToFloat(217.045),doubleToFloat(-63.88),doubleToFloat(-7.87),doubleToFloat(232.535),doubleToFloat(-72.52),doubleToFloat(0.0),doubleToFloat(226.945),doubleToFloat(-79.88),doubleToFloat(-9.65)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(228.725),doubleToFloat(-91.31),doubleToFloat(0.0),doubleToFloat(224.665),doubleToFloat(-87.5),doubleToFloat(-7.37),doubleToFloat(-157.865),doubleToFloat(13.84),doubleToFloat(-22.35),doubleToFloat(-141.605),doubleToFloat(12.57),doubleToFloat(-32.77),doubleToFloat(-112.145),doubleToFloat(30.61),doubleToFloat(-29.97),doubleToFloat(-75.055),doubleToFloat(47.12),doubleToFloat(-32.0),doubleToFloat(-26.545),doubleToFloat(57.79),doubleToFloat(-35.81),doubleToFloat(24.005),doubleToFloat(56.52),doubleToFloat(-34.04),doubleToFloat(84.455),doubleToFloat(48.64),doubleToFloat(-28.45),doubleToFloat(150.745),doubleToFloat(19.18),doubleToFloat(-18.29)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-153.285),doubleToFloat(-0.380005),doubleToFloat(-36.58),doubleToFloat(-163.445),doubleToFloat(1.14001),doubleToFloat(-31.75),doubleToFloat(-171.065),doubleToFloat(-5.97),doubleToFloat(-27.43),doubleToFloat(-187.325),doubleToFloat(-22.99),doubleToFloat(-20.83),doubleToFloat(-201.545),doubleToFloat(-37.21),doubleToFloat(-10.16),doubleToFloat(-151.005),doubleToFloat(-10.29),doubleToFloat(-35.81),doubleToFloat(-161.925),doubleToFloat(-5.97),doubleToFloat(-30.99),doubleToFloat(-203.325),doubleToFloat(-44.83),doubleToFloat(-13.97),doubleToFloat(-196.465),doubleToFloat(-54.48),doubleToFloat(-14.99),doubleToFloat(-223.135),doubleToFloat(-77.6),doubleToFloat(-7.37)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-228.215),doubleToFloat(-75.31),doubleToFloat(-7.37),doubleToFloat(-233.045),doubleToFloat(-79.12),doubleToFloat(-4.06),doubleToFloat(-234.315),doubleToFloat(-77.6),doubleToFloat(0.0),doubleToFloat(-210.695),doubleToFloat(-46.1),doubleToFloat(0.0),doubleToFloat(-207.895),doubleToFloat(-43.81),doubleToFloat(-5.08),doubleToFloat(-171.835),doubleToFloat(-19.68),doubleToFloat(-30.48),doubleToFloat(-164.465),doubleToFloat(-11.81),doubleToFloat(-30.73),doubleToFloat(-170.815),doubleToFloat(-22.48),doubleToFloat(-30.73),doubleToFloat(-184.275),doubleToFloat(-27.05),doubleToFloat(-26.42),doubleToFloat(-180.975),doubleToFloat(-32.38),doubleToFloat(-25.91)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-192.655),doubleToFloat(-58.29),doubleToFloat(-16.26),doubleToFloat(-216.785),doubleToFloat(-78.61),doubleToFloat(-8.38),doubleToFloat(-174.375),doubleToFloat(-43.31),doubleToFloat(-25.91),doubleToFloat(-165.485),doubleToFloat(-28.07),doubleToFloat(-34.54),doubleToFloat(-142.625),doubleToFloat(-35.94),doubleToFloat(-34.8),doubleToFloat(-171.835),doubleToFloat(-48.89),doubleToFloat(-27.43),doubleToFloat(-160.405),doubleToFloat(-22.73),doubleToFloat(-34.8),doubleToFloat(-158.365),doubleToFloat(-13.59),doubleToFloat(-34.54),doubleToFloat(-144.655),doubleToFloat(-24.26),doubleToFloat(-38.61),doubleToFloat(-191.135),doubleToFloat(-63.37),doubleToFloat(-18.29)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-212.975),doubleToFloat(-81.41),doubleToFloat(-10.92),doubleToFloat(-167.765),doubleToFloat(-70.48),doubleToFloat(-17.02),doubleToFloat(-154.555),doubleToFloat(-41.02),doubleToFloat(-31.75),doubleToFloat(-132.205),doubleToFloat(-61.09),doubleToFloat(-22.35),doubleToFloat(-185.295),doubleToFloat(-71.25),doubleToFloat(-10.16),doubleToFloat(-190.625),doubleToFloat(-66.93),doubleToFloat(-17.27),doubleToFloat(-103.755),doubleToFloat(-39.75),doubleToFloat(-43.18),doubleToFloat(-101.985),doubleToFloat(-49.66),doubleToFloat(-35.05),doubleToFloat(-140.335),doubleToFloat(-23.24),doubleToFloat(-40.39),doubleToFloat(-100.715),doubleToFloat(-9.51999),doubleToFloat(-49.28)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-135.255),doubleToFloat(-5.45999),doubleToFloat(-40.13),doubleToFloat(-134.235),doubleToFloat(7.48999),doubleToFloat(-36.58),doubleToFloat(-104.015),doubleToFloat(14.1),doubleToFloat(-42.67),doubleToFloat(-72.515),doubleToFloat(23.75),doubleToFloat(-46.23),doubleToFloat(-60.575),doubleToFloat(-1.39999),doubleToFloat(-51.05),doubleToFloat(-21.975),doubleToFloat(26.04),doubleToFloat(-48.01),doubleToFloat(-16.895),doubleToFloat(7.23999),doubleToFloat(-51.05),doubleToFloat(26.035),doubleToFloat(31.12),doubleToFloat(-46.23),doubleToFloat(28.065),doubleToFloat(7.48999),doubleToFloat(-49.02),doubleToFloat(81.915),doubleToFloat(25.02),doubleToFloat(-43.94)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(81.405),doubleToFloat(-1.89999),doubleToFloat(-44.7),doubleToFloat(141.095),doubleToFloat(0.130005),doubleToFloat(-33.02),doubleToFloat(130.935),doubleToFloat(-22.22),doubleToFloat(-28.45),doubleToFloat(176.405),doubleToFloat(-24.76),doubleToFloat(-23.37),doubleToFloat(161.675),doubleToFloat(-44.58),doubleToFloat(-21.84),doubleToFloat(194.185),doubleToFloat(-48.89),doubleToFloat(-13.97),doubleToFloat(183.515),doubleToFloat(-59.82),doubleToFloat(-14.22),doubleToFloat(206.125),doubleToFloat(-65.4),doubleToFloat(-9.91),doubleToFloat(195.455),doubleToFloat(-72.26),doubleToFloat(-10.67),doubleToFloat(220.345),doubleToFloat(-83.69),doubleToFloat(-18.29)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-64.895),doubleToFloat(-34.16),doubleToFloat(-41.15),doubleToFloat(-15.365),doubleToFloat(-26.8),doubleToFloat(-37.59),doubleToFloat(22.475),doubleToFloat(-24.76),doubleToFloat(-38.1),doubleToFloat(70.735),doubleToFloat(-27.3),doubleToFloat(-30.99),doubleToFloat(120.525),doubleToFloat(-40.77),doubleToFloat(-17.27),doubleToFloat(154.055),doubleToFloat(-60.83),doubleToFloat(-9.65),doubleToFloat(174.875),doubleToFloat(-69.21),doubleToFloat(-7.11),doubleToFloat(195.965),doubleToFloat(-86.23),doubleToFloat(-5.59),doubleToFloat(205.355),doubleToFloat(-94.36),doubleToFloat(-11.94),doubleToFloat(-75.565),doubleToFloat(-64.9),doubleToFloat(-73.66)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-76.325),doubleToFloat(-67.69),doubleToFloat(-71.37),doubleToFloat(-53.465),doubleToFloat(-53.72),doubleToFloat(-64.52),doubleToFloat(-29.845),doubleToFloat(-68.96),doubleToFloat(-77.22),doubleToFloat(-44.065),doubleToFloat(-71.75),doubleToFloat(-80.77),doubleToFloat(-64.385),doubleToFloat(-69.21),doubleToFloat(-80.01),doubleToFloat(-18.925),doubleToFloat(-40.0),doubleToFloat(0.0),doubleToFloat(-62.355),doubleToFloat(-49.91),doubleToFloat(0.0),doubleToFloat(68.455),doubleToFloat(-38.23),doubleToFloat(0.0),doubleToFloat(123.825),doubleToFloat(-45.08),doubleToFloat(0.0),doubleToFloat(171.325),doubleToFloat(-71.75),doubleToFloat(0.0)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(195.705),doubleToFloat(-88.26),doubleToFloat(0.0),doubleToFloat(-127.635),doubleToFloat(-63.63),doubleToFloat(0.0),doubleToFloat(-92.835),doubleToFloat(-56.51),doubleToFloat(0.0),doubleToFloat(-159.895),doubleToFloat(-73.28),doubleToFloat(0.0),doubleToFloat(-182.495),doubleToFloat(-73.28),doubleToFloat(0.0),doubleToFloat(-207.395),doubleToFloat(-85.72),doubleToFloat(0.0),doubleToFloat(-210.435),doubleToFloat(-84.45),doubleToFloat(-7.87),doubleToFloat(-226.185),doubleToFloat(-93.85),doubleToFloat(0.0),doubleToFloat(-223.905),doubleToFloat(-91.57),doubleToFloat(-4.57),doubleToFloat(232.285),doubleToFloat(-144.4),doubleToFloat(-86.61)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(217.555),doubleToFloat(-117.73),doubleToFloat(-73.15),doubleToFloat(231.015),doubleToFloat(-135.76),doubleToFloat(-63.25),doubleToFloat(229.745),doubleToFloat(-112.14),doubleToFloat(-9.65),doubleToFloat(224.155),doubleToFloat(-97.92),doubleToFloat(-16.51),doubleToFloat(228.215),doubleToFloat(-104.01),doubleToFloat(0.0),doubleToFloat(234.315),doubleToFloat(-121.03),doubleToFloat(-5.84),doubleToFloat(230.505),doubleToFloat(-113.92),doubleToFloat(0.0),doubleToFloat(218.565),doubleToFloat(-86.23),doubleToFloat(-24.13),doubleToFloat(-230.505),doubleToFloat(-84.45),doubleToFloat(-3.81),doubleToFloat(-231.015),doubleToFloat(-84.2),doubleToFloat(0.0)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-228.725),doubleToFloat(-89.53),doubleToFloat(-4.83),doubleToFloat(-230.505),doubleToFloat(-90.3),doubleToFloat(0.0),doubleToFloat(-43.815),doubleToFloat(-73.02),doubleToFloat(-79.25),doubleToFloat(-63.885),doubleToFloat(-72.01),doubleToFloat(-78.23),doubleToFloat(83.695),doubleToFloat(119.76),doubleToFloat(0.0),doubleToFloat(95.375),doubleToFloat(131.45),doubleToFloat(0.0),doubleToFloat(24.255),doubleToFloat(-36.45),doubleToFloat(0.0),doubleToFloat(151.005),doubleToFloat(-61.59),doubleToFloat(0.0),doubleToFloat(205.615),doubleToFloat(-96.9),doubleToFloat(0.0),doubleToFloat(215.775),doubleToFloat(-119.51),doubleToFloat(-73.15)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(210.695),doubleToFloat(-104.52),doubleToFloat(-52.32),doubleToFloat(213.745),doubleToFloat(-101.47),doubleToFloat(-52.32),doubleToFloat(232.535),doubleToFloat(-127.89),doubleToFloat(-21.59),doubleToFloat(-154.815),doubleToFloat(25.02),doubleToFloat(0.0),doubleToFloat(17.395),doubleToFloat(124.84),doubleToFloat(6.1),doubleToFloat(-23.495),doubleToFloat(90.55),doubleToFloat(8.13),doubleToFloat(46.105),doubleToFloat(139.07),doubleToFloat(3.56),doubleToFloat(76.075),doubleToFloat(140.08),doubleToFloat(1.27),doubleToFloat(74.805),doubleToFloat(80.9),doubleToFloat(9.91),doubleToFloat(50.165),doubleToFloat(110.11),doubleToFloat(6.1)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(35.175),doubleToFloat(88.77),doubleToFloat(11.68),doubleToFloat(60.835),doubleToFloat(121.79),doubleToFloat(3.56),doubleToFloat(-200.025),doubleToFloat(-15.87),doubleToFloat(7.62),doubleToFloat(-180.975),doubleToFloat(1.39999),doubleToFloat(13.97),doubleToFloat(-156.335),doubleToFloat(22.23),doubleToFloat(5.33),doubleToFloat(-155.325),doubleToFloat(20.19),doubleToFloat(13.97),doubleToFloat(-118.495),doubleToFloat(44.58),doubleToFloat(18.29),doubleToFloat(-75.565),doubleToFloat(65.91),doubleToFloat(22.35),doubleToFloat(-26.545),doubleToFloat(75.57),doubleToFloat(24.64),doubleToFloat(31.625),doubleToFloat(74.04),doubleToFloat(26.67)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(87.755),doubleToFloat(62.1),doubleToFloat(20.32),doubleToFloat(154.055),doubleToFloat(26.04),doubleToFloat(11.68),doubleToFloat(188.345),doubleToFloat(-14.1),doubleToFloat(14.73),doubleToFloat(204.085),doubleToFloat(-41.02),doubleToFloat(11.94),doubleToFloat(217.045),doubleToFloat(-63.88),doubleToFloat(7.87),doubleToFloat(226.945),doubleToFloat(-79.88),doubleToFloat(9.65),doubleToFloat(224.665),doubleToFloat(-87.5),doubleToFloat(7.37),doubleToFloat(-157.865),doubleToFloat(13.84),doubleToFloat(22.35),doubleToFloat(-141.605),doubleToFloat(12.57),doubleToFloat(32.77),doubleToFloat(-112.145),doubleToFloat(30.61),doubleToFloat(29.97)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-75.055),doubleToFloat(47.12),doubleToFloat(32.0),doubleToFloat(-26.545),doubleToFloat(57.79),doubleToFloat(35.81),doubleToFloat(24.005),doubleToFloat(56.52),doubleToFloat(34.04),doubleToFloat(84.455),doubleToFloat(48.64),doubleToFloat(28.45),doubleToFloat(150.745),doubleToFloat(19.18),doubleToFloat(18.29),doubleToFloat(-163.445),doubleToFloat(1.14001),doubleToFloat(31.75),doubleToFloat(-153.285),doubleToFloat(-0.380005),doubleToFloat(36.58),doubleToFloat(-171.065),doubleToFloat(-5.97),doubleToFloat(27.43),doubleToFloat(-187.325),doubleToFloat(-22.99),doubleToFloat(20.83),doubleToFloat(-201.545),doubleToFloat(-37.21),doubleToFloat(10.16)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-161.925),doubleToFloat(-5.97),doubleToFloat(30.99),doubleToFloat(-151.005),doubleToFloat(-10.29),doubleToFloat(35.81),doubleToFloat(-203.325),doubleToFloat(-44.83),doubleToFloat(13.97),doubleToFloat(-228.215),doubleToFloat(-75.31),doubleToFloat(7.37),doubleToFloat(-223.135),doubleToFloat(-77.6),doubleToFloat(7.37),doubleToFloat(-196.465),doubleToFloat(-54.48),doubleToFloat(14.99),doubleToFloat(-207.895),doubleToFloat(-43.81),doubleToFloat(5.08),doubleToFloat(-233.045),doubleToFloat(-79.12),doubleToFloat(4.06),doubleToFloat(-170.815),doubleToFloat(-22.48),doubleToFloat(30.73),doubleToFloat(-164.465),doubleToFloat(-11.81),doubleToFloat(30.73)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-171.835),doubleToFloat(-19.68),doubleToFloat(30.48),doubleToFloat(-184.275),doubleToFloat(-27.05),doubleToFloat(26.42),doubleToFloat(-180.975),doubleToFloat(-32.38),doubleToFloat(25.91),doubleToFloat(-216.785),doubleToFloat(-78.61),doubleToFloat(8.38),doubleToFloat(-192.655),doubleToFloat(-58.29),doubleToFloat(16.26),doubleToFloat(-174.375),doubleToFloat(-43.31),doubleToFloat(25.91),doubleToFloat(-165.485),doubleToFloat(-28.07),doubleToFloat(34.54),doubleToFloat(-171.835),doubleToFloat(-48.89),doubleToFloat(27.43),doubleToFloat(-142.625),doubleToFloat(-35.94),doubleToFloat(34.8),doubleToFloat(-160.405),doubleToFloat(-22.73),doubleToFloat(34.8)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-158.365),doubleToFloat(-13.59),doubleToFloat(34.54),doubleToFloat(-144.655),doubleToFloat(-24.26),doubleToFloat(38.61),doubleToFloat(-212.975),doubleToFloat(-81.41),doubleToFloat(10.92),doubleToFloat(-191.135),doubleToFloat(-63.37),doubleToFloat(18.29),doubleToFloat(-154.555),doubleToFloat(-41.02),doubleToFloat(31.75),doubleToFloat(-167.765),doubleToFloat(-70.48),doubleToFloat(17.02),doubleToFloat(-132.205),doubleToFloat(-61.09),doubleToFloat(22.35),doubleToFloat(-190.625),doubleToFloat(-66.93),doubleToFloat(17.27),doubleToFloat(-185.295),doubleToFloat(-71.25),doubleToFloat(10.16),doubleToFloat(-101.985),doubleToFloat(-49.66),doubleToFloat(35.05)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-103.755),doubleToFloat(-39.75),doubleToFloat(43.18),doubleToFloat(-100.715),doubleToFloat(-9.51999),doubleToFloat(49.28),doubleToFloat(-140.335),doubleToFloat(-23.24),doubleToFloat(40.39),doubleToFloat(-135.255),doubleToFloat(-5.45999),doubleToFloat(40.13),doubleToFloat(-134.235),doubleToFloat(7.48999),doubleToFloat(36.58),doubleToFloat(-104.015),doubleToFloat(14.1),doubleToFloat(42.67),doubleToFloat(-60.575),doubleToFloat(-1.39999),doubleToFloat(51.05),doubleToFloat(-72.515),doubleToFloat(23.75),doubleToFloat(46.23),doubleToFloat(-16.895),doubleToFloat(7.23999),doubleToFloat(51.05),doubleToFloat(-21.975),doubleToFloat(26.04),doubleToFloat(48.01)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(28.065),doubleToFloat(7.48999),doubleToFloat(49.02),doubleToFloat(26.035),doubleToFloat(31.12),doubleToFloat(46.23),doubleToFloat(81.405),doubleToFloat(-1.89999),doubleToFloat(44.7),doubleToFloat(81.915),doubleToFloat(25.02),doubleToFloat(43.94),doubleToFloat(130.935),doubleToFloat(-22.22),doubleToFloat(28.45),doubleToFloat(141.095),doubleToFloat(0.130005),doubleToFloat(33.02),doubleToFloat(161.675),doubleToFloat(-44.58),doubleToFloat(21.84),doubleToFloat(176.405),doubleToFloat(-24.76),doubleToFloat(23.37),doubleToFloat(183.515),doubleToFloat(-59.82),doubleToFloat(14.22),doubleToFloat(194.185),doubleToFloat(-48.89),doubleToFloat(13.97)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(195.455),doubleToFloat(-72.26),doubleToFloat(10.67),doubleToFloat(206.125),doubleToFloat(-65.4),doubleToFloat(9.91),doubleToFloat(220.345),doubleToFloat(-83.69),doubleToFloat(18.29),doubleToFloat(-64.895),doubleToFloat(-34.16),doubleToFloat(41.15),doubleToFloat(-15.365),doubleToFloat(-26.8),doubleToFloat(37.59),doubleToFloat(22.475),doubleToFloat(-24.76),doubleToFloat(38.1),doubleToFloat(70.735),doubleToFloat(-27.3),doubleToFloat(30.99),doubleToFloat(120.525),doubleToFloat(-40.77),doubleToFloat(17.27),doubleToFloat(154.055),doubleToFloat(-60.83),doubleToFloat(9.65),doubleToFloat(174.875),doubleToFloat(-69.21),doubleToFloat(7.11)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(195.965),doubleToFloat(-86.23),doubleToFloat(5.59),doubleToFloat(205.355),doubleToFloat(-94.36),doubleToFloat(11.94),doubleToFloat(-76.325),doubleToFloat(-67.69),doubleToFloat(71.37),doubleToFloat(-75.565),doubleToFloat(-64.9),doubleToFloat(73.66),doubleToFloat(-53.465),doubleToFloat(-53.72),doubleToFloat(64.52),doubleToFloat(-29.845),doubleToFloat(-68.96),doubleToFloat(77.22),doubleToFloat(-64.385),doubleToFloat(-69.21),doubleToFloat(80.01),doubleToFloat(-44.065),doubleToFloat(-71.75),doubleToFloat(80.77),doubleToFloat(-210.435),doubleToFloat(-84.45),doubleToFloat(7.87),doubleToFloat(-223.905),doubleToFloat(-91.57),doubleToFloat(4.57)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(231.015),doubleToFloat(-135.76),doubleToFloat(63.25),doubleToFloat(217.555),doubleToFloat(-117.73),doubleToFloat(73.15),doubleToFloat(232.285),doubleToFloat(-144.4),doubleToFloat(86.61),doubleToFloat(224.155),doubleToFloat(-97.92),doubleToFloat(16.51),doubleToFloat(229.745),doubleToFloat(-112.14),doubleToFloat(9.65),doubleToFloat(234.315),doubleToFloat(-121.03),doubleToFloat(5.84),doubleToFloat(218.565),doubleToFloat(-86.23),doubleToFloat(24.13),doubleToFloat(-230.505),doubleToFloat(-84.45),doubleToFloat(3.81),doubleToFloat(-228.725),doubleToFloat(-89.53),doubleToFloat(4.83),doubleToFloat(-63.885),doubleToFloat(-72.01),doubleToFloat(78.23)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-43.815),doubleToFloat(-73.02),doubleToFloat(79.25),doubleToFloat(213.745),doubleToFloat(-101.47),doubleToFloat(52.32),doubleToFloat(210.695),doubleToFloat(-104.52),doubleToFloat(52.32),doubleToFloat(215.775),doubleToFloat(-119.51),doubleToFloat(73.15),doubleToFloat(232.535),doubleToFloat(-127.89),doubleToFloat(21.59)], Java.type("float[]"))));

	/** Large attribute array: CoordinateInterpolator DEF='ci' keyValue field, scene-graph level=3, element #23, 2565 total numbers made up of 855 3-tuple values */
	this.ci_3_23_keyValue = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(-23.495),doubleToFloat(90.55),doubleToFloat(-8.13),doubleToFloat(-28.825),doubleToFloat(91.31),doubleToFloat(0.0),doubleToFloat(9.77497),doubleToFloat(126.11),doubleToFloat(0.0),doubleToFloat(17.395),doubleToFloat(124.84),doubleToFloat(-6.1),doubleToFloat(42.795),doubleToFloat(142.11),doubleToFloat(0.0),doubleToFloat(46.105),doubleToFloat(139.07),doubleToFloat(-3.56),doubleToFloat(74.295),doubleToFloat(144.4),doubleToFloat(0.0),doubleToFloat(76.075),doubleToFloat(140.08),doubleToFloat(-1.27),doubleToFloat(92.325),doubleToFloat(139.57),doubleToFloat(0.0),doubleToFloat(74.805),doubleToFloat(80.9),doubleToFloat(-9.91)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(74.295),doubleToFloat(98.93),doubleToFloat(0.0),doubleToFloat(84.965),doubleToFloat(74.04),doubleToFloat(0.0),doubleToFloat(35.175),doubleToFloat(88.77),doubleToFloat(-11.68),doubleToFloat(50.165),doubleToFloat(110.11),doubleToFloat(-6.1),doubleToFloat(60.835),doubleToFloat(121.79),doubleToFloat(-3.56),doubleToFloat(-194.695),doubleToFloat(-8.0),doubleToFloat(0.0),doubleToFloat(-200.025),doubleToFloat(-15.87),doubleToFloat(-7.62),doubleToFloat(-205.105),doubleToFloat(-19.68),doubleToFloat(0.0),doubleToFloat(-177.165),doubleToFloat(7.75),doubleToFloat(0.0),doubleToFloat(-180.975),doubleToFloat(1.39999),doubleToFloat(-13.97)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-156.335),doubleToFloat(22.23),doubleToFloat(-5.33),doubleToFloat(-151.515),doubleToFloat(27.05),doubleToFloat(0.0),doubleToFloat(-117.475),doubleToFloat(50.67),doubleToFloat(0.0),doubleToFloat(-118.495),doubleToFloat(44.58),doubleToFloat(-18.29),doubleToFloat(-155.325),doubleToFloat(20.19),doubleToFloat(-13.97),doubleToFloat(-74.805),doubleToFloat(71.25),doubleToFloat(0.0),doubleToFloat(-75.565),doubleToFloat(65.91),doubleToFloat(-22.35),doubleToFloat(-26.545),doubleToFloat(75.57),doubleToFloat(-24.64),doubleToFloat(31.625),doubleToFloat(74.04),doubleToFloat(-26.67),doubleToFloat(87.755),doubleToFloat(62.1),doubleToFloat(-20.32)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(154.055),doubleToFloat(26.04),doubleToFloat(-11.68),doubleToFloat(155.325),doubleToFloat(30.1),doubleToFloat(0.0),doubleToFloat(195.965),doubleToFloat(-4.95001),doubleToFloat(0.0),doubleToFloat(188.345),doubleToFloat(-14.1),doubleToFloat(-14.73),doubleToFloat(213.995),doubleToFloat(-28.57),doubleToFloat(0.0),doubleToFloat(204.085),doubleToFloat(-41.02),doubleToFloat(-11.94),doubleToFloat(226.445),doubleToFloat(-52.45),doubleToFloat(0.0),doubleToFloat(217.045),doubleToFloat(-63.88),doubleToFloat(-7.87),doubleToFloat(232.535),doubleToFloat(-72.52),doubleToFloat(0.0),doubleToFloat(226.945),doubleToFloat(-79.88),doubleToFloat(-9.65)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(228.725),doubleToFloat(-91.31),doubleToFloat(0.0),doubleToFloat(224.665),doubleToFloat(-87.5),doubleToFloat(-7.37),doubleToFloat(-157.865),doubleToFloat(13.84),doubleToFloat(-22.35),doubleToFloat(-141.605),doubleToFloat(12.57),doubleToFloat(-32.77),doubleToFloat(-112.145),doubleToFloat(30.61),doubleToFloat(-29.97),doubleToFloat(-75.055),doubleToFloat(47.12),doubleToFloat(-32.0),doubleToFloat(-26.545),doubleToFloat(57.79),doubleToFloat(-35.81),doubleToFloat(24.005),doubleToFloat(56.52),doubleToFloat(-34.04),doubleToFloat(84.455),doubleToFloat(48.64),doubleToFloat(-28.45),doubleToFloat(150.745),doubleToFloat(19.18),doubleToFloat(-18.29)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-153.285),doubleToFloat(-0.380005),doubleToFloat(-36.58),doubleToFloat(-163.445),doubleToFloat(1.14001),doubleToFloat(-31.75),doubleToFloat(-171.065),doubleToFloat(-5.97),doubleToFloat(-27.43),doubleToFloat(-187.325),doubleToFloat(-22.99),doubleToFloat(-20.83),doubleToFloat(-201.545),doubleToFloat(-37.21),doubleToFloat(-10.16),doubleToFloat(-151.005),doubleToFloat(-10.29),doubleToFloat(-35.81),doubleToFloat(-161.925),doubleToFloat(-5.97),doubleToFloat(-30.99),doubleToFloat(-203.325),doubleToFloat(-44.83),doubleToFloat(-13.97),doubleToFloat(-196.465),doubleToFloat(-54.48),doubleToFloat(-14.99),doubleToFloat(-223.135),doubleToFloat(-77.6),doubleToFloat(-7.37)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-228.215),doubleToFloat(-75.31),doubleToFloat(-7.37),doubleToFloat(-233.045),doubleToFloat(-79.12),doubleToFloat(-4.06),doubleToFloat(-234.315),doubleToFloat(-77.6),doubleToFloat(0.0),doubleToFloat(-210.695),doubleToFloat(-46.1),doubleToFloat(0.0),doubleToFloat(-207.895),doubleToFloat(-43.81),doubleToFloat(-5.08),doubleToFloat(-171.835),doubleToFloat(-19.68),doubleToFloat(-30.48),doubleToFloat(-164.465),doubleToFloat(-11.81),doubleToFloat(-30.73),doubleToFloat(-170.815),doubleToFloat(-22.48),doubleToFloat(-30.73),doubleToFloat(-184.275),doubleToFloat(-27.05),doubleToFloat(-26.42),doubleToFloat(-180.975),doubleToFloat(-32.38),doubleToFloat(-25.91)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-192.655),doubleToFloat(-58.29),doubleToFloat(-16.26),doubleToFloat(-216.785),doubleToFloat(-78.61),doubleToFloat(-8.38),doubleToFloat(-174.375),doubleToFloat(-43.31),doubleToFloat(-25.91),doubleToFloat(-165.485),doubleToFloat(-28.07),doubleToFloat(-34.54),doubleToFloat(-142.625),doubleToFloat(-35.94),doubleToFloat(-34.8),doubleToFloat(-171.835),doubleToFloat(-48.89),doubleToFloat(-27.43),doubleToFloat(-160.405),doubleToFloat(-22.73),doubleToFloat(-34.8),doubleToFloat(-158.365),doubleToFloat(-13.59),doubleToFloat(-34.54),doubleToFloat(-144.655),doubleToFloat(-24.26),doubleToFloat(-38.61),doubleToFloat(-191.135),doubleToFloat(-63.37),doubleToFloat(-18.29)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-212.975),doubleToFloat(-81.41),doubleToFloat(-10.92),doubleToFloat(-167.765),doubleToFloat(-70.48),doubleToFloat(-17.02),doubleToFloat(-154.555),doubleToFloat(-41.02),doubleToFloat(-31.75),doubleToFloat(-132.205),doubleToFloat(-61.09),doubleToFloat(-22.35),doubleToFloat(-185.295),doubleToFloat(-71.25),doubleToFloat(-10.16),doubleToFloat(-190.625),doubleToFloat(-66.93),doubleToFloat(-17.27),doubleToFloat(-103.755),doubleToFloat(-39.75),doubleToFloat(-43.18),doubleToFloat(-101.985),doubleToFloat(-49.66),doubleToFloat(-35.05),doubleToFloat(-140.335),doubleToFloat(-23.24),doubleToFloat(-40.39),doubleToFloat(-100.715),doubleToFloat(-9.51999),doubleToFloat(-49.28)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-135.255),doubleToFloat(-5.45999),doubleToFloat(-40.13),doubleToFloat(-134.235),doubleToFloat(7.48999),doubleToFloat(-36.58),doubleToFloat(-104.015),doubleToFloat(14.1),doubleToFloat(-42.67),doubleToFloat(-72.515),doubleToFloat(23.75),doubleToFloat(-46.23),doubleToFloat(-60.575),doubleToFloat(-1.39999),doubleToFloat(-51.05),doubleToFloat(-21.975),doubleToFloat(26.04),doubleToFloat(-48.01),doubleToFloat(-16.895),doubleToFloat(7.23999),doubleToFloat(-51.05),doubleToFloat(26.035),doubleToFloat(31.12),doubleToFloat(-46.23),doubleToFloat(28.065),doubleToFloat(7.48999),doubleToFloat(-49.02),doubleToFloat(81.915),doubleToFloat(25.02),doubleToFloat(-43.94)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(81.405),doubleToFloat(-1.89999),doubleToFloat(-44.7),doubleToFloat(141.095),doubleToFloat(0.130005),doubleToFloat(-33.02),doubleToFloat(130.935),doubleToFloat(-22.22),doubleToFloat(-28.45),doubleToFloat(176.405),doubleToFloat(-24.76),doubleToFloat(-23.37),doubleToFloat(161.675),doubleToFloat(-44.58),doubleToFloat(-21.84),doubleToFloat(194.185),doubleToFloat(-48.89),doubleToFloat(-13.97),doubleToFloat(183.515),doubleToFloat(-59.82),doubleToFloat(-14.22),doubleToFloat(206.125),doubleToFloat(-65.4),doubleToFloat(-9.91),doubleToFloat(195.455),doubleToFloat(-72.26),doubleToFloat(-10.67),doubleToFloat(220.345),doubleToFloat(-83.69),doubleToFloat(-18.29)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-64.895),doubleToFloat(-34.16),doubleToFloat(-41.15),doubleToFloat(-15.365),doubleToFloat(-26.8),doubleToFloat(-37.59),doubleToFloat(22.475),doubleToFloat(-24.76),doubleToFloat(-38.1),doubleToFloat(70.735),doubleToFloat(-27.3),doubleToFloat(-30.99),doubleToFloat(120.525),doubleToFloat(-40.77),doubleToFloat(-17.27),doubleToFloat(154.055),doubleToFloat(-60.83),doubleToFloat(-9.65),doubleToFloat(174.875),doubleToFloat(-69.21),doubleToFloat(-7.11),doubleToFloat(195.965),doubleToFloat(-86.23),doubleToFloat(-5.59),doubleToFloat(205.355),doubleToFloat(-94.36),doubleToFloat(-11.94),doubleToFloat(-75.565),doubleToFloat(-64.9),doubleToFloat(-73.66)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-76.325),doubleToFloat(-67.69),doubleToFloat(-71.37),doubleToFloat(-53.465),doubleToFloat(-53.72),doubleToFloat(-64.52),doubleToFloat(-29.845),doubleToFloat(-68.96),doubleToFloat(-77.22),doubleToFloat(-44.065),doubleToFloat(-71.75),doubleToFloat(-80.77),doubleToFloat(-64.385),doubleToFloat(-69.21),doubleToFloat(-80.01),doubleToFloat(-18.925),doubleToFloat(-40.0),doubleToFloat(0.0),doubleToFloat(-62.355),doubleToFloat(-49.91),doubleToFloat(0.0),doubleToFloat(68.455),doubleToFloat(-38.23),doubleToFloat(0.0),doubleToFloat(123.825),doubleToFloat(-45.08),doubleToFloat(0.0),doubleToFloat(171.325),doubleToFloat(-71.75),doubleToFloat(0.0)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(195.705),doubleToFloat(-88.26),doubleToFloat(0.0),doubleToFloat(-127.635),doubleToFloat(-63.63),doubleToFloat(0.0),doubleToFloat(-92.835),doubleToFloat(-56.51),doubleToFloat(0.0),doubleToFloat(-159.895),doubleToFloat(-73.28),doubleToFloat(0.0),doubleToFloat(-182.495),doubleToFloat(-73.28),doubleToFloat(0.0),doubleToFloat(-207.395),doubleToFloat(-85.72),doubleToFloat(0.0),doubleToFloat(-210.435),doubleToFloat(-84.45),doubleToFloat(-7.87),doubleToFloat(-226.185),doubleToFloat(-93.85),doubleToFloat(0.0),doubleToFloat(-223.905),doubleToFloat(-91.57),doubleToFloat(-4.57),doubleToFloat(232.285),doubleToFloat(-144.4),doubleToFloat(-86.61)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(217.555),doubleToFloat(-117.73),doubleToFloat(-73.15),doubleToFloat(231.015),doubleToFloat(-135.76),doubleToFloat(-63.25),doubleToFloat(229.745),doubleToFloat(-112.14),doubleToFloat(-9.65),doubleToFloat(224.155),doubleToFloat(-97.92),doubleToFloat(-16.51),doubleToFloat(228.215),doubleToFloat(-104.01),doubleToFloat(0.0),doubleToFloat(234.315),doubleToFloat(-121.03),doubleToFloat(-5.84),doubleToFloat(230.505),doubleToFloat(-113.92),doubleToFloat(0.0),doubleToFloat(218.565),doubleToFloat(-86.23),doubleToFloat(-24.13),doubleToFloat(-230.505),doubleToFloat(-84.45),doubleToFloat(-3.81),doubleToFloat(-231.015),doubleToFloat(-84.2),doubleToFloat(0.0)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-228.725),doubleToFloat(-89.53),doubleToFloat(-4.83),doubleToFloat(-230.505),doubleToFloat(-90.3),doubleToFloat(0.0),doubleToFloat(-43.815),doubleToFloat(-73.02),doubleToFloat(-79.25),doubleToFloat(-63.885),doubleToFloat(-72.01),doubleToFloat(-78.23),doubleToFloat(83.695),doubleToFloat(119.76),doubleToFloat(0.0),doubleToFloat(95.375),doubleToFloat(131.45),doubleToFloat(0.0),doubleToFloat(24.255),doubleToFloat(-36.45),doubleToFloat(0.0),doubleToFloat(151.005),doubleToFloat(-61.59),doubleToFloat(0.0),doubleToFloat(205.615),doubleToFloat(-96.9),doubleToFloat(0.0),doubleToFloat(215.775),doubleToFloat(-119.51),doubleToFloat(-73.15)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(210.695),doubleToFloat(-104.52),doubleToFloat(-52.32),doubleToFloat(213.745),doubleToFloat(-101.47),doubleToFloat(-52.32),doubleToFloat(232.535),doubleToFloat(-127.89),doubleToFloat(-21.59),doubleToFloat(-154.815),doubleToFloat(25.02),doubleToFloat(0.0),doubleToFloat(17.395),doubleToFloat(124.84),doubleToFloat(6.1),doubleToFloat(-23.495),doubleToFloat(90.55),doubleToFloat(8.13),doubleToFloat(46.105),doubleToFloat(139.07),doubleToFloat(3.56),doubleToFloat(76.075),doubleToFloat(140.08),doubleToFloat(1.27),doubleToFloat(74.805),doubleToFloat(80.9),doubleToFloat(9.91),doubleToFloat(50.165),doubleToFloat(110.11),doubleToFloat(6.1)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(35.175),doubleToFloat(88.77),doubleToFloat(11.68),doubleToFloat(60.835),doubleToFloat(121.79),doubleToFloat(3.56),doubleToFloat(-200.025),doubleToFloat(-15.87),doubleToFloat(7.62),doubleToFloat(-180.975),doubleToFloat(1.39999),doubleToFloat(13.97),doubleToFloat(-156.335),doubleToFloat(22.23),doubleToFloat(5.33),doubleToFloat(-155.325),doubleToFloat(20.19),doubleToFloat(13.97),doubleToFloat(-118.495),doubleToFloat(44.58),doubleToFloat(18.29),doubleToFloat(-75.565),doubleToFloat(65.91),doubleToFloat(22.35),doubleToFloat(-26.545),doubleToFloat(75.57),doubleToFloat(24.64),doubleToFloat(31.625),doubleToFloat(74.04),doubleToFloat(26.67)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(87.755),doubleToFloat(62.1),doubleToFloat(20.32),doubleToFloat(154.055),doubleToFloat(26.04),doubleToFloat(11.68),doubleToFloat(188.345),doubleToFloat(-14.1),doubleToFloat(14.73),doubleToFloat(204.085),doubleToFloat(-41.02),doubleToFloat(11.94),doubleToFloat(217.045),doubleToFloat(-63.88),doubleToFloat(7.87),doubleToFloat(226.945),doubleToFloat(-79.88),doubleToFloat(9.65),doubleToFloat(224.665),doubleToFloat(-87.5),doubleToFloat(7.37),doubleToFloat(-157.865),doubleToFloat(13.84),doubleToFloat(22.35),doubleToFloat(-141.605),doubleToFloat(12.57),doubleToFloat(32.77),doubleToFloat(-112.145),doubleToFloat(30.61),doubleToFloat(29.97)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-75.055),doubleToFloat(47.12),doubleToFloat(32.0),doubleToFloat(-26.545),doubleToFloat(57.79),doubleToFloat(35.81),doubleToFloat(24.005),doubleToFloat(56.52),doubleToFloat(34.04),doubleToFloat(84.455),doubleToFloat(48.64),doubleToFloat(28.45),doubleToFloat(150.745),doubleToFloat(19.18),doubleToFloat(18.29),doubleToFloat(-163.445),doubleToFloat(1.14001),doubleToFloat(31.75),doubleToFloat(-153.285),doubleToFloat(-0.380005),doubleToFloat(36.58),doubleToFloat(-171.065),doubleToFloat(-5.97),doubleToFloat(27.43),doubleToFloat(-187.325),doubleToFloat(-22.99),doubleToFloat(20.83),doubleToFloat(-201.545),doubleToFloat(-37.21),doubleToFloat(10.16)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-161.925),doubleToFloat(-5.97),doubleToFloat(30.99),doubleToFloat(-151.005),doubleToFloat(-10.29),doubleToFloat(35.81),doubleToFloat(-203.325),doubleToFloat(-44.83),doubleToFloat(13.97),doubleToFloat(-228.215),doubleToFloat(-75.31),doubleToFloat(7.37),doubleToFloat(-223.135),doubleToFloat(-77.6),doubleToFloat(7.37),doubleToFloat(-196.465),doubleToFloat(-54.48),doubleToFloat(14.99),doubleToFloat(-207.895),doubleToFloat(-43.81),doubleToFloat(5.08),doubleToFloat(-233.045),doubleToFloat(-79.12),doubleToFloat(4.06),doubleToFloat(-170.815),doubleToFloat(-22.48),doubleToFloat(30.73),doubleToFloat(-164.465),doubleToFloat(-11.81),doubleToFloat(30.73)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-171.835),doubleToFloat(-19.68),doubleToFloat(30.48),doubleToFloat(-184.275),doubleToFloat(-27.05),doubleToFloat(26.42),doubleToFloat(-180.975),doubleToFloat(-32.38),doubleToFloat(25.91),doubleToFloat(-216.785),doubleToFloat(-78.61),doubleToFloat(8.38),doubleToFloat(-192.655),doubleToFloat(-58.29),doubleToFloat(16.26),doubleToFloat(-174.375),doubleToFloat(-43.31),doubleToFloat(25.91),doubleToFloat(-165.485),doubleToFloat(-28.07),doubleToFloat(34.54),doubleToFloat(-171.835),doubleToFloat(-48.89),doubleToFloat(27.43),doubleToFloat(-142.625),doubleToFloat(-35.94),doubleToFloat(34.8),doubleToFloat(-160.405),doubleToFloat(-22.73),doubleToFloat(34.8)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-158.365),doubleToFloat(-13.59),doubleToFloat(34.54),doubleToFloat(-144.655),doubleToFloat(-24.26),doubleToFloat(38.61),doubleToFloat(-212.975),doubleToFloat(-81.41),doubleToFloat(10.92),doubleToFloat(-191.135),doubleToFloat(-63.37),doubleToFloat(18.29),doubleToFloat(-154.555),doubleToFloat(-41.02),doubleToFloat(31.75),doubleToFloat(-167.765),doubleToFloat(-70.48),doubleToFloat(17.02),doubleToFloat(-132.205),doubleToFloat(-61.09),doubleToFloat(22.35),doubleToFloat(-190.625),doubleToFloat(-66.93),doubleToFloat(17.27),doubleToFloat(-185.295),doubleToFloat(-71.25),doubleToFloat(10.16),doubleToFloat(-101.985),doubleToFloat(-49.66),doubleToFloat(35.05)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-103.755),doubleToFloat(-39.75),doubleToFloat(43.18),doubleToFloat(-100.715),doubleToFloat(-9.51999),doubleToFloat(49.28),doubleToFloat(-140.335),doubleToFloat(-23.24),doubleToFloat(40.39),doubleToFloat(-135.255),doubleToFloat(-5.45999),doubleToFloat(40.13),doubleToFloat(-134.235),doubleToFloat(7.48999),doubleToFloat(36.58),doubleToFloat(-104.015),doubleToFloat(14.1),doubleToFloat(42.67),doubleToFloat(-60.575),doubleToFloat(-1.39999),doubleToFloat(51.05),doubleToFloat(-72.515),doubleToFloat(23.75),doubleToFloat(46.23),doubleToFloat(-16.895),doubleToFloat(7.23999),doubleToFloat(51.05),doubleToFloat(-21.975),doubleToFloat(26.04),doubleToFloat(48.01)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(28.065),doubleToFloat(7.48999),doubleToFloat(49.02),doubleToFloat(26.035),doubleToFloat(31.12),doubleToFloat(46.23),doubleToFloat(81.405),doubleToFloat(-1.89999),doubleToFloat(44.7),doubleToFloat(81.915),doubleToFloat(25.02),doubleToFloat(43.94),doubleToFloat(130.935),doubleToFloat(-22.22),doubleToFloat(28.45),doubleToFloat(141.095),doubleToFloat(0.130005),doubleToFloat(33.02),doubleToFloat(161.675),doubleToFloat(-44.58),doubleToFloat(21.84),doubleToFloat(176.405),doubleToFloat(-24.76),doubleToFloat(23.37),doubleToFloat(183.515),doubleToFloat(-59.82),doubleToFloat(14.22),doubleToFloat(194.185),doubleToFloat(-48.89),doubleToFloat(13.97)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(195.455),doubleToFloat(-72.26),doubleToFloat(10.67),doubleToFloat(206.125),doubleToFloat(-65.4),doubleToFloat(9.91),doubleToFloat(220.345),doubleToFloat(-83.69),doubleToFloat(18.29),doubleToFloat(-64.895),doubleToFloat(-34.16),doubleToFloat(41.15),doubleToFloat(-15.365),doubleToFloat(-26.8),doubleToFloat(37.59),doubleToFloat(22.475),doubleToFloat(-24.76),doubleToFloat(38.1),doubleToFloat(70.735),doubleToFloat(-27.3),doubleToFloat(30.99),doubleToFloat(120.525),doubleToFloat(-40.77),doubleToFloat(17.27),doubleToFloat(154.055),doubleToFloat(-60.83),doubleToFloat(9.65),doubleToFloat(174.875),doubleToFloat(-69.21),doubleToFloat(7.11)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(195.965),doubleToFloat(-86.23),doubleToFloat(5.59),doubleToFloat(205.355),doubleToFloat(-94.36),doubleToFloat(11.94),doubleToFloat(-76.325),doubleToFloat(-67.69),doubleToFloat(71.37),doubleToFloat(-75.565),doubleToFloat(-64.9),doubleToFloat(73.66),doubleToFloat(-53.465),doubleToFloat(-53.72),doubleToFloat(64.52),doubleToFloat(-29.845),doubleToFloat(-68.96),doubleToFloat(77.22),doubleToFloat(-64.385),doubleToFloat(-69.21),doubleToFloat(80.01),doubleToFloat(-44.065),doubleToFloat(-71.75),doubleToFloat(80.77),doubleToFloat(-210.435),doubleToFloat(-84.45),doubleToFloat(7.87),doubleToFloat(-223.905),doubleToFloat(-91.57),doubleToFloat(4.57)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(231.015),doubleToFloat(-135.76),doubleToFloat(63.25),doubleToFloat(217.555),doubleToFloat(-117.73),doubleToFloat(73.15),doubleToFloat(232.285),doubleToFloat(-144.4),doubleToFloat(86.61),doubleToFloat(224.155),doubleToFloat(-97.92),doubleToFloat(16.51),doubleToFloat(229.745),doubleToFloat(-112.14),doubleToFloat(9.65),doubleToFloat(234.315),doubleToFloat(-121.03),doubleToFloat(5.84),doubleToFloat(218.565),doubleToFloat(-86.23),doubleToFloat(24.13),doubleToFloat(-230.505),doubleToFloat(-84.45),doubleToFloat(3.81),doubleToFloat(-228.725),doubleToFloat(-89.53),doubleToFloat(4.83),doubleToFloat(-63.885),doubleToFloat(-72.01),doubleToFloat(78.23)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-43.815),doubleToFloat(-73.02),doubleToFloat(79.25),doubleToFloat(213.745),doubleToFloat(-101.47),doubleToFloat(52.32),doubleToFloat(210.695),doubleToFloat(-104.52),doubleToFloat(52.32),doubleToFloat(215.775),doubleToFloat(-119.51),doubleToFloat(73.15),doubleToFloat(232.535),doubleToFloat(-127.89),doubleToFloat(21.59),doubleToFloat(-59.809),doubleToFloat(52.365),doubleToFloat(-8.13),doubleToFloat(-65.138),doubleToFloat(53.125),doubleToFloat(0.0),doubleToFloat(-26.539),doubleToFloat(87.925),doubleToFloat(0.0),doubleToFloat(-18.918),doubleToFloat(86.655),doubleToFloat(-6.1),doubleToFloat(6.48099),doubleToFloat(103.925),doubleToFloat(0.0)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(9.791),doubleToFloat(100.885),doubleToFloat(-3.56),doubleToFloat(37.981),doubleToFloat(106.215),doubleToFloat(0.0),doubleToFloat(39.761),doubleToFloat(101.895),doubleToFloat(-1.27),doubleToFloat(56.011),doubleToFloat(101.385),doubleToFloat(0.0),doubleToFloat(38.491),doubleToFloat(42.715),doubleToFloat(-9.91),doubleToFloat(37.981),doubleToFloat(60.745),doubleToFloat(0.0),doubleToFloat(48.651),doubleToFloat(35.855),doubleToFloat(0.0),doubleToFloat(-1.138),doubleToFloat(50.585),doubleToFloat(-11.68),doubleToFloat(13.851),doubleToFloat(71.925),doubleToFloat(-6.1),doubleToFloat(24.522),doubleToFloat(83.605),doubleToFloat(-3.56)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-231.682),doubleToFloat(-23.267),doubleToFloat(0.0),doubleToFloat(-237.645),doubleToFloat(-30.669),doubleToFloat(-7.62),doubleToFloat(-243.023),doubleToFloat(-34.045),doubleToFloat(0.0),doubleToFloat(-212.908),doubleToFloat(-9.02301),doubleToFloat(0.0),doubleToFloat(-217.23),doubleToFloat(-15.036),doubleToFloat(-13.97),doubleToFloat(-190.95),doubleToFloat(3.68199),doubleToFloat(-5.33),doubleToFloat(-185.747),doubleToFloat(8.08699),doubleToFloat(0.0),doubleToFloat(-149.868),doubleToFloat(28.807),doubleToFloat(0.0),doubleToFloat(-151.389),doubleToFloat(22.822),doubleToFloat(-18.29),doubleToFloat(-190.112),doubleToFloat(1.56599),doubleToFloat(-13.97)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-105.641),doubleToFloat(45.783),doubleToFloat(0.0),doubleToFloat(-106.84),doubleToFloat(40.524),doubleToFloat(-22.35),doubleToFloat(-62.859),doubleToFloat(37.385),doubleToFloat(-24.64),doubleToFloat(-4.68901),doubleToFloat(35.855),doubleToFloat(-26.67),doubleToFloat(51.441),doubleToFloat(23.915),doubleToFloat(-20.32),doubleToFloat(106.312),doubleToFloat(12.011),doubleToFloat(-11.68),doubleToFloat(106.024),doubleToFloat(16.252),doubleToFloat(0.0),doubleToFloat(147.052),doubleToFloat(3.38199),doubleToFloat(0.0),doubleToFloat(146.393),doubleToFloat(-8.34801),doubleToFloat(-14.73),doubleToFloat(171.674),doubleToFloat(-5.229),doubleToFloat(0.0)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(172.586),doubleToFloat(-21.01),doubleToFloat(-11.94),doubleToFloat(195.158),doubleToFloat(-14.477),doubleToFloat(0.0),doubleToFloat(196.995),doubleToFloat(-29.125),doubleToFloat(-7.87),doubleToFloat(213.773),doubleToFloat(-23.372),doubleToFloat(0.0),doubleToFloat(215.823),doubleToFloat(-32.396),doubleToFloat(-9.65),doubleToFloat(226.225),doubleToFloat(-38.058),doubleToFloat(0.0),doubleToFloat(220.317),doubleToFloat(-38.998),doubleToFloat(-7.37),doubleToFloat(-193.17),doubleToFloat(-4.552),doubleToFloat(-22.35),doubleToFloat(-177.07),doubleToFloat(-7.164),doubleToFloat(-32.77),doubleToFloat(-146.218),doubleToFloat(8.37399),doubleToFloat(-29.97)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-107.888),doubleToFloat(21.756),doubleToFloat(-32.0),doubleToFloat(-62.859),doubleToFloat(19.605),doubleToFloat(-35.81),doubleToFloat(-12.309),doubleToFloat(18.335),doubleToFloat(-34.04),doubleToFloat(48.141),doubleToFloat(10.455),doubleToFloat(-28.45),doubleToFloat(105.971),doubleToFloat(4.41499),doubleToFloat(-18.29),doubleToFloat(-189.783),doubleToFloat(-19.103),doubleToFloat(-36.58),doubleToFloat(-199.782),doubleToFloat(-16.746),doubleToFloat(-31.75),doubleToFloat(-207.965),doubleToFloat(-23.201),doubleToFloat(-27.43),doubleToFloat(-225.578),doubleToFloat(-38.816),doubleToFloat(-20.83),doubleToFloat(-240.927),doubleToFloat(-51.8097),doubleToFloat(-10.16)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-188.331),doubleToFloat(-29.167),doubleToFloat(-35.81),doubleToFloat(-198.856),doubleToFloat(-23.958),doubleToFloat(-30.99),doubleToFloat(-243.332),doubleToFloat(-59.2561),doubleToFloat(-13.97),doubleToFloat(-237.294),doubleToFloat(-69.441),doubleToFloat(-14.99),doubleToFloat(-265.787),doubleToFloat(-90.2731),doubleToFloat(-7.37),doubleToFloat(-270.66),doubleToFloat(-87.5703),doubleToFloat(-7.37),doubleToFloat(-275.789),doubleToFloat(-90.9673),doubleToFloat(-4.06),doubleToFloat(-276.929),doubleToFloat(-89.3473),doubleToFloat(0.0),doubleToFloat(-250.782),doubleToFloat(-59.9115),doubleToFloat(0.0),doubleToFloat(-247.801),doubleToFloat(-57.8612),doubleToFloat(-5.08)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-209.867),doubleToFloat(-36.8),doubleToFloat(-30.48),doubleToFloat(-201.871),doubleToFloat(-29.567),doubleToFloat(-30.73),doubleToFloat(-209.083),doubleToFloat(-39.675),doubleToFloat(-30.73),doubleToFloat(-222.875),doubleToFloat(-43.115),doubleToFloat(-26.42),doubleToFloat(-220.028),doubleToFloat(-48.6996),doubleToFloat(-25.91),doubleToFloat(-233.813),doubleToFloat(-73.5535),doubleToFloat(-16.26),doubleToFloat(-259.543),doubleToFloat(-91.8055),doubleToFloat(-8.38),doubleToFloat(-214.355),doubleToFloat(-60.1386),doubleToFloat(-25.91),doubleToFloat(-204.234),doubleToFloat(-45.6871),doubleToFloat(-34.54),doubleToFloat(-182.104),doubleToFloat(-55.4231),doubleToFloat(-34.8)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-212.286),doubleToFloat(-65.9098),doubleToFloat(-27.43),doubleToFloat(-198.729),doubleToFloat(-40.786),doubleToFloat(-34.8),doubleToFloat(-195.939),doubleToFloat(-31.846),doubleToFloat(-34.54),doubleToFloat(-183.16),doubleToFloat(-43.615),doubleToFloat(-38.61),doubleToFloat(-232.719),doubleToFloat(-78.7419),doubleToFloat(-18.29),doubleToFloat(-255.978),doubleToFloat(-94.9114),doubleToFloat(-10.92),doubleToFloat(-210.018),doubleToFloat(-87.7627),doubleToFloat(-17.02),doubleToFloat(-194.414),doubleToFloat(-59.4977),doubleToFloat(-31.75),doubleToFloat(-173.802),doubleToFloat(-81.3496),doubleToFloat(-22.35),doubleToFloat(-227.551),doubleToFloat(-87.0784),doubleToFloat(-10.16)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-232.505),doubleToFloat(-82.3319),doubleToFloat(-17.27),doubleToFloat(-143.683),doubleToFloat(-62.4388),doubleToFloat(-43.18),doubleToFloat(-142.74),doubleToFloat(-72.4613),doubleToFloat(-35.05),doubleToFloat(-178.77),doubleToFloat(-42.956),doubleToFloat(-40.39),doubleToFloat(-138.15),doubleToFloat(-32.564),doubleToFloat(-49.28),doubleToFloat(-172.235),doubleToFloat(-25.658),doubleToFloat(-40.13),doubleToFloat(-170.146),doubleToFloat(-12.837),doubleToFloat(-36.58),doubleToFloat(-139.483),doubleToFloat(-8.75201),doubleToFloat(-42.67),doubleToFloat(-107.292),doubleToFloat(-1.744),doubleToFloat(-46.23),doubleToFloat(-97.476),doubleToFloat(-27.796),doubleToFloat(-51.05)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-58.289),doubleToFloat(-12.145),doubleToFloat(-48.01),doubleToFloat(-53.209),doubleToFloat(-30.945),doubleToFloat(-51.05),doubleToFloat(-10.278),doubleToFloat(-7.065),doubleToFloat(-46.23),doubleToFloat(-8.248),doubleToFloat(-30.695),doubleToFloat(-49.02),doubleToFloat(45.601),doubleToFloat(-13.165),doubleToFloat(-43.94),doubleToFloat(45.091),doubleToFloat(-40.085),doubleToFloat(-44.7),doubleToFloat(104.428),doubleToFloat(-16.842),doubleToFloat(-33.02),doubleToFloat(103.132),doubleToFloat(-41.349),doubleToFloat(-28.45),doubleToFloat(142.888),doubleToFloat(-23.631),doubleToFloat(-23.37),doubleToFloat(140.785),doubleToFloat(-48.174),doubleToFloat(-21.84)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(170.176),doubleToFloat(-33.299),doubleToFloat(-13.97),doubleToFloat(168.47),doubleToFloat(-48.4858),doubleToFloat(-14.22),doubleToFloat(190.176),doubleToFloat(-37.899),doubleToFloat(-9.91),doubleToFloat(186.651),doubleToFloat(-50.2548),doubleToFloat(-10.67),doubleToFloat(214.231),doubleToFloat(-39.981),doubleToFloat(-18.29),doubleToFloat(-104.494),doubleToFloat(-60.0859),doubleToFloat(-41.15),doubleToFloat(-51.679),doubleToFloat(-64.9852),doubleToFloat(-37.59),doubleToFloat(-13.839),doubleToFloat(-62.9452),doubleToFloat(-38.1),doubleToFloat(34.421),doubleToFloat(-65.4852),doubleToFloat(-30.99),doubleToFloat(99.745),doubleToFloat(-62.3666),doubleToFloat(-17.27)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(142.447),doubleToFloat(-66.0489),doubleToFloat(-9.65),doubleToFloat(166.932),doubleToFloat(-61.2393),doubleToFloat(-7.11),doubleToFloat(197.22),doubleToFloat(-60.0188),doubleToFloat(-5.59),doubleToFloat(211.268),doubleToFloat(-58.5942),doubleToFloat(-11.94),doubleToFloat(-117.672),doubleToFloat(-75.6501),doubleToFloat(-73.66),doubleToFloat(-118.661),doubleToFloat(-77.4442),doubleToFloat(-71.37),doubleToFloat(-94.723),doubleToFloat(-69.5026),doubleToFloat(-64.52),doubleToFloat(-72.446),doubleToFloat(-80.8209),doubleToFloat(-77.22),doubleToFloat(-86.848),doubleToFloat(-81.8791),doubleToFloat(-80.77),doubleToFloat(-106.888),doubleToFloat(-79.097),doubleToFloat(-80.01)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-55.239),doubleToFloat(-78.1852),doubleToFloat(0.0),doubleToFloat(-103.267),doubleToFloat(-75.9921),doubleToFloat(0.0),doubleToFloat(32.141),doubleToFloat(-76.4152),doubleToFloat(0.0),doubleToFloat(104.771),doubleToFloat(-65.2363),doubleToFloat(0.0),doubleToFloat(165.318),doubleToFloat(-65.4299),doubleToFloat(0.0),doubleToFloat(198.53),doubleToFloat(-61.6453),doubleToFloat(0.0),doubleToFloat(-169.458),doubleToFloat(-84.2593),doubleToFloat(0.0),doubleToFloat(-134.188),doubleToFloat(-80.0455),doubleToFloat(0.0),doubleToFloat(-202.407),doubleToFloat(-91.2048),doubleToFloat(0.0),doubleToFloat(-224.929),doubleToFloat(-89.3333),doubleToFloat(0.0)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-250.774),doubleToFloat(-99.6686),doubleToFloat(0.0),doubleToFloat(-253.698),doubleToFloat(-98.1512),doubleToFloat(-7.87),doubleToFloat(-270.172),doubleToFloat(-106.215),doubleToFloat(0.0),doubleToFloat(-267.711),doubleToFloat(-104.131),doubleToFloat(-4.57),doubleToFloat(276.929),doubleToFloat(-62.7435),doubleToFloat(-86.61),doubleToFloat(240.739),doubleToFloat(-63.0053),doubleToFloat(-73.15),doubleToFloat(267.577),doubleToFloat(-60.039),doubleToFloat(-63.25),doubleToFloat(244.778),doubleToFloat(-49.169),doubleToFloat(-9.65),doubleToFloat(228.522),doubleToFloat(-45.796),doubleToFloat(-16.51),doubleToFloat(236.579),doubleToFloat(-45.9526),doubleToFloat(0.0)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(256.002),doubleToFloat(-49.7235),doubleToFloat(-5.84),doubleToFloat(246.9),doubleToFloat(-49.46),doubleToFloat(0.0),doubleToFloat(214.954),doubleToFloat(-43.007),doubleToFloat(-24.13),doubleToFloat(-273.699),doubleToFloat(-96.4893),doubleToFloat(-3.81),doubleToFloat(-274.187),doubleToFloat(-96.1979),doubleToFloat(0.0),doubleToFloat(-272.346),doubleToFloat(-101.699),doubleToFloat(-4.83),doubleToFloat(-274.184),doubleToFloat(-102.319),doubleToFloat(0.0),doubleToFloat(-86.704),doubleToFloat(-82.7284),doubleToFloat(-79.25),doubleToFloat(-106.621),doubleToFloat(-80.9666),doubleToFloat(-78.23),doubleToFloat(47.381),doubleToFloat(81.575),doubleToFloat(0.0)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(59.061),doubleToFloat(93.265),doubleToFloat(0.0),doubleToFloat(-12.059),doubleToFloat(-74.6352),doubleToFloat(0.0),doubleToFloat(139.891),doubleToFloat(-68.2642),doubleToFloat(0.0),doubleToFloat(213.513),doubleToFloat(-60.0741),doubleToFloat(0.0),doubleToFloat(240.934),doubleToFloat(-65.579),doubleToFloat(-73.15),doubleToFloat(223.876),doubleToFloat(-60.9112),doubleToFloat(-52.32),doubleToFloat(223.725),doubleToFloat(-56.5192),doubleToFloat(-52.32),doubleToFloat(261.158),doubleToFloat(-54.7995),doubleToFloat(-21.59),doubleToFloat(-189.204),doubleToFloat(6.33699),doubleToFloat(0.0),doubleToFloat(-18.918),doubleToFloat(86.655),doubleToFloat(6.1)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-59.809),doubleToFloat(52.365),doubleToFloat(8.13),doubleToFloat(9.791),doubleToFloat(100.885),doubleToFloat(3.56),doubleToFloat(39.761),doubleToFloat(101.895),doubleToFloat(1.27),doubleToFloat(38.491),doubleToFloat(42.715),doubleToFloat(9.91),doubleToFloat(13.851),doubleToFloat(71.925),doubleToFloat(6.1),doubleToFloat(-1.138),doubleToFloat(50.585),doubleToFloat(11.68),doubleToFloat(24.522),doubleToFloat(83.605),doubleToFloat(3.56),doubleToFloat(-237.645),doubleToFloat(-30.669),doubleToFloat(7.62),doubleToFloat(-217.23),doubleToFloat(-15.036),doubleToFloat(13.97),doubleToFloat(-190.95),doubleToFloat(3.68199),doubleToFloat(5.33)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-190.112),doubleToFloat(1.56599),doubleToFloat(13.97),doubleToFloat(-151.389),doubleToFloat(22.822),doubleToFloat(18.29),doubleToFloat(-106.84),doubleToFloat(40.524),doubleToFloat(22.35),doubleToFloat(-62.859),doubleToFloat(37.385),doubleToFloat(24.64),doubleToFloat(-4.68901),doubleToFloat(35.855),doubleToFloat(26.67),doubleToFloat(51.441),doubleToFloat(23.915),doubleToFloat(20.32),doubleToFloat(106.312),doubleToFloat(12.011),doubleToFloat(11.68),doubleToFloat(146.393),doubleToFloat(-8.34801),doubleToFloat(14.73),doubleToFloat(172.586),doubleToFloat(-21.01),doubleToFloat(11.94),doubleToFloat(196.995),doubleToFloat(-29.125),doubleToFloat(7.87)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(215.823),doubleToFloat(-32.396),doubleToFloat(9.65),doubleToFloat(220.317),doubleToFloat(-38.998),doubleToFloat(7.37),doubleToFloat(-193.17),doubleToFloat(-4.552),doubleToFloat(22.35),doubleToFloat(-177.07),doubleToFloat(-7.164),doubleToFloat(32.77),doubleToFloat(-146.218),doubleToFloat(8.37399),doubleToFloat(29.97),doubleToFloat(-107.888),doubleToFloat(21.756),doubleToFloat(32.0),doubleToFloat(-62.859),doubleToFloat(19.605),doubleToFloat(35.81),doubleToFloat(-12.309),doubleToFloat(18.335),doubleToFloat(34.04),doubleToFloat(48.141),doubleToFloat(10.455),doubleToFloat(28.45),doubleToFloat(105.971),doubleToFloat(4.41499),doubleToFloat(18.29)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-199.782),doubleToFloat(-16.746),doubleToFloat(31.75),doubleToFloat(-189.783),doubleToFloat(-19.103),doubleToFloat(36.58),doubleToFloat(-207.965),doubleToFloat(-23.201),doubleToFloat(27.43),doubleToFloat(-225.578),doubleToFloat(-38.816),doubleToFloat(20.83),doubleToFloat(-240.927),doubleToFloat(-51.8097),doubleToFloat(10.16),doubleToFloat(-198.856),doubleToFloat(-23.958),doubleToFloat(30.99),doubleToFloat(-188.331),doubleToFloat(-29.167),doubleToFloat(35.81),doubleToFloat(-243.332),doubleToFloat(-59.2561),doubleToFloat(13.97),doubleToFloat(-270.66),doubleToFloat(-87.5703),doubleToFloat(7.37),doubleToFloat(-265.787),doubleToFloat(-90.2731),doubleToFloat(7.37)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-237.294),doubleToFloat(-69.441),doubleToFloat(14.99),doubleToFloat(-247.801),doubleToFloat(-57.8612),doubleToFloat(5.08),doubleToFloat(-275.789),doubleToFloat(-90.9673),doubleToFloat(4.06),doubleToFloat(-209.083),doubleToFloat(-39.675),doubleToFloat(30.73),doubleToFloat(-201.871),doubleToFloat(-29.567),doubleToFloat(30.73),doubleToFloat(-209.867),doubleToFloat(-36.8),doubleToFloat(30.48),doubleToFloat(-222.875),doubleToFloat(-43.115),doubleToFloat(26.42),doubleToFloat(-220.028),doubleToFloat(-48.6996),doubleToFloat(25.91),doubleToFloat(-259.543),doubleToFloat(-91.8055),doubleToFloat(8.38),doubleToFloat(-233.813),doubleToFloat(-73.5535),doubleToFloat(16.26)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-214.355),doubleToFloat(-60.1386),doubleToFloat(25.91),doubleToFloat(-204.234),doubleToFloat(-45.6871),doubleToFloat(34.54),doubleToFloat(-212.286),doubleToFloat(-65.9098),doubleToFloat(27.43),doubleToFloat(-182.104),doubleToFloat(-55.4231),doubleToFloat(34.8),doubleToFloat(-198.729),doubleToFloat(-40.786),doubleToFloat(34.8),doubleToFloat(-195.939),doubleToFloat(-31.846),doubleToFloat(34.54),doubleToFloat(-183.16),doubleToFloat(-43.615),doubleToFloat(38.61),doubleToFloat(-255.978),doubleToFloat(-94.9114),doubleToFloat(10.92),doubleToFloat(-232.719),doubleToFloat(-78.7419),doubleToFloat(18.29),doubleToFloat(-194.414),doubleToFloat(-59.4977),doubleToFloat(31.75)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-210.018),doubleToFloat(-87.7627),doubleToFloat(17.02),doubleToFloat(-173.802),doubleToFloat(-81.3496),doubleToFloat(22.35),doubleToFloat(-232.505),doubleToFloat(-82.3319),doubleToFloat(17.27),doubleToFloat(-227.551),doubleToFloat(-87.0784),doubleToFloat(10.16),doubleToFloat(-142.74),doubleToFloat(-72.4613),doubleToFloat(35.05),doubleToFloat(-143.683),doubleToFloat(-62.4388),doubleToFloat(43.18),doubleToFloat(-138.15),doubleToFloat(-32.564),doubleToFloat(49.28),doubleToFloat(-178.77),doubleToFloat(-42.956),doubleToFloat(40.39),doubleToFloat(-172.235),doubleToFloat(-25.658),doubleToFloat(40.13),doubleToFloat(-170.146),doubleToFloat(-12.837),doubleToFloat(36.58)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-139.483),doubleToFloat(-8.75201),doubleToFloat(42.67),doubleToFloat(-97.476),doubleToFloat(-27.796),doubleToFloat(51.05),doubleToFloat(-107.292),doubleToFloat(-1.744),doubleToFloat(46.23),doubleToFloat(-53.209),doubleToFloat(-30.945),doubleToFloat(51.05),doubleToFloat(-58.289),doubleToFloat(-12.145),doubleToFloat(48.01),doubleToFloat(-8.248),doubleToFloat(-30.695),doubleToFloat(49.02),doubleToFloat(-10.278),doubleToFloat(-7.065),doubleToFloat(46.23),doubleToFloat(45.091),doubleToFloat(-40.085),doubleToFloat(44.7),doubleToFloat(45.601),doubleToFloat(-13.165),doubleToFloat(43.94),doubleToFloat(103.132),doubleToFloat(-41.349),doubleToFloat(28.45)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(104.428),doubleToFloat(-16.842),doubleToFloat(33.02),doubleToFloat(140.785),doubleToFloat(-48.174),doubleToFloat(21.84),doubleToFloat(142.888),doubleToFloat(-23.631),doubleToFloat(23.37),doubleToFloat(168.47),doubleToFloat(-48.4858),doubleToFloat(14.22),doubleToFloat(170.176),doubleToFloat(-33.299),doubleToFloat(13.97),doubleToFloat(186.651),doubleToFloat(-50.2548),doubleToFloat(10.67),doubleToFloat(190.176),doubleToFloat(-37.899),doubleToFloat(9.91),doubleToFloat(214.231),doubleToFloat(-39.981),doubleToFloat(18.29),doubleToFloat(-104.494),doubleToFloat(-60.0859),doubleToFloat(41.15),doubleToFloat(-51.679),doubleToFloat(-64.9852),doubleToFloat(37.59)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-13.839),doubleToFloat(-62.9452),doubleToFloat(38.1),doubleToFloat(34.421),doubleToFloat(-65.4852),doubleToFloat(30.99),doubleToFloat(99.745),doubleToFloat(-62.3666),doubleToFloat(17.27),doubleToFloat(142.447),doubleToFloat(-66.0489),doubleToFloat(9.65),doubleToFloat(166.932),doubleToFloat(-61.2393),doubleToFloat(7.11),doubleToFloat(197.22),doubleToFloat(-60.0188),doubleToFloat(5.59),doubleToFloat(211.268),doubleToFloat(-58.5942),doubleToFloat(11.94),doubleToFloat(-118.661),doubleToFloat(-77.4442),doubleToFloat(71.37),doubleToFloat(-117.672),doubleToFloat(-75.6501),doubleToFloat(73.66),doubleToFloat(-94.723),doubleToFloat(-69.5026),doubleToFloat(64.52)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-72.446),doubleToFloat(-80.8209),doubleToFloat(77.22),doubleToFloat(-106.888),doubleToFloat(-79.097),doubleToFloat(80.01),doubleToFloat(-86.848),doubleToFloat(-81.8791),doubleToFloat(80.77),doubleToFloat(-253.698),doubleToFloat(-98.1512),doubleToFloat(7.87),doubleToFloat(-267.711),doubleToFloat(-104.131),doubleToFloat(4.57),doubleToFloat(267.577),doubleToFloat(-60.039),doubleToFloat(63.25),doubleToFloat(240.739),doubleToFloat(-63.0053),doubleToFloat(73.15),doubleToFloat(276.929),doubleToFloat(-62.7435),doubleToFloat(86.61),doubleToFloat(228.522),doubleToFloat(-45.796),doubleToFloat(16.51),doubleToFloat(244.778),doubleToFloat(-49.169),doubleToFloat(9.65)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(256.002),doubleToFloat(-49.7235),doubleToFloat(5.84),doubleToFloat(214.954),doubleToFloat(-43.007),doubleToFloat(24.13),doubleToFloat(-273.699),doubleToFloat(-96.4893),doubleToFloat(3.81),doubleToFloat(-272.346),doubleToFloat(-101.699),doubleToFloat(4.83),doubleToFloat(-106.621),doubleToFloat(-80.9666),doubleToFloat(78.23),doubleToFloat(-86.704),doubleToFloat(-82.7284),doubleToFloat(79.25),doubleToFloat(223.725),doubleToFloat(-56.5192),doubleToFloat(52.32),doubleToFloat(223.876),doubleToFloat(-60.9112),doubleToFloat(52.32),doubleToFloat(240.934),doubleToFloat(-65.579),doubleToFloat(73.15),doubleToFloat(261.158),doubleToFloat(-54.7995),doubleToFloat(21.59)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-44.9192),doubleToFloat(38.3501),doubleToFloat(-8.13),doubleToFloat(-50.2492),doubleToFloat(39.11),doubleToFloat(0.0),doubleToFloat(-11.6492),doubleToFloat(73.9101),doubleToFloat(0.0),doubleToFloat(-4.0292),doubleToFloat(72.64),doubleToFloat(-6.1),doubleToFloat(21.3708),doubleToFloat(89.91),doubleToFloat(0.0),doubleToFloat(24.6808),doubleToFloat(86.8701),doubleToFloat(-3.56),doubleToFloat(52.8709),doubleToFloat(92.2),doubleToFloat(0.0),doubleToFloat(54.6509),doubleToFloat(87.88),doubleToFloat(-1.27),doubleToFloat(70.9009),doubleToFloat(87.3701),doubleToFloat(0.0),doubleToFloat(53.3809),doubleToFloat(28.7),doubleToFloat(-9.91)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(52.8709),doubleToFloat(46.7301),doubleToFloat(0.0),doubleToFloat(63.5409),doubleToFloat(21.84),doubleToFloat(0.0),doubleToFloat(13.7508),doubleToFloat(36.57),doubleToFloat(-11.68),doubleToFloat(28.7409),doubleToFloat(57.9101),doubleToFloat(-6.1),doubleToFloat(39.4109),doubleToFloat(69.59),doubleToFloat(-3.56),doubleToFloat(-214.37),doubleToFloat(-9.709),doubleToFloat(0.0),doubleToFloat(-221.846),doubleToFloat(-15.5239),doubleToFloat(-7.62),doubleToFloat(-227.869),doubleToFloat(-17.5109),doubleToFloat(0.0),doubleToFloat(-193.31),doubleToFloat(0.150703),doubleToFloat(0.0),doubleToFloat(-198.687),doubleToFloat(-4.8381),doubleToFloat(-13.97)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-170.04),doubleToFloat(8.4533),doubleToFloat(-5.33),doubleToFloat(-164.363),doubleToFloat(11.8894),doubleToFloat(0.0),doubleToFloat(-127.722),doubleToFloat(27.055),doubleToFloat(0.0),doubleToFloat(-129.905),doubleToFloat(21.3163),doubleToFloat(-18.29),doubleToFloat(-169.621),doubleToFloat(6.2233),doubleToFloat(-13.97),doubleToFloat(-85.1861),doubleToFloat(39.428),doubleToFloat(0.0),doubleToFloat(-86.6881),doubleToFloat(34.2794),doubleToFloat(-22.35),doubleToFloat(-47.9692),doubleToFloat(23.37),doubleToFloat(-24.64),doubleToFloat(10.2008),doubleToFloat(21.84),doubleToFloat(-26.67),doubleToFloat(66.3309),doubleToFloat(9.9),doubleToFloat(-20.32)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(114.118),doubleToFloat(6.9605),doubleToFloat(-11.68),doubleToFloat(113.16),doubleToFloat(11.0842),doubleToFloat(0.0),doubleToFloat(148.859),doubleToFloat(8.9437),doubleToFloat(0.0),doubleToFloat(152.678),doubleToFloat(-2.121),doubleToFloat(-14.73),doubleToFloat(171.384),doubleToFloat(11.0823),doubleToFloat(0.0),doubleToFloat(179.82),doubleToFloat(-2.1085),doubleToFloat(-11.94),doubleToFloat(193.495),doubleToFloat(15.4768),doubleToFloat(0.0),doubleToFloat(203.488),doubleToFloat(4.9549),doubleToFloat(-7.87),doubleToFloat(211.83),doubleToFloat(20.1639),doubleToFloat(0.0),doubleToFloat(219.173),doubleToFloat(14.9779),doubleToFloat(-9.65)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(230.069),doubleToFloat(18.5903),doubleToFloat(0.0),doubleToFloat(226.759),doubleToFloat(13.5161),doubleToFloat(-7.37),doubleToFloat(-173.623),doubleToFloat(0.75),doubleToFloat(-22.35),doubleToFloat(-158.647),doubleToFloat(-4.5872),doubleToFloat(-32.77),doubleToFloat(-126.869),doubleToFloat(6.3294),doubleToFloat(-29.97),doubleToFloat(-89.1395),doubleToFloat(15.6575),doubleToFloat(-32.0),doubleToFloat(-47.9692),doubleToFloat(5.59),doubleToFloat(-35.81),doubleToFloat(2.5808),doubleToFloat(4.32),doubleToFloat(-34.04),doubleToFloat(63.0309),doubleToFloat(-3.56),doubleToFloat(-28.45),doubleToFloat(115.172),doubleToFloat(-0.560097),doubleToFloat(-18.29)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-172.989),doubleToFloat(-14.1689),doubleToFloat(-36.58),doubleToFloat(-182.241),doubleToFloat(-10.0034),doubleToFloat(-31.75),doubleToFloat(-191.431),doubleToFloat(-14.7299),doubleToFloat(-27.43),doubleToFloat(-211.956),doubleToFloat(-26.2349),doubleToFloat(-20.83),doubleToFloat(-230.148),doubleToFloat(-35.2539),doubleToFloat(-10.16),doubleToFloat(-173.382),doubleToFloat(-24.3299),doubleToFloat(-35.81),doubleToFloat(-182.72),doubleToFloat(-17.2579),doubleToFloat(-30.99),doubleToFloat(-234.379),doubleToFloat(-41.8749),doubleToFloat(-13.97),doubleToFloat(-230.824),doubleToFloat(-53.2509),doubleToFloat(-14.99),doubleToFloat(-265.323),doubleToFloat(-65.7619),doubleToFloat(-7.37)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-269.53),doubleToFloat(-61.7589),doubleToFloat(-7.37),doubleToFloat(-275.743),doubleToFloat(-63.4989),doubleToFloat(-4.06),doubleToFloat(-276.428),doubleToFloat(-61.6079),doubleToFloat(0.0),doubleToFloat(-241.975),doubleToFloat(-40.6069),doubleToFloat(0.0),doubleToFloat(-238.483),doubleToFloat(-39.3919),doubleToFloat(-5.08),doubleToFloat(-196.064),doubleToFloat(-27.6559),doubleToFloat(-30.48),doubleToFloat(-186.752),doubleToFloat(-22.1789),doubleToFloat(-30.73),doubleToFloat(-195.882),doubleToFloat(-30.6309),doubleToFloat(-30.73),doubleToFloat(-210.254),doubleToFloat(-31.0309),doubleToFloat(-26.42),doubleToFloat(-208.666),doubleToFloat(-37.1109),doubleToFloat(-25.91)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-228.288),doubleToFloat(-58.0969),doubleToFloat(-16.26),doubleToFloat(-259.342),doubleToFloat(-69.0049),doubleToFloat(-8.38),doubleToFloat(-205.474),doubleToFloat(-49.5209),doubleToFloat(-25.91),doubleToFloat(-192.292),doubleToFloat(-37.5079),doubleToFloat(-34.54),doubleToFloat(-171.859),doubleToFloat(-51.2809),doubleToFloat(-34.8),doubleToFloat(-204.62),doubleToFloat(-55.6069),doubleToFloat(-27.43),doubleToFloat(-185.84),doubleToFloat(-33.7959),doubleToFloat(-34.8),doubleToFloat(-181.365),doubleToFloat(-25.5569),doubleToFloat(-34.54),doubleToFloat(-170.829),doubleToFloat(-39.4709),doubleToFloat(-38.61),doubleToFloat(-228.423),doubleToFloat(-63.4019),doubleToFloat(-18.29)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-256.516),doubleToFloat(-72.9869),doubleToFloat(-10.92),doubleToFloat(-207.002),doubleToFloat(-77.4509),doubleToFloat(-17.02),doubleToFloat(-185.127),doubleToFloat(-52.9949),doubleToFloat(-31.75),doubleToFloat(-167.84),doubleToFloat(-78.2769),doubleToFloat(-22.35),doubleToFloat(-225.091),doubleToFloat(-72.7539),doubleToFloat(-10.16),doubleToFloat(-229.071),doubleToFloat(-66.9399),doubleToFloat(-17.27),doubleToFloat(-133.553),doubleToFloat(-64.2139),doubleToFloat(-43.18),doubleToFloat(-133.918),doubleToFloat(-74.2739),doubleToFloat(-35.05),doubleToFloat(-166.314),doubleToFloat(-39.5879),doubleToFloat(-40.39),doubleToFloat(-124.082),doubleToFloat(-35.2919),doubleToFloat(-49.28)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-156.943),doubleToFloat(-23.6179),doubleToFloat(-40.13),doubleToFloat(-152.864),doubleToFloat(-11.2916),doubleToFloat(-36.58),doubleToFloat(-122.497),doubleToFloat(-11.4953),doubleToFloat(-42.67),doubleToFloat(-90.4839),doubleToFloat(-7.8107),doubleToFloat(-46.23),doubleToFloat(-82.8456),doubleToFloat(-34.5569),doubleToFloat(-51.05),doubleToFloat(-43.3992),doubleToFloat(-26.1599),doubleToFloat(-48.01),doubleToFloat(-38.3192),doubleToFloat(-44.9599),doubleToFloat(-51.05),doubleToFloat(4.6108),doubleToFloat(-21.0799),doubleToFloat(-46.23),doubleToFloat(6.6408),doubleToFloat(-44.7099),doubleToFloat(-49.02),doubleToFloat(60.4909),doubleToFloat(-27.1799),doubleToFloat(-43.94)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(59.9809),doubleToFloat(-54.0999),doubleToFloat(-44.7),doubleToFloat(117.636),doubleToFloat(-21.7149),doubleToFloat(-33.02),doubleToFloat(120.947),doubleToFloat(-46.0389),doubleToFloat(-28.45),doubleToFloat(155.384),doubleToFloat(-17.5349),doubleToFloat(-23.37),doubleToFloat(162.792),doubleToFloat(-41.0489),doubleToFloat(-21.84),doubleToFloat(183.998),doubleToFloat(-13.9029),doubleToFloat(-13.97),doubleToFloat(190.265),doubleToFloat(-27.8559),doubleToFloat(-14.22),doubleToFloat(203.392),doubleToFloat(-6.2522),doubleToFloat(-9.91),doubleToFloat(207.767),doubleToFloat(-18.3949),doubleToFloat(-10.67),doubleToFloat(223.159),doubleToFloat(8.3645),doubleToFloat(-18.29)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-92.6284),doubleToFloat(-66.1809),doubleToFloat(-41.15),doubleToFloat(-36.7892),doubleToFloat(-78.9999),doubleToFloat(-37.59),doubleToFloat(1.0508),doubleToFloat(-76.9599),doubleToFloat(-38.1),doubleToFloat(49.3109),doubleToFloat(-79.4999),doubleToFloat(-30.99),doubleToFloat(121.1),doubleToFloat(-67.3769),doubleToFloat(-17.27),doubleToFloat(171.837),doubleToFloat(-56.7449),doubleToFloat(-9.65),doubleToFloat(195.473),doubleToFloat(-39.6469),doubleToFloat(-7.11),doubleToFloat(223.047),doubleToFloat(-18.8189),doubleToFloat(-5.59),doubleToFloat(233.698),doubleToFloat(-7.2368),doubleToFloat(-11.94),doubleToFloat(-107.939),doubleToFloat(-68.9429),doubleToFloat(-73.66)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-109.174),doubleToFloat(-70.6239),doubleToFloat(-71.37),doubleToFloat(-83.1762),doubleToFloat(-64.8699),doubleToFloat(-64.52),doubleToFloat(-60.2597),doubleToFloat(-77.5359),doubleToFloat(-77.22),doubleToFloat(-75.7239),doubleToFloat(-77.7709),doubleToFloat(-80.77),doubleToFloat(-96.8564),doubleToFloat(-73.4239),doubleToFloat(-80.01),doubleToFloat(-40.3492),doubleToFloat(-92.1999),doubleToFloat(0.0),doubleToFloat(-92.7342),doubleToFloat(-82.1339),doubleToFloat(0.0),doubleToFloat(47.0309),doubleToFloat(-90.4299),doubleToFloat(0.0),doubleToFloat(127.717),doubleToFloat(-69.1159),doubleToFloat(0.0),doubleToFloat(196.054),doubleToFloat(-44.1779),doubleToFloat(0.0)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(225.241),doubleToFloat(-19.1009),doubleToFloat(0.0),doubleToFloat(-163.77),doubleToFloat(-81.8899),doubleToFloat(0.0),doubleToFloat(-125.906),doubleToFloat(-82.9039),doubleToFloat(0.0),doubleToFloat(-199.76),doubleToFloat(-82.4539),doubleToFloat(0.0),doubleToFloat(-222.9),doubleToFloat(-75.5739),doubleToFloat(0.0),doubleToFloat(-252.398),doubleToFloat(-79.0009),doubleToFloat(0.0),doubleToFloat(-255.032),doubleToFloat(-76.7379),doubleToFloat(-7.87),doubleToFloat(-274.414),doubleToFloat(-79.7719),doubleToFloat(0.0),doubleToFloat(-271.253),doubleToFloat(-78.5029),doubleToFloat(-4.57),doubleToFloat(277.433),doubleToFloat(48.8188),doubleToFloat(-86.61)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(258.132),doubleToFloat(14.5177),doubleToFloat(-73.15),doubleToFloat(270.88),doubleToFloat(41.0393),doubleToFloat(-63.25),doubleToFloat(249.887),doubleToFloat(26.3978),doubleToFloat(-9.65),doubleToFloat(237.134),doubleToFloat(15.1495),doubleToFloat(-16.51),doubleToFloat(242.456),doubleToFloat(21.535),doubleToFloat(0.0),doubleToFloat(256.63),doubleToFloat(35.8549),doubleToFloat(-5.84),doubleToFloat(251.355),doubleToFloat(28.045),doubleToFloat(0.0),doubleToFloat(225.737),doubleToFloat(6.7142),doubleToFloat(-24.13),doubleToFloat(-275.222),doubleToFloat(-69.4079),doubleToFloat(-3.81),doubleToFloat(-275.637),doubleToFloat(-68.9829),doubleToFloat(0.0)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-275.351),doubleToFloat(-74.7999),doubleToFloat(-4.83),doubleToFloat(-277.432),doubleToFloat(-74.8429),doubleToFloat(0.0),doubleToFloat(-75.6284),doubleToFloat(-78.6279),doubleToFloat(-79.25),doubleToFloat(-96.7464),doubleToFloat(-75.3099),doubleToFloat(-78.23),doubleToFloat(62.2709),doubleToFloat(67.56),doubleToFloat(0.0),doubleToFloat(73.9509),doubleToFloat(79.25),doubleToFloat(0.0),doubleToFloat(2.8308),doubleToFloat(-88.6499),doubleToFloat(0.0),doubleToFloat(169.884),doubleToFloat(-59.9439),doubleToFloat(0.0),doubleToFloat(236.499),doubleToFloat(-6.5329),doubleToFloat(0.0),doubleToFloat(260.278),doubleToFloat(13.1461),doubleToFloat(-73.15)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(244.946),doubleToFloat(1.2884),doubleToFloat(-52.32),doubleToFloat(241.616),doubleToFloat(4.1116),doubleToFloat(-52.32),doubleToFloat(263.392),doubleToFloat(37.7359),doubleToFloat(-21.59),doubleToFloat(-167.924),doubleToFloat(10.7602),doubleToFloat(0.0),doubleToFloat(-4.0292),doubleToFloat(72.64),doubleToFloat(6.1),doubleToFloat(-44.9192),doubleToFloat(38.3501),doubleToFloat(8.13),doubleToFloat(24.6808),doubleToFloat(86.8701),doubleToFloat(3.56),doubleToFloat(54.6509),doubleToFloat(87.88),doubleToFloat(1.27),doubleToFloat(53.3809),doubleToFloat(28.7),doubleToFloat(9.91),doubleToFloat(28.7409),doubleToFloat(57.9101),doubleToFloat(6.1)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(13.7508),doubleToFloat(36.57),doubleToFloat(11.68),doubleToFloat(39.4109),doubleToFloat(69.59),doubleToFloat(3.56),doubleToFloat(-221.846),doubleToFloat(-15.5239),doubleToFloat(7.62),doubleToFloat(-198.687),doubleToFloat(-4.8381),doubleToFloat(13.97),doubleToFloat(-170.04),doubleToFloat(8.4533),doubleToFloat(5.33),doubleToFloat(-169.621),doubleToFloat(6.2233),doubleToFloat(13.97),doubleToFloat(-129.905),doubleToFloat(21.3163),doubleToFloat(18.29),doubleToFloat(-86.6881),doubleToFloat(34.2794),doubleToFloat(22.35),doubleToFloat(-47.9692),doubleToFloat(23.37),doubleToFloat(24.64),doubleToFloat(10.2008),doubleToFloat(21.84),doubleToFloat(26.67)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(66.3309),doubleToFloat(9.9),doubleToFloat(20.32),doubleToFloat(114.118),doubleToFloat(6.9605),doubleToFloat(11.68),doubleToFloat(152.678),doubleToFloat(-2.121),doubleToFloat(14.73),doubleToFloat(179.82),doubleToFloat(-2.1085),doubleToFloat(11.94),doubleToFloat(203.488),doubleToFloat(4.9549),doubleToFloat(7.87),doubleToFloat(219.173),doubleToFloat(14.9779),doubleToFloat(9.65),doubleToFloat(226.759),doubleToFloat(13.5161),doubleToFloat(7.37),doubleToFloat(-173.623),doubleToFloat(0.75),doubleToFloat(22.35),doubleToFloat(-158.647),doubleToFloat(-4.5872),doubleToFloat(32.77),doubleToFloat(-126.869),doubleToFloat(6.3294),doubleToFloat(29.97)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-89.1395),doubleToFloat(15.6575),doubleToFloat(32.0),doubleToFloat(-47.9692),doubleToFloat(5.59),doubleToFloat(35.81),doubleToFloat(2.5808),doubleToFloat(4.32),doubleToFloat(34.04),doubleToFloat(63.0309),doubleToFloat(-3.56),doubleToFloat(28.45),doubleToFloat(115.172),doubleToFloat(-0.560097),doubleToFloat(18.29),doubleToFloat(-182.241),doubleToFloat(-10.0034),doubleToFloat(31.75),doubleToFloat(-172.989),doubleToFloat(-14.1689),doubleToFloat(36.58),doubleToFloat(-191.431),doubleToFloat(-14.7299),doubleToFloat(27.43),doubleToFloat(-211.956),doubleToFloat(-26.2349),doubleToFloat(20.83),doubleToFloat(-230.148),doubleToFloat(-35.2539),doubleToFloat(10.16)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-182.72),doubleToFloat(-17.2579),doubleToFloat(30.99),doubleToFloat(-173.382),doubleToFloat(-24.3299),doubleToFloat(35.81),doubleToFloat(-234.379),doubleToFloat(-41.8749),doubleToFloat(13.97),doubleToFloat(-269.53),doubleToFloat(-61.7589),doubleToFloat(7.37),doubleToFloat(-265.323),doubleToFloat(-65.7619),doubleToFloat(7.37),doubleToFloat(-230.824),doubleToFloat(-53.2509),doubleToFloat(14.99),doubleToFloat(-238.483),doubleToFloat(-39.3919),doubleToFloat(5.08),doubleToFloat(-275.743),doubleToFloat(-63.4989),doubleToFloat(4.06),doubleToFloat(-195.882),doubleToFloat(-30.6309),doubleToFloat(30.73),doubleToFloat(-186.752),doubleToFloat(-22.1789),doubleToFloat(30.73)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-196.064),doubleToFloat(-27.6559),doubleToFloat(30.48),doubleToFloat(-210.254),doubleToFloat(-31.0309),doubleToFloat(26.42),doubleToFloat(-208.666),doubleToFloat(-37.1109),doubleToFloat(25.91),doubleToFloat(-259.342),doubleToFloat(-69.0049),doubleToFloat(8.38),doubleToFloat(-228.288),doubleToFloat(-58.0969),doubleToFloat(16.26),doubleToFloat(-205.474),doubleToFloat(-49.5209),doubleToFloat(25.91),doubleToFloat(-192.292),doubleToFloat(-37.5079),doubleToFloat(34.54),doubleToFloat(-204.62),doubleToFloat(-55.6069),doubleToFloat(27.43),doubleToFloat(-171.859),doubleToFloat(-51.2809),doubleToFloat(34.8),doubleToFloat(-185.84),doubleToFloat(-33.7959),doubleToFloat(34.8)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-181.365),doubleToFloat(-25.5569),doubleToFloat(34.54),doubleToFloat(-170.829),doubleToFloat(-39.4709),doubleToFloat(38.61),doubleToFloat(-256.516),doubleToFloat(-72.9869),doubleToFloat(10.92),doubleToFloat(-228.423),doubleToFloat(-63.4019),doubleToFloat(18.29),doubleToFloat(-185.127),doubleToFloat(-52.9949),doubleToFloat(31.75),doubleToFloat(-207.002),doubleToFloat(-77.4509),doubleToFloat(17.02),doubleToFloat(-167.84),doubleToFloat(-78.2769),doubleToFloat(22.35),doubleToFloat(-229.071),doubleToFloat(-66.9399),doubleToFloat(17.27),doubleToFloat(-225.091),doubleToFloat(-72.7539),doubleToFloat(10.16),doubleToFloat(-133.918),doubleToFloat(-74.2739),doubleToFloat(35.05)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-133.553),doubleToFloat(-64.2139),doubleToFloat(43.18),doubleToFloat(-124.082),doubleToFloat(-35.2919),doubleToFloat(49.28),doubleToFloat(-166.314),doubleToFloat(-39.5879),doubleToFloat(40.39),doubleToFloat(-156.943),doubleToFloat(-23.6179),doubleToFloat(40.13),doubleToFloat(-152.864),doubleToFloat(-11.2916),doubleToFloat(36.58),doubleToFloat(-122.497),doubleToFloat(-11.4953),doubleToFloat(42.67),doubleToFloat(-82.8456),doubleToFloat(-34.5569),doubleToFloat(51.05),doubleToFloat(-90.4839),doubleToFloat(-7.8107),doubleToFloat(46.23),doubleToFloat(-38.3192),doubleToFloat(-44.9599),doubleToFloat(51.05),doubleToFloat(-43.3992),doubleToFloat(-26.1599),doubleToFloat(48.01)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(6.6408),doubleToFloat(-44.7099),doubleToFloat(49.02),doubleToFloat(4.6108),doubleToFloat(-21.0799),doubleToFloat(46.23),doubleToFloat(59.9809),doubleToFloat(-54.0999),doubleToFloat(44.7),doubleToFloat(60.4909),doubleToFloat(-27.1799),doubleToFloat(43.94),doubleToFloat(120.947),doubleToFloat(-46.0389),doubleToFloat(28.45),doubleToFloat(117.636),doubleToFloat(-21.7149),doubleToFloat(33.02),doubleToFloat(162.792),doubleToFloat(-41.0489),doubleToFloat(21.84),doubleToFloat(155.384),doubleToFloat(-17.5349),doubleToFloat(23.37),doubleToFloat(190.265),doubleToFloat(-27.8559),doubleToFloat(14.22),doubleToFloat(183.998),doubleToFloat(-13.9029),doubleToFloat(13.97)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(207.767),doubleToFloat(-18.3949),doubleToFloat(10.67),doubleToFloat(203.392),doubleToFloat(-6.2522),doubleToFloat(9.91),doubleToFloat(223.159),doubleToFloat(8.3645),doubleToFloat(18.29),doubleToFloat(-92.6284),doubleToFloat(-66.1809),doubleToFloat(41.15),doubleToFloat(-36.7892),doubleToFloat(-78.9999),doubleToFloat(37.59),doubleToFloat(1.0508),doubleToFloat(-76.9599),doubleToFloat(38.1),doubleToFloat(49.3109),doubleToFloat(-79.4999),doubleToFloat(30.99),doubleToFloat(121.1),doubleToFloat(-67.3769),doubleToFloat(17.27),doubleToFloat(171.837),doubleToFloat(-56.7449),doubleToFloat(9.65),doubleToFloat(195.473),doubleToFloat(-39.6469),doubleToFloat(7.11)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(223.047),doubleToFloat(-18.8189),doubleToFloat(5.59),doubleToFloat(233.698),doubleToFloat(-7.2368),doubleToFloat(11.94),doubleToFloat(-109.174),doubleToFloat(-70.6239),doubleToFloat(71.37),doubleToFloat(-107.939),doubleToFloat(-68.9429),doubleToFloat(73.66),doubleToFloat(-83.1762),doubleToFloat(-64.8699),doubleToFloat(64.52),doubleToFloat(-60.2597),doubleToFloat(-77.5359),doubleToFloat(77.22),doubleToFloat(-96.8564),doubleToFloat(-73.4239),doubleToFloat(80.01),doubleToFloat(-75.7239),doubleToFloat(-77.7709),doubleToFloat(80.77),doubleToFloat(-255.032),doubleToFloat(-76.7379),doubleToFloat(7.87),doubleToFloat(-271.253),doubleToFloat(-78.5029),doubleToFloat(4.57)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(270.88),doubleToFloat(41.0393),doubleToFloat(63.25),doubleToFloat(258.132),doubleToFloat(14.5177),doubleToFloat(73.15),doubleToFloat(277.433),doubleToFloat(48.8188),doubleToFloat(86.61),doubleToFloat(237.134),doubleToFloat(15.1495),doubleToFloat(16.51),doubleToFloat(249.887),doubleToFloat(26.3978),doubleToFloat(9.65),doubleToFloat(256.63),doubleToFloat(35.8549),doubleToFloat(5.84),doubleToFloat(225.737),doubleToFloat(6.7142),doubleToFloat(24.13),doubleToFloat(-275.222),doubleToFloat(-69.4079),doubleToFloat(3.81),doubleToFloat(-275.351),doubleToFloat(-74.7999),doubleToFloat(4.83),doubleToFloat(-96.7464),doubleToFloat(-75.3099),doubleToFloat(78.23)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-75.6284),doubleToFloat(-78.6279),doubleToFloat(79.25),doubleToFloat(241.616),doubleToFloat(4.1116),doubleToFloat(52.32),doubleToFloat(244.946),doubleToFloat(1.2884),doubleToFloat(52.32),doubleToFloat(260.278),doubleToFloat(13.1461),doubleToFloat(73.15),doubleToFloat(263.392),doubleToFloat(37.7359),doubleToFloat(21.59)], Java.type("float[]"))));
  this.x3dModel = new X3D().setProfile("Immersive").setVersion("3.3")
  .setHead(new head()
    .addMeta(new meta().setName("generator").setContent("hand conversion from http://www.x3dom.org/x3dom/test/functional/flipper.html"))
    .addMeta(new meta().setName("title").setContent("flipp.x3d"))
    .addMeta(new meta().setName("description").setContent("flipper flopping around"))
    .addMeta(new meta().setName("identifier").setContent("http://www.x3dom.org/x3dom/test/functional/flipp.x3d"))
    .addMeta(new meta().setName("creator").setContent("Yvonne Jung, metadata by John Carlson"))
    .addMeta(new meta().setName("translated").setContent("13 March 2016"))
    .addMeta(new meta().setName("generator").setContent("X3dToJson.xslt, https://www.web3d.org/x3d/stylesheets/X3dToJson.html")))
  .setScene(new Scene()
    .addChild(new Viewpoint("cam0").setDescription("cam0 description").setPosition(doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(800.0)))
    .addChild(new Viewpoint("cam1").setDescription("cam1 description").setPosition(doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(2000.0)))
    .addChild(new Viewpoint("cam2").setDescription("cam2 description").setPosition(doubleToFloat(0.0),doubleToFloat(200.0),doubleToFloat(1000.0)))
    .addChild(new Background().setGroundAngle(Java.to([doubleToFloat(0.9),doubleToFloat(1.5),doubleToFloat(1.57)], Java.type("float[]"))).setGroundColor(new MFColor(Java.to([doubleToFloat(0.21),doubleToFloat(0.18),doubleToFloat(0.66),doubleToFloat(0.2),doubleToFloat(0.44),doubleToFloat(0.85),doubleToFloat(0.51),doubleToFloat(0.81),doubleToFloat(0.95),doubleToFloat(0.51),doubleToFloat(0.81),doubleToFloat(0.95)], Java.type("float[]")))).setSkyAngle(Java.to([doubleToFloat(0.9),doubleToFloat(1.5),doubleToFloat(1.57)], Java.type("float[]"))).setSkyColor(new MFColor(Java.to([doubleToFloat(0.21),doubleToFloat(0.18),doubleToFloat(0.66),doubleToFloat(0.2),doubleToFloat(0.44),doubleToFloat(0.85),doubleToFloat(0.51),doubleToFloat(0.81),doubleToFloat(0.95),doubleToFloat(0.51),doubleToFloat(0.81),doubleToFloat(0.95)], Java.type("float[]")))))
    .addChild(new NavigationInfo("user01").setSpeed(50))
    .addChild(new Fog())
    .addChild(new Transform("trans").setRotation(doubleToFloat(1.0),doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.78))
      .addChild(new Shape()
        .setAppearance(new Appearance()
          .setMaterial(new Material("mat").setAmbientIntensity(0.508497).setDiffuseColor(doubleToFloat(0.337255),doubleToFloat(0.4),doubleToFloat(0.788235)).setSpecularColor(doubleToFloat(1.0),doubleToFloat(1.0),doubleToFloat(1.0))))
        .setGeometry(new IndexedFaceSet().setCreaseAngle(2).setCoordIndex(this.IndexedFaceSet_5_17_coordIndex)
          .setCoord(new Coordinate("pointList").setPoint(this.pointList_6_17_point)))))
    .addChild(new TimeSensor("ts").setCycleInterval(2).setLoop(true))
    .addChild(new ScalarInterpolator("si").setKey(Java.to([doubleToFloat(0.0),doubleToFloat(0.5),doubleToFloat(1.0)], Java.type("float[]"))).setKeyValue(Java.to([doubleToFloat(0.0),doubleToFloat(1.0),doubleToFloat(0.0)], Java.type("float[]"))))
    .addChild(new CoordinateInterpolator("ci").setKey(Java.to([doubleToFloat(0.0),doubleToFloat(0.5),doubleToFloat(1.0)], Java.type("float[]"))).setKeyValue(this.ci_3_23_keyValue))
    .addChild(new ROUTE().setFromNode("ci").setFromField("value_changed").setToNode("pointList").setToField("set_point"))
    .addChild(new ROUTE().setFromNode("si").setFromField("value_changed").setToNode("ci").setToField("set_fraction"))
    .addChild(new ROUTE().setFromNode("ts").setFromField("fraction_changed").setToNode("si").setToField("set_fraction")));
  },
  // end of initialize() method


  /** Provide a shallow copy of the X3D model.
   * @return flipp model
   */
  getX3dModel : function()
  {	  
	  return this.x3dModel;
  },
  
  /** Indicate X3DJSAIL validation results for this X3D model.
   * @return validation results plus exception information, if any
   */
  validateSelf : function()
  {
	var       metaResult = "";
	var validationResult = "";
	var  exceptionResult = "";
	try
	{
		this.initialize();
		
		if ((this.getX3dModel() == null) || (this.getX3dModel().getHead() == null))
		{
			validationResult = "empty scene, nothing to validate. " + this.x3dModel.validate();
			return validationResult;
		}
		// first list informational meta elements of interest
		var metaList = this.getX3dModel().getHead().getMetaList();
		for (var m in metaList) {
			meta = metaList[m];
			if (meta.getName().equals(meta.NAME_ERROR) ||
				meta.getName().equals(meta.NAME_WARNING) ||
				meta.getName().equals(meta.NAME_HINT) ||
				meta.getName().equals(meta.NAME_INFO) ||
				meta.getName().equals(meta.NAME_TODO))
			{
				metaResult += meta.toStringX3D();
			}
		}
		validationResult += this.x3dModel.validate(); // walk entire tree to validate correctness
	}
	catch (e)
	{
		exceptionResult = e; // report exception failures, if any
	}
	if  (metaResult === "" && exceptionResult === "" && validationResult === "")
	     return "success";
	else
	{
		var returnMessage = metaResult;
		if  (exceptionResult !== "" && validationResult !== "")
			returnMessage += "\n*** ";
		returnMessage += exceptionResult;
		if  (exceptionResult === "" && validationResult !== "")
			returnMessage = "\n" + returnMessage; // skip line before meta tags, etc.
		returnMessage += validationResult;
		return returnMessage;
	}
  },
    /** Default main() method provided for test purposes.
     * @param argv input parameters
     */
    main : function (argv)
    {
		var testObject = new flipp();
		print ("flipp execution self-validation test results: " + testObject.validateSelf());
	}
}
new flipp().main();