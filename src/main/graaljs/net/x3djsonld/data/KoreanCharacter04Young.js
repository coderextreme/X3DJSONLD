load('X3Dautoclass.js');

// Javadoc annotations follow, see below for source.
/**
 * <p> Articulated 3D game character designed with a general graphics tool, then converted into an X3D HAnim model. </p>
 <p> Related links: KoreanCharacter04Young.java source, <a href="https://www.web3d.org/x3d/content/examples/X3dResources.html" target="_blank">X3D Resources</a>, <a href="https://www.web3d.org/x3d/content/examples/X3dSceneAuthoringHints.html" target="_blank">X3D Scene Authoring Hints</a> and <a href="https://www.web3d.org/x3d/content/X3dTooltips.html" target="_blank">X3D Tooltips</a>. </p>
	<table style="color:black; border:0px solid; border-spacing:10px 0px;" summary="Scene Metadata">
		<tr style="background-color:silver; border-color:silver;">
			<td style="text-align:center; padding:10px 0px;"><i>meta tags</i></td>
			<td style="text-align:left;   padding:10px 0px;">net.x3djsonld.data.KoreanCharacter04Young&nbsp; Document Metadata </td>
		</tr>

		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> title </i> </td>
			<td> <a href="https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Characters/KoreanCharacter04Young.x3d">KoreanCharacter04Young.x3d</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> creator </i> </td>
			<td> Jin Hoon Lee and Min Joo Lee </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> translator </i> </td>
			<td> Chul Hee Jung and Myeong Won Lee </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> created </i> </td>
			<td> 31 March 2011 </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> translated </i> </td>
			<td> 1 November 2014 </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> modified </i> </td>
			<td> 23 December 2021 </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> description </i> </td>
			<td> Articulated 3D game character designed with a general graphics tool, then converted into an X3D HAnim model. </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> reference </i> </td>
			<td> KoreanCharacter00ReadMe.txt </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> reference </i> </td>
			<td> <a href="https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Characters/KoreanCharacterHumanMotion_Infotech2014_140706.pdf">KoreanCharacterHumanMotion_Infotech2014_140706.pdf</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> reference </i> </td>
			<td> <a href="https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Characters/KoreanCharactersIllustrated.pdf">KoreanCharactersIllustrated.pdf</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> identifier </i> </td>
			<td> <a href="https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Characters/KoreanCharacter04Young.x3d" target="_blank">https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Characters/KoreanCharacter04Young.x3d</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> generator </i> </td>
			<td> 3DS MAX, <a href="http://www.autodesk.com/products/autodesk-3ds-max/overview" target="_blank">http://www.autodesk.com/products/autodesk-3ds-max/overview</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> generator </i> </td>
			<td> Suwon University HAnim Editor </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> generator </i> </td>
			<td> Gnu Image Manipulation Program, <a href="http://www.gimp.org" target="_blank">http://www.gimp.org</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> generator </i> </td>
			<td> X3D-Edit 3.3, <a href="https://savage.nps.edu/X3D-Edit" target="_blank">https://savage.nps.edu/X3D-Edit</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> license </i> </td>
			<td> <a href="https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Characters/../license.html">../license.html</a> </td>
		</tr>
		<tr style="background-color:silver; border-color:silver;">
			<td style="text-align:center;" colspan="2">  &nbsp; </td>
		</tr>
	</table>

	<p>
		This program uses the
		<a href="https://www.web3d.org/specifications/java/X3DJSAIL.html" target="_blank">X3D Java Scene Access Interface Library (X3DJSAIL)</a>.
		It has been produced using the 
		<a href="https://www.web3d.org/x3d/stylesheets/X3dToES5.xslt" target="_blank">X3dToES5.xslt</a>
		stylesheet to create ES5 source code from an <code>.x3d</code> scene.
	</p>

	* @author Jin Hoon Lee and Min Joo Lee
 */

function KoreanCharacter04Young
  /** Default constructor to create this object. */
  ()
  {
    /** The initialized model object, created within initialize() method. */
    this.x3dModel = {};
    this.initialize();
    return this;
  }
  function doubleToFloat(d) {
    if (Float32Array) {
        return new Float32Array([d])[0];
    }
  }
KoreanCharacter04Young.prototype = {
  /** Create and initialize the X3D model. */
  initialize : function ()
  {

	/** Large attribute array: MetadataSet reference field, scene-graph level=4, element #22, 1 total value */
	this.MetadataSet_HAnimHumanoid.info_4_22_reference = new SFString("https://www.web3d.org/documents/specifications/19774/V2.0/Architecture/ObjectInterfaces.html#Humanoid");

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=8, element #32, 480 total numbers */
	this.IndexedFaceSet_8_32_coordIndex = new MFInt32(Java.to([0,1,2,-1,0,2,3,-1,0,3,4,-1,0,4,5,-1,0,5,6,-1,0,6,7,-1,0,7,8,-1,0,8,9,-1,0,9,10,-1,0,10,11,-1,0,11,12,-1,0,12,1,-1,14,2,1,-1,1,13,14,-1,15,3,2,-1,2,14,15,-1,16,4,3,-1,3,15,16,-1,17,5,4,-1,4,16,17,-1,18,6,5,-1,5,17,18,-1,19,7,6,-1,6,18,19,-1,20,8,7,-1,7,19,20,-1,21,9,8,-1,8,20,21,-1,22,10,9,-1,9,21,22,-1,23,11,10,-1,10,22,23,-1,24,12,11,-1,11,23,24,-1,13,1,12,-1,12,24,13,-1,26,14,13,-1,13,25,26,-1,27,15,14,-1,14,26,27,-1,28,16,15,-1,15,27,28,-1,29,17,16,-1,16,28,29,-1,30,18,17,-1,17,29,30,-1,31,19,18,-1,18,30,31,-1,32,20,19,-1,19,31,32,-1,33,21,20,-1,20,32,33,-1,34,22,21,-1,21,33,34,-1,35,23,22,-1,22,34,35,-1,36,24,23,-1,23,35,36,-1,25,13,24,-1,24,36,25,-1,38,26,25,-1,25,37,38,-1,39,27,26,-1,26,38,39,-1,40,28,27,-1,27,39,40,-1,41,29,28,-1,28,40,41,-1,42,30,29,-1,29,41,42,-1,43,31,30,-1,30,42,43,-1,44,32,31,-1,31,43,44,-1,45,33,32,-1,32,44,45,-1,46,34,33,-1,33,45,46,-1,47,35,34,-1,34,46,47,-1,48,36,35,-1,35,47,48,-1,37,25,36,-1,36,48,37,-1,50,38,37,-1,37,49,50,-1,51,39,38,-1,38,50,51,-1,52,40,39,-1,39,51,52,-1,53,41,40,-1,40,52,53,-1,54,42,41,-1,41,53,54,-1,55,43,42,-1,42,54,55,-1,56,44,43,-1,43,55,56,-1,57,45,44,-1,44,56,57,-1,58,46,45,-1,45,57,58,-1,59,47,46,-1,46,58,59,-1,60,48,47,-1,47,59,60,-1,49,37,48,-1,48,60,49,-1,61,50,49,-1,61,51,50,-1,61,52,51,-1,61,53,52,-1,61,54,53,-1,61,55,54,-1,61,56,55,-1,61,57,56,-1,61,58,57,-1,61,59,58,-1,61,60,59,-1,61,49,60,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=8, element #32, 480 total numbers */
	this.IndexedFaceSet_8_32_texCoordIndex = new MFInt32(Java.to([0,1,2,-1,0,2,3,-1,0,3,4,-1,0,4,5,-1,0,5,6,-1,0,6,7,-1,0,7,8,-1,0,8,9,-1,0,9,10,-1,0,10,11,-1,0,11,12,-1,0,12,1,-1,14,2,1,-1,1,13,14,-1,15,3,2,-1,2,14,15,-1,16,4,3,-1,3,15,16,-1,17,5,4,-1,4,16,17,-1,18,6,5,-1,5,17,18,-1,19,7,6,-1,6,18,19,-1,20,8,7,-1,7,19,20,-1,21,9,8,-1,8,20,21,-1,22,10,9,-1,9,21,22,-1,23,11,10,-1,10,22,23,-1,24,12,11,-1,11,23,24,-1,13,1,12,-1,12,24,13,-1,26,14,13,-1,13,25,26,-1,27,15,14,-1,14,26,27,-1,28,16,15,-1,15,27,28,-1,29,17,16,-1,16,28,29,-1,30,18,17,-1,17,29,30,-1,31,19,18,-1,18,30,31,-1,32,20,19,-1,19,31,32,-1,33,21,20,-1,20,32,33,-1,34,22,21,-1,21,33,34,-1,35,23,22,-1,22,34,35,-1,36,24,23,-1,23,35,36,-1,25,13,24,-1,24,36,25,-1,38,26,25,-1,25,37,38,-1,39,27,26,-1,26,38,39,-1,40,28,27,-1,27,39,40,-1,41,29,28,-1,28,40,41,-1,42,30,29,-1,29,41,42,-1,43,31,30,-1,30,42,43,-1,44,32,31,-1,31,43,44,-1,45,33,32,-1,32,44,45,-1,46,34,33,-1,33,45,46,-1,47,35,34,-1,34,46,47,-1,48,36,35,-1,35,47,48,-1,37,25,36,-1,36,48,37,-1,50,38,37,-1,37,49,50,-1,51,39,38,-1,38,50,51,-1,52,40,39,-1,39,51,52,-1,53,41,40,-1,40,52,53,-1,54,42,41,-1,41,53,54,-1,55,43,42,-1,42,54,55,-1,56,44,43,-1,43,55,56,-1,57,45,44,-1,44,56,57,-1,58,46,45,-1,45,57,58,-1,59,47,46,-1,46,58,59,-1,60,48,47,-1,47,59,60,-1,49,37,48,-1,48,60,49,-1,61,50,49,-1,61,51,50,-1,61,52,51,-1,61,53,52,-1,61,54,53,-1,61,55,54,-1,61,56,55,-1,61,57,56,-1,61,58,57,-1,61,59,58,-1,61,60,59,-1,61,49,60,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=9, element #32, 186 total numbers made up of 62 3-tuple values */
	this.Coordinate_9_32_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(0.0000),doubleToFloat(0.9084),doubleToFloat(0.0235),doubleToFloat(0.0000),doubleToFloat(0.7867),doubleToFloat(-0.4669),doubleToFloat(-0.3773),doubleToFloat(0.7867),doubleToFloat(-0.4012),doubleToFloat(-0.6534),doubleToFloat(0.7867),doubleToFloat(-0.3219),doubleToFloat(-0.7545),doubleToFloat(0.7867),doubleToFloat(0.0235),doubleToFloat(-0.6534),doubleToFloat(0.7867),doubleToFloat(0.3690),doubleToFloat(-0.3773),doubleToFloat(0.7867),doubleToFloat(0.4482),doubleToFloat(0.0000),doubleToFloat(0.7867),doubleToFloat(0.5139),doubleToFloat(0.3773),doubleToFloat(0.7867),doubleToFloat(0.4482),doubleToFloat(0.6534),doubleToFloat(0.7867),doubleToFloat(0.3690)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.7545),doubleToFloat(0.7867),doubleToFloat(0.0235),doubleToFloat(0.6534),doubleToFloat(0.7867),doubleToFloat(-0.3219),doubleToFloat(0.3773),doubleToFloat(0.7867),doubleToFloat(-0.4012),doubleToFloat(0.0000),doubleToFloat(0.4542),doubleToFloat(-0.7625),doubleToFloat(-0.4879),doubleToFloat(0.4542),doubleToFloat(-0.6572),doubleToFloat(-0.8451),doubleToFloat(0.4542),doubleToFloat(-0.3695),doubleToFloat(-0.9758),doubleToFloat(0.4542),doubleToFloat(0.0235),doubleToFloat(-0.8451),doubleToFloat(0.4542),doubleToFloat(0.4165),doubleToFloat(-0.4879),doubleToFloat(0.4542),doubleToFloat(0.6023),doubleToFloat(0.0000),doubleToFloat(0.4542),doubleToFloat(0.7076)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.4879),doubleToFloat(0.4542),doubleToFloat(0.6023),doubleToFloat(0.8451),doubleToFloat(0.4542),doubleToFloat(0.4165),doubleToFloat(0.9758),doubleToFloat(0.4542),doubleToFloat(0.0235),doubleToFloat(0.8451),doubleToFloat(0.4542),doubleToFloat(-0.3695),doubleToFloat(0.4879),doubleToFloat(0.4542),doubleToFloat(-0.6572),doubleToFloat(0.0000),doubleToFloat(0.0000),doubleToFloat(-0.8292),doubleToFloat(-0.5634),doubleToFloat(0.0000),doubleToFloat(-0.7076),doubleToFloat(-0.9758),doubleToFloat(0.0000),doubleToFloat(-0.3754),doubleToFloat(-1.1270),doubleToFloat(0.0000),doubleToFloat(0.0235),doubleToFloat(-0.9758),doubleToFloat(0.0000),doubleToFloat(0.4773)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.5634),doubleToFloat(0.0000),doubleToFloat(0.7076),doubleToFloat(0.0000),doubleToFloat(0.0000),doubleToFloat(0.8292),doubleToFloat(0.5634),doubleToFloat(0.0000),doubleToFloat(0.7076),doubleToFloat(0.9758),doubleToFloat(0.0000),doubleToFloat(0.4773),doubleToFloat(1.1270),doubleToFloat(0.0000),doubleToFloat(0.0235),doubleToFloat(0.9758),doubleToFloat(0.0000),doubleToFloat(-0.3754),doubleToFloat(0.5634),doubleToFloat(0.0000),doubleToFloat(-0.7076),doubleToFloat(0.0000),doubleToFloat(-0.4542),doubleToFloat(-0.7076),doubleToFloat(-0.4879),doubleToFloat(-0.4542),doubleToFloat(-0.6023),doubleToFloat(-0.8451),doubleToFloat(-0.4542),doubleToFloat(-0.3146)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.9758),doubleToFloat(-0.4542),doubleToFloat(0.0235),doubleToFloat(-0.8451),doubleToFloat(-0.4542),doubleToFloat(0.4165),doubleToFloat(-0.4879),doubleToFloat(-0.4542),doubleToFloat(0.6023),doubleToFloat(0.0000),doubleToFloat(-0.4542),doubleToFloat(0.7076),doubleToFloat(0.4879),doubleToFloat(-0.4542),doubleToFloat(0.6023),doubleToFloat(0.8451),doubleToFloat(-0.4542),doubleToFloat(0.4165),doubleToFloat(0.9758),doubleToFloat(-0.4542),doubleToFloat(0.0235),doubleToFloat(0.8451),doubleToFloat(-0.4542),doubleToFloat(-0.3146),doubleToFloat(0.4879),doubleToFloat(-0.4542),doubleToFloat(-0.6023),doubleToFloat(0.0000),doubleToFloat(-0.7867),doubleToFloat(-0.3754)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.2817),doubleToFloat(-0.7867),doubleToFloat(-0.3146),doubleToFloat(-0.4879),doubleToFloat(-0.7867),doubleToFloat(-0.2034),doubleToFloat(-0.5634),doubleToFloat(-0.7867),doubleToFloat(0.0235),doubleToFloat(-0.4879),doubleToFloat(-0.7867),doubleToFloat(0.2504),doubleToFloat(-0.2817),doubleToFloat(-0.7867),doubleToFloat(0.4165),doubleToFloat(0.0000),doubleToFloat(-0.7867),doubleToFloat(0.4773),doubleToFloat(0.2817),doubleToFloat(-0.7867),doubleToFloat(0.4165),doubleToFloat(0.4879),doubleToFloat(-0.7867),doubleToFloat(0.2504),doubleToFloat(0.5634),doubleToFloat(-0.7867),doubleToFloat(0.0235),doubleToFloat(0.4879),doubleToFloat(-0.7867),doubleToFloat(-0.2034)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.2817),doubleToFloat(-0.7867),doubleToFloat(-0.3146),doubleToFloat(0.0000),doubleToFloat(-0.9084),doubleToFloat(0.0235)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=9, element #33, 124 total numbers made up of 62 2-tuple values */
	this.TextureCoordinate_9_33_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.6211),doubleToFloat(0.5754),doubleToFloat(0.7851),doubleToFloat(0.5720),doubleToFloat(0.7614),doubleToFloat(0.5720),doubleToFloat(0.6907),doubleToFloat(0.5698),doubleToFloat(0.6200),doubleToFloat(0.5698),doubleToFloat(0.6158),doubleToFloat(0.5702),doubleToFloat(0.5451),doubleToFloat(0.5702),doubleToFloat(0.4167),doubleToFloat(0.5698),doubleToFloat(0.5451),doubleToFloat(0.5702),doubleToFloat(0.6158),doubleToFloat(0.5702)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.6200),doubleToFloat(0.5698),doubleToFloat(0.6907),doubleToFloat(0.5698),doubleToFloat(0.7614),doubleToFloat(0.5720),doubleToFloat(0.8036),doubleToFloat(0.5346),doubleToFloat(0.7761),doubleToFloat(0.5346),doubleToFloat(0.6989),doubleToFloat(0.4838),doubleToFloat(0.6219),doubleToFloat(0.4428),doubleToFloat(0.6154),doubleToFloat(0.4438),doubleToFloat(0.5492),doubleToFloat(0.4639),doubleToFloat(0.4166),doubleToFloat(0.5346)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5492),doubleToFloat(0.4639),doubleToFloat(0.6154),doubleToFloat(0.4438),doubleToFloat(0.6219),doubleToFloat(0.4428),doubleToFloat(0.6989),doubleToFloat(0.4838),doubleToFloat(0.7761),doubleToFloat(0.5346),doubleToFloat(0.7912),doubleToFloat(0.4044),doubleToFloat(0.7635),doubleToFloat(0.4044),doubleToFloat(0.7042),doubleToFloat(0.3925),doubleToFloat(0.6194),doubleToFloat(0.3907),doubleToFloat(0.6148),doubleToFloat(0.3907)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5450),doubleToFloat(0.3974),doubleToFloat(0.4163),doubleToFloat(0.4938),doubleToFloat(0.5450),doubleToFloat(0.3974),doubleToFloat(0.6148),doubleToFloat(0.3907),doubleToFloat(0.6194),doubleToFloat(0.3907),doubleToFloat(0.7042),doubleToFloat(0.3925),doubleToFloat(0.7635),doubleToFloat(0.4044),doubleToFloat(0.7950),doubleToFloat(0.3772),doubleToFloat(0.7662),doubleToFloat(0.3772),doubleToFloat(0.6945),doubleToFloat(0.3645)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.6236),doubleToFloat(0.3695),doubleToFloat(0.6160),doubleToFloat(0.3695),doubleToFloat(0.5438),doubleToFloat(0.3780),doubleToFloat(0.4160),doubleToFloat(0.4530),doubleToFloat(0.5438),doubleToFloat(0.3780),doubleToFloat(0.6160),doubleToFloat(0.3695),doubleToFloat(0.6236),doubleToFloat(0.3695),doubleToFloat(0.6945),doubleToFloat(0.3645),doubleToFloat(0.7662),doubleToFloat(0.3772),doubleToFloat(0.7887),doubleToFloat(0.3451)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7635),doubleToFloat(0.3451),doubleToFloat(0.6980),doubleToFloat(0.3508),doubleToFloat(0.6262),doubleToFloat(0.3508),doubleToFloat(0.6297),doubleToFloat(0.3503),doubleToFloat(0.5389),doubleToFloat(0.3503),doubleToFloat(0.4181),doubleToFloat(0.3884),doubleToFloat(0.5389),doubleToFloat(0.3503),doubleToFloat(0.6297),doubleToFloat(0.3503),doubleToFloat(0.6262),doubleToFloat(0.3508),doubleToFloat(0.6980),doubleToFloat(0.3508)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7635),doubleToFloat(0.3451),doubleToFloat(0.6237),doubleToFloat(0.3398)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=9, element #41, 488 total numbers */
	this.IndexedFaceSet_9_41_coordIndex = new MFInt32(Java.to([47,46,45,-1,45,44,43,-1,45,43,42,-1,47,45,42,-1,48,47,42,-1,0,1,8,-1,8,7,0,-1,1,2,9,-1,9,8,1,-1,2,3,10,-1,10,9,2,-1,3,4,11,-1,11,10,3,-1,4,5,12,-1,12,11,4,-1,5,6,13,-1,13,12,5,-1,6,0,7,-1,7,13,6,-1,7,8,15,-1,15,14,7,-1,8,9,16,-1,16,15,8,-1,9,10,17,-1,17,16,9,-1,10,11,18,-1,18,17,10,-1,11,12,19,-1,19,18,11,-1,12,13,20,-1,20,19,12,-1,13,7,14,-1,14,20,13,-1,14,15,22,-1,22,21,14,-1,15,16,23,-1,23,22,15,-1,16,17,24,-1,24,23,16,-1,17,18,25,-1,25,24,17,-1,18,19,26,-1,26,25,18,-1,19,20,27,-1,27,26,19,-1,20,14,21,-1,21,27,20,-1,56,57,58,-1,58,59,60,-1,56,58,60,-1,56,60,61,-1,62,56,61,-1,29,28,21,-1,21,22,29,-1,30,29,22,-1,22,23,30,-1,31,30,23,-1,23,24,31,-1,32,31,24,-1,24,25,32,-1,33,32,25,-1,25,26,33,-1,34,33,26,-1,26,27,34,-1,28,34,27,-1,27,21,28,-1,36,35,28,-1,28,29,36,-1,37,36,29,-1,29,30,37,-1,38,37,30,-1,30,31,38,-1,39,38,31,-1,31,32,39,-1,40,39,32,-1,32,33,40,-1,41,40,33,-1,33,34,41,-1,35,41,34,-1,34,28,35,-1,42,43,1,-1,1,0,42,-1,43,44,2,-1,2,1,43,-1,44,45,3,-1,3,2,44,-1,45,46,4,-1,4,3,45,-1,46,47,5,-1,5,4,46,-1,47,48,6,-1,6,5,47,-1,48,42,0,-1,0,6,48,-1,50,49,35,-1,35,36,50,-1,51,50,36,-1,36,37,51,-1,52,51,37,-1,37,38,52,-1,53,52,38,-1,38,39,53,-1,54,53,39,-1,39,40,54,-1,55,54,40,-1,40,41,55,-1,49,55,41,-1,41,35,49,-1,57,56,49,-1,49,50,57,-1,58,57,50,-1,50,51,58,-1,59,58,51,-1,51,52,59,-1,60,59,52,-1,52,53,60,-1,61,60,53,-1,53,54,61,-1,62,61,54,-1,54,55,62,-1,56,62,55,-1,55,49,56,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=9, element #41, 488 total numbers */
	this.IndexedFaceSet_9_41_texCoordIndex = new MFInt32(Java.to([5,4,3,-1,3,2,0,-1,3,0,1,-1,5,3,1,-1,6,5,1,-1,7,10,8,-1,8,9,7,-1,10,12,11,-1,11,8,10,-1,12,14,13,-1,13,11,12,-1,14,16,15,-1,15,13,14,-1,16,18,17,-1,17,15,16,-1,18,20,19,-1,19,17,18,-1,20,7,9,-1,9,19,20,-1,9,8,21,-1,21,22,9,-1,8,11,23,-1,23,21,8,-1,11,13,24,-1,24,23,11,-1,13,15,25,-1,25,24,13,-1,15,17,26,-1,26,25,15,-1,17,19,27,-1,27,26,17,-1,19,9,22,-1,22,27,19,-1,22,21,28,-1,28,29,22,-1,21,23,30,-1,30,28,21,-1,23,24,31,-1,31,30,23,-1,24,25,32,-1,32,31,24,-1,25,26,33,-1,33,32,25,-1,26,27,34,-1,34,33,26,-1,27,22,29,-1,29,34,27,-1,42,43,44,-1,44,45,46,-1,42,44,46,-1,42,46,47,-1,48,42,47,-1,35,36,29,-1,29,28,35,-1,37,35,28,-1,28,30,37,-1,38,37,30,-1,30,31,38,-1,39,38,31,-1,31,32,39,-1,40,39,32,-1,32,33,40,-1,41,40,33,-1,33,34,41,-1,36,41,34,-1,34,29,36,-1,51,52,49,-1,49,50,51,-1,54,51,50,-1,50,53,54,-1,56,54,53,-1,53,55,56,-1,58,56,55,-1,55,57,58,-1,60,58,57,-1,57,59,60,-1,62,60,59,-1,59,61,62,-1,52,62,61,-1,61,49,52,-1,1,0,10,-1,10,7,1,-1,0,2,12,-1,12,10,0,-1,2,3,14,-1,14,12,2,-1,3,4,16,-1,16,14,3,-1,4,5,18,-1,18,16,4,-1,5,6,20,-1,20,18,5,-1,6,1,7,-1,7,20,6,-1,63,64,52,-1,52,51,63,-1,65,63,51,-1,51,54,65,-1,66,65,54,-1,54,56,66,-1,67,66,56,-1,56,58,67,-1,68,67,58,-1,58,60,68,-1,69,68,60,-1,60,62,69,-1,64,69,62,-1,62,52,64,-1,43,42,64,-1,64,63,43,-1,44,43,63,-1,63,65,44,-1,45,44,65,-1,65,66,45,-1,46,45,66,-1,66,67,46,-1,47,46,67,-1,67,68,47,-1,48,47,68,-1,68,69,48,-1,42,48,69,-1,69,64,42,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=10, element #41, 189 total numbers made up of 63 3-tuple values */
	this.Coordinate_10_41_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(2.6100),doubleToFloat(2.4950),doubleToFloat(-0.0096),doubleToFloat(1.4490),doubleToFloat(2.4950),doubleToFloat(2.8200),doubleToFloat(-1.1600),doubleToFloat(2.4950),doubleToFloat(3.5180),doubleToFloat(-2.9680),doubleToFloat(2.4950),doubleToFloat(1.5600),doubleToFloat(-2.9680),doubleToFloat(2.4950),doubleToFloat(-1.5800),doubleToFloat(-1.1600),doubleToFloat(2.4950),doubleToFloat(-3.5370),doubleToFloat(1.4490),doubleToFloat(2.4950),doubleToFloat(-2.8390),doubleToFloat(2.6100),doubleToFloat(-0.8104),doubleToFloat(-0.0096),doubleToFloat(1.4490),doubleToFloat(-0.8104),doubleToFloat(2.8190),doubleToFloat(-1.1600),doubleToFloat(-0.8104),doubleToFloat(3.5180)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-2.9680),doubleToFloat(-0.8104),doubleToFloat(1.5600),doubleToFloat(-2.9680),doubleToFloat(-0.8104),doubleToFloat(-1.5800),doubleToFloat(-1.1600),doubleToFloat(-0.8104),doubleToFloat(-3.5370),doubleToFloat(1.4490),doubleToFloat(-0.8104),doubleToFloat(-2.8390),doubleToFloat(2.6100),doubleToFloat(-3.3750),doubleToFloat(-0.0096),doubleToFloat(1.4490),doubleToFloat(-3.3750),doubleToFloat(2.8190),doubleToFloat(-1.1600),doubleToFloat(-3.3750),doubleToFloat(3.5180),doubleToFloat(-2.9680),doubleToFloat(-3.3750),doubleToFloat(1.5600),doubleToFloat(-2.9680),doubleToFloat(-3.3750),doubleToFloat(-1.5800),doubleToFloat(-1.1600),doubleToFloat(-3.3750),doubleToFloat(-3.5370)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(1.4490),doubleToFloat(-3.3750),doubleToFloat(-2.8390),doubleToFloat(2.9680),doubleToFloat(-6.6800),doubleToFloat(-0.0096),doubleToFloat(1.6720),doubleToFloat(-6.6800),doubleToFloat(3.1480),doubleToFloat(-1.2400),doubleToFloat(-6.6800),doubleToFloat(3.9280),doubleToFloat(-2.9570),doubleToFloat(-6.6800),doubleToFloat(1.7430),doubleToFloat(-2.9570),doubleToFloat(-6.6800),doubleToFloat(-1.7620),doubleToFloat(-1.2400),doubleToFloat(-6.6800),doubleToFloat(-3.9470),doubleToFloat(1.6720),doubleToFloat(-6.6800),doubleToFloat(-3.1670),doubleToFloat(1.8920),doubleToFloat(-5.1940),doubleToFloat(-0.0096),doubleToFloat(1.0010),doubleToFloat(-5.1940),doubleToFloat(2.1610)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.0010),doubleToFloat(-5.1940),doubleToFloat(2.6970),doubleToFloat(-2.3210),doubleToFloat(-5.1940),doubleToFloat(1.1950),doubleToFloat(-2.3210),doubleToFloat(-5.1940),doubleToFloat(-1.2140),doubleToFloat(-1.0010),doubleToFloat(-5.1940),doubleToFloat(-2.7160),doubleToFloat(1.0010),doubleToFloat(-5.1940),doubleToFloat(-2.1800),doubleToFloat(1.9000),doubleToFloat(-10.8900),doubleToFloat(-0.0096),doubleToFloat(1.0800),doubleToFloat(-10.8900),doubleToFloat(1.7140),doubleToFloat(-0.7636),doubleToFloat(-10.8900),doubleToFloat(2.1400),doubleToFloat(-2.2420),doubleToFloat(-10.8900),doubleToFloat(0.9472),doubleToFloat(-2.2420),doubleToFloat(-10.8900),doubleToFloat(-0.9663)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.7636),doubleToFloat(-10.8900),doubleToFloat(-2.1590),doubleToFloat(1.0800),doubleToFloat(-10.8900),doubleToFloat(-1.7340),doubleToFloat(1.8070),doubleToFloat(4.2490),doubleToFloat(-0.0096),doubleToFloat(0.9484),doubleToFloat(4.2490),doubleToFloat(2.0840),doubleToFloat(-0.9820),doubleToFloat(4.2490),doubleToFloat(2.6010),doubleToFloat(-2.5300),doubleToFloat(4.2490),doubleToFloat(1.1520),doubleToFloat(-2.5300),doubleToFloat(4.2490),doubleToFloat(-1.1710),doubleToFloat(-0.9820),doubleToFloat(4.2490),doubleToFloat(-2.6200),doubleToFloat(0.9484),doubleToFloat(4.2490),doubleToFloat(-2.1030),doubleToFloat(1.6240),doubleToFloat(-14.1300),doubleToFloat(-0.0096)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.9076),doubleToFloat(-14.1300),doubleToFloat(1.6410),doubleToFloat(-0.7021),doubleToFloat(-14.1300),doubleToFloat(2.0130),doubleToFloat(-1.9930),doubleToFloat(-14.1300),doubleToFloat(0.9715),doubleToFloat(-1.9930),doubleToFloat(-14.1300),doubleToFloat(-0.8451),doubleToFloat(-0.7021),doubleToFloat(-14.1300),doubleToFloat(-1.8870),doubleToFloat(0.9076),doubleToFloat(-14.1300),doubleToFloat(-1.5150),doubleToFloat(0.5533),doubleToFloat(-14.9900),doubleToFloat(-0.0096),doubleToFloat(0.2401),doubleToFloat(-14.9900),doubleToFloat(0.7943),doubleToFloat(-0.4639),doubleToFloat(-14.9900),doubleToFloat(0.9569),doubleToFloat(-1.0280),doubleToFloat(-14.9900),doubleToFloat(0.5013)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.0280),doubleToFloat(-14.9900),doubleToFloat(-0.3749),doubleToFloat(-0.4639),doubleToFloat(-14.9900),doubleToFloat(-0.8305),doubleToFloat(0.2401),doubleToFloat(-14.9900),doubleToFloat(-0.6679)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=10, element #42, 140 total numbers made up of 70 2-tuple values */
	this.TextureCoordinate_10_42_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.7190),doubleToFloat(0.5576),doubleToFloat(0.6284),doubleToFloat(0.5576),doubleToFloat(0.7414),doubleToFloat(0.5576),doubleToFloat(0.6787),doubleToFloat(0.5576),doubleToFloat(0.5781),doubleToFloat(0.5576),doubleToFloat(0.5154),doubleToFloat(0.5576),doubleToFloat(0.5378),doubleToFloat(0.5576),doubleToFloat(0.6284),doubleToFloat(0.5029),doubleToFloat(0.7509),doubleToFloat(0.3997),doubleToFloat(0.6284),doubleToFloat(0.3997)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7509),doubleToFloat(0.5029),doubleToFloat(0.7811),doubleToFloat(0.3997),doubleToFloat(0.7811),doubleToFloat(0.5029),doubleToFloat(0.6964),doubleToFloat(0.3997),doubleToFloat(0.6964),doubleToFloat(0.5029),doubleToFloat(0.5604),doubleToFloat(0.3997),doubleToFloat(0.5604),doubleToFloat(0.5029),doubleToFloat(0.4756),doubleToFloat(0.3997),doubleToFloat(0.4756),doubleToFloat(0.5029),doubleToFloat(0.5059),doubleToFloat(0.3997)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5059),doubleToFloat(0.5029),doubleToFloat(0.7509),doubleToFloat(0.3197),doubleToFloat(0.6284),doubleToFloat(0.3197),doubleToFloat(0.7811),doubleToFloat(0.3197),doubleToFloat(0.6964),doubleToFloat(0.3197),doubleToFloat(0.5604),doubleToFloat(0.3197),doubleToFloat(0.4756),doubleToFloat(0.3197),doubleToFloat(0.5059),doubleToFloat(0.3197),doubleToFloat(0.7651),doubleToFloat(0.2166),doubleToFloat(0.6284),doubleToFloat(0.2166)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7989),doubleToFloat(0.2166),doubleToFloat(0.7043),doubleToFloat(0.2166),doubleToFloat(0.5525),doubleToFloat(0.2166),doubleToFloat(0.4579),doubleToFloat(0.2166),doubleToFloat(0.4917),doubleToFloat(0.2166),doubleToFloat(0.7224),doubleToFloat(0.2630),doubleToFloat(0.6284),doubleToFloat(0.2630),doubleToFloat(0.7456),doubleToFloat(0.2630),doubleToFloat(0.6805),doubleToFloat(0.2630),doubleToFloat(0.5762),doubleToFloat(0.2630)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5112),doubleToFloat(0.2630),doubleToFloat(0.5344),doubleToFloat(0.2630),doubleToFloat(0.8705),doubleToFloat(0.5452),doubleToFloat(0.8705),doubleToFloat(0.5383),doubleToFloat(0.8705),doubleToFloat(0.5369),doubleToFloat(0.8705),doubleToFloat(0.5408),doubleToFloat(0.8705),doubleToFloat(0.5483),doubleToFloat(0.8705),doubleToFloat(0.5522),doubleToFloat(0.8705),doubleToFloat(0.5509),doubleToFloat(0.9170),doubleToFloat(0.5452)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.9170),doubleToFloat(0.5266),doubleToFloat(0.8900),doubleToFloat(0.5304),doubleToFloat(0.8900),doubleToFloat(0.5452),doubleToFloat(0.9170),doubleToFloat(0.5220),doubleToFloat(0.8900),doubleToFloat(0.5268),doubleToFloat(0.9170),doubleToFloat(0.5349),doubleToFloat(0.8900),doubleToFloat(0.5370),doubleToFloat(0.9170),doubleToFloat(0.5555),doubleToFloat(0.8900),doubleToFloat(0.5534),doubleToFloat(0.9170),doubleToFloat(0.5684)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.8900),doubleToFloat(0.5636),doubleToFloat(0.9170),doubleToFloat(0.5638),doubleToFloat(0.8900),doubleToFloat(0.5600),doubleToFloat(0.8746),doubleToFloat(0.5310),doubleToFloat(0.8746),doubleToFloat(0.5452),doubleToFloat(0.8746),doubleToFloat(0.5279),doubleToFloat(0.8746),doubleToFloat(0.5368),doubleToFloat(0.8746),doubleToFloat(0.5524),doubleToFloat(0.8746),doubleToFloat(0.5613),doubleToFloat(0.8746),doubleToFloat(0.5581)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=10, element #50, 300 total numbers */
	this.IndexedFaceSet_10_50_coordIndex = new MFInt32(Java.to([4,3,2,-1,2,1,0,-1,4,2,0,-1,5,4,0,-1,6,5,0,-1,9,8,7,-1,7,10,9,-1,12,11,8,-1,8,9,12,-1,14,13,11,-1,11,12,14,-1,16,15,13,-1,13,14,16,-1,18,17,15,-1,15,16,18,-1,20,19,17,-1,17,18,20,-1,10,7,19,-1,19,20,10,-1,21,9,10,-1,10,22,21,-1,23,12,9,-1,9,21,23,-1,24,14,12,-1,12,23,24,-1,25,16,14,-1,14,24,25,-1,26,18,16,-1,16,25,26,-1,27,20,18,-1,18,26,27,-1,22,10,20,-1,20,27,22,-1,1,21,22,-1,22,0,1,-1,2,23,21,-1,21,1,2,-1,3,24,23,-1,23,2,3,-1,4,25,24,-1,24,3,4,-1,5,26,25,-1,25,4,5,-1,6,27,26,-1,26,5,6,-1,0,22,27,-1,27,6,0,-1,8,29,28,-1,28,7,8,-1,11,30,29,-1,29,8,11,-1,13,31,30,-1,30,11,13,-1,15,32,31,-1,31,13,15,-1,17,33,32,-1,32,15,17,-1,19,34,33,-1,33,17,19,-1,7,28,34,-1,34,19,7,-1,29,36,35,-1,35,28,29,-1,30,37,36,-1,36,29,30,-1,31,38,37,-1,37,30,31,-1,32,39,38,-1,38,31,32,-1,33,40,39,-1,39,32,33,-1,34,41,40,-1,40,33,34,-1,28,35,41,-1,41,34,28,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=10, element #50, 300 total numbers */
	this.IndexedFaceSet_10_50_texCoordIndex = new MFInt32(Java.to([4,3,2,-1,2,1,0,-1,4,2,0,-1,5,4,0,-1,6,5,0,-1,9,8,7,-1,7,10,9,-1,12,11,8,-1,8,9,12,-1,14,13,11,-1,11,12,14,-1,16,15,13,-1,13,14,16,-1,18,17,15,-1,15,16,18,-1,20,19,17,-1,17,18,20,-1,10,7,19,-1,19,20,10,-1,21,9,10,-1,10,22,21,-1,23,12,9,-1,9,21,23,-1,24,14,12,-1,12,23,24,-1,25,16,14,-1,14,24,25,-1,26,18,16,-1,16,25,26,-1,27,20,18,-1,18,26,27,-1,22,10,20,-1,20,27,22,-1,1,21,22,-1,22,0,1,-1,2,23,21,-1,21,1,2,-1,3,24,23,-1,23,2,3,-1,4,25,24,-1,24,3,4,-1,5,26,25,-1,25,4,5,-1,6,27,26,-1,26,5,6,-1,0,22,27,-1,27,6,0,-1,8,29,28,-1,28,7,8,-1,11,30,29,-1,29,8,11,-1,13,31,30,-1,30,11,13,-1,15,32,31,-1,31,13,15,-1,17,33,32,-1,32,15,17,-1,19,34,33,-1,33,17,19,-1,7,28,34,-1,34,19,7,-1,29,36,35,-1,35,28,29,-1,30,37,36,-1,36,29,30,-1,31,38,37,-1,37,30,31,-1,32,39,38,-1,38,31,32,-1,33,40,39,-1,39,32,33,-1,34,41,40,-1,40,33,34,-1,28,35,41,-1,41,34,28,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=11, element #50, 126 total numbers made up of 42 3-tuple values */
	this.Coordinate_11_50_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(0.6335),doubleToFloat(1.1420),doubleToFloat(0.0206),doubleToFloat(0.3202),doubleToFloat(1.1420),doubleToFloat(0.8245),doubleToFloat(-0.3837),doubleToFloat(1.1420),doubleToFloat(0.9871),doubleToFloat(-0.9483),doubleToFloat(1.1420),doubleToFloat(0.5315),doubleToFloat(-0.9483),doubleToFloat(1.1420),doubleToFloat(-0.3447),doubleToFloat(-0.3837),doubleToFloat(1.1420),doubleToFloat(-0.8003),doubleToFloat(0.3202),doubleToFloat(1.1420),doubleToFloat(-0.6377),doubleToFloat(2.0600),doubleToFloat(-3.7780),doubleToFloat(0.0206),doubleToFloat(1.2870),doubleToFloat(-2.9050),doubleToFloat(1.7800),doubleToFloat(1.0890),doubleToFloat(-1.1470),doubleToFloat(2.1330)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(1.8670),doubleToFloat(-1.3970),doubleToFloat(0.0206),doubleToFloat(-0.7150),doubleToFloat(-2.9050),doubleToFloat(2.2630),doubleToFloat(-0.6583),doubleToFloat(-1.1470),doubleToFloat(2.5590),doubleToFloat(-1.9870),doubleToFloat(-3.7780),doubleToFloat(1.1060),doubleToFloat(-2.0600),doubleToFloat(-1.3970),doubleToFloat(0.8632),doubleToFloat(-1.9870),doubleToFloat(-4.4570),doubleToFloat(-1.2050),doubleToFloat(-2.0600),doubleToFloat(-1.3970),doubleToFloat(-0.8220),doubleToFloat(-0.7150),doubleToFloat(-4.4570),doubleToFloat(-2.5590),doubleToFloat(-0.6583),doubleToFloat(-1.3970),doubleToFloat(-2.0870),doubleToFloat(1.2870),doubleToFloat(-4.4570),doubleToFloat(-2.0760)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(1.0890),doubleToFloat(-1.3970),doubleToFloat(-1.6610),doubleToFloat(0.9877),doubleToFloat(0.2851),doubleToFloat(1.6720),doubleToFloat(1.7040),doubleToFloat(0.2851),doubleToFloat(0.0206),doubleToFloat(-0.6220),doubleToFloat(0.2851),doubleToFloat(2.0430),doubleToFloat(-1.9130),doubleToFloat(0.2851),doubleToFloat(1.0020),doubleToFloat(-1.9130),doubleToFloat(0.2851),doubleToFloat(-0.8149),doubleToFloat(-0.6220),doubleToFloat(0.2851),doubleToFloat(-1.8170),doubleToFloat(0.9877),doubleToFloat(0.2851),doubleToFloat(-1.4450),doubleToFloat(1.4170),doubleToFloat(-11.1000),doubleToFloat(0.0028),doubleToFloat(0.8123),doubleToFloat(-11.0900),doubleToFloat(1.3800)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.5457),doubleToFloat(-11.0900),doubleToFloat(1.7200),doubleToFloat(-1.6350),doubleToFloat(-11.1000),doubleToFloat(0.7670),doubleToFloat(-1.6350),doubleToFloat(-11.1100),doubleToFloat(-0.8605),doubleToFloat(-0.5457),doubleToFloat(-11.1100),doubleToFloat(-1.5350),doubleToFloat(0.8123),doubleToFloat(-11.1100),doubleToFloat(-1.1950),doubleToFloat(0.6234),doubleToFloat(-12.5200),doubleToFloat(0.0210),doubleToFloat(0.3177),doubleToFloat(-12.5200),doubleToFloat(0.7175),doubleToFloat(-0.3691),doubleToFloat(-12.5200),doubleToFloat(0.8896),doubleToFloat(-0.9199),doubleToFloat(-12.5200),doubleToFloat(0.4076),doubleToFloat(-0.9199),doubleToFloat(-12.5300),doubleToFloat(-0.4156)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.3691),doubleToFloat(-12.5300),doubleToFloat(-0.7569),doubleToFloat(0.3177),doubleToFloat(-12.5300),doubleToFloat(-0.5849)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=11, element #51, 84 total numbers made up of 42 2-tuple values */
	this.TextureCoordinate_11_51_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.9309),doubleToFloat(0.5848),doubleToFloat(0.9190),doubleToFloat(0.5848),doubleToFloat(0.8921),doubleToFloat(0.5848),doubleToFloat(0.8706),doubleToFloat(0.5848),doubleToFloat(0.8706),doubleToFloat(0.5848),doubleToFloat(0.8921),doubleToFloat(0.5848),doubleToFloat(0.9190),doubleToFloat(0.5848),doubleToFloat(0.9845),doubleToFloat(0.5321),doubleToFloat(0.9550),doubleToFloat(0.5475),doubleToFloat(0.9491),doubleToFloat(0.5599)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.9788),doubleToFloat(0.5571),doubleToFloat(0.8787),doubleToFloat(0.5475),doubleToFloat(0.8825),doubleToFloat(0.5599),doubleToFloat(0.8302),doubleToFloat(0.5321),doubleToFloat(0.8291),doubleToFloat(0.5571),doubleToFloat(0.8302),doubleToFloat(0.5200),doubleToFloat(0.8291),doubleToFloat(0.5571),doubleToFloat(0.8787),doubleToFloat(0.5200),doubleToFloat(0.8825),doubleToFloat(0.5571),doubleToFloat(0.9550),doubleToFloat(0.5200)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.9491),doubleToFloat(0.5571),doubleToFloat(0.9444),doubleToFloat(0.5755),doubleToFloat(0.9717),doubleToFloat(0.5755),doubleToFloat(0.8831),doubleToFloat(0.5755),doubleToFloat(0.8339),doubleToFloat(0.5755),doubleToFloat(0.8339),doubleToFloat(0.5755),doubleToFloat(0.8831),doubleToFloat(0.5755),doubleToFloat(0.9444),doubleToFloat(0.5755),doubleToFloat(0.9679),doubleToFloat(0.2444),doubleToFloat(0.9449),doubleToFloat(0.2445)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.8931),doubleToFloat(0.2445),doubleToFloat(0.8516),doubleToFloat(0.2444),doubleToFloat(0.8516),doubleToFloat(0.2442),doubleToFloat(0.8931),doubleToFloat(0.2442),doubleToFloat(0.9449),doubleToFloat(0.2442),doubleToFloat(0.9372),doubleToFloat(0.2243),doubleToFloat(0.9255),doubleToFloat(0.2244),doubleToFloat(0.8993),doubleToFloat(0.2244),doubleToFloat(0.8783),doubleToFloat(0.2243),doubleToFloat(0.8783),doubleToFloat(0.2243)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.8993),doubleToFloat(0.2243),doubleToFloat(0.9255),doubleToFloat(0.2243)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=11, element #59, 288 total numbers */
	this.IndexedFaceSet_11_59_coordIndex = new MFInt32(Java.to([1,11,12,-1,3,4,5,-1,5,6,3,-1,1,0,4,-1,4,3,1,-1,0,2,5,-1,5,4,0,-1,11,1,3,-1,3,6,11,-1,18,2,0,-1,0,17,18,-1,0,1,25,-1,25,17,0,-1,25,1,12,-1,7,13,11,-1,8,6,5,-1,5,9,8,-1,7,8,9,-1,9,10,7,-1,10,9,5,-1,5,2,10,-1,11,6,8,-1,8,7,11,-1,18,21,10,-1,10,2,18,-1,10,21,27,-1,27,7,10,-1,27,13,7,-1,12,11,37,-1,37,35,12,-1,11,13,36,-1,36,37,11,-1,20,18,17,-1,17,14,20,-1,23,14,17,-1,17,25,23,-1,16,20,14,-1,14,15,16,-1,24,15,14,-1,14,23,24,-1,15,24,29,-1,29,16,15,-1,20,19,21,-1,21,18,20,-1,26,27,21,-1,21,19,26,-1,16,22,19,-1,19,20,16,-1,28,26,19,-1,19,22,28,-1,22,16,29,-1,29,28,22,-1,36,32,33,-1,34,30,31,-1,33,34,31,-1,36,33,31,-1,36,31,35,-1,24,23,31,-1,31,30,24,-1,23,25,35,-1,35,31,23,-1,27,26,32,-1,32,36,27,-1,26,28,33,-1,33,32,26,-1,28,29,34,-1,34,33,28,-1,29,24,30,-1,30,34,29,-1,36,35,37,-1,12,35,25,-1,27,36,13,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=11, element #59, 288 total numbers */
	this.IndexedFaceSet_11_59_texCoordIndex = new MFInt32(Java.to([1,14,18,-1,3,4,5,-1,5,6,3,-1,1,0,4,-1,4,3,1,-1,0,2,5,-1,5,4,0,-1,14,1,3,-1,3,6,14,-1,19,2,0,-1,0,16,19,-1,0,1,17,-1,17,16,0,-1,17,1,18,-1,7,23,15,-1,9,8,11,-1,11,10,9,-1,7,9,10,-1,10,12,7,-1,12,10,11,-1,11,13,12,-1,15,8,9,-1,9,7,15,-1,20,21,12,-1,12,13,20,-1,12,21,22,-1,22,7,12,-1,22,23,7,-1,18,14,25,-1,25,24,18,-1,15,23,26,-1,26,25,15,-1,29,33,32,-1,32,27,29,-1,41,27,32,-1,32,43,41,-1,30,29,27,-1,27,28,30,-1,42,28,27,-1,27,41,42,-1,28,42,48,-1,48,31,28,-1,35,34,37,-1,37,36,35,-1,44,45,37,-1,37,34,44,-1,39,38,34,-1,34,35,39,-1,46,44,34,-1,34,38,46,-1,38,40,47,-1,47,46,38,-1,52,53,54,-1,55,49,50,-1,54,55,50,-1,52,54,50,-1,52,50,51,-1,42,41,50,-1,50,49,42,-1,41,43,51,-1,51,50,41,-1,45,44,53,-1,53,52,45,-1,44,46,54,-1,54,53,44,-1,46,47,55,-1,55,54,46,-1,48,42,49,-1,49,55,48,-1,52,51,56,-1,18,24,43,-1,22,52,23,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=12, element #59, 114 total numbers made up of 38 3-tuple values */
	this.Coordinate_12_59_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(0.8503),doubleToFloat(-0.0167),doubleToFloat(-1.4920),doubleToFloat(1.4430),doubleToFloat(-0.0167),doubleToFloat(0.3823),doubleToFloat(0.0000),doubleToFloat(-0.0167),doubleToFloat(-1.4920),doubleToFloat(1.2210),doubleToFloat(0.6369),doubleToFloat(0.3141),doubleToFloat(0.7115),doubleToFloat(0.6369),doubleToFloat(-1.2980),doubleToFloat(0.0000),doubleToFloat(0.6369),doubleToFloat(-1.2980),doubleToFloat(0.0000),doubleToFloat(0.6368),doubleToFloat(1.3050),doubleToFloat(-1.4430),doubleToFloat(-0.0167),doubleToFloat(0.3823),doubleToFloat(-1.2210),doubleToFloat(0.6369),doubleToFloat(0.3141),doubleToFloat(-0.7115),doubleToFloat(0.6369),doubleToFloat(-1.2980)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.8503),doubleToFloat(-0.0167),doubleToFloat(-1.4920),doubleToFloat(0.0000),doubleToFloat(-0.0167),doubleToFloat(1.5530),doubleToFloat(1.4760),doubleToFloat(-0.2577),doubleToFloat(1.2680),doubleToFloat(-1.4760),doubleToFloat(-0.2577),doubleToFloat(1.2680),doubleToFloat(1.2260),doubleToFloat(-1.6760),doubleToFloat(-2.5530),doubleToFloat(1.2260),doubleToFloat(-3.4360),doubleToFloat(-1.4920),doubleToFloat(0.0000),doubleToFloat(-3.4360),doubleToFloat(-1.4920),doubleToFloat(0.9650),doubleToFloat(-0.5229),doubleToFloat(-1.8150),doubleToFloat(0.0000),doubleToFloat(-0.5229),doubleToFloat(-1.8150),doubleToFloat(-1.2260),doubleToFloat(-1.6760),doubleToFloat(-2.5530)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.0000),doubleToFloat(-1.6760),doubleToFloat(-2.5530),doubleToFloat(-0.9650),doubleToFloat(-0.5229),doubleToFloat(-1.8150),doubleToFloat(-1.2260),doubleToFloat(-3.4360),doubleToFloat(-1.4920),doubleToFloat(2.5480),doubleToFloat(-1.6760),doubleToFloat(0.3823),doubleToFloat(1.8190),doubleToFloat(-3.4360),doubleToFloat(0.3823),doubleToFloat(1.7800),doubleToFloat(-0.5229),doubleToFloat(0.3823),doubleToFloat(-2.5480),doubleToFloat(-1.6760),doubleToFloat(0.3823),doubleToFloat(-1.7800),doubleToFloat(-0.5229),doubleToFloat(0.3823),doubleToFloat(-1.8190),doubleToFloat(-3.4360),doubleToFloat(0.3823),doubleToFloat(0.0000),doubleToFloat(-3.4360),doubleToFloat(0.3823)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(1.6190),doubleToFloat(-3.3020),doubleToFloat(1.2100),doubleToFloat(2.2120),doubleToFloat(-1.7090),doubleToFloat(1.2100),doubleToFloat(-2.2120),doubleToFloat(-1.7090),doubleToFloat(1.2100),doubleToFloat(-1.6190),doubleToFloat(-3.3020),doubleToFloat(1.2100),doubleToFloat(0.0000),doubleToFloat(-3.3020),doubleToFloat(1.2100),doubleToFloat(1.3930),doubleToFloat(-0.8117),doubleToFloat(1.2480),doubleToFloat(-1.3930),doubleToFloat(-0.8117),doubleToFloat(1.2480),doubleToFloat(0.0000),doubleToFloat(-0.5730),doubleToFloat(1.5150)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=12, element #60, 114 total numbers made up of 57 2-tuple values */
	this.TextureCoordinate_12_60_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.3819),doubleToFloat(0.1710),doubleToFloat(0.4216),doubleToFloat(0.1651),doubleToFloat(0.3819),doubleToFloat(0.1710),doubleToFloat(0.4216),doubleToFloat(0.1651),doubleToFloat(0.3819),doubleToFloat(0.1710),doubleToFloat(0.3819),doubleToFloat(0.1710),doubleToFloat(0.4637),doubleToFloat(0.1714),doubleToFloat(0.4216),doubleToFloat(0.1651),doubleToFloat(0.4637),doubleToFloat(0.1714),doubleToFloat(0.4216),doubleToFloat(0.1651)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.3819),doubleToFloat(0.1710),doubleToFloat(0.3819),doubleToFloat(0.1710),doubleToFloat(0.3819),doubleToFloat(0.1710),doubleToFloat(0.3819),doubleToFloat(0.1710),doubleToFloat(0.4637),doubleToFloat(0.1714),doubleToFloat(0.4637),doubleToFloat(0.1714),doubleToFloat(0.3861),doubleToFloat(0.1398),doubleToFloat(0.4244),doubleToFloat(0.1312),doubleToFloat(0.4394),doubleToFloat(0.1472),doubleToFloat(0.3836),doubleToFloat(0.1404)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.3836),doubleToFloat(0.1404),doubleToFloat(0.3861),doubleToFloat(0.1398),doubleToFloat(0.4244),doubleToFloat(0.1312),doubleToFloat(0.4394),doubleToFloat(0.1472),doubleToFloat(0.4394),doubleToFloat(0.1472),doubleToFloat(0.4637),doubleToFloat(0.1714),doubleToFloat(0.4394),doubleToFloat(0.1472),doubleToFloat(0.3873),doubleToFloat(0.0706),doubleToFloat(0.3871),doubleToFloat(0.0221),doubleToFloat(0.3873),doubleToFloat(0.0706)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.3871),doubleToFloat(0.0221),doubleToFloat(0.3871),doubleToFloat(0.0221),doubleToFloat(0.3861),doubleToFloat(0.1398),doubleToFloat(0.3836),doubleToFloat(0.1404),doubleToFloat(0.3873),doubleToFloat(0.0706),doubleToFloat(0.3873),doubleToFloat(0.0706),doubleToFloat(0.3836),doubleToFloat(0.1404),doubleToFloat(0.3861),doubleToFloat(0.1398),doubleToFloat(0.3871),doubleToFloat(0.0221),doubleToFloat(0.3871),doubleToFloat(0.0221)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.3871),doubleToFloat(0.0221),doubleToFloat(0.4330),doubleToFloat(0.0595),doubleToFloat(0.4411),doubleToFloat(0.0186),doubleToFloat(0.4244),doubleToFloat(0.1312),doubleToFloat(0.4330),doubleToFloat(0.0595),doubleToFloat(0.4244),doubleToFloat(0.1312),doubleToFloat(0.4411),doubleToFloat(0.0186),doubleToFloat(0.4411),doubleToFloat(0.0186),doubleToFloat(0.4411),doubleToFloat(0.0186),doubleToFloat(0.4411),doubleToFloat(0.0186)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4330),doubleToFloat(0.0595),doubleToFloat(0.4244),doubleToFloat(0.1312),doubleToFloat(0.4244),doubleToFloat(0.1312),doubleToFloat(0.4330),doubleToFloat(0.0595),doubleToFloat(0.4411),doubleToFloat(0.0186),doubleToFloat(0.4411),doubleToFloat(0.0186),doubleToFloat(0.4244),doubleToFloat(0.1312)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=12, element #68, 264 total numbers */
	this.IndexedFaceSet_12_68_coordIndex = new MFInt32(Java.to([3,4,25,-1,3,25,26,-1,0,3,26,-1,1,0,26,-1,26,10,1,-1,1,10,12,-1,12,9,1,-1,2,34,25,-1,25,4,2,-1,31,8,6,-1,32,31,6,-1,5,32,6,-1,7,11,32,-1,32,5,7,-1,7,9,12,-1,12,11,7,-1,2,8,31,-1,31,34,2,-1,15,16,17,-1,15,17,18,-1,15,18,19,-1,14,15,19,-1,14,19,13,-1,0,1,14,-1,14,13,0,-1,1,9,15,-1,15,14,1,-1,9,7,16,-1,16,15,9,-1,7,5,17,-1,17,16,7,-1,5,6,18,-1,18,17,5,-1,6,3,19,-1,19,18,6,-1,3,0,13,-1,13,19,3,-1,6,8,2,-1,3,6,2,-1,4,3,2,-1,23,21,20,-1,20,24,23,-1,29,22,21,-1,21,23,29,-1,22,29,33,-1,20,21,26,-1,26,25,20,-1,26,21,22,-1,22,10,26,-1,10,22,33,-1,33,12,10,-1,34,24,20,-1,20,25,34,-1,23,24,28,-1,28,27,23,-1,29,23,27,-1,27,30,29,-1,30,33,29,-1,28,31,32,-1,32,27,28,-1,32,11,30,-1,30,27,32,-1,11,12,33,-1,33,30,11,-1,34,31,28,-1,28,24,34,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=12, element #68, 264 total numbers */
	this.IndexedFaceSet_12_68_texCoordIndex = new MFInt32(Java.to([4,5,12,-1,4,12,13,-1,0,4,13,-1,1,0,13,-1,13,14,1,-1,1,14,19,-1,19,3,1,-1,2,21,12,-1,12,5,2,-1,15,10,7,-1,16,15,7,-1,6,16,7,-1,8,17,16,-1,16,6,8,-1,8,11,18,-1,18,17,8,-1,9,10,15,-1,15,20,9,-1,24,25,26,-1,24,26,27,-1,24,27,28,-1,23,24,28,-1,23,28,22,-1,0,1,23,-1,23,22,0,-1,1,3,24,-1,24,23,1,-1,11,8,25,-1,25,24,11,-1,8,6,26,-1,26,25,8,-1,6,7,27,-1,27,26,6,-1,7,4,28,-1,28,27,7,-1,4,0,22,-1,22,28,4,-1,7,10,9,-1,4,7,9,-1,5,4,9,-1,30,32,31,-1,31,29,30,-1,33,34,32,-1,32,30,33,-1,34,33,35,-1,31,32,37,-1,37,36,31,-1,37,32,34,-1,34,38,37,-1,38,34,35,-1,35,39,38,-1,40,29,31,-1,31,36,40,-1,41,44,43,-1,43,42,41,-1,45,41,42,-1,42,46,45,-1,46,50,45,-1,43,47,48,-1,48,42,43,-1,48,49,46,-1,46,42,48,-1,49,51,50,-1,50,46,49,-1,52,47,43,-1,43,44,52,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=13, element #68, 105 total numbers made up of 35 3-tuple values */
	this.Coordinate_13_68_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(2.5480),doubleToFloat(-1.4160),doubleToFloat(-0.8988),doubleToFloat(1.8190),doubleToFloat(-3.1760),doubleToFloat(-0.8988),doubleToFloat(0.0000),doubleToFloat(0.2435),doubleToFloat(0.2718),doubleToFloat(1.7800),doubleToFloat(-0.2627),doubleToFloat(-0.8989),doubleToFloat(1.4760),doubleToFloat(0.0025),doubleToFloat(-0.0134),doubleToFloat(-2.5480),doubleToFloat(-1.4160),doubleToFloat(-0.8988),doubleToFloat(-1.7800),doubleToFloat(-0.2627),doubleToFloat(-0.8989),doubleToFloat(-1.8190),doubleToFloat(-3.1760),doubleToFloat(-0.8988),doubleToFloat(-1.4760),doubleToFloat(0.0025),doubleToFloat(-0.0134),doubleToFloat(0.0000),doubleToFloat(-3.1760),doubleToFloat(-0.8988)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(1.8630),doubleToFloat(-3.1760),doubleToFloat(0.8155),doubleToFloat(-1.8630),doubleToFloat(-3.1760),doubleToFloat(0.8155),doubleToFloat(0.0000),doubleToFloat(-3.1760),doubleToFloat(0.8155),doubleToFloat(2.0940),doubleToFloat(-1.4410),doubleToFloat(-1.6990),doubleToFloat(1.5240),doubleToFloat(-2.5610),doubleToFloat(-1.6990),doubleToFloat(0.0000),doubleToFloat(-2.5610),doubleToFloat(-1.6990),doubleToFloat(-1.5240),doubleToFloat(-2.5610),doubleToFloat(-1.6990),doubleToFloat(-2.0940),doubleToFloat(-1.4410),doubleToFloat(-1.6990),doubleToFloat(-1.5160),doubleToFloat(-0.4945),doubleToFloat(-1.6990),doubleToFloat(1.5160),doubleToFloat(-0.4945),doubleToFloat(-1.6990)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(1.5530),doubleToFloat(-0.5642),doubleToFloat(2.0690),doubleToFloat(1.9290),doubleToFloat(-1.9730),doubleToFloat(3.6760),doubleToFloat(1.9290),doubleToFloat(-3.1760),doubleToFloat(3.3500),doubleToFloat(0.0000),doubleToFloat(-1.9730),doubleToFloat(4.8470),doubleToFloat(0.0000),doubleToFloat(-0.4757),doubleToFloat(3.5050),doubleToFloat(1.5140),doubleToFloat(-0.2808),doubleToFloat(1.0280),doubleToFloat(2.3160),doubleToFloat(-1.6250),doubleToFloat(0.8155),doubleToFloat(-1.9290),doubleToFloat(-1.9730),doubleToFloat(3.6760),doubleToFloat(-1.5530),doubleToFloat(-0.5642),doubleToFloat(2.0690),doubleToFloat(0.0000),doubleToFloat(-3.1760),doubleToFloat(4.5210)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.9290),doubleToFloat(-3.1760),doubleToFloat(3.3500),doubleToFloat(-1.5140),doubleToFloat(-0.2808),doubleToFloat(1.0280),doubleToFloat(-2.3160),doubleToFloat(-1.6250),doubleToFloat(0.8155),doubleToFloat(0.0000),doubleToFloat(-3.1760),doubleToFloat(3.3500),doubleToFloat(0.0000),doubleToFloat(-0.0239),doubleToFloat(1.4740)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=13, element #69, 106 total numbers made up of 53 2-tuple values */
	this.TextureCoordinate_13_69_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.4330),doubleToFloat(0.0595),doubleToFloat(0.4411),doubleToFloat(0.0186),doubleToFloat(0.4637),doubleToFloat(0.1714),doubleToFloat(0.4411),doubleToFloat(0.0186),doubleToFloat(0.4244),doubleToFloat(0.1312),doubleToFloat(0.4394),doubleToFloat(0.1472),doubleToFloat(0.4330),doubleToFloat(0.0595),doubleToFloat(0.4244),doubleToFloat(0.1312),doubleToFloat(0.4411),doubleToFloat(0.0186),doubleToFloat(0.4637),doubleToFloat(0.1714)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4394),doubleToFloat(0.1472),doubleToFloat(0.4411),doubleToFloat(0.0186),doubleToFloat(0.4640),doubleToFloat(0.1246),doubleToFloat(0.4607),doubleToFloat(0.0558),doubleToFloat(0.4904),doubleToFloat(0.0166),doubleToFloat(0.4640),doubleToFloat(0.1246),doubleToFloat(0.4607),doubleToFloat(0.0558),doubleToFloat(0.4904),doubleToFloat(0.0166),doubleToFloat(0.4949),doubleToFloat(0.0186),doubleToFloat(0.4949),doubleToFloat(0.0186)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4868),doubleToFloat(0.1432),doubleToFloat(0.4868),doubleToFloat(0.1432),doubleToFloat(0.4330),doubleToFloat(0.0595),doubleToFloat(0.4411),doubleToFloat(0.0186),doubleToFloat(0.4411),doubleToFloat(0.0186),doubleToFloat(0.4411),doubleToFloat(0.0186),doubleToFloat(0.4330),doubleToFloat(0.0595),doubleToFloat(0.4244),doubleToFloat(0.1312),doubleToFloat(0.4244),doubleToFloat(0.1312),doubleToFloat(0.5320),doubleToFloat(0.0980)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5645),doubleToFloat(0.0707),doubleToFloat(0.4885),doubleToFloat(0.1020),doubleToFloat(0.5026),doubleToFloat(0.0440),doubleToFloat(0.5945),doubleToFloat(0.0186),doubleToFloat(0.5487),doubleToFloat(0.0186),doubleToFloat(0.5487),doubleToFloat(0.0186),doubleToFloat(0.4640),doubleToFloat(0.1246),doubleToFloat(0.4607),doubleToFloat(0.0558),doubleToFloat(0.4904),doubleToFloat(0.0166),doubleToFloat(0.4949),doubleToFloat(0.0186)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4868),doubleToFloat(0.1432),doubleToFloat(0.5645),doubleToFloat(0.0707),doubleToFloat(0.5026),doubleToFloat(0.0440),doubleToFloat(0.4885),doubleToFloat(0.1020),doubleToFloat(0.5320),doubleToFloat(0.0980),doubleToFloat(0.5945),doubleToFloat(0.0186),doubleToFloat(0.5487),doubleToFloat(0.0186),doubleToFloat(0.4640),doubleToFloat(0.1246),doubleToFloat(0.4607),doubleToFloat(0.0558),doubleToFloat(0.4904),doubleToFloat(0.0166)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5487),doubleToFloat(0.0186),doubleToFloat(0.4949),doubleToFloat(0.0186),doubleToFloat(0.4868),doubleToFloat(0.1432)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=9, element #81, 488 total numbers */
	this.IndexedFaceSet_9_81_coordIndex = new MFInt32(Java.to([43,44,45,-1,42,43,45,-1,45,46,47,-1,42,45,47,-1,48,42,47,-1,0,7,8,-1,8,1,0,-1,1,8,9,-1,9,2,1,-1,2,9,10,-1,10,3,2,-1,3,10,11,-1,11,4,3,-1,4,11,12,-1,12,5,4,-1,5,12,13,-1,13,6,5,-1,6,13,7,-1,7,0,6,-1,7,14,15,-1,15,8,7,-1,8,15,16,-1,16,9,8,-1,9,16,17,-1,17,10,9,-1,10,17,18,-1,18,11,10,-1,11,18,19,-1,19,12,11,-1,12,19,20,-1,20,13,12,-1,13,20,14,-1,14,7,13,-1,14,21,22,-1,22,15,14,-1,15,22,23,-1,23,16,15,-1,16,23,24,-1,24,17,16,-1,17,24,25,-1,25,18,17,-1,18,25,26,-1,26,19,18,-1,19,26,27,-1,27,20,19,-1,20,27,21,-1,21,14,20,-1,60,59,58,-1,58,57,56,-1,60,58,56,-1,61,60,56,-1,62,61,56,-1,29,22,21,-1,21,28,29,-1,30,23,22,-1,22,29,30,-1,31,24,23,-1,23,30,31,-1,32,25,24,-1,24,31,32,-1,33,26,25,-1,25,32,33,-1,34,27,26,-1,26,33,34,-1,28,21,27,-1,27,34,28,-1,36,29,28,-1,28,35,36,-1,37,30,29,-1,29,36,37,-1,38,31,30,-1,30,37,38,-1,39,32,31,-1,31,38,39,-1,40,33,32,-1,32,39,40,-1,41,34,33,-1,33,40,41,-1,35,28,34,-1,34,41,35,-1,42,0,1,-1,1,43,42,-1,43,1,2,-1,2,44,43,-1,44,2,3,-1,3,45,44,-1,45,3,4,-1,4,46,45,-1,46,4,5,-1,5,47,46,-1,47,5,6,-1,6,48,47,-1,48,6,0,-1,0,42,48,-1,50,36,35,-1,35,49,50,-1,51,37,36,-1,36,50,51,-1,52,38,37,-1,37,51,52,-1,53,39,38,-1,38,52,53,-1,54,40,39,-1,39,53,54,-1,55,41,40,-1,40,54,55,-1,49,35,41,-1,41,55,49,-1,57,50,49,-1,49,56,57,-1,58,51,50,-1,50,57,58,-1,59,52,51,-1,51,58,59,-1,60,53,52,-1,52,59,60,-1,61,54,53,-1,53,60,61,-1,62,55,54,-1,54,61,62,-1,56,49,55,-1,55,62,56,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=9, element #81, 488 total numbers */
	this.IndexedFaceSet_9_81_texCoordIndex = new MFInt32(Java.to([0,2,3,-1,1,0,3,-1,3,4,5,-1,1,3,5,-1,6,1,5,-1,7,9,8,-1,8,10,7,-1,10,8,11,-1,11,12,10,-1,12,11,13,-1,13,14,12,-1,14,13,15,-1,15,16,14,-1,16,15,17,-1,17,18,16,-1,18,17,19,-1,19,20,18,-1,20,19,9,-1,9,7,20,-1,9,22,21,-1,21,8,9,-1,8,21,23,-1,23,11,8,-1,11,23,24,-1,24,13,11,-1,13,24,25,-1,25,15,13,-1,15,25,26,-1,26,17,15,-1,17,26,27,-1,27,19,17,-1,19,27,22,-1,22,9,19,-1,22,29,28,-1,28,21,22,-1,21,28,30,-1,30,23,21,-1,23,30,31,-1,31,24,23,-1,24,31,32,-1,32,25,24,-1,25,32,33,-1,33,26,25,-1,26,33,34,-1,34,27,26,-1,27,34,29,-1,29,22,27,-1,46,45,44,-1,44,43,42,-1,46,44,42,-1,47,46,42,-1,48,47,42,-1,35,28,29,-1,29,36,35,-1,37,30,28,-1,28,35,37,-1,38,31,30,-1,30,37,38,-1,39,32,31,-1,31,38,39,-1,40,33,32,-1,32,39,40,-1,41,34,33,-1,33,40,41,-1,36,29,34,-1,34,41,36,-1,51,50,49,-1,49,52,51,-1,54,53,50,-1,50,51,54,-1,56,55,53,-1,53,54,56,-1,58,57,55,-1,55,56,58,-1,60,59,57,-1,57,58,60,-1,62,61,59,-1,59,60,62,-1,52,49,61,-1,61,62,52,-1,1,7,10,-1,10,0,1,-1,0,10,12,-1,12,2,0,-1,2,12,14,-1,14,3,2,-1,3,14,16,-1,16,4,3,-1,4,16,18,-1,18,5,4,-1,5,18,20,-1,20,6,5,-1,6,20,7,-1,7,1,6,-1,63,51,52,-1,52,64,63,-1,65,54,51,-1,51,63,65,-1,66,56,54,-1,54,65,66,-1,67,58,56,-1,56,66,67,-1,68,60,58,-1,58,67,68,-1,69,62,60,-1,60,68,69,-1,64,52,62,-1,62,69,64,-1,43,63,64,-1,64,42,43,-1,44,65,63,-1,63,43,44,-1,45,66,65,-1,65,44,45,-1,46,67,66,-1,66,45,46,-1,47,68,67,-1,67,46,47,-1,48,69,68,-1,68,47,48,-1,42,64,69,-1,69,48,42,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=10, element #81, 189 total numbers made up of 63 3-tuple values */
	this.Coordinate_10_81_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(-2.6100),doubleToFloat(2.4950),doubleToFloat(-0.0096),doubleToFloat(-1.4490),doubleToFloat(2.4950),doubleToFloat(2.8190),doubleToFloat(1.1600),doubleToFloat(2.4950),doubleToFloat(3.5180),doubleToFloat(2.9680),doubleToFloat(2.4950),doubleToFloat(1.5600),doubleToFloat(2.9680),doubleToFloat(2.4950),doubleToFloat(-1.5800),doubleToFloat(1.1600),doubleToFloat(2.4950),doubleToFloat(-3.5370),doubleToFloat(-1.4490),doubleToFloat(2.4950),doubleToFloat(-2.8390),doubleToFloat(-2.6100),doubleToFloat(-0.8104),doubleToFloat(-0.0096),doubleToFloat(-1.4490),doubleToFloat(-0.8104),doubleToFloat(2.8190),doubleToFloat(1.1600),doubleToFloat(-0.8104),doubleToFloat(3.5180)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(2.9680),doubleToFloat(-0.8104),doubleToFloat(1.5600),doubleToFloat(2.9680),doubleToFloat(-0.8104),doubleToFloat(-1.5800),doubleToFloat(1.1600),doubleToFloat(-0.8104),doubleToFloat(-3.5370),doubleToFloat(-1.4490),doubleToFloat(-0.8104),doubleToFloat(-2.8390),doubleToFloat(-2.6100),doubleToFloat(-3.3750),doubleToFloat(-0.0096),doubleToFloat(-1.4490),doubleToFloat(-3.3750),doubleToFloat(2.8190),doubleToFloat(1.1600),doubleToFloat(-3.3750),doubleToFloat(3.5180),doubleToFloat(2.9680),doubleToFloat(-3.3750),doubleToFloat(1.5600),doubleToFloat(2.9680),doubleToFloat(-3.3750),doubleToFloat(-1.5800),doubleToFloat(1.1600),doubleToFloat(-3.3750),doubleToFloat(-3.5370)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.4490),doubleToFloat(-3.3750),doubleToFloat(-2.8390),doubleToFloat(-2.9680),doubleToFloat(-6.6800),doubleToFloat(-0.0096),doubleToFloat(-1.6720),doubleToFloat(-6.6800),doubleToFloat(3.1480),doubleToFloat(1.2400),doubleToFloat(-6.6800),doubleToFloat(3.9280),doubleToFloat(2.9570),doubleToFloat(-6.6800),doubleToFloat(1.7430),doubleToFloat(2.9570),doubleToFloat(-6.6800),doubleToFloat(-1.7620),doubleToFloat(1.2400),doubleToFloat(-6.6800),doubleToFloat(-3.9470),doubleToFloat(-1.6720),doubleToFloat(-6.6800),doubleToFloat(-3.1670),doubleToFloat(-1.8920),doubleToFloat(-5.1940),doubleToFloat(-0.0096),doubleToFloat(-1.0010),doubleToFloat(-5.1940),doubleToFloat(2.1610)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(1.0010),doubleToFloat(-5.1940),doubleToFloat(2.6970),doubleToFloat(2.3210),doubleToFloat(-5.1940),doubleToFloat(1.1950),doubleToFloat(2.3210),doubleToFloat(-5.1940),doubleToFloat(-1.2140),doubleToFloat(1.0010),doubleToFloat(-5.1940),doubleToFloat(-2.7160),doubleToFloat(-1.0010),doubleToFloat(-5.1940),doubleToFloat(-2.1800),doubleToFloat(-1.9000),doubleToFloat(-10.8900),doubleToFloat(-0.0096),doubleToFloat(-1.0800),doubleToFloat(-10.8900),doubleToFloat(1.7140),doubleToFloat(0.7636),doubleToFloat(-10.8900),doubleToFloat(2.1400),doubleToFloat(2.2420),doubleToFloat(-10.8900),doubleToFloat(0.9472),doubleToFloat(2.2420),doubleToFloat(-10.8900),doubleToFloat(-0.9663)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.7636),doubleToFloat(-10.8900),doubleToFloat(-2.1590),doubleToFloat(-1.0800),doubleToFloat(-10.8900),doubleToFloat(-1.7340),doubleToFloat(-1.8070),doubleToFloat(4.2490),doubleToFloat(-0.0096),doubleToFloat(-0.9484),doubleToFloat(4.2490),doubleToFloat(2.0840),doubleToFloat(0.9820),doubleToFloat(4.2490),doubleToFloat(2.6010),doubleToFloat(2.5300),doubleToFloat(4.2490),doubleToFloat(1.1520),doubleToFloat(2.5300),doubleToFloat(4.2490),doubleToFloat(-1.1710),doubleToFloat(0.9820),doubleToFloat(4.2490),doubleToFloat(-2.6200),doubleToFloat(-0.9484),doubleToFloat(4.2490),doubleToFloat(-2.1030),doubleToFloat(-1.6240),doubleToFloat(-14.1300),doubleToFloat(-0.0096)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.9076),doubleToFloat(-14.1300),doubleToFloat(1.6410),doubleToFloat(0.7021),doubleToFloat(-14.1300),doubleToFloat(2.0130),doubleToFloat(1.9930),doubleToFloat(-14.1300),doubleToFloat(0.9715),doubleToFloat(1.9930),doubleToFloat(-14.1300),doubleToFloat(-0.8451),doubleToFloat(0.7021),doubleToFloat(-14.1300),doubleToFloat(-1.8870),doubleToFloat(-0.9076),doubleToFloat(-14.1300),doubleToFloat(-1.5150),doubleToFloat(-0.5533),doubleToFloat(-14.9900),doubleToFloat(-0.0096),doubleToFloat(-0.2401),doubleToFloat(-14.9900),doubleToFloat(0.7943),doubleToFloat(0.4639),doubleToFloat(-14.9900),doubleToFloat(0.9569),doubleToFloat(1.0280),doubleToFloat(-14.9900),doubleToFloat(0.5013)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(1.0280),doubleToFloat(-14.9900),doubleToFloat(-0.3749),doubleToFloat(0.4639),doubleToFloat(-14.9900),doubleToFloat(-0.8305),doubleToFloat(-0.2401),doubleToFloat(-14.9900),doubleToFloat(-0.6679)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=10, element #82, 140 total numbers made up of 70 2-tuple values */
	this.TextureCoordinate_10_82_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.7190),doubleToFloat(0.5576),doubleToFloat(0.6284),doubleToFloat(0.5576),doubleToFloat(0.7414),doubleToFloat(0.5576),doubleToFloat(0.6787),doubleToFloat(0.5576),doubleToFloat(0.5781),doubleToFloat(0.5576),doubleToFloat(0.5154),doubleToFloat(0.5576),doubleToFloat(0.5378),doubleToFloat(0.5576),doubleToFloat(0.6284),doubleToFloat(0.5029),doubleToFloat(0.7509),doubleToFloat(0.3997),doubleToFloat(0.6284),doubleToFloat(0.3997)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7509),doubleToFloat(0.5029),doubleToFloat(0.7811),doubleToFloat(0.3997),doubleToFloat(0.7811),doubleToFloat(0.5029),doubleToFloat(0.6964),doubleToFloat(0.3997),doubleToFloat(0.6964),doubleToFloat(0.5029),doubleToFloat(0.5604),doubleToFloat(0.3997),doubleToFloat(0.5604),doubleToFloat(0.5029),doubleToFloat(0.4756),doubleToFloat(0.3997),doubleToFloat(0.4756),doubleToFloat(0.5029),doubleToFloat(0.5059),doubleToFloat(0.3997)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5059),doubleToFloat(0.5029),doubleToFloat(0.7509),doubleToFloat(0.3197),doubleToFloat(0.6284),doubleToFloat(0.3197),doubleToFloat(0.7811),doubleToFloat(0.3197),doubleToFloat(0.6964),doubleToFloat(0.3197),doubleToFloat(0.5604),doubleToFloat(0.3197),doubleToFloat(0.4756),doubleToFloat(0.3197),doubleToFloat(0.5059),doubleToFloat(0.3197),doubleToFloat(0.7651),doubleToFloat(0.2166),doubleToFloat(0.6284),doubleToFloat(0.2166)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7989),doubleToFloat(0.2166),doubleToFloat(0.7043),doubleToFloat(0.2166),doubleToFloat(0.5525),doubleToFloat(0.2166),doubleToFloat(0.4579),doubleToFloat(0.2166),doubleToFloat(0.4917),doubleToFloat(0.2166),doubleToFloat(0.7224),doubleToFloat(0.2630),doubleToFloat(0.6284),doubleToFloat(0.2630),doubleToFloat(0.7456),doubleToFloat(0.2630),doubleToFloat(0.6805),doubleToFloat(0.2630),doubleToFloat(0.5762),doubleToFloat(0.2630)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5112),doubleToFloat(0.2630),doubleToFloat(0.5344),doubleToFloat(0.2630),doubleToFloat(0.8705),doubleToFloat(0.5452),doubleToFloat(0.8705),doubleToFloat(0.5383),doubleToFloat(0.8705),doubleToFloat(0.5369),doubleToFloat(0.8705),doubleToFloat(0.5408),doubleToFloat(0.8705),doubleToFloat(0.5483),doubleToFloat(0.8705),doubleToFloat(0.5522),doubleToFloat(0.8705),doubleToFloat(0.5509),doubleToFloat(0.9170),doubleToFloat(0.5452)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.9170),doubleToFloat(0.5266),doubleToFloat(0.8900),doubleToFloat(0.5304),doubleToFloat(0.8900),doubleToFloat(0.5452),doubleToFloat(0.9170),doubleToFloat(0.5220),doubleToFloat(0.8900),doubleToFloat(0.5268),doubleToFloat(0.9170),doubleToFloat(0.5349),doubleToFloat(0.8900),doubleToFloat(0.5370),doubleToFloat(0.9170),doubleToFloat(0.5555),doubleToFloat(0.8900),doubleToFloat(0.5534),doubleToFloat(0.9170),doubleToFloat(0.5684)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.8900),doubleToFloat(0.5636),doubleToFloat(0.9170),doubleToFloat(0.5638),doubleToFloat(0.8900),doubleToFloat(0.5600),doubleToFloat(0.8746),doubleToFloat(0.5310),doubleToFloat(0.8746),doubleToFloat(0.5452),doubleToFloat(0.8746),doubleToFloat(0.5279),doubleToFloat(0.8746),doubleToFloat(0.5368),doubleToFloat(0.8746),doubleToFloat(0.5524),doubleToFloat(0.8746),doubleToFloat(0.5613),doubleToFloat(0.8746),doubleToFloat(0.5581)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=10, element #90, 300 total numbers */
	this.IndexedFaceSet_10_90_coordIndex = new MFInt32(Java.to([0,1,2,-1,2,3,4,-1,0,2,4,-1,0,4,5,-1,6,0,5,-1,9,10,7,-1,7,8,9,-1,12,9,8,-1,8,11,12,-1,14,12,11,-1,11,13,14,-1,16,14,13,-1,13,15,16,-1,18,16,15,-1,15,17,18,-1,20,18,17,-1,17,19,20,-1,10,20,19,-1,19,7,10,-1,21,22,10,-1,10,9,21,-1,23,21,9,-1,9,12,23,-1,24,23,12,-1,12,14,24,-1,25,24,14,-1,14,16,25,-1,26,25,16,-1,16,18,26,-1,27,26,18,-1,18,20,27,-1,22,27,20,-1,20,10,22,-1,1,0,22,-1,22,21,1,-1,2,1,21,-1,21,23,2,-1,3,2,23,-1,23,24,3,-1,4,3,24,-1,24,25,4,-1,5,4,25,-1,25,26,5,-1,6,5,26,-1,26,27,6,-1,0,6,27,-1,27,22,0,-1,8,7,28,-1,28,29,8,-1,11,8,29,-1,29,30,11,-1,13,11,30,-1,30,31,13,-1,15,13,31,-1,31,32,15,-1,17,15,32,-1,32,33,17,-1,19,17,33,-1,33,34,19,-1,7,19,34,-1,34,28,7,-1,29,28,35,-1,35,36,29,-1,30,29,36,-1,36,37,30,-1,31,30,37,-1,37,38,31,-1,32,31,38,-1,38,39,32,-1,33,32,39,-1,39,40,33,-1,34,33,40,-1,40,41,34,-1,28,34,41,-1,41,35,28,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=10, element #90, 300 total numbers */
	this.IndexedFaceSet_10_90_texCoordIndex = new MFInt32(Java.to([0,1,2,-1,2,3,4,-1,0,2,4,-1,0,4,5,-1,6,0,5,-1,9,10,7,-1,7,8,9,-1,12,9,8,-1,8,11,12,-1,14,12,11,-1,11,13,14,-1,16,14,13,-1,13,15,16,-1,18,16,15,-1,15,17,18,-1,20,18,17,-1,17,19,20,-1,10,20,19,-1,19,7,10,-1,21,22,10,-1,10,9,21,-1,23,21,9,-1,9,12,23,-1,24,23,12,-1,12,14,24,-1,25,24,14,-1,14,16,25,-1,26,25,16,-1,16,18,26,-1,27,26,18,-1,18,20,27,-1,22,27,20,-1,20,10,22,-1,1,0,22,-1,22,21,1,-1,2,1,21,-1,21,23,2,-1,3,2,23,-1,23,24,3,-1,4,3,24,-1,24,25,4,-1,5,4,25,-1,25,26,5,-1,6,5,26,-1,26,27,6,-1,0,6,27,-1,27,22,0,-1,8,7,28,-1,28,29,8,-1,11,8,29,-1,29,30,11,-1,13,11,30,-1,30,31,13,-1,15,13,31,-1,31,32,15,-1,17,15,32,-1,32,33,17,-1,19,17,33,-1,33,34,19,-1,7,19,34,-1,34,28,7,-1,29,28,35,-1,35,36,29,-1,30,29,36,-1,36,37,30,-1,31,30,37,-1,37,38,31,-1,32,31,38,-1,38,39,32,-1,33,32,39,-1,39,40,33,-1,34,33,40,-1,40,41,34,-1,28,34,41,-1,41,35,28,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=11, element #90, 126 total numbers made up of 42 3-tuple values */
	this.Coordinate_11_90_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(-0.6335),doubleToFloat(1.1420),doubleToFloat(0.0206),doubleToFloat(-0.3202),doubleToFloat(1.1420),doubleToFloat(0.8245),doubleToFloat(0.3837),doubleToFloat(1.1420),doubleToFloat(0.9871),doubleToFloat(0.9483),doubleToFloat(1.1420),doubleToFloat(0.5315),doubleToFloat(0.9483),doubleToFloat(1.1420),doubleToFloat(-0.3447),doubleToFloat(0.3837),doubleToFloat(1.1420),doubleToFloat(-0.8003),doubleToFloat(-0.3202),doubleToFloat(1.1420),doubleToFloat(-0.6377),doubleToFloat(-2.0600),doubleToFloat(-3.7780),doubleToFloat(0.0206),doubleToFloat(-1.2870),doubleToFloat(-2.9050),doubleToFloat(1.7800),doubleToFloat(-1.0890),doubleToFloat(-1.1470),doubleToFloat(2.1330)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.8670),doubleToFloat(-1.3970),doubleToFloat(0.0206),doubleToFloat(0.7150),doubleToFloat(-2.9050),doubleToFloat(2.2630),doubleToFloat(0.6583),doubleToFloat(-1.1470),doubleToFloat(2.5590),doubleToFloat(1.9870),doubleToFloat(-3.7780),doubleToFloat(1.1060),doubleToFloat(2.0600),doubleToFloat(-1.3970),doubleToFloat(0.8632),doubleToFloat(1.9870),doubleToFloat(-4.4570),doubleToFloat(-1.2050),doubleToFloat(2.0600),doubleToFloat(-1.3970),doubleToFloat(-0.8220),doubleToFloat(0.7150),doubleToFloat(-4.4570),doubleToFloat(-2.5590),doubleToFloat(0.6583),doubleToFloat(-1.3970),doubleToFloat(-2.0870),doubleToFloat(-1.2870),doubleToFloat(-4.4570),doubleToFloat(-2.0760)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.0890),doubleToFloat(-1.3970),doubleToFloat(-1.6610),doubleToFloat(-0.9877),doubleToFloat(0.2851),doubleToFloat(1.6720),doubleToFloat(-1.7040),doubleToFloat(0.2851),doubleToFloat(0.0206),doubleToFloat(0.6220),doubleToFloat(0.2851),doubleToFloat(2.0430),doubleToFloat(1.9130),doubleToFloat(0.2851),doubleToFloat(1.0020),doubleToFloat(1.9130),doubleToFloat(0.2851),doubleToFloat(-0.8149),doubleToFloat(0.6220),doubleToFloat(0.2851),doubleToFloat(-1.8170),doubleToFloat(-0.9877),doubleToFloat(0.2851),doubleToFloat(-1.4450),doubleToFloat(-1.4170),doubleToFloat(-11.1000),doubleToFloat(0.0028),doubleToFloat(-0.8123),doubleToFloat(-11.0900),doubleToFloat(1.3800)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.5457),doubleToFloat(-11.0900),doubleToFloat(1.7200),doubleToFloat(1.6350),doubleToFloat(-11.1000),doubleToFloat(0.7670),doubleToFloat(1.6350),doubleToFloat(-11.1100),doubleToFloat(-0.8605),doubleToFloat(0.5457),doubleToFloat(-11.1100),doubleToFloat(-1.5350),doubleToFloat(-0.8123),doubleToFloat(-11.1100),doubleToFloat(-1.1950),doubleToFloat(-0.6234),doubleToFloat(-12.5200),doubleToFloat(0.0210),doubleToFloat(-0.3177),doubleToFloat(-12.5200),doubleToFloat(0.7175),doubleToFloat(0.3691),doubleToFloat(-12.5200),doubleToFloat(0.8896),doubleToFloat(0.9199),doubleToFloat(-12.5200),doubleToFloat(0.4076),doubleToFloat(0.9199),doubleToFloat(-12.5300),doubleToFloat(-0.4156)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.3691),doubleToFloat(-12.5300),doubleToFloat(-0.7569),doubleToFloat(-0.3177),doubleToFloat(-12.5300),doubleToFloat(-0.5849)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=11, element #91, 84 total numbers made up of 42 2-tuple values */
	this.TextureCoordinate_11_91_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.9309),doubleToFloat(0.5848),doubleToFloat(0.9190),doubleToFloat(0.5848),doubleToFloat(0.8921),doubleToFloat(0.5848),doubleToFloat(0.8706),doubleToFloat(0.5848),doubleToFloat(0.8706),doubleToFloat(0.5848),doubleToFloat(0.8921),doubleToFloat(0.5848),doubleToFloat(0.9190),doubleToFloat(0.5848),doubleToFloat(0.9845),doubleToFloat(0.5321),doubleToFloat(0.9550),doubleToFloat(0.5475),doubleToFloat(0.9491),doubleToFloat(0.5599)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.9788),doubleToFloat(0.5571),doubleToFloat(0.8787),doubleToFloat(0.5475),doubleToFloat(0.8825),doubleToFloat(0.5599),doubleToFloat(0.8302),doubleToFloat(0.5321),doubleToFloat(0.8291),doubleToFloat(0.5571),doubleToFloat(0.8302),doubleToFloat(0.5200),doubleToFloat(0.8291),doubleToFloat(0.5571),doubleToFloat(0.8787),doubleToFloat(0.5200),doubleToFloat(0.8825),doubleToFloat(0.5571),doubleToFloat(0.9550),doubleToFloat(0.5200)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.9491),doubleToFloat(0.5571),doubleToFloat(0.9444),doubleToFloat(0.5755),doubleToFloat(0.9717),doubleToFloat(0.5755),doubleToFloat(0.8831),doubleToFloat(0.5755),doubleToFloat(0.8339),doubleToFloat(0.5755),doubleToFloat(0.8339),doubleToFloat(0.5755),doubleToFloat(0.8831),doubleToFloat(0.5755),doubleToFloat(0.9444),doubleToFloat(0.5755),doubleToFloat(0.9679),doubleToFloat(0.2444),doubleToFloat(0.9449),doubleToFloat(0.2445)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.8931),doubleToFloat(0.2445),doubleToFloat(0.8516),doubleToFloat(0.2444),doubleToFloat(0.8516),doubleToFloat(0.2442),doubleToFloat(0.8931),doubleToFloat(0.2442),doubleToFloat(0.9449),doubleToFloat(0.2442),doubleToFloat(0.9372),doubleToFloat(0.2243),doubleToFloat(0.9255),doubleToFloat(0.2244),doubleToFloat(0.8993),doubleToFloat(0.2244),doubleToFloat(0.8783),doubleToFloat(0.2243),doubleToFloat(0.8783),doubleToFloat(0.2243)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.8993),doubleToFloat(0.2243),doubleToFloat(0.9255),doubleToFloat(0.2243)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=11, element #99, 288 total numbers */
	this.IndexedFaceSet_11_99_coordIndex = new MFInt32(Java.to([1,12,11,-1,3,6,5,-1,5,4,3,-1,1,3,4,-1,4,0,1,-1,0,4,5,-1,5,2,0,-1,11,6,3,-1,3,1,11,-1,18,17,0,-1,0,2,18,-1,0,17,25,-1,25,1,0,-1,25,12,1,-1,7,11,13,-1,8,9,5,-1,5,6,8,-1,7,10,9,-1,9,8,7,-1,10,2,5,-1,5,9,10,-1,11,7,8,-1,8,6,11,-1,18,2,10,-1,10,21,18,-1,10,7,27,-1,27,21,10,-1,27,7,13,-1,12,35,37,-1,37,11,12,-1,11,37,36,-1,36,13,11,-1,20,14,17,-1,17,18,20,-1,23,25,17,-1,17,14,23,-1,16,15,14,-1,14,20,16,-1,24,23,14,-1,14,15,24,-1,15,16,29,-1,29,24,15,-1,20,18,21,-1,21,19,20,-1,26,19,21,-1,21,27,26,-1,16,20,19,-1,19,22,16,-1,28,22,19,-1,19,26,28,-1,22,28,29,-1,29,16,22,-1,36,35,31,-1,31,30,34,-1,31,34,33,-1,36,31,33,-1,36,33,32,-1,24,30,31,-1,31,23,24,-1,23,31,35,-1,35,25,23,-1,27,36,32,-1,32,26,27,-1,26,32,33,-1,33,28,26,-1,28,33,34,-1,34,29,28,-1,29,34,30,-1,30,24,29,-1,36,37,35,-1,12,25,35,-1,27,13,36,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=11, element #99, 288 total numbers */
	this.IndexedFaceSet_11_99_texCoordIndex = new MFInt32(Java.to([1,18,14,-1,3,6,5,-1,5,4,3,-1,1,3,4,-1,4,0,1,-1,0,4,5,-1,5,2,0,-1,14,6,3,-1,3,1,14,-1,19,16,0,-1,0,2,19,-1,0,16,17,-1,17,1,0,-1,17,18,1,-1,7,15,23,-1,9,10,11,-1,11,8,9,-1,7,12,10,-1,10,9,7,-1,12,13,11,-1,11,10,12,-1,15,7,9,-1,9,8,15,-1,20,13,12,-1,12,21,20,-1,12,7,22,-1,22,21,12,-1,22,7,23,-1,18,24,25,-1,25,14,18,-1,15,25,26,-1,26,23,15,-1,29,27,32,-1,32,33,29,-1,41,43,32,-1,32,27,41,-1,30,28,27,-1,27,29,30,-1,42,41,27,-1,27,28,42,-1,28,31,48,-1,48,42,28,-1,35,36,37,-1,37,34,35,-1,44,34,37,-1,37,45,44,-1,39,35,34,-1,34,38,39,-1,46,38,34,-1,34,44,46,-1,38,46,47,-1,47,40,38,-1,52,51,50,-1,50,49,55,-1,50,55,54,-1,52,50,54,-1,52,54,53,-1,42,49,50,-1,50,41,42,-1,41,50,51,-1,51,43,41,-1,45,52,53,-1,53,44,45,-1,44,53,54,-1,54,46,44,-1,46,54,55,-1,55,47,46,-1,48,55,49,-1,49,42,48,-1,52,56,51,-1,18,43,24,-1,22,23,52,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=12, element #99, 114 total numbers made up of 38 3-tuple values */
	this.Coordinate_12_99_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(-0.8503),doubleToFloat(-0.0167),doubleToFloat(-1.4920),doubleToFloat(-1.4430),doubleToFloat(-0.0167),doubleToFloat(0.3823),doubleToFloat(0.0000),doubleToFloat(-0.0167),doubleToFloat(-1.4920),doubleToFloat(-1.2210),doubleToFloat(0.6369),doubleToFloat(0.3141),doubleToFloat(-0.7115),doubleToFloat(0.6369),doubleToFloat(-1.2980),doubleToFloat(0.0000),doubleToFloat(0.6369),doubleToFloat(-1.2980),doubleToFloat(0.0000),doubleToFloat(0.6368),doubleToFloat(1.3050),doubleToFloat(1.4430),doubleToFloat(-0.0167),doubleToFloat(0.3823),doubleToFloat(1.2210),doubleToFloat(0.6369),doubleToFloat(0.3141),doubleToFloat(0.7115),doubleToFloat(0.6369),doubleToFloat(-1.2980)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.8503),doubleToFloat(-0.0167),doubleToFloat(-1.4920),doubleToFloat(0.0000),doubleToFloat(-0.0167),doubleToFloat(1.5530),doubleToFloat(-1.4760),doubleToFloat(-0.2577),doubleToFloat(1.2680),doubleToFloat(1.4760),doubleToFloat(-0.2577),doubleToFloat(1.2680),doubleToFloat(-1.2260),doubleToFloat(-1.6760),doubleToFloat(-2.5530),doubleToFloat(-1.2260),doubleToFloat(-3.4360),doubleToFloat(-1.4920),doubleToFloat(0.0000),doubleToFloat(-3.4360),doubleToFloat(-1.4920),doubleToFloat(-0.9650),doubleToFloat(-0.5229),doubleToFloat(-1.8150),doubleToFloat(0.0000),doubleToFloat(-0.5229),doubleToFloat(-1.8150),doubleToFloat(1.2260),doubleToFloat(-1.6760),doubleToFloat(-2.5530)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.0000),doubleToFloat(-1.6760),doubleToFloat(-2.5530),doubleToFloat(0.9650),doubleToFloat(-0.5229),doubleToFloat(-1.8150),doubleToFloat(1.2260),doubleToFloat(-3.4360),doubleToFloat(-1.4920),doubleToFloat(-2.5480),doubleToFloat(-1.6760),doubleToFloat(0.3823),doubleToFloat(-1.8190),doubleToFloat(-3.4360),doubleToFloat(0.3823),doubleToFloat(-1.7800),doubleToFloat(-0.5229),doubleToFloat(0.3823),doubleToFloat(2.5480),doubleToFloat(-1.6760),doubleToFloat(0.3823),doubleToFloat(1.7800),doubleToFloat(-0.5229),doubleToFloat(0.3823),doubleToFloat(1.8190),doubleToFloat(-3.4360),doubleToFloat(0.3823),doubleToFloat(0.0000),doubleToFloat(-3.4360),doubleToFloat(0.3823)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.6190),doubleToFloat(-3.3020),doubleToFloat(1.2100),doubleToFloat(-2.2120),doubleToFloat(-1.7090),doubleToFloat(1.2100),doubleToFloat(2.2120),doubleToFloat(-1.7090),doubleToFloat(1.2100),doubleToFloat(1.6190),doubleToFloat(-3.3020),doubleToFloat(1.2100),doubleToFloat(0.0000),doubleToFloat(-3.3020),doubleToFloat(1.2100),doubleToFloat(-1.3930),doubleToFloat(-0.8117),doubleToFloat(1.2480),doubleToFloat(1.3930),doubleToFloat(-0.8117),doubleToFloat(1.2480),doubleToFloat(0.0000),doubleToFloat(-0.5730),doubleToFloat(1.5150)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=12, element #100, 114 total numbers made up of 57 2-tuple values */
	this.TextureCoordinate_12_100_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.3819),doubleToFloat(0.1710),doubleToFloat(0.4216),doubleToFloat(0.1651),doubleToFloat(0.3819),doubleToFloat(0.1710),doubleToFloat(0.4216),doubleToFloat(0.1651),doubleToFloat(0.3819),doubleToFloat(0.1710),doubleToFloat(0.3819),doubleToFloat(0.1710),doubleToFloat(0.4637),doubleToFloat(0.1714),doubleToFloat(0.4216),doubleToFloat(0.1651),doubleToFloat(0.4637),doubleToFloat(0.1714),doubleToFloat(0.4216),doubleToFloat(0.1651)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.3819),doubleToFloat(0.1710),doubleToFloat(0.3819),doubleToFloat(0.1710),doubleToFloat(0.3819),doubleToFloat(0.1710),doubleToFloat(0.3819),doubleToFloat(0.1710),doubleToFloat(0.4637),doubleToFloat(0.1714),doubleToFloat(0.4637),doubleToFloat(0.1714),doubleToFloat(0.3861),doubleToFloat(0.1398),doubleToFloat(0.4244),doubleToFloat(0.1312),doubleToFloat(0.4394),doubleToFloat(0.1472),doubleToFloat(0.3836),doubleToFloat(0.1404)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.3836),doubleToFloat(0.1404),doubleToFloat(0.3861),doubleToFloat(0.1398),doubleToFloat(0.4244),doubleToFloat(0.1312),doubleToFloat(0.4394),doubleToFloat(0.1472),doubleToFloat(0.4394),doubleToFloat(0.1472),doubleToFloat(0.4637),doubleToFloat(0.1714),doubleToFloat(0.4394),doubleToFloat(0.1472),doubleToFloat(0.3873),doubleToFloat(0.0706),doubleToFloat(0.3871),doubleToFloat(0.0221),doubleToFloat(0.3873),doubleToFloat(0.0706)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.3871),doubleToFloat(0.0221),doubleToFloat(0.3871),doubleToFloat(0.0221),doubleToFloat(0.3861),doubleToFloat(0.1398),doubleToFloat(0.3836),doubleToFloat(0.1404),doubleToFloat(0.3873),doubleToFloat(0.0706),doubleToFloat(0.3873),doubleToFloat(0.0706),doubleToFloat(0.3836),doubleToFloat(0.1404),doubleToFloat(0.3861),doubleToFloat(0.1398),doubleToFloat(0.3871),doubleToFloat(0.0221),doubleToFloat(0.3871),doubleToFloat(0.0221)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.3871),doubleToFloat(0.0221),doubleToFloat(0.4330),doubleToFloat(0.0595),doubleToFloat(0.4411),doubleToFloat(0.0186),doubleToFloat(0.4244),doubleToFloat(0.1312),doubleToFloat(0.4330),doubleToFloat(0.0595),doubleToFloat(0.4244),doubleToFloat(0.1312),doubleToFloat(0.4411),doubleToFloat(0.0186),doubleToFloat(0.4411),doubleToFloat(0.0186),doubleToFloat(0.4411),doubleToFloat(0.0186),doubleToFloat(0.4411),doubleToFloat(0.0186)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4330),doubleToFloat(0.0595),doubleToFloat(0.4244),doubleToFloat(0.1312),doubleToFloat(0.4244),doubleToFloat(0.1312),doubleToFloat(0.4330),doubleToFloat(0.0595),doubleToFloat(0.4411),doubleToFloat(0.0186),doubleToFloat(0.4411),doubleToFloat(0.0186),doubleToFloat(0.4244),doubleToFloat(0.1312)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=12, element #108, 264 total numbers */
	this.IndexedFaceSet_12_108_coordIndex = new MFInt32(Java.to([25,4,3,-1,26,25,3,-1,0,26,3,-1,1,10,26,-1,26,0,1,-1,1,9,12,-1,12,10,1,-1,2,4,25,-1,25,34,2,-1,6,8,31,-1,6,31,32,-1,5,6,32,-1,7,5,32,-1,32,11,7,-1,7,11,12,-1,12,9,7,-1,2,34,31,-1,31,8,2,-1,14,13,19,-1,17,16,15,-1,18,17,15,-1,19,18,15,-1,14,19,15,-1,0,13,14,-1,14,1,0,-1,1,14,15,-1,15,9,1,-1,9,15,16,-1,16,7,9,-1,7,16,17,-1,17,5,7,-1,5,17,18,-1,18,6,5,-1,6,18,19,-1,19,3,6,-1,3,19,13,-1,13,0,3,-1,2,8,6,-1,2,6,3,-1,4,2,3,-1,23,24,20,-1,20,21,23,-1,29,23,21,-1,21,22,29,-1,22,33,29,-1,20,25,26,-1,26,21,20,-1,26,10,22,-1,22,21,26,-1,10,12,33,-1,33,22,10,-1,34,25,20,-1,20,24,34,-1,23,27,28,-1,28,24,23,-1,29,30,27,-1,27,23,29,-1,30,29,33,-1,28,27,32,-1,32,31,28,-1,32,27,30,-1,30,11,32,-1,11,30,33,-1,33,12,11,-1,34,24,28,-1,28,31,34,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=12, element #108, 264 total numbers */
	this.IndexedFaceSet_12_108_texCoordIndex = new MFInt32(Java.to([12,5,4,-1,13,12,4,-1,0,13,4,-1,1,14,13,-1,13,0,1,-1,1,3,19,-1,19,14,1,-1,2,5,12,-1,12,21,2,-1,7,10,15,-1,7,15,16,-1,6,7,16,-1,8,6,16,-1,16,17,8,-1,8,17,18,-1,18,11,8,-1,9,20,15,-1,15,10,9,-1,23,22,28,-1,26,25,24,-1,27,26,24,-1,28,27,24,-1,23,28,24,-1,0,22,23,-1,23,1,0,-1,1,23,24,-1,24,3,1,-1,11,24,25,-1,25,8,11,-1,8,25,26,-1,26,6,8,-1,6,26,27,-1,27,7,6,-1,7,27,28,-1,28,4,7,-1,4,28,22,-1,22,0,4,-1,9,10,7,-1,9,7,4,-1,5,9,4,-1,30,29,31,-1,31,32,30,-1,33,30,32,-1,32,34,33,-1,34,35,33,-1,31,36,37,-1,37,32,31,-1,37,38,34,-1,34,32,37,-1,38,39,35,-1,35,34,38,-1,40,36,31,-1,31,29,40,-1,41,42,43,-1,43,44,41,-1,45,46,42,-1,42,41,45,-1,46,45,50,-1,43,42,48,-1,48,47,43,-1,48,42,46,-1,46,49,48,-1,49,46,50,-1,50,51,49,-1,52,44,43,-1,43,47,52,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=13, element #108, 105 total numbers made up of 35 3-tuple values */
	this.Coordinate_13_108_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(-2.5480),doubleToFloat(-1.4160),doubleToFloat(-0.8988),doubleToFloat(-1.8190),doubleToFloat(-3.1760),doubleToFloat(-0.8988),doubleToFloat(0.0000),doubleToFloat(0.2435),doubleToFloat(0.2718),doubleToFloat(-1.7800),doubleToFloat(-0.2627),doubleToFloat(-0.8989),doubleToFloat(-1.4760),doubleToFloat(0.0025),doubleToFloat(-0.0134),doubleToFloat(2.5480),doubleToFloat(-1.4160),doubleToFloat(-0.8988),doubleToFloat(1.7800),doubleToFloat(-0.2627),doubleToFloat(-0.8989),doubleToFloat(1.8190),doubleToFloat(-3.1760),doubleToFloat(-0.8988),doubleToFloat(1.4760),doubleToFloat(0.0025),doubleToFloat(-0.0134),doubleToFloat(0.0000),doubleToFloat(-3.1760),doubleToFloat(-0.8988)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.8630),doubleToFloat(-3.1760),doubleToFloat(0.8155),doubleToFloat(1.8630),doubleToFloat(-3.1760),doubleToFloat(0.8155),doubleToFloat(0.0000),doubleToFloat(-3.1760),doubleToFloat(0.8155),doubleToFloat(-2.0940),doubleToFloat(-1.4410),doubleToFloat(-1.6990),doubleToFloat(-1.5240),doubleToFloat(-2.5610),doubleToFloat(-1.6990),doubleToFloat(0.0000),doubleToFloat(-2.5610),doubleToFloat(-1.6990),doubleToFloat(1.5240),doubleToFloat(-2.5610),doubleToFloat(-1.6990),doubleToFloat(2.0940),doubleToFloat(-1.4410),doubleToFloat(-1.6990),doubleToFloat(1.5160),doubleToFloat(-0.4945),doubleToFloat(-1.6990),doubleToFloat(-1.5160),doubleToFloat(-0.4945),doubleToFloat(-1.6990)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.5530),doubleToFloat(-0.5642),doubleToFloat(2.0690),doubleToFloat(-1.9290),doubleToFloat(-1.9730),doubleToFloat(3.6760),doubleToFloat(-1.9290),doubleToFloat(-3.1760),doubleToFloat(3.3500),doubleToFloat(0.0000),doubleToFloat(-1.9730),doubleToFloat(4.8470),doubleToFloat(0.0000),doubleToFloat(-0.4757),doubleToFloat(3.5050),doubleToFloat(-1.5140),doubleToFloat(-0.2808),doubleToFloat(1.0280),doubleToFloat(-2.3160),doubleToFloat(-1.6250),doubleToFloat(0.8155),doubleToFloat(1.9290),doubleToFloat(-1.9730),doubleToFloat(3.6760),doubleToFloat(1.5530),doubleToFloat(-0.5642),doubleToFloat(2.0690),doubleToFloat(0.0000),doubleToFloat(-3.1760),doubleToFloat(4.5210)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(1.9290),doubleToFloat(-3.1760),doubleToFloat(3.3500),doubleToFloat(1.5140),doubleToFloat(-0.2808),doubleToFloat(1.0280),doubleToFloat(2.3160),doubleToFloat(-1.6250),doubleToFloat(0.8155),doubleToFloat(0.0000),doubleToFloat(-3.1760),doubleToFloat(3.3500),doubleToFloat(0.0000),doubleToFloat(-0.0239),doubleToFloat(1.4740)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=13, element #109, 106 total numbers made up of 53 2-tuple values */
	this.TextureCoordinate_13_109_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.4330),doubleToFloat(0.0595),doubleToFloat(0.4411),doubleToFloat(0.0186),doubleToFloat(0.4637),doubleToFloat(0.1714),doubleToFloat(0.4411),doubleToFloat(0.0186),doubleToFloat(0.4244),doubleToFloat(0.1312),doubleToFloat(0.4394),doubleToFloat(0.1472),doubleToFloat(0.4330),doubleToFloat(0.0595),doubleToFloat(0.4244),doubleToFloat(0.1312),doubleToFloat(0.4411),doubleToFloat(0.0186),doubleToFloat(0.4637),doubleToFloat(0.1714)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4394),doubleToFloat(0.1472),doubleToFloat(0.4411),doubleToFloat(0.0186),doubleToFloat(0.4640),doubleToFloat(0.1246),doubleToFloat(0.4607),doubleToFloat(0.0558),doubleToFloat(0.4904),doubleToFloat(0.0166),doubleToFloat(0.4640),doubleToFloat(0.1246),doubleToFloat(0.4607),doubleToFloat(0.0558),doubleToFloat(0.4904),doubleToFloat(0.0166),doubleToFloat(0.4949),doubleToFloat(0.0186),doubleToFloat(0.4949),doubleToFloat(0.0186)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4868),doubleToFloat(0.1432),doubleToFloat(0.4868),doubleToFloat(0.1432),doubleToFloat(0.4330),doubleToFloat(0.0595),doubleToFloat(0.4411),doubleToFloat(0.0186),doubleToFloat(0.4411),doubleToFloat(0.0186),doubleToFloat(0.4411),doubleToFloat(0.0186),doubleToFloat(0.4330),doubleToFloat(0.0595),doubleToFloat(0.4244),doubleToFloat(0.1312),doubleToFloat(0.4244),doubleToFloat(0.1312),doubleToFloat(0.5320),doubleToFloat(0.0980)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5645),doubleToFloat(0.0707),doubleToFloat(0.4885),doubleToFloat(0.1020),doubleToFloat(0.5026),doubleToFloat(0.0440),doubleToFloat(0.5945),doubleToFloat(0.0186),doubleToFloat(0.5487),doubleToFloat(0.0186),doubleToFloat(0.5487),doubleToFloat(0.0186),doubleToFloat(0.4640),doubleToFloat(0.1246),doubleToFloat(0.4607),doubleToFloat(0.0558),doubleToFloat(0.4904),doubleToFloat(0.0166),doubleToFloat(0.4949),doubleToFloat(0.0186)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4868),doubleToFloat(0.1432),doubleToFloat(0.5645),doubleToFloat(0.0707),doubleToFloat(0.5026),doubleToFloat(0.0440),doubleToFloat(0.4885),doubleToFloat(0.1020),doubleToFloat(0.5320),doubleToFloat(0.0980),doubleToFloat(0.5945),doubleToFloat(0.0186),doubleToFloat(0.5487),doubleToFloat(0.0186),doubleToFloat(0.4640),doubleToFloat(0.1246),doubleToFloat(0.4607),doubleToFloat(0.0558),doubleToFloat(0.4904),doubleToFloat(0.0166)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5487),doubleToFloat(0.0186),doubleToFloat(0.4949),doubleToFloat(0.0186),doubleToFloat(0.4868),doubleToFloat(0.1432)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=9, element #121, 480 total numbers */
	this.IndexedFaceSet_9_121_coordIndex = new MFInt32(Java.to([0,1,2,-1,0,2,3,-1,0,3,4,-1,0,4,5,-1,0,5,6,-1,0,6,7,-1,0,7,8,-1,0,8,9,-1,0,9,10,-1,0,10,11,-1,0,11,12,-1,0,12,1,-1,14,2,1,-1,1,13,14,-1,15,3,2,-1,2,14,15,-1,16,4,3,-1,3,15,16,-1,17,5,4,-1,4,16,17,-1,18,6,5,-1,5,17,18,-1,19,7,6,-1,6,18,19,-1,20,8,7,-1,7,19,20,-1,21,9,8,-1,8,20,21,-1,22,10,9,-1,9,21,22,-1,23,11,10,-1,10,22,23,-1,24,12,11,-1,11,23,24,-1,13,1,12,-1,12,24,13,-1,26,14,13,-1,13,25,26,-1,27,15,14,-1,14,26,27,-1,28,16,15,-1,15,27,28,-1,29,17,16,-1,16,28,29,-1,30,18,17,-1,17,29,30,-1,31,19,18,-1,18,30,31,-1,32,20,19,-1,19,31,32,-1,33,21,20,-1,20,32,33,-1,34,22,21,-1,21,33,34,-1,35,23,22,-1,22,34,35,-1,36,24,23,-1,23,35,36,-1,25,13,24,-1,24,36,25,-1,38,26,25,-1,25,37,38,-1,39,27,26,-1,26,38,39,-1,40,28,27,-1,27,39,40,-1,41,29,28,-1,28,40,41,-1,42,30,29,-1,29,41,42,-1,43,31,30,-1,30,42,43,-1,44,32,31,-1,31,43,44,-1,45,33,32,-1,32,44,45,-1,46,34,33,-1,33,45,46,-1,47,35,34,-1,34,46,47,-1,48,36,35,-1,35,47,48,-1,37,25,36,-1,36,48,37,-1,50,38,37,-1,37,49,50,-1,51,39,38,-1,38,50,51,-1,52,40,39,-1,39,51,52,-1,53,41,40,-1,40,52,53,-1,54,42,41,-1,41,53,54,-1,55,43,42,-1,42,54,55,-1,56,44,43,-1,43,55,56,-1,57,45,44,-1,44,56,57,-1,58,46,45,-1,45,57,58,-1,59,47,46,-1,46,58,59,-1,60,48,47,-1,47,59,60,-1,49,37,48,-1,48,60,49,-1,61,50,49,-1,61,51,50,-1,61,52,51,-1,61,53,52,-1,61,54,53,-1,61,55,54,-1,61,56,55,-1,61,57,56,-1,61,58,57,-1,61,59,58,-1,61,60,59,-1,61,49,60,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=9, element #121, 480 total numbers */
	this.IndexedFaceSet_9_121_texCoordIndex = new MFInt32(Java.to([0,1,2,-1,0,2,3,-1,0,3,4,-1,0,4,5,-1,0,5,6,-1,0,6,7,-1,0,7,8,-1,0,8,9,-1,0,9,10,-1,0,10,11,-1,0,11,12,-1,0,12,1,-1,14,2,1,-1,1,13,14,-1,15,3,2,-1,2,14,15,-1,16,4,3,-1,3,15,16,-1,17,5,4,-1,4,16,17,-1,18,6,5,-1,5,17,18,-1,19,7,6,-1,6,18,19,-1,20,8,7,-1,7,19,20,-1,21,9,8,-1,8,20,21,-1,22,10,9,-1,9,21,22,-1,23,11,10,-1,10,22,23,-1,24,12,11,-1,11,23,24,-1,13,1,12,-1,12,24,13,-1,26,14,13,-1,13,25,26,-1,27,15,14,-1,14,26,27,-1,28,16,15,-1,15,27,28,-1,29,17,16,-1,16,28,29,-1,30,18,17,-1,17,29,30,-1,31,19,18,-1,18,30,31,-1,32,20,19,-1,19,31,32,-1,33,21,20,-1,20,32,33,-1,34,22,21,-1,21,33,34,-1,35,23,22,-1,22,34,35,-1,36,24,23,-1,23,35,36,-1,25,13,24,-1,24,36,25,-1,38,26,25,-1,25,37,38,-1,39,27,26,-1,26,38,39,-1,40,28,27,-1,27,39,40,-1,41,29,28,-1,28,40,41,-1,42,30,29,-1,29,41,42,-1,43,31,30,-1,30,42,43,-1,44,32,31,-1,31,43,44,-1,45,33,32,-1,32,44,45,-1,46,34,33,-1,33,45,46,-1,47,35,34,-1,34,46,47,-1,48,36,35,-1,35,47,48,-1,37,25,36,-1,36,48,37,-1,50,38,37,-1,37,49,50,-1,51,39,38,-1,38,50,51,-1,52,40,39,-1,39,51,52,-1,53,41,40,-1,40,52,53,-1,54,42,41,-1,41,53,54,-1,55,43,42,-1,42,54,55,-1,56,44,43,-1,43,55,56,-1,57,45,44,-1,44,56,57,-1,58,46,45,-1,45,57,58,-1,59,47,46,-1,46,58,59,-1,60,48,47,-1,47,59,60,-1,49,37,48,-1,48,60,49,-1,61,50,49,-1,61,51,50,-1,61,52,51,-1,61,53,52,-1,61,54,53,-1,61,55,54,-1,61,56,55,-1,61,57,56,-1,61,58,57,-1,61,59,58,-1,61,60,59,-1,61,49,60,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=10, element #121, 186 total numbers made up of 62 3-tuple values */
	this.Coordinate_10_121_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(0.0000),doubleToFloat(9.3690),doubleToFloat(0.1256),doubleToFloat(0.0000),doubleToFloat(8.7190),doubleToFloat(-2.4900),doubleToFloat(-2.0120),doubleToFloat(8.7190),doubleToFloat(-2.1400),doubleToFloat(-3.4860),doubleToFloat(8.7190),doubleToFloat(-1.7170),doubleToFloat(-4.0250),doubleToFloat(8.7190),doubleToFloat(0.1256),doubleToFloat(-3.4860),doubleToFloat(8.7190),doubleToFloat(1.9680),doubleToFloat(-2.0120),doubleToFloat(8.7190),doubleToFloat(2.3910),doubleToFloat(0.0000),doubleToFloat(8.7190),doubleToFloat(2.7410),doubleToFloat(2.0120),doubleToFloat(8.7190),doubleToFloat(2.3910),doubleToFloat(3.4860),doubleToFloat(8.7190),doubleToFloat(1.9680)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(4.0250),doubleToFloat(8.7190),doubleToFloat(0.1256),doubleToFloat(3.4860),doubleToFloat(8.7190),doubleToFloat(-1.7170),doubleToFloat(2.0120),doubleToFloat(8.7190),doubleToFloat(-2.1400),doubleToFloat(0.0000),doubleToFloat(6.9460),doubleToFloat(-4.0670),doubleToFloat(-2.6030),doubleToFloat(6.9460),doubleToFloat(-3.5060),doubleToFloat(-4.5080),doubleToFloat(6.9460),doubleToFloat(-1.9710),doubleToFloat(-5.2050),doubleToFloat(6.9460),doubleToFloat(0.1256),doubleToFloat(-4.5080),doubleToFloat(6.9460),doubleToFloat(2.2220),doubleToFloat(-2.6030),doubleToFloat(6.9460),doubleToFloat(3.2130),doubleToFloat(0.0000),doubleToFloat(6.9460),doubleToFloat(3.7750)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(2.6030),doubleToFloat(6.9460),doubleToFloat(3.2130),doubleToFloat(4.5080),doubleToFloat(6.9460),doubleToFloat(2.2220),doubleToFloat(5.2050),doubleToFloat(6.9460),doubleToFloat(0.1256),doubleToFloat(4.5080),doubleToFloat(6.9460),doubleToFloat(-1.9710),doubleToFloat(2.6030),doubleToFloat(6.9460),doubleToFloat(-3.5060),doubleToFloat(0.0000),doubleToFloat(4.5230),doubleToFloat(-4.4230),doubleToFloat(-3.0050),doubleToFloat(4.5230),doubleToFloat(-3.7750),doubleToFloat(-5.2050),doubleToFloat(4.5230),doubleToFloat(-2.0030),doubleToFloat(-6.0110),doubleToFloat(4.5230),doubleToFloat(0.1256),doubleToFloat(-5.2050),doubleToFloat(4.5230),doubleToFloat(2.5460)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-3.0050),doubleToFloat(4.5230),doubleToFloat(3.7750),doubleToFloat(0.0000),doubleToFloat(4.5230),doubleToFloat(4.4230),doubleToFloat(3.0050),doubleToFloat(4.5230),doubleToFloat(3.7750),doubleToFloat(5.2050),doubleToFloat(4.5230),doubleToFloat(2.5460),doubleToFloat(6.0110),doubleToFloat(4.5230),doubleToFloat(0.1256),doubleToFloat(5.2050),doubleToFloat(4.5230),doubleToFloat(-2.0030),doubleToFloat(3.0050),doubleToFloat(4.5230),doubleToFloat(-3.7750),doubleToFloat(0.0000),doubleToFloat(2.1000),doubleToFloat(-3.7750),doubleToFloat(-2.6030),doubleToFloat(2.1000),doubleToFloat(-3.2130),doubleToFloat(-4.5080),doubleToFloat(2.1000),doubleToFloat(-1.6780)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-5.2050),doubleToFloat(2.1000),doubleToFloat(0.1256),doubleToFloat(-4.5080),doubleToFloat(2.1000),doubleToFloat(2.2220),doubleToFloat(-2.6030),doubleToFloat(2.1000),doubleToFloat(3.2130),doubleToFloat(0.0000),doubleToFloat(2.1000),doubleToFloat(3.7750),doubleToFloat(2.6030),doubleToFloat(2.1000),doubleToFloat(3.2130),doubleToFloat(4.5080),doubleToFloat(2.1000),doubleToFloat(2.2220),doubleToFloat(5.2050),doubleToFloat(2.1000),doubleToFloat(0.1255),doubleToFloat(4.5080),doubleToFloat(2.1000),doubleToFloat(-1.6780),doubleToFloat(2.6030),doubleToFloat(2.1000),doubleToFloat(-3.2130),doubleToFloat(0.0000),doubleToFloat(0.3265),doubleToFloat(-2.0030)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.5030),doubleToFloat(0.3265),doubleToFloat(-1.6780),doubleToFloat(-2.6030),doubleToFloat(0.3265),doubleToFloat(-1.0850),doubleToFloat(-3.0050),doubleToFloat(0.3265),doubleToFloat(0.1255),doubleToFloat(-2.6030),doubleToFloat(0.3265),doubleToFloat(1.3360),doubleToFloat(-1.5030),doubleToFloat(0.3265),doubleToFloat(2.2220),doubleToFloat(0.0000),doubleToFloat(0.3265),doubleToFloat(2.5460),doubleToFloat(1.5030),doubleToFloat(0.3265),doubleToFloat(2.2220),doubleToFloat(2.6030),doubleToFloat(0.3265),doubleToFloat(1.3360),doubleToFloat(3.0050),doubleToFloat(0.3265),doubleToFloat(0.1255),doubleToFloat(2.6030),doubleToFloat(0.3265),doubleToFloat(-1.0850)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(1.5030),doubleToFloat(0.3265),doubleToFloat(-1.6780),doubleToFloat(0.0000),doubleToFloat(-0.3227),doubleToFloat(0.1255)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=10, element #122, 124 total numbers made up of 62 2-tuple values */
	this.TextureCoordinate_10_122_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.6211),doubleToFloat(0.5754),doubleToFloat(0.7851),doubleToFloat(0.5720),doubleToFloat(0.7614),doubleToFloat(0.5720),doubleToFloat(0.6907),doubleToFloat(0.5698),doubleToFloat(0.6200),doubleToFloat(0.5698),doubleToFloat(0.6158),doubleToFloat(0.5702),doubleToFloat(0.5451),doubleToFloat(0.5702),doubleToFloat(0.4167),doubleToFloat(0.5698),doubleToFloat(0.5451),doubleToFloat(0.5702),doubleToFloat(0.6158),doubleToFloat(0.5702)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.6200),doubleToFloat(0.5698),doubleToFloat(0.6907),doubleToFloat(0.5698),doubleToFloat(0.7614),doubleToFloat(0.5720),doubleToFloat(0.8036),doubleToFloat(0.5346),doubleToFloat(0.7761),doubleToFloat(0.5346),doubleToFloat(0.6989),doubleToFloat(0.4838),doubleToFloat(0.6219),doubleToFloat(0.4428),doubleToFloat(0.6154),doubleToFloat(0.4438),doubleToFloat(0.5492),doubleToFloat(0.4639),doubleToFloat(0.4166),doubleToFloat(0.5346)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5492),doubleToFloat(0.4639),doubleToFloat(0.6154),doubleToFloat(0.4438),doubleToFloat(0.6219),doubleToFloat(0.4428),doubleToFloat(0.6989),doubleToFloat(0.4838),doubleToFloat(0.7761),doubleToFloat(0.5346),doubleToFloat(0.7912),doubleToFloat(0.4044),doubleToFloat(0.7635),doubleToFloat(0.4044),doubleToFloat(0.7042),doubleToFloat(0.3925),doubleToFloat(0.6194),doubleToFloat(0.3907),doubleToFloat(0.6148),doubleToFloat(0.3907)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5450),doubleToFloat(0.3974),doubleToFloat(0.4163),doubleToFloat(0.4938),doubleToFloat(0.5450),doubleToFloat(0.3974),doubleToFloat(0.6148),doubleToFloat(0.3907),doubleToFloat(0.6194),doubleToFloat(0.3907),doubleToFloat(0.7042),doubleToFloat(0.3925),doubleToFloat(0.7635),doubleToFloat(0.4044),doubleToFloat(0.7950),doubleToFloat(0.3772),doubleToFloat(0.7662),doubleToFloat(0.3772),doubleToFloat(0.6945),doubleToFloat(0.3645)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.6236),doubleToFloat(0.3695),doubleToFloat(0.6160),doubleToFloat(0.3695),doubleToFloat(0.5438),doubleToFloat(0.3780),doubleToFloat(0.4160),doubleToFloat(0.4530),doubleToFloat(0.5438),doubleToFloat(0.3780),doubleToFloat(0.6160),doubleToFloat(0.3695),doubleToFloat(0.6236),doubleToFloat(0.3695),doubleToFloat(0.6945),doubleToFloat(0.3645),doubleToFloat(0.7662),doubleToFloat(0.3772),doubleToFloat(0.7887),doubleToFloat(0.3451)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7635),doubleToFloat(0.3451),doubleToFloat(0.6980),doubleToFloat(0.3508),doubleToFloat(0.6262),doubleToFloat(0.3508),doubleToFloat(0.6297),doubleToFloat(0.3503),doubleToFloat(0.5389),doubleToFloat(0.3503),doubleToFloat(0.4181),doubleToFloat(0.3884),doubleToFloat(0.5389),doubleToFloat(0.3503),doubleToFloat(0.6297),doubleToFloat(0.3503),doubleToFloat(0.6262),doubleToFloat(0.3508),doubleToFloat(0.6980),doubleToFloat(0.3508)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7635),doubleToFloat(0.3451),doubleToFloat(0.6237),doubleToFloat(0.3398)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=10, element #130, 304 total numbers */
	this.IndexedFaceSet_10_130_coordIndex = new MFInt32(Java.to([2,1,0,-1,3,2,0,-1,4,3,0,-1,0,1,6,-1,6,5,0,-1,1,2,7,-1,7,6,1,-1,2,3,8,-1,8,7,2,-1,3,4,9,-1,9,8,3,-1,4,0,5,-1,5,9,4,-1,5,6,11,-1,11,10,5,-1,6,7,12,-1,12,11,6,-1,7,8,13,-1,13,12,7,-1,8,9,14,-1,14,13,8,-1,9,5,10,-1,10,14,9,-1,10,11,16,-1,16,15,10,-1,11,12,17,-1,17,16,11,-1,12,13,18,-1,18,17,12,-1,13,14,19,-1,19,18,13,-1,14,10,15,-1,15,19,14,-1,36,37,38,-1,35,36,38,-1,39,35,38,-1,21,20,15,-1,15,16,21,-1,22,21,16,-1,16,17,22,-1,23,22,17,-1,17,18,23,-1,24,23,18,-1,18,19,24,-1,20,24,19,-1,19,15,20,-1,26,25,20,-1,20,21,26,-1,27,26,21,-1,21,22,27,-1,28,27,22,-1,22,23,28,-1,29,28,23,-1,23,24,29,-1,25,29,24,-1,24,20,25,-1,31,30,25,-1,25,26,31,-1,32,31,26,-1,26,27,32,-1,33,32,27,-1,27,28,33,-1,34,33,28,-1,28,29,34,-1,30,34,29,-1,29,25,30,-1,36,35,30,-1,30,31,36,-1,37,36,31,-1,31,32,37,-1,38,37,32,-1,32,33,38,-1,39,38,33,-1,33,34,39,-1,35,39,34,-1,34,30,35,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=10, element #130, 304 total numbers */
	this.IndexedFaceSet_10_130_texCoordIndex = new MFInt32(Java.to([2,0,1,-1,3,2,1,-1,61,3,1,-1,1,0,5,-1,5,6,1,-1,0,2,7,-1,7,5,0,-1,2,3,8,-1,8,7,2,-1,25,4,9,-1,9,26,25,-1,4,1,6,-1,6,9,4,-1,6,5,10,-1,10,11,6,-1,5,7,12,-1,12,10,5,-1,7,8,13,-1,13,12,7,-1,27,9,14,-1,14,28,27,-1,9,6,11,-1,11,14,9,-1,11,10,15,-1,15,16,11,-1,10,12,17,-1,17,15,10,-1,12,13,18,-1,18,17,12,-1,29,14,19,-1,19,30,29,-1,14,11,16,-1,16,19,14,-1,54,35,36,-1,53,54,36,-1,37,53,36,-1,20,21,16,-1,16,15,20,-1,22,20,15,-1,15,17,22,-1,23,22,17,-1,17,18,23,-1,24,32,31,-1,31,19,24,-1,21,24,19,-1,19,16,21,-1,40,41,38,-1,38,39,40,-1,43,56,55,-1,55,42,43,-1,45,43,42,-1,42,44,45,-1,47,45,44,-1,44,46,47,-1,41,47,46,-1,46,38,41,-1,48,49,41,-1,41,40,48,-1,50,58,57,-1,57,43,50,-1,51,50,43,-1,43,45,51,-1,52,51,45,-1,45,47,52,-1,49,52,47,-1,47,41,49,-1,34,33,49,-1,49,48,34,-1,35,60,59,-1,59,50,35,-1,36,35,50,-1,50,51,36,-1,37,36,51,-1,51,52,37,-1,33,37,52,-1,52,49,33,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=11, element #130, 120 total numbers made up of 40 3-tuple values */
	this.Coordinate_11_130_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(1.5920),doubleToFloat(1.8170),doubleToFloat(-1.4810),doubleToFloat(2.6110),doubleToFloat(1.8170),doubleToFloat(0.0297),doubleToFloat(1.4890),doubleToFloat(1.8170),doubleToFloat(1.4660),doubleToFloat(-0.2232),doubleToFloat(1.8170),doubleToFloat(0.8423),doubleToFloat(-0.1596),doubleToFloat(1.8170),doubleToFloat(-0.9787),doubleToFloat(1.7940),doubleToFloat(0.7023),doubleToFloat(-2.0360),doubleToFloat(3.2010),doubleToFloat(0.7023),doubleToFloat(0.0503),doubleToFloat(1.6520),doubleToFloat(0.7023),doubleToFloat(2.0330),doubleToFloat(-0.7128),doubleToFloat(0.7023),doubleToFloat(1.1730),doubleToFloat(-0.6250),doubleToFloat(0.7023),doubleToFloat(-1.3420)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(1.7940),doubleToFloat(-1.5130),doubleToFloat(-2.0360),doubleToFloat(3.2010),doubleToFloat(-1.5130),doubleToFloat(0.0503),doubleToFloat(1.6520),doubleToFloat(-1.5130),doubleToFloat(2.0330),doubleToFloat(-0.7128),doubleToFloat(-1.5130),doubleToFloat(1.1730),doubleToFloat(-0.6250),doubleToFloat(-1.5130),doubleToFloat(-1.3420),doubleToFloat(1.8360),doubleToFloat(-2.4610),doubleToFloat(-2.1530),doubleToFloat(3.3250),doubleToFloat(-2.4610),doubleToFloat(0.0546),doubleToFloat(1.6860),doubleToFloat(-2.4610),doubleToFloat(2.1530),doubleToFloat(-0.8158),doubleToFloat(-2.4610),doubleToFloat(1.2420),doubleToFloat(-0.7229),doubleToFloat(-2.4610),doubleToFloat(-1.4190)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(1.3690),doubleToFloat(-0.8329),doubleToFloat(-1.7090),doubleToFloat(2.4450),doubleToFloat(-0.8329),doubleToFloat(-0.4004),doubleToFloat(1.8880),doubleToFloat(-0.8329),doubleToFloat(1.4360),doubleToFloat(0.4682),doubleToFloat(-0.8329),doubleToFloat(1.2620),doubleToFloat(0.1476),doubleToFloat(-0.8329),doubleToFloat(-0.6818),doubleToFloat(1.4310),doubleToFloat(-5.9520),doubleToFloat(-1.3830),doubleToFloat(2.5480),doubleToFloat(-5.9520),doubleToFloat(-0.3332),doubleToFloat(1.9700),doubleToFloat(-5.9520),doubleToFloat(1.1400),doubleToFloat(0.4950),doubleToFloat(-5.9520),doubleToFloat(1.0000),doubleToFloat(0.1620),doubleToFloat(-5.9520),doubleToFloat(-0.5588)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(1.4660),doubleToFloat(-9.5220),doubleToFloat(-1.3320),doubleToFloat(2.5410),doubleToFloat(-9.5220),doubleToFloat(-0.3218),doubleToFloat(1.9850),doubleToFloat(-9.5220),doubleToFloat(1.0960),doubleToFloat(0.5650),doubleToFloat(-9.5220),doubleToFloat(0.9618),doubleToFloat(0.2445),doubleToFloat(-9.5220),doubleToFloat(-0.5390),doubleToFloat(1.4220),doubleToFloat(-10.0100),doubleToFloat(-0.7920),doubleToFloat(2.0530),doubleToFloat(-10.0100),doubleToFloat(-0.1998),doubleToFloat(1.7260),doubleToFloat(-10.0100),doubleToFloat(0.6312),doubleToFloat(0.8942),doubleToFloat(-10.0100),doubleToFloat(0.5525),doubleToFloat(0.7063),doubleToFloat(-10.0100),doubleToFloat(-0.3271)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=11, element #131, 124 total numbers made up of 62 2-tuple values */
	this.TextureCoordinate_11_131_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.2986),doubleToFloat(0.2114),doubleToFloat(0.2726),doubleToFloat(0.2114),doubleToFloat(0.3201),doubleToFloat(0.2114),doubleToFloat(0.3415),doubleToFloat(0.2114),doubleToFloat(0.2466),doubleToFloat(0.2114),doubleToFloat(0.2979),doubleToFloat(0.2417),doubleToFloat(0.2726),doubleToFloat(0.2417),doubleToFloat(0.3197),doubleToFloat(0.2417),doubleToFloat(0.3418),doubleToFloat(0.2417),doubleToFloat(0.2473),doubleToFloat(0.2417)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.2979),doubleToFloat(0.3018),doubleToFloat(0.2726),doubleToFloat(0.3018),doubleToFloat(0.3197),doubleToFloat(0.3018),doubleToFloat(0.3418),doubleToFloat(0.3018),doubleToFloat(0.2473),doubleToFloat(0.3018),doubleToFloat(0.2978),doubleToFloat(0.3276),doubleToFloat(0.2726),doubleToFloat(0.3276),doubleToFloat(0.3197),doubleToFloat(0.3276),doubleToFloat(0.3419),doubleToFloat(0.3276),doubleToFloat(0.2474),doubleToFloat(0.3276)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.2932),doubleToFloat(0.2834),doubleToFloat(0.2689),doubleToFloat(0.2834),doubleToFloat(0.3160),doubleToFloat(0.2834),doubleToFloat(0.3322),doubleToFloat(0.2834),doubleToFloat(0.2450),doubleToFloat(0.2834),doubleToFloat(0.2251),doubleToFloat(0.2114),doubleToFloat(0.2255),doubleToFloat(0.2417),doubleToFloat(0.2255),doubleToFloat(0.2417),doubleToFloat(0.2255),doubleToFloat(0.3018),doubleToFloat(0.2255),doubleToFloat(0.3018)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.2255),doubleToFloat(0.3276),doubleToFloat(0.2255),doubleToFloat(0.3276),doubleToFloat(0.2159),doubleToFloat(0.2834),doubleToFloat(0.4315),doubleToFloat(0.6736),doubleToFloat(0.4420),doubleToFloat(0.6736),doubleToFloat(0.3947),doubleToFloat(0.6736),doubleToFloat(0.4041),doubleToFloat(0.6736),doubleToFloat(0.4180),doubleToFloat(0.6736),doubleToFloat(0.4296),doubleToFloat(0.6167),doubleToFloat(0.4409),doubleToFloat(0.6167)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4415),doubleToFloat(0.6485),doubleToFloat(0.4303),doubleToFloat(0.6485),doubleToFloat(0.3965),doubleToFloat(0.6167),doubleToFloat(0.3953),doubleToFloat(0.6485),doubleToFloat(0.4047),doubleToFloat(0.6167),doubleToFloat(0.4053),doubleToFloat(0.6485),doubleToFloat(0.4189),doubleToFloat(0.6167),doubleToFloat(0.4180),doubleToFloat(0.6485),doubleToFloat(0.4415),doubleToFloat(0.6706),doubleToFloat(0.4306),doubleToFloat(0.6706)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.3950),doubleToFloat(0.6706),doubleToFloat(0.4051),doubleToFloat(0.6706),doubleToFloat(0.4182),doubleToFloat(0.6706),doubleToFloat(0.3746),doubleToFloat(0.6736),doubleToFloat(0.3851),doubleToFloat(0.6736),doubleToFloat(0.3840),doubleToFloat(0.6167),doubleToFloat(0.3845),doubleToFloat(0.6485),doubleToFloat(0.3845),doubleToFloat(0.6485),doubleToFloat(0.3846),doubleToFloat(0.6706),doubleToFloat(0.3846),doubleToFloat(0.6706)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.3851),doubleToFloat(0.6736),doubleToFloat(0.3481),doubleToFloat(0.2114)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=11, element #139, 184 total numbers */
	this.IndexedFaceSet_11_139_coordIndex = new MFInt32(Java.to([3,2,1,-1,3,1,0,-1,4,3,0,-1,0,1,6,-1,6,5,0,-1,1,2,7,-1,7,6,1,-1,2,3,8,-1,8,7,2,-1,3,4,9,-1,9,8,3,-1,4,0,5,-1,5,9,4,-1,5,6,11,-1,11,10,5,-1,6,7,12,-1,12,11,6,-1,7,8,13,-1,13,12,7,-1,8,9,14,-1,14,13,8,-1,9,5,10,-1,10,14,9,-1,10,11,16,-1,16,15,10,-1,11,12,17,-1,17,16,11,-1,12,13,18,-1,18,17,12,-1,13,14,19,-1,19,18,13,-1,14,10,15,-1,15,19,14,-1,21,22,23,-1,20,21,23,-1,24,20,23,-1,21,20,15,-1,15,16,21,-1,22,21,16,-1,16,17,22,-1,23,22,17,-1,17,18,23,-1,24,23,18,-1,18,19,24,-1,20,24,19,-1,19,15,20,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=11, element #139, 184 total numbers */
	this.IndexedFaceSet_11_139_texCoordIndex = new MFInt32(Java.to([3,2,25,-1,3,25,26,-1,4,3,26,-1,0,1,6,-1,6,5,0,-1,27,2,7,-1,7,28,27,-1,2,3,8,-1,8,7,2,-1,3,4,9,-1,9,8,3,-1,4,0,5,-1,5,9,4,-1,5,6,11,-1,11,10,5,-1,29,7,12,-1,12,30,29,-1,7,8,13,-1,13,12,7,-1,8,9,14,-1,14,13,8,-1,9,5,10,-1,10,14,9,-1,10,11,16,-1,16,15,10,-1,31,12,17,-1,17,32,31,-1,12,13,18,-1,18,17,12,-1,13,14,19,-1,19,18,13,-1,14,10,15,-1,15,19,14,-1,34,22,23,-1,33,34,23,-1,24,33,23,-1,21,20,15,-1,15,16,21,-1,22,36,35,-1,35,17,22,-1,23,22,17,-1,17,18,23,-1,24,23,18,-1,18,19,24,-1,20,24,19,-1,19,15,20,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=12, element #139, 75 total numbers made up of 25 3-tuple values */
	this.Coordinate_12_139_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(0.1597),doubleToFloat(0.4908),doubleToFloat(-1.0150),doubleToFloat(0.9881),doubleToFloat(0.4908),doubleToFloat(-0.2281),doubleToFloat(0.5166),doubleToFloat(0.4908),doubleToFloat(0.9165),doubleToFloat(-0.6033),doubleToFloat(0.4908),doubleToFloat(0.8366),doubleToFloat(-0.8239),doubleToFloat(0.4908),doubleToFloat(-0.3574),doubleToFloat(0.1063),doubleToFloat(-0.5229),doubleToFloat(-1.4330),doubleToFloat(1.2770),doubleToFloat(-0.5229),doubleToFloat(-0.3764),doubleToFloat(0.6107),doubleToFloat(-0.5229),doubleToFloat(1.4330),doubleToFloat(-0.9720),doubleToFloat(-0.5229),doubleToFloat(1.3060),doubleToFloat(-1.2840),doubleToFloat(-0.5229),doubleToFloat(-0.5807)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.1170),doubleToFloat(-2.8640),doubleToFloat(-1.4160),doubleToFloat(1.3670),doubleToFloat(-2.8640),doubleToFloat(-0.3724),doubleToFloat(0.6839),doubleToFloat(-2.3520),doubleToFloat(1.4190),doubleToFloat(-1.0060),doubleToFloat(-2.3520),doubleToFloat(1.2940),doubleToFloat(-1.3670),doubleToFloat(-2.8640),doubleToFloat(-0.5747),doubleToFloat(0.0931),doubleToFloat(-7.4590),doubleToFloat(-1.2670),doubleToFloat(1.0050),doubleToFloat(-7.4590),doubleToFloat(-0.1128),doubleToFloat(0.4859),doubleToFloat(-7.4590),doubleToFloat(1.3310),doubleToFloat(-0.7465),doubleToFloat(-7.4590),doubleToFloat(1.2140),doubleToFloat(-0.9892),doubleToFloat(-7.4590),doubleToFloat(-0.3022)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.0539),doubleToFloat(-8.0090),doubleToFloat(-0.7805),doubleToFloat(0.6765),doubleToFloat(-8.0090),doubleToFloat(0.0074),doubleToFloat(0.3221),doubleToFloat(-8.0090),doubleToFloat(0.9190),doubleToFloat(-0.5194),doubleToFloat(-8.0090),doubleToFloat(0.8391),doubleToFloat(-0.6852),doubleToFloat(-8.0090),doubleToFloat(-0.1219)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=12, element #140, 74 total numbers made up of 37 2-tuple values */
	this.TextureCoordinate_12_140_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.4222),doubleToFloat(0.6201),doubleToFloat(0.4327),doubleToFloat(0.6201),doubleToFloat(0.3884),doubleToFloat(0.6201),doubleToFloat(0.3987),doubleToFloat(0.6201),doubleToFloat(0.4103),doubleToFloat(0.6201),doubleToFloat(0.4213),doubleToFloat(0.6265),doubleToFloat(0.4321),doubleToFloat(0.6265),doubleToFloat(0.3894),doubleToFloat(0.6265),doubleToFloat(0.3990),doubleToFloat(0.6265),doubleToFloat(0.4105),doubleToFloat(0.6265)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4214),doubleToFloat(0.6413),doubleToFloat(0.4323),doubleToFloat(0.6413),doubleToFloat(0.3890),doubleToFloat(0.6381),doubleToFloat(0.3992),doubleToFloat(0.6381),doubleToFloat(0.4103),doubleToFloat(0.6413),doubleToFloat(0.4213),doubleToFloat(0.6705),doubleToFloat(0.4336),doubleToFloat(0.6705),doubleToFloat(0.3899),doubleToFloat(0.6705),doubleToFloat(0.3981),doubleToFloat(0.6705),doubleToFloat(0.4094),doubleToFloat(0.6705)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4215),doubleToFloat(0.6740),doubleToFloat(0.4346),doubleToFloat(0.6740),doubleToFloat(0.3899),doubleToFloat(0.6740),doubleToFloat(0.3980),doubleToFloat(0.6740),doubleToFloat(0.4083),doubleToFloat(0.6740),doubleToFloat(0.3787),doubleToFloat(0.6201),doubleToFloat(0.3682),doubleToFloat(0.6201),doubleToFloat(0.3787),doubleToFloat(0.6201),doubleToFloat(0.3782),doubleToFloat(0.6265),doubleToFloat(0.3782),doubleToFloat(0.6265)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.3783),doubleToFloat(0.6413),doubleToFloat(0.3783),doubleToFloat(0.6413),doubleToFloat(0.3796),doubleToFloat(0.6705),doubleToFloat(0.3676),doubleToFloat(0.6740),doubleToFloat(0.3806),doubleToFloat(0.6740),doubleToFloat(0.3796),doubleToFloat(0.6705),doubleToFloat(0.3806),doubleToFloat(0.6740)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=12, element #148, 160 total numbers */
	this.IndexedFaceSet_12_148_coordIndex = new MFInt32(Java.to([4,5,0,-1,0,2,4,-1,6,7,3,-1,3,1,6,-1,1,0,5,-1,5,6,1,-1,8,9,5,-1,5,4,8,-1,10,11,7,-1,7,6,10,-1,9,10,6,-1,6,5,9,-1,12,13,9,-1,9,8,12,-1,14,15,11,-1,11,10,14,-1,13,14,10,-1,10,9,13,-1,4,2,16,-1,2,3,7,-1,7,16,2,-1,17,19,18,-1,18,20,17,-1,21,16,7,-1,7,11,21,-1,8,21,12,-1,12,21,11,-1,11,15,12,-1,13,12,15,-1,15,14,13,-1,8,4,19,-1,19,17,8,-1,4,16,18,-1,18,19,4,-1,16,21,20,-1,20,18,16,-1,21,8,17,-1,17,20,21,-1,22,27,23,-1,26,25,24,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=12, element #148, 160 total numbers */
	this.IndexedFaceSet_12_148_texCoordIndex = new MFInt32(Java.to([4,6,5,-1,5,7,4,-1,2,3,1,-1,1,0,2,-1,14,16,15,-1,15,17,14,-1,8,9,6,-1,6,4,8,-1,38,40,39,-1,39,41,38,-1,18,19,36,-1,36,37,18,-1,10,11,9,-1,9,8,10,-1,42,43,40,-1,40,38,42,-1,20,21,19,-1,19,18,20,-1,22,24,23,-1,24,26,25,-1,25,23,24,-1,27,29,28,-1,28,30,27,-1,31,23,25,-1,25,32,31,-1,33,31,34,-1,34,31,32,-1,32,35,34,-1,20,34,35,-1,35,21,20,-1,8,4,12,-1,12,13,8,-1,22,23,28,-1,28,29,22,-1,23,31,30,-1,30,28,23,-1,31,33,27,-1,27,30,31,-1,14,24,26,-1,14,16,24,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=13, element #148, 84 total numbers made up of 28 3-tuple values */
	this.Coordinate_13_148_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(0.6237),doubleToFloat(0.0984),doubleToFloat(0.7030),doubleToFloat(0.5903),doubleToFloat(0.1133),doubleToFloat(-1.1890),doubleToFloat(-1.1010),doubleToFloat(0.0200),doubleToFloat(0.7856),doubleToFloat(-1.1080),doubleToFloat(0.0215),doubleToFloat(-1.1310),doubleToFloat(-1.2890),doubleToFloat(-0.5207),doubleToFloat(1.3030),doubleToFloat(0.9805),doubleToFloat(-0.3349),doubleToFloat(1.2240),doubleToFloat(0.9287),doubleToFloat(-0.3062),doubleToFloat(-1.7530),doubleToFloat(-1.3910),doubleToFloat(-0.5055),doubleToFloat(-1.7490),doubleToFloat(-1.1800),doubleToFloat(-2.2020),doubleToFloat(2.1230),doubleToFloat(1.2630),doubleToFloat(-2.0150),doubleToFloat(1.8340)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(1.2110),doubleToFloat(-1.9860),doubleToFloat(-2.1230),doubleToFloat(-1.5050),doubleToFloat(-2.2870),doubleToFloat(-1.9810),doubleToFloat(-0.9466),doubleToFloat(-3.4660),doubleToFloat(1.4930),doubleToFloat(0.3369),doubleToFloat(-3.6690),doubleToFloat(1.5430),doubleToFloat(0.2851),doubleToFloat(-3.6400),doubleToFloat(-1.8260),doubleToFloat(-1.1350),doubleToFloat(-3.4770),doubleToFloat(-1.7050),doubleToFloat(-1.3850),doubleToFloat(-0.5072),doubleToFloat(-0.1650),doubleToFloat(-1.9030),doubleToFloat(-2.2440),doubleToFloat(1.7110),doubleToFloat(-2.1870),doubleToFloat(-0.8250),doubleToFloat(0.0512),doubleToFloat(-2.1540),doubleToFloat(-0.8839),doubleToFloat(1.6620)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.9080),doubleToFloat(-2.2420),doubleToFloat(0.1214),doubleToFloat(-1.3940),doubleToFloat(-2.2820),doubleToFloat(-0.1776),doubleToFloat(0.5903),doubleToFloat(0.1133),doubleToFloat(-1.1890),doubleToFloat(-1.1080),doubleToFloat(0.0215),doubleToFloat(-1.1310),doubleToFloat(-1.1010),doubleToFloat(0.0200),doubleToFloat(0.7856),doubleToFloat(0.6237),doubleToFloat(0.0984),doubleToFloat(0.7030),doubleToFloat(0.5903),doubleToFloat(0.1133),doubleToFloat(-1.1890),doubleToFloat(-1.1010),doubleToFloat(0.0200),doubleToFloat(0.7856)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=13, element #149, 88 total numbers made up of 44 2-tuple values */
	this.TextureCoordinate_13_149_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.8107),doubleToFloat(0.9924),doubleToFloat(0.8122),doubleToFloat(0.9033),doubleToFloat(0.7694),doubleToFloat(0.9912),doubleToFloat(0.7683),doubleToFloat(0.9026),doubleToFloat(0.1329),doubleToFloat(0.0347),doubleToFloat(0.0307),doubleToFloat(0.0051),doubleToFloat(0.0134),doubleToFloat(0.0353),doubleToFloat(0.1366),doubleToFloat(0.0058),doubleToFloat(0.1249),doubleToFloat(0.1081),doubleToFloat(0.0147),doubleToFloat(0.1170)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1349),doubleToFloat(0.1856),doubleToFloat(0.0462),doubleToFloat(0.1842),doubleToFloat(0.1559),doubleToFloat(0.0454),doubleToFloat(0.1480),doubleToFloat(0.1033),doubleToFloat(0.3244),doubleToFloat(0.0096),doubleToFloat(0.1758),doubleToFloat(0.0039),doubleToFloat(0.1759),doubleToFloat(0.0110),doubleToFloat(0.3241),doubleToFloat(0.0033),doubleToFloat(0.1730),doubleToFloat(0.1764),doubleToFloat(0.3074),doubleToFloat(0.1757)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1732),doubleToFloat(0.1519),doubleToFloat(0.3074),doubleToFloat(0.1513),doubleToFloat(0.1756),doubleToFloat(0.0320),doubleToFloat(0.2159),doubleToFloat(0.0368),doubleToFloat(0.1791),doubleToFloat(0.0165),doubleToFloat(0.3169),doubleToFloat(0.0458),doubleToFloat(0.3158),doubleToFloat(0.0193),doubleToFloat(0.1720),doubleToFloat(0.0594),doubleToFloat(0.2087),doubleToFloat(0.0476),doubleToFloat(0.1736),doubleToFloat(0.0504)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.2073),doubleToFloat(0.0640),doubleToFloat(0.2362),doubleToFloat(0.0821),doubleToFloat(0.3267),doubleToFloat(0.0796),doubleToFloat(0.1717),doubleToFloat(0.0822),doubleToFloat(0.1726),doubleToFloat(0.1297),doubleToFloat(0.3077),doubleToFloat(0.1289),doubleToFloat(0.3074),doubleToFloat(0.1865),doubleToFloat(0.1742),doubleToFloat(0.1840),doubleToFloat(0.0061),doubleToFloat(0.1086),doubleToFloat(0.1366),doubleToFloat(0.0368)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1241),doubleToFloat(0.1189),doubleToFloat(0.0168),doubleToFloat(0.0309),doubleToFloat(0.0211),doubleToFloat(0.1882),doubleToFloat(0.1400),doubleToFloat(0.1857)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=10, element #160, 304 total numbers */
	this.IndexedFaceSet_10_160_coordIndex = new MFInt32(Java.to([0,1,2,-1,0,2,3,-1,4,0,3,-1,0,5,6,-1,6,1,0,-1,1,6,7,-1,7,2,1,-1,2,7,8,-1,8,3,2,-1,3,8,9,-1,9,4,3,-1,4,9,5,-1,5,0,4,-1,5,10,11,-1,11,6,5,-1,6,11,12,-1,12,7,6,-1,7,12,13,-1,13,8,7,-1,8,13,14,-1,14,9,8,-1,9,14,10,-1,10,5,9,-1,10,15,16,-1,16,11,10,-1,11,16,17,-1,17,12,11,-1,12,17,18,-1,18,13,12,-1,13,18,19,-1,19,14,13,-1,14,19,15,-1,15,10,14,-1,38,37,36,-1,38,36,35,-1,39,38,35,-1,21,16,15,-1,15,20,21,-1,22,17,16,-1,16,21,22,-1,23,18,17,-1,17,22,23,-1,24,19,18,-1,18,23,24,-1,20,15,19,-1,19,24,20,-1,26,21,20,-1,20,25,26,-1,27,22,21,-1,21,26,27,-1,28,23,22,-1,22,27,28,-1,29,24,23,-1,23,28,29,-1,25,20,24,-1,24,29,25,-1,31,26,25,-1,25,30,31,-1,32,27,26,-1,26,31,32,-1,33,28,27,-1,27,32,33,-1,34,29,28,-1,28,33,34,-1,30,25,29,-1,29,34,30,-1,36,31,30,-1,30,35,36,-1,37,32,31,-1,31,36,37,-1,38,33,32,-1,32,37,38,-1,39,34,33,-1,33,38,39,-1,35,30,34,-1,34,39,35,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=10, element #160, 304 total numbers */
	this.IndexedFaceSet_10_160_texCoordIndex = new MFInt32(Java.to([1,0,2,-1,1,2,3,-1,61,1,3,-1,1,6,5,-1,5,0,1,-1,0,5,7,-1,7,2,0,-1,2,7,8,-1,8,3,2,-1,25,26,9,-1,9,4,25,-1,4,9,6,-1,6,1,4,-1,6,11,10,-1,10,5,6,-1,5,10,12,-1,12,7,5,-1,7,12,13,-1,13,8,7,-1,27,28,14,-1,14,9,27,-1,9,14,11,-1,11,6,9,-1,11,16,15,-1,15,10,11,-1,10,15,17,-1,17,12,10,-1,12,17,18,-1,18,13,12,-1,29,30,19,-1,19,14,29,-1,14,19,16,-1,16,11,14,-1,36,35,54,-1,36,54,53,-1,37,36,53,-1,20,15,16,-1,16,21,20,-1,22,17,15,-1,15,20,22,-1,23,18,17,-1,17,22,23,-1,24,19,31,-1,31,32,24,-1,21,16,19,-1,19,24,21,-1,40,39,38,-1,38,41,40,-1,43,42,55,-1,55,56,43,-1,45,44,42,-1,42,43,45,-1,47,46,44,-1,44,45,47,-1,41,38,46,-1,46,47,41,-1,48,40,41,-1,41,49,48,-1,50,43,57,-1,57,58,50,-1,51,45,43,-1,43,50,51,-1,52,47,45,-1,45,51,52,-1,49,41,47,-1,47,52,49,-1,34,48,49,-1,49,33,34,-1,35,50,59,-1,59,60,35,-1,36,51,50,-1,50,35,36,-1,37,52,51,-1,51,36,37,-1,33,49,52,-1,52,37,33,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=11, element #160, 120 total numbers made up of 40 3-tuple values */
	this.Coordinate_11_160_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(-1.5920),doubleToFloat(1.8170),doubleToFloat(-1.4810),doubleToFloat(-2.6110),doubleToFloat(1.8170),doubleToFloat(0.0297),doubleToFloat(-1.4890),doubleToFloat(1.8170),doubleToFloat(1.4660),doubleToFloat(0.2232),doubleToFloat(1.8170),doubleToFloat(0.8423),doubleToFloat(0.1596),doubleToFloat(1.8170),doubleToFloat(-0.9787),doubleToFloat(-1.7940),doubleToFloat(0.7023),doubleToFloat(-2.0360),doubleToFloat(-3.2010),doubleToFloat(0.7023),doubleToFloat(0.0503),doubleToFloat(-1.6520),doubleToFloat(0.7023),doubleToFloat(2.0330),doubleToFloat(0.7128),doubleToFloat(0.7023),doubleToFloat(1.1730),doubleToFloat(0.6250),doubleToFloat(0.7023),doubleToFloat(-1.3420)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.7940),doubleToFloat(-1.5130),doubleToFloat(-2.0360),doubleToFloat(-3.2010),doubleToFloat(-1.5130),doubleToFloat(0.0503),doubleToFloat(-1.6520),doubleToFloat(-1.5130),doubleToFloat(2.0330),doubleToFloat(0.7128),doubleToFloat(-1.5130),doubleToFloat(1.1730),doubleToFloat(0.6250),doubleToFloat(-1.5130),doubleToFloat(-1.3420),doubleToFloat(-1.8360),doubleToFloat(-2.4610),doubleToFloat(-2.1530),doubleToFloat(-3.3250),doubleToFloat(-2.4610),doubleToFloat(0.0546),doubleToFloat(-1.6860),doubleToFloat(-2.4610),doubleToFloat(2.1530),doubleToFloat(0.8158),doubleToFloat(-2.4610),doubleToFloat(1.2420),doubleToFloat(0.7229),doubleToFloat(-2.4610),doubleToFloat(-1.4190)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.3690),doubleToFloat(-0.8329),doubleToFloat(-1.7090),doubleToFloat(-2.4450),doubleToFloat(-0.8329),doubleToFloat(-0.4004),doubleToFloat(-1.8880),doubleToFloat(-0.8329),doubleToFloat(1.4360),doubleToFloat(-0.4682),doubleToFloat(-0.8329),doubleToFloat(1.2620),doubleToFloat(-0.1476),doubleToFloat(-0.8329),doubleToFloat(-0.6818),doubleToFloat(-1.4310),doubleToFloat(-5.9520),doubleToFloat(-1.3830),doubleToFloat(-2.5480),doubleToFloat(-5.9520),doubleToFloat(-0.3332),doubleToFloat(-1.9700),doubleToFloat(-5.9520),doubleToFloat(1.1400),doubleToFloat(-0.4950),doubleToFloat(-5.9520),doubleToFloat(1.0000),doubleToFloat(-0.1620),doubleToFloat(-5.9520),doubleToFloat(-0.5588)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.4660),doubleToFloat(-9.5220),doubleToFloat(-1.3320),doubleToFloat(-2.5410),doubleToFloat(-9.5220),doubleToFloat(-0.3218),doubleToFloat(-1.9850),doubleToFloat(-9.5220),doubleToFloat(1.0960),doubleToFloat(-0.5650),doubleToFloat(-9.5220),doubleToFloat(0.9618),doubleToFloat(-0.2445),doubleToFloat(-9.5220),doubleToFloat(-0.5390),doubleToFloat(-1.4220),doubleToFloat(-10.0100),doubleToFloat(-0.7920),doubleToFloat(-2.0530),doubleToFloat(-10.0100),doubleToFloat(-0.1998),doubleToFloat(-1.7260),doubleToFloat(-10.0100),doubleToFloat(0.6312),doubleToFloat(-0.8942),doubleToFloat(-10.0100),doubleToFloat(0.5525),doubleToFloat(-0.7063),doubleToFloat(-10.0100),doubleToFloat(-0.3271)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=11, element #161, 124 total numbers made up of 62 2-tuple values */
	this.TextureCoordinate_11_161_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.2986),doubleToFloat(0.2114),doubleToFloat(0.2726),doubleToFloat(0.2114),doubleToFloat(0.3201),doubleToFloat(0.2114),doubleToFloat(0.3415),doubleToFloat(0.2114),doubleToFloat(0.2466),doubleToFloat(0.2114),doubleToFloat(0.2979),doubleToFloat(0.2417),doubleToFloat(0.2726),doubleToFloat(0.2417),doubleToFloat(0.3197),doubleToFloat(0.2417),doubleToFloat(0.3418),doubleToFloat(0.2417),doubleToFloat(0.2473),doubleToFloat(0.2417)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.2979),doubleToFloat(0.3018),doubleToFloat(0.2726),doubleToFloat(0.3018),doubleToFloat(0.3197),doubleToFloat(0.3018),doubleToFloat(0.3418),doubleToFloat(0.3018),doubleToFloat(0.2473),doubleToFloat(0.3018),doubleToFloat(0.2978),doubleToFloat(0.3276),doubleToFloat(0.2726),doubleToFloat(0.3276),doubleToFloat(0.3197),doubleToFloat(0.3276),doubleToFloat(0.3419),doubleToFloat(0.3276),doubleToFloat(0.2474),doubleToFloat(0.3276)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.2932),doubleToFloat(0.2834),doubleToFloat(0.2689),doubleToFloat(0.2834),doubleToFloat(0.3160),doubleToFloat(0.2834),doubleToFloat(0.3322),doubleToFloat(0.2834),doubleToFloat(0.2450),doubleToFloat(0.2834),doubleToFloat(0.2251),doubleToFloat(0.2114),doubleToFloat(0.2255),doubleToFloat(0.2417),doubleToFloat(0.2255),doubleToFloat(0.2417),doubleToFloat(0.2255),doubleToFloat(0.3018),doubleToFloat(0.2255),doubleToFloat(0.3018)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.2255),doubleToFloat(0.3276),doubleToFloat(0.2255),doubleToFloat(0.3276),doubleToFloat(0.2159),doubleToFloat(0.2834),doubleToFloat(0.4315),doubleToFloat(0.6736),doubleToFloat(0.4420),doubleToFloat(0.6736),doubleToFloat(0.3947),doubleToFloat(0.6736),doubleToFloat(0.4041),doubleToFloat(0.6736),doubleToFloat(0.4180),doubleToFloat(0.6736),doubleToFloat(0.4296),doubleToFloat(0.6167),doubleToFloat(0.4409),doubleToFloat(0.6167)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4415),doubleToFloat(0.6485),doubleToFloat(0.4303),doubleToFloat(0.6485),doubleToFloat(0.3965),doubleToFloat(0.6167),doubleToFloat(0.3953),doubleToFloat(0.6485),doubleToFloat(0.4047),doubleToFloat(0.6167),doubleToFloat(0.4053),doubleToFloat(0.6485),doubleToFloat(0.4189),doubleToFloat(0.6167),doubleToFloat(0.4180),doubleToFloat(0.6485),doubleToFloat(0.4415),doubleToFloat(0.6706),doubleToFloat(0.4306),doubleToFloat(0.6706)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.3950),doubleToFloat(0.6706),doubleToFloat(0.4051),doubleToFloat(0.6706),doubleToFloat(0.4182),doubleToFloat(0.6706),doubleToFloat(0.3746),doubleToFloat(0.6736),doubleToFloat(0.3851),doubleToFloat(0.6736),doubleToFloat(0.3840),doubleToFloat(0.6167),doubleToFloat(0.3845),doubleToFloat(0.6485),doubleToFloat(0.3845),doubleToFloat(0.6485),doubleToFloat(0.3846),doubleToFloat(0.6706),doubleToFloat(0.3846),doubleToFloat(0.6706)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.3851),doubleToFloat(0.6736),doubleToFloat(0.3481),doubleToFloat(0.2114)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=11, element #169, 184 total numbers */
	this.IndexedFaceSet_11_169_coordIndex = new MFInt32(Java.to([1,2,3,-1,0,1,3,-1,4,0,3,-1,0,5,6,-1,6,1,0,-1,1,6,7,-1,7,2,1,-1,2,7,8,-1,8,3,2,-1,3,8,9,-1,9,4,3,-1,4,9,5,-1,5,0,4,-1,5,10,11,-1,11,6,5,-1,6,11,12,-1,12,7,6,-1,7,12,13,-1,13,8,7,-1,8,13,14,-1,14,9,8,-1,9,14,10,-1,10,5,9,-1,10,15,16,-1,16,11,10,-1,11,16,17,-1,17,12,11,-1,12,17,18,-1,18,13,12,-1,13,18,19,-1,19,14,13,-1,14,19,15,-1,15,10,14,-1,23,22,21,-1,23,21,20,-1,24,23,20,-1,21,16,15,-1,15,20,21,-1,22,17,16,-1,16,21,22,-1,23,18,17,-1,17,22,23,-1,24,19,18,-1,18,23,24,-1,20,15,19,-1,19,24,20,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=11, element #169, 184 total numbers */
	this.IndexedFaceSet_11_169_texCoordIndex = new MFInt32(Java.to([25,2,3,-1,26,25,3,-1,4,26,3,-1,0,5,6,-1,6,1,0,-1,27,28,7,-1,7,2,27,-1,2,7,8,-1,8,3,2,-1,3,8,9,-1,9,4,3,-1,4,9,5,-1,5,0,4,-1,5,10,11,-1,11,6,5,-1,29,30,12,-1,12,7,29,-1,7,12,13,-1,13,8,7,-1,8,13,14,-1,14,9,8,-1,9,14,10,-1,10,5,9,-1,10,15,16,-1,16,11,10,-1,31,32,17,-1,17,12,31,-1,12,17,18,-1,18,13,12,-1,13,18,19,-1,19,14,13,-1,14,19,15,-1,15,10,14,-1,23,22,34,-1,23,34,33,-1,24,23,33,-1,21,16,15,-1,15,20,21,-1,22,17,35,-1,35,36,22,-1,23,18,17,-1,17,22,23,-1,24,19,18,-1,18,23,24,-1,20,15,19,-1,19,24,20,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=12, element #169, 75 total numbers made up of 25 3-tuple values */
	this.Coordinate_12_169_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(-0.1597),doubleToFloat(0.4908),doubleToFloat(-1.0150),doubleToFloat(-0.9881),doubleToFloat(0.4908),doubleToFloat(-0.2281),doubleToFloat(-0.5166),doubleToFloat(0.4908),doubleToFloat(0.9165),doubleToFloat(0.6033),doubleToFloat(0.4908),doubleToFloat(0.8366),doubleToFloat(0.8239),doubleToFloat(0.4908),doubleToFloat(-0.3574),doubleToFloat(-0.1063),doubleToFloat(-0.5229),doubleToFloat(-1.4330),doubleToFloat(-1.2770),doubleToFloat(-0.5229),doubleToFloat(-0.3764),doubleToFloat(-0.6107),doubleToFloat(-0.5229),doubleToFloat(1.4330),doubleToFloat(0.9720),doubleToFloat(-0.5229),doubleToFloat(1.3060),doubleToFloat(1.2840),doubleToFloat(-0.5229),doubleToFloat(-0.5807)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.1170),doubleToFloat(-2.8640),doubleToFloat(-1.4160),doubleToFloat(-1.3670),doubleToFloat(-2.8640),doubleToFloat(-0.3724),doubleToFloat(-0.6839),doubleToFloat(-2.3520),doubleToFloat(1.4190),doubleToFloat(1.0060),doubleToFloat(-2.3520),doubleToFloat(1.2940),doubleToFloat(1.3670),doubleToFloat(-2.8640),doubleToFloat(-0.5747),doubleToFloat(-0.0931),doubleToFloat(-7.4590),doubleToFloat(-1.2670),doubleToFloat(-1.0050),doubleToFloat(-7.4590),doubleToFloat(-0.1128),doubleToFloat(-0.4859),doubleToFloat(-7.4590),doubleToFloat(1.3310),doubleToFloat(0.7465),doubleToFloat(-7.4590),doubleToFloat(1.2140),doubleToFloat(0.9892),doubleToFloat(-7.4590),doubleToFloat(-0.3022)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.0540),doubleToFloat(-8.0090),doubleToFloat(-0.7805),doubleToFloat(-0.6765),doubleToFloat(-8.0090),doubleToFloat(0.0074),doubleToFloat(-0.3221),doubleToFloat(-8.0090),doubleToFloat(0.9190),doubleToFloat(0.5194),doubleToFloat(-8.0090),doubleToFloat(0.8391),doubleToFloat(0.6852),doubleToFloat(-8.0090),doubleToFloat(-0.1219)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=12, element #170, 74 total numbers made up of 37 2-tuple values */
	this.TextureCoordinate_12_170_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.4222),doubleToFloat(0.6201),doubleToFloat(0.4327),doubleToFloat(0.6201),doubleToFloat(0.3884),doubleToFloat(0.6201),doubleToFloat(0.3987),doubleToFloat(0.6201),doubleToFloat(0.4103),doubleToFloat(0.6201),doubleToFloat(0.4213),doubleToFloat(0.6265),doubleToFloat(0.4321),doubleToFloat(0.6265),doubleToFloat(0.3894),doubleToFloat(0.6265),doubleToFloat(0.3990),doubleToFloat(0.6265),doubleToFloat(0.4105),doubleToFloat(0.6265)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4214),doubleToFloat(0.6413),doubleToFloat(0.4323),doubleToFloat(0.6413),doubleToFloat(0.3890),doubleToFloat(0.6381),doubleToFloat(0.3992),doubleToFloat(0.6381),doubleToFloat(0.4103),doubleToFloat(0.6413),doubleToFloat(0.4213),doubleToFloat(0.6705),doubleToFloat(0.4336),doubleToFloat(0.6705),doubleToFloat(0.3899),doubleToFloat(0.6705),doubleToFloat(0.3981),doubleToFloat(0.6705),doubleToFloat(0.4094),doubleToFloat(0.6705)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4215),doubleToFloat(0.6740),doubleToFloat(0.4346),doubleToFloat(0.6740),doubleToFloat(0.3899),doubleToFloat(0.6740),doubleToFloat(0.3980),doubleToFloat(0.6740),doubleToFloat(0.4083),doubleToFloat(0.6740),doubleToFloat(0.3787),doubleToFloat(0.6201),doubleToFloat(0.3682),doubleToFloat(0.6201),doubleToFloat(0.3787),doubleToFloat(0.6201),doubleToFloat(0.3782),doubleToFloat(0.6265),doubleToFloat(0.3782),doubleToFloat(0.6265)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.3783),doubleToFloat(0.6413),doubleToFloat(0.3783),doubleToFloat(0.6413),doubleToFloat(0.3796),doubleToFloat(0.6705),doubleToFloat(0.3676),doubleToFloat(0.6740),doubleToFloat(0.3806),doubleToFloat(0.6740),doubleToFloat(0.3796),doubleToFloat(0.6705),doubleToFloat(0.3806),doubleToFloat(0.6740)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=12, element #178, 160 total numbers */
	this.IndexedFaceSet_12_178_coordIndex = new MFInt32(Java.to([4,2,0,-1,0,5,4,-1,6,1,3,-1,3,7,6,-1,1,6,5,-1,5,0,1,-1,8,4,5,-1,5,9,8,-1,10,6,7,-1,7,11,10,-1,9,5,6,-1,6,10,9,-1,12,8,9,-1,9,13,12,-1,14,10,11,-1,11,15,14,-1,13,9,10,-1,10,14,13,-1,4,16,2,-1,2,16,7,-1,7,3,2,-1,17,20,18,-1,18,19,17,-1,21,11,7,-1,7,16,21,-1,8,12,21,-1,12,15,11,-1,11,21,12,-1,13,14,15,-1,15,12,13,-1,8,17,19,-1,19,4,8,-1,4,19,18,-1,18,16,4,-1,16,18,20,-1,20,21,16,-1,21,20,17,-1,17,8,21,-1,22,23,27,-1,26,24,25,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=12, element #178, 160 total numbers */
	this.IndexedFaceSet_12_178_texCoordIndex = new MFInt32(Java.to([4,7,5,-1,5,6,4,-1,2,0,1,-1,1,3,2,-1,14,17,15,-1,15,16,14,-1,8,4,6,-1,6,9,8,-1,38,41,39,-1,39,40,38,-1,18,37,36,-1,36,19,18,-1,10,8,9,-1,9,11,10,-1,42,38,40,-1,40,43,42,-1,20,18,19,-1,19,21,20,-1,22,23,24,-1,24,23,25,-1,25,26,24,-1,27,30,28,-1,28,29,27,-1,31,32,25,-1,25,23,31,-1,33,34,31,-1,34,35,32,-1,32,31,34,-1,20,21,35,-1,35,34,20,-1,8,13,12,-1,12,4,8,-1,22,29,28,-1,28,23,22,-1,23,28,30,-1,30,31,23,-1,31,30,27,-1,27,33,31,-1,14,26,24,-1,14,24,16,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=13, element #178, 84 total numbers made up of 28 3-tuple values */
	this.Coordinate_13_178_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(-0.6237),doubleToFloat(0.0984),doubleToFloat(0.7030),doubleToFloat(-0.5903),doubleToFloat(0.1133),doubleToFloat(-1.1890),doubleToFloat(1.1010),doubleToFloat(0.0200),doubleToFloat(0.7856),doubleToFloat(1.1080),doubleToFloat(0.0215),doubleToFloat(-1.1310),doubleToFloat(1.2890),doubleToFloat(-0.5207),doubleToFloat(1.3030),doubleToFloat(-0.9805),doubleToFloat(-0.3349),doubleToFloat(1.2240),doubleToFloat(-0.9287),doubleToFloat(-0.3062),doubleToFloat(-1.7530),doubleToFloat(1.3910),doubleToFloat(-0.5055),doubleToFloat(-1.7490),doubleToFloat(1.1800),doubleToFloat(-2.2020),doubleToFloat(2.1230),doubleToFloat(-1.2630),doubleToFloat(-2.0150),doubleToFloat(1.8340)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.2110),doubleToFloat(-1.9860),doubleToFloat(-2.1230),doubleToFloat(1.5050),doubleToFloat(-2.2870),doubleToFloat(-1.9810),doubleToFloat(0.9466),doubleToFloat(-3.4660),doubleToFloat(1.4930),doubleToFloat(-0.3369),doubleToFloat(-3.6690),doubleToFloat(1.5430),doubleToFloat(-0.2851),doubleToFloat(-3.6400),doubleToFloat(-1.8260),doubleToFloat(1.1350),doubleToFloat(-3.4770),doubleToFloat(-1.7050),doubleToFloat(1.3850),doubleToFloat(-0.5072),doubleToFloat(-0.1650),doubleToFloat(1.9030),doubleToFloat(-2.2440),doubleToFloat(1.7110),doubleToFloat(2.1870),doubleToFloat(-0.8250),doubleToFloat(0.0512),doubleToFloat(2.1540),doubleToFloat(-0.8839),doubleToFloat(1.6620)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(1.9080),doubleToFloat(-2.2420),doubleToFloat(0.1214),doubleToFloat(1.3940),doubleToFloat(-2.2820),doubleToFloat(-0.1776),doubleToFloat(-0.5903),doubleToFloat(0.1133),doubleToFloat(-1.1890),doubleToFloat(1.1080),doubleToFloat(0.0215),doubleToFloat(-1.1310),doubleToFloat(1.1010),doubleToFloat(0.0200),doubleToFloat(0.7856),doubleToFloat(-0.6237),doubleToFloat(0.0984),doubleToFloat(0.7030),doubleToFloat(-0.5903),doubleToFloat(0.1133),doubleToFloat(-1.1890),doubleToFloat(1.1010),doubleToFloat(0.0200),doubleToFloat(0.7856)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=13, element #179, 88 total numbers made up of 44 2-tuple values */
	this.TextureCoordinate_13_179_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.8107),doubleToFloat(0.9924),doubleToFloat(0.8122),doubleToFloat(0.9033),doubleToFloat(0.7694),doubleToFloat(0.9912),doubleToFloat(0.7683),doubleToFloat(0.9026),doubleToFloat(0.1329),doubleToFloat(0.0347),doubleToFloat(0.0307),doubleToFloat(0.0051),doubleToFloat(0.0134),doubleToFloat(0.0353),doubleToFloat(0.1366),doubleToFloat(0.0058),doubleToFloat(0.1249),doubleToFloat(0.1081),doubleToFloat(0.0147),doubleToFloat(0.1170)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1349),doubleToFloat(0.1856),doubleToFloat(0.0462),doubleToFloat(0.1842),doubleToFloat(0.1559),doubleToFloat(0.0454),doubleToFloat(0.1480),doubleToFloat(0.1033),doubleToFloat(0.3244),doubleToFloat(0.0096),doubleToFloat(0.1758),doubleToFloat(0.0039),doubleToFloat(0.1759),doubleToFloat(0.0110),doubleToFloat(0.3241),doubleToFloat(0.0033),doubleToFloat(0.1730),doubleToFloat(0.1764),doubleToFloat(0.3074),doubleToFloat(0.1757)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1732),doubleToFloat(0.1519),doubleToFloat(0.3074),doubleToFloat(0.1513),doubleToFloat(0.1756),doubleToFloat(0.0320),doubleToFloat(0.2159),doubleToFloat(0.0368),doubleToFloat(0.1791),doubleToFloat(0.0165),doubleToFloat(0.3169),doubleToFloat(0.0458),doubleToFloat(0.3158),doubleToFloat(0.0193),doubleToFloat(0.1720),doubleToFloat(0.0594),doubleToFloat(0.2087),doubleToFloat(0.0476),doubleToFloat(0.1736),doubleToFloat(0.0504)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.2073),doubleToFloat(0.0640),doubleToFloat(0.2362),doubleToFloat(0.0821),doubleToFloat(0.3267),doubleToFloat(0.0796),doubleToFloat(0.1717),doubleToFloat(0.0822),doubleToFloat(0.1726),doubleToFloat(0.1297),doubleToFloat(0.3077),doubleToFloat(0.1289),doubleToFloat(0.3074),doubleToFloat(0.1865),doubleToFloat(0.1742),doubleToFloat(0.1840),doubleToFloat(0.0061),doubleToFloat(0.1086),doubleToFloat(0.1366),doubleToFloat(0.0368)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1241),doubleToFloat(0.1189),doubleToFloat(0.0168),doubleToFloat(0.0309),doubleToFloat(0.0211),doubleToFloat(0.1882),doubleToFloat(0.1400),doubleToFloat(0.1857)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=10, element #190, 1240 total numbers */
	this.IndexedFaceSet_10_190_coordIndex = new MFInt32(Java.to([3,4,7,-1,7,5,3,-1,4,66,68,-1,68,8,4,-1,4,8,7,-1,1,0,9,-1,9,10,1,-1,0,2,11,-1,11,9,0,-1,15,71,73,-1,73,16,15,-1,14,15,16,-1,16,17,14,-1,71,15,8,-1,8,68,71,-1,15,14,7,-1,7,8,15,-1,73,72,69,-1,69,70,73,-1,16,73,70,-1,70,12,16,-1,16,12,13,-1,13,17,16,-1,21,20,22,-1,22,23,21,-1,20,14,17,-1,17,22,20,-1,20,21,6,-1,6,5,20,-1,14,20,5,-1,5,7,14,-1,23,22,18,-1,18,19,23,-1,22,17,13,-1,13,18,22,-1,2,6,11,-1,28,27,30,-1,30,31,28,-1,27,29,32,-1,32,30,27,-1,29,21,23,-1,23,32,29,-1,27,28,10,-1,10,9,27,-1,29,27,9,-1,9,11,29,-1,21,29,11,-1,11,6,21,-1,31,30,24,-1,24,25,31,-1,30,32,26,-1,26,24,30,-1,32,23,19,-1,19,26,32,-1,12,70,74,-1,74,33,12,-1,24,26,36,-1,36,35,24,-1,33,74,75,-1,75,37,33,-1,34,33,37,-1,37,38,34,-1,39,12,33,-1,33,34,39,-1,19,40,26,-1,26,40,41,-1,41,36,26,-1,39,34,41,-1,41,40,39,-1,35,36,43,-1,43,42,35,-1,36,41,44,-1,44,43,36,-1,41,34,38,-1,38,44,41,-1,37,75,76,-1,76,45,37,-1,38,37,45,-1,45,46,38,-1,42,43,48,-1,48,47,42,-1,44,38,46,-1,46,49,44,-1,45,76,77,-1,77,50,45,-1,46,45,50,-1,50,51,46,-1,47,48,53,-1,53,52,47,-1,48,49,54,-1,54,53,48,-1,49,46,51,-1,51,54,49,-1,50,77,78,-1,78,55,50,-1,51,50,55,-1,55,56,51,-1,52,53,58,-1,58,57,52,-1,53,54,59,-1,59,58,53,-1,54,51,56,-1,56,59,54,-1,19,18,60,-1,60,61,19,-1,18,13,62,-1,62,60,18,-1,13,39,63,-1,63,62,13,-1,40,19,61,-1,61,64,40,-1,39,40,64,-1,64,63,39,-1,2,3,5,-1,2,5,6,-1,13,12,39,-1,25,24,35,-1,70,69,74,-1,67,68,66,-1,66,65,67,-1,79,71,68,-1,68,67,79,-1,72,73,71,-1,71,79,72,-1,49,48,43,-1,43,44,49,-1,63,64,60,-1,60,62,63,-1,60,64,61,-1,86,83,82,-1,82,84,86,-1,141,140,83,-1,83,87,141,-1,83,86,87,-1,88,80,1,-1,1,10,88,-1,89,81,80,-1,80,88,89,-1,144,143,93,-1,93,94,144,-1,94,93,92,-1,92,95,94,-1,87,93,143,-1,143,141,87,-1,86,92,93,-1,93,87,86,-1,69,72,144,-1,144,142,69,-1,142,144,94,-1,94,90,142,-1,91,90,94,-1,94,95,91,-1,100,98,99,-1,99,101,100,-1,95,92,98,-1,98,100,95,-1,85,99,98,-1,98,84,85,-1,84,98,92,-1,92,86,84,-1,96,100,101,-1,101,97,96,-1,91,95,100,-1,100,96,91,-1,81,89,85,-1,106,104,28,-1,28,31,106,-1,107,105,104,-1,104,106,107,-1,101,99,105,-1,105,107,101,-1,10,28,104,-1,104,88,10,-1,88,104,105,-1,105,89,88,-1,89,105,99,-1,99,85,89,-1,102,106,31,-1,31,25,102,-1,103,107,106,-1,106,102,103,-1,97,101,107,-1,107,103,97,-1,145,142,90,-1,90,108,145,-1,111,103,102,-1,102,110,111,-1,146,145,108,-1,108,112,146,-1,112,108,109,-1,109,113,112,-1,108,90,114,-1,114,109,108,-1,97,103,115,-1,116,115,103,-1,103,111,116,-1,116,109,114,-1,114,115,116,-1,118,111,110,-1,110,117,118,-1,119,116,111,-1,111,118,119,-1,113,109,116,-1,116,119,113,-1,147,146,112,-1,112,120,147,-1,120,112,113,-1,113,121,120,-1,123,118,117,-1,117,122,123,-1,121,113,119,-1,119,124,121,-1,148,147,120,-1,120,125,148,-1,125,120,121,-1,121,126,125,-1,128,123,122,-1,122,127,128,-1,129,124,123,-1,123,128,129,-1,126,121,124,-1,124,129,126,-1,149,148,125,-1,125,130,149,-1,130,125,126,-1,126,131,130,-1,133,128,127,-1,127,132,133,-1,134,129,128,-1,128,133,134,-1,131,126,129,-1,129,134,131,-1,135,96,97,-1,97,136,135,-1,137,91,96,-1,96,135,137,-1,138,114,91,-1,91,137,138,-1,136,97,115,-1,115,139,136,-1,139,115,114,-1,114,138,139,-1,81,84,82,-1,81,85,84,-1,91,114,90,-1,25,110,102,-1,142,145,69,-1,140,141,67,-1,67,65,140,-1,141,143,79,-1,79,67,141,-1,143,144,72,-1,72,79,143,-1,118,123,124,-1,124,119,118,-1,135,139,138,-1,138,137,135,-1,135,136,139,-1,25,35,110,-1,117,110,35,-1,35,42,117,-1,47,122,117,-1,117,42,47,-1,127,122,47,-1,47,52,127,-1,132,127,52,-1,52,57,132,-1,69,145,74,-1,75,74,145,-1,145,146,75,-1,76,75,146,-1,146,147,76,-1,77,76,147,-1,147,148,77,-1,78,77,148,-1,148,149,78,-1,57,78,149,-1,149,132,57,-1,58,55,78,-1,78,57,58,-1,59,56,55,-1,55,58,59,-1,132,149,130,-1,130,133,132,-1,133,130,131,-1,131,134,133,-1,151,150,155,-1,155,156,151,-1,150,152,157,-1,157,155,150,-1,152,153,158,-1,158,157,152,-1,153,154,159,-1,159,158,153,-1,160,161,162,-1,162,163,160,-1,154,160,163,-1,163,159,154,-1,168,164,151,-1,151,156,168,-1,169,165,164,-1,164,168,169,-1,170,166,165,-1,165,169,170,-1,171,167,166,-1,166,170,171,-1,162,161,172,-1,172,173,162,-1,173,172,167,-1,167,171,173,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=10, element #190, 1240 total numbers */
	this.IndexedFaceSet_10_190_texCoordIndex = new MFInt32(Java.to([2,3,0,-1,0,1,2,-1,3,6,4,-1,4,5,3,-1,3,5,0,-1,20,21,18,-1,18,19,20,-1,21,23,22,-1,22,18,21,-1,26,27,24,-1,24,25,26,-1,29,26,25,-1,25,28,29,-1,27,26,30,-1,30,31,27,-1,26,29,32,-1,32,30,26,-1,24,35,33,-1,33,34,24,-1,25,24,34,-1,34,36,25,-1,25,36,37,-1,37,28,25,-1,40,41,38,-1,38,39,40,-1,41,29,28,-1,28,38,41,-1,41,40,42,-1,42,43,41,-1,29,41,43,-1,43,32,29,-1,39,38,44,-1,44,45,39,-1,38,28,37,-1,37,44,38,-1,23,42,22,-1,48,162,161,-1,161,47,48,-1,49,51,50,-1,50,46,49,-1,51,40,39,-1,39,50,51,-1,163,48,164,-1,164,181,163,-1,51,49,18,-1,18,22,51,-1,40,51,22,-1,22,42,40,-1,47,166,165,-1,165,53,47,-1,46,50,54,-1,54,52,46,-1,50,39,45,-1,45,54,50,-1,36,34,55,-1,55,56,36,-1,52,54,57,-1,57,58,52,-1,56,55,59,-1,59,60,56,-1,62,56,60,-1,60,61,62,-1,63,36,56,-1,56,62,63,-1,45,64,54,-1,54,64,65,-1,65,57,54,-1,63,62,65,-1,65,64,63,-1,58,57,66,-1,66,67,58,-1,57,65,68,-1,68,66,57,-1,65,62,61,-1,61,68,65,-1,60,59,69,-1,69,70,60,-1,61,60,70,-1,70,71,61,-1,67,66,72,-1,72,73,67,-1,68,61,71,-1,71,74,68,-1,70,69,75,-1,75,76,70,-1,71,70,76,-1,76,77,71,-1,73,72,78,-1,78,79,73,-1,72,74,80,-1,80,78,72,-1,74,71,77,-1,77,80,74,-1,76,75,81,-1,81,82,76,-1,77,76,82,-1,82,83,77,-1,79,78,84,-1,84,85,79,-1,78,80,86,-1,86,84,78,-1,80,77,83,-1,83,86,80,-1,45,44,87,-1,87,88,45,-1,44,37,89,-1,89,87,44,-1,37,63,90,-1,90,89,37,-1,64,45,88,-1,88,91,64,-1,63,64,91,-1,91,90,63,-1,7,2,1,-1,23,43,42,-1,37,36,63,-1,53,167,168,-1,34,33,55,-1,9,4,6,-1,6,8,9,-1,93,27,31,-1,31,92,93,-1,35,24,27,-1,27,93,35,-1,74,72,66,-1,66,68,74,-1,90,91,87,-1,87,89,90,-1,87,91,88,-1,10,13,11,-1,11,12,10,-1,14,16,13,-1,13,15,14,-1,13,10,15,-1,94,95,169,-1,169,170,94,-1,96,97,95,-1,95,94,96,-1,98,101,99,-1,99,100,98,-1,100,99,102,-1,102,103,100,-1,104,99,101,-1,101,105,104,-1,106,102,99,-1,99,104,106,-1,33,35,98,-1,98,107,33,-1,107,98,100,-1,100,108,107,-1,109,108,100,-1,100,103,109,-1,110,113,111,-1,111,112,110,-1,103,102,113,-1,113,110,103,-1,114,111,113,-1,113,115,114,-1,115,113,102,-1,102,106,115,-1,116,110,112,-1,112,117,116,-1,109,103,110,-1,110,116,109,-1,97,96,114,-1,118,119,48,-1,48,47,118,-1,120,121,119,-1,119,118,120,-1,112,111,121,-1,121,120,112,-1,171,48,119,-1,119,94,171,-1,94,119,121,-1,121,96,94,-1,96,121,111,-1,111,114,96,-1,122,118,47,-1,47,53,122,-1,123,120,118,-1,118,122,123,-1,117,112,120,-1,120,123,117,-1,124,107,108,-1,108,125,124,-1,126,123,122,-1,122,127,126,-1,128,124,125,-1,125,129,128,-1,129,125,130,-1,130,131,129,-1,125,108,132,-1,132,130,125,-1,117,123,133,-1,134,133,123,-1,123,126,134,-1,134,130,132,-1,132,133,134,-1,135,126,127,-1,127,136,135,-1,137,134,126,-1,126,135,137,-1,131,130,134,-1,134,137,131,-1,138,128,129,-1,129,139,138,-1,139,129,131,-1,131,140,139,-1,141,135,136,-1,136,142,141,-1,140,131,137,-1,137,143,140,-1,144,138,139,-1,139,145,144,-1,145,139,140,-1,140,146,145,-1,147,141,142,-1,142,148,147,-1,149,143,141,-1,141,147,149,-1,146,140,143,-1,143,149,146,-1,150,144,145,-1,145,151,150,-1,151,145,146,-1,146,152,151,-1,153,147,148,-1,148,154,153,-1,155,149,147,-1,147,153,155,-1,152,146,149,-1,149,155,152,-1,156,116,117,-1,117,157,156,-1,158,109,116,-1,116,156,158,-1,159,132,109,-1,109,158,159,-1,157,117,133,-1,133,160,157,-1,160,133,132,-1,132,159,160,-1,17,12,11,-1,97,114,115,-1,109,132,108,-1,53,127,122,-1,107,124,33,-1,16,14,9,-1,9,8,16,-1,105,101,93,-1,93,92,105,-1,101,98,35,-1,35,93,101,-1,135,141,143,-1,143,137,135,-1,156,160,159,-1,159,158,156,-1,156,157,160,-1,53,172,127,-1,136,127,173,-1,173,174,136,-1,176,142,136,-1,136,175,176,-1,148,142,177,-1,177,178,148,-1,154,148,179,-1,179,180,154,-1,33,124,55,-1,59,55,124,-1,124,128,59,-1,69,59,128,-1,128,138,69,-1,75,69,138,-1,138,144,75,-1,81,75,144,-1,144,150,81,-1,85,81,150,-1,150,182,85,-1,84,82,81,-1,81,85,84,-1,86,83,82,-1,82,84,86,-1,154,150,151,-1,151,153,154,-1,153,151,152,-1,152,155,153,-1,184,183,188,-1,188,189,184,-1,183,185,190,-1,190,188,183,-1,185,186,191,-1,191,190,185,-1,186,187,192,-1,192,191,186,-1,193,194,195,-1,195,196,193,-1,187,193,196,-1,196,192,187,-1,201,197,184,-1,184,189,201,-1,202,198,197,-1,197,201,202,-1,203,199,198,-1,198,202,203,-1,204,200,199,-1,199,203,204,-1,195,194,205,-1,205,206,195,-1,206,205,200,-1,200,204,206,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=11, element #190, 522 total numbers made up of 174 3-tuple values */
	this.Coordinate_11_190_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(0.6107),doubleToFloat(12.5600),doubleToFloat(-1.1130),doubleToFloat(0.0000),doubleToFloat(12.6100),doubleToFloat(-1.1940),doubleToFloat(1.2950),doubleToFloat(12.7500),doubleToFloat(-0.8021),doubleToFloat(1.7770),doubleToFloat(12.7300),doubleToFloat(0.2480),doubleToFloat(1.3870),doubleToFloat(12.4700),doubleToFloat(0.9786),doubleToFloat(2.5690),doubleToFloat(12.3400),doubleToFloat(0.2936),doubleToFloat(2.2910),doubleToFloat(13.1300),doubleToFloat(-1.2400),doubleToFloat(2.8090),doubleToFloat(11.5700),doubleToFloat(1.3600),doubleToFloat(1.9740),doubleToFloat(11.3800),doubleToFloat(2.8480),doubleToFloat(0.8488),doubleToFloat(13.1500),doubleToFloat(-2.7790)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.0000),doubleToFloat(13.1300),doubleToFloat(-2.9240),doubleToFloat(1.7940),doubleToFloat(13.1700),doubleToFloat(-2.4810),doubleToFloat(2.9230),doubleToFloat(10.4500),doubleToFloat(2.6180),doubleToFloat(4.4830),doubleToFloat(11.1600),doubleToFloat(1.7730),doubleToFloat(2.6280),doubleToFloat(12.1400),doubleToFloat(1.9220),doubleToFloat(1.9790),doubleToFloat(11.3800),doubleToFloat(3.3680),doubleToFloat(2.7600),doubleToFloat(10.7300),doubleToFloat(3.4380),doubleToFloat(3.8960),doubleToFloat(11.8700),doubleToFloat(1.8560),doubleToFloat(4.9380),doubleToFloat(11.6900),doubleToFloat(0.1642),doubleToFloat(4.8230),doubleToFloat(11.1000),doubleToFloat(-1.2800)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(3.0310),doubleToFloat(13.0700),doubleToFloat(0.3237),doubleToFloat(3.4850),doubleToFloat(12.3100),doubleToFloat(-1.9630),doubleToFloat(4.4720),doubleToFloat(12.6100),doubleToFloat(0.3237),doubleToFloat(4.1030),doubleToFloat(11.4800),doubleToFloat(-1.5690),doubleToFloat(1.5970),doubleToFloat(8.2590),doubleToFloat(-2.1420),doubleToFloat(0.0000),doubleToFloat(7.9910),doubleToFloat(-2.2600),doubleToFloat(3.7380),doubleToFloat(9.1050),doubleToFloat(-1.8010),doubleToFloat(0.9095),doubleToFloat(10.6400),doubleToFloat(-3.9030),doubleToFloat(0.0000),doubleToFloat(10.6500),doubleToFloat(-4.0210),doubleToFloat(2.1060),doubleToFloat(10.9800),doubleToFloat(-3.4510)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(1.4790),doubleToFloat(7.6900),doubleToFloat(-2.7740),doubleToFloat(0.0000),doubleToFloat(7.4060),doubleToFloat(-2.8790),doubleToFloat(3.6320),doubleToFloat(9.0270),doubleToFloat(-2.6730),doubleToFloat(3.7660),doubleToFloat(6.7560),doubleToFloat(3.6900),doubleToFloat(5.6010),doubleToFloat(7.3140),doubleToFloat(1.3600),doubleToFloat(1.8860),doubleToFloat(7.1530),doubleToFloat(-2.0820),doubleToFloat(3.7900),doubleToFloat(7.2440),doubleToFloat(-1.6290),doubleToFloat(3.2570),doubleToFloat(4.5100),doubleToFloat(2.4400),doubleToFloat(4.4790),doubleToFloat(4.5430),doubleToFloat(1.3270),doubleToFloat(5.3740),doubleToFloat(8.6360),doubleToFloat(1.4720)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(5.2040),doubleToFloat(8.6270),doubleToFloat(-0.2911),doubleToFloat(4.8770),doubleToFloat(7.2730),doubleToFloat(-0.6872),doubleToFloat(1.2510),doubleToFloat(4.4130),doubleToFloat(-1.9560),doubleToFloat(3.1560),doubleToFloat(4.4610),doubleToFloat(-1.2640),doubleToFloat(4.2250),doubleToFloat(4.5050),doubleToFloat(-0.2194),doubleToFloat(3.2450),doubleToFloat(2.7540),doubleToFloat(2.4890),doubleToFloat(4.4760),doubleToFloat(2.7880),doubleToFloat(1.3460),doubleToFloat(1.1300),doubleToFloat(2.4990),doubleToFloat(-2.0850),doubleToFloat(3.1610),doubleToFloat(2.6740),doubleToFloat(-1.2670),doubleToFloat(4.2240),doubleToFloat(2.7390),doubleToFloat(-0.2643)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(3.6830),doubleToFloat(0.6999),doubleToFloat(3.4820),doubleToFloat(5.0770),doubleToFloat(0.7315),doubleToFloat(1.7580),doubleToFloat(1.3400),doubleToFloat(0.5620),doubleToFloat(-3.2420),doubleToFloat(3.4820),doubleToFloat(0.5706),doubleToFloat(-2.2360),doubleToFloat(4.6800),doubleToFloat(0.6632),doubleToFloat(-0.6521),doubleToFloat(3.3400),doubleToFloat(-0.2471),doubleToFloat(2.8280),doubleToFloat(4.5540),doubleToFloat(-0.2191),doubleToFloat(1.4850),doubleToFloat(1.4050),doubleToFloat(-0.3523),doubleToFloat(-2.3590),doubleToFloat(3.1740),doubleToFloat(-0.3325),doubleToFloat(-1.6280),doubleToFloat(4.2680),doubleToFloat(-0.2911),doubleToFloat(-0.3915)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(6.5220),doubleToFloat(11.4500),doubleToFloat(0.1642),doubleToFloat(6.1520),doubleToFloat(10.7300),doubleToFloat(-1.2800),doubleToFloat(6.1690),doubleToFloat(10.7800),doubleToFloat(1.6740),doubleToFloat(5.5520),doubleToFloat(8.7710),doubleToFloat(1.4720),doubleToFloat(5.5460),doubleToFloat(8.7640),doubleToFloat(-0.2911),doubleToFloat(0.0000),doubleToFloat(12.2300),doubleToFloat(1.5250),doubleToFloat(0.6880),doubleToFloat(12.2400),doubleToFloat(1.4180),doubleToFloat(0.0000),doubleToFloat(10.3000),doubleToFloat(3.4390),doubleToFloat(1.2100),doubleToFloat(10.7700),doubleToFloat(3.2330),doubleToFloat(0.0000),doubleToFloat(9.3300),doubleToFloat(3.3890)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(1.5100),doubleToFloat(9.9910),doubleToFloat(3.2330),doubleToFloat(1.2160),doubleToFloat(10.7700),doubleToFloat(3.6470),doubleToFloat(0.0000),doubleToFloat(9.6770),doubleToFloat(3.8440),doubleToFloat(1.4040),doubleToFloat(10.2700),doubleToFloat(3.8240),doubleToFloat(1.3920),doubleToFloat(7.2900),doubleToFloat(3.5970),doubleToFloat(1.1390),doubleToFloat(4.4830),doubleToFloat(2.8450),doubleToFloat(1.1290),doubleToFloat(2.5720),doubleToFloat(2.9410),doubleToFloat(1.4410),doubleToFloat(0.6730),doubleToFloat(4.0210),doubleToFloat(1.4060),doubleToFloat(-0.2812),doubleToFloat(3.2130),doubleToFloat(0.0000),doubleToFloat(10.3500),doubleToFloat(3.5790)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.6107),doubleToFloat(12.5600),doubleToFloat(-1.1130),doubleToFloat(-1.2950),doubleToFloat(12.7500),doubleToFloat(-0.8021),doubleToFloat(-1.7770),doubleToFloat(12.7300),doubleToFloat(0.2480),doubleToFloat(-1.3870),doubleToFloat(12.4700),doubleToFloat(0.9786),doubleToFloat(-2.5690),doubleToFloat(12.3400),doubleToFloat(0.2936),doubleToFloat(-2.2910),doubleToFloat(13.1300),doubleToFloat(-1.2400),doubleToFloat(-2.8090),doubleToFloat(11.5700),doubleToFloat(1.3600),doubleToFloat(-1.9740),doubleToFloat(11.3800),doubleToFloat(2.8480),doubleToFloat(-0.8488),doubleToFloat(13.1500),doubleToFloat(-2.7790),doubleToFloat(-1.7940),doubleToFloat(13.1700),doubleToFloat(-2.4810)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-2.9230),doubleToFloat(10.4500),doubleToFloat(2.6180),doubleToFloat(-4.4830),doubleToFloat(11.1600),doubleToFloat(1.7730),doubleToFloat(-2.6280),doubleToFloat(12.1400),doubleToFloat(1.9220),doubleToFloat(-1.9790),doubleToFloat(11.3800),doubleToFloat(3.3680),doubleToFloat(-2.7600),doubleToFloat(10.7300),doubleToFloat(3.4380),doubleToFloat(-3.8960),doubleToFloat(11.8700),doubleToFloat(1.8560),doubleToFloat(-4.9380),doubleToFloat(11.6900),doubleToFloat(0.1642),doubleToFloat(-4.8230),doubleToFloat(11.1000),doubleToFloat(-1.2800),doubleToFloat(-3.0310),doubleToFloat(13.0700),doubleToFloat(0.3237),doubleToFloat(-3.4850),doubleToFloat(12.3100),doubleToFloat(-1.9630)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-4.4720),doubleToFloat(12.6100),doubleToFloat(0.3237),doubleToFloat(-4.1030),doubleToFloat(11.4800),doubleToFloat(-1.5690),doubleToFloat(-1.5970),doubleToFloat(8.2590),doubleToFloat(-2.1420),doubleToFloat(-3.7380),doubleToFloat(9.1050),doubleToFloat(-1.8010),doubleToFloat(-0.9095),doubleToFloat(10.6400),doubleToFloat(-3.9030),doubleToFloat(-2.1060),doubleToFloat(10.9800),doubleToFloat(-3.4510),doubleToFloat(-1.4790),doubleToFloat(7.6900),doubleToFloat(-2.7740),doubleToFloat(-3.6320),doubleToFloat(9.0270),doubleToFloat(-2.6730),doubleToFloat(-3.7660),doubleToFloat(6.7560),doubleToFloat(3.6900),doubleToFloat(-5.6010),doubleToFloat(7.3140),doubleToFloat(1.3600)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.8860),doubleToFloat(7.1530),doubleToFloat(-2.0820),doubleToFloat(-3.7900),doubleToFloat(7.2440),doubleToFloat(-1.6290),doubleToFloat(-3.2570),doubleToFloat(4.5100),doubleToFloat(2.4400),doubleToFloat(-4.4790),doubleToFloat(4.5430),doubleToFloat(1.3270),doubleToFloat(-5.3740),doubleToFloat(8.6360),doubleToFloat(1.4720),doubleToFloat(-5.2040),doubleToFloat(8.6270),doubleToFloat(-0.2911),doubleToFloat(-4.8770),doubleToFloat(7.2730),doubleToFloat(-0.6872),doubleToFloat(-1.2510),doubleToFloat(4.4130),doubleToFloat(-1.9560),doubleToFloat(-3.1560),doubleToFloat(4.4610),doubleToFloat(-1.2640),doubleToFloat(-4.2250),doubleToFloat(4.5050),doubleToFloat(-0.2194)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-3.2450),doubleToFloat(2.7540),doubleToFloat(2.4890),doubleToFloat(-4.4760),doubleToFloat(2.7880),doubleToFloat(1.3460),doubleToFloat(-1.1300),doubleToFloat(2.4990),doubleToFloat(-2.0850),doubleToFloat(-3.1610),doubleToFloat(2.6740),doubleToFloat(-1.2670),doubleToFloat(-4.2240),doubleToFloat(2.7390),doubleToFloat(-0.2643),doubleToFloat(-3.6830),doubleToFloat(0.6999),doubleToFloat(3.4820),doubleToFloat(-5.0770),doubleToFloat(0.7315),doubleToFloat(1.7580),doubleToFloat(-1.3400),doubleToFloat(0.5620),doubleToFloat(-3.2420),doubleToFloat(-3.4820),doubleToFloat(0.5706),doubleToFloat(-2.2360),doubleToFloat(-4.6800),doubleToFloat(0.6632),doubleToFloat(-0.6521)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-3.3400),doubleToFloat(-0.2471),doubleToFloat(2.8280),doubleToFloat(-4.5540),doubleToFloat(-0.2191),doubleToFloat(1.4850),doubleToFloat(-1.4050),doubleToFloat(-0.3523),doubleToFloat(-2.3590),doubleToFloat(-3.1740),doubleToFloat(-0.3325),doubleToFloat(-1.6280),doubleToFloat(-4.2680),doubleToFloat(-0.2911),doubleToFloat(-0.3915),doubleToFloat(-6.5220),doubleToFloat(11.4500),doubleToFloat(0.1642),doubleToFloat(-6.1520),doubleToFloat(10.7300),doubleToFloat(-1.2800),doubleToFloat(-6.1690),doubleToFloat(10.7800),doubleToFloat(1.6740),doubleToFloat(-5.5520),doubleToFloat(8.7710),doubleToFloat(1.4720),doubleToFloat(-5.5460),doubleToFloat(8.7640),doubleToFloat(-0.2911)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.6880),doubleToFloat(12.2400),doubleToFloat(1.4180),doubleToFloat(-1.2100),doubleToFloat(10.7700),doubleToFloat(3.2330),doubleToFloat(-1.5100),doubleToFloat(9.9910),doubleToFloat(3.2330),doubleToFloat(-1.2160),doubleToFloat(10.7700),doubleToFloat(3.6470),doubleToFloat(-1.4040),doubleToFloat(10.2700),doubleToFloat(3.8240),doubleToFloat(-1.3920),doubleToFloat(7.2900),doubleToFloat(3.5970),doubleToFloat(-1.1390),doubleToFloat(4.4830),doubleToFloat(2.8450),doubleToFloat(-1.1290),doubleToFloat(2.5720),doubleToFloat(2.9410),doubleToFloat(-1.4410),doubleToFloat(0.6730),doubleToFloat(4.0210),doubleToFloat(-1.4060),doubleToFloat(-0.2812),doubleToFloat(3.2130)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.6107),doubleToFloat(15.6800),doubleToFloat(-1.1130),doubleToFloat(0.0000),doubleToFloat(15.6800),doubleToFloat(-1.1940),doubleToFloat(1.2950),doubleToFloat(15.6800),doubleToFloat(-0.8021),doubleToFloat(1.7770),doubleToFloat(15.6800),doubleToFloat(0.2481),doubleToFloat(1.3870),doubleToFloat(15.6800),doubleToFloat(0.9786),doubleToFloat(0.6107),doubleToFloat(11.9400),doubleToFloat(-1.1130),doubleToFloat(0.0000),doubleToFloat(12.0100),doubleToFloat(-1.1940),doubleToFloat(1.2950),doubleToFloat(12.2400),doubleToFloat(-0.8021),doubleToFloat(1.7770),doubleToFloat(12.2100),doubleToFloat(0.2480),doubleToFloat(1.3870),doubleToFloat(11.7900),doubleToFloat(0.9786)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.6881),doubleToFloat(15.8300),doubleToFloat(1.4180),doubleToFloat(0.0000),doubleToFloat(15.1900),doubleToFloat(1.5250),doubleToFloat(0.0000),doubleToFloat(11.4200),doubleToFloat(1.5250),doubleToFloat(0.6881),doubleToFloat(11.4300),doubleToFloat(1.4180),doubleToFloat(-0.6107),doubleToFloat(15.6800),doubleToFloat(-1.1130),doubleToFloat(-1.2950),doubleToFloat(15.6800),doubleToFloat(-0.8021),doubleToFloat(-1.7770),doubleToFloat(15.6800),doubleToFloat(0.2481),doubleToFloat(-1.3870),doubleToFloat(15.6800),doubleToFloat(0.9786),doubleToFloat(-0.6107),doubleToFloat(11.9400),doubleToFloat(-1.1130),doubleToFloat(-1.2950),doubleToFloat(12.2400),doubleToFloat(-0.8021)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.7770),doubleToFloat(12.2100),doubleToFloat(0.2481),doubleToFloat(-1.3870),doubleToFloat(11.7900),doubleToFloat(0.9786),doubleToFloat(-0.6881),doubleToFloat(15.8300),doubleToFloat(1.4180),doubleToFloat(-0.6880),doubleToFloat(11.4300),doubleToFloat(1.4180)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=11, element #191, 414 total numbers made up of 207 2-tuple values */
	this.TextureCoordinate_11_191_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.4134),doubleToFloat(0.6454),doubleToFloat(0.4115),doubleToFloat(0.6346),doubleToFloat(0.4055),doubleToFloat(0.6342),doubleToFloat(0.4025),doubleToFloat(0.6415),doubleToFloat(0.4012),doubleToFloat(0.6643),doubleToFloat(0.4070),doubleToFloat(0.6604),doubleToFloat(0.3972),doubleToFloat(0.6460),doubleToFloat(0.4018),doubleToFloat(0.6236),doubleToFloat(0.3919),doubleToFloat(0.6471),doubleToFloat(0.3919),doubleToFloat(0.6664)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.3705),doubleToFloat(0.6454),doubleToFloat(0.3784),doubleToFloat(0.6342),doubleToFloat(0.3723),doubleToFloat(0.6346),doubleToFloat(0.3814),doubleToFloat(0.6415),doubleToFloat(0.3827),doubleToFloat(0.6643),doubleToFloat(0.3769),doubleToFloat(0.6604),doubleToFloat(0.3867),doubleToFloat(0.6460),doubleToFloat(0.3821),doubleToFloat(0.6236),doubleToFloat(0.2661),doubleToFloat(0.5914),doubleToFloat(0.3505),doubleToFloat(0.5919)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.3554),doubleToFloat(0.5911),doubleToFloat(0.2505),doubleToFloat(0.5754),doubleToFloat(0.2410),doubleToFloat(0.5920),doubleToFloat(0.2112),doubleToFloat(0.5805),doubleToFloat(0.0763),doubleToFloat(0.4945),doubleToFloat(0.1025),doubleToFloat(0.5076),doubleToFloat(0.0865),doubleToFloat(0.5614),doubleToFloat(0.0652),doubleToFloat(0.5465),doubleToFloat(0.1412),doubleToFloat(0.5207),doubleToFloat(0.1108),doubleToFloat(0.5655)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.0786),doubleToFloat(0.5849),doubleToFloat(0.0516),doubleToFloat(0.5759),doubleToFloat(0.1073),doubleToFloat(0.5839),doubleToFloat(0.0639),doubleToFloat(0.4488),doubleToFloat(0.0877),doubleToFloat(0.4617),doubleToFloat(0.0525),doubleToFloat(0.4715),doubleToFloat(0.1185),doubleToFloat(0.4741),doubleToFloat(0.1474),doubleToFloat(0.4856),doubleToFloat(0.1724),doubleToFloat(0.5255),doubleToFloat(0.2089),doubleToFloat(0.5196)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.2133),doubleToFloat(0.5560),doubleToFloat(0.1645),doubleToFloat(0.5709),doubleToFloat(0.2067),doubleToFloat(0.5908),doubleToFloat(0.1632),doubleToFloat(0.5887),doubleToFloat(0.1708),doubleToFloat(0.4854),doubleToFloat(0.1963),doubleToFloat(0.4863),doubleToFloat(0.2708),doubleToFloat(0.4736),doubleToFloat(0.3470),doubleToFloat(0.4316),doubleToFloat(0.3616),doubleToFloat(0.5328),doubleToFloat(0.2733),doubleToFloat(0.5359)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.2380),doubleToFloat(0.4930),doubleToFloat(0.2490),doubleToFloat(0.5451),doubleToFloat(0.2638),doubleToFloat(0.4568),doubleToFloat(0.3214),doubleToFloat(0.4203),doubleToFloat(0.2252),doubleToFloat(0.4828),doubleToFloat(0.0420),doubleToFloat(0.4060),doubleToFloat(0.0909),doubleToFloat(0.3980),doubleToFloat(0.2183),doubleToFloat(0.3850),doubleToFloat(0.3504),doubleToFloat(0.3844),doubleToFloat(0.0206),doubleToFloat(0.3452)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.0903),doubleToFloat(0.3446),doubleToFloat(0.1491),doubleToFloat(0.3449),doubleToFloat(0.1525),doubleToFloat(0.3869),doubleToFloat(0.1538),doubleToFloat(0.4251),doubleToFloat(0.1784),doubleToFloat(0.4249),doubleToFloat(0.1911),doubleToFloat(0.3858),doubleToFloat(0.2175),doubleToFloat(0.3427),doubleToFloat(0.3608),doubleToFloat(0.3469),doubleToFloat(0.1838),doubleToFloat(0.3438),doubleToFloat(0.0177),doubleToFloat(0.3051)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.0982),doubleToFloat(0.3020),doubleToFloat(0.1487),doubleToFloat(0.2975),doubleToFloat(0.2175),doubleToFloat(0.2944),doubleToFloat(0.3621),doubleToFloat(0.2922),doubleToFloat(0.1849),doubleToFloat(0.2961),doubleToFloat(0.0190),doubleToFloat(0.2349),doubleToFloat(0.1011),doubleToFloat(0.2410),doubleToFloat(0.1445),doubleToFloat(0.2419),doubleToFloat(0.2369),doubleToFloat(0.2375),doubleToFloat(0.3561),doubleToFloat(0.2404)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1927),doubleToFloat(0.2400),doubleToFloat(0.0206),doubleToFloat(0.2122),doubleToFloat(0.1067),doubleToFloat(0.2154),doubleToFloat(0.1463),doubleToFloat(0.2162),doubleToFloat(0.2270),doubleToFloat(0.2131),doubleToFloat(0.3536),doubleToFloat(0.2151),doubleToFloat(0.1879),doubleToFloat(0.2143),doubleToFloat(0.1715),doubleToFloat(0.4655),doubleToFloat(0.1797),doubleToFloat(0.4646),doubleToFloat(0.1569),doubleToFloat(0.4642)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1544),doubleToFloat(0.4288),doubleToFloat(0.1782),doubleToFloat(0.4286),doubleToFloat(0.0346),doubleToFloat(0.5664),doubleToFloat(0.0399),doubleToFloat(0.5407),doubleToFloat(0.2661),doubleToFloat(0.5914),doubleToFloat(0.2505),doubleToFloat(0.5754),doubleToFloat(0.2410),doubleToFloat(0.5920),doubleToFloat(0.2112),doubleToFloat(0.5805),doubleToFloat(0.0763),doubleToFloat(0.4945),doubleToFloat(0.0865),doubleToFloat(0.5614)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1025),doubleToFloat(0.5076),doubleToFloat(0.0652),doubleToFloat(0.5465),doubleToFloat(0.1108),doubleToFloat(0.5655),doubleToFloat(0.1412),doubleToFloat(0.5207),doubleToFloat(0.0786),doubleToFloat(0.5849),doubleToFloat(0.0516),doubleToFloat(0.5759),doubleToFloat(0.1073),doubleToFloat(0.5839),doubleToFloat(0.0877),doubleToFloat(0.4617),doubleToFloat(0.1185),doubleToFloat(0.4741),doubleToFloat(0.1474),doubleToFloat(0.4857)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1724),doubleToFloat(0.5255),doubleToFloat(0.2133),doubleToFloat(0.5560),doubleToFloat(0.2089),doubleToFloat(0.5196),doubleToFloat(0.1645),doubleToFloat(0.5709),doubleToFloat(0.2067),doubleToFloat(0.5908),doubleToFloat(0.1632),doubleToFloat(0.5887),doubleToFloat(0.1708),doubleToFloat(0.4854),doubleToFloat(0.1963),doubleToFloat(0.4863),doubleToFloat(0.2708),doubleToFloat(0.4736),doubleToFloat(0.2733),doubleToFloat(0.5359)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.2380),doubleToFloat(0.4930),doubleToFloat(0.2490),doubleToFloat(0.5451),doubleToFloat(0.2638),doubleToFloat(0.4568),doubleToFloat(0.2252),doubleToFloat(0.4828),doubleToFloat(0.0420),doubleToFloat(0.4060),doubleToFloat(0.0909),doubleToFloat(0.3980),doubleToFloat(0.2183),doubleToFloat(0.3850),doubleToFloat(0.3504),doubleToFloat(0.3844),doubleToFloat(0.0206),doubleToFloat(0.3452),doubleToFloat(0.0903),doubleToFloat(0.3446)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1525),doubleToFloat(0.3869),doubleToFloat(0.1491),doubleToFloat(0.3449),doubleToFloat(0.1538),doubleToFloat(0.4251),doubleToFloat(0.1784),doubleToFloat(0.4249),doubleToFloat(0.1911),doubleToFloat(0.3858),doubleToFloat(0.2175),doubleToFloat(0.3427),doubleToFloat(0.3608),doubleToFloat(0.3469),doubleToFloat(0.1838),doubleToFloat(0.3438),doubleToFloat(0.0177),doubleToFloat(0.3051),doubleToFloat(0.0982),doubleToFloat(0.3020)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1487),doubleToFloat(0.2975),doubleToFloat(0.2175),doubleToFloat(0.2944),doubleToFloat(0.3621),doubleToFloat(0.2922),doubleToFloat(0.1849),doubleToFloat(0.2961),doubleToFloat(0.0190),doubleToFloat(0.2349),doubleToFloat(0.1011),doubleToFloat(0.2410),doubleToFloat(0.1445),doubleToFloat(0.2419),doubleToFloat(0.2369),doubleToFloat(0.2375),doubleToFloat(0.3561),doubleToFloat(0.2404),doubleToFloat(0.1927),doubleToFloat(0.2400)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.0206),doubleToFloat(0.2122),doubleToFloat(0.1067),doubleToFloat(0.2154),doubleToFloat(0.1463),doubleToFloat(0.2162),doubleToFloat(0.2270),doubleToFloat(0.2131),doubleToFloat(0.3536),doubleToFloat(0.2151),doubleToFloat(0.1879),doubleToFloat(0.2143),doubleToFloat(0.1715),doubleToFloat(0.4655),doubleToFloat(0.1797),doubleToFloat(0.4646),doubleToFloat(0.1569),doubleToFloat(0.4642),doubleToFloat(0.1544),doubleToFloat(0.4288)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1782),doubleToFloat(0.4286),doubleToFloat(0.3477),doubleToFloat(0.4310),doubleToFloat(0.3623),doubleToFloat(0.5333),doubleToFloat(0.3623),doubleToFloat(0.5333),doubleToFloat(0.3505),doubleToFloat(0.5919),doubleToFloat(0.3223),doubleToFloat(0.4192),doubleToFloat(0.3477),doubleToFloat(0.4310),doubleToFloat(0.3223),doubleToFloat(0.4192),doubleToFloat(0.3518),doubleToFloat(0.3851),doubleToFloat(0.3554),doubleToFloat(0.5911)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.3505),doubleToFloat(0.5919),doubleToFloat(0.3505),doubleToFloat(0.5919),doubleToFloat(0.3518),doubleToFloat(0.3851),doubleToFloat(0.3518),doubleToFloat(0.3851),doubleToFloat(0.3629),doubleToFloat(0.3439),doubleToFloat(0.3629),doubleToFloat(0.3439),doubleToFloat(0.3633),doubleToFloat(0.2922),doubleToFloat(0.3633),doubleToFloat(0.2922),doubleToFloat(0.3553),doubleToFloat(0.2398),doubleToFloat(0.3553),doubleToFloat(0.2398)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.3555),doubleToFloat(0.2151),doubleToFloat(0.3511),doubleToFloat(0.5932),doubleToFloat(0.3536),doubleToFloat(0.2151),doubleToFloat(0.3995),doubleToFloat(0.6721),doubleToFloat(0.3906),doubleToFloat(0.6721),doubleToFloat(0.4094),doubleToFloat(0.6721),doubleToFloat(0.4164),doubleToFloat(0.6721),doubleToFloat(0.4107),doubleToFloat(0.6721),doubleToFloat(0.3995),doubleToFloat(0.6285),doubleToFloat(0.3906),doubleToFloat(0.6293)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4094),doubleToFloat(0.6320),doubleToFloat(0.4164),doubleToFloat(0.6316),doubleToFloat(0.4107),doubleToFloat(0.6267),doubleToFloat(0.4006),doubleToFloat(0.6738),doubleToFloat(0.3906),doubleToFloat(0.6664),doubleToFloat(0.3906),doubleToFloat(0.6224),doubleToFloat(0.4006),doubleToFloat(0.6225),doubleToFloat(0.3818),doubleToFloat(0.6721),doubleToFloat(0.3719),doubleToFloat(0.6721),doubleToFloat(0.3649),doubleToFloat(0.6721)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.3706),doubleToFloat(0.6721),doubleToFloat(0.3818),doubleToFloat(0.6285),doubleToFloat(0.3719),doubleToFloat(0.6320),doubleToFloat(0.3649),doubleToFloat(0.6316),doubleToFloat(0.3706),doubleToFloat(0.6267),doubleToFloat(0.3807),doubleToFloat(0.6738),doubleToFloat(0.3807),doubleToFloat(0.6225)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=11, element #199, 1408 total numbers */
	this.IndexedFaceSet_11_199_coordIndex = new MFInt32(Java.to([1,0,2,-1,72,2,73,-1,73,74,72,-1,2,0,75,-1,75,73,2,-1,72,74,76,-1,76,3,72,-1,74,73,77,-1,77,78,74,-1,73,75,79,-1,79,77,73,-1,76,74,78,-1,78,80,76,-1,78,77,81,-1,81,16,78,-1,77,79,82,-1,82,81,77,-1,80,78,16,-1,16,14,80,-1,3,76,5,-1,76,80,83,-1,83,5,76,-1,80,14,12,-1,12,83,80,-1,75,84,85,-1,85,79,75,-1,79,85,86,-1,86,82,79,-1,85,84,87,-1,87,88,85,-1,86,85,88,-1,88,89,86,-1,0,87,84,-1,84,75,0,-1,81,82,91,-1,91,90,81,-1,82,86,92,-1,92,91,82,-1,86,89,93,-1,93,92,86,-1,90,91,94,-1,94,33,90,-1,91,92,95,-1,95,94,91,-1,92,93,96,-1,96,95,92,-1,179,185,4,-1,8,6,10,-1,10,11,8,-1,6,12,13,-1,13,10,6,-1,12,14,15,-1,15,13,12,-1,15,14,16,-1,16,17,15,-1,17,16,18,-1,18,19,17,-1,19,18,20,-1,20,21,19,-1,11,10,22,-1,22,23,11,-1,10,13,24,-1,24,22,10,-1,13,15,25,-1,25,24,13,-1,15,17,26,-1,26,25,15,-1,17,19,27,-1,27,26,17,-1,21,27,19,-1,23,22,28,-1,28,29,23,-1,22,24,30,-1,30,28,22,-1,25,31,30,-1,30,24,25,-1,25,26,32,-1,32,31,25,-1,26,27,33,-1,33,32,26,-1,27,21,34,-1,34,33,27,-1,9,8,35,-1,35,36,9,-1,8,11,23,-1,23,35,8,-1,23,29,37,-1,37,35,23,-1,31,32,39,-1,39,40,31,-1,40,39,41,-1,41,42,40,-1,31,40,43,-1,32,44,39,-1,42,41,45,-1,45,46,42,-1,40,42,46,-1,46,43,40,-1,41,39,44,-1,44,45,41,-1,47,48,50,-1,50,49,47,-1,50,51,52,-1,52,49,50,-1,52,51,53,-1,53,54,52,-1,54,53,55,-1,55,56,54,-1,56,55,57,-1,57,58,56,-1,50,48,59,-1,59,60,50,-1,51,50,60,-1,60,61,51,-1,53,51,61,-1,61,62,53,-1,55,53,62,-1,62,63,55,-1,57,55,63,-1,63,64,57,-1,62,61,65,-1,65,66,62,-1,63,62,66,-1,66,67,63,-1,64,63,67,-1,67,68,64,-1,28,30,65,-1,67,66,45,-1,45,69,67,-1,68,67,69,-1,69,70,68,-1,30,31,43,-1,65,30,43,-1,43,46,65,-1,66,65,46,-1,46,45,66,-1,48,47,38,-1,38,37,48,-1,59,48,37,-1,37,29,59,-1,33,94,97,-1,97,71,33,-1,94,95,98,-1,98,97,94,-1,95,96,99,-1,99,98,95,-1,32,33,71,-1,71,44,32,-1,71,69,45,-1,45,44,71,-1,97,70,69,-1,69,71,97,-1,97,98,70,-1,83,12,6,-1,6,5,83,-1,21,20,81,-1,81,90,21,-1,34,21,90,-1,90,33,34,-1,1,100,0,-1,158,100,72,-1,72,159,158,-1,160,0,100,-1,100,158,160,-1,161,159,72,-1,72,3,161,-1,162,158,159,-1,159,163,162,-1,164,160,158,-1,158,162,164,-1,163,159,161,-1,161,165,163,-1,166,162,163,-1,163,110,166,-1,167,164,162,-1,162,166,167,-1,110,163,165,-1,165,108,110,-1,3,195,101,-1,101,161,3,-1,168,165,161,-1,161,101,168,-1,106,108,165,-1,165,168,106,-1,170,169,160,-1,160,164,170,-1,171,170,164,-1,164,167,171,-1,87,169,170,-1,170,88,87,-1,88,170,171,-1,171,89,88,-1,169,87,0,-1,0,160,169,-1,173,167,166,-1,166,172,173,-1,174,171,167,-1,167,173,174,-1,93,89,171,-1,171,174,93,-1,175,173,172,-1,172,127,175,-1,176,174,173,-1,173,175,176,-1,96,93,174,-1,174,176,96,-1,104,102,103,-1,103,105,104,-1,107,106,102,-1,102,104,107,-1,109,108,106,-1,106,107,109,-1,110,108,109,-1,109,111,110,-1,112,110,111,-1,111,113,112,-1,114,112,113,-1,113,115,114,-1,116,104,105,-1,105,117,116,-1,118,107,104,-1,104,116,118,-1,119,109,107,-1,107,118,119,-1,120,111,109,-1,109,119,120,-1,121,113,111,-1,111,120,121,-1,115,113,121,-1,122,116,117,-1,117,123,122,-1,124,118,116,-1,116,122,124,-1,124,125,119,-1,119,118,124,-1,126,120,119,-1,119,125,126,-1,127,121,120,-1,120,126,127,-1,128,115,121,-1,121,127,128,-1,129,103,9,-1,9,36,129,-1,117,105,103,-1,103,129,117,-1,130,123,117,-1,117,129,130,-1,131,126,125,-1,125,132,131,-1,133,131,132,-1,132,134,133,-1,125,135,132,-1,126,131,136,-1,137,133,134,-1,134,138,137,-1,138,134,132,-1,132,135,138,-1,136,131,133,-1,133,137,136,-1,140,139,47,-1,47,49,140,-1,52,141,140,-1,140,49,52,-1,142,141,52,-1,52,54,142,-1,143,142,54,-1,54,56,143,-1,144,143,56,-1,56,58,144,-1,145,139,140,-1,140,146,145,-1,146,140,141,-1,141,147,146,-1,147,141,142,-1,142,148,147,-1,148,142,143,-1,143,149,148,-1,149,143,144,-1,144,150,149,-1,148,152,151,-1,151,147,148,-1,152,148,149,-1,149,153,152,-1,153,149,150,-1,150,154,153,-1,122,151,124,-1,137,152,153,-1,153,155,137,-1,155,153,154,-1,154,156,155,-1,124,135,125,-1,135,124,151,-1,151,138,135,-1,138,151,152,-1,152,137,138,-1,38,47,139,-1,139,130,38,-1,130,139,145,-1,145,123,130,-1,177,175,127,-1,127,157,177,-1,178,176,175,-1,175,177,178,-1,99,96,176,-1,176,178,99,-1,157,127,126,-1,126,136,157,-1,137,155,157,-1,157,136,137,-1,155,156,177,-1,177,157,155,-1,177,156,178,-1,102,106,168,-1,168,101,102,-1,166,114,115,-1,115,172,166,-1,172,115,128,-1,128,127,172,-1,182,187,188,-1,189,190,194,-1,191,192,193,-1,5,6,183,-1,183,195,5,-1,102,101,195,-1,195,183,102,-1,9,103,7,-1,7,8,9,-1,103,102,7,-1,8,7,6,-1,65,61,60,-1,60,28,65,-1,147,151,122,-1,122,146,147,-1,180,6,7,-1,7,184,180,-1,186,184,7,-1,7,102,186,-1,4,185,180,-1,180,184,4,-1,181,4,184,-1,184,186,181,-1,72,1,2,-1,72,100,1,-1,129,36,38,-1,38,130,129,-1,35,37,38,-1,38,36,35,-1,181,179,4,-1,123,145,146,-1,146,122,123,-1,60,59,29,-1,29,28,60,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=11, element #199, 1408 total numbers */
	this.IndexedFaceSet_11_199_texCoordIndex = new MFInt32(Java.to([0,1,2,-1,5,2,3,-1,3,4,5,-1,2,1,6,-1,6,3,2,-1,5,4,7,-1,7,8,5,-1,4,3,9,-1,9,10,4,-1,3,6,11,-1,11,9,3,-1,7,4,10,-1,10,12,7,-1,10,9,13,-1,13,14,10,-1,9,11,15,-1,15,13,9,-1,12,10,14,-1,14,16,12,-1,8,7,17,-1,7,12,18,-1,18,17,7,-1,12,16,19,-1,19,18,12,-1,6,21,20,-1,20,11,6,-1,11,20,22,-1,22,15,11,-1,20,21,23,-1,23,24,20,-1,22,20,24,-1,24,25,22,-1,1,23,21,-1,21,6,1,-1,13,15,26,-1,26,27,13,-1,15,22,28,-1,28,26,15,-1,22,25,29,-1,29,28,22,-1,27,26,30,-1,30,31,27,-1,26,28,32,-1,32,30,26,-1,28,29,33,-1,33,32,28,-1,94,95,96,-1,99,100,97,-1,97,98,99,-1,100,102,101,-1,101,97,100,-1,102,104,103,-1,103,101,102,-1,103,104,105,-1,105,106,103,-1,106,105,107,-1,107,108,106,-1,108,107,109,-1,109,110,108,-1,98,97,111,-1,111,112,98,-1,97,101,113,-1,113,111,97,-1,101,103,114,-1,114,113,101,-1,103,106,115,-1,115,114,103,-1,106,108,116,-1,116,115,106,-1,110,116,108,-1,112,111,117,-1,117,118,112,-1,111,113,119,-1,119,117,111,-1,114,120,119,-1,119,113,114,-1,114,115,121,-1,121,120,114,-1,115,116,122,-1,122,121,115,-1,116,110,123,-1,123,122,116,-1,126,99,124,-1,124,125,126,-1,99,98,112,-1,112,124,99,-1,112,118,127,-1,127,124,112,-1,36,37,34,-1,34,35,36,-1,35,34,38,-1,38,39,35,-1,36,35,40,-1,37,41,34,-1,39,38,42,-1,42,43,39,-1,35,39,43,-1,43,40,35,-1,38,34,41,-1,41,42,38,-1,129,131,130,-1,130,128,129,-1,130,135,132,-1,132,128,130,-1,132,135,133,-1,133,134,132,-1,134,133,136,-1,136,137,134,-1,137,136,138,-1,138,139,137,-1,130,131,140,-1,140,141,130,-1,135,130,141,-1,141,142,135,-1,133,135,142,-1,142,143,133,-1,136,133,143,-1,143,144,136,-1,138,136,144,-1,144,145,138,-1,143,142,146,-1,146,147,143,-1,144,143,147,-1,147,148,144,-1,145,144,148,-1,148,149,145,-1,117,119,146,-1,148,147,150,-1,150,151,148,-1,149,148,151,-1,151,152,149,-1,44,36,40,-1,146,119,153,-1,153,154,146,-1,147,146,154,-1,154,150,147,-1,131,129,155,-1,155,127,131,-1,140,131,127,-1,127,118,140,-1,31,30,45,-1,45,46,31,-1,30,32,47,-1,47,45,30,-1,32,33,48,-1,48,47,32,-1,37,31,46,-1,46,41,37,-1,157,151,150,-1,150,156,157,-1,158,152,151,-1,151,157,158,-1,45,47,49,-1,18,19,50,-1,50,17,18,-1,110,109,159,-1,159,160,110,-1,123,110,160,-1,160,122,123,-1,0,51,1,-1,52,51,5,-1,5,53,52,-1,54,1,51,-1,51,52,54,-1,55,53,5,-1,5,8,55,-1,56,52,53,-1,53,57,56,-1,58,54,52,-1,52,56,58,-1,57,53,55,-1,55,59,57,-1,60,56,57,-1,57,61,60,-1,62,58,56,-1,56,60,62,-1,61,57,59,-1,59,63,61,-1,8,92,64,-1,64,55,8,-1,65,59,55,-1,55,64,65,-1,66,63,59,-1,59,65,66,-1,67,68,54,-1,54,58,67,-1,69,67,58,-1,58,62,69,-1,23,68,67,-1,67,24,23,-1,24,67,69,-1,69,25,24,-1,68,23,1,-1,1,54,68,-1,70,62,60,-1,60,71,70,-1,72,69,62,-1,62,70,72,-1,29,25,69,-1,69,72,29,-1,73,70,71,-1,71,74,73,-1,75,72,70,-1,70,73,75,-1,33,29,72,-1,72,75,33,-1,161,164,162,-1,162,163,161,-1,165,166,164,-1,164,161,165,-1,167,168,166,-1,166,165,167,-1,169,168,167,-1,167,170,169,-1,171,169,170,-1,170,172,171,-1,173,171,172,-1,172,174,173,-1,175,161,163,-1,163,176,175,-1,177,165,161,-1,161,175,177,-1,178,167,165,-1,165,177,178,-1,179,170,167,-1,167,178,179,-1,180,172,170,-1,170,179,180,-1,174,172,180,-1,181,175,176,-1,176,182,181,-1,183,177,175,-1,175,181,183,-1,183,184,178,-1,178,177,183,-1,185,179,178,-1,178,184,185,-1,186,180,179,-1,179,185,186,-1,187,174,180,-1,180,186,187,-1,188,162,126,-1,126,125,188,-1,176,163,162,-1,162,188,176,-1,189,182,176,-1,176,188,189,-1,76,79,77,-1,77,78,76,-1,80,76,78,-1,78,81,80,-1,77,82,78,-1,79,76,83,-1,84,80,81,-1,81,85,84,-1,85,81,78,-1,78,82,85,-1,83,76,80,-1,80,84,83,-1,190,191,129,-1,129,128,190,-1,132,193,190,-1,190,128,132,-1,192,193,132,-1,132,134,192,-1,194,192,134,-1,134,137,194,-1,195,194,137,-1,137,139,195,-1,196,191,190,-1,190,197,196,-1,197,190,193,-1,193,198,197,-1,198,193,192,-1,192,199,198,-1,199,192,194,-1,194,200,199,-1,200,194,195,-1,195,201,200,-1,199,203,202,-1,202,198,199,-1,203,199,200,-1,200,204,203,-1,204,200,201,-1,201,205,204,-1,181,202,183,-1,206,203,204,-1,204,207,206,-1,207,204,205,-1,205,208,207,-1,86,82,77,-1,210,183,202,-1,202,209,210,-1,209,202,203,-1,203,206,209,-1,155,129,191,-1,191,189,155,-1,189,191,196,-1,196,182,189,-1,87,73,74,-1,74,88,87,-1,89,75,73,-1,73,87,89,-1,48,33,75,-1,75,89,48,-1,88,74,79,-1,79,83,88,-1,206,207,211,-1,211,212,206,-1,207,208,213,-1,213,211,207,-1,87,90,89,-1,91,66,65,-1,65,64,91,-1,214,173,174,-1,174,215,214,-1,215,174,187,-1,187,186,215,-1,92,8,7,-1,7,17,92,-1,64,55,8,-1,17,50,93,-1,93,92,17,-1,91,64,92,-1,92,93,91,-1,126,162,216,-1,216,99,126,-1,162,164,216,-1,99,216,100,-1,146,142,141,-1,141,117,146,-1,198,202,181,-1,181,197,198,-1,218,100,216,-1,216,217,218,-1,219,217,216,-1,216,164,219,-1,96,95,218,-1,218,217,96,-1,220,96,217,-1,217,219,220,-1,5,0,2,-1,5,51,0,-1,188,125,155,-1,155,189,188,-1,124,127,155,-1,155,125,124,-1,220,94,96,-1,182,196,197,-1,197,181,182,-1,141,140,118,-1,118,117,141,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=12, element #199, 588 total numbers made up of 196 3-tuple values */
	this.Coordinate_12_199_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(0.0166),doubleToFloat(1.5910),doubleToFloat(6.0240),doubleToFloat(0.0166),doubleToFloat(2.0160),doubleToFloat(6.6390),doubleToFloat(0.7299),doubleToFloat(2.0160),doubleToFloat(6.1100),doubleToFloat(0.0209),doubleToFloat(4.4870),doubleToFloat(5.4540),doubleToFloat(0.0165),doubleToFloat(5.9700),doubleToFloat(6.7940),doubleToFloat(1.9210),doubleToFloat(6.1930),doubleToFloat(5.7580),doubleToFloat(2.6950),doubleToFloat(8.1510),doubleToFloat(5.2080),doubleToFloat(0.0166),doubleToFloat(9.5100),doubleToFloat(6.0440),doubleToFloat(2.3000),doubleToFloat(11.2400),doubleToFloat(3.7360),doubleToFloat(0.0166),doubleToFloat(11.4600),doubleToFloat(3.9820)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(5.1640),doubleToFloat(9.4070),doubleToFloat(3.7790),doubleToFloat(4.3070),doubleToFloat(10.7900),doubleToFloat(3.0330),doubleToFloat(3.8200),doubleToFloat(6.1320),doubleToFloat(4.7630),doubleToFloat(5.9060),doubleToFloat(6.6260),doubleToFloat(3.9370),doubleToFloat(3.9300),doubleToFloat(4.8430),doubleToFloat(4.1250),doubleToFloat(5.9950),doubleToFloat(4.5990),doubleToFloat(3.3610),doubleToFloat(3.7740),doubleToFloat(3.0040),doubleToFloat(4.2120),doubleToFloat(5.7380),doubleToFloat(3.0550),doubleToFloat(3.2080),doubleToFloat(3.6530),doubleToFloat(1.8160),doubleToFloat(4.6470),doubleToFloat(5.0750),doubleToFloat(1.7160),doubleToFloat(3.5730)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(3.3730),doubleToFloat(0.4292),doubleToFloat(5.2560),doubleToFloat(3.7300),doubleToFloat(0.4456),doubleToFloat(4.3030),doubleToFloat(5.8180),doubleToFloat(9.4070),doubleToFloat(1.6390),doubleToFloat(4.4260),doubleToFloat(11.1700),doubleToFloat(1.7030),doubleToFloat(6.6930),doubleToFloat(6.8530),doubleToFloat(1.6030),doubleToFloat(6.6900),doubleToFloat(4.5990),doubleToFloat(1.3700),doubleToFloat(6.3250),doubleToFloat(3.0550),doubleToFloat(1.7550),doubleToFloat(5.1360),doubleToFloat(1.7160),doubleToFloat(2.1060),doubleToFloat(4.7560),doubleToFloat(8.9510),doubleToFloat(-1.0640),doubleToFloat(3.2940),doubleToFloat(10.6900),doubleToFloat(-1.1620)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(5.6240),doubleToFloat(6.6370),doubleToFloat(0.1137),doubleToFloat(5.0420),doubleToFloat(4.5990),doubleToFloat(0.3258),doubleToFloat(4.8440),doubleToFloat(3.0550),doubleToFloat(0.5342),doubleToFloat(4.0610),doubleToFloat(1.7200),doubleToFloat(1.2330),doubleToFloat(3.4400),doubleToFloat(0.4830),doubleToFloat(3.3080),doubleToFloat(2.3060),doubleToFloat(12.1500),doubleToFloat(1.9220),doubleToFloat(0.0166),doubleToFloat(11.8700),doubleToFloat(2.2560),doubleToFloat(1.2530),doubleToFloat(11.3500),doubleToFloat(-0.9965),doubleToFloat(0.0166),doubleToFloat(11.2800),doubleToFloat(-1.0360),doubleToFloat(5.3680),doubleToFloat(2.8230),doubleToFloat(-0.2563)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(5.5060),doubleToFloat(4.8310),doubleToFloat(-0.3854),doubleToFloat(5.7090),doubleToFloat(3.0840),doubleToFloat(-1.0390),doubleToFloat(5.9860),doubleToFloat(4.5710),doubleToFloat(-1.1650),doubleToFloat(5.1640),doubleToFloat(4.8310),doubleToFloat(-0.3854),doubleToFloat(4.5020),doubleToFloat(2.8390),doubleToFloat(-0.2487),doubleToFloat(5.2850),doubleToFloat(3.0810),doubleToFloat(-1.0440),doubleToFloat(5.5100),doubleToFloat(4.5710),doubleToFloat(-1.1650),doubleToFloat(0.0166),doubleToFloat(10.9800),doubleToFloat(-2.8720),doubleToFloat(0.8853),doubleToFloat(10.9800),doubleToFloat(-2.8280),doubleToFloat(0.0166),doubleToFloat(9.4310),doubleToFloat(-4.6580)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(1.4000),doubleToFloat(9.4260),doubleToFloat(-4.5960),doubleToFloat(1.7640),doubleToFloat(6.8150),doubleToFloat(-5.6340),doubleToFloat(0.0166),doubleToFloat(6.8150),doubleToFloat(-5.7240),doubleToFloat(2.1880),doubleToFloat(2.8540),doubleToFloat(-5.7790),doubleToFloat(0.0166),doubleToFloat(2.8540),doubleToFloat(-5.8770),doubleToFloat(2.6400),doubleToFloat(-0.9086),doubleToFloat(-7.3890),doubleToFloat(0.0166),doubleToFloat(-0.9086),doubleToFloat(-7.6050),doubleToFloat(0.3370),doubleToFloat(-0.2691),doubleToFloat(-1.0130),doubleToFloat(0.0166),doubleToFloat(-0.2691),doubleToFloat(-1.0800),doubleToFloat(1.8060),doubleToFloat(10.9800),doubleToFloat(-2.6220)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(2.9630),doubleToFloat(9.4460),doubleToFloat(-3.8600),doubleToFloat(3.9070),doubleToFloat(6.8150),doubleToFloat(-4.5270),doubleToFloat(4.1700),doubleToFloat(2.8540),doubleToFloat(-4.6090),doubleToFloat(4.7810),doubleToFloat(-0.9086),doubleToFloat(-5.6340),doubleToFloat(0.6963),doubleToFloat(-0.2691),doubleToFloat(-0.7539),doubleToFloat(5.0770),doubleToFloat(6.8150),doubleToFloat(-2.0440),doubleToFloat(5.1530),doubleToFloat(2.8540),doubleToFloat(-2.2440),doubleToFloat(6.0340),doubleToFloat(-0.9086),doubleToFloat(-2.6560),doubleToFloat(1.0610),doubleToFloat(-0.2691),doubleToFloat(-0.3770),doubleToFloat(6.1580),doubleToFloat(-0.9086),doubleToFloat(-0.7305)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(1.1690),doubleToFloat(-0.2691),doubleToFloat(0.2302),doubleToFloat(4.0610),doubleToFloat(1.7420),doubleToFloat(0.1251),doubleToFloat(0.0166),doubleToFloat(2.9290),doubleToFloat(5.4070),doubleToFloat(1.7280),doubleToFloat(1.9850),doubleToFloat(5.9910),doubleToFloat(1.2190),doubleToFloat(3.0700),doubleToFloat(5.2910),doubleToFloat(1.5230),doubleToFloat(1.2400),doubleToFloat(6.0240),doubleToFloat(1.5060),doubleToFloat(4.8910),doubleToFloat(5.4460),doubleToFloat(2.8130),doubleToFloat(1.9390),doubleToFloat(5.6920),doubleToFloat(2.9940),doubleToFloat(3.0470),doubleToFloat(4.8720),doubleToFloat(2.2360),doubleToFloat(1.0420),doubleToFloat(5.7470)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(3.0750),doubleToFloat(4.9570),doubleToFloat(5.1400),doubleToFloat(3.6530),doubleToFloat(1.8160),doubleToFloat(4.6470),doubleToFloat(2.8310),doubleToFloat(0.8449),doubleToFloat(4.9990),doubleToFloat(2.9890),doubleToFloat(6.1710),doubleToFloat(5.4060),doubleToFloat(0.8003),doubleToFloat(0.7396),doubleToFloat(5.8030),doubleToFloat(1.2670),doubleToFloat(0.2290),doubleToFloat(5.3050),doubleToFloat(1.5680),doubleToFloat(-0.1326),doubleToFloat(4.6930),doubleToFloat(0.0166),doubleToFloat(0.5157),doubleToFloat(5.8030),doubleToFloat(0.0166),doubleToFloat(-0.1207),doubleToFloat(5.5790),doubleToFloat(0.0166),doubleToFloat(-0.8641),doubleToFloat(5.1430)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(4.0500),doubleToFloat(1.8200),doubleToFloat(2.9050),doubleToFloat(3.0990),doubleToFloat(0.7520),doubleToFloat(3.0120),doubleToFloat(1.7430),doubleToFloat(-0.1026),doubleToFloat(3.5540),doubleToFloat(0.0166),doubleToFloat(-0.7393),doubleToFloat(3.9940),doubleToFloat(3.0990),doubleToFloat(0.8508),doubleToFloat(1.2730),doubleToFloat(1.2220),doubleToFloat(0.0724),doubleToFloat(1.9170),doubleToFloat(0.0166),doubleToFloat(-0.3447),doubleToFloat(1.9850),doubleToFloat(3.0990),doubleToFloat(0.8479),doubleToFloat(0.3903),doubleToFloat(0.5884),doubleToFloat(-0.1912),doubleToFloat(0.5953),doubleToFloat(0.0166),doubleToFloat(-0.5266),doubleToFloat(0.6840)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.6968),doubleToFloat(2.0160),doubleToFloat(6.1100),doubleToFloat(-1.8880),doubleToFloat(6.1930),doubleToFloat(5.7580),doubleToFloat(-2.6620),doubleToFloat(8.1510),doubleToFloat(5.2080),doubleToFloat(-2.2670),doubleToFloat(11.2400),doubleToFloat(3.7360),doubleToFloat(-5.1310),doubleToFloat(9.4070),doubleToFloat(3.7790),doubleToFloat(-4.2730),doubleToFloat(10.7900),doubleToFloat(3.0330),doubleToFloat(-3.7870),doubleToFloat(6.1320),doubleToFloat(4.7630),doubleToFloat(-5.8730),doubleToFloat(6.6260),doubleToFloat(3.9370),doubleToFloat(-3.8970),doubleToFloat(4.8430),doubleToFloat(4.1250),doubleToFloat(-5.9620),doubleToFloat(4.5990),doubleToFloat(3.3610)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-3.7410),doubleToFloat(3.0040),doubleToFloat(4.2120),doubleToFloat(-5.7050),doubleToFloat(3.0550),doubleToFloat(3.2080),doubleToFloat(-3.6200),doubleToFloat(1.8160),doubleToFloat(4.6470),doubleToFloat(-5.0420),doubleToFloat(1.7160),doubleToFloat(3.5730),doubleToFloat(-3.4290),doubleToFloat(0.4292),doubleToFloat(5.2560),doubleToFloat(-3.7870),doubleToFloat(0.4456),doubleToFloat(4.3030),doubleToFloat(-5.7850),doubleToFloat(9.4070),doubleToFloat(1.6390),doubleToFloat(-4.3930),doubleToFloat(11.1700),doubleToFloat(1.7030),doubleToFloat(-6.6600),doubleToFloat(6.8530),doubleToFloat(1.6030),doubleToFloat(-6.6570),doubleToFloat(4.5990),doubleToFloat(1.3700)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-6.2920),doubleToFloat(3.0550),doubleToFloat(1.7550),doubleToFloat(-5.1030),doubleToFloat(1.7160),doubleToFloat(2.1060),doubleToFloat(-4.7220),doubleToFloat(8.9510),doubleToFloat(-1.0640),doubleToFloat(-3.2610),doubleToFloat(10.6900),doubleToFloat(-1.1620),doubleToFloat(-5.5910),doubleToFloat(6.6370),doubleToFloat(0.1137),doubleToFloat(-5.0090),doubleToFloat(4.5990),doubleToFloat(0.3258),doubleToFloat(-4.8110),doubleToFloat(3.0550),doubleToFloat(0.5342),doubleToFloat(-4.0280),doubleToFloat(1.7200),doubleToFloat(1.2330),doubleToFloat(-3.4970),doubleToFloat(0.4830),doubleToFloat(3.3080),doubleToFloat(-2.2730),doubleToFloat(12.1500),doubleToFloat(1.9220)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.2190),doubleToFloat(11.3500),doubleToFloat(-0.9964),doubleToFloat(-5.3350),doubleToFloat(2.8230),doubleToFloat(-0.2563),doubleToFloat(-5.4730),doubleToFloat(4.8310),doubleToFloat(-0.3854),doubleToFloat(-5.6760),doubleToFloat(3.0840),doubleToFloat(-1.0390),doubleToFloat(-5.9530),doubleToFloat(4.5710),doubleToFloat(-1.1650),doubleToFloat(-5.1310),doubleToFloat(4.8310),doubleToFloat(-0.3854),doubleToFloat(-4.4690),doubleToFloat(2.8390),doubleToFloat(-0.2487),doubleToFloat(-5.2520),doubleToFloat(3.0810),doubleToFloat(-1.0440),doubleToFloat(-5.4770),doubleToFloat(4.5710),doubleToFloat(-1.1650),doubleToFloat(-0.8522),doubleToFloat(10.9800),doubleToFloat(-2.8280)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.3670),doubleToFloat(9.4260),doubleToFloat(-4.5960),doubleToFloat(-1.7310),doubleToFloat(6.8150),doubleToFloat(-5.6340),doubleToFloat(-2.1550),doubleToFloat(2.8540),doubleToFloat(-5.7790),doubleToFloat(-2.6070),doubleToFloat(-0.9086),doubleToFloat(-7.3890),doubleToFloat(-0.3039),doubleToFloat(-0.2691),doubleToFloat(-1.0130),doubleToFloat(-1.7730),doubleToFloat(10.9800),doubleToFloat(-2.6220),doubleToFloat(-2.9290),doubleToFloat(9.4460),doubleToFloat(-3.8600),doubleToFloat(-3.8730),doubleToFloat(6.8150),doubleToFloat(-4.5270),doubleToFloat(-4.1370),doubleToFloat(2.8540),doubleToFloat(-4.6090),doubleToFloat(-4.7480),doubleToFloat(-0.9086),doubleToFloat(-5.6340)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.6632),doubleToFloat(-0.2691),doubleToFloat(-0.7539),doubleToFloat(-5.0440),doubleToFloat(6.8150),doubleToFloat(-2.0440),doubleToFloat(-5.1200),doubleToFloat(2.8540),doubleToFloat(-2.2440),doubleToFloat(-6.0010),doubleToFloat(-0.9086),doubleToFloat(-2.6560),doubleToFloat(-1.0280),doubleToFloat(-0.2691),doubleToFloat(-0.3770),doubleToFloat(-6.1240),doubleToFloat(-0.9086),doubleToFloat(-0.7305),doubleToFloat(-1.1360),doubleToFloat(-0.2691),doubleToFloat(0.2302),doubleToFloat(-4.0280),doubleToFloat(1.7420),doubleToFloat(0.1251),doubleToFloat(-1.6950),doubleToFloat(1.9850),doubleToFloat(5.9910),doubleToFloat(-1.1860),doubleToFloat(3.0700),doubleToFloat(5.2910)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.4900),doubleToFloat(1.2400),doubleToFloat(6.0240),doubleToFloat(-1.4730),doubleToFloat(4.8910),doubleToFloat(5.4460),doubleToFloat(-2.7790),doubleToFloat(1.9390),doubleToFloat(5.6920),doubleToFloat(-2.9610),doubleToFloat(3.0470),doubleToFloat(4.8720),doubleToFloat(-2.2030),doubleToFloat(1.0420),doubleToFloat(5.7470),doubleToFloat(-3.0420),doubleToFloat(4.9570),doubleToFloat(5.1400),doubleToFloat(-3.6200),doubleToFloat(1.8160),doubleToFloat(4.6470),doubleToFloat(-2.7980),doubleToFloat(0.8449),doubleToFloat(4.9990),doubleToFloat(-2.9560),doubleToFloat(6.1710),doubleToFloat(5.4060),doubleToFloat(-0.7672),doubleToFloat(0.7396),doubleToFloat(5.8030)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.2340),doubleToFloat(0.2290),doubleToFloat(5.3050),doubleToFloat(-1.5350),doubleToFloat(-0.1326),doubleToFloat(4.6930),doubleToFloat(-4.0170),doubleToFloat(1.8200),doubleToFloat(2.9050),doubleToFloat(-3.0660),doubleToFloat(0.7520),doubleToFloat(3.0120),doubleToFloat(-1.7100),doubleToFloat(-0.1026),doubleToFloat(3.5540),doubleToFloat(-3.0660),doubleToFloat(0.8508),doubleToFloat(1.2730),doubleToFloat(-1.1890),doubleToFloat(0.0724),doubleToFloat(1.9170),doubleToFloat(-3.0660),doubleToFloat(0.8479),doubleToFloat(0.3903),doubleToFloat(-0.5553),doubleToFloat(-0.1912),doubleToFloat(0.5953),doubleToFloat(0.0166),doubleToFloat(4.8130),doubleToFloat(6.0190)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(2.2130),doubleToFloat(7.2190),doubleToFloat(5.7300),doubleToFloat(-1.6640),doubleToFloat(6.1750),doubleToFloat(5.9560),doubleToFloat(0.0252),doubleToFloat(6.3220),doubleToFloat(5.7580),doubleToFloat(0.0251),doubleToFloat(9.0220),doubleToFloat(5.2080),doubleToFloat(0.0177),doubleToFloat(7.4550),doubleToFloat(6.8600),doubleToFloat(1.6840),doubleToFloat(6.1750),doubleToFloat(5.9560),doubleToFloat(-2.1930),doubleToFloat(7.2190),doubleToFloat(5.7300),doubleToFloat(0.0209),doubleToFloat(4.4870),doubleToFloat(5.4540),doubleToFloat(1.5060),doubleToFloat(4.8910),doubleToFloat(5.4460),doubleToFloat(1.5060),doubleToFloat(4.8910),doubleToFloat(5.4460)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(1.9210),doubleToFloat(6.1930),doubleToFloat(5.7580),doubleToFloat(-1.8880),doubleToFloat(6.1930),doubleToFloat(5.7580),doubleToFloat(-1.4730),doubleToFloat(4.8910),doubleToFloat(5.4460),doubleToFloat(0.0209),doubleToFloat(4.4870),doubleToFloat(5.4540),doubleToFloat(0.0252),doubleToFloat(6.3220),doubleToFloat(5.7580),doubleToFloat(0.0252),doubleToFloat(6.3220),doubleToFloat(5.7580)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=12, element #200, 442 total numbers made up of 221 2-tuple values */
	this.TextureCoordinate_12_200_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.2306),doubleToFloat(0.7219),doubleToFloat(0.2306),doubleToFloat(0.7038),doubleToFloat(0.2614),doubleToFloat(0.7219),doubleToFloat(0.3044),doubleToFloat(0.7206),doubleToFloat(0.2825),doubleToFloat(0.7668),doubleToFloat(0.2306),doubleToFloat(0.7608),doubleToFloat(0.2956),doubleToFloat(0.6889),doubleToFloat(0.2948),doubleToFloat(0.8444),doubleToFloat(0.2308),doubleToFloat(0.8272),doubleToFloat(0.3511),doubleToFloat(0.7186)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.3589),doubleToFloat(0.7658),doubleToFloat(0.3263),doubleToFloat(0.6804),doubleToFloat(0.3624),doubleToFloat(0.8472),doubleToFloat(0.3873),doubleToFloat(0.7134),doubleToFloat(0.3925),doubleToFloat(0.7640),doubleToFloat(0.3519),doubleToFloat(0.6721),doubleToFloat(0.3993),doubleToFloat(0.8423),doubleToFloat(0.3127),doubleToFloat(0.8998),doubleToFloat(0.3587),doubleToFloat(0.8989),doubleToFloat(0.3945),doubleToFloat(0.8972)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.2845),doubleToFloat(0.6612),doubleToFloat(0.2644),doubleToFloat(0.6676),doubleToFloat(0.2975),doubleToFloat(0.6458),doubleToFloat(0.2306),doubleToFloat(0.6580),doubleToFloat(0.2306),doubleToFloat(0.6463),doubleToFloat(0.2306),doubleToFloat(0.6147),doubleToFloat(0.3634),doubleToFloat(0.6681),doubleToFloat(0.4044),doubleToFloat(0.7136),doubleToFloat(0.3050),doubleToFloat(0.6471),doubleToFloat(0.2306),doubleToFloat(0.6200)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.3634),doubleToFloat(0.6723),doubleToFloat(0.4049),doubleToFloat(0.7093),doubleToFloat(0.2826),doubleToFloat(0.6545),doubleToFloat(0.2306),doubleToFloat(0.6368),doubleToFloat(0.4277),doubleToFloat(0.7563),doubleToFloat(0.4328),doubleToFloat(0.8418),doubleToFloat(0.4157),doubleToFloat(0.8319),doubleToFloat(0.4084),doubleToFloat(0.7662),doubleToFloat(0.4403),doubleToFloat(0.7674),doubleToFloat(0.4505),doubleToFloat(0.8307)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4202),doubleToFloat(0.8418),doubleToFloat(0.3958),doubleToFloat(0.7570),doubleToFloat(0.4247),doubleToFloat(0.7673),doubleToFloat(0.4329),doubleToFloat(0.8307),doubleToFloat(0.4371),doubleToFloat(0.9187),doubleToFloat(0.3634),doubleToFloat(0.6722),doubleToFloat(0.4049),doubleToFloat(0.7103),doubleToFloat(0.2553),doubleToFloat(0.6433),doubleToFloat(0.2306),doubleToFloat(0.6290),doubleToFloat(0.2803),doubleToFloat(0.6400)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.3461),doubleToFloat(0.9832),doubleToFloat(0.1999),doubleToFloat(0.7219),doubleToFloat(0.1569),doubleToFloat(0.7206),doubleToFloat(0.1788),doubleToFloat(0.7668),doubleToFloat(0.1657),doubleToFloat(0.6889),doubleToFloat(0.1665),doubleToFloat(0.8444),doubleToFloat(0.1102),doubleToFloat(0.7186),doubleToFloat(0.1024),doubleToFloat(0.7658),doubleToFloat(0.1350),doubleToFloat(0.6804),doubleToFloat(0.0989),doubleToFloat(0.8472)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.0740),doubleToFloat(0.7134),doubleToFloat(0.0688),doubleToFloat(0.7640),doubleToFloat(0.1094),doubleToFloat(0.6721),doubleToFloat(0.0620),doubleToFloat(0.8423),doubleToFloat(0.1486),doubleToFloat(0.8998),doubleToFloat(0.1026),doubleToFloat(0.8989),doubleToFloat(0.0668),doubleToFloat(0.8972),doubleToFloat(0.1768),doubleToFloat(0.6612),doubleToFloat(0.1969),doubleToFloat(0.6676),doubleToFloat(0.1638),doubleToFloat(0.6458)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.0979),doubleToFloat(0.6681),doubleToFloat(0.0569),doubleToFloat(0.7136),doubleToFloat(0.1563),doubleToFloat(0.6471),doubleToFloat(0.0979),doubleToFloat(0.6723),doubleToFloat(0.0564),doubleToFloat(0.7093),doubleToFloat(0.1787),doubleToFloat(0.6545),doubleToFloat(0.0336),doubleToFloat(0.7563),doubleToFloat(0.0456),doubleToFloat(0.8319),doubleToFloat(0.0285),doubleToFloat(0.8418),doubleToFloat(0.0529),doubleToFloat(0.7662)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.0210),doubleToFloat(0.7674),doubleToFloat(0.0109),doubleToFloat(0.8307),doubleToFloat(0.0411),doubleToFloat(0.8418),doubleToFloat(0.0655),doubleToFloat(0.7570),doubleToFloat(0.0366),doubleToFloat(0.7673),doubleToFloat(0.0283),doubleToFloat(0.8307),doubleToFloat(0.0242),doubleToFloat(0.9187),doubleToFloat(0.0979),doubleToFloat(0.6722),doubleToFloat(0.0564),doubleToFloat(0.7103),doubleToFloat(0.2060),doubleToFloat(0.6433)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1810),doubleToFloat(0.6400),doubleToFloat(0.1152),doubleToFloat(0.9832),doubleToFloat(0.2310),doubleToFloat(0.9053),doubleToFloat(0.2310),doubleToFloat(1.0200),doubleToFloat(0.5118),doubleToFloat(0.6048),doubleToFloat(0.5650),doubleToFloat(0.6951),doubleToFloat(0.5291),doubleToFloat(0.7326),doubleToFloat(0.6281),doubleToFloat(0.9347),doubleToFloat(0.6515),doubleToFloat(0.9447),doubleToFloat(0.6279),doubleToFloat(0.9576)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5936),doubleToFloat(0.9053),doubleToFloat(0.6287),doubleToFloat(0.8085),doubleToFloat(0.5933),doubleToFloat(0.8105),doubleToFloat(0.7035),doubleToFloat(0.7808),doubleToFloat(0.6735),doubleToFloat(0.7785),doubleToFloat(0.6727),doubleToFloat(0.7204),doubleToFloat(0.6961),doubleToFloat(0.7287),doubleToFloat(0.6747),doubleToFloat(0.6734),doubleToFloat(0.6972),doubleToFloat(0.6739),doubleToFloat(0.6706),doubleToFloat(0.6045)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7158),doubleToFloat(0.6049),doubleToFloat(0.7002),doubleToFloat(0.9347),doubleToFloat(0.6963),doubleToFloat(0.9556),doubleToFloat(0.7074),doubleToFloat(0.8151),doubleToFloat(0.7314),doubleToFloat(0.7774),doubleToFloat(0.7331),doubleToFloat(0.7218),doubleToFloat(0.7466),doubleToFloat(0.6739),doubleToFloat(0.7913),doubleToFloat(0.9215),doubleToFloat(0.7929),doubleToFloat(0.9417),doubleToFloat(0.7576),doubleToFloat(0.8089)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7640),doubleToFloat(0.7714),doubleToFloat(0.7698),doubleToFloat(0.7218),doubleToFloat(0.7675),doubleToFloat(0.6740),doubleToFloat(0.7631),doubleToFloat(0.6060),doubleToFloat(0.6890),doubleToFloat(0.9839),doubleToFloat(0.6777),doubleToFloat(0.9757),doubleToFloat(0.6196),doubleToFloat(0.9641),doubleToFloat(0.7873),doubleToFloat(0.9608),doubleToFloat(0.9124),doubleToFloat(0.9353),doubleToFloat(0.8505),doubleToFloat(0.9502)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.9103),doubleToFloat(0.9352),doubleToFloat(0.8490),doubleToFloat(0.9502),doubleToFloat(0.9456),doubleToFloat(0.8068),doubleToFloat(0.8961),doubleToFloat(0.7182),doubleToFloat(0.9432),doubleToFloat(0.7178),doubleToFloat(0.8875),doubleToFloat(0.8087),doubleToFloat(0.9136),doubleToFloat(0.6076),doubleToFloat(0.9472),doubleToFloat(0.6076),doubleToFloat(0.8270),doubleToFloat(0.6244),doubleToFloat(0.8293),doubleToFloat(0.6244)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.8421),doubleToFloat(0.9502),doubleToFloat(0.8855),doubleToFloat(0.9358),doubleToFloat(0.8749),doubleToFloat(0.8121),doubleToFloat(0.8851),doubleToFloat(0.7175),doubleToFloat(0.8861),doubleToFloat(0.6085),doubleToFloat(0.8183),doubleToFloat(0.6244),doubleToFloat(0.8422),doubleToFloat(0.8140),doubleToFloat(0.8574),doubleToFloat(0.7152),doubleToFloat(0.8432),doubleToFloat(0.6076),doubleToFloat(0.8056),doubleToFloat(0.6244)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.8187),doubleToFloat(0.7234),doubleToFloat(0.8175),doubleToFloat(0.6059),doubleToFloat(0.7937),doubleToFloat(0.6244),doubleToFloat(0.7965),doubleToFloat(0.7739),doubleToFloat(0.8228),doubleToFloat(0.7664),doubleToFloat(0.7886),doubleToFloat(0.9589),doubleToFloat(0.8004),doubleToFloat(0.7165),doubleToFloat(0.7972),doubleToFloat(0.6823),doubleToFloat(0.7883),doubleToFloat(0.6565),doubleToFloat(0.6747),doubleToFloat(0.6734)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7163),doubleToFloat(0.6616),doubleToFloat(0.6281),doubleToFloat(0.9347),doubleToFloat(0.6279),doubleToFloat(0.9576),doubleToFloat(0.6515),doubleToFloat(0.9447),doubleToFloat(0.5936),doubleToFloat(0.9053),doubleToFloat(0.6287),doubleToFloat(0.8085),doubleToFloat(0.5933),doubleToFloat(0.8105),doubleToFloat(0.7035),doubleToFloat(0.7808),doubleToFloat(0.6735),doubleToFloat(0.7785),doubleToFloat(0.6727),doubleToFloat(0.7204)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.6961),doubleToFloat(0.7287),doubleToFloat(0.6747),doubleToFloat(0.6734),doubleToFloat(0.6972),doubleToFloat(0.6739),doubleToFloat(0.6706),doubleToFloat(0.6045),doubleToFloat(0.7158),doubleToFloat(0.6049),doubleToFloat(0.7002),doubleToFloat(0.9347),doubleToFloat(0.6963),doubleToFloat(0.9556),doubleToFloat(0.7074),doubleToFloat(0.8151),doubleToFloat(0.7314),doubleToFloat(0.7774),doubleToFloat(0.7331),doubleToFloat(0.7218)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7466),doubleToFloat(0.6739),doubleToFloat(0.7913),doubleToFloat(0.9215),doubleToFloat(0.7929),doubleToFloat(0.9417),doubleToFloat(0.7576),doubleToFloat(0.8089),doubleToFloat(0.7640),doubleToFloat(0.7714),doubleToFloat(0.7698),doubleToFloat(0.7218),doubleToFloat(0.7675),doubleToFloat(0.6740),doubleToFloat(0.7631),doubleToFloat(0.6060),doubleToFloat(0.6890),doubleToFloat(0.9839),doubleToFloat(0.7873),doubleToFloat(0.9608)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.9103),doubleToFloat(0.9352),doubleToFloat(0.8490),doubleToFloat(0.9502),doubleToFloat(0.8961),doubleToFloat(0.7182),doubleToFloat(0.8875),doubleToFloat(0.8087),doubleToFloat(0.9136),doubleToFloat(0.6076),doubleToFloat(0.8270),doubleToFloat(0.6244),doubleToFloat(0.8421),doubleToFloat(0.9502),doubleToFloat(0.8855),doubleToFloat(0.9358),doubleToFloat(0.8749),doubleToFloat(0.8121),doubleToFloat(0.8851),doubleToFloat(0.7175)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.8861),doubleToFloat(0.6085),doubleToFloat(0.8183),doubleToFloat(0.6244),doubleToFloat(0.8422),doubleToFloat(0.8140),doubleToFloat(0.8574),doubleToFloat(0.7152),doubleToFloat(0.8432),doubleToFloat(0.6076),doubleToFloat(0.8056),doubleToFloat(0.6244),doubleToFloat(0.8187),doubleToFloat(0.7234),doubleToFloat(0.8175),doubleToFloat(0.6059),doubleToFloat(0.7937),doubleToFloat(0.6244),doubleToFloat(0.8228),doubleToFloat(0.7664)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7965),doubleToFloat(0.7739),doubleToFloat(0.7972),doubleToFloat(0.6823),doubleToFloat(0.8004),doubleToFloat(0.7165),doubleToFloat(0.7883),doubleToFloat(0.6565),doubleToFloat(0.6747),doubleToFloat(0.6734),doubleToFloat(0.7163),doubleToFloat(0.6616),doubleToFloat(0.5663),doubleToFloat(0.9104),doubleToFloat(0.5499),doubleToFloat(0.8086),doubleToFloat(0.5896),doubleToFloat(0.7882),doubleToFloat(0.5896),doubleToFloat(0.7882)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5650),doubleToFloat(0.6951)], Java.type("float[]"))));
  this.x3dModel = new X3D().setProfile("Immersive").setVersion("4.0")
  .setHead(new head()
    .addComponent(new component().setName("HAnim").setLevel(1))
    .addMeta(new meta().setName("title").setContent("KoreanCharacter04Young.x3d"))
    .addMeta(new meta().setName("creator").setContent("Jin Hoon Lee and Min Joo Lee"))
    .addMeta(new meta().setName("translator").setContent("Chul Hee Jung and Myeong Won Lee"))
    .addMeta(new meta().setName("created").setContent("31 March 2011"))
    .addMeta(new meta().setName("translated").setContent("1 November 2014"))
    .addMeta(new meta().setName("modified").setContent("23 December 2021"))
    .addMeta(new meta().setName("description").setContent("Articulated 3D game character designed with a general graphics tool, then converted into an X3D HAnim model."))
    .addMeta(new meta().setName("reference").setContent("KoreanCharacter00ReadMe.txt"))
    .addMeta(new meta().setName("reference").setContent("KoreanCharacterHumanMotion_Infotech2014_140706.pdf"))
    .addMeta(new meta().setName("reference").setContent("KoreanCharactersIllustrated.pdf"))
    .addMeta(new meta().setName("identifier").setContent("https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Characters/KoreanCharacter04Young.x3d"))
    .addMeta(new meta().setName("generator").setContent("3DS MAX, http://www.autodesk.com/products/autodesk-3ds-max/overview"))
    .addMeta(new meta().setName("generator").setContent("Suwon University HAnim Editor"))
    .addMeta(new meta().setName("generator").setContent("Gnu Image Manipulation Program, http://www.gimp.org"))
    .addMeta(new meta().setName("generator").setContent("X3D-Edit 3.3, https://savage.nps.edu/X3D-Edit"))
    .addMeta(new meta().setName("license").setContent("../license.html")))
  .setScene(new Scene()
    .addChild(new WorldInfo().setTitle("KoreanCharacter04Young.x3d"))
    .addChild(new NavigationInfo().setSpeed(1.5))
    .addChild(new Viewpoint().setDescription("Young").setCenterOfRotation(doubleToFloat(0.0),doubleToFloat(1.0),doubleToFloat(0.0)).setPosition(doubleToFloat(0.0),doubleToFloat(1.0),doubleToFloat(3.0)))
    .addChild(new HAnimHumanoid("hanim_Young").setName("Young").setScale(doubleToFloat(0.0225),doubleToFloat(0.0225),doubleToFloat(0.0225)).setVersion("2.0")
      .addComments(" original HAnimHumanoid info='\"authorName=Chul Hee Jung and Myeong Won Lee\" \"authorEmail=myeongwonlee@gmail.com\" \"creationDate=31 March 2011\" \"humanoidVersion=2.0\" \"gender=female\" \"height=1.5\"' ")
      .setMetadata(new MetadataSet().setName("HAnimHumanoid.info").setReference(this.MetadataSet_HAnimHumanoid.info_4_22_reference)
        .addValue(new MetadataString().setName("authorName").setValue(new MFString("\"Chul Hee Jung and Myeong Won Lee\"")))
        .addValue(new MetadataString().setName("authorEmail").setValue(new MFString("\"myeongwonlee@gmail.com\"")))
        .addValue(new MetadataString().setName("creationDate").setValue(new MFString("\"31 March 2011\"")))
        .addValue(new MetadataString().setName("gender").setValue(new MFString("\"female\"")))
        .addValue(new MetadataFloat().setName("height").setValue(Java.to([doubleToFloat(1.5)], Java.type("float[]"))))
        .addValue(new MetadataString().setName("humanoidVersion").setValue(new MFString("\"2.0\""))))
      .addSkeleton(new HAnimJoint("hanim_humanoid_root").setName("humanoid_root").setCenter(doubleToFloat(0.0),doubleToFloat(31.540001),doubleToFloat(-0.317200)).setLlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]")))
        .addChild(new HAnimSegment("hanim_sacrum").setName("sacrum")
          .addChild(new Transform().setTranslation(doubleToFloat(0.0),doubleToFloat(31.540001),doubleToFloat(-0.317200))
            .addChild(new Shape()
              .setAppearance(new Appearance()
                .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588000),doubleToFloat(0.588000),doubleToFloat(0.588000)))
                .setTexture(new ImageTexture("YoungTextureAtlas").setUrl(new MFString("\"images/Young.png\" \"https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Characters/images/Young.png\""))))
              .setGeometry(new IndexedFaceSet().setCreaseAngle(1.57).setCoordIndex(this.IndexedFaceSet_8_32_coordIndex).setTexCoordIndex(this.IndexedFaceSet_8_32_texCoordIndex)
                .setCoord(new Coordinate().setPoint(this.Coordinate_9_32_point))
                .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_9_33_point))))))
        .addChild(new HAnimJoint("hanim_l_hip").setName("l_hip").setCenter(doubleToFloat(3.504000),doubleToFloat(29.040001),doubleToFloat(-0.402700)).setLlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]")))
          .addChild(new HAnimSegment("hanim_l_thigh").setName("l_thigh")
            .addChild(new Transform().setTranslation(doubleToFloat(3.504000),doubleToFloat(29.040001),doubleToFloat(-0.402700))
              .addChild(new Shape()
                .setAppearance(new Appearance()
                  .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588000),doubleToFloat(0.588000),doubleToFloat(0.588000)))
                  .setTexture(new ImageTexture()))
                .setGeometry(new IndexedFaceSet().setCreaseAngle(1.57).setCoordIndex(this.IndexedFaceSet_9_41_coordIndex).setTexCoordIndex(this.IndexedFaceSet_9_41_texCoordIndex)
                  .setCoord(new Coordinate().setPoint(this.Coordinate_10_41_point))
                  .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_10_42_point))))))
          .addChild(new HAnimJoint("hanim_l_knee").setName("l_knee").setCenter(doubleToFloat(3.414000),doubleToFloat(14.950000),doubleToFloat(-0.454900)).setLlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]")))
            .addChild(new HAnimSegment("hanim_l_calf").setName("l_calf")
              .addChild(new Transform().setTranslation(doubleToFloat(3.414000),doubleToFloat(14.950000),doubleToFloat(-0.454900))
                .addChild(new Shape()
                  .setAppearance(new Appearance()
                    .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588000),doubleToFloat(0.588000),doubleToFloat(0.588000)))
                    .setTexture(new ImageTexture()))
                  .setGeometry(new IndexedFaceSet().setCreaseAngle(1.57).setCoordIndex(this.IndexedFaceSet_10_50_coordIndex).setTexCoordIndex(this.IndexedFaceSet_10_50_texCoordIndex)
                    .setCoord(new Coordinate().setPoint(this.Coordinate_11_50_point))
                    .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_11_51_point))))))
            .addChild(new HAnimJoint("hanim_l_talocrural").setName("l_talocrural").setCenter(doubleToFloat(3.180000),doubleToFloat(3.449000),doubleToFloat(-0.308800)).setLlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]")))
              .addChild(new HAnimSegment("hanim_l_talus").setName("l_talus")
                .addChild(new Transform().setTranslation(doubleToFloat(3.180000),doubleToFloat(3.449000),doubleToFloat(-0.308800))
                  .addChild(new Shape()
                    .setAppearance(new Appearance()
                      .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588000),doubleToFloat(0.588000),doubleToFloat(0.588000)))
                      .setTexture(new ImageTexture()))
                    .setGeometry(new IndexedFaceSet().setCreaseAngle(1.57).setCoordIndex(this.IndexedFaceSet_11_59_coordIndex).setTexCoordIndex(this.IndexedFaceSet_11_59_texCoordIndex)
                      .setCoord(new Coordinate().setPoint(this.Coordinate_12_59_point))
                      .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_12_60_point))))))
              .addChild(new HAnimJoint("hanim_l_metatarsophalangeal_2").setName("l_metatarsophalangeal_2").setCenter(doubleToFloat(3.180000),doubleToFloat(3.189000),doubleToFloat(0.972400)).setLlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]")))
                .addChild(new HAnimSegment("hanim_l_tarsal_proximal_phalanx_2").setName("l_tarsal_proximal_phalanx_2")
                  .addChild(new Transform().setTranslation(doubleToFloat(3.180000),doubleToFloat(3.189000),doubleToFloat(0.972400))
                    .addChild(new Shape()
                      .setAppearance(new Appearance()
                        .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588000),doubleToFloat(0.588000),doubleToFloat(0.588000)))
                        .setTexture(new ImageTexture()))
                      .setGeometry(new IndexedFaceSet().setCreaseAngle(1.57).setCoordIndex(this.IndexedFaceSet_12_68_coordIndex).setTexCoordIndex(this.IndexedFaceSet_12_68_texCoordIndex)
                        .setCoord(new Coordinate().setPoint(this.Coordinate_13_68_point))
                        .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_13_69_point))))))))))
        .addChild(new HAnimJoint("hanim_r_hip").setName("r_hip").setCenter(doubleToFloat(-3.504000),doubleToFloat(29.040001),doubleToFloat(-0.402700)).setLlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]")))
          .addChild(new HAnimSegment("hanim_r_thigh").setName("r_thigh")
            .addChild(new Transform().setTranslation(doubleToFloat(-3.504000),doubleToFloat(29.040001),doubleToFloat(-0.402700))
              .addChild(new Shape()
                .setAppearance(new Appearance()
                  .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588000),doubleToFloat(0.588000),doubleToFloat(0.588000)))
                  .setTexture(new ImageTexture()))
                .setGeometry(new IndexedFaceSet().setCreaseAngle(1.57).setCoordIndex(this.IndexedFaceSet_9_81_coordIndex).setTexCoordIndex(this.IndexedFaceSet_9_81_texCoordIndex)
                  .setCoord(new Coordinate().setPoint(this.Coordinate_10_81_point))
                  .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_10_82_point))))))
          .addChild(new HAnimJoint("hanim_r_knee").setName("r_knee").setCenter(doubleToFloat(-3.414000),doubleToFloat(14.950000),doubleToFloat(-0.454900)).setLlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]")))
            .addChild(new HAnimSegment("hanim_r_calf").setName("r_calf")
              .addChild(new Transform().setTranslation(doubleToFloat(-3.414000),doubleToFloat(14.950000),doubleToFloat(-0.454900))
                .addChild(new Shape()
                  .setAppearance(new Appearance()
                    .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588000),doubleToFloat(0.588000),doubleToFloat(0.588000)))
                    .setTexture(new ImageTexture()))
                  .setGeometry(new IndexedFaceSet().setCreaseAngle(1.57).setCoordIndex(this.IndexedFaceSet_10_90_coordIndex).setTexCoordIndex(this.IndexedFaceSet_10_90_texCoordIndex)
                    .setCoord(new Coordinate().setPoint(this.Coordinate_11_90_point))
                    .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_11_91_point))))))
            .addChild(new HAnimJoint("hanim_r_talocrural").setName("r_talocrural").setCenter(doubleToFloat(-3.180000),doubleToFloat(3.449000),doubleToFloat(-0.308800)).setLlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]")))
              .addChild(new HAnimSegment("hanim_r_talus").setName("r_talus")
                .addChild(new Transform().setTranslation(doubleToFloat(-3.180000),doubleToFloat(3.449000),doubleToFloat(-0.308800))
                  .addChild(new Shape()
                    .setAppearance(new Appearance()
                      .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588000),doubleToFloat(0.588000),doubleToFloat(0.588000)))
                      .setTexture(new ImageTexture()))
                    .setGeometry(new IndexedFaceSet().setCreaseAngle(1.57).setCoordIndex(this.IndexedFaceSet_11_99_coordIndex).setTexCoordIndex(this.IndexedFaceSet_11_99_texCoordIndex)
                      .setCoord(new Coordinate().setPoint(this.Coordinate_12_99_point))
                      .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_12_100_point))))))
              .addChild(new HAnimJoint("hanim_r_metatarsophalangeal_2").setName("r_metatarsophalangeal_2").setCenter(doubleToFloat(-3.180000),doubleToFloat(3.189000),doubleToFloat(0.972400)).setLlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]")))
                .addChild(new HAnimSegment("hanim_r_tarsal_proximal_phalanx_2").setName("r_tarsal_proximal_phalanx_2")
                  .addChild(new Transform().setTranslation(doubleToFloat(-3.180000),doubleToFloat(3.189000),doubleToFloat(0.972400))
                    .addChild(new Shape()
                      .setAppearance(new Appearance()
                        .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588000),doubleToFloat(0.588000),doubleToFloat(0.588000)))
                        .setTexture(new ImageTexture()))
                      .setGeometry(new IndexedFaceSet().setCreaseAngle(1.57).setCoordIndex(this.IndexedFaceSet_12_108_coordIndex).setTexCoordIndex(this.IndexedFaceSet_12_108_texCoordIndex)
                        .setCoord(new Coordinate().setPoint(this.Coordinate_13_108_point))
                        .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_13_109_point))))))))))
        .addChild(new HAnimJoint("hanim_sacroiliac").setName("sacroiliac").setCenter(doubleToFloat(0.0),doubleToFloat(27.070000),doubleToFloat(-0.317200)).setLlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]")))
          .addChild(new HAnimSegment("hanim_pelvis").setName("pelvis")
            .addChild(new Transform().setTranslation(doubleToFloat(0.0),doubleToFloat(27.070000),doubleToFloat(-0.317200))
              .addChild(new Shape()
                .setAppearance(new Appearance()
                  .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588000),doubleToFloat(0.588000),doubleToFloat(0.588000)))
                  .setTexture(new ImageTexture()))
                .setGeometry(new IndexedFaceSet().setCreaseAngle(1.57).setCoordIndex(this.IndexedFaceSet_9_121_coordIndex).setTexCoordIndex(this.IndexedFaceSet_9_121_texCoordIndex)
                  .setCoord(new Coordinate().setPoint(this.Coordinate_10_121_point))
                  .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_10_122_point))))))
          .addChild(new HAnimJoint("hanim_l_shoulder").setName("l_shoulder").setCenter(doubleToFloat(5.441000),doubleToFloat(45.830002),doubleToFloat(0.178600)).setLlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]")))
            .addChild(new HAnimSegment("hanim_l_upperarm").setName("l_upperarm")
              .addChild(new Transform().setTranslation(doubleToFloat(5.441000),doubleToFloat(45.830002),doubleToFloat(0.178600))
                .addChild(new Shape()
                  .setAppearance(new Appearance()
                    .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588000),doubleToFloat(0.588000),doubleToFloat(0.588000)))
                    .setTexture(new ImageTexture()))
                  .setGeometry(new IndexedFaceSet().setCreaseAngle(1.57).setCoordIndex(this.IndexedFaceSet_10_130_coordIndex).setTexCoordIndex(this.IndexedFaceSet_10_130_texCoordIndex)
                    .setCoord(new Coordinate().setPoint(this.Coordinate_11_130_point))
                    .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_11_131_point))))))
            .addChild(new HAnimJoint("hanim_l_elbow").setName("l_elbow").setCenter(doubleToFloat(6.823000),doubleToFloat(36.080002),doubleToFloat(0.086070)).setLlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]")))
              .addChild(new HAnimSegment("hanim_l_forearm").setName("l_forearm")
                .addChild(new Transform().setTranslation(doubleToFloat(6.823000),doubleToFloat(36.080002),doubleToFloat(0.086070))
                  .addChild(new Shape()
                    .setAppearance(new Appearance()
                      .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588000),doubleToFloat(0.588000),doubleToFloat(0.588000)))
                      .setTexture(new ImageTexture()))
                    .setGeometry(new IndexedFaceSet().setCreaseAngle(1.57).setCoordIndex(this.IndexedFaceSet_11_139_coordIndex).setTexCoordIndex(this.IndexedFaceSet_11_139_texCoordIndex)
                      .setCoord(new Coordinate().setPoint(this.Coordinate_12_139_point))
                      .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_12_140_point))))))
              .addChild(new HAnimJoint("hanim_l_radiocarpal").setName("l_radiocarpal").setCenter(doubleToFloat(6.915000),doubleToFloat(28.410000),doubleToFloat(0.375200)).setLlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]")))
                .addChild(new HAnimSegment("hanim_l_carpal").setName("l_carpal")
                  .addChild(new Transform().setTranslation(doubleToFloat(6.915000),doubleToFloat(28.410000),doubleToFloat(0.375200))
                    .addChild(new Shape()
                      .setAppearance(new Appearance()
                        .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588000),doubleToFloat(0.588000),doubleToFloat(0.588000)))
                        .setTexture(new ImageTexture()))
                      .setGeometry(new IndexedFaceSet().setCreaseAngle(1.57).setCoordIndex(this.IndexedFaceSet_12_148_coordIndex).setTexCoordIndex(this.IndexedFaceSet_12_148_texCoordIndex)
                        .setCoord(new Coordinate().setPoint(this.Coordinate_13_148_point))
                        .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_13_149_point)))))))))
          .addChild(new HAnimJoint("hanim_r_shoulder").setName("r_shoulder").setCenter(doubleToFloat(-5.441000),doubleToFloat(45.830002),doubleToFloat(0.178600)).setLlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]")))
            .addChild(new HAnimSegment("hanim_r_upperarm").setName("r_upperarm")
              .addChild(new Transform().setTranslation(doubleToFloat(-5.441000),doubleToFloat(45.830002),doubleToFloat(0.178600))
                .addChild(new Shape()
                  .setAppearance(new Appearance()
                    .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588000),doubleToFloat(0.588000),doubleToFloat(0.588000)))
                    .setTexture(new ImageTexture()))
                  .setGeometry(new IndexedFaceSet().setCreaseAngle(1.57).setCoordIndex(this.IndexedFaceSet_10_160_coordIndex).setTexCoordIndex(this.IndexedFaceSet_10_160_texCoordIndex)
                    .setCoord(new Coordinate().setPoint(this.Coordinate_11_160_point))
                    .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_11_161_point))))))
            .addChild(new HAnimJoint("hanim_r_elbow").setName("r_elbow").setCenter(doubleToFloat(-6.823000),doubleToFloat(36.080002),doubleToFloat(0.086070)).setLlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]")))
              .addChild(new HAnimSegment("hanim_r_forearm").setName("r_forearm")
                .addChild(new Transform().setTranslation(doubleToFloat(-6.823000),doubleToFloat(36.080002),doubleToFloat(0.086070))
                  .addChild(new Shape()
                    .setAppearance(new Appearance()
                      .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588000),doubleToFloat(0.588000),doubleToFloat(0.588000)))
                      .setTexture(new ImageTexture()))
                    .setGeometry(new IndexedFaceSet().setCreaseAngle(1.57).setCoordIndex(this.IndexedFaceSet_11_169_coordIndex).setTexCoordIndex(this.IndexedFaceSet_11_169_texCoordIndex)
                      .setCoord(new Coordinate().setPoint(this.Coordinate_12_169_point))
                      .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_12_170_point))))))
              .addChild(new HAnimJoint("hanim_r_radiocarpal").setName("r_radiocarpal").setCenter(doubleToFloat(-6.915000),doubleToFloat(28.410000),doubleToFloat(0.375200)).setLlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]")))
                .addChild(new HAnimSegment("hanim_r_carpal").setName("r_carpal")
                  .addChild(new Transform().setTranslation(doubleToFloat(-6.915000),doubleToFloat(28.410000),doubleToFloat(0.375200))
                    .addChild(new Shape()
                      .setAppearance(new Appearance()
                        .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588000),doubleToFloat(0.588000),doubleToFloat(0.588000)))
                        .setTexture(new ImageTexture()))
                      .setGeometry(new IndexedFaceSet().setCreaseAngle(1.57).setCoordIndex(this.IndexedFaceSet_12_178_coordIndex).setTexCoordIndex(this.IndexedFaceSet_12_178_texCoordIndex)
                        .setCoord(new Coordinate().setPoint(this.Coordinate_13_178_point))
                        .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_13_179_point)))))))))
          .addChild(new HAnimJoint("hanim_vl5").setName("vl5").setCenter(doubleToFloat(0.0),doubleToFloat(35.750000),doubleToFloat(-0.445000)).setLlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]")))
            .addChild(new HAnimSegment("hanim_l5").setName("l5")
              .addChild(new Transform().setTranslation(doubleToFloat(0.0),doubleToFloat(35.750000),doubleToFloat(-0.445000))
                .addChild(new Shape()
                  .setAppearance(new Appearance()
                    .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588000),doubleToFloat(0.588000),doubleToFloat(0.588000)))
                    .setTexture(new ImageTexture()))
                  .setGeometry(new IndexedFaceSet().setCreaseAngle(1.57).setCoordIndex(this.IndexedFaceSet_10_190_coordIndex).setTexCoordIndex(this.IndexedFaceSet_10_190_texCoordIndex)
                    .setCoord(new Coordinate().setPoint(this.Coordinate_11_190_point))
                    .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_11_191_point))))))
            .addChild(new HAnimJoint("hanim_skullbase").setName("skullbase").setCenter(doubleToFloat(0.0),doubleToFloat(50.470001),doubleToFloat(-0.148100)).setLlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]")))
              .addChild(new HAnimSegment("hanim_skull").setName("skull")
                .addChild(new Transform().setTranslation(doubleToFloat(0.0),doubleToFloat(50.470001),doubleToFloat(-0.148100))
                  .addChild(new Shape()
                    .setAppearance(new Appearance()
                      .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588000),doubleToFloat(0.588000),doubleToFloat(0.588000)))
                      .setTexture(new ImageTexture()))
                    .setGeometry(new IndexedFaceSet().setCreaseAngle(1.57).setCoordIndex(this.IndexedFaceSet_11_199_coordIndex).setTexCoordIndex(this.IndexedFaceSet_11_199_texCoordIndex)
                      .setCoord(new Coordinate().setPoint(this.Coordinate_12_199_point))
                      .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_12_200_point))))))))))
      .addJoints(new HAnimJoint().setLlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))))
      .addJoints(new HAnimJoint().setLlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))))
      .addJoints(new HAnimJoint().setLlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))))
      .addJoints(new HAnimJoint().setLlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))))
      .addJoints(new HAnimJoint().setLlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))))
      .addJoints(new HAnimJoint().setLlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))))
      .addJoints(new HAnimJoint().setLlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))))
      .addJoints(new HAnimJoint().setLlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))))
      .addJoints(new HAnimJoint().setLlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))))
      .addJoints(new HAnimJoint().setLlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))))
      .addJoints(new HAnimJoint().setLlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))))
      .addJoints(new HAnimJoint().setLlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))))
      .addJoints(new HAnimJoint().setLlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))))
      .addJoints(new HAnimJoint().setLlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))))
      .addJoints(new HAnimJoint().setLlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))))
      .addJoints(new HAnimJoint().setLlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))))
      .addJoints(new HAnimJoint().setLlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))))
      .addJoints(new HAnimJoint().setLlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0.0),doubleToFloat(0.0),doubleToFloat(0.0)], Java.type("float[]"))))
      .addSegments(new HAnimSegment())
      .addSegments(new HAnimSegment())
      .addSegments(new HAnimSegment())
      .addSegments(new HAnimSegment())
      .addSegments(new HAnimSegment())
      .addSegments(new HAnimSegment())
      .addSegments(new HAnimSegment())
      .addSegments(new HAnimSegment())
      .addSegments(new HAnimSegment())
      .addSegments(new HAnimSegment())
      .addSegments(new HAnimSegment())
      .addSegments(new HAnimSegment())
      .addSegments(new HAnimSegment())
      .addSegments(new HAnimSegment())
      .addSegments(new HAnimSegment())
      .addSegments(new HAnimSegment())
      .addSegments(new HAnimSegment())
      .addSegments(new HAnimSegment())));
  },
  // end of initialize() method


  /** Provide a shallow copy of the X3D model.
   * @return KoreanCharacter04Young model
   */
  getX3dModel : function()
  {	  
	  return this.x3dModel;
  },
  
  /** Indicate X3DJSAIL validation results for this X3D model.
   * @return validation results plus exception information, if any
   */
  validateSelf : function()
  {
	var       metaResult = "";
	var validationResult = "";
	var  exceptionResult = "";
	try
	{
		this.initialize();
		
		if ((this.getX3dModel() == null) || (this.getX3dModel().getHead() == null))
		{
			validationResult = "empty scene, nothing to validate. " + this.x3dModel.validate();
			return validationResult;
		}
		// first list informational meta elements of interest
		var metaList = this.getX3dModel().getHead().getMetaList();
		for (var m in metaList) {
			var metaObject = metaList[m];
			if (metaObject.getName() === metaObject.NAME_ERROR ||
				metaObject.getName() === metaObject.NAME_WARNING ||
				metaObject.getName() === metaObject.NAME_HINT ||
				metaObject.getName() === metaObject.NAME_INFO ||
				metaObject.getName() === metaObject.NAME_TODO)
			{
				metaResult += metaObject.toStringX3D();
			}
		}
		validationResult += this.x3dModel.validate(); // walk entire tree to validate correctness
	}
	catch (e)
	{
		exceptionResult = e; // report exception failures, if any
	}
	if  (metaResult === "" && exceptionResult === "" && validationResult === "")
	     return "success";
	else
	{
		var returnMessage = metaResult;
		if  (exceptionResult !== "" && validationResult !== "")
			returnMessage += "\n*** ";
		returnMessage += exceptionResult;
		if  (exceptionResult === "" && validationResult !== "")
			returnMessage = "\n" + returnMessage; // skip line before meta tags, etc.
		returnMessage += validationResult;
		return returnMessage;
	}
  },
    /** Default main() method provided for test purposes.
     * @param argv input parameters
     */
    main : function (argv)
    {
		var testObject = new KoreanCharacter04Young();
		print ("KoreanCharacter04Young execution self-validation test results: " + testObject.validateSelf());
	}
}
new KoreanCharacter04Young().main();