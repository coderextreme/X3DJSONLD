load('X3Dautoclass.js');

// Javadoc annotations follow, see below for source.
/**
 * <p> Articulated 3D game character designed with a general graphics tool, then converted into an X3D HAnim model. </p>
 <p> Related links: KoreanCharacter11Min.java source, <a href="https://www.web3d.org/x3d/content/examples/X3dResources.html" target="_blank">X3D Resources</a>, <a href="https://www.web3d.org/x3d/content/examples/X3dSceneAuthoringHints.html" target="_blank">X3D Scene Authoring Hints</a> and <a href="https://www.web3d.org/x3d/content/X3dTooltips.html" target="_blank">X3D Tooltips</a>. </p>
	<table style="color:black; border:0px solid; border-spacing:10px 0px;" summary="Scene Metadata">
		<tr style="background-color:silver; border-color:silver;">
			<td style="text-align:center; padding:10px 0px;"><i>meta tags</i></td>
			<td style="text-align:left;   padding:10px 0px;">net.x3djsonld.data.KoreanCharacter11Min&nbsp; Document Metadata </td>
		</tr>

		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> title </i> </td>
			<td> <a href="https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Characters/KoreanCharacter11Min.x3d">KoreanCharacter11Min.x3d</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> creator </i> </td>
			<td> Jin Hoon Lee and Min Joo Lee </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> translator </i> </td>
			<td> Chul Hee Jung and Myeong Won Lee </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> created </i> </td>
			<td> 31 March 2011 </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> translated </i> </td>
			<td> 1 November 2014 </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> modified </i> </td>
			<td> 23 December 2021 </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> description </i> </td>
			<td> Articulated 3D game character designed with a general graphics tool, then converted into an X3D HAnim model. </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> reference </i> </td>
			<td> KoreanCharacter00ReadMe.txt </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> reference </i> </td>
			<td> <a href="https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Characters/KoreanCharacterHumanMotion_Infotech2014_140706.pdf">KoreanCharacterHumanMotion_Infotech2014_140706.pdf</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> reference </i> </td>
			<td> <a href="https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Characters/KoreanCharactersIllustrated.pdf">KoreanCharactersIllustrated.pdf</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> identifier </i> </td>
			<td> <a href="https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Characters/KoreanCharacter11Min.x3d" target="_blank">https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Characters/KoreanCharacter11Min.x3d</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> generator </i> </td>
			<td> 3DS MAX, <a href="http://www.autodesk.com/products/autodesk-3ds-max/overview" target="_blank">http://www.autodesk.com/products/autodesk-3ds-max/overview</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> generator </i> </td>
			<td> Suwon University HAnim Editor </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> generator </i> </td>
			<td> Gnu Image Manipulation Program, <a href="http://www.gimp.org" target="_blank">http://www.gimp.org</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> generator </i> </td>
			<td> X3D-Edit 3.3, <a href="https://savage.nps.edu/X3D-Edit" target="_blank">https://savage.nps.edu/X3D-Edit</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> license </i> </td>
			<td> <a href="https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Characters/../license.html">../license.html</a> </td>
		</tr>
		<tr style="background-color:silver; border-color:silver;">
			<td style="text-align:center;" colspan="2">  &nbsp; </td>
		</tr>
	</table>

	<p>
		This program uses the
		<a href="https://www.web3d.org/specifications/java/X3DJSAIL.html" target="_blank">X3D Java Scene Access Interface Library (X3DJSAIL)</a>.
		It has been produced using the 
		<a href="https://www.web3d.org/x3d/stylesheets/X3dToES5.xslt" target="_blank">X3dToES5.xslt</a>
		stylesheet to create ES5 source code from an <code>.x3d</code> scene.
	</p>

	* @author Jin Hoon Lee and Min Joo Lee
 */

function KoreanCharacter11Min
  /** Default constructor to create this object. */
  ()
  {
    /** The initialized model object, created within initialize() method. */
    this.x3dModel = {};
    this.initialize();
    return this;
  }
  function doubleToFloat(d) {
    if (Float32Array) {
        return new Float32Array([d])[0];
    }
  }
KoreanCharacter11Min.prototype = {
  /** Create and initialize the X3D model. */
  initialize : function ()
  {

	/** Large attribute array: MetadataSet reference field, scene-graph level=4, element #22, 1 total value */
	this.MetadataSet_HAnimHumanoid.info_4_22_reference = new SFString("https://www.web3d.org/documents/specifications/19774/V2.0/Architecture/ObjectInterfaces.html#Humanoid");

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=8, element #32, 624 total numbers */
	this.IndexedFaceSet_8_32_coordIndex = new MFInt32(Java.to([17,0,6,-1,6,8,17,-1,27,28,10,-1,10,12,27,-1,14,5,3,-1,3,12,14,-1,15,8,6,-1,6,1,15,-1,18,31,29,-1,29,2,18,-1,17,19,4,-1,4,0,17,-1,15,1,5,-1,5,14,15,-1,9,16,18,-1,18,19,9,-1,11,60,61,-1,61,7,11,-1,7,61,30,-1,30,35,7,-1,16,63,31,-1,31,18,16,-1,13,9,19,-1,19,17,13,-1,2,4,19,-1,19,18,2,-1,8,13,17,-1,35,30,63,-1,63,16,35,-1,12,3,65,-1,65,27,12,-1,11,10,28,-1,28,60,11,-1,3,21,67,-1,67,65,3,-1,0,26,20,-1,20,6,0,-1,5,22,21,-1,21,3,5,-1,1,23,22,-1,22,5,1,-1,1,6,20,-1,20,23,1,-1,2,29,32,-1,32,24,2,-1,4,2,24,-1,24,25,4,-1,0,4,25,-1,25,26,0,-1,21,33,67,-1,26,33,20,-1,22,33,21,-1,23,33,22,-1,20,33,23,-1,32,33,24,-1,24,33,25,-1,25,33,26,-1,36,13,8,-1,8,37,36,-1,34,9,13,-1,13,36,34,-1,38,15,14,-1,14,39,38,-1,37,8,15,-1,15,38,37,-1,34,35,16,-1,12,39,14,-1,11,7,40,-1,7,35,40,-1,35,34,40,-1,34,36,40,-1,36,37,40,-1,37,38,40,-1,38,39,40,-1,39,10,40,-1,10,11,40,-1,41,44,43,-1,43,42,41,-1,27,45,46,-1,46,28,27,-1,47,45,49,-1,49,48,47,-1,51,50,43,-1,43,44,51,-1,53,52,29,-1,29,31,53,-1,41,42,55,-1,55,54,41,-1,51,47,48,-1,48,50,51,-1,56,54,53,-1,53,57,56,-1,59,58,61,-1,61,60,59,-1,58,62,30,-1,30,61,58,-1,57,53,31,-1,31,63,57,-1,64,41,54,-1,54,56,64,-1,52,53,54,-1,54,55,52,-1,44,41,64,-1,62,57,63,-1,63,30,62,-1,45,27,65,-1,65,49,45,-1,59,60,28,-1,28,46,59,-1,49,65,67,-1,67,66,49,-1,42,43,69,-1,69,68,42,-1,48,49,66,-1,66,70,48,-1,50,48,70,-1,70,71,50,-1,50,71,69,-1,69,43,50,-1,52,72,32,-1,32,29,52,-1,55,73,72,-1,72,52,55,-1,42,68,73,-1,73,55,42,-1,66,67,33,-1,68,69,33,-1,70,66,33,-1,71,70,33,-1,69,71,33,-1,32,72,33,-1,72,73,33,-1,73,68,33,-1,74,75,44,-1,44,64,74,-1,76,74,64,-1,64,56,76,-1,77,78,47,-1,47,51,77,-1,75,77,51,-1,51,44,75,-1,56,57,76,-1,45,78,46,-1,59,79,58,-1,58,79,62,-1,62,79,76,-1,76,79,74,-1,74,79,75,-1,75,79,77,-1,77,79,78,-1,78,79,46,-1,46,79,59,-1,16,9,34,-1,57,62,76,-1,12,10,39,-1,45,47,78,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=8, element #32, 624 total numbers */
	this.IndexedFaceSet_8_32_texCoordIndex = new MFInt32(Java.to([0,1,2,-1,2,12,0,-1,4,5,6,-1,6,3,4,-1,7,8,9,-1,9,3,7,-1,11,26,27,-1,27,10,11,-1,14,15,16,-1,16,13,14,-1,0,17,18,-1,18,1,0,-1,11,10,8,-1,8,7,11,-1,19,20,14,-1,14,17,19,-1,22,23,24,-1,24,21,22,-1,21,24,29,-1,29,25,21,-1,20,30,15,-1,15,14,20,-1,33,19,17,-1,17,0,33,-1,13,18,17,-1,17,14,13,-1,12,33,0,-1,25,29,30,-1,30,20,25,-1,3,9,28,-1,28,4,3,-1,32,6,5,-1,5,31,32,-1,9,39,40,-1,40,28,9,-1,1,34,35,-1,35,2,1,-1,8,41,39,-1,39,9,8,-1,10,47,41,-1,41,8,10,-1,10,27,48,-1,48,47,10,-1,13,16,36,-1,36,37,13,-1,18,13,37,-1,37,38,18,-1,1,18,38,-1,38,34,1,-1,39,49,40,-1,34,42,35,-1,41,49,39,-1,47,49,41,-1,48,49,47,-1,36,42,37,-1,37,42,38,-1,38,42,34,-1,43,33,12,-1,12,44,43,-1,45,19,33,-1,33,43,45,-1,50,11,7,-1,7,56,50,-1,74,26,11,-1,11,50,74,-1,45,25,20,-1,3,56,7,-1,22,21,46,-1,21,25,46,-1,25,45,46,-1,45,43,46,-1,43,44,46,-1,74,50,75,-1,50,56,75,-1,56,6,75,-1,6,32,75,-1,51,52,53,-1,53,54,51,-1,4,76,77,-1,77,5,4,-1,80,76,78,-1,78,79,80,-1,84,81,82,-1,82,83,84,-1,57,55,16,-1,16,15,57,-1,51,54,58,-1,58,59,51,-1,84,80,79,-1,79,81,84,-1,60,59,57,-1,57,61,60,-1,63,62,24,-1,24,23,63,-1,62,64,29,-1,29,24,62,-1,61,57,15,-1,15,30,61,-1,65,51,59,-1,59,60,65,-1,55,57,59,-1,59,58,55,-1,52,51,65,-1,64,61,30,-1,30,29,64,-1,76,4,28,-1,28,78,76,-1,85,31,5,-1,5,77,85,-1,78,28,40,-1,40,86,78,-1,54,53,66,-1,66,67,54,-1,79,78,86,-1,86,87,79,-1,81,79,87,-1,87,88,81,-1,81,88,89,-1,89,82,81,-1,55,68,36,-1,36,16,55,-1,58,69,68,-1,68,55,58,-1,54,67,69,-1,69,58,54,-1,86,40,49,-1,67,66,42,-1,87,86,49,-1,88,87,49,-1,89,88,49,-1,36,68,42,-1,68,69,42,-1,69,67,42,-1,70,71,52,-1,52,65,70,-1,72,70,65,-1,65,60,72,-1,90,91,80,-1,80,84,90,-1,92,90,84,-1,84,83,92,-1,60,61,72,-1,76,91,77,-1,63,73,62,-1,62,73,64,-1,64,73,72,-1,72,73,70,-1,70,73,71,-1,92,93,90,-1,90,93,91,-1,91,93,77,-1,77,93,85,-1,20,19,45,-1,61,64,72,-1,3,6,56,-1,76,80,91,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=9, element #32, 240 total numbers made up of 80 3-tuple values */
	this.Coordinate_9_32_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(1.0650),doubleToFloat(0.4278),doubleToFloat(-0.4753),doubleToFloat(1.1570),doubleToFloat(0.4279),doubleToFloat(0.4804),doubleToFloat(0.3800),doubleToFloat(0.4279),doubleToFloat(-0.7942),doubleToFloat(0.4327),doubleToFloat(0.4280),doubleToFloat(0.8379),doubleToFloat(0.7564),doubleToFloat(0.4279),doubleToFloat(-0.6706),doubleToFloat(0.8493),doubleToFloat(0.4280),doubleToFloat(0.7485),doubleToFloat(1.2360),doubleToFloat(0.4279),doubleToFloat(0.0276),doubleToFloat(0.1891),doubleToFloat(-0.6124),doubleToFloat(-0.4081),doubleToFloat(1.3140),doubleToFloat(0.0475),doubleToFloat(0.0276),doubleToFloat(0.7922),doubleToFloat(-0.2644),doubleToFloat(-0.7720)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.3243),doubleToFloat(-0.4708),doubleToFloat(0.6320),doubleToFloat(0.1487),doubleToFloat(-0.6933),doubleToFloat(0.0276),doubleToFloat(0.4321),doubleToFloat(-0.0582),doubleToFloat(0.8517),doubleToFloat(1.1090),doubleToFloat(-0.1342),doubleToFloat(-0.5169),doubleToFloat(0.8493),doubleToFloat(-0.0340),doubleToFloat(0.7754),doubleToFloat(1.2120),doubleToFloat(0.0133),doubleToFloat(0.5223),doubleToFloat(0.4022),doubleToFloat(-0.3056),doubleToFloat(-0.8220),doubleToFloat(1.0890),doubleToFloat(0.1786),doubleToFloat(-0.5113),doubleToFloat(0.3911),doubleToFloat(0.1084),doubleToFloat(-0.8711),doubleToFloat(0.7658),doubleToFloat(0.1372),doubleToFloat(-0.7490)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(1.0980),doubleToFloat(0.6332),doubleToFloat(0.0276),doubleToFloat(0.3576),doubleToFloat(0.6335),doubleToFloat(0.7143),doubleToFloat(0.7709),doubleToFloat(0.6335),doubleToFloat(0.6183),doubleToFloat(1.0900),doubleToFloat(0.6333),doubleToFloat(0.3331),doubleToFloat(0.3233),doubleToFloat(0.6330),doubleToFloat(-0.5737),doubleToFloat(0.6544),doubleToFloat(0.6330),doubleToFloat(-0.4902),doubleToFloat(0.9160),doubleToFloat(0.6331),doubleToFloat(-0.3319),doubleToFloat(0.0000),doubleToFloat(-0.0753),doubleToFloat(0.8711),doubleToFloat(-0.0000),doubleToFloat(-0.5237),doubleToFloat(0.6522),doubleToFloat(0.0000),doubleToFloat(0.4278),doubleToFloat(-0.8027)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.0000),doubleToFloat(-0.5042),doubleToFloat(-0.6412),doubleToFloat(0.0000),doubleToFloat(0.0984),doubleToFloat(-0.8582),doubleToFloat(0.0000),doubleToFloat(0.6330),doubleToFloat(-0.5976),doubleToFloat(0.0000),doubleToFloat(0.7811),doubleToFloat(0.0276),doubleToFloat(0.8079),doubleToFloat(-0.4859),doubleToFloat(-0.7545),doubleToFloat(0.3777),doubleToFloat(-0.5158),doubleToFloat(-0.6424),doubleToFloat(1.1670),doubleToFloat(-0.3819),doubleToFloat(-0.5223),doubleToFloat(1.3380),doubleToFloat(-0.3144),doubleToFloat(0.0276),doubleToFloat(1.2220),doubleToFloat(-0.3169),doubleToFloat(0.5626),doubleToFloat(0.8493),doubleToFloat(-0.3389),doubleToFloat(0.7954)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.8539),doubleToFloat(-0.7811),doubleToFloat(0.0223),doubleToFloat(-1.0890),doubleToFloat(0.1786),doubleToFloat(-0.5113),doubleToFloat(-1.0650),doubleToFloat(0.4278),doubleToFloat(-0.4753),doubleToFloat(-1.2360),doubleToFloat(0.4279),doubleToFloat(0.0276),doubleToFloat(-1.3140),doubleToFloat(0.0475),doubleToFloat(0.0276),doubleToFloat(-0.4321),doubleToFloat(-0.0582),doubleToFloat(0.8517),doubleToFloat(-0.3243),doubleToFloat(-0.4708),doubleToFloat(0.6320),doubleToFloat(-0.8493),doubleToFloat(-0.0340),doubleToFloat(0.7754),doubleToFloat(-0.8493),doubleToFloat(0.4280),doubleToFloat(0.7485),doubleToFloat(-0.4327),doubleToFloat(0.4280),doubleToFloat(0.8379)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.1570),doubleToFloat(0.4279),doubleToFloat(0.4804),doubleToFloat(-1.2120),doubleToFloat(0.0133),doubleToFloat(0.5223),doubleToFloat(-0.3800),doubleToFloat(0.4279),doubleToFloat(-0.7942),doubleToFloat(-0.3911),doubleToFloat(0.1084),doubleToFloat(-0.8711),doubleToFloat(-0.7658),doubleToFloat(0.1372),doubleToFloat(-0.7490),doubleToFloat(-0.7564),doubleToFloat(0.4279),doubleToFloat(-0.6706),doubleToFloat(-0.7922),doubleToFloat(-0.2644),doubleToFloat(-0.7720),doubleToFloat(-0.4022),doubleToFloat(-0.3056),doubleToFloat(-0.8220),doubleToFloat(-0.1891),doubleToFloat(-0.6124),doubleToFloat(-0.4081),doubleToFloat(-0.1487),doubleToFloat(-0.6933),doubleToFloat(0.0276)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.0000),doubleToFloat(-0.6758),doubleToFloat(0.0276),doubleToFloat(0.0000),doubleToFloat(-0.5948),doubleToFloat(-0.4427),doubleToFloat(-0.3777),doubleToFloat(-0.5158),doubleToFloat(-0.6424),doubleToFloat(0.0000),doubleToFloat(-0.2427),doubleToFloat(-0.8343),doubleToFloat(-1.1090),doubleToFloat(-0.1342),doubleToFloat(-0.5169),doubleToFloat(0.0000),doubleToFloat(0.4280),doubleToFloat(0.8585),doubleToFloat(-0.3576),doubleToFloat(0.6335),doubleToFloat(0.7143),doubleToFloat(0.0000),doubleToFloat(0.6335),doubleToFloat(0.7001),doubleToFloat(-0.9160),doubleToFloat(0.6331),doubleToFloat(-0.3319),doubleToFloat(-1.0980),doubleToFloat(0.6332),doubleToFloat(0.0276)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.7709),doubleToFloat(0.6335),doubleToFloat(0.6183),doubleToFloat(-1.0900),doubleToFloat(0.6333),doubleToFloat(0.3331),doubleToFloat(-0.3233),doubleToFloat(0.6330),doubleToFloat(-0.5737),doubleToFloat(-0.6544),doubleToFloat(0.6330),doubleToFloat(-0.4902),doubleToFloat(-1.1670),doubleToFloat(-0.3819),doubleToFloat(-0.5223),doubleToFloat(-1.3380),doubleToFloat(-0.3144),doubleToFloat(0.0276),doubleToFloat(-0.8079),doubleToFloat(-0.4859),doubleToFloat(-0.7545),doubleToFloat(-1.2220),doubleToFloat(-0.3169),doubleToFloat(0.5626),doubleToFloat(-0.8493),doubleToFloat(-0.3389),doubleToFloat(0.7954),doubleToFloat(-0.8539),doubleToFloat(-0.7811),doubleToFloat(0.0223)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=9, element #33, 188 total numbers made up of 94 2-tuple values */
	this.TextureCoordinate_9_33_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.5818),doubleToFloat(0.0856),doubleToFloat(0.5841),doubleToFloat(0.1063),doubleToFloat(0.5680),doubleToFloat(0.1063),doubleToFloat(0.4728),doubleToFloat(0.0659),doubleToFloat(0.4321),doubleToFloat(0.0645),doubleToFloat(0.4321),doubleToFloat(0.0274),doubleToFloat(0.4626),doubleToFloat(0.0318),doubleToFloat(0.5120),doubleToFloat(0.0680),doubleToFloat(0.5120),doubleToFloat(0.1061),doubleToFloat(0.4728),doubleToFloat(0.1061)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5409),doubleToFloat(0.1061),doubleToFloat(0.5462),doubleToFloat(0.0719),doubleToFloat(0.5606),doubleToFloat(0.0748),doubleToFloat(0.6485),doubleToFloat(0.1063),doubleToFloat(0.6475),doubleToFloat(0.0798),doubleToFloat(0.6843),doubleToFloat(0.0790),doubleToFloat(0.6843),doubleToFloat(0.1063),doubleToFloat(0.6122),doubleToFloat(0.0822),doubleToFloat(0.6131),doubleToFloat(0.1063),doubleToFloat(0.6097),doubleToFloat(0.0490)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.6464),doubleToFloat(0.0456),doubleToFloat(0.6665),doubleToFloat(0.0202),doubleToFloat(0.6703),doubleToFloat(0.0135),doubleToFloat(0.6843),doubleToFloat(0.0149),doubleToFloat(0.6843),doubleToFloat(0.0216),doubleToFloat(0.6487),doubleToFloat(0.0282),doubleToFloat(0.5558),doubleToFloat(0.0747),doubleToFloat(0.5484),doubleToFloat(0.1062),doubleToFloat(0.4321),doubleToFloat(0.1061),doubleToFloat(0.6843),doubleToFloat(0.0291)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.6843),doubleToFloat(0.0508),doubleToFloat(0.4321),doubleToFloat(0.0148),doubleToFloat(0.4461),doubleToFloat(0.0134),doubleToFloat(0.5799),doubleToFloat(0.0597),doubleToFloat(0.5981),doubleToFloat(0.1233),doubleToFloat(0.5809),doubleToFloat(0.1233),doubleToFloat(0.6843),doubleToFloat(0.1233),doubleToFloat(0.6539),doubleToFloat(0.1233),doubleToFloat(0.6227),doubleToFloat(0.1233),doubleToFloat(0.4657),doubleToFloat(0.1231)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4321),doubleToFloat(0.1231),doubleToFloat(0.5046),doubleToFloat(0.1231),doubleToFloat(0.6843),doubleToFloat(0.1355),doubleToFloat(0.5745),doubleToFloat(0.0392),doubleToFloat(0.5584),doubleToFloat(0.0448),doubleToFloat(0.6083),doubleToFloat(0.0306),doubleToFloat(0.6039),doubleToFloat(0.0062),doubleToFloat(0.5347),doubleToFloat(0.1231),doubleToFloat(0.5354),doubleToFloat(0.1232),doubleToFloat(0.4321),doubleToFloat(0.1354)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5471),doubleToFloat(0.0445),doubleToFloat(0.7867),doubleToFloat(0.0856),doubleToFloat(0.8080),doubleToFloat(0.0748),doubleToFloat(0.8006),doubleToFloat(0.1063),doubleToFloat(0.7845),doubleToFloat(0.1063),doubleToFloat(0.7200),doubleToFloat(0.1063),doubleToFloat(0.5120),doubleToFloat(0.0427),doubleToFloat(0.7211),doubleToFloat(0.0798),doubleToFloat(0.7555),doubleToFloat(0.1063),doubleToFloat(0.7563),doubleToFloat(0.0822)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7588),doubleToFloat(0.0490),doubleToFloat(0.7221),doubleToFloat(0.0456),doubleToFloat(0.7021),doubleToFloat(0.0202),doubleToFloat(0.6983),doubleToFloat(0.0135),doubleToFloat(0.7198),doubleToFloat(0.0282),doubleToFloat(0.7886),doubleToFloat(0.0597),doubleToFloat(0.7876),doubleToFloat(0.1233),doubleToFloat(0.7705),doubleToFloat(0.1233),doubleToFloat(0.7147),doubleToFloat(0.1233),doubleToFloat(0.7459),doubleToFloat(0.1233)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7941),doubleToFloat(0.0392),doubleToFloat(0.8102),doubleToFloat(0.0448),doubleToFloat(0.7603),doubleToFloat(0.0306),doubleToFloat(0.7646),doubleToFloat(0.0062),doubleToFloat(0.5580),doubleToFloat(0.0447),doubleToFloat(0.5125),doubleToFloat(0.0061),doubleToFloat(0.3914),doubleToFloat(0.0659),doubleToFloat(0.4016),doubleToFloat(0.0318),doubleToFloat(0.3914),doubleToFloat(0.1061),doubleToFloat(0.3522),doubleToFloat(0.1061)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.3522),doubleToFloat(0.0680),doubleToFloat(0.3233),doubleToFloat(0.1061),doubleToFloat(0.3158),doubleToFloat(0.1062),doubleToFloat(0.3084),doubleToFloat(0.0747),doubleToFloat(0.3180),doubleToFloat(0.0719),doubleToFloat(0.4181),doubleToFloat(0.0134),doubleToFloat(0.3984),doubleToFloat(0.1231),doubleToFloat(0.3595),doubleToFloat(0.1231),doubleToFloat(0.3295),doubleToFloat(0.1231),doubleToFloat(0.3287),doubleToFloat(0.1232)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.3171),doubleToFloat(0.0445),doubleToFloat(0.3522),doubleToFloat(0.0427),doubleToFloat(0.3062),doubleToFloat(0.0447),doubleToFloat(0.3517),doubleToFloat(0.0061)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=9, element #41, 424 total numbers */
	this.IndexedFaceSet_9_41_coordIndex = new MFInt32(Java.to([15,14,6,-1,6,10,15,-1,1,0,7,-1,7,8,1,-1,2,1,8,-1,8,9,2,-1,3,15,10,-1,10,11,3,-1,4,3,11,-1,11,12,4,-1,5,4,12,-1,12,13,5,-1,0,5,13,-1,13,7,0,-1,14,34,6,-1,10,6,32,-1,32,27,10,-1,8,7,24,-1,24,25,8,-1,9,8,25,-1,25,26,9,-1,10,27,28,-1,28,11,10,-1,11,28,29,-1,29,12,11,-1,12,29,30,-1,30,13,12,-1,13,30,24,-1,24,7,13,-1,6,9,26,-1,26,32,6,-1,0,36,35,-1,35,5,0,-1,1,37,36,-1,36,0,1,-1,2,38,37,-1,37,1,2,-1,34,43,38,-1,38,2,34,-1,39,14,15,-1,15,40,39,-1,40,15,3,-1,3,41,40,-1,42,41,3,-1,3,4,42,-1,5,35,42,-1,42,4,5,-1,17,18,51,-1,51,52,17,-1,18,19,47,-1,47,51,18,-1,19,31,50,-1,50,47,19,-1,20,21,54,-1,54,53,20,-1,21,22,48,-1,48,54,21,-1,23,49,48,-1,48,22,23,-1,17,52,49,-1,49,23,17,-1,51,25,24,-1,24,52,51,-1,26,25,51,-1,51,47,26,-1,27,32,50,-1,50,53,27,-1,28,27,53,-1,53,44,28,-1,45,44,54,-1,54,48,45,-1,49,46,45,-1,45,48,49,-1,52,46,49,-1,50,31,20,-1,20,53,50,-1,32,26,47,-1,47,50,32,-1,18,17,33,-1,17,23,33,-1,23,22,33,-1,22,21,33,-1,21,20,33,-1,20,31,33,-1,31,19,33,-1,19,18,33,-1,34,14,39,-1,39,43,34,-1,34,2,9,-1,9,6,34,-1,36,16,35,-1,37,16,36,-1,38,16,37,-1,43,16,38,-1,40,16,39,-1,41,16,40,-1,42,16,41,-1,35,16,42,-1,39,16,43,-1,45,29,28,-1,28,44,45,-1,46,30,29,-1,29,45,46,-1,52,24,30,-1,30,46,52,-1,53,54,44,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=9, element #41, 424 total numbers */
	this.IndexedFaceSet_9_41_texCoordIndex = new MFInt32(Java.to([6,7,8,-1,8,9,6,-1,2,50,53,-1,53,10,2,-1,0,2,10,-1,10,11,0,-1,4,51,52,-1,52,12,4,-1,3,4,12,-1,12,13,3,-1,5,3,13,-1,13,14,5,-1,50,5,14,-1,14,53,50,-1,7,1,8,-1,9,8,15,-1,15,16,9,-1,10,53,55,-1,55,17,10,-1,11,10,17,-1,17,18,11,-1,52,54,19,-1,19,12,52,-1,12,19,20,-1,20,13,12,-1,13,20,21,-1,21,14,13,-1,14,21,55,-1,55,53,14,-1,8,11,18,-1,18,15,8,-1,50,56,23,-1,23,5,50,-1,2,24,22,-1,22,50,2,-1,0,25,24,-1,24,2,0,-1,1,26,25,-1,25,0,1,-1,28,7,6,-1,6,27,28,-1,57,51,4,-1,4,29,57,-1,30,29,4,-1,4,3,30,-1,5,23,30,-1,30,3,5,-1,31,33,35,-1,35,37,31,-1,33,38,39,-1,39,35,33,-1,38,41,43,-1,43,39,38,-1,48,58,60,-1,60,61,48,-1,58,62,64,-1,64,60,58,-1,65,66,64,-1,64,62,65,-1,31,37,66,-1,66,65,31,-1,32,17,55,-1,55,59,32,-1,18,17,32,-1,32,34,18,-1,16,15,36,-1,36,40,16,-1,19,54,69,-1,69,45,19,-1,46,45,68,-1,68,42,46,-1,44,47,46,-1,46,42,44,-1,59,47,44,-1,43,41,48,-1,48,61,43,-1,15,18,34,-1,34,36,15,-1,33,31,67,-1,31,65,67,-1,65,62,67,-1,62,58,67,-1,58,48,67,-1,48,41,67,-1,41,38,67,-1,38,33,67,-1,1,7,28,-1,28,26,1,-1,1,0,11,-1,11,8,1,-1,56,63,23,-1,24,49,22,-1,25,49,24,-1,26,49,25,-1,27,49,28,-1,29,63,57,-1,30,63,29,-1,23,63,30,-1,28,49,26,-1,46,20,19,-1,19,45,46,-1,47,21,20,-1,20,46,47,-1,59,55,21,-1,21,47,59,-1,69,68,45,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=10, element #41, 165 total numbers made up of 55 3-tuple values */
	this.Coordinate_10_41_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(2.6720),doubleToFloat(-0.3788),doubleToFloat(0.1246),doubleToFloat(1.8980),doubleToFloat(-0.6834),doubleToFloat(-2.3580),doubleToFloat(0.2782),doubleToFloat(-1.1530),doubleToFloat(-3.4070),doubleToFloat(-1.9050),doubleToFloat(-1.0760),doubleToFloat(2.8540),doubleToFloat(0.4654),doubleToFloat(-0.4893),doubleToFloat(3.5920),doubleToFloat(2.1500),doubleToFloat(-0.3899),doubleToFloat(2.5400),doubleToFloat(-1.9080),doubleToFloat(-3.1770),doubleToFloat(-2.4250),doubleToFloat(2.7090),doubleToFloat(-2.6900),doubleToFloat(0.1246),doubleToFloat(1.9760),doubleToFloat(-2.8080),doubleToFloat(-2.2680),doubleToFloat(0.3775),doubleToFloat(-2.9970),doubleToFloat(-3.1890)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-2.4460),doubleToFloat(-3.1930),doubleToFloat(0.1246),doubleToFloat(-1.8800),doubleToFloat(-3.1460),doubleToFloat(2.7210),doubleToFloat(0.4072),doubleToFloat(-2.9460),doubleToFloat(3.4930),doubleToFloat(2.1910),doubleToFloat(-2.7550),doubleToFloat(2.5310),doubleToFloat(-2.5150),doubleToFloat(-1.7060),doubleToFloat(-1.8430),doubleToFloat(-2.7020),doubleToFloat(-1.7070),doubleToFloat(0.1246),doubleToFloat(-0.6965),doubleToFloat(2.9790),doubleToFloat(0.1569),doubleToFloat(2.0990),doubleToFloat(-15.6000),doubleToFloat(0.1207),doubleToFloat(1.6760),doubleToFloat(-15.6000),doubleToFloat(-1.3530),doubleToFloat(0.3545),doubleToFloat(-15.6000),doubleToFloat(-1.9720)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.5300),doubleToFloat(-15.6000),doubleToFloat(0.1510),doubleToFloat(-1.0840),doubleToFloat(-15.6000),doubleToFloat(1.8020),doubleToFloat(0.3545),doubleToFloat(-15.6000),doubleToFloat(2.3710),doubleToFloat(1.6790),doubleToFloat(-15.6000),doubleToFloat(1.8670),doubleToFloat(2.6320),doubleToFloat(-8.3740),doubleToFloat(0.1246),doubleToFloat(1.9810),doubleToFloat(-8.4460),doubleToFloat(-1.9850),doubleToFloat(0.3067),doubleToFloat(-8.5130),doubleToFloat(-2.7710),doubleToFloat(-2.1580),doubleToFloat(-8.6990),doubleToFloat(0.1246),doubleToFloat(-1.6830),doubleToFloat(-8.6590),doubleToFloat(2.3270),doubleToFloat(0.3670),doubleToFloat(-8.5810),doubleToFloat(3.0880)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(2.1810),doubleToFloat(-8.4270),doubleToFloat(2.3750),doubleToFloat(-1.1100),doubleToFloat(-15.6000),doubleToFloat(-1.3380),doubleToFloat(-1.7500),doubleToFloat(-8.6940),doubleToFloat(-1.9160),doubleToFloat(0.3545),doubleToFloat(-16.0500),doubleToFloat(0.1404),doubleToFloat(-1.6640),doubleToFloat(-1.5210),doubleToFloat(-2.9010),doubleToFloat(0.9279),doubleToFloat(2.8850),doubleToFloat(1.7240),doubleToFloat(1.2840),doubleToFloat(2.9970),doubleToFloat(0.1569),doubleToFloat(0.6394),doubleToFloat(2.6720),doubleToFloat(-1.7400),doubleToFloat(-0.0838),doubleToFloat(2.3020),doubleToFloat(-2.4790),doubleToFloat(-2.0830),doubleToFloat(1.0440),doubleToFloat(-1.6180)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-2.4640),doubleToFloat(0.6629),doubleToFloat(0.1614),doubleToFloat(-1.5010),doubleToFloat(1.6140),doubleToFloat(2.5280),doubleToFloat(-0.0381),doubleToFloat(2.4620),doubleToFloat(2.4480),doubleToFloat(-1.5090),doubleToFloat(1.6060),doubleToFloat(-2.5090),doubleToFloat(-1.5240),doubleToFloat(-13.9900),doubleToFloat(2.0190),doubleToFloat(0.3608),doubleToFloat(-13.8100),doubleToFloat(2.7570),doubleToFloat(2.0230),doubleToFloat(-13.8700),doubleToFloat(2.0430),doubleToFloat(0.3545),doubleToFloat(-14.9900),doubleToFloat(-2.2670),doubleToFloat(0.3545),doubleToFloat(-15.0000),doubleToFloat(2.8260),doubleToFloat(1.8650),doubleToFloat(-14.9900),doubleToFloat(2.1100)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.3660),doubleToFloat(-14.9900),doubleToFloat(-1.5970),doubleToFloat(1.8650),doubleToFloat(-14.9900),doubleToFloat(-1.5970),doubleToFloat(2.4030),doubleToFloat(-14.9900),doubleToFloat(0.1287),doubleToFloat(-1.8560),doubleToFloat(-14.9900),doubleToFloat(0.1287),doubleToFloat(-1.3660),doubleToFloat(-14.9900),doubleToFloat(2.1100)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=10, element #42, 140 total numbers made up of 70 2-tuple values */
	this.TextureCoordinate_10_42_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.5137),doubleToFloat(0.5362),doubleToFloat(0.5435),doubleToFloat(0.5314),doubleToFloat(0.4871),doubleToFloat(0.5460),doubleToFloat(0.3946),doubleToFloat(0.5441),doubleToFloat(0.3574),doubleToFloat(0.5390),doubleToFloat(0.4222),doubleToFloat(0.5494),doubleToFloat(0.5949),doubleToFloat(0.5388),doubleToFloat(0.5640),doubleToFloat(0.5292),doubleToFloat(0.5509),doubleToFloat(0.5109),doubleToFloat(0.5881),doubleToFloat(0.5171)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4869),doubleToFloat(0.5205),doubleToFloat(0.5135),doubleToFloat(0.5161),doubleToFloat(0.3560),doubleToFloat(0.5155),doubleToFloat(0.3920),doubleToFloat(0.5160),doubleToFloat(0.4207),doubleToFloat(0.5192),doubleToFloat(0.5494),doubleToFloat(0.4352),doubleToFloat(0.5806),doubleToFloat(0.4370),doubleToFloat(0.4872),doubleToFloat(0.4382),doubleToFloat(0.5154),doubleToFloat(0.4372),doubleToFloat(0.3588),doubleToFloat(0.4376)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.3915),doubleToFloat(0.4370),doubleToFloat(0.4204),doubleToFloat(0.4388),doubleToFloat(0.4853),doubleToFloat(0.5922),doubleToFloat(0.4061),doubleToFloat(0.5828),doubleToFloat(0.5040),doubleToFloat(0.5771),doubleToFloat(0.5152),doubleToFloat(0.5689),doubleToFloat(0.5373),doubleToFloat(0.5612),doubleToFloat(0.5850),doubleToFloat(0.5611),doubleToFloat(0.5540),doubleToFloat(0.5612),doubleToFloat(0.3653),doubleToFloat(0.5645)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.3898),doubleToFloat(0.5743),doubleToFloat(0.5605),doubleToFloat(0.3376),doubleToFloat(0.4842),doubleToFloat(0.3445),doubleToFloat(0.5487),doubleToFloat(0.3376),doubleToFloat(0.5125),doubleToFloat(0.3445),doubleToFloat(0.5540),doubleToFloat(0.3454),doubleToFloat(0.5434),doubleToFloat(0.3444),doubleToFloat(0.5689),doubleToFloat(0.3454),doubleToFloat(0.5120),doubleToFloat(0.3376),doubleToFloat(0.5120),doubleToFloat(0.3454)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5726),doubleToFloat(0.3454),doubleToFloat(0.4713),doubleToFloat(0.3376),doubleToFloat(0.3945),doubleToFloat(0.3465),doubleToFloat(0.4642),doubleToFloat(0.3454),doubleToFloat(0.4208),doubleToFloat(0.3461),doubleToFloat(0.3626),doubleToFloat(0.3605),doubleToFloat(0.3943),doubleToFloat(0.3619),doubleToFloat(0.4230),doubleToFloat(0.3606),doubleToFloat(0.4596),doubleToFloat(0.3376),doubleToFloat(0.5270),doubleToFloat(0.5921)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4540),doubleToFloat(0.5585),doubleToFloat(0.3115),doubleToFloat(0.5408),doubleToFloat(0.3182),doubleToFloat(0.5192),doubleToFloat(0.4535),doubleToFloat(0.5221),doubleToFloat(0.3258),doubleToFloat(0.4390),doubleToFloat(0.4543),doubleToFloat(0.4395),doubleToFloat(0.4210),doubleToFloat(0.5943),doubleToFloat(0.3213),doubleToFloat(0.5631),doubleToFloat(0.4720),doubleToFloat(0.3376),doubleToFloat(0.4535),doubleToFloat(0.3447)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4642),doubleToFloat(0.3454),doubleToFloat(0.4506),doubleToFloat(0.3454),doubleToFloat(0.5120),doubleToFloat(0.3375),doubleToFloat(0.3793),doubleToFloat(0.5941),doubleToFloat(0.5120),doubleToFloat(0.3454),doubleToFloat(0.5488),doubleToFloat(0.3376),doubleToFloat(0.5540),doubleToFloat(0.3454),doubleToFloat(0.5120),doubleToFloat(0.3316),doubleToFloat(0.3656),doubleToFloat(0.3470),doubleToFloat(0.3334),doubleToFloat(0.3474)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=10, element #50, 344 total numbers */
	this.IndexedFaceSet_10_50_coordIndex = new MFInt32(Java.to([16,22,1,-1,1,0,16,-1,17,16,0,-1,0,2,17,-1,18,23,7,-1,7,3,18,-1,19,18,3,-1,3,4,19,-1,5,20,19,-1,19,4,5,-1,6,21,20,-1,20,5,6,-1,1,22,21,-1,21,6,1,-1,29,10,12,-1,12,44,29,-1,28,39,9,-1,9,8,28,-1,29,28,8,-1,8,10,29,-1,11,40,44,-1,44,12,11,-1,13,25,40,-1,40,11,13,-1,14,26,25,-1,25,13,14,-1,15,27,26,-1,26,14,15,-1,39,43,27,-1,17,23,12,-1,12,10,17,-1,8,9,22,-1,22,16,8,-1,10,8,16,-1,16,17,10,-1,11,12,23,-1,23,18,11,-1,19,13,11,-1,11,18,19,-1,20,14,13,-1,13,19,20,-1,21,15,14,-1,14,20,21,-1,22,9,15,-1,15,21,22,-1,2,7,23,-1,23,17,2,-1,0,1,24,-1,1,6,24,-1,6,5,24,-1,5,4,24,-1,4,3,24,-1,3,7,24,-1,7,2,24,-1,2,0,24,-1,26,42,41,-1,41,25,26,-1,27,43,42,-1,42,26,27,-1,39,27,15,-1,15,9,39,-1,25,41,40,-1,30,39,28,-1,28,31,30,-1,32,31,28,-1,28,29,32,-1,44,40,33,-1,33,37,44,-1,41,34,33,-1,33,40,41,-1,42,35,34,-1,34,41,42,-1,43,36,35,-1,35,42,43,-1,30,36,43,-1,43,39,30,-1,37,32,29,-1,29,44,37,-1,30,31,38,-1,31,32,38,-1,32,37,38,-1,37,33,38,-1,33,34,38,-1,34,35,38,-1,35,36,38,-1,36,30,38,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=10, element #50, 344 total numbers */
	this.IndexedFaceSet_10_50_texCoordIndex = new MFInt32(Java.to([1,26,2,-1,2,0,1,-1,4,1,0,-1,0,3,4,-1,6,7,8,-1,8,5,6,-1,10,29,28,-1,28,9,10,-1,11,12,10,-1,10,9,11,-1,13,14,12,-1,12,11,13,-1,27,26,14,-1,14,13,27,-1,35,15,16,-1,16,41,35,-1,34,33,30,-1,30,17,34,-1,35,34,17,-1,17,15,35,-1,18,36,41,-1,41,16,18,-1,19,20,37,-1,37,31,19,-1,21,22,20,-1,20,19,21,-1,23,24,22,-1,22,21,23,-1,33,40,24,-1,4,7,16,-1,16,15,4,-1,17,30,26,-1,26,1,17,-1,15,17,1,-1,1,4,15,-1,18,16,7,-1,7,6,18,-1,10,19,31,-1,31,29,10,-1,12,21,19,-1,19,10,12,-1,14,23,21,-1,21,12,14,-1,26,30,23,-1,23,14,26,-1,3,8,7,-1,7,4,3,-1,0,2,25,-1,27,13,32,-1,13,11,32,-1,11,9,32,-1,9,28,32,-1,5,8,25,-1,8,3,25,-1,3,0,25,-1,22,39,38,-1,38,20,22,-1,24,40,39,-1,39,22,24,-1,33,24,23,-1,23,30,33,-1,20,38,37,-1,44,45,42,-1,42,43,44,-1,47,43,42,-1,42,46,47,-1,50,51,48,-1,48,49,50,-1,52,53,48,-1,48,51,52,-1,54,55,53,-1,53,52,54,-1,56,57,55,-1,55,54,56,-1,44,57,56,-1,56,45,44,-1,49,47,46,-1,46,50,49,-1,44,43,58,-1,43,47,58,-1,47,49,58,-1,49,48,58,-1,48,53,58,-1,53,55,58,-1,55,57,58,-1,57,44,58,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=11, element #50, 135 total numbers made up of 45 3-tuple values */
	this.Coordinate_11_50_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(1.0210),doubleToFloat(-13.7900),doubleToFloat(-1.0710),doubleToFloat(1.4180),doubleToFloat(-13.7900),doubleToFloat(0.1246),doubleToFloat(-0.1011),doubleToFloat(-13.7900),doubleToFloat(-1.4780),doubleToFloat(-1.5030),doubleToFloat(-13.7900),doubleToFloat(0.1245),doubleToFloat(-1.1110),doubleToFloat(-13.7900),doubleToFloat(1.2620),doubleToFloat(-0.1011),doubleToFloat(-13.7900),doubleToFloat(1.8000),doubleToFloat(0.9931),doubleToFloat(-13.7900),doubleToFloat(1.2650),doubleToFloat(-1.1410),doubleToFloat(-13.7900),doubleToFloat(-1.0730),doubleToFloat(1.2980),doubleToFloat(-6.4970),doubleToFloat(-1.3650),doubleToFloat(1.8400),doubleToFloat(-6.3180),doubleToFloat(0.1245)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.0526),doubleToFloat(-6.7970),doubleToFloat(-2.1880),doubleToFloat(-1.9790),doubleToFloat(-7.2060),doubleToFloat(0.1245),doubleToFloat(-1.5770),doubleToFloat(-7.0860),doubleToFloat(-1.3600),doubleToFloat(-1.5460),doubleToFloat(-7.0790),doubleToFloat(1.6790),doubleToFloat(-0.0424),doubleToFloat(-6.7970),doubleToFloat(2.2850),doubleToFloat(1.4010),doubleToFloat(-6.5510),doubleToFloat(1.6540),doubleToFloat(1.0860),doubleToFloat(-13.2600),doubleToFloat(-1.2220),doubleToFloat(-0.1011),doubleToFloat(-13.2600),doubleToFloat(-1.7410),doubleToFloat(-1.7390),doubleToFloat(-13.2600),doubleToFloat(0.1246),doubleToFloat(-1.3380),doubleToFloat(-13.2600),doubleToFloat(1.4840)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.1011),doubleToFloat(-13.2600),doubleToFloat(2.0710),doubleToFloat(1.1780),doubleToFloat(-13.2600),doubleToFloat(1.4620),doubleToFloat(1.6610),doubleToFloat(-13.2600),doubleToFloat(0.1246),doubleToFloat(-1.4200),doubleToFloat(-13.2600),doubleToFloat(-1.2240),doubleToFloat(-0.1011),doubleToFloat(-13.9700),doubleToFloat(0.1246),doubleToFloat(-1.6380),doubleToFloat(-1.0840),doubleToFloat(1.9610),doubleToFloat(-0.0255),doubleToFloat(-1.1680),doubleToFloat(2.5940),doubleToFloat(1.4520),doubleToFloat(-1.0450),doubleToFloat(1.9490),doubleToFloat(1.5020),doubleToFloat(-0.0626),doubleToFloat(-1.5970),doubleToFloat(-0.0086),doubleToFloat(-0.0623),doubleToFloat(-2.2670)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(1.7000),doubleToFloat(0.4427),doubleToFloat(0.1149),doubleToFloat(1.2850),doubleToFloat(0.4687),doubleToFloat(-1.3680),doubleToFloat(-0.0086),doubleToFloat(0.4513),doubleToFloat(-1.9770),doubleToFloat(-1.9200),doubleToFloat(0.4436),doubleToFloat(0.1541),doubleToFloat(-1.4680),doubleToFloat(0.4591),doubleToFloat(1.7780),doubleToFloat(-0.0086),doubleToFloat(0.4334),doubleToFloat(2.3640),doubleToFloat(1.2780),doubleToFloat(0.4363),doubleToFloat(1.8390),doubleToFloat(-1.4960),doubleToFloat(0.4475),doubleToFloat(-1.3280),doubleToFloat(-0.0086),doubleToFloat(0.7828),doubleToFloat(0.2482),doubleToFloat(2.0400),doubleToFloat(-0.0635),doubleToFloat(0.1287)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-2.2190),doubleToFloat(-0.0635),doubleToFloat(0.1287),doubleToFloat(-1.7290),doubleToFloat(-0.0644),doubleToFloat(2.1100),doubleToFloat(-0.0085),doubleToFloat(-0.0648),doubleToFloat(2.8260),doubleToFloat(1.5020),doubleToFloat(-0.0645),doubleToFloat(2.1100),doubleToFloat(-1.7290),doubleToFloat(-0.0627),doubleToFloat(-1.5970)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=11, element #51, 118 total numbers made up of 59 2-tuple values */
	this.TextureCoordinate_11_51_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.4947),doubleToFloat(0.1511),doubleToFloat(0.4898),doubleToFloat(0.1553),doubleToFloat(0.4808),doubleToFloat(0.1397),doubleToFloat(0.5148),doubleToFloat(0.1542),doubleToFloat(0.5136),doubleToFloat(0.1567),doubleToFloat(0.5548),doubleToFloat(0.1397),doubleToFloat(0.5624),doubleToFloat(0.1474),doubleToFloat(0.5380),doubleToFloat(0.1540),doubleToFloat(0.5349),doubleToFloat(0.1510),doubleToFloat(0.3767),doubleToFloat(0.1524)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.3745),doubleToFloat(0.1561),doubleToFloat(0.3976),doubleToFloat(0.1569),doubleToFloat(0.3988),doubleToFloat(0.1590),doubleToFloat(0.4182),doubleToFloat(0.1525),doubleToFloat(0.4256),doubleToFloat(0.1569),doubleToFloat(0.5115),doubleToFloat(0.2481),doubleToFloat(0.5421),doubleToFloat(0.2420),doubleToFloat(0.4829),doubleToFloat(0.2521),doubleToFloat(0.5687),doubleToFloat(0.2356),doubleToFloat(0.3697),doubleToFloat(0.2448)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.3657),doubleToFloat(0.3328),doubleToFloat(0.3981),doubleToFloat(0.2507),doubleToFloat(0.3946),doubleToFloat(0.3320),doubleToFloat(0.4262),doubleToFloat(0.2532),doubleToFloat(0.4217),doubleToFloat(0.3331),doubleToFloat(0.5194),doubleToFloat(0.1371),doubleToFloat(0.4591),doubleToFloat(0.1503),doubleToFloat(0.4304),doubleToFloat(0.1417),doubleToFloat(0.3563),doubleToFloat(0.1417),doubleToFloat(0.3487),doubleToFloat(0.1494)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4545),doubleToFloat(0.2546),doubleToFloat(0.3424),doubleToFloat(0.2376),doubleToFloat(0.3918),doubleToFloat(0.1391),doubleToFloat(0.4535),doubleToFloat(0.3447),doubleToFloat(0.4842),doubleToFloat(0.3445),doubleToFloat(0.5125),doubleToFloat(0.3445),doubleToFloat(0.5726),doubleToFloat(0.3454),doubleToFloat(0.3334),doubleToFloat(0.3474),doubleToFloat(0.3656),doubleToFloat(0.3470),doubleToFloat(0.3945),doubleToFloat(0.3465)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4208),doubleToFloat(0.3461),doubleToFloat(0.5434),doubleToFloat(0.3444),doubleToFloat(0.5540),doubleToFloat(0.3454),doubleToFloat(0.5479),doubleToFloat(0.3523),doubleToFloat(0.5595),doubleToFloat(0.3520),doubleToFloat(0.5689),doubleToFloat(0.3454),doubleToFloat(0.5120),doubleToFloat(0.3454),doubleToFloat(0.5120),doubleToFloat(0.3521),doubleToFloat(0.4589),doubleToFloat(0.3520),doubleToFloat(0.4707),doubleToFloat(0.3520)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4642),doubleToFloat(0.3454),doubleToFloat(0.4506),doubleToFloat(0.3454),doubleToFloat(0.4642),doubleToFloat(0.3454),doubleToFloat(0.4714),doubleToFloat(0.3522),doubleToFloat(0.5120),doubleToFloat(0.3454),doubleToFloat(0.5120),doubleToFloat(0.3519),doubleToFloat(0.5540),doubleToFloat(0.3454),doubleToFloat(0.5477),doubleToFloat(0.3519),doubleToFloat(0.5120),doubleToFloat(0.3564)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=11, element #59, 488 total numbers */
	this.IndexedFaceSet_11_59_coordIndex = new MFInt32(Java.to([0,35,4,-1,4,6,0,-1,27,12,4,-1,4,35,27,-1,13,28,9,-1,9,5,13,-1,6,5,9,-1,9,0,6,-1,4,29,7,-1,7,6,4,-1,18,29,4,-1,4,12,18,-1,8,20,13,-1,13,5,8,-1,7,8,5,-1,5,6,7,-1,1,2,23,-1,2,24,23,-1,25,3,23,-1,3,1,23,-1,2,1,7,-1,7,29,2,-1,24,2,29,-1,29,18,24,-1,3,25,20,-1,20,8,3,-1,1,3,8,-1,8,7,1,-1,10,11,16,-1,16,38,10,-1,27,38,16,-1,16,12,27,-1,13,15,14,-1,14,28,13,-1,11,10,14,-1,14,15,11,-1,17,30,16,-1,16,11,17,-1,16,30,18,-1,18,12,16,-1,19,15,13,-1,13,20,19,-1,17,11,15,-1,15,19,17,-1,21,23,22,-1,22,23,24,-1,25,23,26,-1,26,23,21,-1,17,21,22,-1,22,30,17,-1,30,22,24,-1,24,18,30,-1,26,19,20,-1,20,25,26,-1,21,17,19,-1,19,26,21,-1,35,37,40,-1,40,27,35,-1,0,36,37,-1,37,35,0,-1,32,45,42,-1,42,34,32,-1,31,32,34,-1,34,33,31,-1,32,31,49,-1,49,48,32,-1,32,48,45,-1,37,34,42,-1,42,40,37,-1,36,33,34,-1,34,37,36,-1,38,27,40,-1,40,39,38,-1,10,38,39,-1,39,41,10,-1,44,43,42,-1,42,45,44,-1,47,46,43,-1,43,44,47,-1,44,48,49,-1,49,47,44,-1,44,45,48,-1,39,40,42,-1,42,43,39,-1,41,39,43,-1,43,46,41,-1,28,52,51,-1,51,9,28,-1,14,53,52,-1,52,28,14,-1,54,53,14,-1,14,10,54,-1,41,55,54,-1,54,10,41,-1,46,56,55,-1,55,41,46,-1,47,57,56,-1,56,46,47,-1,49,58,57,-1,57,47,49,-1,31,59,58,-1,58,49,31,-1,33,60,59,-1,59,31,33,-1,36,61,60,-1,60,33,36,-1,0,62,61,-1,61,36,0,-1,62,0,9,-1,9,51,62,-1,52,50,51,-1,53,50,52,-1,54,50,53,-1,55,50,54,-1,56,50,55,-1,57,50,56,-1,58,50,57,-1,59,50,58,-1,60,50,59,-1,61,50,60,-1,62,50,61,-1,51,50,62,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=11, element #59, 488 total numbers */
	this.IndexedFaceSet_11_59_texCoordIndex = new MFInt32(Java.to([0,1,2,-1,2,3,0,-1,4,5,2,-1,2,1,4,-1,6,12,32,-1,32,33,6,-1,3,8,7,-1,7,0,3,-1,2,30,9,-1,9,3,2,-1,10,30,2,-1,2,5,10,-1,34,35,6,-1,6,33,34,-1,9,11,8,-1,8,3,9,-1,13,14,15,-1,14,16,15,-1,17,18,15,-1,18,13,15,-1,14,13,9,-1,9,30,14,-1,16,14,30,-1,30,10,16,-1,36,37,35,-1,35,34,36,-1,13,18,11,-1,11,9,13,-1,19,20,21,-1,21,22,19,-1,4,22,21,-1,21,5,4,-1,6,38,39,-1,39,12,6,-1,20,19,24,-1,24,23,20,-1,25,31,21,-1,21,20,25,-1,21,31,10,-1,10,5,21,-1,40,38,6,-1,6,35,40,-1,25,20,23,-1,23,26,25,-1,27,15,28,-1,28,15,16,-1,17,15,29,-1,29,15,27,-1,25,27,28,-1,28,31,25,-1,31,28,16,-1,16,10,31,-1,41,40,35,-1,35,37,41,-1,27,25,26,-1,26,29,27,-1,43,44,45,-1,45,42,43,-1,46,47,44,-1,44,43,46,-1,50,51,48,-1,48,49,50,-1,53,50,49,-1,49,52,53,-1,50,53,55,-1,55,54,50,-1,50,54,51,-1,44,49,48,-1,48,45,44,-1,47,52,49,-1,49,44,47,-1,57,42,45,-1,45,56,57,-1,59,57,56,-1,56,58,59,-1,60,61,48,-1,48,51,60,-1,62,63,61,-1,61,60,62,-1,60,54,55,-1,55,62,60,-1,60,51,54,-1,56,45,48,-1,48,61,56,-1,58,56,61,-1,61,63,58,-1,12,67,66,-1,66,32,12,-1,39,68,67,-1,67,12,39,-1,70,69,24,-1,24,19,70,-1,58,72,71,-1,71,59,58,-1,63,73,72,-1,72,58,63,-1,62,74,73,-1,73,63,62,-1,55,75,74,-1,74,62,55,-1,53,76,75,-1,75,55,53,-1,52,77,76,-1,76,53,52,-1,47,78,77,-1,77,52,47,-1,46,79,78,-1,78,47,46,-1,80,0,7,-1,7,65,80,-1,67,64,66,-1,68,64,67,-1,70,64,69,-1,72,64,71,-1,73,64,72,-1,74,64,73,-1,75,64,74,-1,76,64,75,-1,77,64,76,-1,78,64,77,-1,79,64,78,-1,65,64,80,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=12, element #59, 189 total numbers made up of 63 3-tuple values */
	this.Coordinate_12_59_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(1.8470),doubleToFloat(-1.0160),doubleToFloat(0.0389),doubleToFloat(1.4570),doubleToFloat(0.5491),doubleToFloat(0.0251),doubleToFloat(1.0070),doubleToFloat(0.5497),doubleToFloat(-0.9288),doubleToFloat(1.1180),doubleToFloat(0.5485),doubleToFloat(0.8556),doubleToFloat(1.1260),doubleToFloat(-0.0530),doubleToFloat(-1.0970),doubleToFloat(1.2630),doubleToFloat(-0.0531),doubleToFloat(1.1380),doubleToFloat(1.5670),doubleToFloat(-0.0531),doubleToFloat(0.0087),doubleToFloat(1.4640),doubleToFloat(-0.0107),doubleToFloat(0.0128),doubleToFloat(1.1320),doubleToFloat(-0.0107),doubleToFloat(1.0200),doubleToFloat(1.5160),doubleToFloat(-0.7508),doubleToFloat(1.4960)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.8470),doubleToFloat(-1.0160),doubleToFloat(0.0389),doubleToFloat(-1.5670),doubleToFloat(-0.0531),doubleToFloat(0.0086),doubleToFloat(0.0000),doubleToFloat(-0.0530),doubleToFloat(-1.7730),doubleToFloat(0.0000),doubleToFloat(-0.0531),doubleToFloat(1.7960),doubleToFloat(-1.5160),doubleToFloat(-0.7508),doubleToFloat(1.4960),doubleToFloat(-1.2630),doubleToFloat(-0.0531),doubleToFloat(1.1380),doubleToFloat(-1.1260),doubleToFloat(-0.0530),doubleToFloat(-1.0970),doubleToFloat(-1.4640),doubleToFloat(-0.0107),doubleToFloat(0.0127),doubleToFloat(0.0000),doubleToFloat(-0.0106),doubleToFloat(-1.6610),doubleToFloat(-1.1320),doubleToFloat(-0.0107),doubleToFloat(1.0200)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.0000),doubleToFloat(-0.0107),doubleToFloat(1.5560),doubleToFloat(-1.4570),doubleToFloat(0.5491),doubleToFloat(0.0251),doubleToFloat(-1.0070),doubleToFloat(0.5497),doubleToFloat(-0.9288),doubleToFloat(0.0000),doubleToFloat(1.1520),doubleToFloat(-0.0027),doubleToFloat(0.0000),doubleToFloat(0.5499),doubleToFloat(-1.3380),doubleToFloat(0.0000),doubleToFloat(0.5482),doubleToFloat(1.3970),doubleToFloat(-1.1180),doubleToFloat(0.5485),doubleToFloat(0.8556),doubleToFloat(0.0000),doubleToFloat(-1.0670),doubleToFloat(-2.1150),doubleToFloat(0.0000),doubleToFloat(-0.5525),doubleToFloat(2.1300),doubleToFloat(1.0200),doubleToFloat(-0.0106),doubleToFloat(-1.0720)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.0210),doubleToFloat(-0.0106),doubleToFloat(-1.0730),doubleToFloat(1.7580),doubleToFloat(-4.1960),doubleToFloat(0.2651),doubleToFloat(1.2430),doubleToFloat(-4.1950),doubleToFloat(-1.3700),doubleToFloat(2.0660),doubleToFloat(-3.6100),doubleToFloat(0.1277),doubleToFloat(1.5480),doubleToFloat(-3.6090),doubleToFloat(-1.4960),doubleToFloat(1.3490),doubleToFloat(-1.0690),doubleToFloat(-1.3970),doubleToFloat(1.9560),doubleToFloat(-2.2390),doubleToFloat(0.0850),doubleToFloat(1.4480),doubleToFloat(-2.2630),doubleToFloat(-1.5510),doubleToFloat(-1.3490),doubleToFloat(-1.0690),doubleToFloat(-1.3970),doubleToFloat(-1.4480),doubleToFloat(-2.2630),doubleToFloat(-1.5510)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.0000),doubleToFloat(-2.2730),doubleToFloat(-2.2790),doubleToFloat(-1.9560),doubleToFloat(-2.2390),doubleToFloat(0.0850),doubleToFloat(0.0000),doubleToFloat(-3.6080),doubleToFloat(-2.2340),doubleToFloat(-1.5480),doubleToFloat(-3.6090),doubleToFloat(-1.4960),doubleToFloat(-1.2430),doubleToFloat(-4.1950),doubleToFloat(-1.3700),doubleToFloat(0.0000),doubleToFloat(-4.1940),doubleToFloat(-2.0500),doubleToFloat(-2.0660),doubleToFloat(-3.6100),doubleToFloat(0.1277),doubleToFloat(-1.7580),doubleToFloat(-4.1960),doubleToFloat(0.2651),doubleToFloat(0.0000),doubleToFloat(-4.1950),doubleToFloat(-1.3700),doubleToFloat(0.0000),doubleToFloat(-4.1970),doubleToFloat(0.2651)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.0000),doubleToFloat(-3.3400),doubleToFloat(2.0000),doubleToFloat(0.9560),doubleToFloat(-2.9580),doubleToFloat(1.8600),doubleToFloat(0.0000),doubleToFloat(-3.2040),doubleToFloat(1.9500),doubleToFloat(-0.9560),doubleToFloat(-2.9580),doubleToFloat(1.8600),doubleToFloat(-1.1640),doubleToFloat(-2.7130),doubleToFloat(1.7710),doubleToFloat(-1.2340),doubleToFloat(-3.3240),doubleToFloat(2.6400),doubleToFloat(-1.3030),doubleToFloat(-3.6470),doubleToFloat(2.6620),doubleToFloat(-1.1090),doubleToFloat(-3.8280),doubleToFloat(2.7710),doubleToFloat(0.0000),doubleToFloat(-3.8930),doubleToFloat(3.0000),doubleToFloat(1.1090),doubleToFloat(-3.8280),doubleToFloat(2.7710)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(1.3030),doubleToFloat(-3.6470),doubleToFloat(2.6620),doubleToFloat(1.2340),doubleToFloat(-3.3240),doubleToFloat(2.6400),doubleToFloat(1.1640),doubleToFloat(-2.7130),doubleToFloat(1.7710)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=12, element #60, 162 total numbers made up of 81 2-tuple values */
	this.TextureCoordinate_12_60_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.0718),doubleToFloat(0.0975),doubleToFloat(0.0297),doubleToFloat(0.0959),doubleToFloat(0.0385),doubleToFloat(0.1261),doubleToFloat(0.0709),doubleToFloat(0.1255),doubleToFloat(0.0086),doubleToFloat(0.0960),doubleToFloat(0.0186),doubleToFloat(0.1255),doubleToFloat(0.2264),doubleToFloat(0.2407),doubleToFloat(0.1146),doubleToFloat(0.1052),doubleToFloat(0.1041),doubleToFloat(0.1255),doubleToFloat(0.0710),doubleToFloat(0.1267)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.0219),doubleToFloat(0.1267),doubleToFloat(0.1006),doubleToFloat(0.1267),doubleToFloat(0.2264),doubleToFloat(0.2171),doubleToFloat(0.0714),doubleToFloat(0.1432),doubleToFloat(0.0434),doubleToFloat(0.1432),doubleToFloat(0.0706),doubleToFloat(0.1608),doubleToFloat(0.0314),doubleToFloat(0.1432),doubleToFloat(0.1117),doubleToFloat(0.1432),doubleToFloat(0.0958),doubleToFloat(0.1432),doubleToFloat(0.0718),doubleToFloat(0.0975)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.0709),doubleToFloat(0.1255),doubleToFloat(0.0385),doubleToFloat(0.1261),doubleToFloat(0.0297),doubleToFloat(0.0959),doubleToFloat(0.1041),doubleToFloat(0.1255),doubleToFloat(0.1146),doubleToFloat(0.1052),doubleToFloat(0.0710),doubleToFloat(0.1267),doubleToFloat(0.1006),doubleToFloat(0.1267),doubleToFloat(0.0714),doubleToFloat(0.1432),doubleToFloat(0.0434),doubleToFloat(0.1432),doubleToFloat(0.0958),doubleToFloat(0.1432)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.0392),doubleToFloat(0.1286),doubleToFloat(0.0391),doubleToFloat(0.1285),doubleToFloat(0.2791),doubleToFloat(0.2323),doubleToFloat(0.2703),doubleToFloat(0.2485),doubleToFloat(0.2658),doubleToFloat(0.2539),doubleToFloat(0.2264),doubleToFloat(0.2538),doubleToFloat(0.2653),doubleToFloat(0.2613),doubleToFloat(0.2264),doubleToFloat(0.2613),doubleToFloat(0.1824),doubleToFloat(0.2485),doubleToFloat(0.1736),doubleToFloat(0.2323)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1870),doubleToFloat(0.2539),doubleToFloat(0.1875),doubleToFloat(0.2613),doubleToFloat(0.0086),doubleToFloat(0.0960),doubleToFloat(0.0297),doubleToFloat(0.0959),doubleToFloat(0.0251),doubleToFloat(0.0611),doubleToFloat(0.0038),doubleToFloat(0.0608),doubleToFloat(0.0718),doubleToFloat(0.0975),doubleToFloat(0.0732),doubleToFloat(0.0620),doubleToFloat(0.0051),doubleToFloat(0.0217),doubleToFloat(0.0267),doubleToFloat(0.0217)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.0305),doubleToFloat(0.0046),doubleToFloat(0.0105),doubleToFloat(0.0046),doubleToFloat(0.0744),doubleToFloat(0.0217),doubleToFloat(0.0784),doubleToFloat(0.0046),doubleToFloat(0.0305),doubleToFloat(0.0046),doubleToFloat(0.0784),doubleToFloat(0.0045),doubleToFloat(0.0251),doubleToFloat(0.0611),doubleToFloat(0.0297),doubleToFloat(0.0959),doubleToFloat(0.0732),doubleToFloat(0.0620),doubleToFloat(0.0718),doubleToFloat(0.0975)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.0305),doubleToFloat(0.0046),doubleToFloat(0.0267),doubleToFloat(0.0217),doubleToFloat(0.0784),doubleToFloat(0.0046),doubleToFloat(0.0744),doubleToFloat(0.0217),doubleToFloat(0.0991),doubleToFloat(0.0776),doubleToFloat(0.1068),doubleToFloat(0.0914),doubleToFloat(0.1891),doubleToFloat(0.1549),doubleToFloat(0.1627),doubleToFloat(0.1473),doubleToFloat(0.1363),doubleToFloat(0.1549),doubleToFloat(0.1068),doubleToFloat(0.0914)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.0854),doubleToFloat(0.0875),doubleToFloat(0.0854),doubleToFloat(0.0875),doubleToFloat(0.0861),doubleToFloat(0.0698),doubleToFloat(0.0867),doubleToFloat(0.0496),doubleToFloat(0.0887),doubleToFloat(0.0411),doubleToFloat(0.0887),doubleToFloat(0.0410),doubleToFloat(0.0887),doubleToFloat(0.0411),doubleToFloat(0.0867),doubleToFloat(0.0496),doubleToFloat(0.0861),doubleToFloat(0.0698),doubleToFloat(0.0854),doubleToFloat(0.0875)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.0854),doubleToFloat(0.0875)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=12, element #68, 416 total numbers */
	this.IndexedFaceSet_12_68_coordIndex = new MFInt32(Java.to([50,0,4,-1,4,21,50,-1,4,0,3,-1,3,0,52,-1,31,1,2,-1,2,32,31,-1,1,31,13,-1,13,12,1,-1,4,3,14,-1,14,15,4,-1,2,1,5,-1,17,18,5,-1,14,3,6,-1,6,20,14,-1,2,5,6,-1,52,2,6,-1,3,52,6,-1,15,21,4,-1,5,18,6,-1,12,17,5,-1,5,1,12,-1,6,18,20,-1,50,21,8,-1,8,7,50,-1,8,9,7,-1,9,53,7,-1,39,40,10,-1,10,11,39,-1,11,12,13,-1,13,39,11,-1,8,15,14,-1,14,9,8,-1,10,16,11,-1,17,16,18,-1,14,20,19,-1,19,9,14,-1,19,16,10,-1,19,10,53,-1,9,19,53,-1,15,8,21,-1,19,18,16,-1,12,11,16,-1,16,17,12,-1,19,20,18,-1,35,30,26,-1,26,34,35,-1,37,27,30,-1,30,35,37,-1,24,29,28,-1,28,22,24,-1,25,48,45,-1,45,23,25,-1,29,25,23,-1,23,28,29,-1,34,26,24,-1,24,49,34,-1,26,30,29,-1,29,24,26,-1,27,37,48,-1,48,25,27,-1,30,27,25,-1,25,29,30,-1,50,51,22,-1,22,0,50,-1,22,51,49,-1,49,24,22,-1,31,23,45,-1,45,13,31,-1,28,23,31,-1,31,32,28,-1,22,28,32,-1,32,0,22,-1,35,34,33,-1,33,36,35,-1,37,35,36,-1,36,38,37,-1,43,42,41,-1,41,44,43,-1,47,46,45,-1,45,48,47,-1,44,41,46,-1,46,47,44,-1,34,49,43,-1,43,33,34,-1,33,43,44,-1,44,36,33,-1,38,47,48,-1,48,37,38,-1,36,44,47,-1,47,38,36,-1,50,7,42,-1,42,51,50,-1,42,43,49,-1,49,51,42,-1,39,13,45,-1,45,46,39,-1,41,40,39,-1,39,46,41,-1,42,7,40,-1,40,41,42,-1,10,40,7,-1,7,53,10,-1,32,2,52,-1,52,0,32,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=12, element #68, 416 total numbers */
	this.IndexedFaceSet_12_68_texCoordIndex = new MFInt32(Java.to([15,16,17,-1,17,14,15,-1,2,1,3,-1,3,1,46,-1,7,6,4,-1,4,5,7,-1,6,7,7,-1,7,6,6,-1,2,3,8,-1,8,9,2,-1,4,6,10,-1,11,12,10,-1,8,3,13,-1,13,13,8,-1,4,10,13,-1,46,4,13,-1,3,46,13,-1,9,0,2,-1,10,12,13,-1,6,11,10,-1,10,6,6,-1,13,12,13,-1,15,14,18,-1,18,19,15,-1,2,3,1,-1,3,46,1,-1,7,5,4,-1,4,6,7,-1,6,6,7,-1,7,7,6,-1,2,9,8,-1,8,3,2,-1,4,10,6,-1,11,10,12,-1,8,13,13,-1,13,3,8,-1,13,10,4,-1,13,4,46,-1,3,13,46,-1,9,2,0,-1,13,12,10,-1,6,6,10,-1,10,11,6,-1,13,13,12,-1,33,34,21,-1,21,32,33,-1,24,25,23,-1,23,22,24,-1,28,29,26,-1,26,27,28,-1,31,31,30,-1,30,30,31,-1,29,31,30,-1,30,26,29,-1,32,21,35,-1,35,36,32,-1,20,23,29,-1,29,28,20,-1,25,24,31,-1,31,31,25,-1,23,25,31,-1,31,29,23,-1,37,38,39,-1,39,40,37,-1,39,38,36,-1,36,35,39,-1,7,30,30,-1,30,7,7,-1,26,30,7,-1,7,5,26,-1,27,26,5,-1,5,1,27,-1,33,32,41,-1,41,42,33,-1,24,22,23,-1,23,25,24,-1,28,27,26,-1,26,29,28,-1,31,30,30,-1,30,31,31,-1,29,26,30,-1,30,31,29,-1,32,36,43,-1,43,41,32,-1,20,28,29,-1,29,23,20,-1,25,31,31,-1,31,24,25,-1,23,29,31,-1,31,25,23,-1,37,44,45,-1,45,38,37,-1,45,43,36,-1,36,38,45,-1,7,7,30,-1,30,30,7,-1,26,5,7,-1,7,30,26,-1,27,1,5,-1,5,26,27,-1,4,5,1,-1,1,46,4,-1,5,4,46,-1,46,1,5,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=13, element #68, 162 total numbers made up of 54 3-tuple values */
	this.Coordinate_13_68_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(1.7690),doubleToFloat(-0.6918),doubleToFloat(0.7987),doubleToFloat(1.7580),doubleToFloat(-3.4270),doubleToFloat(-1.2490),doubleToFloat(2.0660),doubleToFloat(-2.7660),doubleToFloat(-1.3860),doubleToFloat(1.8470),doubleToFloat(-0.2455),doubleToFloat(-1.4750),doubleToFloat(1.5160),doubleToFloat(0.0194),doubleToFloat(-0.0180),doubleToFloat(1.3010),doubleToFloat(-2.6290),doubleToFloat(-2.1640),doubleToFloat(1.1910),doubleToFloat(-0.8667),doubleToFloat(-2.2090),doubleToFloat(-1.7690),doubleToFloat(-0.6918),doubleToFloat(0.7987),doubleToFloat(-1.5160),doubleToFloat(0.0194),doubleToFloat(-0.0180),doubleToFloat(-1.8470),doubleToFloat(-0.2455),doubleToFloat(-1.4750)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-2.0660),doubleToFloat(-2.7660),doubleToFloat(-1.3860),doubleToFloat(-1.7580),doubleToFloat(-3.4270),doubleToFloat(-1.2490),doubleToFloat(0.0000),doubleToFloat(-3.4260),doubleToFloat(-1.2490),doubleToFloat(0.0000),doubleToFloat(-3.4180),doubleToFloat(0.8189),doubleToFloat(0.0000),doubleToFloat(0.2209),doubleToFloat(-1.2720),doubleToFloat(0.0000),doubleToFloat(0.4548),doubleToFloat(-0.0643),doubleToFloat(-1.3010),doubleToFloat(-2.6290),doubleToFloat(-2.1640),doubleToFloat(0.0000),doubleToFloat(-2.9960),doubleToFloat(-2.0200),doubleToFloat(0.0000),doubleToFloat(-1.4330),doubleToFloat(-2.3870),doubleToFloat(-1.1910),doubleToFloat(-0.8667),doubleToFloat(-2.2090)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.0000),doubleToFloat(-0.6593),doubleToFloat(-2.0200),doubleToFloat(0.0000),doubleToFloat(0.2177),doubleToFloat(0.6159),doubleToFloat(1.9990),doubleToFloat(-1.3800),doubleToFloat(2.1850),doubleToFloat(2.1760),doubleToFloat(-3.4300),doubleToFloat(2.2550),doubleToFloat(2.0860),doubleToFloat(-1.9040),doubleToFloat(3.4810),doubleToFloat(2.1350),doubleToFloat(-3.4300),doubleToFloat(3.5500),doubleToFloat(1.7520),doubleToFloat(-2.2360),doubleToFloat(4.7890),doubleToFloat(1.8220),doubleToFloat(-3.4300),doubleToFloat(5.1420),doubleToFloat(2.2680),doubleToFloat(-2.7930),doubleToFloat(2.2380),doubleToFloat(2.1960),doubleToFloat(-2.8120),doubleToFloat(3.5110)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(1.8960),doubleToFloat(-2.7950),doubleToFloat(5.1100),doubleToFloat(1.8240),doubleToFloat(-3.4270),doubleToFloat(0.8189),doubleToFloat(2.0060),doubleToFloat(-2.7670),doubleToFloat(0.7950),doubleToFloat(-1.7520),doubleToFloat(-2.2360),doubleToFloat(4.7890),doubleToFloat(0.0000),doubleToFloat(-2.0100),doubleToFloat(5.2040),doubleToFloat(0.0000),doubleToFloat(-2.7900),doubleToFloat(5.6600),doubleToFloat(-1.8960),doubleToFloat(-2.7950),doubleToFloat(5.1100),doubleToFloat(0.0000),doubleToFloat(-3.4300),doubleToFloat(5.6220),doubleToFloat(-1.8220),doubleToFloat(-3.4300),doubleToFloat(5.1420),doubleToFloat(-1.8240),doubleToFloat(-3.4270),doubleToFloat(0.8189)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-2.0060),doubleToFloat(-2.7670),doubleToFloat(0.7950),doubleToFloat(-2.2680),doubleToFloat(-2.7930),doubleToFloat(2.2380),doubleToFloat(-2.1630),doubleToFloat(-1.3800),doubleToFloat(2.1850),doubleToFloat(-2.0860),doubleToFloat(-1.9040),doubleToFloat(3.4810),doubleToFloat(-2.1960),doubleToFloat(-2.8120),doubleToFloat(3.5110),doubleToFloat(0.0000),doubleToFloat(-3.4300),doubleToFloat(2.2550),doubleToFloat(-2.0130),doubleToFloat(-3.4300),doubleToFloat(2.2550),doubleToFloat(-2.1350),doubleToFloat(-3.4300),doubleToFloat(3.5500),doubleToFloat(0.0000),doubleToFloat(-3.4300),doubleToFloat(3.5500),doubleToFloat(0.0000),doubleToFloat(-1.5360),doubleToFloat(3.7890)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.0000),doubleToFloat(-0.2974),doubleToFloat(1.2960),doubleToFloat(0.0000),doubleToFloat(-0.9464),doubleToFloat(2.4410),doubleToFloat(1.9540),doubleToFloat(-1.4690),doubleToFloat(-1.4320),doubleToFloat(-1.9540),doubleToFloat(-1.4690),doubleToFloat(-1.4310)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=13, element #69, 94 total numbers made up of 47 2-tuple values */
	this.TextureCoordinate_13_69_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.1332),doubleToFloat(0.1110),doubleToFloat(0.1385),doubleToFloat(0.0844),doubleToFloat(0.1146),doubleToFloat(0.1052),doubleToFloat(0.0718),doubleToFloat(0.0975),doubleToFloat(0.0744),doubleToFloat(0.0238),doubleToFloat(0.1384),doubleToFloat(0.0238),doubleToFloat(0.0784),doubleToFloat(0.0045),doubleToFloat(0.1384),doubleToFloat(0.0045),doubleToFloat(0.0777),doubleToFloat(0.1111),doubleToFloat(0.1132),doubleToFloat(0.1179)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.0516),doubleToFloat(0.0322),doubleToFloat(0.0558),doubleToFloat(0.0214),doubleToFloat(0.0450),doubleToFloat(0.0628),doubleToFloat(0.0521),doubleToFloat(0.0813),doubleToFloat(0.2264),doubleToFloat(0.2171),doubleToFloat(0.2264),doubleToFloat(0.1898),doubleToFloat(0.2880),doubleToFloat(0.1984),doubleToFloat(0.2792),doubleToFloat(0.2323),doubleToFloat(0.1736),doubleToFloat(0.2323),doubleToFloat(0.1648),doubleToFloat(0.1984)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.2556),doubleToFloat(0.0393),doubleToFloat(0.2873),doubleToFloat(0.0895),doubleToFloat(0.2812),doubleToFloat(0.0232),doubleToFloat(0.2651),doubleToFloat(0.0230),doubleToFloat(0.2801),doubleToFloat(0.0044),doubleToFloat(0.2660),doubleToFloat(0.0044),doubleToFloat(0.1808),doubleToFloat(0.0221),doubleToFloat(0.1792),doubleToFloat(0.0644),doubleToFloat(0.2172),doubleToFloat(0.0490),doubleToFloat(0.2181),doubleToFloat(0.0225)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1813),doubleToFloat(0.0044),doubleToFloat(0.2193),doubleToFloat(0.0044),doubleToFloat(0.2268),doubleToFloat(0.0825),doubleToFloat(0.2268),doubleToFloat(0.0640),doubleToFloat(0.2880),doubleToFloat(0.0793),doubleToFloat(0.2988),doubleToFloat(0.1248),doubleToFloat(0.2268),doubleToFloat(0.1162),doubleToFloat(0.2268),doubleToFloat(0.1899),doubleToFloat(0.2268),doubleToFloat(0.1537),doubleToFloat(0.2958),doubleToFloat(0.1609)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.2879),doubleToFloat(0.1996),doubleToFloat(0.1662),doubleToFloat(0.0895),doubleToFloat(0.1655),doubleToFloat(0.0793),doubleToFloat(0.1547),doubleToFloat(0.1248),doubleToFloat(0.1656),doubleToFloat(0.1996),doubleToFloat(0.1577),doubleToFloat(0.1609),doubleToFloat(0.0731),doubleToFloat(0.0615)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=9, element #81, 424 total numbers */
	this.IndexedFaceSet_9_81_coordIndex = new MFInt32(Java.to([15,10,6,-1,6,14,15,-1,1,8,7,-1,7,0,1,-1,2,9,8,-1,8,1,2,-1,3,11,10,-1,10,15,3,-1,4,12,11,-1,11,3,4,-1,5,13,12,-1,12,4,5,-1,0,7,13,-1,13,5,0,-1,14,6,34,-1,10,27,32,-1,32,6,10,-1,8,25,24,-1,24,7,8,-1,9,26,25,-1,25,8,9,-1,10,11,28,-1,28,27,10,-1,11,12,29,-1,29,28,11,-1,12,13,30,-1,30,29,12,-1,13,7,24,-1,24,30,13,-1,6,32,26,-1,26,9,6,-1,0,5,35,-1,35,36,0,-1,1,0,36,-1,36,37,1,-1,2,1,37,-1,37,38,2,-1,34,2,38,-1,38,43,34,-1,39,40,15,-1,15,14,39,-1,40,41,3,-1,3,15,40,-1,42,4,3,-1,3,41,42,-1,5,4,42,-1,42,35,5,-1,17,52,51,-1,51,18,17,-1,18,51,47,-1,47,19,18,-1,19,47,50,-1,50,31,19,-1,20,53,54,-1,54,21,20,-1,21,54,48,-1,48,22,21,-1,23,22,48,-1,48,49,23,-1,17,23,49,-1,49,52,17,-1,51,52,24,-1,24,25,51,-1,26,47,51,-1,51,25,26,-1,27,53,50,-1,50,32,27,-1,28,44,53,-1,53,27,28,-1,45,48,54,-1,54,44,45,-1,49,48,45,-1,45,46,49,-1,52,49,46,-1,50,53,20,-1,20,31,50,-1,32,50,47,-1,47,26,32,-1,18,33,17,-1,17,33,23,-1,23,33,22,-1,22,33,21,-1,21,33,20,-1,20,33,31,-1,31,33,19,-1,19,33,18,-1,34,43,39,-1,39,14,34,-1,34,6,9,-1,9,2,34,-1,36,35,16,-1,37,36,16,-1,38,37,16,-1,43,38,16,-1,40,39,16,-1,41,40,16,-1,42,41,16,-1,35,42,16,-1,39,43,16,-1,45,44,28,-1,28,29,45,-1,46,45,29,-1,29,30,46,-1,52,46,30,-1,30,24,52,-1,53,44,54,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=9, element #81, 424 total numbers */
	this.IndexedFaceSet_9_81_texCoordIndex = new MFInt32(Java.to([6,9,8,-1,8,7,6,-1,2,10,53,-1,53,50,2,-1,0,11,10,-1,10,2,0,-1,4,12,52,-1,52,51,4,-1,3,13,12,-1,12,4,3,-1,5,14,13,-1,13,3,5,-1,50,53,14,-1,14,5,50,-1,7,8,1,-1,9,16,15,-1,15,8,9,-1,10,17,55,-1,55,53,10,-1,11,18,17,-1,17,10,11,-1,52,12,19,-1,19,54,52,-1,12,13,20,-1,20,19,12,-1,13,14,21,-1,21,20,13,-1,14,53,55,-1,55,21,14,-1,8,15,18,-1,18,11,8,-1,50,5,23,-1,23,56,50,-1,2,50,22,-1,22,24,2,-1,0,2,24,-1,24,25,0,-1,1,0,25,-1,25,26,1,-1,28,27,6,-1,6,7,28,-1,57,29,4,-1,4,51,57,-1,30,3,4,-1,4,29,30,-1,5,3,30,-1,30,23,5,-1,31,37,35,-1,35,33,31,-1,33,35,39,-1,39,38,33,-1,38,39,43,-1,43,41,38,-1,48,61,60,-1,60,58,48,-1,58,60,64,-1,64,62,58,-1,65,62,64,-1,64,66,65,-1,31,65,66,-1,66,37,31,-1,32,59,55,-1,55,17,32,-1,18,34,32,-1,32,17,18,-1,16,40,36,-1,36,15,16,-1,19,45,69,-1,69,54,19,-1,46,42,68,-1,68,45,46,-1,44,42,46,-1,46,47,44,-1,59,44,47,-1,43,61,48,-1,48,41,43,-1,15,36,34,-1,34,18,15,-1,33,67,31,-1,31,67,65,-1,65,67,62,-1,62,67,58,-1,58,67,48,-1,48,67,41,-1,41,67,38,-1,38,67,33,-1,1,26,28,-1,28,7,1,-1,1,8,11,-1,11,0,1,-1,56,23,63,-1,24,22,49,-1,25,24,49,-1,26,25,49,-1,27,28,49,-1,29,57,63,-1,30,29,63,-1,23,30,63,-1,28,26,49,-1,46,45,19,-1,19,20,46,-1,47,46,20,-1,20,21,47,-1,59,47,21,-1,21,55,59,-1,69,45,68,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=10, element #81, 165 total numbers made up of 55 3-tuple values */
	this.Coordinate_10_81_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(-2.6720),doubleToFloat(-0.3788),doubleToFloat(0.1245),doubleToFloat(-1.8980),doubleToFloat(-0.6834),doubleToFloat(-2.3580),doubleToFloat(-0.2782),doubleToFloat(-1.1530),doubleToFloat(-3.4070),doubleToFloat(1.9050),doubleToFloat(-1.0760),doubleToFloat(2.8540),doubleToFloat(-0.4654),doubleToFloat(-0.4893),doubleToFloat(3.5920),doubleToFloat(-2.1500),doubleToFloat(-0.3899),doubleToFloat(2.5400),doubleToFloat(1.9080),doubleToFloat(-3.1770),doubleToFloat(-2.4250),doubleToFloat(-2.7090),doubleToFloat(-2.6900),doubleToFloat(0.1246),doubleToFloat(-1.9760),doubleToFloat(-2.8080),doubleToFloat(-2.2680),doubleToFloat(-0.3775),doubleToFloat(-2.9970),doubleToFloat(-3.1890)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(2.4460),doubleToFloat(-3.1930),doubleToFloat(0.1246),doubleToFloat(1.8800),doubleToFloat(-3.1460),doubleToFloat(2.7210),doubleToFloat(-0.4072),doubleToFloat(-2.9460),doubleToFloat(3.4930),doubleToFloat(-2.1910),doubleToFloat(-2.7550),doubleToFloat(2.5310),doubleToFloat(2.5150),doubleToFloat(-1.7060),doubleToFloat(-1.8430),doubleToFloat(2.7020),doubleToFloat(-1.7070),doubleToFloat(0.1246),doubleToFloat(0.6965),doubleToFloat(2.9790),doubleToFloat(0.1569),doubleToFloat(-2.0990),doubleToFloat(-15.6000),doubleToFloat(0.1207),doubleToFloat(-1.6760),doubleToFloat(-15.6000),doubleToFloat(-1.3530),doubleToFloat(-0.3545),doubleToFloat(-15.6000),doubleToFloat(-1.9720)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(1.5300),doubleToFloat(-15.6000),doubleToFloat(0.1510),doubleToFloat(1.0840),doubleToFloat(-15.6000),doubleToFloat(1.8020),doubleToFloat(-0.3545),doubleToFloat(-15.6000),doubleToFloat(2.3710),doubleToFloat(-1.6790),doubleToFloat(-15.6000),doubleToFloat(1.8670),doubleToFloat(-2.6320),doubleToFloat(-8.3740),doubleToFloat(0.1246),doubleToFloat(-1.9810),doubleToFloat(-8.4460),doubleToFloat(-1.9850),doubleToFloat(-0.3067),doubleToFloat(-8.5130),doubleToFloat(-2.7710),doubleToFloat(2.1580),doubleToFloat(-8.6990),doubleToFloat(0.1246),doubleToFloat(1.6830),doubleToFloat(-8.6590),doubleToFloat(2.3270),doubleToFloat(-0.3670),doubleToFloat(-8.5810),doubleToFloat(3.0880)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-2.1810),doubleToFloat(-8.4270),doubleToFloat(2.3750),doubleToFloat(1.1100),doubleToFloat(-15.6000),doubleToFloat(-1.3380),doubleToFloat(1.7500),doubleToFloat(-8.6940),doubleToFloat(-1.9160),doubleToFloat(-0.3545),doubleToFloat(-16.0500),doubleToFloat(0.1404),doubleToFloat(1.6640),doubleToFloat(-1.5210),doubleToFloat(-2.9010),doubleToFloat(-0.9279),doubleToFloat(2.8850),doubleToFloat(1.7240),doubleToFloat(-1.2840),doubleToFloat(2.9970),doubleToFloat(0.1569),doubleToFloat(-0.6394),doubleToFloat(2.6720),doubleToFloat(-1.7400),doubleToFloat(0.0838),doubleToFloat(2.3020),doubleToFloat(-2.4790),doubleToFloat(2.0830),doubleToFloat(1.0440),doubleToFloat(-1.6180)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(2.4640),doubleToFloat(0.6629),doubleToFloat(0.1614),doubleToFloat(1.5010),doubleToFloat(1.6140),doubleToFloat(2.5280),doubleToFloat(0.0381),doubleToFloat(2.4620),doubleToFloat(2.4480),doubleToFloat(1.5090),doubleToFloat(1.6060),doubleToFloat(-2.5090),doubleToFloat(1.5240),doubleToFloat(-13.9900),doubleToFloat(2.0190),doubleToFloat(-0.3608),doubleToFloat(-13.8100),doubleToFloat(2.7570),doubleToFloat(-2.0230),doubleToFloat(-13.8700),doubleToFloat(2.0430),doubleToFloat(-0.3545),doubleToFloat(-14.9900),doubleToFloat(-2.2670),doubleToFloat(-0.3545),doubleToFloat(-15.0000),doubleToFloat(2.8260),doubleToFloat(-1.8650),doubleToFloat(-14.9900),doubleToFloat(2.1100)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(1.3660),doubleToFloat(-14.9900),doubleToFloat(-1.5970),doubleToFloat(-1.8650),doubleToFloat(-14.9900),doubleToFloat(-1.5970),doubleToFloat(-2.4030),doubleToFloat(-14.9900),doubleToFloat(0.1287),doubleToFloat(1.8560),doubleToFloat(-14.9900),doubleToFloat(0.1287),doubleToFloat(1.3660),doubleToFloat(-14.9900),doubleToFloat(2.1100)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=10, element #82, 140 total numbers made up of 70 2-tuple values */
	this.TextureCoordinate_10_82_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.5137),doubleToFloat(0.5362),doubleToFloat(0.5435),doubleToFloat(0.5314),doubleToFloat(0.4871),doubleToFloat(0.5460),doubleToFloat(0.3946),doubleToFloat(0.5441),doubleToFloat(0.3574),doubleToFloat(0.5390),doubleToFloat(0.4222),doubleToFloat(0.5494),doubleToFloat(0.5949),doubleToFloat(0.5388),doubleToFloat(0.5640),doubleToFloat(0.5292),doubleToFloat(0.5509),doubleToFloat(0.5109),doubleToFloat(0.5881),doubleToFloat(0.5171)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4869),doubleToFloat(0.5205),doubleToFloat(0.5135),doubleToFloat(0.5161),doubleToFloat(0.3560),doubleToFloat(0.5155),doubleToFloat(0.3920),doubleToFloat(0.5160),doubleToFloat(0.4207),doubleToFloat(0.5192),doubleToFloat(0.5494),doubleToFloat(0.4352),doubleToFloat(0.5806),doubleToFloat(0.4370),doubleToFloat(0.4872),doubleToFloat(0.4382),doubleToFloat(0.5154),doubleToFloat(0.4372),doubleToFloat(0.3588),doubleToFloat(0.4376)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.3915),doubleToFloat(0.4370),doubleToFloat(0.4204),doubleToFloat(0.4388),doubleToFloat(0.4853),doubleToFloat(0.5922),doubleToFloat(0.4061),doubleToFloat(0.5828),doubleToFloat(0.5040),doubleToFloat(0.5771),doubleToFloat(0.5152),doubleToFloat(0.5689),doubleToFloat(0.5373),doubleToFloat(0.5612),doubleToFloat(0.5850),doubleToFloat(0.5611),doubleToFloat(0.5540),doubleToFloat(0.5612),doubleToFloat(0.3653),doubleToFloat(0.5645)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.3898),doubleToFloat(0.5743),doubleToFloat(0.5605),doubleToFloat(0.3376),doubleToFloat(0.4842),doubleToFloat(0.3445),doubleToFloat(0.5487),doubleToFloat(0.3376),doubleToFloat(0.5125),doubleToFloat(0.3445),doubleToFloat(0.5540),doubleToFloat(0.3454),doubleToFloat(0.5434),doubleToFloat(0.3444),doubleToFloat(0.5689),doubleToFloat(0.3454),doubleToFloat(0.5120),doubleToFloat(0.3376),doubleToFloat(0.5120),doubleToFloat(0.3454)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5726),doubleToFloat(0.3454),doubleToFloat(0.4713),doubleToFloat(0.3376),doubleToFloat(0.3945),doubleToFloat(0.3465),doubleToFloat(0.4642),doubleToFloat(0.3454),doubleToFloat(0.4208),doubleToFloat(0.3461),doubleToFloat(0.3626),doubleToFloat(0.3605),doubleToFloat(0.3943),doubleToFloat(0.3619),doubleToFloat(0.4230),doubleToFloat(0.3606),doubleToFloat(0.4596),doubleToFloat(0.3376),doubleToFloat(0.5270),doubleToFloat(0.5921)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4540),doubleToFloat(0.5585),doubleToFloat(0.3115),doubleToFloat(0.5408),doubleToFloat(0.3182),doubleToFloat(0.5192),doubleToFloat(0.4535),doubleToFloat(0.5221),doubleToFloat(0.3258),doubleToFloat(0.4390),doubleToFloat(0.4543),doubleToFloat(0.4395),doubleToFloat(0.4210),doubleToFloat(0.5943),doubleToFloat(0.3213),doubleToFloat(0.5631),doubleToFloat(0.4720),doubleToFloat(0.3376),doubleToFloat(0.4535),doubleToFloat(0.3447)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4642),doubleToFloat(0.3454),doubleToFloat(0.4506),doubleToFloat(0.3454),doubleToFloat(0.5120),doubleToFloat(0.3375),doubleToFloat(0.3793),doubleToFloat(0.5941),doubleToFloat(0.5120),doubleToFloat(0.3454),doubleToFloat(0.5488),doubleToFloat(0.3376),doubleToFloat(0.5540),doubleToFloat(0.3454),doubleToFloat(0.5120),doubleToFloat(0.3316),doubleToFloat(0.3656),doubleToFloat(0.3470),doubleToFloat(0.3334),doubleToFloat(0.3474)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=10, element #90, 344 total numbers */
	this.IndexedFaceSet_10_90_coordIndex = new MFInt32(Java.to([16,0,1,-1,1,22,16,-1,17,2,0,-1,0,16,17,-1,18,3,7,-1,7,23,18,-1,19,4,3,-1,3,18,19,-1,5,4,19,-1,19,20,5,-1,6,5,20,-1,20,21,6,-1,1,6,21,-1,21,22,1,-1,29,44,12,-1,12,10,29,-1,28,8,9,-1,9,39,28,-1,29,10,8,-1,8,28,29,-1,11,12,44,-1,44,40,11,-1,13,11,40,-1,40,25,13,-1,14,13,25,-1,25,26,14,-1,15,14,26,-1,26,27,15,-1,39,27,43,-1,17,10,12,-1,12,23,17,-1,8,16,22,-1,22,9,8,-1,10,17,16,-1,16,8,10,-1,11,18,23,-1,23,12,11,-1,19,18,11,-1,11,13,19,-1,20,19,13,-1,13,14,20,-1,21,20,14,-1,14,15,21,-1,22,21,15,-1,15,9,22,-1,2,17,23,-1,23,7,2,-1,0,24,1,-1,1,24,6,-1,6,24,5,-1,5,24,4,-1,4,24,3,-1,3,24,7,-1,7,24,2,-1,2,24,0,-1,26,25,41,-1,41,42,26,-1,27,26,42,-1,42,43,27,-1,39,9,15,-1,15,27,39,-1,25,40,41,-1,30,31,28,-1,28,39,30,-1,32,29,28,-1,28,31,32,-1,44,37,33,-1,33,40,44,-1,41,40,33,-1,33,34,41,-1,42,41,34,-1,34,35,42,-1,43,42,35,-1,35,36,43,-1,30,39,43,-1,43,36,30,-1,37,44,29,-1,29,32,37,-1,30,38,31,-1,31,38,32,-1,32,38,37,-1,37,38,33,-1,33,38,34,-1,34,38,35,-1,35,38,36,-1,36,38,30,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=10, element #90, 344 total numbers */
	this.IndexedFaceSet_10_90_texCoordIndex = new MFInt32(Java.to([1,0,2,-1,2,26,1,-1,4,3,0,-1,0,1,4,-1,6,5,8,-1,8,7,6,-1,10,9,28,-1,28,29,10,-1,11,9,10,-1,10,12,11,-1,13,11,12,-1,12,14,13,-1,27,13,14,-1,14,26,27,-1,35,41,16,-1,16,15,35,-1,34,17,30,-1,30,33,34,-1,35,15,17,-1,17,34,35,-1,18,16,41,-1,41,36,18,-1,19,31,37,-1,37,20,19,-1,21,19,20,-1,20,22,21,-1,23,21,22,-1,22,24,23,-1,33,24,40,-1,4,15,16,-1,16,7,4,-1,17,1,26,-1,26,30,17,-1,15,4,1,-1,1,17,15,-1,18,6,7,-1,7,16,18,-1,10,29,31,-1,31,19,10,-1,12,10,19,-1,19,21,12,-1,14,12,21,-1,21,23,14,-1,26,14,23,-1,23,30,26,-1,3,4,7,-1,7,8,3,-1,0,25,2,-1,27,32,13,-1,13,32,11,-1,11,32,9,-1,9,32,28,-1,5,25,8,-1,8,25,3,-1,3,25,0,-1,22,20,38,-1,38,39,22,-1,24,22,39,-1,39,40,24,-1,33,30,23,-1,23,24,33,-1,20,37,38,-1,44,43,42,-1,42,45,44,-1,47,46,42,-1,42,43,47,-1,50,49,48,-1,48,51,50,-1,52,51,48,-1,48,53,52,-1,54,52,53,-1,53,55,54,-1,56,54,55,-1,55,57,56,-1,44,45,56,-1,56,57,44,-1,49,50,46,-1,46,47,49,-1,44,58,43,-1,43,58,47,-1,47,58,49,-1,49,58,48,-1,48,58,53,-1,53,58,55,-1,55,58,57,-1,57,58,44,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=11, element #90, 135 total numbers made up of 45 3-tuple values */
	this.Coordinate_11_90_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(-1.0210),doubleToFloat(-13.7900),doubleToFloat(-1.0710),doubleToFloat(-1.3680),doubleToFloat(-13.7900),doubleToFloat(0.1246),doubleToFloat(0.1011),doubleToFloat(-13.7900),doubleToFloat(-1.4780),doubleToFloat(1.4510),doubleToFloat(-13.7900),doubleToFloat(0.1246),doubleToFloat(1.1110),doubleToFloat(-13.7900),doubleToFloat(1.2620),doubleToFloat(0.1011),doubleToFloat(-13.7900),doubleToFloat(1.8000),doubleToFloat(-0.9931),doubleToFloat(-13.7900),doubleToFloat(1.2650),doubleToFloat(1.1410),doubleToFloat(-13.7900),doubleToFloat(-1.0730),doubleToFloat(-1.2980),doubleToFloat(-6.4970),doubleToFloat(-1.3650),doubleToFloat(-1.8400),doubleToFloat(-6.3180),doubleToFloat(0.1245)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.0526),doubleToFloat(-6.7970),doubleToFloat(-2.1880),doubleToFloat(1.9790),doubleToFloat(-7.2060),doubleToFloat(0.1246),doubleToFloat(1.5770),doubleToFloat(-7.0860),doubleToFloat(-1.3600),doubleToFloat(1.5460),doubleToFloat(-7.0790),doubleToFloat(1.6790),doubleToFloat(0.0424),doubleToFloat(-6.7970),doubleToFloat(2.2850),doubleToFloat(-1.4010),doubleToFloat(-6.5510),doubleToFloat(1.6540),doubleToFloat(-1.0860),doubleToFloat(-13.2600),doubleToFloat(-1.2220),doubleToFloat(0.1011),doubleToFloat(-13.2600),doubleToFloat(-1.7410),doubleToFloat(1.7390),doubleToFloat(-13.2600),doubleToFloat(0.1246),doubleToFloat(1.3380),doubleToFloat(-13.2600),doubleToFloat(1.4840)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.1011),doubleToFloat(-13.2600),doubleToFloat(2.0710),doubleToFloat(-1.1780),doubleToFloat(-13.2600),doubleToFloat(1.4620),doubleToFloat(-1.6610),doubleToFloat(-13.2600),doubleToFloat(0.1246),doubleToFloat(1.4200),doubleToFloat(-13.2600),doubleToFloat(-1.2240),doubleToFloat(0.1011),doubleToFloat(-13.9700),doubleToFloat(0.1246),doubleToFloat(1.6380),doubleToFloat(-1.0840),doubleToFloat(1.9610),doubleToFloat(0.0255),doubleToFloat(-1.1680),doubleToFloat(2.5940),doubleToFloat(-1.4520),doubleToFloat(-1.0450),doubleToFloat(1.9490),doubleToFloat(-1.5020),doubleToFloat(-0.0626),doubleToFloat(-1.5970),doubleToFloat(0.0086),doubleToFloat(-0.0622),doubleToFloat(-2.2670)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.7000),doubleToFloat(0.4427),doubleToFloat(0.1149),doubleToFloat(-1.2850),doubleToFloat(0.4687),doubleToFloat(-1.3680),doubleToFloat(0.0086),doubleToFloat(0.4514),doubleToFloat(-1.9770),doubleToFloat(1.9200),doubleToFloat(0.4436),doubleToFloat(0.1541),doubleToFloat(1.4680),doubleToFloat(0.4591),doubleToFloat(1.7780),doubleToFloat(0.0086),doubleToFloat(0.4334),doubleToFloat(2.3640),doubleToFloat(-1.2780),doubleToFloat(0.4363),doubleToFloat(1.8390),doubleToFloat(1.4960),doubleToFloat(0.4475),doubleToFloat(-1.3280),doubleToFloat(0.0086),doubleToFloat(0.7828),doubleToFloat(0.2482),doubleToFloat(-2.0400),doubleToFloat(-0.0635),doubleToFloat(0.1287)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(2.2190),doubleToFloat(-0.0635),doubleToFloat(0.1287),doubleToFloat(1.7290),doubleToFloat(-0.0645),doubleToFloat(2.1100),doubleToFloat(0.0085),doubleToFloat(-0.0649),doubleToFloat(2.8260),doubleToFloat(-1.5020),doubleToFloat(-0.0645),doubleToFloat(2.1100),doubleToFloat(1.7290),doubleToFloat(-0.0626),doubleToFloat(-1.5970)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=11, element #91, 118 total numbers made up of 59 2-tuple values */
	this.TextureCoordinate_11_91_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.4947),doubleToFloat(0.1511),doubleToFloat(0.4898),doubleToFloat(0.1553),doubleToFloat(0.4808),doubleToFloat(0.1397),doubleToFloat(0.5148),doubleToFloat(0.1542),doubleToFloat(0.5136),doubleToFloat(0.1567),doubleToFloat(0.5548),doubleToFloat(0.1397),doubleToFloat(0.5624),doubleToFloat(0.1474),doubleToFloat(0.5380),doubleToFloat(0.1540),doubleToFloat(0.5349),doubleToFloat(0.1510),doubleToFloat(0.3767),doubleToFloat(0.1524)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.3745),doubleToFloat(0.1561),doubleToFloat(0.3976),doubleToFloat(0.1569),doubleToFloat(0.3988),doubleToFloat(0.1590),doubleToFloat(0.4182),doubleToFloat(0.1525),doubleToFloat(0.4256),doubleToFloat(0.1569),doubleToFloat(0.5115),doubleToFloat(0.2481),doubleToFloat(0.5421),doubleToFloat(0.2420),doubleToFloat(0.4829),doubleToFloat(0.2521),doubleToFloat(0.5687),doubleToFloat(0.2356),doubleToFloat(0.3697),doubleToFloat(0.2448)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.3657),doubleToFloat(0.3328),doubleToFloat(0.3981),doubleToFloat(0.2507),doubleToFloat(0.3946),doubleToFloat(0.3320),doubleToFloat(0.4262),doubleToFloat(0.2532),doubleToFloat(0.4217),doubleToFloat(0.3331),doubleToFloat(0.5194),doubleToFloat(0.1371),doubleToFloat(0.4591),doubleToFloat(0.1503),doubleToFloat(0.4304),doubleToFloat(0.1417),doubleToFloat(0.3563),doubleToFloat(0.1417),doubleToFloat(0.3487),doubleToFloat(0.1494)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4545),doubleToFloat(0.2546),doubleToFloat(0.3424),doubleToFloat(0.2376),doubleToFloat(0.3918),doubleToFloat(0.1391),doubleToFloat(0.4535),doubleToFloat(0.3447),doubleToFloat(0.4842),doubleToFloat(0.3445),doubleToFloat(0.5125),doubleToFloat(0.3445),doubleToFloat(0.5726),doubleToFloat(0.3454),doubleToFloat(0.3334),doubleToFloat(0.3474),doubleToFloat(0.3656),doubleToFloat(0.3470),doubleToFloat(0.3945),doubleToFloat(0.3465)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4208),doubleToFloat(0.3461),doubleToFloat(0.5434),doubleToFloat(0.3444),doubleToFloat(0.5540),doubleToFloat(0.3454),doubleToFloat(0.5479),doubleToFloat(0.3523),doubleToFloat(0.5595),doubleToFloat(0.3520),doubleToFloat(0.5689),doubleToFloat(0.3454),doubleToFloat(0.5120),doubleToFloat(0.3454),doubleToFloat(0.5120),doubleToFloat(0.3521),doubleToFloat(0.4589),doubleToFloat(0.3520),doubleToFloat(0.4707),doubleToFloat(0.3520)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4642),doubleToFloat(0.3454),doubleToFloat(0.4506),doubleToFloat(0.3454),doubleToFloat(0.4642),doubleToFloat(0.3454),doubleToFloat(0.4714),doubleToFloat(0.3522),doubleToFloat(0.5120),doubleToFloat(0.3454),doubleToFloat(0.5120),doubleToFloat(0.3519),doubleToFloat(0.5540),doubleToFloat(0.3454),doubleToFloat(0.5477),doubleToFloat(0.3519),doubleToFloat(0.5120),doubleToFloat(0.3564)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=11, element #99, 488 total numbers */
	this.IndexedFaceSet_11_99_coordIndex = new MFInt32(Java.to([0,6,4,-1,4,35,0,-1,27,35,4,-1,4,12,27,-1,13,5,9,-1,9,28,13,-1,6,0,9,-1,9,5,6,-1,4,6,7,-1,7,29,4,-1,18,12,4,-1,4,29,18,-1,8,5,13,-1,13,20,8,-1,7,6,5,-1,5,8,7,-1,1,23,2,-1,2,23,24,-1,25,23,3,-1,3,23,1,-1,2,29,7,-1,7,1,2,-1,24,18,29,-1,29,2,24,-1,3,8,20,-1,20,25,3,-1,1,7,8,-1,8,3,1,-1,10,38,16,-1,16,11,10,-1,27,12,16,-1,16,38,27,-1,13,28,14,-1,14,15,13,-1,11,15,14,-1,14,10,11,-1,17,11,16,-1,16,30,17,-1,16,12,18,-1,18,30,16,-1,19,20,13,-1,13,15,19,-1,17,19,15,-1,15,11,17,-1,21,22,23,-1,22,24,23,-1,25,26,23,-1,26,21,23,-1,17,30,22,-1,22,21,17,-1,30,18,24,-1,24,22,30,-1,26,25,20,-1,20,19,26,-1,21,26,19,-1,19,17,21,-1,35,27,40,-1,40,37,35,-1,0,35,37,-1,37,36,0,-1,32,34,42,-1,42,45,32,-1,31,33,34,-1,34,32,31,-1,32,48,49,-1,49,31,32,-1,32,45,48,-1,37,40,42,-1,42,34,37,-1,36,37,34,-1,34,33,36,-1,38,39,40,-1,40,27,38,-1,10,41,39,-1,39,38,10,-1,44,45,42,-1,42,43,44,-1,47,44,43,-1,43,46,47,-1,44,47,49,-1,49,48,44,-1,44,48,45,-1,39,43,42,-1,42,40,39,-1,41,46,43,-1,43,39,41,-1,28,9,51,-1,51,52,28,-1,14,28,52,-1,52,53,14,-1,54,10,14,-1,14,53,54,-1,41,10,54,-1,54,55,41,-1,46,41,55,-1,55,56,46,-1,47,46,56,-1,56,57,47,-1,49,47,57,-1,57,58,49,-1,31,49,58,-1,58,59,31,-1,33,31,59,-1,59,60,33,-1,36,33,60,-1,60,61,36,-1,0,36,61,-1,61,62,0,-1,62,51,9,-1,9,0,62,-1,52,51,50,-1,53,52,50,-1,54,53,50,-1,55,54,50,-1,56,55,50,-1,57,56,50,-1,58,57,50,-1,59,58,50,-1,60,59,50,-1,61,60,50,-1,62,61,50,-1,51,62,50,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=11, element #99, 488 total numbers */
	this.IndexedFaceSet_11_99_texCoordIndex = new MFInt32(Java.to([0,3,2,-1,2,1,0,-1,4,1,2,-1,2,5,4,-1,6,33,32,-1,32,12,6,-1,3,0,7,-1,7,8,3,-1,2,3,9,-1,9,30,2,-1,10,5,2,-1,2,30,10,-1,34,33,6,-1,6,35,34,-1,9,3,8,-1,8,11,9,-1,13,15,14,-1,14,15,16,-1,17,15,18,-1,18,15,13,-1,14,30,9,-1,9,13,14,-1,16,10,30,-1,30,14,16,-1,36,34,35,-1,35,37,36,-1,13,9,11,-1,11,18,13,-1,19,22,21,-1,21,20,19,-1,4,5,21,-1,21,22,4,-1,6,12,39,-1,39,38,6,-1,20,23,24,-1,24,19,20,-1,25,20,21,-1,21,31,25,-1,21,5,10,-1,10,31,21,-1,40,35,6,-1,6,38,40,-1,25,26,23,-1,23,20,25,-1,27,28,15,-1,28,16,15,-1,17,29,15,-1,29,27,15,-1,25,31,28,-1,28,27,25,-1,31,10,16,-1,16,28,31,-1,41,37,35,-1,35,40,41,-1,27,29,26,-1,26,25,27,-1,43,42,45,-1,45,44,43,-1,46,43,44,-1,44,47,46,-1,50,49,48,-1,48,51,50,-1,53,52,49,-1,49,50,53,-1,50,54,55,-1,55,53,50,-1,50,51,54,-1,44,45,48,-1,48,49,44,-1,47,44,49,-1,49,52,47,-1,57,56,45,-1,45,42,57,-1,59,58,56,-1,56,57,59,-1,60,51,48,-1,48,61,60,-1,62,60,61,-1,61,63,62,-1,60,62,55,-1,55,54,60,-1,60,54,51,-1,56,61,48,-1,48,45,56,-1,58,63,61,-1,61,56,58,-1,12,32,66,-1,66,67,12,-1,39,12,67,-1,67,68,39,-1,70,19,24,-1,24,69,70,-1,58,59,71,-1,71,72,58,-1,63,58,72,-1,72,73,63,-1,62,63,73,-1,73,74,62,-1,55,62,74,-1,74,75,55,-1,53,55,75,-1,75,76,53,-1,52,53,76,-1,76,77,52,-1,47,52,77,-1,77,78,47,-1,46,47,78,-1,78,79,46,-1,80,65,7,-1,7,0,80,-1,67,66,64,-1,68,67,64,-1,70,69,64,-1,72,71,64,-1,73,72,64,-1,74,73,64,-1,75,74,64,-1,76,75,64,-1,77,76,64,-1,78,77,64,-1,79,78,64,-1,65,80,64,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=12, element #99, 189 total numbers made up of 63 3-tuple values */
	this.Coordinate_12_99_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(-1.8470),doubleToFloat(-1.0160),doubleToFloat(0.0389),doubleToFloat(-1.4570),doubleToFloat(0.5491),doubleToFloat(0.0251),doubleToFloat(-1.0070),doubleToFloat(0.5497),doubleToFloat(-0.9288),doubleToFloat(-1.1180),doubleToFloat(0.5485),doubleToFloat(0.8556),doubleToFloat(-1.1260),doubleToFloat(-0.0530),doubleToFloat(-1.0970),doubleToFloat(-1.2630),doubleToFloat(-0.0531),doubleToFloat(1.1380),doubleToFloat(-1.5670),doubleToFloat(-0.0531),doubleToFloat(0.0087),doubleToFloat(-1.4640),doubleToFloat(-0.0107),doubleToFloat(0.0128),doubleToFloat(-1.1320),doubleToFloat(-0.0107),doubleToFloat(1.0200),doubleToFloat(-1.5160),doubleToFloat(-0.7508),doubleToFloat(1.4960)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(1.8470),doubleToFloat(-1.0160),doubleToFloat(0.0389),doubleToFloat(1.5670),doubleToFloat(-0.0531),doubleToFloat(0.0086),doubleToFloat(0.0000),doubleToFloat(-0.0530),doubleToFloat(-1.7730),doubleToFloat(0.0000),doubleToFloat(-0.0531),doubleToFloat(1.7960),doubleToFloat(1.5160),doubleToFloat(-0.7508),doubleToFloat(1.4960),doubleToFloat(1.2630),doubleToFloat(-0.0531),doubleToFloat(1.1380),doubleToFloat(1.1260),doubleToFloat(-0.0530),doubleToFloat(-1.0970),doubleToFloat(1.4640),doubleToFloat(-0.0107),doubleToFloat(0.0127),doubleToFloat(0.0000),doubleToFloat(-0.0106),doubleToFloat(-1.6610),doubleToFloat(1.1320),doubleToFloat(-0.0107),doubleToFloat(1.0200)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.0000),doubleToFloat(-0.0107),doubleToFloat(1.5560),doubleToFloat(1.4570),doubleToFloat(0.5491),doubleToFloat(0.0251),doubleToFloat(1.0070),doubleToFloat(0.5497),doubleToFloat(-0.9288),doubleToFloat(0.0000),doubleToFloat(1.1520),doubleToFloat(-0.0027),doubleToFloat(0.0000),doubleToFloat(0.5499),doubleToFloat(-1.3380),doubleToFloat(0.0000),doubleToFloat(0.5482),doubleToFloat(1.3970),doubleToFloat(1.1180),doubleToFloat(0.5485),doubleToFloat(0.8556),doubleToFloat(0.0000),doubleToFloat(-1.0670),doubleToFloat(-2.1150),doubleToFloat(0.0000),doubleToFloat(-0.5525),doubleToFloat(2.1300),doubleToFloat(-1.0200),doubleToFloat(-0.0106),doubleToFloat(-1.0720)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(1.0210),doubleToFloat(-0.0106),doubleToFloat(-1.0730),doubleToFloat(-1.7580),doubleToFloat(-4.1960),doubleToFloat(0.2651),doubleToFloat(-1.2430),doubleToFloat(-4.1950),doubleToFloat(-1.3700),doubleToFloat(-2.0660),doubleToFloat(-3.6100),doubleToFloat(0.1277),doubleToFloat(-1.5480),doubleToFloat(-3.6090),doubleToFloat(-1.4960),doubleToFloat(-1.3490),doubleToFloat(-1.0690),doubleToFloat(-1.3970),doubleToFloat(-1.9560),doubleToFloat(-2.2390),doubleToFloat(0.0850),doubleToFloat(-1.4480),doubleToFloat(-2.2630),doubleToFloat(-1.5510),doubleToFloat(1.3490),doubleToFloat(-1.0690),doubleToFloat(-1.3970),doubleToFloat(1.4480),doubleToFloat(-2.2630),doubleToFloat(-1.5510)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.0000),doubleToFloat(-2.2730),doubleToFloat(-2.2790),doubleToFloat(1.9560),doubleToFloat(-2.2390),doubleToFloat(0.0850),doubleToFloat(0.0000),doubleToFloat(-3.6080),doubleToFloat(-2.2340),doubleToFloat(1.5480),doubleToFloat(-3.6090),doubleToFloat(-1.4960),doubleToFloat(1.2430),doubleToFloat(-4.1950),doubleToFloat(-1.3700),doubleToFloat(-0.0000),doubleToFloat(-4.1940),doubleToFloat(-2.0500),doubleToFloat(2.0660),doubleToFloat(-3.6100),doubleToFloat(0.1277),doubleToFloat(1.7580),doubleToFloat(-4.1960),doubleToFloat(0.2651),doubleToFloat(-0.0000),doubleToFloat(-4.1950),doubleToFloat(-1.3700),doubleToFloat(-0.0000),doubleToFloat(-4.1970),doubleToFloat(0.2651)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.0000),doubleToFloat(-3.3400),doubleToFloat(2.0000),doubleToFloat(-0.9560),doubleToFloat(-2.9580),doubleToFloat(1.8600),doubleToFloat(0.0000),doubleToFloat(-3.2040),doubleToFloat(1.9500),doubleToFloat(0.9560),doubleToFloat(-2.9580),doubleToFloat(1.8600),doubleToFloat(1.1640),doubleToFloat(-2.7130),doubleToFloat(1.7710),doubleToFloat(1.2340),doubleToFloat(-3.3240),doubleToFloat(2.6400),doubleToFloat(1.3030),doubleToFloat(-3.6470),doubleToFloat(2.6620),doubleToFloat(1.1090),doubleToFloat(-3.8280),doubleToFloat(2.7710),doubleToFloat(0.0000),doubleToFloat(-3.8930),doubleToFloat(3.0000),doubleToFloat(-1.1090),doubleToFloat(-3.8280),doubleToFloat(2.7710)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.3030),doubleToFloat(-3.6470),doubleToFloat(2.6620),doubleToFloat(-1.2340),doubleToFloat(-3.3240),doubleToFloat(2.6400),doubleToFloat(-1.1640),doubleToFloat(-2.7130),doubleToFloat(1.7710)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=12, element #100, 162 total numbers made up of 81 2-tuple values */
	this.TextureCoordinate_12_100_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.0718),doubleToFloat(0.0975),doubleToFloat(0.0297),doubleToFloat(0.0959),doubleToFloat(0.0385),doubleToFloat(0.1261),doubleToFloat(0.0709),doubleToFloat(0.1255),doubleToFloat(0.0086),doubleToFloat(0.0960),doubleToFloat(0.0186),doubleToFloat(0.1255),doubleToFloat(0.2264),doubleToFloat(0.2407),doubleToFloat(0.1146),doubleToFloat(0.1052),doubleToFloat(0.1041),doubleToFloat(0.1255),doubleToFloat(0.0710),doubleToFloat(0.1267)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.0219),doubleToFloat(0.1267),doubleToFloat(0.1006),doubleToFloat(0.1267),doubleToFloat(0.2264),doubleToFloat(0.2171),doubleToFloat(0.0714),doubleToFloat(0.1432),doubleToFloat(0.0434),doubleToFloat(0.1432),doubleToFloat(0.0706),doubleToFloat(0.1608),doubleToFloat(0.0314),doubleToFloat(0.1432),doubleToFloat(0.1117),doubleToFloat(0.1432),doubleToFloat(0.0958),doubleToFloat(0.1432),doubleToFloat(0.0718),doubleToFloat(0.0975)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.0709),doubleToFloat(0.1255),doubleToFloat(0.0385),doubleToFloat(0.1261),doubleToFloat(0.0297),doubleToFloat(0.0959),doubleToFloat(0.1041),doubleToFloat(0.1255),doubleToFloat(0.1146),doubleToFloat(0.1052),doubleToFloat(0.0710),doubleToFloat(0.1267),doubleToFloat(0.1006),doubleToFloat(0.1267),doubleToFloat(0.0714),doubleToFloat(0.1432),doubleToFloat(0.0434),doubleToFloat(0.1432),doubleToFloat(0.0958),doubleToFloat(0.1432)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.0392),doubleToFloat(0.1286),doubleToFloat(0.0391),doubleToFloat(0.1285),doubleToFloat(0.2791),doubleToFloat(0.2323),doubleToFloat(0.2703),doubleToFloat(0.2485),doubleToFloat(0.2658),doubleToFloat(0.2539),doubleToFloat(0.2264),doubleToFloat(0.2538),doubleToFloat(0.2653),doubleToFloat(0.2613),doubleToFloat(0.2264),doubleToFloat(0.2613),doubleToFloat(0.1824),doubleToFloat(0.2485),doubleToFloat(0.1736),doubleToFloat(0.2323)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1870),doubleToFloat(0.2539),doubleToFloat(0.1875),doubleToFloat(0.2613),doubleToFloat(0.0086),doubleToFloat(0.0960),doubleToFloat(0.0297),doubleToFloat(0.0959),doubleToFloat(0.0251),doubleToFloat(0.0611),doubleToFloat(0.0038),doubleToFloat(0.0608),doubleToFloat(0.0718),doubleToFloat(0.0975),doubleToFloat(0.0732),doubleToFloat(0.0620),doubleToFloat(0.0051),doubleToFloat(0.0217),doubleToFloat(0.0267),doubleToFloat(0.0217)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.0305),doubleToFloat(0.0046),doubleToFloat(0.0105),doubleToFloat(0.0046),doubleToFloat(0.0744),doubleToFloat(0.0217),doubleToFloat(0.0784),doubleToFloat(0.0046),doubleToFloat(0.0305),doubleToFloat(0.0046),doubleToFloat(0.0784),doubleToFloat(0.0045),doubleToFloat(0.0251),doubleToFloat(0.0611),doubleToFloat(0.0297),doubleToFloat(0.0959),doubleToFloat(0.0732),doubleToFloat(0.0620),doubleToFloat(0.0718),doubleToFloat(0.0975)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.0305),doubleToFloat(0.0046),doubleToFloat(0.0267),doubleToFloat(0.0217),doubleToFloat(0.0784),doubleToFloat(0.0046),doubleToFloat(0.0744),doubleToFloat(0.0217),doubleToFloat(0.0991),doubleToFloat(0.0776),doubleToFloat(0.1068),doubleToFloat(0.0914),doubleToFloat(0.1891),doubleToFloat(0.1549),doubleToFloat(0.1627),doubleToFloat(0.1473),doubleToFloat(0.1363),doubleToFloat(0.1549),doubleToFloat(0.1068),doubleToFloat(0.0914)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.0854),doubleToFloat(0.0875),doubleToFloat(0.0854),doubleToFloat(0.0875),doubleToFloat(0.0861),doubleToFloat(0.0698),doubleToFloat(0.0867),doubleToFloat(0.0496),doubleToFloat(0.0887),doubleToFloat(0.0411),doubleToFloat(0.0887),doubleToFloat(0.0410),doubleToFloat(0.0887),doubleToFloat(0.0411),doubleToFloat(0.0867),doubleToFloat(0.0496),doubleToFloat(0.0861),doubleToFloat(0.0698),doubleToFloat(0.0854),doubleToFloat(0.0875)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.0854),doubleToFloat(0.0875)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=12, element #108, 416 total numbers */
	this.IndexedFaceSet_12_108_coordIndex = new MFInt32(Java.to([50,21,4,-1,4,0,50,-1,4,3,0,-1,3,52,0,-1,31,32,2,-1,2,1,31,-1,1,12,13,-1,13,31,1,-1,4,15,14,-1,14,3,4,-1,2,5,1,-1,17,5,18,-1,14,20,6,-1,6,3,14,-1,6,5,2,-1,6,2,52,-1,3,6,52,-1,15,4,21,-1,5,6,18,-1,12,1,5,-1,5,17,12,-1,6,20,18,-1,50,7,8,-1,8,21,50,-1,8,7,9,-1,9,7,53,-1,39,11,10,-1,10,40,39,-1,11,39,13,-1,13,12,11,-1,8,9,14,-1,14,15,8,-1,10,11,16,-1,17,18,16,-1,14,9,19,-1,19,20,14,-1,10,16,19,-1,53,10,19,-1,9,53,19,-1,15,21,8,-1,19,16,18,-1,12,17,16,-1,16,11,12,-1,19,18,20,-1,35,34,26,-1,26,30,35,-1,37,35,30,-1,30,27,37,-1,24,22,28,-1,28,29,24,-1,25,23,45,-1,45,48,25,-1,29,28,23,-1,23,25,29,-1,34,49,24,-1,24,26,34,-1,26,24,29,-1,29,30,26,-1,27,25,48,-1,48,37,27,-1,30,29,25,-1,25,27,30,-1,50,0,22,-1,22,51,50,-1,22,24,49,-1,49,51,22,-1,31,13,45,-1,45,23,31,-1,28,32,31,-1,31,23,28,-1,22,0,32,-1,32,28,22,-1,35,36,33,-1,33,34,35,-1,37,38,36,-1,36,35,37,-1,43,44,41,-1,41,42,43,-1,47,48,45,-1,45,46,47,-1,44,47,46,-1,46,41,44,-1,34,33,43,-1,43,49,34,-1,33,36,44,-1,44,43,33,-1,38,37,48,-1,48,47,38,-1,36,38,47,-1,47,44,36,-1,50,51,42,-1,42,7,50,-1,42,51,49,-1,49,43,42,-1,39,46,45,-1,45,13,39,-1,41,46,39,-1,39,40,41,-1,42,41,40,-1,40,7,42,-1,10,53,7,-1,7,40,10,-1,32,0,52,-1,52,2,32,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=12, element #108, 416 total numbers */
	this.IndexedFaceSet_12_108_texCoordIndex = new MFInt32(Java.to([15,14,17,-1,17,16,15,-1,2,3,1,-1,3,46,1,-1,7,5,4,-1,4,6,7,-1,6,6,7,-1,7,7,6,-1,2,9,8,-1,8,3,2,-1,4,10,6,-1,11,10,12,-1,8,13,13,-1,13,3,8,-1,13,10,4,-1,13,4,46,-1,3,13,46,-1,9,2,0,-1,10,13,12,-1,6,6,10,-1,10,11,6,-1,13,13,12,-1,15,19,18,-1,18,14,15,-1,2,1,3,-1,3,1,46,-1,7,6,4,-1,4,5,7,-1,6,7,7,-1,7,6,6,-1,2,3,8,-1,8,9,2,-1,4,6,10,-1,11,12,10,-1,8,3,13,-1,13,13,8,-1,4,10,13,-1,46,4,13,-1,3,46,13,-1,9,0,2,-1,13,10,12,-1,6,11,10,-1,10,6,6,-1,13,12,13,-1,33,32,21,-1,21,34,33,-1,24,22,23,-1,23,25,24,-1,28,27,26,-1,26,29,28,-1,31,30,30,-1,30,31,31,-1,29,26,30,-1,30,31,29,-1,32,36,35,-1,35,21,32,-1,20,28,29,-1,29,23,20,-1,25,31,31,-1,31,24,25,-1,23,29,31,-1,31,25,23,-1,37,40,39,-1,39,38,37,-1,39,35,36,-1,36,38,39,-1,7,7,30,-1,30,30,7,-1,26,5,7,-1,7,30,26,-1,27,1,5,-1,5,26,27,-1,33,42,41,-1,41,32,33,-1,24,25,23,-1,23,22,24,-1,28,29,26,-1,26,27,28,-1,31,31,30,-1,30,30,31,-1,29,31,30,-1,30,26,29,-1,32,41,43,-1,43,36,32,-1,20,23,29,-1,29,28,20,-1,25,24,31,-1,31,31,25,-1,23,25,31,-1,31,29,23,-1,37,38,45,-1,45,44,37,-1,45,38,36,-1,36,43,45,-1,7,30,30,-1,30,7,7,-1,26,30,7,-1,7,5,26,-1,27,26,5,-1,5,1,27,-1,4,46,1,-1,1,5,4,-1,5,1,46,-1,46,4,5,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=13, element #108, 162 total numbers made up of 54 3-tuple values */
	this.Coordinate_13_108_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(-1.7690),doubleToFloat(-0.6918),doubleToFloat(0.7987),doubleToFloat(-1.7580),doubleToFloat(-3.4270),doubleToFloat(-1.2490),doubleToFloat(-2.0660),doubleToFloat(-2.7660),doubleToFloat(-1.3860),doubleToFloat(-1.8470),doubleToFloat(-0.2455),doubleToFloat(-1.4750),doubleToFloat(-1.5160),doubleToFloat(0.0194),doubleToFloat(-0.0180),doubleToFloat(-1.3010),doubleToFloat(-2.6290),doubleToFloat(-2.1640),doubleToFloat(-1.1910),doubleToFloat(-0.8667),doubleToFloat(-2.2090),doubleToFloat(1.7690),doubleToFloat(-0.6918),doubleToFloat(0.7987),doubleToFloat(1.5160),doubleToFloat(0.0194),doubleToFloat(-0.0180),doubleToFloat(1.8470),doubleToFloat(-0.2455),doubleToFloat(-1.4750)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(2.0660),doubleToFloat(-2.7660),doubleToFloat(-1.3860),doubleToFloat(1.7580),doubleToFloat(-3.4270),doubleToFloat(-1.2490),doubleToFloat(-0.0000),doubleToFloat(-3.4260),doubleToFloat(-1.2490),doubleToFloat(0.0000),doubleToFloat(-3.4180),doubleToFloat(0.8189),doubleToFloat(0.0000),doubleToFloat(0.2209),doubleToFloat(-1.2720),doubleToFloat(0.0000),doubleToFloat(0.4548),doubleToFloat(-0.0643),doubleToFloat(1.3010),doubleToFloat(-2.6290),doubleToFloat(-2.1640),doubleToFloat(-0.0000),doubleToFloat(-2.9960),doubleToFloat(-2.0200),doubleToFloat(0.0000),doubleToFloat(-1.4330),doubleToFloat(-2.3870),doubleToFloat(1.1910),doubleToFloat(-0.8667),doubleToFloat(-2.2090)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.0000),doubleToFloat(-0.6593),doubleToFloat(-2.0200),doubleToFloat(0.0000),doubleToFloat(0.2177),doubleToFloat(0.6159),doubleToFloat(-1.9990),doubleToFloat(-1.3800),doubleToFloat(2.1850),doubleToFloat(-2.1760),doubleToFloat(-3.4300),doubleToFloat(2.2550),doubleToFloat(-2.0860),doubleToFloat(-1.9040),doubleToFloat(3.4810),doubleToFloat(-2.1350),doubleToFloat(-3.4300),doubleToFloat(3.5500),doubleToFloat(-1.7520),doubleToFloat(-2.2360),doubleToFloat(4.7890),doubleToFloat(-1.8220),doubleToFloat(-3.4300),doubleToFloat(5.1420),doubleToFloat(-2.2680),doubleToFloat(-2.7930),doubleToFloat(2.2380),doubleToFloat(-2.1960),doubleToFloat(-2.8120),doubleToFloat(3.5110)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.8960),doubleToFloat(-2.7950),doubleToFloat(5.1100),doubleToFloat(-1.8240),doubleToFloat(-3.4270),doubleToFloat(0.8189),doubleToFloat(-2.0060),doubleToFloat(-2.7670),doubleToFloat(0.7950),doubleToFloat(1.7520),doubleToFloat(-2.2360),doubleToFloat(4.7890),doubleToFloat(0.0000),doubleToFloat(-2.0100),doubleToFloat(5.2040),doubleToFloat(0.0000),doubleToFloat(-2.7900),doubleToFloat(5.6600),doubleToFloat(1.8960),doubleToFloat(-2.7950),doubleToFloat(5.1100),doubleToFloat(0.0000),doubleToFloat(-3.4300),doubleToFloat(5.6220),doubleToFloat(1.8220),doubleToFloat(-3.4300),doubleToFloat(5.1420),doubleToFloat(1.8240),doubleToFloat(-3.4270),doubleToFloat(0.8189)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(2.0060),doubleToFloat(-2.7670),doubleToFloat(0.7950),doubleToFloat(2.2680),doubleToFloat(-2.7930),doubleToFloat(2.2380),doubleToFloat(2.1630),doubleToFloat(-1.3800),doubleToFloat(2.1850),doubleToFloat(2.0860),doubleToFloat(-1.9040),doubleToFloat(3.4810),doubleToFloat(2.1960),doubleToFloat(-2.8120),doubleToFloat(3.5110),doubleToFloat(0.0000),doubleToFloat(-3.4300),doubleToFloat(2.2550),doubleToFloat(2.0130),doubleToFloat(-3.4300),doubleToFloat(2.2550),doubleToFloat(2.1350),doubleToFloat(-3.4300),doubleToFloat(3.5500),doubleToFloat(0.0000),doubleToFloat(-3.4300),doubleToFloat(3.5500),doubleToFloat(0.0000),doubleToFloat(-1.5360),doubleToFloat(3.7890)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.0000),doubleToFloat(-0.2974),doubleToFloat(1.2960),doubleToFloat(0.0000),doubleToFloat(-0.9464),doubleToFloat(2.4410),doubleToFloat(-1.9540),doubleToFloat(-1.4690),doubleToFloat(-1.4320),doubleToFloat(1.9540),doubleToFloat(-1.4690),doubleToFloat(-1.4310)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=13, element #109, 94 total numbers made up of 47 2-tuple values */
	this.TextureCoordinate_13_109_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.1332),doubleToFloat(0.1110),doubleToFloat(0.1385),doubleToFloat(0.0844),doubleToFloat(0.1146),doubleToFloat(0.1052),doubleToFloat(0.0718),doubleToFloat(0.0975),doubleToFloat(0.0744),doubleToFloat(0.0238),doubleToFloat(0.1384),doubleToFloat(0.0238),doubleToFloat(0.0784),doubleToFloat(0.0045),doubleToFloat(0.1384),doubleToFloat(0.0045),doubleToFloat(0.0777),doubleToFloat(0.1111),doubleToFloat(0.1132),doubleToFloat(0.1179)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.0516),doubleToFloat(0.0322),doubleToFloat(0.0558),doubleToFloat(0.0214),doubleToFloat(0.0450),doubleToFloat(0.0628),doubleToFloat(0.0521),doubleToFloat(0.0813),doubleToFloat(0.2264),doubleToFloat(0.2171),doubleToFloat(0.2264),doubleToFloat(0.1898),doubleToFloat(0.2880),doubleToFloat(0.1984),doubleToFloat(0.2792),doubleToFloat(0.2323),doubleToFloat(0.1736),doubleToFloat(0.2323),doubleToFloat(0.1648),doubleToFloat(0.1984)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.2556),doubleToFloat(0.0393),doubleToFloat(0.2873),doubleToFloat(0.0895),doubleToFloat(0.2812),doubleToFloat(0.0232),doubleToFloat(0.2651),doubleToFloat(0.0230),doubleToFloat(0.2801),doubleToFloat(0.0044),doubleToFloat(0.2660),doubleToFloat(0.0044),doubleToFloat(0.1808),doubleToFloat(0.0221),doubleToFloat(0.1792),doubleToFloat(0.0644),doubleToFloat(0.2172),doubleToFloat(0.0490),doubleToFloat(0.2181),doubleToFloat(0.0225)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1813),doubleToFloat(0.0044),doubleToFloat(0.2193),doubleToFloat(0.0044),doubleToFloat(0.2268),doubleToFloat(0.0825),doubleToFloat(0.2268),doubleToFloat(0.0640),doubleToFloat(0.2880),doubleToFloat(0.0793),doubleToFloat(0.2988),doubleToFloat(0.1248),doubleToFloat(0.2268),doubleToFloat(0.1162),doubleToFloat(0.2268),doubleToFloat(0.1899),doubleToFloat(0.2268),doubleToFloat(0.1537),doubleToFloat(0.2958),doubleToFloat(0.1609)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.2879),doubleToFloat(0.1996),doubleToFloat(0.1662),doubleToFloat(0.0895),doubleToFloat(0.1655),doubleToFloat(0.0793),doubleToFloat(0.1547),doubleToFloat(0.1248),doubleToFloat(0.1656),doubleToFloat(0.1996),doubleToFloat(0.1577),doubleToFloat(0.1609),doubleToFloat(0.0731),doubleToFloat(0.0615)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=9, element #121, 624 total numbers */
	this.IndexedFaceSet_9_121_coordIndex = new MFInt32(Java.to([17,0,6,-1,6,8,17,-1,27,28,10,-1,10,12,27,-1,14,5,3,-1,3,12,14,-1,15,8,6,-1,6,1,15,-1,18,31,29,-1,29,2,18,-1,17,19,4,-1,4,0,17,-1,15,1,5,-1,5,14,15,-1,9,16,18,-1,18,19,9,-1,11,60,61,-1,61,7,11,-1,7,61,30,-1,30,35,7,-1,16,63,31,-1,31,18,16,-1,13,9,19,-1,19,17,13,-1,2,4,19,-1,19,18,2,-1,8,13,17,-1,35,30,63,-1,63,16,35,-1,12,3,65,-1,65,27,12,-1,11,10,28,-1,28,60,11,-1,3,21,67,-1,67,65,3,-1,0,26,20,-1,20,6,0,-1,5,22,21,-1,21,3,5,-1,1,23,22,-1,22,5,1,-1,1,6,20,-1,20,23,1,-1,2,29,32,-1,32,24,2,-1,4,2,24,-1,24,25,4,-1,0,4,25,-1,25,26,0,-1,21,33,67,-1,26,33,20,-1,22,33,21,-1,23,33,22,-1,20,33,23,-1,32,33,24,-1,24,33,25,-1,25,33,26,-1,36,13,8,-1,8,37,36,-1,34,9,13,-1,13,36,34,-1,38,15,14,-1,14,39,38,-1,37,8,15,-1,15,38,37,-1,34,35,16,-1,12,39,14,-1,11,7,40,-1,7,35,40,-1,35,34,40,-1,34,36,40,-1,36,37,40,-1,37,38,40,-1,38,39,40,-1,39,10,40,-1,10,11,40,-1,41,44,43,-1,43,42,41,-1,27,45,46,-1,46,28,27,-1,47,45,49,-1,49,48,47,-1,51,50,43,-1,43,44,51,-1,53,52,29,-1,29,31,53,-1,41,42,55,-1,55,54,41,-1,51,47,48,-1,48,50,51,-1,56,54,53,-1,53,57,56,-1,59,58,61,-1,61,60,59,-1,58,62,30,-1,30,61,58,-1,57,53,31,-1,31,63,57,-1,64,41,54,-1,54,56,64,-1,52,53,54,-1,54,55,52,-1,44,41,64,-1,62,57,63,-1,63,30,62,-1,45,27,65,-1,65,49,45,-1,59,60,28,-1,28,46,59,-1,49,65,67,-1,67,66,49,-1,42,43,69,-1,69,68,42,-1,48,49,66,-1,66,70,48,-1,50,48,70,-1,70,71,50,-1,50,71,69,-1,69,43,50,-1,52,72,32,-1,32,29,52,-1,55,73,72,-1,72,52,55,-1,42,68,73,-1,73,55,42,-1,66,67,33,-1,68,69,33,-1,70,66,33,-1,71,70,33,-1,69,71,33,-1,32,72,33,-1,72,73,33,-1,73,68,33,-1,74,75,44,-1,44,64,74,-1,76,74,64,-1,64,56,76,-1,77,78,47,-1,47,51,77,-1,75,77,51,-1,51,44,75,-1,56,57,76,-1,45,78,46,-1,59,79,58,-1,58,79,62,-1,62,79,76,-1,76,79,74,-1,74,79,75,-1,75,79,77,-1,77,79,78,-1,78,79,46,-1,46,79,59,-1,16,9,34,-1,57,62,76,-1,12,10,39,-1,45,47,78,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=9, element #121, 624 total numbers */
	this.IndexedFaceSet_9_121_texCoordIndex = new MFInt32(Java.to([0,1,2,-1,2,12,0,-1,4,5,6,-1,6,3,4,-1,7,8,9,-1,9,3,7,-1,11,26,27,-1,27,10,11,-1,14,15,16,-1,16,13,14,-1,0,17,18,-1,18,1,0,-1,11,10,8,-1,8,7,11,-1,19,20,14,-1,14,17,19,-1,22,23,24,-1,24,21,22,-1,21,24,29,-1,29,25,21,-1,20,30,15,-1,15,14,20,-1,33,19,17,-1,17,0,33,-1,13,18,17,-1,17,14,13,-1,12,33,0,-1,25,29,30,-1,30,20,25,-1,3,9,28,-1,28,4,3,-1,32,6,5,-1,5,31,32,-1,9,39,40,-1,40,28,9,-1,1,34,35,-1,35,2,1,-1,8,41,39,-1,39,9,8,-1,10,47,41,-1,41,8,10,-1,10,27,48,-1,48,47,10,-1,13,16,36,-1,36,37,13,-1,18,13,37,-1,37,38,18,-1,1,18,38,-1,38,34,1,-1,39,49,40,-1,34,42,35,-1,41,49,39,-1,47,49,41,-1,48,49,47,-1,36,42,37,-1,37,42,38,-1,38,42,34,-1,43,33,12,-1,12,44,43,-1,45,19,33,-1,33,43,45,-1,50,11,7,-1,7,56,50,-1,74,26,11,-1,11,50,74,-1,45,25,20,-1,3,56,7,-1,22,21,46,-1,21,25,46,-1,25,45,46,-1,45,43,46,-1,43,44,46,-1,74,50,75,-1,50,56,75,-1,56,6,75,-1,6,32,75,-1,51,52,53,-1,53,54,51,-1,4,76,77,-1,77,5,4,-1,80,76,78,-1,78,79,80,-1,84,81,82,-1,82,83,84,-1,57,55,16,-1,16,15,57,-1,51,54,58,-1,58,59,51,-1,84,80,79,-1,79,81,84,-1,60,59,57,-1,57,61,60,-1,63,62,24,-1,24,23,63,-1,62,64,29,-1,29,24,62,-1,61,57,15,-1,15,30,61,-1,65,51,59,-1,59,60,65,-1,55,57,59,-1,59,58,55,-1,52,51,65,-1,64,61,30,-1,30,29,64,-1,76,4,28,-1,28,78,76,-1,85,31,5,-1,5,77,85,-1,78,28,40,-1,40,86,78,-1,54,53,66,-1,66,67,54,-1,79,78,86,-1,86,87,79,-1,81,79,87,-1,87,88,81,-1,81,88,89,-1,89,82,81,-1,55,68,36,-1,36,16,55,-1,58,69,68,-1,68,55,58,-1,54,67,69,-1,69,58,54,-1,86,40,49,-1,67,66,42,-1,87,86,49,-1,88,87,49,-1,89,88,49,-1,36,68,42,-1,68,69,42,-1,69,67,42,-1,70,71,52,-1,52,65,70,-1,72,70,65,-1,65,60,72,-1,90,91,80,-1,80,84,90,-1,92,90,84,-1,84,83,92,-1,60,61,72,-1,76,91,77,-1,63,73,62,-1,62,73,64,-1,64,73,72,-1,72,73,70,-1,70,73,71,-1,92,93,90,-1,90,93,91,-1,91,93,77,-1,77,93,85,-1,20,19,45,-1,61,64,72,-1,3,6,56,-1,76,80,91,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=10, element #121, 240 total numbers made up of 80 3-tuple values */
	this.Coordinate_10_121_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(4.8080),doubleToFloat(4.9310),doubleToFloat(-2.1460),doubleToFloat(5.2220),doubleToFloat(4.9310),doubleToFloat(2.1690),doubleToFloat(1.7160),doubleToFloat(4.9310),doubleToFloat(-3.5860),doubleToFloat(1.9540),doubleToFloat(4.9310),doubleToFloat(3.7840),doubleToFloat(3.4150),doubleToFloat(4.9310),doubleToFloat(-3.0280),doubleToFloat(3.8350),doubleToFloat(4.9310),doubleToFloat(3.3800),doubleToFloat(5.5800),doubleToFloat(4.9310),doubleToFloat(0.1246),doubleToFloat(0.8538),doubleToFloat(0.2331),doubleToFloat(-1.8430),doubleToFloat(5.9350),doubleToFloat(3.2130),doubleToFloat(0.1245),doubleToFloat(3.5770),doubleToFloat(1.8050),doubleToFloat(-3.4860)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(1.4650),doubleToFloat(0.8727),doubleToFloat(2.8540),doubleToFloat(0.6716),doubleToFloat(-0.1321),doubleToFloat(0.1246),doubleToFloat(1.9510),doubleToFloat(2.7360),doubleToFloat(3.8460),doubleToFloat(5.0080),doubleToFloat(2.3930),doubleToFloat(-2.3340),doubleToFloat(3.8350),doubleToFloat(2.8450),doubleToFloat(3.5020),doubleToFloat(5.4750),doubleToFloat(3.0590),doubleToFloat(2.3580),doubleToFloat(1.8160),doubleToFloat(1.6190),doubleToFloat(-3.7120),doubleToFloat(4.9170),doubleToFloat(3.8050),doubleToFloat(-2.3090),doubleToFloat(1.7660),doubleToFloat(3.4880),doubleToFloat(-3.9340),doubleToFloat(3.4580),doubleToFloat(3.6180),doubleToFloat(-3.3820)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(4.9590),doubleToFloat(5.8580),doubleToFloat(0.1246),doubleToFloat(1.6150),doubleToFloat(5.8590),doubleToFloat(3.2250),doubleToFloat(3.4810),doubleToFloat(5.8590),doubleToFloat(2.7920),doubleToFloat(4.9220),doubleToFloat(5.8580),doubleToFloat(1.5040),doubleToFloat(1.4600),doubleToFloat(5.8570),doubleToFloat(-2.5910),doubleToFloat(2.9550),doubleToFloat(5.8570),doubleToFloat(-2.2140),doubleToFloat(4.1370),doubleToFloat(5.8570),doubleToFloat(-1.4990),doubleToFloat(0.0000),doubleToFloat(2.6590),doubleToFloat(3.9340),doubleToFloat(-0.0001),doubleToFloat(0.6338),doubleToFloat(2.9450),doubleToFloat(0.0000),doubleToFloat(4.9310),doubleToFloat(-3.6250)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.0000),doubleToFloat(0.7220),doubleToFloat(-2.8960),doubleToFloat(0.0000),doubleToFloat(3.4430),doubleToFloat(-3.8750),doubleToFloat(0.0000),doubleToFloat(5.8570),doubleToFloat(-2.6990),doubleToFloat(0.0000),doubleToFloat(6.5260),doubleToFloat(0.1246),doubleToFloat(3.6480),doubleToFloat(0.8046),doubleToFloat(-3.4070),doubleToFloat(1.7060),doubleToFloat(0.6696),doubleToFloat(-2.9010),doubleToFloat(5.2680),doubleToFloat(1.2740),doubleToFloat(-2.3580),doubleToFloat(6.0420),doubleToFloat(1.5790),doubleToFloat(0.1246),doubleToFloat(5.5200),doubleToFloat(1.5680),doubleToFloat(2.5400),doubleToFloat(3.8350),doubleToFloat(1.4680),doubleToFloat(3.5920)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(3.8560),doubleToFloat(-0.5285),doubleToFloat(0.1008),doubleToFloat(-4.9170),doubleToFloat(3.8050),doubleToFloat(-2.3090),doubleToFloat(-4.8080),doubleToFloat(4.9310),doubleToFloat(-2.1460),doubleToFloat(-5.5800),doubleToFloat(4.9310),doubleToFloat(0.1246),doubleToFloat(-5.9350),doubleToFloat(3.2130),doubleToFloat(0.1245),doubleToFloat(-1.9510),doubleToFloat(2.7360),doubleToFloat(3.8460),doubleToFloat(-1.4650),doubleToFloat(0.8727),doubleToFloat(2.8540),doubleToFloat(-3.8350),doubleToFloat(2.8450),doubleToFloat(3.5020),doubleToFloat(-3.8350),doubleToFloat(4.9310),doubleToFloat(3.3800),doubleToFloat(-1.9540),doubleToFloat(4.9310),doubleToFloat(3.7840)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-5.2220),doubleToFloat(4.9310),doubleToFloat(2.1690),doubleToFloat(-5.4750),doubleToFloat(3.0590),doubleToFloat(2.3580),doubleToFloat(-1.7160),doubleToFloat(4.9310),doubleToFloat(-3.5860),doubleToFloat(-1.7660),doubleToFloat(3.4880),doubleToFloat(-3.9340),doubleToFloat(-3.4580),doubleToFloat(3.6180),doubleToFloat(-3.3820),doubleToFloat(-3.4150),doubleToFloat(4.9310),doubleToFloat(-3.0280),doubleToFloat(-3.5770),doubleToFloat(1.8050),doubleToFloat(-3.4860),doubleToFloat(-1.8160),doubleToFloat(1.6190),doubleToFloat(-3.7120),doubleToFloat(-0.8538),doubleToFloat(0.2331),doubleToFloat(-1.8430),doubleToFloat(-0.6716),doubleToFloat(-0.1321),doubleToFloat(0.1246)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.0000),doubleToFloat(-0.0530),doubleToFloat(0.1246),doubleToFloat(0.0000),doubleToFloat(0.3128),doubleToFloat(-1.9990),doubleToFloat(-1.7060),doubleToFloat(0.6696),doubleToFloat(-2.9010),doubleToFloat(0.0000),doubleToFloat(1.9030),doubleToFloat(-3.7670),doubleToFloat(-5.0080),doubleToFloat(2.3930),doubleToFloat(-2.3340),doubleToFloat(0.0000),doubleToFloat(4.9310),doubleToFloat(3.8770),doubleToFloat(-1.6150),doubleToFloat(5.8590),doubleToFloat(3.2250),doubleToFloat(0.0000),doubleToFloat(5.8590),doubleToFloat(3.1620),doubleToFloat(-4.1370),doubleToFloat(5.8570),doubleToFloat(-1.4990),doubleToFloat(-4.9590),doubleToFloat(5.8580),doubleToFloat(0.1246)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-3.4810),doubleToFloat(5.8590),doubleToFloat(2.7920),doubleToFloat(-4.9220),doubleToFloat(5.8580),doubleToFloat(1.5040),doubleToFloat(-1.4600),doubleToFloat(5.8570),doubleToFloat(-2.5910),doubleToFloat(-2.9550),doubleToFloat(5.8570),doubleToFloat(-2.2140),doubleToFloat(-5.2680),doubleToFloat(1.2740),doubleToFloat(-2.3580),doubleToFloat(-6.0420),doubleToFloat(1.5790),doubleToFloat(0.1246),doubleToFloat(-3.6480),doubleToFloat(0.8046),doubleToFloat(-3.4070),doubleToFloat(-5.5200),doubleToFloat(1.5680),doubleToFloat(2.5400),doubleToFloat(-3.8350),doubleToFloat(1.4680),doubleToFloat(3.5920),doubleToFloat(-3.8560),doubleToFloat(-0.5285),doubleToFloat(0.1008)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=10, element #122, 188 total numbers made up of 94 2-tuple values */
	this.TextureCoordinate_10_122_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.5818),doubleToFloat(0.0856),doubleToFloat(0.5841),doubleToFloat(0.1063),doubleToFloat(0.5680),doubleToFloat(0.1063),doubleToFloat(0.4728),doubleToFloat(0.0659),doubleToFloat(0.4321),doubleToFloat(0.0645),doubleToFloat(0.4321),doubleToFloat(0.0274),doubleToFloat(0.4626),doubleToFloat(0.0318),doubleToFloat(0.5120),doubleToFloat(0.0680),doubleToFloat(0.5120),doubleToFloat(0.1061),doubleToFloat(0.4728),doubleToFloat(0.1061)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5409),doubleToFloat(0.1061),doubleToFloat(0.5462),doubleToFloat(0.0719),doubleToFloat(0.5606),doubleToFloat(0.0748),doubleToFloat(0.6485),doubleToFloat(0.1063),doubleToFloat(0.6475),doubleToFloat(0.0798),doubleToFloat(0.6843),doubleToFloat(0.0790),doubleToFloat(0.6843),doubleToFloat(0.1063),doubleToFloat(0.6122),doubleToFloat(0.0822),doubleToFloat(0.6131),doubleToFloat(0.1063),doubleToFloat(0.6097),doubleToFloat(0.0490)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.6464),doubleToFloat(0.0456),doubleToFloat(0.6665),doubleToFloat(0.0202),doubleToFloat(0.6703),doubleToFloat(0.0135),doubleToFloat(0.6843),doubleToFloat(0.0149),doubleToFloat(0.6843),doubleToFloat(0.0216),doubleToFloat(0.6487),doubleToFloat(0.0282),doubleToFloat(0.5558),doubleToFloat(0.0747),doubleToFloat(0.5484),doubleToFloat(0.1062),doubleToFloat(0.4321),doubleToFloat(0.1061),doubleToFloat(0.6843),doubleToFloat(0.0291)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.6843),doubleToFloat(0.0508),doubleToFloat(0.4321),doubleToFloat(0.0148),doubleToFloat(0.4461),doubleToFloat(0.0134),doubleToFloat(0.5799),doubleToFloat(0.0597),doubleToFloat(0.5981),doubleToFloat(0.1233),doubleToFloat(0.5809),doubleToFloat(0.1233),doubleToFloat(0.6843),doubleToFloat(0.1233),doubleToFloat(0.6539),doubleToFloat(0.1233),doubleToFloat(0.6227),doubleToFloat(0.1233),doubleToFloat(0.4657),doubleToFloat(0.1231)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4321),doubleToFloat(0.1231),doubleToFloat(0.5046),doubleToFloat(0.1231),doubleToFloat(0.6843),doubleToFloat(0.1355),doubleToFloat(0.5745),doubleToFloat(0.0392),doubleToFloat(0.5584),doubleToFloat(0.0448),doubleToFloat(0.6083),doubleToFloat(0.0306),doubleToFloat(0.6039),doubleToFloat(0.0062),doubleToFloat(0.5347),doubleToFloat(0.1231),doubleToFloat(0.5354),doubleToFloat(0.1232),doubleToFloat(0.4321),doubleToFloat(0.1354)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5471),doubleToFloat(0.0445),doubleToFloat(0.7867),doubleToFloat(0.0856),doubleToFloat(0.8080),doubleToFloat(0.0748),doubleToFloat(0.8006),doubleToFloat(0.1063),doubleToFloat(0.7845),doubleToFloat(0.1063),doubleToFloat(0.7200),doubleToFloat(0.1063),doubleToFloat(0.5120),doubleToFloat(0.0427),doubleToFloat(0.7211),doubleToFloat(0.0798),doubleToFloat(0.7555),doubleToFloat(0.1063),doubleToFloat(0.7563),doubleToFloat(0.0822)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7588),doubleToFloat(0.0490),doubleToFloat(0.7221),doubleToFloat(0.0456),doubleToFloat(0.7021),doubleToFloat(0.0202),doubleToFloat(0.6983),doubleToFloat(0.0135),doubleToFloat(0.7198),doubleToFloat(0.0282),doubleToFloat(0.7886),doubleToFloat(0.0597),doubleToFloat(0.7876),doubleToFloat(0.1233),doubleToFloat(0.7705),doubleToFloat(0.1233),doubleToFloat(0.7147),doubleToFloat(0.1233),doubleToFloat(0.7459),doubleToFloat(0.1233)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7941),doubleToFloat(0.0392),doubleToFloat(0.8102),doubleToFloat(0.0448),doubleToFloat(0.7603),doubleToFloat(0.0306),doubleToFloat(0.7646),doubleToFloat(0.0062),doubleToFloat(0.5580),doubleToFloat(0.0447),doubleToFloat(0.5125),doubleToFloat(0.0061),doubleToFloat(0.3914),doubleToFloat(0.0659),doubleToFloat(0.4016),doubleToFloat(0.0318),doubleToFloat(0.3914),doubleToFloat(0.1061),doubleToFloat(0.3522),doubleToFloat(0.1061)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.3522),doubleToFloat(0.0680),doubleToFloat(0.3233),doubleToFloat(0.1061),doubleToFloat(0.3158),doubleToFloat(0.1062),doubleToFloat(0.3084),doubleToFloat(0.0747),doubleToFloat(0.3180),doubleToFloat(0.0719),doubleToFloat(0.4181),doubleToFloat(0.0134),doubleToFloat(0.3984),doubleToFloat(0.1231),doubleToFloat(0.3595),doubleToFloat(0.1231),doubleToFloat(0.3295),doubleToFloat(0.1231),doubleToFloat(0.3287),doubleToFloat(0.1232)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.3171),doubleToFloat(0.0445),doubleToFloat(0.3522),doubleToFloat(0.0427),doubleToFloat(0.3062),doubleToFloat(0.0447),doubleToFloat(0.3517),doubleToFloat(0.0061)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=10, element #130, 608 total numbers */
	this.IndexedFaceSet_10_130_coordIndex = new MFInt32(Java.to([13,12,10,-1,10,5,13,-1,14,13,5,-1,5,4,14,-1,6,19,14,-1,14,4,6,-1,8,11,3,-1,3,1,8,-1,1,0,7,-1,7,8,1,-1,0,1,2,-1,1,3,2,-1,11,9,15,-1,15,3,11,-1,9,10,12,-1,12,15,9,-1,7,0,19,-1,19,6,7,-1,3,15,2,-1,19,0,2,-1,12,16,15,-1,17,16,12,-1,12,13,17,-1,14,18,17,-1,17,13,14,-1,19,18,14,-1,2,15,16,-1,19,14,19,-1,18,19,19,-1,18,19,2,-1,17,18,2,-1,16,17,2,-1,4,5,21,-1,21,20,4,-1,5,10,22,-1,22,21,5,-1,10,9,23,-1,23,22,10,-1,9,11,24,-1,24,23,9,-1,11,8,25,-1,25,24,11,-1,8,7,26,-1,26,25,8,-1,7,6,27,-1,27,26,7,-1,6,4,20,-1,20,27,6,-1,20,21,28,-1,21,22,28,-1,22,23,28,-1,23,24,28,-1,24,25,28,-1,25,26,28,-1,26,27,28,-1,27,20,28,-1,29,30,31,-1,31,32,29,-1,33,34,30,-1,30,29,33,-1,36,34,33,-1,33,35,36,-1,38,36,35,-1,35,37,38,-1,40,38,37,-1,37,39,40,-1,42,40,39,-1,39,41,42,-1,41,44,43,-1,43,42,41,-1,32,31,43,-1,43,44,32,-1,45,29,32,-1,32,46,45,-1,47,33,29,-1,29,45,47,-1,35,33,47,-1,47,48,35,-1,37,35,48,-1,48,49,37,-1,50,39,37,-1,37,49,50,-1,51,41,39,-1,39,50,51,-1,44,41,51,-1,51,52,44,-1,32,44,52,-1,52,46,32,-1,31,30,53,-1,30,34,53,-1,34,36,53,-1,36,38,53,-1,38,40,53,-1,40,42,53,-1,42,43,53,-1,43,31,53,-1,45,46,54,-1,54,55,45,-1,47,45,55,-1,55,56,47,-1,57,48,47,-1,47,56,57,-1,58,49,48,-1,48,57,58,-1,59,50,49,-1,49,58,59,-1,60,51,50,-1,50,59,60,-1,52,51,60,-1,60,61,52,-1,46,52,61,-1,61,54,46,-1,55,54,62,-1,62,63,55,-1,56,55,63,-1,63,64,56,-1,65,57,56,-1,56,64,65,-1,66,58,57,-1,57,65,66,-1,67,59,58,-1,58,66,67,-1,68,60,59,-1,59,67,68,-1,61,60,68,-1,68,69,61,-1,54,61,69,-1,69,62,54,-1,63,62,71,-1,71,70,63,-1,62,69,72,-1,72,71,62,-1,69,68,73,-1,73,72,69,-1,68,67,74,-1,74,73,68,-1,67,66,75,-1,75,74,67,-1,66,65,76,-1,76,75,66,-1,65,64,77,-1,77,76,65,-1,64,63,70,-1,70,77,64,-1,70,71,78,-1,71,72,78,-1,72,73,78,-1,73,74,78,-1,74,75,78,-1,75,76,78,-1,76,77,78,-1,77,70,78,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=10, element #130, 608 total numbers */
	this.IndexedFaceSet_10_130_texCoordIndex = new MFInt32(Java.to([2,3,0,-1,0,1,2,-1,5,2,1,-1,1,4,5,-1,6,7,5,-1,5,4,6,-1,8,9,10,-1,10,11,8,-1,30,13,12,-1,12,29,30,-1,13,30,14,-1,11,10,31,-1,9,15,16,-1,16,10,9,-1,15,0,3,-1,3,16,15,-1,12,13,7,-1,7,6,12,-1,10,16,31,-1,7,13,14,-1,3,17,16,-1,18,17,3,-1,3,2,18,-1,5,19,18,-1,18,2,5,-1,7,19,5,-1,31,16,17,-1,7,5,7,-1,19,7,7,-1,19,7,14,-1,18,19,14,-1,17,18,31,-1,4,1,20,-1,20,21,4,-1,1,0,22,-1,22,20,1,-1,0,15,23,-1,23,22,0,-1,15,9,24,-1,24,23,15,-1,9,8,25,-1,25,24,9,-1,29,12,26,-1,26,32,29,-1,12,6,27,-1,27,26,12,-1,6,4,21,-1,21,27,6,-1,21,20,28,-1,20,22,33,-1,22,23,33,-1,23,24,33,-1,24,25,33,-1,32,26,28,-1,26,27,28,-1,27,21,28,-1,34,35,36,-1,36,37,34,-1,38,39,35,-1,35,34,38,-1,41,39,38,-1,38,40,41,-1,43,41,40,-1,40,42,43,-1,45,43,42,-1,42,44,45,-1,47,45,44,-1,44,46,47,-1,46,49,48,-1,48,47,46,-1,37,36,48,-1,48,49,37,-1,50,34,37,-1,37,51,50,-1,52,38,34,-1,34,50,52,-1,40,38,52,-1,52,53,40,-1,42,40,53,-1,53,54,42,-1,55,44,42,-1,42,54,55,-1,56,46,44,-1,44,55,56,-1,49,46,56,-1,56,57,49,-1,37,49,57,-1,57,51,37,-1,36,35,58,-1,35,39,58,-1,39,41,58,-1,41,43,58,-1,43,45,58,-1,45,47,58,-1,47,48,58,-1,48,36,58,-1,50,51,60,-1,60,59,50,-1,52,50,59,-1,59,61,52,-1,62,53,52,-1,52,61,62,-1,63,54,53,-1,53,62,63,-1,64,55,54,-1,54,63,64,-1,65,56,55,-1,55,64,65,-1,57,56,65,-1,65,66,57,-1,51,57,66,-1,66,60,51,-1,59,60,68,-1,68,67,59,-1,61,59,67,-1,67,69,61,-1,70,62,61,-1,61,69,70,-1,71,63,62,-1,62,70,71,-1,72,64,63,-1,63,71,72,-1,73,65,64,-1,64,72,73,-1,66,65,73,-1,73,74,66,-1,60,66,74,-1,74,68,60,-1,67,68,75,-1,75,76,67,-1,68,74,77,-1,77,75,68,-1,74,73,78,-1,78,77,74,-1,73,72,79,-1,79,78,73,-1,72,71,80,-1,80,79,72,-1,71,70,81,-1,81,80,71,-1,70,69,82,-1,82,81,70,-1,69,67,76,-1,76,82,69,-1,76,75,83,-1,75,77,83,-1,77,78,83,-1,78,79,83,-1,79,80,83,-1,80,81,83,-1,81,82,83,-1,82,76,83,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=11, element #130, 237 total numbers made up of 79 3-tuple values */
	this.Coordinate_11_130_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(1.7670),doubleToFloat(-1.1610),doubleToFloat(1.1720),doubleToFloat(2.1470),doubleToFloat(-1.5320),doubleToFloat(-0.0447),doubleToFloat(2.3510),doubleToFloat(-0.2901),doubleToFloat(-0.0389),doubleToFloat(1.7950),doubleToFloat(-1.2660),doubleToFloat(-1.2230),doubleToFloat(0.0596),doubleToFloat(1.1790),doubleToFloat(1.7720),doubleToFloat(0.5362),doubleToFloat(1.9240),doubleToFloat(-0.0115),doubleToFloat(0.1264),doubleToFloat(-0.2452),doubleToFloat(1.9900),doubleToFloat(0.1859),doubleToFloat(-1.8300),doubleToFloat(1.3350),doubleToFloat(0.2617),doubleToFloat(-2.1930),doubleToFloat(-0.0009),doubleToFloat(0.0485),doubleToFloat(-0.2483),doubleToFloat(-2.0760)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.2495),doubleToFloat(1.3470),doubleToFloat(-1.8650),doubleToFloat(0.0362),doubleToFloat(-1.8380),doubleToFloat(-1.3530),doubleToFloat(2.0310),doubleToFloat(1.0330),doubleToFloat(-1.3120),doubleToFloat(2.3790),doubleToFloat(1.2440),doubleToFloat(-0.0167),doubleToFloat(1.9550),doubleToFloat(0.9369),doubleToFloat(1.2760),doubleToFloat(1.5290),doubleToFloat(-0.1076),doubleToFloat(-1.6800),doubleToFloat(2.2520),doubleToFloat(0.2082),doubleToFloat(-1.2740),doubleToFloat(2.7510),doubleToFloat(0.4162),doubleToFloat(-0.0026),doubleToFloat(2.2530),doubleToFloat(0.2116),doubleToFloat(1.3200),doubleToFloat(1.4920),doubleToFloat(-0.1767),doubleToFloat(1.5680)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.6647),doubleToFloat(1.1070),doubleToFloat(1.6380),doubleToFloat(-0.6310),doubleToFloat(1.7970),doubleToFloat(-0.0150),doubleToFloat(-0.6357),doubleToFloat(1.2660),doubleToFloat(-1.7220),doubleToFloat(-0.8298),doubleToFloat(-0.1909),doubleToFloat(-1.9150),doubleToFloat(-0.7613),doubleToFloat(-1.5470),doubleToFloat(-1.3160),doubleToFloat(-0.6881),doubleToFloat(-1.8070),doubleToFloat(0.0125),doubleToFloat(-0.6891),doubleToFloat(-1.4740),doubleToFloat(1.5390),doubleToFloat(-0.7549),doubleToFloat(-0.2064),doubleToFloat(1.8400),doubleToFloat(-1.2370),doubleToFloat(-0.1103),doubleToFloat(-0.0007),doubleToFloat(2.6110),doubleToFloat(-8.3890),doubleToFloat(-0.9438)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(2.2560),doubleToFloat(-9.0340),doubleToFloat(-0.7256),doubleToFloat(1.7970),doubleToFloat(-9.0340),doubleToFloat(-0.9829),doubleToFloat(1.7970),doubleToFloat(-8.3890),doubleToFloat(-1.2180),doubleToFloat(3.0540),doubleToFloat(-8.3890),doubleToFloat(0.0688),doubleToFloat(2.7200),doubleToFloat(-9.0340),doubleToFloat(0.0715),doubleToFloat(2.6110),doubleToFloat(-8.3890),doubleToFloat(1.0660),doubleToFloat(2.2910),doubleToFloat(-9.0340),doubleToFloat(0.8983),doubleToFloat(1.7970),doubleToFloat(-8.3890),doubleToFloat(1.4480),doubleToFloat(1.7970),doubleToFloat(-9.0340),doubleToFloat(1.2010),doubleToFloat(1.0740),doubleToFloat(-8.3890),doubleToFloat(1.0660)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(1.2630),doubleToFloat(-9.0340),doubleToFloat(0.8963),doubleToFloat(0.6698),doubleToFloat(-8.3890),doubleToFloat(0.0688),doubleToFloat(0.9696),doubleToFloat(-9.0340),doubleToFloat(0.0715),doubleToFloat(1.2980),doubleToFloat(-9.0340),doubleToFloat(-0.7088),doubleToFloat(1.0740),doubleToFloat(-8.3890),doubleToFloat(-0.9438),doubleToFloat(2.5690),doubleToFloat(-5.1110),doubleToFloat(-1.0440),doubleToFloat(1.7190),doubleToFloat(-5.2540),doubleToFloat(-1.4160),doubleToFloat(2.9670),doubleToFloat(-5.0500),doubleToFloat(0.0688),doubleToFloat(2.5210),doubleToFloat(-5.1260),doubleToFloat(1.1880),doubleToFloat(1.6830),doubleToFloat(-5.2620),doubleToFloat(1.5180)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.8179),doubleToFloat(-5.3400),doubleToFloat(1.2150),doubleToFloat(0.3515),doubleToFloat(-5.3770),doubleToFloat(0.0688),doubleToFloat(0.7857),doubleToFloat(-5.3230),doubleToFloat(-1.0330),doubleToFloat(1.7970),doubleToFloat(-9.5200),doubleToFloat(0.0715),doubleToFloat(1.5150),doubleToFloat(-1.0330),doubleToFloat(-1.6480),doubleToFloat(2.4370),doubleToFloat(-0.8613),doubleToFloat(-1.2510),doubleToFloat(2.9430),doubleToFloat(-0.8246),doubleToFloat(-0.0030),doubleToFloat(2.4300),doubleToFloat(-0.8639),doubleToFloat(1.3240),doubleToFloat(1.4750),doubleToFloat(-1.0470),doubleToFloat(1.6650),doubleToFloat(0.4746),doubleToFloat(-1.3020),doubleToFloat(1.2020)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.0299),doubleToFloat(-1.4690),doubleToFloat(-0.0050),doubleToFloat(0.4862),doubleToFloat(-1.2780),doubleToFloat(-1.0650),doubleToFloat(1.5480),doubleToFloat(-0.1070),doubleToFloat(-1.6630),doubleToFloat(2.2400),doubleToFloat(0.2082),doubleToFloat(-1.2740),doubleToFloat(2.7390),doubleToFloat(0.4162),doubleToFloat(-0.0026),doubleToFloat(2.2410),doubleToFloat(0.2116),doubleToFloat(1.3200),doubleToFloat(1.5030),doubleToFloat(-0.1733),doubleToFloat(1.5880),doubleToFloat(0.4003),doubleToFloat(-0.5019),doubleToFloat(1.2380),doubleToFloat(-0.1000),doubleToFloat(-0.6640),doubleToFloat(-0.0078),doubleToFloat(0.4167),doubleToFloat(-0.4852),doubleToFloat(-1.0710)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(1.9560),doubleToFloat(0.4708),doubleToFloat(-0.9897),doubleToFloat(1.5250),doubleToFloat(0.3302),doubleToFloat(-1.2230),doubleToFloat(0.6903),doubleToFloat(-0.0093),doubleToFloat(-0.7764),doubleToFloat(0.3054),doubleToFloat(-0.1320),doubleToFloat(0.0087),doubleToFloat(0.6728),doubleToFloat(-0.0140),doubleToFloat(0.9228),doubleToFloat(1.4930),doubleToFloat(0.3035),doubleToFloat(1.1760),doubleToFloat(1.9660),doubleToFloat(0.4903),doubleToFloat(0.9942),doubleToFloat(2.3410),doubleToFloat(0.6409),doubleToFloat(0.0007),doubleToFloat(1.3580),doubleToFloat(0.5602),doubleToFloat(0.0126)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=11, element #131, 168 total numbers made up of 84 2-tuple values */
	this.TextureCoordinate_11_131_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.9511),doubleToFloat(0.2077),doubleToFloat(0.9350),doubleToFloat(0.2198),doubleToFloat(0.9206),doubleToFloat(0.1937),doubleToFloat(0.9340),doubleToFloat(0.1916),doubleToFloat(0.9169),doubleToFloat(0.2296),doubleToFloat(0.9109),doubleToFloat(0.2043),doubleToFloat(0.9019),doubleToFloat(0.2306),doubleToFloat(0.8990),doubleToFloat(0.2124),doubleToFloat(0.9892),doubleToFloat(0.1709),doubleToFloat(0.9767),doubleToFloat(0.1844)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.9553),doubleToFloat(0.1714),doubleToFloat(0.9561),doubleToFloat(0.1559),doubleToFloat(0.8848),doubleToFloat(0.2349),doubleToFloat(0.8854),doubleToFloat(0.2117),doubleToFloat(0.8909),doubleToFloat(0.1883),doubleToFloat(0.9635),doubleToFloat(0.1960),doubleToFloat(0.9475),doubleToFloat(0.1844),doubleToFloat(0.9356),doubleToFloat(0.1821),doubleToFloat(0.9135),doubleToFloat(0.1812),doubleToFloat(0.9039),doubleToFloat(0.2015)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.9450),doubleToFloat(0.2364),doubleToFloat(0.9197),doubleToFloat(0.2361),doubleToFloat(0.9561),doubleToFloat(0.2144),doubleToFloat(0.9690),doubleToFloat(0.2041),doubleToFloat(0.9817),doubleToFloat(0.1943),doubleToFloat(0.9972),doubleToFloat(0.1927),doubleToFloat(0.8919),doubleToFloat(0.2437),doubleToFloat(0.9056),doubleToFloat(0.2404),doubleToFloat(0.9154),doubleToFloat(0.2635),doubleToFloat(0.8657),doubleToFloat(0.2399)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.8704),doubleToFloat(0.2036),doubleToFloat(0.9315),doubleToFloat(0.1649),doubleToFloat(0.8809),doubleToFloat(0.2586),doubleToFloat(0.9841),doubleToFloat(0.2244),doubleToFloat(0.6723),doubleToFloat(0.8142),doubleToFloat(0.6649),doubleToFloat(0.8018),doubleToFloat(0.6553),doubleToFloat(0.8018),doubleToFloat(0.6553),doubleToFloat(0.8142),doubleToFloat(0.6816),doubleToFloat(0.8142),doubleToFloat(0.6746),doubleToFloat(0.8018)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.6723),doubleToFloat(0.8142),doubleToFloat(0.6656),doubleToFloat(0.8018),doubleToFloat(0.6553),doubleToFloat(0.8142),doubleToFloat(0.6553),doubleToFloat(0.8018),doubleToFloat(0.6402),doubleToFloat(0.8142),doubleToFloat(0.6441),doubleToFloat(0.8018),doubleToFloat(0.6317),doubleToFloat(0.8142),doubleToFloat(0.6380),doubleToFloat(0.8018),doubleToFloat(0.6448),doubleToFloat(0.8018),doubleToFloat(0.6402),doubleToFloat(0.8142)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.6714),doubleToFloat(0.8767),doubleToFloat(0.6536),doubleToFloat(0.8740),doubleToFloat(0.6797),doubleToFloat(0.8779),doubleToFloat(0.6704),doubleToFloat(0.8764),doubleToFloat(0.6529),doubleToFloat(0.8738),doubleToFloat(0.6348),doubleToFloat(0.8723),doubleToFloat(0.6251),doubleToFloat(0.8716),doubleToFloat(0.6341),doubleToFloat(0.8727),doubleToFloat(0.6553),doubleToFloat(0.7926),doubleToFloat(0.6687),doubleToFloat(0.9578)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.6494),doubleToFloat(0.9545),doubleToFloat(0.6792),doubleToFloat(0.9585),doubleToFloat(0.6685),doubleToFloat(0.9578),doubleToFloat(0.6485),doubleToFloat(0.9543),doubleToFloat(0.6276),doubleToFloat(0.9494),doubleToFloat(0.6171),doubleToFloat(0.9462),doubleToFloat(0.6279),doubleToFloat(0.9499),doubleToFloat(0.6645),doubleToFloat(0.9782),doubleToFloat(0.6501),doubleToFloat(0.9722),doubleToFloat(0.6750),doubleToFloat(0.9822)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.6646),doubleToFloat(0.9783),doubleToFloat(0.6491),doubleToFloat(0.9709),doubleToFloat(0.6261),doubleToFloat(0.9647),doubleToFloat(0.6156),doubleToFloat(0.9616),doubleToFloat(0.6264),doubleToFloat(0.9650),doubleToFloat(0.6496),doubleToFloat(0.9806),doubleToFloat(0.6586),doubleToFloat(0.9832),doubleToFloat(0.6321),doubleToFloat(0.9741),doubleToFloat(0.6241),doubleToFloat(0.9717),doubleToFloat(0.6318),doubleToFloat(0.9740)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.6489),doubleToFloat(0.9800),doubleToFloat(0.6588),doubleToFloat(0.9836),doubleToFloat(0.6667),doubleToFloat(0.9865),doubleToFloat(0.6461),doubleToFloat(0.9849)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=11, element #139, 320 total numbers */
	this.IndexedFaceSet_11_139_coordIndex = new MFInt32(Java.to([14,12,0,-1,0,20,14,-1,13,12,14,-1,14,15,13,-1,1,13,15,-1,15,21,1,-1,2,1,21,-1,21,22,2,-1,3,2,22,-1,22,23,3,-1,18,3,23,-1,23,16,18,-1,18,16,17,-1,17,19,18,-1,20,0,19,-1,19,17,20,-1,0,12,34,-1,34,35,0,-1,12,13,36,-1,36,34,12,-1,36,13,1,-1,1,37,36,-1,37,1,2,-1,2,38,37,-1,38,2,3,-1,3,39,38,-1,39,3,18,-1,18,40,39,-1,41,19,0,-1,0,35,41,-1,18,19,41,-1,41,40,18,-1,4,11,31,-1,31,24,4,-1,11,5,25,-1,25,31,11,-1,5,8,28,-1,28,25,5,-1,10,6,26,-1,26,30,10,-1,7,4,24,-1,24,27,7,-1,8,9,29,-1,29,28,8,-1,9,10,30,-1,30,29,9,-1,6,7,27,-1,27,26,6,-1,24,31,32,-1,31,25,32,-1,25,28,32,-1,28,29,32,-1,29,30,32,-1,30,26,32,-1,26,27,32,-1,27,24,32,-1,14,20,33,-1,20,17,33,-1,17,16,33,-1,16,23,33,-1,23,22,33,-1,22,21,33,-1,21,15,33,-1,15,14,33,-1,35,34,11,-1,11,4,35,-1,34,36,5,-1,5,11,34,-1,5,36,37,-1,37,8,5,-1,8,37,38,-1,38,9,8,-1,9,38,39,-1,39,10,9,-1,10,39,40,-1,40,6,10,-1,7,41,35,-1,35,4,7,-1,40,41,7,-1,7,6,40,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=11, element #139, 320 total numbers */
	this.IndexedFaceSet_11_139_texCoordIndex = new MFInt32(Java.to([0,1,2,-1,2,3,0,-1,5,1,0,-1,0,4,5,-1,7,5,4,-1,4,6,7,-1,9,7,6,-1,6,8,9,-1,11,9,8,-1,8,10,11,-1,13,11,10,-1,10,12,13,-1,13,12,14,-1,14,15,13,-1,3,2,15,-1,15,14,3,-1,2,1,16,-1,16,17,2,-1,1,5,18,-1,18,16,1,-1,18,5,7,-1,7,19,18,-1,19,7,9,-1,9,20,19,-1,20,9,11,-1,11,21,20,-1,21,11,13,-1,13,22,21,-1,23,15,2,-1,2,17,23,-1,13,15,23,-1,23,22,13,-1,24,25,26,-1,26,27,24,-1,25,28,29,-1,29,26,25,-1,28,30,31,-1,31,29,28,-1,32,33,34,-1,34,35,32,-1,36,24,27,-1,27,37,36,-1,30,38,39,-1,39,31,30,-1,38,32,35,-1,35,39,38,-1,33,36,37,-1,37,34,33,-1,27,26,40,-1,26,29,40,-1,29,31,40,-1,31,39,40,-1,39,35,40,-1,35,34,40,-1,34,37,40,-1,37,27,40,-1,0,3,41,-1,3,14,41,-1,14,12,41,-1,12,10,41,-1,10,8,41,-1,8,6,41,-1,6,4,41,-1,4,0,41,-1,17,16,25,-1,25,24,17,-1,16,18,28,-1,28,25,16,-1,28,18,19,-1,19,30,28,-1,30,19,20,-1,20,38,30,-1,38,20,21,-1,21,32,38,-1,32,21,22,-1,22,33,32,-1,36,23,17,-1,17,24,36,-1,22,23,36,-1,36,33,22,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=12, element #139, 126 total numbers made up of 42 3-tuple values */
	this.Coordinate_12_139_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(-0.0285),doubleToFloat(-0.0014),doubleToFloat(-1.2730),doubleToFloat(0.7859),doubleToFloat(-0.0014),doubleToFloat(1.0110),doubleToFloat(-0.0285),doubleToFloat(-0.0014),doubleToFloat(1.3930),doubleToFloat(-0.7518),doubleToFloat(-0.0014),doubleToFloat(1.0110),doubleToFloat(0.3269),doubleToFloat(-8.4760),doubleToFloat(-1.1350),doubleToFloat(1.0720),doubleToFloat(-8.3750),doubleToFloat(0.0140),doubleToFloat(-0.4474),doubleToFloat(-8.5400),doubleToFloat(0.0140),doubleToFloat(-0.2171),doubleToFloat(-8.5300),doubleToFloat(-0.8828),doubleToFloat(0.8740),doubleToFloat(-8.3820),doubleToFloat(0.8302),doubleToFloat(0.3775),doubleToFloat(-8.4300),doubleToFloat(1.1890)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.1689),doubleToFloat(-8.4940),doubleToFloat(0.9251),doubleToFloat(0.8721),doubleToFloat(-8.4100),doubleToFloat(-0.7528),doubleToFloat(0.7859),doubleToFloat(-0.0014),doubleToFloat(-0.9986),doubleToFloat(1.2190),doubleToFloat(-0.0014),doubleToFloat(0.0140),doubleToFloat(0.6257),doubleToFloat(0.3573),doubleToFloat(-0.8513),doubleToFloat(0.9878),doubleToFloat(0.3723),doubleToFloat(0.0140),doubleToFloat(-0.9446),doubleToFloat(0.3723),doubleToFloat(0.0140),doubleToFloat(-0.6206),doubleToFloat(0.3576),doubleToFloat(-0.8306),doubleToFloat(-1.1500),doubleToFloat(-0.0014),doubleToFloat(0.0140),doubleToFloat(-0.7518),doubleToFloat(-0.0014),doubleToFloat(-0.9986)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.0285),doubleToFloat(0.3525),doubleToFloat(-1.1300),doubleToFloat(0.6002),doubleToFloat(0.3872),doubleToFloat(0.8762),doubleToFloat(-0.0285),doubleToFloat(0.3938),doubleToFloat(1.2590),doubleToFloat(-0.6298),doubleToFloat(0.3874),doubleToFloat(0.8891),doubleToFloat(0.3498),doubleToFloat(-8.9870),doubleToFloat(-0.9214),doubleToFloat(0.8782),doubleToFloat(-8.8960),doubleToFloat(0.0140),doubleToFloat(-0.2599),doubleToFloat(-9.0580),doubleToFloat(0.0140),doubleToFloat(-0.0599),doubleToFloat(-9.0420),doubleToFloat(-0.7556),doubleToFloat(0.7651),doubleToFloat(-8.8990),doubleToFloat(0.7304),doubleToFloat(0.3925),doubleToFloat(-8.9480),doubleToFloat(1.0000)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.0474),doubleToFloat(-9.0130),doubleToFloat(0.8168),doubleToFloat(0.7037),doubleToFloat(-8.9320),doubleToFloat(-0.6264),doubleToFloat(0.3461),doubleToFloat(-8.9710),doubleToFloat(0.0140),doubleToFloat(-0.0285),doubleToFloat(0.6520),doubleToFloat(0.0140),doubleToFloat(0.8421),doubleToFloat(-4.5710),doubleToFloat(-0.8166),doubleToFloat(0.0839),doubleToFloat(-4.7070),doubleToFloat(-1.2400),doubleToFloat(1.2030),doubleToFloat(-4.4590),doubleToFloat(0.0139),doubleToFloat(0.9133),doubleToFloat(-4.5100),doubleToFloat(0.8922),doubleToFloat(0.1345),doubleToFloat(-4.6130),doubleToFloat(1.3040),doubleToFloat(-0.4791),doubleToFloat(-4.6390),doubleToFloat(0.9406)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.7499),doubleToFloat(-4.6280),doubleToFloat(0.0140),doubleToFloat(-0.5401),doubleToFloat(-4.6520),doubleToFloat(-0.8788)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=12, element #140, 84 total numbers made up of 42 2-tuple values */
	this.TextureCoordinate_12_140_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.6690),doubleToFloat(0.8210),doubleToFloat(0.6723),doubleToFloat(0.8142),doubleToFloat(0.6553),doubleToFloat(0.8142),doubleToFloat(0.6553),doubleToFloat(0.8209),doubleToFloat(0.6765),doubleToFloat(0.8213),doubleToFloat(0.6814),doubleToFloat(0.8142),doubleToFloat(0.6684),doubleToFloat(0.8216),doubleToFloat(0.6723),doubleToFloat(0.8142),doubleToFloat(0.6553),doubleToFloat(0.8217),doubleToFloat(0.6553),doubleToFloat(0.8142)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.6427),doubleToFloat(0.8216),doubleToFloat(0.6402),doubleToFloat(0.8142),doubleToFloat(0.6361),doubleToFloat(0.8213),doubleToFloat(0.6318),doubleToFloat(0.8142),doubleToFloat(0.6429),doubleToFloat(0.8210),doubleToFloat(0.6402),doubleToFloat(0.8142),doubleToFloat(0.6735),doubleToFloat(0.7270),doubleToFloat(0.6576),doubleToFloat(0.7244),doubleToFloat(0.6810),doubleToFloat(0.7291),doubleToFloat(0.6750),doubleToFloat(0.7281)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.6587),doubleToFloat(0.7262),doubleToFloat(0.6459),doubleToFloat(0.7257),doubleToFloat(0.6402),doubleToFloat(0.7259),doubleToFloat(0.6446),doubleToFloat(0.7254),doubleToFloat(0.6627),doubleToFloat(0.6524),doubleToFloat(0.6741),doubleToFloat(0.6537),doubleToFloat(0.6706),doubleToFloat(0.6437),doubleToFloat(0.6632),doubleToFloat(0.6427),doubleToFloat(0.6783),doubleToFloat(0.6544),doubleToFloat(0.6742),doubleToFloat(0.6444)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.6741),doubleToFloat(0.6542),doubleToFloat(0.6719),doubleToFloat(0.6444),doubleToFloat(0.6523),doubleToFloat(0.6521),doubleToFloat(0.6465),doubleToFloat(0.6512),doubleToFloat(0.6504),doubleToFloat(0.6413),doubleToFloat(0.6549),doubleToFloat(0.6422),doubleToFloat(0.6513),doubleToFloat(0.6514),doubleToFloat(0.6546),doubleToFloat(0.6416),doubleToFloat(0.6638),doubleToFloat(0.6533),doubleToFloat(0.6641),doubleToFloat(0.6434)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.6631),doubleToFloat(0.6430),doubleToFloat(0.6553),doubleToFloat(0.8266)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=12, element #148, 208 total numbers */
	this.IndexedFaceSet_12_148_coordIndex = new MFInt32(Java.to([3,0,1,-1,1,2,3,-1,5,6,7,-1,7,4,5,-1,9,10,11,-1,11,8,9,-1,9,12,13,-1,13,10,9,-1,15,16,17,-1,17,14,15,-1,16,15,18,-1,18,19,16,-1,3,11,10,-1,10,0,3,-1,10,13,1,-1,1,0,10,-1,16,20,21,-1,21,17,16,-1,20,16,19,-1,19,2,20,-1,7,6,9,-1,9,8,7,-1,5,12,9,-1,9,6,5,-1,15,14,22,-1,22,23,15,-1,18,15,23,-1,23,4,18,-1,21,20,2,-1,2,1,21,-1,23,22,5,-1,5,4,23,-1,12,14,17,-1,17,13,12,-1,26,27,24,-1,24,25,26,-1,21,1,13,-1,13,17,21,-1,11,3,2,-1,2,19,11,-1,22,14,12,-1,12,5,22,-1,4,7,8,-1,8,18,4,-1,25,24,8,-1,8,11,25,-1,11,19,26,-1,26,25,11,-1,19,18,27,-1,27,26,19,-1,18,8,24,-1,24,27,18,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=12, element #148, 208 total numbers */
	this.IndexedFaceSet_12_148_texCoordIndex = new MFInt32(Java.to([3,0,1,-1,1,2,3,-1,28,29,4,-1,4,5,28,-1,9,10,11,-1,11,8,9,-1,9,12,13,-1,13,10,9,-1,39,40,41,-1,41,38,39,-1,16,15,18,-1,18,19,16,-1,3,11,10,-1,10,0,3,-1,10,13,1,-1,1,0,10,-1,40,42,43,-1,43,41,40,-1,20,16,19,-1,19,2,20,-1,7,6,9,-1,9,8,7,-1,28,31,30,-1,30,29,28,-1,39,38,22,-1,22,23,39,-1,33,34,32,-1,32,5,33,-1,21,20,2,-1,2,1,21,-1,32,35,28,-1,28,5,32,-1,12,14,17,-1,17,13,12,-1,26,27,24,-1,24,25,26,-1,21,1,13,-1,13,17,21,-1,11,3,2,-1,2,19,11,-1,35,36,31,-1,31,28,35,-1,5,4,37,-1,37,33,5,-1,25,24,8,-1,8,11,25,-1,11,19,26,-1,26,25,11,-1,19,18,27,-1,27,26,19,-1,18,8,24,-1,24,27,18,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=13, element #148, 84 total numbers made up of 28 3-tuple values */
	this.Coordinate_13_148_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(0.6858),doubleToFloat(-0.0091),doubleToFloat(1.0430),doubleToFloat(0.8572),doubleToFloat(-0.0091),doubleToFloat(0.3582),doubleToFloat(-0.5820),doubleToFloat(-0.0091),doubleToFloat(0.3582),doubleToFloat(-0.5216),doubleToFloat(-0.0091),doubleToFloat(1.0430),doubleToFloat(-0.6790),doubleToFloat(-2.6600),doubleToFloat(0.2822),doubleToFloat(0.9542),doubleToFloat(-2.9920),doubleToFloat(0.2822),doubleToFloat(0.7672),doubleToFloat(-2.7140),doubleToFloat(1.2330),doubleToFloat(-0.6030),doubleToFloat(-2.4350),doubleToFloat(1.2330),doubleToFloat(-0.8768),doubleToFloat(-1.9070),doubleToFloat(1.4000),doubleToFloat(1.0410),doubleToFloat(-1.9070),doubleToFloat(1.4000)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(1.0410),doubleToFloat(-0.5983),doubleToFloat(1.4000),doubleToFloat(-0.8768),doubleToFloat(-0.5983),doubleToFloat(1.4000),doubleToFloat(1.2810),doubleToFloat(-2.0300),doubleToFloat(0.2845),doubleToFloat(1.2810),doubleToFloat(-0.5489),doubleToFloat(0.2845),doubleToFloat(1.0970),doubleToFloat(-1.9080),doubleToFloat(-1.4520),doubleToFloat(-0.8213),doubleToFloat(-1.9080),doubleToFloat(-1.4520),doubleToFloat(-0.8213),doubleToFloat(-0.5991),doubleToFloat(-1.4520),doubleToFloat(1.0970),doubleToFloat(-0.5991),doubleToFloat(-1.4520),doubleToFloat(-1.0050),doubleToFloat(-2.0300),doubleToFloat(0.2845),doubleToFloat(-1.0050),doubleToFloat(-0.5489),doubleToFloat(0.2845)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.4661),doubleToFloat(-0.0091),doubleToFloat(-1.0840),doubleToFloat(0.7414),doubleToFloat(-0.0091),doubleToFloat(-1.0840),doubleToFloat(0.8227),doubleToFloat(-2.7140),doubleToFloat(-1.1980),doubleToFloat(-0.5474),doubleToFloat(-2.4360),doubleToFloat(-1.1980),doubleToFloat(-1.2720),doubleToFloat(-1.7610),doubleToFloat(1.2130),doubleToFloat(-1.2720),doubleToFloat(-0.7447),doubleToFloat(1.2130),doubleToFloat(-1.4760),doubleToFloat(-0.7234),doubleToFloat(0.4714),doubleToFloat(-1.4760),doubleToFloat(-1.8560),doubleToFloat(0.4714)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=13, element #149, 88 total numbers made up of 44 2-tuple values */
	this.TextureCoordinate_13_149_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.9934),doubleToFloat(0.0820),doubleToFloat(0.9951),doubleToFloat(0.0877),doubleToFloat(0.9456),doubleToFloat(0.0877),doubleToFloat(0.9473),doubleToFloat(0.0820),doubleToFloat(0.9034),doubleToFloat(0.0905),doubleToFloat(0.8766),doubleToFloat(0.0919),doubleToFloat(0.9942),doubleToFloat(0.0090),doubleToFloat(0.9450),doubleToFloat(0.0157),doubleToFloat(0.9371),doubleToFloat(0.0285),doubleToFloat(0.9969),doubleToFloat(0.0285)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.9969),doubleToFloat(0.0684),doubleToFloat(0.9371),doubleToFloat(0.0684),doubleToFloat(0.9993),doubleToFloat(0.0256),doubleToFloat(0.9993),doubleToFloat(0.0715),doubleToFloat(0.9975),doubleToFloat(0.0285),doubleToFloat(0.9365),doubleToFloat(0.0285),doubleToFloat(0.9365),doubleToFloat(0.0684),doubleToFloat(0.9975),doubleToFloat(0.0684),doubleToFloat(0.9312),doubleToFloat(0.0256),doubleToFloat(0.9312),doubleToFloat(0.0715)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.9489),doubleToFloat(0.0820),doubleToFloat(0.9939),doubleToFloat(0.0820),doubleToFloat(0.9948),doubleToFloat(0.0090),doubleToFloat(0.9466),doubleToFloat(0.0157),doubleToFloat(0.9256),doubleToFloat(0.0321),doubleToFloat(0.9256),doubleToFloat(0.0648),doubleToFloat(0.9198),doubleToFloat(0.0672),doubleToFloat(0.9198),doubleToFloat(0.0298),doubleToFloat(0.8753),doubleToFloat(0.0485),doubleToFloat(0.9025),doubleToFloat(0.0502)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.9023),doubleToFloat(0.0288),doubleToFloat(0.8757),doubleToFloat(0.0269),doubleToFloat(0.8373),doubleToFloat(0.0909),doubleToFloat(0.8768),doubleToFloat(0.1071),doubleToFloat(0.8372),doubleToFloat(0.1061),doubleToFloat(0.8367),doubleToFloat(0.0504),doubleToFloat(0.8370),doubleToFloat(0.0294),doubleToFloat(0.9035),doubleToFloat(0.1061),doubleToFloat(0.9975),doubleToFloat(0.0285),doubleToFloat(0.9387),doubleToFloat(0.0285)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.9387),doubleToFloat(0.0684),doubleToFloat(0.9975),doubleToFloat(0.0684),doubleToFloat(0.9489),doubleToFloat(0.0820),doubleToFloat(0.9939),doubleToFloat(0.0820)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=10, element #160, 608 total numbers */
	this.IndexedFaceSet_10_160_coordIndex = new MFInt32(Java.to([13,5,10,-1,10,12,13,-1,14,4,5,-1,5,13,14,-1,6,4,14,-1,14,19,6,-1,8,1,3,-1,3,11,8,-1,1,8,7,-1,7,0,1,-1,0,2,1,-1,1,2,3,-1,11,3,15,-1,15,9,11,-1,9,15,12,-1,12,10,9,-1,7,6,19,-1,19,0,7,-1,3,2,15,-1,19,2,0,-1,12,15,16,-1,17,13,12,-1,12,16,17,-1,14,13,17,-1,17,18,14,-1,19,14,18,-1,2,16,15,-1,18,2,19,-1,19,14,19,-1,18,19,19,-1,17,2,18,-1,16,2,17,-1,4,20,21,-1,21,5,4,-1,5,21,22,-1,22,10,5,-1,10,22,23,-1,23,9,10,-1,9,23,24,-1,24,11,9,-1,11,24,25,-1,25,8,11,-1,8,25,26,-1,26,7,8,-1,7,26,27,-1,27,6,7,-1,6,27,20,-1,20,4,6,-1,20,28,21,-1,21,28,22,-1,22,28,23,-1,23,28,24,-1,24,28,25,-1,25,28,26,-1,26,28,27,-1,27,28,20,-1,29,32,31,-1,31,30,29,-1,33,29,30,-1,30,34,33,-1,36,35,33,-1,33,34,36,-1,38,37,35,-1,35,36,38,-1,40,39,37,-1,37,38,40,-1,42,41,39,-1,39,40,42,-1,41,42,43,-1,43,44,41,-1,32,44,43,-1,43,31,32,-1,45,46,32,-1,32,29,45,-1,47,45,29,-1,29,33,47,-1,35,48,47,-1,47,33,35,-1,37,49,48,-1,48,35,37,-1,50,49,37,-1,37,39,50,-1,51,50,39,-1,39,41,51,-1,44,52,51,-1,51,41,44,-1,32,46,52,-1,52,44,32,-1,31,53,30,-1,30,53,34,-1,34,53,36,-1,36,53,38,-1,38,53,40,-1,40,53,42,-1,42,53,43,-1,43,53,31,-1,45,55,54,-1,54,46,45,-1,47,56,55,-1,55,45,47,-1,57,56,47,-1,47,48,57,-1,58,57,48,-1,48,49,58,-1,59,58,49,-1,49,50,59,-1,60,59,50,-1,50,51,60,-1,52,61,60,-1,60,51,52,-1,46,54,61,-1,61,52,46,-1,55,63,62,-1,62,54,55,-1,56,64,63,-1,63,55,56,-1,65,64,56,-1,56,57,65,-1,66,65,57,-1,57,58,66,-1,67,66,58,-1,58,59,67,-1,68,67,59,-1,59,60,68,-1,61,69,68,-1,68,60,61,-1,54,62,69,-1,69,61,54,-1,63,70,71,-1,71,62,63,-1,62,71,72,-1,72,69,62,-1,69,72,73,-1,73,68,69,-1,68,73,74,-1,74,67,68,-1,67,74,75,-1,75,66,67,-1,66,75,76,-1,76,65,66,-1,65,76,77,-1,77,64,65,-1,64,77,70,-1,70,63,64,-1,70,78,71,-1,71,78,72,-1,72,78,73,-1,73,78,74,-1,74,78,75,-1,75,78,76,-1,76,78,77,-1,77,78,70,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=10, element #160, 608 total numbers */
	this.IndexedFaceSet_10_160_texCoordIndex = new MFInt32(Java.to([2,1,0,-1,0,3,2,-1,5,4,1,-1,1,2,5,-1,6,4,5,-1,5,7,6,-1,8,11,10,-1,10,9,8,-1,30,29,12,-1,12,13,30,-1,13,14,30,-1,11,31,10,-1,9,10,16,-1,16,15,9,-1,15,16,3,-1,3,0,15,-1,12,6,7,-1,7,13,12,-1,10,31,16,-1,7,14,13,-1,3,16,17,-1,18,2,3,-1,3,17,18,-1,5,2,18,-1,18,19,5,-1,7,5,19,-1,31,17,16,-1,19,14,7,-1,7,5,7,-1,19,7,7,-1,18,14,19,-1,17,31,18,-1,4,21,20,-1,20,1,4,-1,1,20,22,-1,22,0,1,-1,0,22,23,-1,23,15,0,-1,15,23,24,-1,24,9,15,-1,9,24,25,-1,25,8,9,-1,29,32,26,-1,26,12,29,-1,12,26,27,-1,27,6,12,-1,6,27,21,-1,21,4,6,-1,21,28,20,-1,20,33,22,-1,22,33,23,-1,23,33,24,-1,24,33,25,-1,32,28,26,-1,26,28,27,-1,27,28,21,-1,34,37,36,-1,36,35,34,-1,38,34,35,-1,35,39,38,-1,41,40,38,-1,38,39,41,-1,43,42,40,-1,40,41,43,-1,45,44,42,-1,42,43,45,-1,47,46,44,-1,44,45,47,-1,46,47,48,-1,48,49,46,-1,37,49,48,-1,48,36,37,-1,50,51,37,-1,37,34,50,-1,52,50,34,-1,34,38,52,-1,40,53,52,-1,52,38,40,-1,42,54,53,-1,53,40,42,-1,55,54,42,-1,42,44,55,-1,56,55,44,-1,44,46,56,-1,49,57,56,-1,56,46,49,-1,37,51,57,-1,57,49,37,-1,36,58,35,-1,35,58,39,-1,39,58,41,-1,41,58,43,-1,43,58,45,-1,45,58,47,-1,47,58,48,-1,48,58,36,-1,50,59,60,-1,60,51,50,-1,52,61,59,-1,59,50,52,-1,62,61,52,-1,52,53,62,-1,63,62,53,-1,53,54,63,-1,64,63,54,-1,54,55,64,-1,65,64,55,-1,55,56,65,-1,57,66,65,-1,65,56,57,-1,51,60,66,-1,66,57,51,-1,59,67,68,-1,68,60,59,-1,61,69,67,-1,67,59,61,-1,70,69,61,-1,61,62,70,-1,71,70,62,-1,62,63,71,-1,72,71,63,-1,63,64,72,-1,73,72,64,-1,64,65,73,-1,66,74,73,-1,73,65,66,-1,60,68,74,-1,74,66,60,-1,67,76,75,-1,75,68,67,-1,68,75,77,-1,77,74,68,-1,74,77,78,-1,78,73,74,-1,73,78,79,-1,79,72,73,-1,72,79,80,-1,80,71,72,-1,71,80,81,-1,81,70,71,-1,70,81,82,-1,82,69,70,-1,69,82,76,-1,76,67,69,-1,76,83,75,-1,75,83,77,-1,77,83,78,-1,78,83,79,-1,79,83,80,-1,80,83,81,-1,81,83,82,-1,82,83,76,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=11, element #160, 237 total numbers made up of 79 3-tuple values */
	this.Coordinate_11_160_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(-1.7670),doubleToFloat(-1.1610),doubleToFloat(1.1720),doubleToFloat(-2.1470),doubleToFloat(-1.5320),doubleToFloat(-0.0447),doubleToFloat(-2.3510),doubleToFloat(-0.2901),doubleToFloat(-0.0389),doubleToFloat(-1.7950),doubleToFloat(-1.2660),doubleToFloat(-1.2230),doubleToFloat(-0.0596),doubleToFloat(1.1790),doubleToFloat(1.7720),doubleToFloat(-0.5362),doubleToFloat(1.9240),doubleToFloat(-0.0115),doubleToFloat(-0.1264),doubleToFloat(-0.2452),doubleToFloat(1.9900),doubleToFloat(-0.1859),doubleToFloat(-1.8300),doubleToFloat(1.3350),doubleToFloat(-0.2617),doubleToFloat(-2.1930),doubleToFloat(-0.0009),doubleToFloat(-0.0485),doubleToFloat(-0.2483),doubleToFloat(-2.0760)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.2495),doubleToFloat(1.3470),doubleToFloat(-1.8650),doubleToFloat(-0.0362),doubleToFloat(-1.8380),doubleToFloat(-1.3530),doubleToFloat(-2.0310),doubleToFloat(1.0330),doubleToFloat(-1.3120),doubleToFloat(-2.3790),doubleToFloat(1.2440),doubleToFloat(-0.0167),doubleToFloat(-1.9550),doubleToFloat(0.9369),doubleToFloat(1.2760),doubleToFloat(-1.5290),doubleToFloat(-0.1076),doubleToFloat(-1.6800),doubleToFloat(-2.2520),doubleToFloat(0.2082),doubleToFloat(-1.2740),doubleToFloat(-2.7510),doubleToFloat(0.4162),doubleToFloat(-0.0026),doubleToFloat(-2.2530),doubleToFloat(0.2116),doubleToFloat(1.3200),doubleToFloat(-1.4920),doubleToFloat(-0.1767),doubleToFloat(1.5680)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.6647),doubleToFloat(1.1070),doubleToFloat(1.6380),doubleToFloat(0.6310),doubleToFloat(1.7970),doubleToFloat(-0.0150),doubleToFloat(0.6357),doubleToFloat(1.2660),doubleToFloat(-1.7220),doubleToFloat(0.8298),doubleToFloat(-0.1909),doubleToFloat(-1.9150),doubleToFloat(0.7613),doubleToFloat(-1.5470),doubleToFloat(-1.3160),doubleToFloat(0.6881),doubleToFloat(-1.8070),doubleToFloat(0.0125),doubleToFloat(0.6891),doubleToFloat(-1.4740),doubleToFloat(1.5390),doubleToFloat(0.7549),doubleToFloat(-0.2064),doubleToFloat(1.8400),doubleToFloat(1.2370),doubleToFloat(-0.1103),doubleToFloat(-0.0007),doubleToFloat(-2.6110),doubleToFloat(-8.3890),doubleToFloat(-0.9438)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-2.2560),doubleToFloat(-9.0340),doubleToFloat(-0.7256),doubleToFloat(-1.7970),doubleToFloat(-9.0340),doubleToFloat(-0.9829),doubleToFloat(-1.7970),doubleToFloat(-8.3890),doubleToFloat(-1.2180),doubleToFloat(-3.0540),doubleToFloat(-8.3890),doubleToFloat(0.0688),doubleToFloat(-2.7200),doubleToFloat(-9.0340),doubleToFloat(0.0715),doubleToFloat(-2.6110),doubleToFloat(-8.3890),doubleToFloat(1.0660),doubleToFloat(-2.2910),doubleToFloat(-9.0340),doubleToFloat(0.8983),doubleToFloat(-1.7970),doubleToFloat(-8.3890),doubleToFloat(1.4480),doubleToFloat(-1.7970),doubleToFloat(-9.0340),doubleToFloat(1.2010),doubleToFloat(-1.0740),doubleToFloat(-8.3890),doubleToFloat(1.0660)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.2630),doubleToFloat(-9.0340),doubleToFloat(0.8963),doubleToFloat(-0.6698),doubleToFloat(-8.3890),doubleToFloat(0.0688),doubleToFloat(-0.9696),doubleToFloat(-9.0340),doubleToFloat(0.0715),doubleToFloat(-1.2980),doubleToFloat(-9.0340),doubleToFloat(-0.7088),doubleToFloat(-1.0740),doubleToFloat(-8.3890),doubleToFloat(-0.9438),doubleToFloat(-2.5690),doubleToFloat(-5.1110),doubleToFloat(-1.0440),doubleToFloat(-1.7190),doubleToFloat(-5.2540),doubleToFloat(-1.4160),doubleToFloat(-2.9670),doubleToFloat(-5.0500),doubleToFloat(0.0688),doubleToFloat(-2.5210),doubleToFloat(-5.1260),doubleToFloat(1.1880),doubleToFloat(-1.6830),doubleToFloat(-5.2620),doubleToFloat(1.5180)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.8179),doubleToFloat(-5.3400),doubleToFloat(1.2150),doubleToFloat(-0.3515),doubleToFloat(-5.3770),doubleToFloat(0.0688),doubleToFloat(-0.7857),doubleToFloat(-5.3230),doubleToFloat(-1.0330),doubleToFloat(-1.7970),doubleToFloat(-9.5200),doubleToFloat(0.0715),doubleToFloat(-1.5150),doubleToFloat(-1.0330),doubleToFloat(-1.6480),doubleToFloat(-2.4370),doubleToFloat(-0.8613),doubleToFloat(-1.2510),doubleToFloat(-2.9430),doubleToFloat(-0.8246),doubleToFloat(-0.0030),doubleToFloat(-2.4300),doubleToFloat(-0.8639),doubleToFloat(1.3240),doubleToFloat(-1.4750),doubleToFloat(-1.0470),doubleToFloat(1.6650),doubleToFloat(-0.4746),doubleToFloat(-1.3020),doubleToFloat(1.2020)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.0299),doubleToFloat(-1.4690),doubleToFloat(-0.0050),doubleToFloat(-0.4862),doubleToFloat(-1.2780),doubleToFloat(-1.0650),doubleToFloat(-1.5480),doubleToFloat(-0.1070),doubleToFloat(-1.6630),doubleToFloat(-2.2400),doubleToFloat(0.2082),doubleToFloat(-1.2740),doubleToFloat(-2.7390),doubleToFloat(0.4162),doubleToFloat(-0.0026),doubleToFloat(-2.2410),doubleToFloat(0.2116),doubleToFloat(1.3200),doubleToFloat(-1.5030),doubleToFloat(-0.1733),doubleToFloat(1.5880),doubleToFloat(-0.4003),doubleToFloat(-0.5019),doubleToFloat(1.2380),doubleToFloat(0.1000),doubleToFloat(-0.6640),doubleToFloat(-0.0078),doubleToFloat(-0.4167),doubleToFloat(-0.4852),doubleToFloat(-1.0710)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.9560),doubleToFloat(0.4708),doubleToFloat(-0.9897),doubleToFloat(-1.5250),doubleToFloat(0.3302),doubleToFloat(-1.2230),doubleToFloat(-0.6903),doubleToFloat(-0.0093),doubleToFloat(-0.7764),doubleToFloat(-0.3054),doubleToFloat(-0.1320),doubleToFloat(0.0087),doubleToFloat(-0.6728),doubleToFloat(-0.0140),doubleToFloat(0.9228),doubleToFloat(-1.4930),doubleToFloat(0.3035),doubleToFloat(1.1760),doubleToFloat(-1.9660),doubleToFloat(0.4903),doubleToFloat(0.9942),doubleToFloat(-2.3410),doubleToFloat(0.6409),doubleToFloat(0.0007),doubleToFloat(-1.3580),doubleToFloat(0.5602),doubleToFloat(0.0126)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=11, element #161, 168 total numbers made up of 84 2-tuple values */
	this.TextureCoordinate_11_161_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.9511),doubleToFloat(0.2077),doubleToFloat(0.9350),doubleToFloat(0.2198),doubleToFloat(0.9206),doubleToFloat(0.1937),doubleToFloat(0.9340),doubleToFloat(0.1916),doubleToFloat(0.9169),doubleToFloat(0.2296),doubleToFloat(0.9109),doubleToFloat(0.2043),doubleToFloat(0.9019),doubleToFloat(0.2306),doubleToFloat(0.8990),doubleToFloat(0.2124),doubleToFloat(0.9892),doubleToFloat(0.1709),doubleToFloat(0.9767),doubleToFloat(0.1844)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.9553),doubleToFloat(0.1714),doubleToFloat(0.9561),doubleToFloat(0.1559),doubleToFloat(0.8848),doubleToFloat(0.2349),doubleToFloat(0.8854),doubleToFloat(0.2117),doubleToFloat(0.8909),doubleToFloat(0.1883),doubleToFloat(0.9635),doubleToFloat(0.1960),doubleToFloat(0.9475),doubleToFloat(0.1844),doubleToFloat(0.9356),doubleToFloat(0.1821),doubleToFloat(0.9135),doubleToFloat(0.1812),doubleToFloat(0.9039),doubleToFloat(0.2015)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.9450),doubleToFloat(0.2364),doubleToFloat(0.9197),doubleToFloat(0.2361),doubleToFloat(0.9561),doubleToFloat(0.2144),doubleToFloat(0.9690),doubleToFloat(0.2041),doubleToFloat(0.9817),doubleToFloat(0.1943),doubleToFloat(0.9972),doubleToFloat(0.1927),doubleToFloat(0.8919),doubleToFloat(0.2437),doubleToFloat(0.9056),doubleToFloat(0.2404),doubleToFloat(0.9154),doubleToFloat(0.2635),doubleToFloat(0.8657),doubleToFloat(0.2399)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.8704),doubleToFloat(0.2036),doubleToFloat(0.9315),doubleToFloat(0.1649),doubleToFloat(0.8809),doubleToFloat(0.2586),doubleToFloat(0.9841),doubleToFloat(0.2244),doubleToFloat(0.6723),doubleToFloat(0.8142),doubleToFloat(0.6649),doubleToFloat(0.8018),doubleToFloat(0.6553),doubleToFloat(0.8018),doubleToFloat(0.6553),doubleToFloat(0.8142),doubleToFloat(0.6816),doubleToFloat(0.8142),doubleToFloat(0.6746),doubleToFloat(0.8018)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.6723),doubleToFloat(0.8142),doubleToFloat(0.6656),doubleToFloat(0.8018),doubleToFloat(0.6553),doubleToFloat(0.8142),doubleToFloat(0.6553),doubleToFloat(0.8018),doubleToFloat(0.6402),doubleToFloat(0.8142),doubleToFloat(0.6441),doubleToFloat(0.8018),doubleToFloat(0.6317),doubleToFloat(0.8142),doubleToFloat(0.6380),doubleToFloat(0.8018),doubleToFloat(0.6448),doubleToFloat(0.8018),doubleToFloat(0.6402),doubleToFloat(0.8142)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.6714),doubleToFloat(0.8767),doubleToFloat(0.6536),doubleToFloat(0.8740),doubleToFloat(0.6797),doubleToFloat(0.8779),doubleToFloat(0.6704),doubleToFloat(0.8764),doubleToFloat(0.6529),doubleToFloat(0.8738),doubleToFloat(0.6348),doubleToFloat(0.8723),doubleToFloat(0.6251),doubleToFloat(0.8716),doubleToFloat(0.6341),doubleToFloat(0.8727),doubleToFloat(0.6553),doubleToFloat(0.7926),doubleToFloat(0.6687),doubleToFloat(0.9578)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.6494),doubleToFloat(0.9545),doubleToFloat(0.6792),doubleToFloat(0.9585),doubleToFloat(0.6685),doubleToFloat(0.9578),doubleToFloat(0.6485),doubleToFloat(0.9543),doubleToFloat(0.6276),doubleToFloat(0.9494),doubleToFloat(0.6171),doubleToFloat(0.9462),doubleToFloat(0.6279),doubleToFloat(0.9499),doubleToFloat(0.6645),doubleToFloat(0.9782),doubleToFloat(0.6501),doubleToFloat(0.9722),doubleToFloat(0.6750),doubleToFloat(0.9822)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.6646),doubleToFloat(0.9783),doubleToFloat(0.6491),doubleToFloat(0.9709),doubleToFloat(0.6261),doubleToFloat(0.9647),doubleToFloat(0.6156),doubleToFloat(0.9616),doubleToFloat(0.6264),doubleToFloat(0.9650),doubleToFloat(0.6496),doubleToFloat(0.9806),doubleToFloat(0.6586),doubleToFloat(0.9832),doubleToFloat(0.6321),doubleToFloat(0.9741),doubleToFloat(0.6241),doubleToFloat(0.9717),doubleToFloat(0.6318),doubleToFloat(0.9740)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.6489),doubleToFloat(0.9800),doubleToFloat(0.6588),doubleToFloat(0.9836),doubleToFloat(0.6667),doubleToFloat(0.9865),doubleToFloat(0.6461),doubleToFloat(0.9849)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=11, element #169, 320 total numbers */
	this.IndexedFaceSet_11_169_coordIndex = new MFInt32(Java.to([14,20,0,-1,0,12,14,-1,13,15,14,-1,14,12,13,-1,1,21,15,-1,15,13,1,-1,2,22,21,-1,21,1,2,-1,3,23,22,-1,22,2,3,-1,18,16,23,-1,23,3,18,-1,18,19,17,-1,17,16,18,-1,20,17,19,-1,19,0,20,-1,0,35,34,-1,34,12,0,-1,12,34,36,-1,36,13,12,-1,36,37,1,-1,1,13,36,-1,37,38,2,-1,2,1,37,-1,38,39,3,-1,3,2,38,-1,39,40,18,-1,18,3,39,-1,41,35,0,-1,0,19,41,-1,18,40,41,-1,41,19,18,-1,4,24,31,-1,31,11,4,-1,11,31,25,-1,25,5,11,-1,5,25,28,-1,28,8,5,-1,10,30,26,-1,26,6,10,-1,7,27,24,-1,24,4,7,-1,8,28,29,-1,29,9,8,-1,9,29,30,-1,30,10,9,-1,6,26,27,-1,27,7,6,-1,24,32,31,-1,31,32,25,-1,25,32,28,-1,28,32,29,-1,29,32,30,-1,30,32,26,-1,26,32,27,-1,27,32,24,-1,14,33,20,-1,20,33,17,-1,17,33,16,-1,16,33,23,-1,23,33,22,-1,22,33,21,-1,21,33,15,-1,15,33,14,-1,35,4,11,-1,11,34,35,-1,34,11,5,-1,5,36,34,-1,5,8,37,-1,37,36,5,-1,8,9,38,-1,38,37,8,-1,9,10,39,-1,39,38,9,-1,10,6,40,-1,40,39,10,-1,7,4,35,-1,35,41,7,-1,40,6,7,-1,7,41,40,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=11, element #169, 320 total numbers */
	this.IndexedFaceSet_11_169_texCoordIndex = new MFInt32(Java.to([0,3,2,-1,2,1,0,-1,5,4,0,-1,0,1,5,-1,7,6,4,-1,4,5,7,-1,9,8,6,-1,6,7,9,-1,11,10,8,-1,8,9,11,-1,13,12,10,-1,10,11,13,-1,13,15,14,-1,14,12,13,-1,3,14,15,-1,15,2,3,-1,2,17,16,-1,16,1,2,-1,1,16,18,-1,18,5,1,-1,18,19,7,-1,7,5,18,-1,19,20,9,-1,9,7,19,-1,20,21,11,-1,11,9,20,-1,21,22,13,-1,13,11,21,-1,23,17,2,-1,2,15,23,-1,13,22,23,-1,23,15,13,-1,24,27,26,-1,26,25,24,-1,25,26,29,-1,29,28,25,-1,28,29,31,-1,31,30,28,-1,32,35,34,-1,34,33,32,-1,36,37,27,-1,27,24,36,-1,30,31,39,-1,39,38,30,-1,38,39,35,-1,35,32,38,-1,33,34,37,-1,37,36,33,-1,27,40,26,-1,26,40,29,-1,29,40,31,-1,31,40,39,-1,39,40,35,-1,35,40,34,-1,34,40,37,-1,37,40,27,-1,0,41,3,-1,3,41,14,-1,14,41,12,-1,12,41,10,-1,10,41,8,-1,8,41,6,-1,6,41,4,-1,4,41,0,-1,17,24,25,-1,25,16,17,-1,16,25,28,-1,28,18,16,-1,28,30,19,-1,19,18,28,-1,30,38,20,-1,20,19,30,-1,38,32,21,-1,21,20,38,-1,32,33,22,-1,22,21,32,-1,36,24,17,-1,17,23,36,-1,22,33,36,-1,36,23,22,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=12, element #169, 126 total numbers made up of 42 3-tuple values */
	this.Coordinate_12_169_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(0.0285),doubleToFloat(-0.0014),doubleToFloat(-1.2730),doubleToFloat(-0.7859),doubleToFloat(-0.0014),doubleToFloat(1.0110),doubleToFloat(0.0285),doubleToFloat(-0.0014),doubleToFloat(1.3930),doubleToFloat(0.7518),doubleToFloat(-0.0014),doubleToFloat(1.0110),doubleToFloat(-0.3269),doubleToFloat(-8.4760),doubleToFloat(-1.1350),doubleToFloat(-1.0720),doubleToFloat(-8.3750),doubleToFloat(0.0140),doubleToFloat(0.4474),doubleToFloat(-8.5400),doubleToFloat(0.0140),doubleToFloat(0.2171),doubleToFloat(-8.5300),doubleToFloat(-0.8828),doubleToFloat(-0.8740),doubleToFloat(-8.3820),doubleToFloat(0.8302),doubleToFloat(-0.3775),doubleToFloat(-8.4300),doubleToFloat(1.1890)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.1689),doubleToFloat(-8.4940),doubleToFloat(0.9251),doubleToFloat(-0.8721),doubleToFloat(-8.4100),doubleToFloat(-0.7528),doubleToFloat(-0.7859),doubleToFloat(-0.0014),doubleToFloat(-0.9986),doubleToFloat(-1.2190),doubleToFloat(-0.0014),doubleToFloat(0.0140),doubleToFloat(-0.6257),doubleToFloat(0.3573),doubleToFloat(-0.8513),doubleToFloat(-0.9878),doubleToFloat(0.3723),doubleToFloat(0.0140),doubleToFloat(0.9446),doubleToFloat(0.3723),doubleToFloat(0.0140),doubleToFloat(0.6206),doubleToFloat(0.3576),doubleToFloat(-0.8306),doubleToFloat(1.1500),doubleToFloat(-0.0014),doubleToFloat(0.0140),doubleToFloat(0.7518),doubleToFloat(-0.0014),doubleToFloat(-0.9986)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.0285),doubleToFloat(0.3525),doubleToFloat(-1.1300),doubleToFloat(-0.6002),doubleToFloat(0.3872),doubleToFloat(0.8762),doubleToFloat(0.0285),doubleToFloat(0.3938),doubleToFloat(1.2590),doubleToFloat(0.6298),doubleToFloat(0.3874),doubleToFloat(0.8891),doubleToFloat(-0.3498),doubleToFloat(-8.9870),doubleToFloat(-0.9214),doubleToFloat(-0.8782),doubleToFloat(-8.8960),doubleToFloat(0.0140),doubleToFloat(0.2599),doubleToFloat(-9.0580),doubleToFloat(0.0140),doubleToFloat(0.0599),doubleToFloat(-9.0420),doubleToFloat(-0.7556),doubleToFloat(-0.7651),doubleToFloat(-8.8990),doubleToFloat(0.7304),doubleToFloat(-0.3925),doubleToFloat(-8.9480),doubleToFloat(1.0000)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.0474),doubleToFloat(-9.0130),doubleToFloat(0.8168),doubleToFloat(-0.7037),doubleToFloat(-8.9310),doubleToFloat(-0.6264),doubleToFloat(-0.3461),doubleToFloat(-8.9710),doubleToFloat(0.0140),doubleToFloat(0.0285),doubleToFloat(0.6520),doubleToFloat(0.0140),doubleToFloat(-0.8421),doubleToFloat(-4.5710),doubleToFloat(-0.8166),doubleToFloat(-0.0839),doubleToFloat(-4.7070),doubleToFloat(-1.2400),doubleToFloat(-1.2030),doubleToFloat(-4.4590),doubleToFloat(0.0139),doubleToFloat(-0.9133),doubleToFloat(-4.5100),doubleToFloat(0.8923),doubleToFloat(-0.1345),doubleToFloat(-4.6130),doubleToFloat(1.3040),doubleToFloat(0.4791),doubleToFloat(-4.6390),doubleToFloat(0.9406)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.7499),doubleToFloat(-4.6280),doubleToFloat(0.0140),doubleToFloat(0.5401),doubleToFloat(-4.6520),doubleToFloat(-0.8788)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=12, element #170, 84 total numbers made up of 42 2-tuple values */
	this.TextureCoordinate_12_170_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.6690),doubleToFloat(0.8210),doubleToFloat(0.6723),doubleToFloat(0.8142),doubleToFloat(0.6553),doubleToFloat(0.8142),doubleToFloat(0.6553),doubleToFloat(0.8209),doubleToFloat(0.6765),doubleToFloat(0.8213),doubleToFloat(0.6814),doubleToFloat(0.8142),doubleToFloat(0.6684),doubleToFloat(0.8216),doubleToFloat(0.6723),doubleToFloat(0.8142),doubleToFloat(0.6553),doubleToFloat(0.8217),doubleToFloat(0.6553),doubleToFloat(0.8142)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.6427),doubleToFloat(0.8216),doubleToFloat(0.6402),doubleToFloat(0.8142),doubleToFloat(0.6361),doubleToFloat(0.8213),doubleToFloat(0.6318),doubleToFloat(0.8142),doubleToFloat(0.6429),doubleToFloat(0.8210),doubleToFloat(0.6402),doubleToFloat(0.8142),doubleToFloat(0.6735),doubleToFloat(0.7270),doubleToFloat(0.6576),doubleToFloat(0.7244),doubleToFloat(0.6810),doubleToFloat(0.7291),doubleToFloat(0.6750),doubleToFloat(0.7281)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.6587),doubleToFloat(0.7262),doubleToFloat(0.6459),doubleToFloat(0.7257),doubleToFloat(0.6402),doubleToFloat(0.7259),doubleToFloat(0.6446),doubleToFloat(0.7254),doubleToFloat(0.6627),doubleToFloat(0.6524),doubleToFloat(0.6741),doubleToFloat(0.6537),doubleToFloat(0.6706),doubleToFloat(0.6437),doubleToFloat(0.6632),doubleToFloat(0.6427),doubleToFloat(0.6783),doubleToFloat(0.6544),doubleToFloat(0.6742),doubleToFloat(0.6444)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.6741),doubleToFloat(0.6542),doubleToFloat(0.6719),doubleToFloat(0.6444),doubleToFloat(0.6523),doubleToFloat(0.6521),doubleToFloat(0.6465),doubleToFloat(0.6512),doubleToFloat(0.6504),doubleToFloat(0.6413),doubleToFloat(0.6549),doubleToFloat(0.6422),doubleToFloat(0.6513),doubleToFloat(0.6514),doubleToFloat(0.6546),doubleToFloat(0.6416),doubleToFloat(0.6638),doubleToFloat(0.6533),doubleToFloat(0.6641),doubleToFloat(0.6434)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.6631),doubleToFloat(0.6430),doubleToFloat(0.6553),doubleToFloat(0.8266)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=12, element #178, 208 total numbers */
	this.IndexedFaceSet_12_178_coordIndex = new MFInt32(Java.to([3,2,1,-1,1,0,3,-1,5,4,7,-1,7,6,5,-1,9,8,11,-1,11,10,9,-1,9,10,13,-1,13,12,9,-1,15,14,17,-1,17,16,15,-1,16,19,18,-1,18,15,16,-1,3,0,10,-1,10,11,3,-1,10,0,1,-1,1,13,10,-1,16,17,21,-1,21,20,16,-1,20,2,19,-1,19,16,20,-1,7,8,9,-1,9,6,7,-1,5,6,9,-1,9,12,5,-1,15,23,22,-1,22,14,15,-1,18,4,23,-1,23,15,18,-1,21,1,2,-1,2,20,21,-1,23,4,5,-1,5,22,23,-1,12,13,17,-1,17,14,12,-1,26,25,24,-1,24,27,26,-1,21,17,13,-1,13,1,21,-1,11,19,2,-1,2,3,11,-1,22,5,12,-1,12,14,22,-1,4,18,8,-1,8,7,4,-1,25,11,8,-1,8,24,25,-1,11,25,26,-1,26,19,11,-1,19,26,27,-1,27,18,19,-1,18,27,24,-1,24,8,18,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=12, element #178, 208 total numbers */
	this.IndexedFaceSet_12_178_texCoordIndex = new MFInt32(Java.to([3,2,1,-1,1,0,3,-1,28,5,4,-1,4,29,28,-1,9,8,11,-1,11,10,9,-1,9,10,13,-1,13,12,9,-1,39,38,41,-1,41,40,39,-1,16,19,18,-1,18,15,16,-1,3,0,10,-1,10,11,3,-1,10,0,1,-1,1,13,10,-1,40,41,43,-1,43,42,40,-1,20,2,19,-1,19,16,20,-1,7,8,9,-1,9,6,7,-1,28,29,30,-1,30,31,28,-1,39,23,22,-1,22,38,39,-1,33,5,32,-1,32,34,33,-1,21,1,2,-1,2,20,21,-1,32,5,28,-1,28,35,32,-1,12,13,17,-1,17,14,12,-1,26,25,24,-1,24,27,26,-1,21,17,13,-1,13,1,21,-1,11,19,2,-1,2,3,11,-1,35,28,31,-1,31,36,35,-1,5,33,37,-1,37,4,5,-1,25,11,8,-1,8,24,25,-1,11,25,26,-1,26,19,11,-1,19,26,27,-1,27,18,19,-1,18,27,24,-1,24,8,18,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=13, element #178, 84 total numbers made up of 28 3-tuple values */
	this.Coordinate_13_178_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(-0.6858),doubleToFloat(-0.0091),doubleToFloat(1.0430),doubleToFloat(-0.8572),doubleToFloat(-0.0091),doubleToFloat(0.3582),doubleToFloat(0.5820),doubleToFloat(-0.0091),doubleToFloat(0.3582),doubleToFloat(0.5216),doubleToFloat(-0.0091),doubleToFloat(1.0430),doubleToFloat(0.6790),doubleToFloat(-2.6600),doubleToFloat(0.2822),doubleToFloat(-0.9542),doubleToFloat(-2.9920),doubleToFloat(0.2822),doubleToFloat(-0.7672),doubleToFloat(-2.7140),doubleToFloat(1.2330),doubleToFloat(0.6030),doubleToFloat(-2.4350),doubleToFloat(1.2330),doubleToFloat(0.8768),doubleToFloat(-1.9070),doubleToFloat(1.4000),doubleToFloat(-1.0410),doubleToFloat(-1.9070),doubleToFloat(1.4000)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.0410),doubleToFloat(-0.5983),doubleToFloat(1.4000),doubleToFloat(0.8768),doubleToFloat(-0.5983),doubleToFloat(1.4000),doubleToFloat(-1.2810),doubleToFloat(-2.0300),doubleToFloat(0.2845),doubleToFloat(-1.2810),doubleToFloat(-0.5489),doubleToFloat(0.2845),doubleToFloat(-1.0970),doubleToFloat(-1.9080),doubleToFloat(-1.4520),doubleToFloat(0.8213),doubleToFloat(-1.9080),doubleToFloat(-1.4520),doubleToFloat(0.8213),doubleToFloat(-0.5991),doubleToFloat(-1.4520),doubleToFloat(-1.0970),doubleToFloat(-0.5991),doubleToFloat(-1.4520),doubleToFloat(1.0050),doubleToFloat(-2.0300),doubleToFloat(0.2845),doubleToFloat(1.0050),doubleToFloat(-0.5489),doubleToFloat(0.2845)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.4661),doubleToFloat(-0.0091),doubleToFloat(-1.0840),doubleToFloat(-0.7414),doubleToFloat(-0.0091),doubleToFloat(-1.0840),doubleToFloat(-0.8227),doubleToFloat(-2.7140),doubleToFloat(-1.1980),doubleToFloat(0.5474),doubleToFloat(-2.4360),doubleToFloat(-1.1980),doubleToFloat(1.2720),doubleToFloat(-1.7610),doubleToFloat(1.2130),doubleToFloat(1.2720),doubleToFloat(-0.7447),doubleToFloat(1.2130),doubleToFloat(1.4760),doubleToFloat(-0.7234),doubleToFloat(0.4714),doubleToFloat(1.4760),doubleToFloat(-1.8560),doubleToFloat(0.4714)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=13, element #179, 88 total numbers made up of 44 2-tuple values */
	this.TextureCoordinate_13_179_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.9934),doubleToFloat(0.0820),doubleToFloat(0.9951),doubleToFloat(0.0877),doubleToFloat(0.9456),doubleToFloat(0.0877),doubleToFloat(0.9473),doubleToFloat(0.0820),doubleToFloat(0.9034),doubleToFloat(0.0905),doubleToFloat(0.8766),doubleToFloat(0.0919),doubleToFloat(0.9942),doubleToFloat(0.0090),doubleToFloat(0.9450),doubleToFloat(0.0157),doubleToFloat(0.9371),doubleToFloat(0.0285),doubleToFloat(0.9969),doubleToFloat(0.0285)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.9969),doubleToFloat(0.0684),doubleToFloat(0.9371),doubleToFloat(0.0684),doubleToFloat(0.9993),doubleToFloat(0.0256),doubleToFloat(0.9993),doubleToFloat(0.0715),doubleToFloat(0.9975),doubleToFloat(0.0285),doubleToFloat(0.9365),doubleToFloat(0.0285),doubleToFloat(0.9365),doubleToFloat(0.0684),doubleToFloat(0.9975),doubleToFloat(0.0684),doubleToFloat(0.9312),doubleToFloat(0.0256),doubleToFloat(0.9312),doubleToFloat(0.0715)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.9489),doubleToFloat(0.0820),doubleToFloat(0.9939),doubleToFloat(0.0820),doubleToFloat(0.9948),doubleToFloat(0.0090),doubleToFloat(0.9466),doubleToFloat(0.0157),doubleToFloat(0.9256),doubleToFloat(0.0321),doubleToFloat(0.9256),doubleToFloat(0.0648),doubleToFloat(0.9198),doubleToFloat(0.0672),doubleToFloat(0.9198),doubleToFloat(0.0298),doubleToFloat(0.8753),doubleToFloat(0.0485),doubleToFloat(0.9025),doubleToFloat(0.0502)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.9023),doubleToFloat(0.0288),doubleToFloat(0.8757),doubleToFloat(0.0269),doubleToFloat(0.8373),doubleToFloat(0.0909),doubleToFloat(0.8768),doubleToFloat(0.1071),doubleToFloat(0.8372),doubleToFloat(0.1061),doubleToFloat(0.8367),doubleToFloat(0.0504),doubleToFloat(0.8370),doubleToFloat(0.0294),doubleToFloat(0.9035),doubleToFloat(0.1061),doubleToFloat(0.9975),doubleToFloat(0.0285),doubleToFloat(0.9387),doubleToFloat(0.0285)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.9387),doubleToFloat(0.0684),doubleToFloat(0.9975),doubleToFloat(0.0684),doubleToFloat(0.9489),doubleToFloat(0.0820),doubleToFloat(0.9939),doubleToFloat(0.0820)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=10, element #190, 2872 total numbers */
	this.IndexedFaceSet_10_190_coordIndex = new MFInt32(Java.to([2,15,361,-1,361,1,2,-1,3,16,15,-1,15,2,3,-1,4,19,16,-1,16,3,4,-1,6,17,0,-1,0,5,6,-1,7,18,17,-1,17,6,7,-1,1,361,18,-1,18,7,1,-1,2,1,9,-1,9,8,2,-1,1,7,10,-1,10,9,1,-1,7,6,11,-1,11,10,7,-1,6,5,32,-1,32,11,6,-1,4,3,13,-1,13,12,4,-1,3,2,8,-1,8,13,3,-1,8,9,14,-1,9,10,14,-1,10,11,14,-1,11,32,14,-1,12,13,14,-1,13,8,14,-1,21,20,23,-1,23,22,21,-1,24,21,22,-1,22,375,24,-1,4,24,375,-1,375,19,4,-1,25,5,0,-1,0,26,25,-1,27,25,26,-1,26,376,27,-1,20,27,376,-1,376,23,20,-1,21,29,28,-1,28,20,21,-1,20,28,30,-1,30,27,20,-1,27,30,31,-1,31,25,27,-1,25,31,32,-1,32,5,25,-1,4,12,33,-1,33,24,4,-1,24,33,29,-1,29,21,24,-1,29,14,28,-1,28,14,30,-1,30,14,31,-1,31,14,32,-1,12,14,33,-1,33,14,29,-1,43,41,39,-1,39,40,43,-1,40,44,43,-1,112,113,98,-1,98,45,112,-1,38,99,98,-1,98,37,38,-1,36,49,48,-1,49,50,47,-1,47,48,49,-1,36,48,44,-1,43,44,48,-1,48,47,43,-1,36,63,49,-1,46,50,49,-1,49,63,46,-1,42,41,52,-1,50,54,52,-1,52,47,50,-1,41,43,47,-1,47,52,41,-1,51,75,55,-1,55,54,51,-1,46,51,54,-1,54,50,46,-1,65,64,67,-1,97,53,55,-1,57,100,105,-1,105,96,57,-1,58,57,96,-1,96,97,58,-1,56,71,59,-1,59,60,56,-1,60,66,74,-1,75,35,74,-1,41,42,99,-1,61,62,146,-1,146,147,61,-1,44,40,62,-1,62,61,44,-1,150,36,61,-1,61,147,150,-1,44,61,36,-1,34,46,63,-1,64,59,101,-1,101,152,64,-1,60,59,64,-1,64,65,60,-1,55,75,74,-1,74,66,55,-1,66,60,65,-1,65,58,66,-1,52,53,42,-1,54,55,53,-1,53,52,54,-1,39,69,68,-1,68,40,39,-1,38,70,69,-1,69,39,38,-1,37,94,70,-1,70,38,37,-1,37,95,94,-1,146,62,156,-1,62,40,68,-1,68,156,62,-1,64,152,102,-1,102,67,64,-1,67,57,58,-1,58,65,67,-1,71,56,72,-1,72,73,71,-1,56,74,72,-1,63,36,76,-1,34,63,76,-1,35,75,78,-1,78,77,35,-1,75,51,79,-1,79,78,75,-1,51,46,80,-1,80,79,51,-1,46,34,81,-1,81,80,46,-1,77,78,82,-1,78,79,82,-1,79,80,82,-1,80,81,82,-1,36,150,166,-1,166,83,36,-1,73,72,85,-1,85,84,73,-1,72,74,86,-1,86,85,72,-1,74,35,87,-1,87,86,74,-1,35,77,88,-1,88,87,35,-1,77,82,89,-1,89,88,77,-1,82,81,90,-1,90,89,82,-1,81,34,91,-1,91,90,81,-1,34,76,92,-1,92,91,34,-1,76,36,83,-1,83,92,76,-1,83,166,93,-1,84,85,93,-1,85,86,93,-1,86,87,93,-1,87,88,93,-1,88,89,93,-1,89,90,93,-1,90,91,93,-1,91,92,93,-1,92,83,93,-1,45,42,97,-1,97,96,45,-1,66,58,97,-1,97,55,66,-1,42,53,97,-1,99,42,45,-1,45,98,99,-1,38,39,41,-1,41,99,38,-1,74,56,60,-1,100,57,67,-1,67,102,100,-1,59,71,177,-1,177,101,59,-1,71,73,103,-1,103,177,71,-1,73,84,104,-1,104,103,73,-1,104,84,93,-1,45,96,105,-1,105,112,45,-1,95,37,98,-1,98,113,95,-1,108,107,106,-1,106,109,108,-1,107,108,110,-1,112,111,114,-1,114,113,112,-1,116,115,114,-1,114,117,116,-1,118,120,119,-1,119,120,121,-1,121,122,119,-1,118,110,120,-1,108,121,120,-1,120,110,108,-1,118,119,123,-1,124,123,119,-1,119,122,124,-1,125,126,109,-1,122,121,126,-1,126,127,122,-1,109,126,121,-1,121,108,109,-1,129,127,128,-1,128,130,129,-1,124,122,127,-1,127,129,124,-1,131,133,132,-1,134,128,135,-1,136,137,105,-1,105,100,136,-1,138,134,137,-1,137,136,138,-1,141,140,139,-1,139,142,141,-1,140,144,143,-1,130,144,145,-1,109,117,125,-1,148,147,146,-1,146,149,148,-1,110,148,149,-1,149,107,110,-1,150,147,148,-1,148,118,150,-1,110,118,148,-1,151,123,124,-1,132,152,101,-1,101,139,132,-1,140,131,132,-1,132,139,140,-1,128,143,144,-1,144,130,128,-1,143,138,131,-1,131,140,143,-1,126,125,135,-1,127,126,135,-1,135,128,127,-1,106,107,154,-1,154,153,106,-1,116,106,153,-1,153,155,116,-1,115,116,155,-1,155,94,115,-1,115,94,95,-1,146,156,149,-1,149,156,154,-1,154,107,149,-1,132,133,102,-1,102,152,132,-1,133,131,138,-1,138,136,133,-1,142,158,157,-1,157,141,142,-1,141,157,144,-1,123,159,118,-1,151,159,123,-1,145,161,160,-1,160,130,145,-1,130,160,162,-1,162,129,130,-1,129,162,163,-1,163,124,129,-1,124,163,164,-1,164,151,124,-1,161,165,160,-1,160,165,162,-1,162,165,163,-1,163,165,164,-1,118,167,166,-1,166,150,118,-1,158,169,168,-1,168,157,158,-1,157,168,170,-1,170,144,157,-1,144,170,171,-1,171,145,144,-1,145,171,172,-1,172,161,145,-1,161,172,173,-1,173,165,161,-1,165,173,174,-1,174,164,165,-1,164,174,175,-1,175,151,164,-1,151,175,176,-1,176,159,151,-1,159,176,167,-1,167,118,159,-1,167,93,166,-1,169,93,168,-1,168,93,170,-1,170,93,171,-1,171,93,172,-1,172,93,173,-1,173,93,174,-1,174,93,175,-1,175,93,176,-1,176,93,167,-1,111,137,134,-1,134,125,111,-1,143,128,134,-1,134,138,143,-1,125,134,135,-1,117,114,111,-1,111,125,117,-1,116,117,109,-1,109,106,116,-1,144,140,141,-1,100,102,133,-1,133,136,100,-1,139,101,177,-1,177,142,139,-1,142,177,103,-1,103,158,142,-1,158,103,104,-1,104,169,158,-1,104,93,169,-1,111,112,105,-1,105,137,111,-1,95,113,114,-1,114,115,95,-1,200,201,185,-1,185,231,200,-1,184,186,178,-1,178,183,184,-1,188,181,185,-1,185,201,188,-1,186,187,179,-1,179,178,186,-1,231,232,192,-1,192,200,231,-1,179,187,181,-1,181,188,179,-1,182,214,227,-1,227,180,182,-1,182,180,184,-1,184,183,182,-1,182,195,216,-1,216,214,182,-1,195,182,183,-1,183,196,195,-1,183,178,193,-1,193,196,183,-1,178,179,190,-1,190,189,178,-1,179,188,191,-1,191,190,179,-1,188,194,197,-1,197,191,188,-1,193,178,189,-1,189,198,193,-1,189,190,199,-1,190,191,199,-1,191,197,199,-1,198,189,199,-1,200,192,204,-1,204,202,200,-1,201,200,202,-1,202,203,201,-1,201,203,194,-1,194,188,201,-1,205,236,234,-1,234,206,205,-1,242,208,207,-1,207,239,242,-1,209,206,234,-1,234,237,209,-1,239,207,210,-1,210,241,239,-1,236,205,192,-1,192,232,236,-1,210,209,237,-1,237,241,210,-1,213,212,227,-1,227,214,213,-1,213,208,242,-1,242,212,213,-1,213,214,216,-1,216,215,213,-1,215,217,208,-1,208,213,215,-1,208,217,218,-1,218,207,208,-1,207,220,219,-1,219,210,207,-1,210,219,221,-1,221,209,210,-1,209,221,222,-1,222,211,209,-1,218,223,220,-1,220,207,218,-1,220,224,219,-1,219,224,221,-1,221,224,222,-1,223,224,220,-1,205,225,204,-1,204,192,205,-1,206,226,225,-1,225,205,206,-1,206,209,211,-1,211,226,206,-1,180,227,243,-1,243,230,180,-1,252,228,231,-1,231,185,252,-1,251,252,185,-1,185,181,251,-1,186,249,229,-1,229,187,186,-1,228,244,232,-1,232,231,228,-1,187,229,251,-1,251,181,187,-1,230,250,184,-1,184,180,230,-1,184,250,249,-1,249,186,184,-1,212,233,243,-1,243,227,212,-1,257,234,236,-1,236,235,257,-1,238,237,234,-1,234,257,238,-1,239,241,240,-1,240,255,239,-1,235,236,232,-1,232,244,235,-1,241,237,238,-1,238,240,241,-1,233,212,242,-1,242,253,233,-1,242,239,255,-1,255,253,242,-1,250,230,264,-1,264,248,250,-1,249,250,248,-1,248,245,249,-1,228,252,246,-1,246,247,228,-1,252,251,266,-1,266,246,252,-1,229,249,245,-1,245,265,229,-1,230,243,267,-1,267,264,230,-1,244,228,247,-1,247,260,244,-1,229,265,266,-1,266,251,229,-1,253,254,271,-1,271,233,253,-1,255,256,254,-1,254,253,255,-1,235,258,270,-1,270,257,235,-1,257,270,259,-1,259,238,257,-1,240,268,256,-1,256,255,240,-1,233,271,267,-1,267,243,233,-1,244,260,258,-1,258,235,244,-1,240,238,259,-1,259,268,240,-1,277,279,266,-1,266,265,277,-1,279,263,246,-1,246,266,279,-1,264,261,278,-1,278,248,264,-1,248,278,262,-1,262,245,248,-1,263,276,247,-1,247,246,263,-1,262,277,265,-1,265,245,262,-1,287,261,264,-1,264,267,287,-1,276,280,260,-1,260,247,276,-1,286,268,259,-1,259,285,286,-1,285,259,270,-1,270,269,285,-1,271,254,281,-1,281,272,271,-1,254,256,273,-1,273,281,254,-1,269,270,258,-1,258,284,269,-1,273,256,268,-1,268,286,273,-1,287,267,271,-1,271,272,287,-1,284,258,260,-1,260,280,284,-1,274,275,278,-1,278,261,274,-1,275,313,262,-1,262,278,275,-1,311,314,276,-1,276,263,311,-1,263,279,315,-1,315,311,263,-1,313,312,277,-1,277,262,313,-1,288,274,261,-1,261,287,288,-1,317,280,276,-1,276,314,317,-1,279,277,312,-1,312,315,279,-1,282,272,281,-1,281,283,282,-1,283,281,273,-1,273,346,283,-1,345,269,284,-1,284,344,345,-1,269,345,348,-1,348,285,269,-1,346,273,286,-1,286,347,346,-1,288,287,272,-1,272,282,288,-1,317,344,284,-1,284,280,317,-1,285,348,347,-1,347,286,285,-1,318,291,274,-1,274,288,318,-1,320,293,291,-1,291,318,320,-1,295,296,297,-1,297,298,295,-1,294,295,298,-1,298,292,294,-1,289,290,300,-1,300,299,289,-1,302,301,300,-1,300,290,302,-1,316,289,299,-1,299,334,316,-1,302,297,296,-1,296,301,302,-1,293,320,335,-1,335,304,293,-1,334,299,306,-1,306,305,334,-1,299,300,307,-1,307,306,299,-1,300,301,308,-1,308,307,300,-1,301,296,309,-1,309,308,301,-1,296,295,310,-1,310,309,296,-1,295,294,303,-1,303,310,295,-1,303,304,343,-1,304,335,343,-1,305,306,343,-1,306,307,343,-1,307,308,343,-1,308,309,343,-1,309,310,343,-1,310,303,343,-1,317,314,289,-1,289,316,317,-1,291,293,294,-1,294,292,291,-1,293,304,303,-1,303,294,293,-1,289,314,311,-1,311,290,289,-1,274,291,292,-1,292,275,274,-1,292,298,313,-1,313,275,292,-1,312,313,298,-1,298,297,312,-1,297,302,315,-1,315,312,297,-1,315,302,290,-1,290,311,315,-1,318,288,282,-1,282,319,318,-1,320,318,319,-1,319,321,320,-1,324,323,322,-1,322,325,324,-1,327,326,323,-1,323,324,327,-1,328,331,330,-1,330,329,328,-1,332,329,330,-1,330,333,332,-1,316,334,331,-1,331,328,316,-1,332,333,325,-1,325,322,332,-1,321,336,335,-1,335,320,321,-1,334,305,337,-1,337,331,334,-1,331,337,338,-1,338,330,331,-1,330,338,339,-1,339,333,330,-1,333,339,340,-1,340,325,333,-1,325,340,341,-1,341,324,325,-1,324,341,342,-1,342,327,324,-1,342,343,336,-1,336,343,335,-1,305,343,337,-1,337,343,338,-1,338,343,339,-1,339,343,340,-1,340,343,341,-1,341,343,342,-1,317,316,328,-1,328,344,317,-1,319,326,327,-1,327,321,319,-1,321,327,342,-1,342,336,321,-1,328,329,345,-1,345,344,328,-1,282,283,326,-1,326,319,282,-1,326,283,346,-1,346,323,326,-1,347,322,323,-1,323,346,347,-1,322,347,348,-1,348,332,322,-1,348,345,329,-1,329,332,348,-1,349,350,355,-1,355,354,349,-1,350,351,356,-1,356,355,350,-1,351,359,368,-1,368,356,351,-1,369,352,357,-1,357,360,369,-1,352,353,358,-1,358,357,352,-1,353,349,354,-1,354,358,353,-1,354,355,374,-1,355,356,374,-1,356,368,374,-1,360,357,374,-1,357,358,374,-1,358,354,374,-1,15,350,349,-1,349,361,15,-1,16,351,350,-1,350,15,16,-1,19,359,351,-1,351,16,19,-1,17,352,369,-1,369,0,17,-1,18,353,352,-1,352,17,18,-1,361,349,353,-1,353,18,361,-1,362,365,364,-1,364,363,362,-1,363,364,367,-1,367,366,363,-1,366,367,368,-1,368,359,366,-1,369,360,371,-1,371,370,369,-1,370,371,373,-1,373,372,370,-1,372,373,365,-1,365,362,372,-1,365,374,364,-1,364,374,367,-1,367,374,368,-1,360,374,371,-1,371,374,373,-1,373,374,365,-1,22,23,362,-1,362,363,22,-1,375,22,363,-1,363,366,375,-1,19,375,366,-1,366,359,19,-1,26,0,369,-1,369,370,26,-1,376,26,370,-1,370,372,376,-1,23,376,372,-1,372,362,23,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=10, element #190, 2872 total numbers */
	this.IndexedFaceSet_10_190_texCoordIndex = new MFInt32(Java.to([1,2,3,-1,3,0,1,-1,4,5,2,-1,2,1,4,-1,6,7,5,-1,5,4,6,-1,9,10,11,-1,11,8,9,-1,12,13,10,-1,10,9,12,-1,0,3,13,-1,13,12,0,-1,1,0,14,-1,14,15,1,-1,0,12,16,-1,16,14,0,-1,12,9,17,-1,17,16,12,-1,9,8,18,-1,18,17,9,-1,6,4,19,-1,19,20,6,-1,4,1,15,-1,15,19,4,-1,15,14,21,-1,14,16,21,-1,16,17,21,-1,17,18,21,-1,20,19,21,-1,19,15,21,-1,25,22,23,-1,23,24,25,-1,27,25,24,-1,24,26,27,-1,6,27,26,-1,26,7,6,-1,29,8,11,-1,11,28,29,-1,31,29,28,-1,28,30,31,-1,22,31,30,-1,30,23,22,-1,25,32,33,-1,33,22,25,-1,22,33,34,-1,34,31,22,-1,31,34,35,-1,35,29,31,-1,29,35,18,-1,18,8,29,-1,6,20,36,-1,36,27,6,-1,27,36,32,-1,32,25,27,-1,32,21,33,-1,33,21,34,-1,34,21,35,-1,35,21,18,-1,20,21,36,-1,36,21,32,-1,42,43,37,-1,37,38,42,-1,38,44,42,-1,132,142,40,-1,40,39,132,-1,71,72,73,-1,73,70,71,-1,41,45,46,-1,45,48,47,-1,47,46,45,-1,41,46,49,-1,50,49,46,-1,46,47,50,-1,41,51,45,-1,52,48,45,-1,45,51,52,-1,53,54,55,-1,48,56,55,-1,55,47,48,-1,54,50,47,-1,47,55,54,-1,58,59,57,-1,57,56,58,-1,52,58,56,-1,56,48,52,-1,62,63,61,-1,64,65,57,-1,60,133,141,-1,141,66,60,-1,67,60,66,-1,66,64,67,-1,76,69,68,-1,68,75,76,-1,75,77,78,-1,59,79,78,-1,54,53,88,-1,124,125,74,-1,74,123,124,-1,44,38,125,-1,125,124,44,-1,129,130,124,-1,124,123,129,-1,44,124,130,-1,89,52,51,-1,63,68,134,-1,134,136,63,-1,75,68,63,-1,63,62,75,-1,57,59,78,-1,78,77,57,-1,77,75,62,-1,62,67,77,-1,55,65,53,-1,56,57,65,-1,65,55,56,-1,81,82,83,-1,83,80,81,-1,84,85,82,-1,82,81,84,-1,86,87,85,-1,85,84,86,-1,86,90,87,-1,91,92,93,-1,92,80,83,-1,83,93,92,-1,63,136,137,-1,137,61,63,-1,61,60,67,-1,67,62,61,-1,69,76,95,-1,95,94,69,-1,76,78,95,-1,51,41,96,-1,89,51,96,-1,79,59,120,-1,120,121,79,-1,59,58,122,-1,122,120,59,-1,58,52,126,-1,126,122,58,-1,52,89,127,-1,127,126,52,-1,121,120,128,-1,120,122,128,-1,122,126,128,-1,126,127,128,-1,97,98,99,-1,99,100,97,-1,101,103,104,-1,104,102,101,-1,103,105,106,-1,106,104,103,-1,105,107,108,-1,108,106,105,-1,107,109,110,-1,110,108,107,-1,109,111,112,-1,112,110,109,-1,111,113,114,-1,114,112,111,-1,113,115,116,-1,116,114,113,-1,115,117,118,-1,118,116,115,-1,117,97,100,-1,100,118,117,-1,100,99,119,-1,102,104,119,-1,104,106,119,-1,106,108,119,-1,108,110,119,-1,110,112,119,-1,112,114,119,-1,114,116,119,-1,116,118,119,-1,118,100,119,-1,39,53,64,-1,64,66,39,-1,77,67,64,-1,64,57,77,-1,53,65,64,-1,88,53,39,-1,39,40,88,-1,71,37,43,-1,43,72,71,-1,78,76,75,-1,133,60,61,-1,61,137,133,-1,68,69,135,-1,135,134,68,-1,69,94,139,-1,139,135,69,-1,101,102,140,-1,140,138,101,-1,140,102,119,-1,39,66,141,-1,141,132,39,-1,131,70,73,-1,73,143,131,-1,146,145,144,-1,144,147,146,-1,145,146,148,-1,150,149,152,-1,152,151,150,-1,154,153,156,-1,156,155,154,-1,157,159,158,-1,158,159,160,-1,160,161,158,-1,157,162,159,-1,163,160,159,-1,159,162,163,-1,157,158,164,-1,165,164,158,-1,158,161,165,-1,166,168,167,-1,161,160,168,-1,168,169,161,-1,167,168,160,-1,160,163,167,-1,171,169,170,-1,170,172,171,-1,165,161,169,-1,169,171,165,-1,173,175,174,-1,176,170,177,-1,178,181,180,-1,180,179,178,-1,182,176,181,-1,181,178,182,-1,185,184,183,-1,183,186,185,-1,184,188,187,-1,172,188,189,-1,167,190,166,-1,193,192,191,-1,191,194,193,-1,148,193,194,-1,194,145,148,-1,195,192,193,-1,193,196,195,-1,148,196,193,-1,197,164,165,-1,174,199,198,-1,198,183,174,-1,184,173,174,-1,174,183,184,-1,170,187,188,-1,188,172,170,-1,187,182,173,-1,173,184,187,-1,168,166,177,-1,169,168,177,-1,177,170,169,-1,201,200,203,-1,203,202,201,-1,204,201,202,-1,202,205,204,-1,206,204,205,-1,205,207,206,-1,206,207,208,-1,209,211,210,-1,210,211,203,-1,203,200,210,-1,174,175,212,-1,212,199,174,-1,175,173,182,-1,182,178,175,-1,186,214,213,-1,213,185,186,-1,185,213,188,-1,164,215,157,-1,197,215,164,-1,189,217,216,-1,216,172,189,-1,172,216,218,-1,218,171,172,-1,171,218,219,-1,219,165,171,-1,165,219,220,-1,220,197,165,-1,217,221,216,-1,216,221,218,-1,218,221,219,-1,219,221,220,-1,222,225,224,-1,224,223,222,-1,226,229,228,-1,228,227,226,-1,227,228,231,-1,231,230,227,-1,230,231,233,-1,233,232,230,-1,232,233,235,-1,235,234,232,-1,234,235,237,-1,237,236,234,-1,236,237,239,-1,239,238,236,-1,238,239,241,-1,241,240,238,-1,240,241,243,-1,243,242,240,-1,242,243,225,-1,225,222,242,-1,225,244,224,-1,229,244,228,-1,228,244,231,-1,231,244,233,-1,233,244,235,-1,235,244,237,-1,237,244,239,-1,239,244,241,-1,241,244,243,-1,243,244,225,-1,149,181,176,-1,176,166,149,-1,187,170,176,-1,176,182,187,-1,166,176,177,-1,190,152,149,-1,149,166,190,-1,154,155,147,-1,147,144,154,-1,188,184,185,-1,179,212,175,-1,175,178,179,-1,183,198,245,-1,245,186,183,-1,186,245,246,-1,246,214,186,-1,226,247,248,-1,248,229,226,-1,248,244,229,-1,149,150,180,-1,180,181,149,-1,249,250,156,-1,156,153,249,-1,251,252,253,-1,253,254,251,-1,257,258,255,-1,255,256,257,-1,259,260,253,-1,253,252,259,-1,258,261,262,-1,262,255,258,-1,254,263,264,-1,264,251,254,-1,310,309,260,-1,260,259,310,-1,267,268,269,-1,269,266,267,-1,267,266,257,-1,257,256,267,-1,267,270,271,-1,271,268,267,-1,270,267,256,-1,256,272,270,-1,256,255,273,-1,273,272,256,-1,255,262,274,-1,274,275,255,-1,310,259,276,-1,276,311,310,-1,259,265,277,-1,277,276,259,-1,273,255,275,-1,275,278,273,-1,275,274,279,-1,311,276,312,-1,276,277,312,-1,278,275,279,-1,251,264,280,-1,280,281,251,-1,252,251,281,-1,281,282,252,-1,252,282,265,-1,265,259,252,-1,283,284,285,-1,285,286,283,-1,289,290,287,-1,287,288,289,-1,292,286,285,-1,285,291,292,-1,288,287,293,-1,293,294,288,-1,284,283,264,-1,264,263,284,-1,313,292,291,-1,291,314,313,-1,297,296,269,-1,269,268,297,-1,297,290,289,-1,289,296,297,-1,297,268,271,-1,271,298,297,-1,298,299,290,-1,290,297,298,-1,290,299,300,-1,300,287,290,-1,287,301,302,-1,302,293,287,-1,313,315,303,-1,303,292,313,-1,292,303,304,-1,304,295,292,-1,300,305,301,-1,301,287,300,-1,301,306,302,-1,315,316,303,-1,303,316,304,-1,305,306,301,-1,283,307,280,-1,280,264,283,-1,286,308,307,-1,307,283,286,-1,286,292,295,-1,295,308,286,-1,318,319,320,-1,320,317,318,-1,322,323,324,-1,324,321,322,-1,326,322,321,-1,321,325,326,-1,327,328,329,-1,329,330,327,-1,323,331,332,-1,332,324,323,-1,350,349,326,-1,326,325,350,-1,317,333,334,-1,334,318,317,-1,334,333,328,-1,328,327,334,-1,336,335,320,-1,320,319,336,-1,340,337,338,-1,338,339,340,-1,342,341,337,-1,337,340,342,-1,343,344,345,-1,345,346,343,-1,339,338,332,-1,332,331,339,-1,351,341,342,-1,342,352,351,-1,335,336,347,-1,347,348,335,-1,347,343,346,-1,346,348,347,-1,353,354,355,-1,355,356,353,-1,357,353,356,-1,356,358,357,-1,359,360,361,-1,361,362,359,-1,360,363,364,-1,364,361,360,-1,365,357,358,-1,358,366,365,-1,354,367,368,-1,368,355,354,-1,369,359,362,-1,362,370,369,-1,385,386,364,-1,364,363,385,-1,371,372,373,-1,373,374,371,-1,375,376,372,-1,372,371,375,-1,377,378,379,-1,379,380,377,-1,380,379,381,-1,381,382,380,-1,383,384,376,-1,376,375,383,-1,374,373,368,-1,368,367,374,-1,369,370,378,-1,378,377,369,-1,387,382,381,-1,381,388,387,-1,421,390,391,-1,391,422,421,-1,390,393,394,-1,394,391,390,-1,395,396,397,-1,397,398,395,-1,398,397,399,-1,399,400,398,-1,393,401,402,-1,402,394,393,-1,399,389,392,-1,392,400,399,-1,404,396,395,-1,395,403,404,-1,401,405,406,-1,406,402,401,-1,423,424,409,-1,409,410,423,-1,410,409,411,-1,411,412,410,-1,413,414,415,-1,415,416,413,-1,414,417,418,-1,418,415,414,-1,412,411,419,-1,419,420,412,-1,418,417,408,-1,408,407,418,-1,404,403,413,-1,413,416,404,-1,420,419,406,-1,406,405,420,-1,427,428,425,-1,425,426,427,-1,428,430,429,-1,429,425,428,-1,433,434,431,-1,431,432,433,-1,432,435,436,-1,436,433,432,-1,430,438,437,-1,437,429,430,-1,440,427,426,-1,426,439,440,-1,441,442,431,-1,431,434,441,-1,435,457,458,-1,458,436,435,-1,445,446,443,-1,443,444,445,-1,444,443,447,-1,447,448,444,-1,451,452,449,-1,449,450,451,-1,452,451,453,-1,453,454,452,-1,448,447,455,-1,455,456,448,-1,440,439,446,-1,446,445,440,-1,441,450,449,-1,449,442,441,-1,454,453,460,-1,460,459,454,-1,463,464,461,-1,461,462,463,-1,465,466,464,-1,464,463,465,-1,469,470,467,-1,467,468,469,-1,472,469,468,-1,468,471,472,-1,473,474,475,-1,475,476,473,-1,477,478,475,-1,475,474,477,-1,479,473,476,-1,476,480,479,-1,477,526,527,-1,527,478,477,-1,466,465,481,-1,481,482,466,-1,480,476,483,-1,483,484,480,-1,476,475,485,-1,485,483,476,-1,475,478,486,-1,486,485,475,-1,478,527,528,-1,528,486,478,-1,470,469,488,-1,488,487,470,-1,469,472,489,-1,489,488,469,-1,489,482,490,-1,482,481,490,-1,484,483,529,-1,483,485,529,-1,485,486,529,-1,486,528,529,-1,487,488,490,-1,488,489,490,-1,491,492,473,-1,473,479,491,-1,464,466,472,-1,472,471,464,-1,466,482,489,-1,489,472,466,-1,473,492,493,-1,493,474,473,-1,461,464,471,-1,471,494,461,-1,471,468,495,-1,495,494,471,-1,496,495,468,-1,468,467,496,-1,526,477,497,-1,497,530,526,-1,497,477,474,-1,474,493,497,-1,463,462,498,-1,498,499,463,-1,465,463,499,-1,499,500,465,-1,503,504,501,-1,501,502,503,-1,505,506,504,-1,504,503,505,-1,507,508,509,-1,509,510,507,-1,512,510,509,-1,509,511,512,-1,479,480,508,-1,508,507,479,-1,512,511,532,-1,532,531,512,-1,500,513,481,-1,481,465,500,-1,480,484,514,-1,514,508,480,-1,508,514,515,-1,515,509,508,-1,509,515,516,-1,516,511,509,-1,511,516,533,-1,533,532,511,-1,502,517,518,-1,518,503,502,-1,503,518,519,-1,519,505,503,-1,519,490,513,-1,513,490,481,-1,484,529,514,-1,514,529,515,-1,515,529,516,-1,516,529,533,-1,517,490,518,-1,518,490,519,-1,491,479,507,-1,507,520,491,-1,499,506,505,-1,505,500,499,-1,500,505,519,-1,519,513,500,-1,507,510,521,-1,521,520,507,-1,498,522,506,-1,506,499,498,-1,506,522,523,-1,523,504,506,-1,524,501,504,-1,504,523,524,-1,531,534,525,-1,525,512,531,-1,525,521,510,-1,510,512,525,-1,535,536,537,-1,537,538,535,-1,536,539,540,-1,540,537,536,-1,539,541,542,-1,542,540,539,-1,543,544,545,-1,545,546,543,-1,544,547,548,-1,548,545,544,-1,547,535,538,-1,538,548,547,-1,538,537,549,-1,537,540,549,-1,540,542,549,-1,546,545,549,-1,545,548,549,-1,548,538,549,-1,550,536,535,-1,535,551,550,-1,552,539,536,-1,536,550,552,-1,553,541,539,-1,539,552,553,-1,554,544,543,-1,543,555,554,-1,556,547,544,-1,544,554,556,-1,551,535,547,-1,547,556,551,-1,557,558,559,-1,559,560,557,-1,560,559,561,-1,561,562,560,-1,562,561,542,-1,542,541,562,-1,543,546,563,-1,563,564,543,-1,564,563,565,-1,565,566,564,-1,566,565,558,-1,558,557,566,-1,558,549,559,-1,559,549,561,-1,561,549,542,-1,546,549,563,-1,563,549,565,-1,565,549,558,-1,567,568,557,-1,557,560,567,-1,569,567,560,-1,560,562,569,-1,553,569,562,-1,562,541,553,-1,570,555,543,-1,543,564,570,-1,571,570,564,-1,564,566,571,-1,568,571,566,-1,566,557,568,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=11, element #190, 1131 total numbers made up of 377 3-tuple values */
	this.Coordinate_11_190_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(0.0000),doubleToFloat(17.7700),doubleToFloat(1.6390),doubleToFloat(2.0180),doubleToFloat(16.4600),doubleToFloat(0.0675),doubleToFloat(1.7480),doubleToFloat(16.6300),doubleToFloat(-0.7860),doubleToFloat(1.0090),doubleToFloat(16.7400),doubleToFloat(-1.3870),doubleToFloat(0.0000),doubleToFloat(16.7500),doubleToFloat(-1.6070),doubleToFloat(0.0000),doubleToFloat(15.9400),doubleToFloat(1.6530),doubleToFloat(1.1050),doubleToFloat(16.0700),doubleToFloat(1.4010),doubleToFloat(1.7480),doubleToFloat(16.2500),doubleToFloat(0.8554),doubleToFloat(1.2490),doubleToFloat(15.8300),doubleToFloat(-0.5656),doubleToFloat(1.4470),doubleToFloat(15.7500),doubleToFloat(0.0675)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(1.2490),doubleToFloat(15.6300),doubleToFloat(0.6350),doubleToFloat(0.7846),doubleToFloat(15.5100),doubleToFloat(1.0130),doubleToFloat(0.0000),doubleToFloat(15.8600),doubleToFloat(-1.1550),doubleToFloat(0.7163),doubleToFloat(15.8700),doubleToFloat(-0.9986),doubleToFloat(0.0000),doubleToFloat(15.4500),doubleToFloat(0.0676),doubleToFloat(1.6470),doubleToFloat(18.0800),doubleToFloat(-0.6009),doubleToFloat(0.9518),doubleToFloat(18.1600),doubleToFloat(-1.1560),doubleToFloat(0.9920),doubleToFloat(17.8000),doubleToFloat(1.4240),doubleToFloat(1.6420),doubleToFloat(17.8700),doubleToFloat(0.9034),doubleToFloat(0.0000),doubleToFloat(18.1900),doubleToFloat(-1.3560)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-2.0180),doubleToFloat(16.4600),doubleToFloat(0.0676),doubleToFloat(-1.7480),doubleToFloat(16.6300),doubleToFloat(-0.7860),doubleToFloat(-1.6470),doubleToFloat(18.0800),doubleToFloat(-0.6009),doubleToFloat(-1.9000),doubleToFloat(17.9700),doubleToFloat(0.1855),doubleToFloat(-1.0090),doubleToFloat(16.7400),doubleToFloat(-1.3870),doubleToFloat(-1.1050),doubleToFloat(16.0700),doubleToFloat(1.4010),doubleToFloat(-0.9920),doubleToFloat(17.8000),doubleToFloat(1.4240),doubleToFloat(-1.7480),doubleToFloat(16.2500),doubleToFloat(0.8554),doubleToFloat(-1.4470),doubleToFloat(15.7500),doubleToFloat(0.0676),doubleToFloat(-1.2490),doubleToFloat(15.8300),doubleToFloat(-0.5655)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.2490),doubleToFloat(15.6300),doubleToFloat(0.6350),doubleToFloat(-0.7846),doubleToFloat(15.5100),doubleToFloat(1.0130),doubleToFloat(0.0000),doubleToFloat(15.4100),doubleToFloat(1.2010),doubleToFloat(-0.7163),doubleToFloat(15.8700),doubleToFloat(-0.9985),doubleToFloat(5.3240),doubleToFloat(14.6200),doubleToFloat(2.0510),doubleToFloat(5.2500),doubleToFloat(14.6200),doubleToFloat(-1.9830),doubleToFloat(1.4370),doubleToFloat(14.6200),doubleToFloat(2.6460),doubleToFloat(0.8468),doubleToFloat(17.2800),doubleToFloat(-1.6040),doubleToFloat(2.0520),doubleToFloat(17.2200),doubleToFloat(-1.0750),doubleToFloat(2.5970),doubleToFloat(16.9800),doubleToFloat(0.1593)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(2.1620),doubleToFloat(16.3600),doubleToFloat(1.3210),doubleToFloat(3.6040),doubleToFloat(17.0400),doubleToFloat(0.1289),doubleToFloat(3.3710),doubleToFloat(17.3700),doubleToFloat(-2.1460),doubleToFloat(3.2860),doubleToFloat(16.1900),doubleToFloat(1.5010),doubleToFloat(2.8150),doubleToFloat(15.6600),doubleToFloat(2.2230),doubleToFloat(1.1650),doubleToFloat(17.2800),doubleToFloat(-3.0200),doubleToFloat(5.2590),doubleToFloat(16.0100),doubleToFloat(1.8630),doubleToFloat(3.3100),doubleToFloat(16.6700),doubleToFloat(1.9830),doubleToFloat(2.5940),doubleToFloat(15.8600),doubleToFloat(2.5880),doubleToFloat(3.4550),doubleToFloat(14.9700),doubleToFloat(2.7340)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(4.7070),doubleToFloat(16.6400),doubleToFloat(2.0470),doubleToFloat(5.7350),doubleToFloat(16.7600),doubleToFloat(0.0794),doubleToFloat(3.7540),doubleToFloat(17.5200),doubleToFloat(0.1093),doubleToFloat(4.2180),doubleToFloat(17.2000),doubleToFloat(-2.4330),doubleToFloat(5.3410),doubleToFloat(17.4500),doubleToFloat(0.0763),doubleToFloat(5.3260),doubleToFloat(16.7800),doubleToFloat(-2.3230),doubleToFloat(4.2090),doubleToFloat(13.4000),doubleToFloat(-2.5780),doubleToFloat(1.4360),doubleToFloat(15.1600),doubleToFloat(-4.5320),doubleToFloat(3.7910),doubleToFloat(15.1100),doubleToFloat(-4.0660),doubleToFloat(1.8600),doubleToFloat(12.1700),doubleToFloat(-3.6000)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(4.1450),doubleToFloat(13.3900),doubleToFloat(-3.3940),doubleToFloat(1.3890),doubleToFloat(15.2400),doubleToFloat(2.3450),doubleToFloat(1.1150),doubleToFloat(15.9300),doubleToFloat(1.8520),doubleToFloat(3.5660),doubleToFloat(14.9100),doubleToFloat(2.4830),doubleToFloat(1.5480),doubleToFloat(12.5500),doubleToFloat(-4.2420),doubleToFloat(3.2320),doubleToFloat(13.5200),doubleToFloat(-4.0960),doubleToFloat(4.9520),doubleToFloat(14.9000),doubleToFloat(-3.2330),doubleToFloat(1.4660),doubleToFloat(13.3800),doubleToFloat(-4.5060),doubleToFloat(0.9936),doubleToFloat(17.0000),doubleToFloat(0.6225),doubleToFloat(1.1000),doubleToFloat(17.2000),doubleToFloat(0.1681)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.9203),doubleToFloat(17.3200),doubleToFloat(-0.3587),doubleToFloat(1.7700),doubleToFloat(12.5400),doubleToFloat(-2.9540),doubleToFloat(4.2410),doubleToFloat(14.6300),doubleToFloat(-2.5780),doubleToFloat(1.7700),doubleToFloat(14.6500),doubleToFloat(-2.9540),doubleToFloat(4.9410),doubleToFloat(14.6200),doubleToFloat(-2.3160),doubleToFloat(5.4490),doubleToFloat(16.1800),doubleToFloat(-1.7740),doubleToFloat(3.5880),doubleToFloat(14.6200),doubleToFloat(2.5130),doubleToFloat(5.8620),doubleToFloat(14.6200),doubleToFloat(-1.0930),doubleToFloat(6.0240),doubleToFloat(15.5500),doubleToFloat(-1.0260),doubleToFloat(6.2920),doubleToFloat(15.8800),doubleToFloat(0.0357)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(5.8260),doubleToFloat(15.4400),doubleToFloat(1.1080),doubleToFloat(5.9220),doubleToFloat(14.6200),doubleToFloat(1.2170),doubleToFloat(6.8870),doubleToFloat(14.6200),doubleToFloat(0.0730),doubleToFloat(1.4110),doubleToFloat(14.2200),doubleToFloat(2.0000),doubleToFloat(1.6970),doubleToFloat(14.2000),doubleToFloat(-2.3110),doubleToFloat(4.0730),doubleToFloat(14.1800),doubleToFloat(-1.9490),doubleToFloat(4.5680),doubleToFloat(14.1700),doubleToFloat(-1.7670),doubleToFloat(4.7430),doubleToFloat(14.1800),doubleToFloat(-1.5770),doubleToFloat(5.2590),doubleToFloat(14.1800),doubleToFloat(-0.8269),doubleToFloat(5.4730),doubleToFloat(14.1900),doubleToFloat(0.0882)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(5.3120),doubleToFloat(14.2000),doubleToFloat(0.9571),doubleToFloat(4.9340),doubleToFloat(14.2200),doubleToFloat(1.4850),doubleToFloat(3.4840),doubleToFloat(14.2200),doubleToFloat(1.8710),doubleToFloat(0.0000),doubleToFloat(13.5500),doubleToFloat(-0.1494),doubleToFloat(0.0000),doubleToFloat(17.3700),doubleToFloat(-0.5611),doubleToFloat(0.0000),doubleToFloat(17.2900),doubleToFloat(-1.6980),doubleToFloat(1.4020),doubleToFloat(16.6400),doubleToFloat(-3.9610),doubleToFloat(4.0410),doubleToFloat(16.7100),doubleToFloat(-3.1140),doubleToFloat(1.0060),doubleToFloat(16.8300),doubleToFloat(-2.6250),doubleToFloat(2.7120),doubleToFloat(16.8700),doubleToFloat(-1.9230)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.0000),doubleToFloat(15.1700),doubleToFloat(-4.6690),doubleToFloat(0.0000),doubleToFloat(11.9500),doubleToFloat(-3.7150),doubleToFloat(0.0000),doubleToFloat(13.2900),doubleToFloat(-4.6060),doubleToFloat(0.0000),doubleToFloat(14.6300),doubleToFloat(-3.0840),doubleToFloat(0.0000),doubleToFloat(14.1800),doubleToFloat(-2.4350),doubleToFloat(0.0000),doubleToFloat(16.6300),doubleToFloat(-4.0860),doubleToFloat(-2.5970),doubleToFloat(16.9800),doubleToFloat(0.1593),doubleToFloat(-2.1620),doubleToFloat(16.3600),doubleToFloat(1.3210),doubleToFloat(-3.2860),doubleToFloat(16.1900),doubleToFloat(1.5010),doubleToFloat(-3.6040),doubleToFloat(17.0400),doubleToFloat(0.1289)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-2.8150),doubleToFloat(15.6600),doubleToFloat(2.2230),doubleToFloat(-1.1650),doubleToFloat(17.2800),doubleToFloat(-3.0200),doubleToFloat(0.0000),doubleToFloat(17.2600),doubleToFloat(-3.1310),doubleToFloat(0.0000),doubleToFloat(16.8200),doubleToFloat(-2.7270),doubleToFloat(-1.0060),doubleToFloat(16.8300),doubleToFloat(-2.6250),doubleToFloat(-0.8468),doubleToFloat(17.2800),doubleToFloat(-1.6040),doubleToFloat(-2.0520),doubleToFloat(17.2200),doubleToFloat(-1.0750),doubleToFloat(-2.7120),doubleToFloat(16.8700),doubleToFloat(-1.9230),doubleToFloat(-1.4370),doubleToFloat(14.6200),doubleToFloat(2.6460),doubleToFloat(-3.4550),doubleToFloat(14.9700),doubleToFloat(2.7340)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-2.5940),doubleToFloat(15.8600),doubleToFloat(2.5880),doubleToFloat(-3.3100),doubleToFloat(16.6700),doubleToFloat(1.9830),doubleToFloat(-4.7070),doubleToFloat(16.6400),doubleToFloat(2.0470),doubleToFloat(-3.5660),doubleToFloat(14.9100),doubleToFloat(2.4830),doubleToFloat(-5.2590),doubleToFloat(16.0100),doubleToFloat(1.8630),doubleToFloat(-3.3710),doubleToFloat(17.3700),doubleToFloat(-2.1460),doubleToFloat(-3.7540),doubleToFloat(17.5200),doubleToFloat(0.1093),doubleToFloat(-5.3410),doubleToFloat(17.4500),doubleToFloat(0.0763),doubleToFloat(-5.3260),doubleToFloat(16.7800),doubleToFloat(-2.3230),doubleToFloat(-5.7350),doubleToFloat(16.7600),doubleToFloat(0.0794)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-5.4490),doubleToFloat(16.1800),doubleToFloat(-1.7740),doubleToFloat(-3.2320),doubleToFloat(13.5200),doubleToFloat(-4.0960),doubleToFloat(-1.5480),doubleToFloat(12.5500),doubleToFloat(-4.2420),doubleToFloat(-1.4660),doubleToFloat(13.3800),doubleToFloat(-4.5060),doubleToFloat(-4.0410),doubleToFloat(16.7100),doubleToFloat(-3.1140),doubleToFloat(-4.2180),doubleToFloat(17.2000),doubleToFloat(-2.4330),doubleToFloat(-1.4360),doubleToFloat(15.1600),doubleToFloat(-4.5320),doubleToFloat(-1.4020),doubleToFloat(16.6400),doubleToFloat(-3.9610),doubleToFloat(-3.7910),doubleToFloat(15.1100),doubleToFloat(-4.0660),doubleToFloat(-1.8600),doubleToFloat(12.1700),doubleToFloat(-3.6000)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-4.1450),doubleToFloat(13.3900),doubleToFloat(-3.3940),doubleToFloat(-4.2090),doubleToFloat(13.4000),doubleToFloat(-2.5780),doubleToFloat(-1.7700),doubleToFloat(12.5400),doubleToFloat(-2.9540),doubleToFloat(-4.9520),doubleToFloat(14.9000),doubleToFloat(-3.2330),doubleToFloat(-4.9410),doubleToFloat(14.6200),doubleToFloat(-2.3160),doubleToFloat(-5.2500),doubleToFloat(14.6200),doubleToFloat(-1.9830),doubleToFloat(0.0000),doubleToFloat(15.8200),doubleToFloat(2.0320),doubleToFloat(0.0000),doubleToFloat(15.1600),doubleToFloat(2.4150),doubleToFloat(-1.3890),doubleToFloat(15.2400),doubleToFloat(2.3450),doubleToFloat(-1.1150),doubleToFloat(15.9300),doubleToFloat(1.8520)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.0000),doubleToFloat(14.6200),doubleToFloat(2.6730),doubleToFloat(-5.3240),doubleToFloat(14.6200),doubleToFloat(2.0510),doubleToFloat(0.0000),doubleToFloat(12.3700),doubleToFloat(-4.3380),doubleToFloat(-1.1000),doubleToFloat(17.2000),doubleToFloat(0.1681),doubleToFloat(-0.9936),doubleToFloat(17.0000),doubleToFloat(0.6225),doubleToFloat(-0.9203),doubleToFloat(17.3200),doubleToFloat(-0.3587),doubleToFloat(0.0000),doubleToFloat(16.8600),doubleToFloat(0.8664),doubleToFloat(-4.2410),doubleToFloat(14.6300),doubleToFloat(-2.5780),doubleToFloat(-1.7700),doubleToFloat(14.6500),doubleToFloat(-2.9540),doubleToFloat(-3.5880),doubleToFloat(14.6200),doubleToFloat(2.5130)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-6.0240),doubleToFloat(15.5500),doubleToFloat(-1.0260),doubleToFloat(-5.8620),doubleToFloat(14.6200),doubleToFloat(-1.0930),doubleToFloat(-6.2920),doubleToFloat(15.8800),doubleToFloat(0.0357),doubleToFloat(-5.8260),doubleToFloat(15.4400),doubleToFloat(1.1080),doubleToFloat(-5.9220),doubleToFloat(14.6200),doubleToFloat(1.2170),doubleToFloat(-6.8870),doubleToFloat(14.6200),doubleToFloat(0.0730),doubleToFloat(0.0000),doubleToFloat(14.2200),doubleToFloat(2.0260),doubleToFloat(-1.4110),doubleToFloat(14.2200),doubleToFloat(2.0000),doubleToFloat(-4.0730),doubleToFloat(14.1800),doubleToFloat(-1.9490),doubleToFloat(-1.6970),doubleToFloat(14.2000),doubleToFloat(-2.3110)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-4.5680),doubleToFloat(14.1700),doubleToFloat(-1.7670),doubleToFloat(-4.7430),doubleToFloat(14.1800),doubleToFloat(-1.5770),doubleToFloat(-5.2590),doubleToFloat(14.1800),doubleToFloat(-0.8269),doubleToFloat(-5.4730),doubleToFloat(14.1900),doubleToFloat(0.0882),doubleToFloat(-5.3120),doubleToFloat(14.2000),doubleToFloat(0.9571),doubleToFloat(-4.9340),doubleToFloat(14.2200),doubleToFloat(1.4850),doubleToFloat(-3.4840),doubleToFloat(14.2200),doubleToFloat(1.8710),doubleToFloat(0.0000),doubleToFloat(12.2500),doubleToFloat(-3.0840),doubleToFloat(5.3840),doubleToFloat(13.0100),doubleToFloat(1.4370),doubleToFloat(5.4610),doubleToFloat(12.6700),doubleToFloat(0.0948)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(1.5960),doubleToFloat(12.1200),doubleToFloat(2.9560),doubleToFloat(5.1310),doubleToFloat(12.1200),doubleToFloat(-1.3750),doubleToFloat(1.5170),doubleToFloat(12.8800),doubleToFloat(2.8400),doubleToFloat(3.6750),doubleToFloat(12.9400),doubleToFloat(2.6360),doubleToFloat(3.8330),doubleToFloat(12.1200),doubleToFloat(2.7080),doubleToFloat(4.0380),doubleToFloat(12.1200),doubleToFloat(-2.5120),doubleToFloat(5.3250),doubleToFloat(12.1200),doubleToFloat(1.5150),doubleToFloat(5.4120),doubleToFloat(12.1200),doubleToFloat(0.1193),doubleToFloat(5.2370),doubleToFloat(12.9900),doubleToFloat(-1.2600),doubleToFloat(6.0150),doubleToFloat(13.3700),doubleToFloat(1.0490)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(6.1050),doubleToFloat(13.1700),doubleToFloat(0.1416),doubleToFloat(5.8740),doubleToFloat(13.3800),doubleToFloat(-0.7272),doubleToFloat(0.0029),doubleToFloat(12.8600),doubleToFloat(-3.0840),doubleToFloat(5.3230),doubleToFloat(14.6200),doubleToFloat(2.0550),doubleToFloat(5.2520),doubleToFloat(14.6200),doubleToFloat(-1.9780),doubleToFloat(1.4350),doubleToFloat(14.6200),doubleToFloat(2.6480),doubleToFloat(3.5860),doubleToFloat(14.6200),doubleToFloat(2.5160),doubleToFloat(5.8630),doubleToFloat(14.6200),doubleToFloat(-1.0880),doubleToFloat(5.9210),doubleToFloat(14.6200),doubleToFloat(1.2220),doubleToFloat(6.8870),doubleToFloat(14.6200),doubleToFloat(0.0781)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(1.7720),doubleToFloat(12.9000),doubleToFloat(-2.9530),doubleToFloat(4.2430),doubleToFloat(12.9600),doubleToFloat(-2.5750),doubleToFloat(1.7720),doubleToFloat(14.6100),doubleToFloat(-2.9530),doubleToFloat(4.2430),doubleToFloat(14.6100),doubleToFloat(-2.5750),doubleToFloat(0.0028),doubleToFloat(14.6200),doubleToFloat(-3.0840),doubleToFloat(-1.7670),doubleToFloat(12.9000),doubleToFloat(-2.9560),doubleToFloat(-4.2380),doubleToFloat(12.9600),doubleToFloat(-2.5820),doubleToFloat(-5.3860),doubleToFloat(13.0100),doubleToFloat(1.4280),doubleToFloat(-3.6790),doubleToFloat(12.9400),doubleToFloat(2.6290),doubleToFloat(-5.2340),doubleToFloat(12.9900),doubleToFloat(-1.2690)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-5.4610),doubleToFloat(12.6700),doubleToFloat(0.0853),doubleToFloat(-5.2480),doubleToFloat(14.6200),doubleToFloat(-1.9870),doubleToFloat(-1.5990),doubleToFloat(12.1200),doubleToFloat(2.9550),doubleToFloat(-1.5220),doubleToFloat(12.8800),doubleToFloat(2.8370),doubleToFloat(-0.0022),doubleToFloat(12.8200),doubleToFloat(2.9070),doubleToFloat(-1.4390),doubleToFloat(14.6200),doubleToFloat(2.6450),doubleToFloat(-0.0020),doubleToFloat(14.6200),doubleToFloat(2.6730),doubleToFloat(-3.5900),doubleToFloat(14.6200),doubleToFloat(2.5100),doubleToFloat(-5.3260),doubleToFloat(14.6200),doubleToFloat(2.0460),doubleToFloat(-6.1040),doubleToFloat(13.1700),doubleToFloat(0.1312)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-6.0160),doubleToFloat(13.3700),doubleToFloat(1.0390),doubleToFloat(-5.8730),doubleToFloat(13.3800),doubleToFloat(-0.7372),doubleToFloat(-5.8610),doubleToFloat(14.6200),doubleToFloat(-1.0980),doubleToFloat(-5.9230),doubleToFloat(14.6200),doubleToFloat(1.2120),doubleToFloat(-6.8870),doubleToFloat(14.6200),doubleToFloat(0.0680),doubleToFloat(-1.7670),doubleToFloat(14.6100),doubleToFloat(-2.9560),doubleToFloat(-4.2380),doubleToFloat(14.6100),doubleToFloat(-2.5820),doubleToFloat(-0.0012),doubleToFloat(12.1200),doubleToFloat(3.0230),doubleToFloat(1.6460),doubleToFloat(9.8900),doubleToFloat(-3.1540),doubleToFloat(5.4510),doubleToFloat(9.8900),doubleToFloat(0.1172)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(1.7100),doubleToFloat(9.8900),doubleToFloat(3.1340),doubleToFloat(1.7520),doubleToFloat(12.1200),doubleToFloat(-2.9690),doubleToFloat(0.0014),doubleToFloat(12.1200),doubleToFloat(-3.0830),doubleToFloat(-1.7100),doubleToFloat(9.8900),doubleToFloat(3.1340),doubleToFloat(-4.0360),doubleToFloat(12.1200),doubleToFloat(-2.5150),doubleToFloat(-1.6460),doubleToFloat(9.8900),doubleToFloat(-3.1540),doubleToFloat(-1.7490),doubleToFloat(12.1200),doubleToFloat(-2.9710),doubleToFloat(-5.1290),doubleToFloat(12.1200),doubleToFloat(-1.3800),doubleToFloat(-5.0280),doubleToFloat(9.8900),doubleToFloat(-1.4570),doubleToFloat(-5.3260),doubleToFloat(12.1200),doubleToFloat(1.5110)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-5.4510),doubleToFloat(9.8900),doubleToFloat(0.1172),doubleToFloat(-5.4120),doubleToFloat(12.1200),doubleToFloat(0.1136),doubleToFloat(-3.8360),doubleToFloat(12.1200),doubleToFloat(2.7040),doubleToFloat(0.0000),doubleToFloat(9.8900),doubleToFloat(3.2130),doubleToFloat(0.0000),doubleToFloat(9.8900),doubleToFloat(-3.1690),doubleToFloat(5.4880),doubleToFloat(7.1900),doubleToFloat(2.0200),doubleToFloat(3.5740),doubleToFloat(7.1900),doubleToFloat(-2.7280),doubleToFloat(1.6470),doubleToFloat(7.1900),doubleToFloat(-3.3330),doubleToFloat(4.0740),doubleToFloat(7.1900),doubleToFloat(3.2540),doubleToFloat(5.3020),doubleToFloat(9.8900),doubleToFloat(1.7660)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(3.9640),doubleToFloat(9.8900),doubleToFloat(2.9820),doubleToFloat(5.0280),doubleToFloat(9.8900),doubleToFloat(-1.4570),doubleToFloat(3.6720),doubleToFloat(9.8900),doubleToFloat(-2.6360),doubleToFloat(-3.9640),doubleToFloat(9.8900),doubleToFloat(2.9820),doubleToFloat(-4.0740),doubleToFloat(7.1900),doubleToFloat(3.2540),doubleToFloat(-5.3020),doubleToFloat(9.8900),doubleToFloat(1.7660),doubleToFloat(-5.4880),doubleToFloat(7.1900),doubleToFloat(2.0200),doubleToFloat(-3.6720),doubleToFloat(9.8900),doubleToFloat(-2.6360),doubleToFloat(-1.6470),doubleToFloat(7.1900),doubleToFloat(-3.3330),doubleToFloat(-4.9580),doubleToFloat(7.1900),doubleToFloat(-1.5830)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.0000),doubleToFloat(7.1900),doubleToFloat(-3.3520),doubleToFloat(1.9450),doubleToFloat(4.4460),doubleToFloat(3.6440),doubleToFloat(5.6180),doubleToFloat(4.4460),doubleToFloat(2.2960),doubleToFloat(3.5630),doubleToFloat(4.4460),doubleToFloat(-2.9670),doubleToFloat(1.8340),doubleToFloat(7.1900),doubleToFloat(3.4110),doubleToFloat(5.5140),doubleToFloat(7.1900),doubleToFloat(0.1172),doubleToFloat(4.9580),doubleToFloat(7.1900),doubleToFloat(-1.5830),doubleToFloat(0.0000),doubleToFloat(7.1900),doubleToFloat(3.5110),doubleToFloat(-5.5140),doubleToFloat(7.1900),doubleToFloat(0.1172),doubleToFloat(-3.5630),doubleToFloat(4.4460),doubleToFloat(-2.9670)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-3.5740),doubleToFloat(7.1900),doubleToFloat(-2.7280),doubleToFloat(-1.8340),doubleToFloat(7.1900),doubleToFloat(3.4110),doubleToFloat(-1.9450),doubleToFloat(4.4460),doubleToFloat(3.6440),doubleToFloat(-5.6180),doubleToFloat(4.4460),doubleToFloat(2.2960),doubleToFloat(1.9720),doubleToFloat(1.7210),doubleToFloat(3.7910),doubleToFloat(4.2260),doubleToFloat(1.7210),doubleToFloat(3.5580),doubleToFloat(1.6540),doubleToFloat(4.4460),doubleToFloat(-3.5150),doubleToFloat(5.6600),doubleToFloat(4.4460),doubleToFloat(0.1172),doubleToFloat(4.1680),doubleToFloat(4.4460),doubleToFloat(3.4560),doubleToFloat(5.0170),doubleToFloat(4.4460),doubleToFloat(-1.7810)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.0000),doubleToFloat(4.4460),doubleToFloat(-3.5580),doubleToFloat(-4.1680),doubleToFloat(4.4460),doubleToFloat(3.4560),doubleToFloat(-1.9720),doubleToFloat(1.7210),doubleToFloat(3.7910),doubleToFloat(-4.2260),doubleToFloat(1.7210),doubleToFloat(3.5580),doubleToFloat(-1.6540),doubleToFloat(4.4460),doubleToFloat(-3.5150),doubleToFloat(-5.0170),doubleToFloat(4.4460),doubleToFloat(-1.7810),doubleToFloat(-5.6600),doubleToFloat(4.4460),doubleToFloat(0.1172),doubleToFloat(0.0000),doubleToFloat(4.4460),doubleToFloat(3.7370),doubleToFloat(0.0000),doubleToFloat(1.7210),doubleToFloat(3.9250),doubleToFloat(1.7780),doubleToFloat(0.2744),doubleToFloat(-3.5250)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(3.6340),doubleToFloat(0.2746),doubleToFloat(-3.0070),doubleToFloat(1.9740),doubleToFloat(0.2723),doubleToFloat(3.7590),doubleToFloat(4.0990),doubleToFloat(0.2724),doubleToFloat(3.4550),doubleToFloat(1.9890),doubleToFloat(-0.3951),doubleToFloat(3.5660),doubleToFloat(3.9760),doubleToFloat(-0.3955),doubleToFloat(3.2360),doubleToFloat(5.3600),doubleToFloat(-0.3963),doubleToFloat(2.1100),doubleToFloat(5.5310),doubleToFloat(-0.3968),doubleToFloat(0.1194),doubleToFloat(5.8700),doubleToFloat(0.2723),doubleToFloat(0.1172),doubleToFloat(5.7070),doubleToFloat(0.2724),doubleToFloat(2.3060),doubleToFloat(1.7410),doubleToFloat(-0.3954),doubleToFloat(-3.2480)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(3.4610),doubleToFloat(-0.3957),doubleToFloat(-2.6470),doubleToFloat(4.7930),doubleToFloat(-0.3960),doubleToFloat(-1.6280),doubleToFloat(5.1000),doubleToFloat(0.2736),doubleToFloat(-1.9650),doubleToFloat(3.0660),doubleToFloat(-1.2190),doubleToFloat(2.4630),doubleToFloat(1.6140),doubleToFloat(-1.2190),doubleToFloat(2.6700),doubleToFloat(0.0000),doubleToFloat(-1.2140),doubleToFloat(-2.3870),doubleToFloat(1.5230),doubleToFloat(-1.2140),doubleToFloat(-2.2900),doubleToFloat(2.8780),doubleToFloat(-1.2150),doubleToFloat(-1.8250),doubleToFloat(3.7370),doubleToFloat(-1.2160),doubleToFloat(-0.9602),doubleToFloat(4.2240),doubleToFloat(-1.2170),doubleToFloat(0.1172)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(4.2290),doubleToFloat(-1.2180),doubleToFloat(1.5950),doubleToFloat(3.6700),doubleToFloat(1.7210),doubleToFloat(-3.1620),doubleToFloat(5.9140),doubleToFloat(1.7210),doubleToFloat(0.1172),doubleToFloat(5.7610),doubleToFloat(1.7210),doubleToFloat(2.4310),doubleToFloat(1.6990),doubleToFloat(1.7210),doubleToFloat(-3.7230),doubleToFloat(5.1740),doubleToFloat(1.7210),doubleToFloat(-2.0020),doubleToFloat(0.0000),doubleToFloat(0.2744),doubleToFloat(-3.5450),doubleToFloat(0.0000),doubleToFloat(1.7210),doubleToFloat(-3.7790),doubleToFloat(0.0000),doubleToFloat(0.2724),doubleToFloat(3.8900),doubleToFloat(-1.9740),doubleToFloat(0.2723),doubleToFloat(3.7590)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.0000),doubleToFloat(-0.3950),doubleToFloat(3.6820),doubleToFloat(-1.9890),doubleToFloat(-0.3951),doubleToFloat(3.5660),doubleToFloat(-5.8700),doubleToFloat(0.2723),doubleToFloat(0.1172),doubleToFloat(-5.7070),doubleToFloat(0.2724),doubleToFloat(2.3060),doubleToFloat(-5.3600),doubleToFloat(-0.3964),doubleToFloat(2.1100),doubleToFloat(-5.5310),doubleToFloat(-0.3968),doubleToFloat(0.1194),doubleToFloat(-4.0990),doubleToFloat(0.2725),doubleToFloat(3.4550),doubleToFloat(-3.9760),doubleToFloat(-0.3955),doubleToFloat(3.2360),doubleToFloat(-1.7780),doubleToFloat(0.2744),doubleToFloat(-3.5250),doubleToFloat(-3.6340),doubleToFloat(0.2746),doubleToFloat(-3.0070)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-3.4610),doubleToFloat(-0.3957),doubleToFloat(-2.6470),doubleToFloat(-1.7410),doubleToFloat(-0.3954),doubleToFloat(-3.2480),doubleToFloat(-5.1000),doubleToFloat(0.2736),doubleToFloat(-1.9650),doubleToFloat(-4.7930),doubleToFloat(-0.3960),doubleToFloat(-1.6280),doubleToFloat(0.0000),doubleToFloat(-0.3954),doubleToFloat(-3.2790),doubleToFloat(0.0000),doubleToFloat(-1.2190),doubleToFloat(2.7650),doubleToFloat(-1.6140),doubleToFloat(-1.2190),doubleToFloat(2.6700),doubleToFloat(-1.5230),doubleToFloat(-1.2140),doubleToFloat(-2.2900),doubleToFloat(-2.8780),doubleToFloat(-1.2150),doubleToFloat(-1.8250),doubleToFloat(-3.7370),doubleToFloat(-1.2160),doubleToFloat(-0.9602)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-4.2240),doubleToFloat(-1.2170),doubleToFloat(0.1172),doubleToFloat(-4.2290),doubleToFloat(-1.2180),doubleToFloat(1.5950),doubleToFloat(-3.0660),doubleToFloat(-1.2190),doubleToFloat(2.4630),doubleToFloat(0.0000),doubleToFloat(-1.8970),doubleToFloat(0.1172),doubleToFloat(-1.6990),doubleToFloat(1.7210),doubleToFloat(-3.7230),doubleToFloat(-3.6700),doubleToFloat(1.7210),doubleToFloat(-3.1620),doubleToFloat(-5.7610),doubleToFloat(1.7210),doubleToFloat(2.4310),doubleToFloat(-5.9140),doubleToFloat(1.7210),doubleToFloat(0.1172),doubleToFloat(-5.1740),doubleToFloat(1.7210),doubleToFloat(-2.0020),doubleToFloat(1.7780),doubleToFloat(19.5400),doubleToFloat(0.3077)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(1.5400),doubleToFloat(19.6400),doubleToFloat(-0.4027),doubleToFloat(0.8891),doubleToFloat(19.7400),doubleToFloat(-0.9203),doubleToFloat(0.8891),doubleToFloat(19.3700),doubleToFloat(1.4450),doubleToFloat(1.5400),doubleToFloat(19.4400),doubleToFloat(0.9501),doubleToFloat(1.2600),doubleToFloat(20.0700),doubleToFloat(0.3570),doubleToFloat(1.0910),doubleToFloat(20.1500),doubleToFloat(-0.1653),doubleToFloat(0.6300),doubleToFloat(20.1500),doubleToFloat(-0.4693),doubleToFloat(0.6300),doubleToFloat(19.9600),doubleToFloat(1.1200),doubleToFloat(1.0910),doubleToFloat(20.0000),doubleToFloat(0.8813),doubleToFloat(0.0000),doubleToFloat(19.7600),doubleToFloat(-1.1020)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.0000),doubleToFloat(19.9500),doubleToFloat(1.2460),doubleToFloat(1.9000),doubleToFloat(17.9700),doubleToFloat(0.1855),doubleToFloat(-1.7780),doubleToFloat(19.5400),doubleToFloat(0.3077),doubleToFloat(-1.5400),doubleToFloat(19.6400),doubleToFloat(-0.4027),doubleToFloat(-1.0910),doubleToFloat(20.1500),doubleToFloat(-0.1653),doubleToFloat(-1.2600),doubleToFloat(20.0700),doubleToFloat(0.3570),doubleToFloat(-0.8891),doubleToFloat(19.7400),doubleToFloat(-0.9203),doubleToFloat(-0.6300),doubleToFloat(20.1500),doubleToFloat(-0.4693),doubleToFloat(0.0000),doubleToFloat(20.1500),doubleToFloat(-0.5703),doubleToFloat(0.0000),doubleToFloat(19.3400),doubleToFloat(1.6260)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.8891),doubleToFloat(19.3700),doubleToFloat(1.4450),doubleToFloat(-0.6300),doubleToFloat(19.9600),doubleToFloat(1.1200),doubleToFloat(-1.5400),doubleToFloat(19.4400),doubleToFloat(0.9501),doubleToFloat(-1.0910),doubleToFloat(20.0000),doubleToFloat(0.8813),doubleToFloat(0.0000),doubleToFloat(20.0700),doubleToFloat(0.3568),doubleToFloat(-0.9518),doubleToFloat(18.1600),doubleToFloat(-1.1560),doubleToFloat(-1.6420),doubleToFloat(17.8700),doubleToFloat(0.9034)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=11, element #191, 1144 total numbers made up of 572 2-tuple values */
	this.TextureCoordinate_11_191_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.2943),doubleToFloat(0.6873),doubleToFloat(0.2895),doubleToFloat(0.6900),doubleToFloat(0.2878),doubleToFloat(0.7132),doubleToFloat(0.2922),doubleToFloat(0.7115),doubleToFloat(0.2766),doubleToFloat(0.6918),doubleToFloat(0.2756),doubleToFloat(0.7145),doubleToFloat(0.2590),doubleToFloat(0.6920),doubleToFloat(0.2590),doubleToFloat(0.7149),doubleToFloat(0.2590),doubleToFloat(0.6790),doubleToFloat(0.2783),doubleToFloat(0.6811)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.2763),doubleToFloat(0.7087),doubleToFloat(0.2590),doubleToFloat(0.7082),doubleToFloat(0.2895),doubleToFloat(0.6840),doubleToFloat(0.2877),doubleToFloat(0.7098),doubleToFloat(0.2843),doubleToFloat(0.6760),doubleToFloat(0.2808),doubleToFloat(0.6773),doubleToFloat(0.2808),doubleToFloat(0.6741),doubleToFloat(0.2727),doubleToFloat(0.6722),doubleToFloat(0.2590),doubleToFloat(0.6705),doubleToFloat(0.2715),doubleToFloat(0.6780)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.2590),doubleToFloat(0.6778),doubleToFloat(0.2590),doubleToFloat(0.6712),doubleToFloat(0.2237),doubleToFloat(0.6873),doubleToFloat(0.2258),doubleToFloat(0.7115),doubleToFloat(0.2302),doubleToFloat(0.7132),doubleToFloat(0.2285),doubleToFloat(0.6900),doubleToFloat(0.2424),doubleToFloat(0.7145),doubleToFloat(0.2414),doubleToFloat(0.6918),doubleToFloat(0.2417),doubleToFloat(0.7087),doubleToFloat(0.2397),doubleToFloat(0.6811)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.2303),doubleToFloat(0.7098),doubleToFloat(0.2285),doubleToFloat(0.6840),doubleToFloat(0.2372),doubleToFloat(0.6773),doubleToFloat(0.2337),doubleToFloat(0.6760),doubleToFloat(0.2372),doubleToFloat(0.6741),doubleToFloat(0.2453),doubleToFloat(0.6722),doubleToFloat(0.2465),doubleToFloat(0.6780),doubleToFloat(0.8976),doubleToFloat(0.3661),doubleToFloat(0.9270),doubleToFloat(0.3568),doubleToFloat(0.6680),doubleToFloat(0.2430)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.6543),doubleToFloat(0.2452),doubleToFloat(0.6070),doubleToFloat(0.4415),doubleToFloat(0.9318),doubleToFloat(0.3816),doubleToFloat(0.8965),doubleToFloat(0.3880),doubleToFloat(0.9517),doubleToFloat(0.3716),doubleToFloat(0.6493),doubleToFloat(0.4315),doubleToFloat(0.6286),doubleToFloat(0.4119),doubleToFloat(0.6424),doubleToFloat(0.3883),doubleToFloat(0.6713),doubleToFloat(0.3933),doubleToFloat(0.6219),doubleToFloat(0.4038)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.6305),doubleToFloat(0.3794),doubleToFloat(0.6552),doubleToFloat(0.4350),doubleToFloat(0.6867),doubleToFloat(0.4012),doubleToFloat(0.6794),doubleToFloat(0.2964),doubleToFloat(0.6493),doubleToFloat(0.3410),doubleToFloat(0.6595),doubleToFloat(0.3439),doubleToFloat(0.6904),doubleToFloat(0.3555),doubleToFloat(0.7204),doubleToFloat(0.3193),doubleToFloat(0.7036),doubleToFloat(0.3625),doubleToFloat(0.7332),doubleToFloat(0.3305)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7233),doubleToFloat(0.2218),doubleToFloat(0.7586),doubleToFloat(0.2126),doubleToFloat(0.7667),doubleToFloat(0.2513),doubleToFloat(0.7744),doubleToFloat(0.2118),doubleToFloat(0.7094),doubleToFloat(0.2909),doubleToFloat(0.6992),doubleToFloat(0.3033),doubleToFloat(0.6920),doubleToFloat(0.2346),doubleToFloat(0.7408),doubleToFloat(0.2701),doubleToFloat(0.7866),doubleToFloat(0.2195),doubleToFloat(0.7981),doubleToFloat(0.2245)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.8591),doubleToFloat(0.3268),doubleToFloat(0.8707),doubleToFloat(0.3533),doubleToFloat(0.8514),doubleToFloat(0.3687),doubleToFloat(0.8348),doubleToFloat(0.3316),doubleToFloat(0.9460),doubleToFloat(0.3095),doubleToFloat(0.7774),doubleToFloat(0.2727),doubleToFloat(0.7870),doubleToFloat(0.2812),doubleToFloat(0.7558),doubleToFloat(0.2983),doubleToFloat(0.7737),doubleToFloat(0.3142),doubleToFloat(0.7683),doubleToFloat(0.3328)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.2417),doubleToFloat(0.6020),doubleToFloat(0.2514),doubleToFloat(0.6323),doubleToFloat(0.2206),doubleToFloat(0.6337),doubleToFloat(0.2177),doubleToFloat(0.6210),doubleToFloat(0.2397),doubleToFloat(0.6614),doubleToFloat(0.2164),doubleToFloat(0.6473),doubleToFloat(0.2130),doubleToFloat(0.6739),doubleToFloat(0.1951),doubleToFloat(0.6527),doubleToFloat(0.6617),doubleToFloat(0.2886),doubleToFloat(0.6978),doubleToFloat(0.4281)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1939),doubleToFloat(0.6759),doubleToFloat(0.1931),doubleToFloat(0.5826),doubleToFloat(0.2180),doubleToFloat(0.5865),doubleToFloat(0.1948),doubleToFloat(0.6146),doubleToFloat(0.8375),doubleToFloat(0.2455),doubleToFloat(0.8014),doubleToFloat(0.2999),doubleToFloat(0.6569),doubleToFloat(0.4408),doubleToFloat(0.6897),doubleToFloat(0.5085),doubleToFloat(0.6901),doubleToFloat(0.5256),doubleToFloat(0.6813),doubleToFloat(0.5255)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.6809),doubleToFloat(0.5090),doubleToFloat(0.6199),doubleToFloat(0.5049),doubleToFloat(0.6291),doubleToFloat(0.5059),doubleToFloat(0.6248),doubleToFloat(0.4758),doubleToFloat(0.6337),doubleToFloat(0.4782),doubleToFloat(0.6282),doubleToFloat(0.4672),doubleToFloat(0.6359),doubleToFloat(0.4725),doubleToFloat(0.6323),doubleToFloat(0.4632),doubleToFloat(0.6381),doubleToFloat(0.4704),doubleToFloat(0.6432),doubleToFloat(0.4559)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.6468),doubleToFloat(0.4644),doubleToFloat(0.6573),doubleToFloat(0.4527),doubleToFloat(0.6575),doubleToFloat(0.4619),doubleToFloat(0.6711),doubleToFloat(0.4553),doubleToFloat(0.6675),doubleToFloat(0.4637),doubleToFloat(0.6812),doubleToFloat(0.4626),doubleToFloat(0.6737),doubleToFloat(0.4680),doubleToFloat(0.6875),doubleToFloat(0.4831),doubleToFloat(0.6787),doubleToFloat(0.4848),doubleToFloat(0.6551),doubleToFloat(0.5259)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7387),doubleToFloat(0.3555),doubleToFloat(0.7582),doubleToFloat(0.3610),doubleToFloat(0.7213),doubleToFloat(0.3727),doubleToFloat(0.9628),doubleToFloat(0.3095),doubleToFloat(0.9605),doubleToFloat(0.3401),doubleToFloat(0.9421),doubleToFloat(0.3341),doubleToFloat(0.7112),doubleToFloat(0.3978),doubleToFloat(0.7216),doubleToFloat(0.4125),doubleToFloat(0.7423),doubleToFloat(0.3891),doubleToFloat(0.9758),doubleToFloat(0.3094)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.9757),doubleToFloat(0.3410),doubleToFloat(0.8563),doubleToFloat(0.3083),doubleToFloat(0.6602),doubleToFloat(0.2174),doubleToFloat(0.7145),doubleToFloat(0.1924),doubleToFloat(0.7890),doubleToFloat(0.1808),doubleToFloat(0.8022),doubleToFloat(0.1855),doubleToFloat(0.7741),doubleToFloat(0.1791),doubleToFloat(0.7541),doubleToFloat(0.1812),doubleToFloat(0.6187),doubleToFloat(0.5260),doubleToFloat(0.8512),doubleToFloat(0.2023)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.6278),doubleToFloat(0.5258),doubleToFloat(0.6827),doubleToFloat(0.2059),doubleToFloat(0.6478),doubleToFloat(0.2210),doubleToFloat(0.8314),doubleToFloat(0.3097),doubleToFloat(0.8976),doubleToFloat(0.3661),doubleToFloat(0.9270),doubleToFloat(0.3568),doubleToFloat(0.9318),doubleToFloat(0.3816),doubleToFloat(0.8965),doubleToFloat(0.3880),doubleToFloat(0.9517),doubleToFloat(0.3716),doubleToFloat(0.6680),doubleToFloat(0.2430)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.6602),doubleToFloat(0.2174),doubleToFloat(0.6478),doubleToFloat(0.2210),doubleToFloat(0.6543),doubleToFloat(0.2452),doubleToFloat(0.8591),doubleToFloat(0.3268),doubleToFloat(0.8707),doubleToFloat(0.3533),doubleToFloat(0.8514),doubleToFloat(0.3687),doubleToFloat(0.8348),doubleToFloat(0.3316),doubleToFloat(0.6070),doubleToFloat(0.4415),doubleToFloat(0.6493),doubleToFloat(0.4315),doubleToFloat(0.6286),doubleToFloat(0.4119)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.6424),doubleToFloat(0.3883),doubleToFloat(0.6713),doubleToFloat(0.3933),doubleToFloat(0.6219),doubleToFloat(0.4038),doubleToFloat(0.6305),doubleToFloat(0.3794),doubleToFloat(0.6552),doubleToFloat(0.4350),doubleToFloat(0.6867),doubleToFloat(0.4012),doubleToFloat(0.6794),doubleToFloat(0.2964),doubleToFloat(0.6493),doubleToFloat(0.3410),doubleToFloat(0.6595),doubleToFloat(0.3439),doubleToFloat(0.6904),doubleToFloat(0.3555)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7204),doubleToFloat(0.3193),doubleToFloat(0.7036),doubleToFloat(0.3625),doubleToFloat(0.7332),doubleToFloat(0.3305),doubleToFloat(0.7667),doubleToFloat(0.2513),doubleToFloat(0.7744),doubleToFloat(0.2118),doubleToFloat(0.7586),doubleToFloat(0.2126),doubleToFloat(0.7094),doubleToFloat(0.2909),doubleToFloat(0.6992),doubleToFloat(0.3033),doubleToFloat(0.7233),doubleToFloat(0.2218),doubleToFloat(0.7145),doubleToFloat(0.1924)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.6827),doubleToFloat(0.2059),doubleToFloat(0.6920),doubleToFloat(0.2346),doubleToFloat(0.7408),doubleToFloat(0.2701),doubleToFloat(0.7866),doubleToFloat(0.2195),doubleToFloat(0.7774),doubleToFloat(0.2727),doubleToFloat(0.7870),doubleToFloat(0.2812),doubleToFloat(0.7981),doubleToFloat(0.2245),doubleToFloat(0.7558),doubleToFloat(0.2983),doubleToFloat(0.7737),doubleToFloat(0.3142),doubleToFloat(0.7683),doubleToFloat(0.3328)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.6617),doubleToFloat(0.2886),doubleToFloat(0.9460),doubleToFloat(0.3095),doubleToFloat(0.9628),doubleToFloat(0.3095),doubleToFloat(0.9605),doubleToFloat(0.3401),doubleToFloat(0.9421),doubleToFloat(0.3341),doubleToFloat(0.9758),doubleToFloat(0.3094),doubleToFloat(0.9757),doubleToFloat(0.3410),doubleToFloat(0.6978),doubleToFloat(0.4281),doubleToFloat(0.7890),doubleToFloat(0.1808),doubleToFloat(0.7741),doubleToFloat(0.1791)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.2417),doubleToFloat(0.6020),doubleToFloat(0.2514),doubleToFloat(0.6323),doubleToFloat(0.2206),doubleToFloat(0.6337),doubleToFloat(0.2177),doubleToFloat(0.6210),doubleToFloat(0.2397),doubleToFloat(0.6614),doubleToFloat(0.2164),doubleToFloat(0.6473),doubleToFloat(0.2130),doubleToFloat(0.6739),doubleToFloat(0.1951),doubleToFloat(0.6527),doubleToFloat(0.1939),doubleToFloat(0.6759),doubleToFloat(0.1931),doubleToFloat(0.5826)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.2180),doubleToFloat(0.5865),doubleToFloat(0.1948),doubleToFloat(0.6146),doubleToFloat(0.7541),doubleToFloat(0.1812),doubleToFloat(0.8014),doubleToFloat(0.2999),doubleToFloat(0.8375),doubleToFloat(0.2455),doubleToFloat(0.6569),doubleToFloat(0.4408),doubleToFloat(0.7387),doubleToFloat(0.3555),doubleToFloat(0.7582),doubleToFloat(0.3610),doubleToFloat(0.7213),doubleToFloat(0.3727),doubleToFloat(0.7112),doubleToFloat(0.3978)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7216),doubleToFloat(0.4125),doubleToFloat(0.7423),doubleToFloat(0.3891),doubleToFloat(0.6897),doubleToFloat(0.5085),doubleToFloat(0.6901),doubleToFloat(0.5256),doubleToFloat(0.6813),doubleToFloat(0.5255),doubleToFloat(0.6809),doubleToFloat(0.5090),doubleToFloat(0.6199),doubleToFloat(0.5049),doubleToFloat(0.6248),doubleToFloat(0.4758),doubleToFloat(0.6337),doubleToFloat(0.4782),doubleToFloat(0.6291),doubleToFloat(0.5059)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.6282),doubleToFloat(0.4672),doubleToFloat(0.6359),doubleToFloat(0.4725),doubleToFloat(0.6323),doubleToFloat(0.4632),doubleToFloat(0.6381),doubleToFloat(0.4704),doubleToFloat(0.6432),doubleToFloat(0.4559),doubleToFloat(0.6468),doubleToFloat(0.4644),doubleToFloat(0.6573),doubleToFloat(0.4527),doubleToFloat(0.6575),doubleToFloat(0.4619),doubleToFloat(0.6711),doubleToFloat(0.4553),doubleToFloat(0.6675),doubleToFloat(0.4637)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.6812),doubleToFloat(0.4626),doubleToFloat(0.6737),doubleToFloat(0.4680),doubleToFloat(0.6875),doubleToFloat(0.4831),doubleToFloat(0.6787),doubleToFloat(0.4848),doubleToFloat(0.6551),doubleToFloat(0.5259),doubleToFloat(0.8022),doubleToFloat(0.1855),doubleToFloat(0.8512),doubleToFloat(0.2023),doubleToFloat(0.6187),doubleToFloat(0.5260),doubleToFloat(0.6278),doubleToFloat(0.5258),doubleToFloat(0.8563),doubleToFloat(0.3083)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.8314),doubleToFloat(0.3097),doubleToFloat(0.8837),doubleToFloat(0.6433),doubleToFloat(0.9305),doubleToFloat(0.6444),doubleToFloat(0.9267),doubleToFloat(0.6307),doubleToFloat(0.8834),doubleToFloat(0.6307),doubleToFloat(0.9497),doubleToFloat(0.9459),doubleToFloat(0.9144),doubleToFloat(0.9447),doubleToFloat(0.9144),doubleToFloat(0.9313),doubleToFloat(0.9494),doubleToFloat(0.9313),doubleToFloat(0.9735),doubleToFloat(0.6473)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.9474),doubleToFloat(0.6307),doubleToFloat(0.9756),doubleToFloat(0.9313),doubleToFloat(0.9767),doubleToFloat(0.9402),doubleToFloat(0.8502),doubleToFloat(0.6307),doubleToFloat(0.8502),doubleToFloat(0.6428),doubleToFloat(0.9738),doubleToFloat(0.6717),doubleToFloat(0.8723),doubleToFloat(0.9313),doubleToFloat(0.8725),doubleToFloat(0.9437),doubleToFloat(0.8486),doubleToFloat(0.9428),doubleToFloat(0.8486),doubleToFloat(0.9313)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.8837),doubleToFloat(0.9723),doubleToFloat(0.8485),doubleToFloat(0.9723),doubleToFloat(0.9129),doubleToFloat(0.9723),doubleToFloat(0.9735),doubleToFloat(0.9723),doubleToFloat(0.9918),doubleToFloat(0.9484),doubleToFloat(0.9897),doubleToFloat(0.9517),doubleToFloat(0.9884),doubleToFloat(0.6512),doubleToFloat(0.9882),doubleToFloat(0.6717),doubleToFloat(0.9875),doubleToFloat(0.9723),doubleToFloat(0.9925),doubleToFloat(0.9723)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.8506),doubleToFloat(0.6717),doubleToFloat(0.8921),doubleToFloat(0.6714),doubleToFloat(0.9501),doubleToFloat(0.6714),doubleToFloat(0.8167),doubleToFloat(0.6433),doubleToFloat(0.8171),doubleToFloat(0.6307),doubleToFloat(0.7738),doubleToFloat(0.6307),doubleToFloat(0.7700),doubleToFloat(0.6444),doubleToFloat(0.7442),doubleToFloat(0.9459),doubleToFloat(0.7478),doubleToFloat(0.9313),doubleToFloat(0.7771),doubleToFloat(0.9313)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7784),doubleToFloat(0.9447),doubleToFloat(0.7531),doubleToFloat(0.6307),doubleToFloat(0.7277),doubleToFloat(0.6473),doubleToFloat(0.7203),doubleToFloat(0.9402),doubleToFloat(0.7215),doubleToFloat(0.9313),doubleToFloat(0.7273),doubleToFloat(0.6717),doubleToFloat(0.8231),doubleToFloat(0.9313),doubleToFloat(0.8228),doubleToFloat(0.9437),doubleToFloat(0.8181),doubleToFloat(0.9723),doubleToFloat(0.7752),doubleToFloat(0.9723)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7235),doubleToFloat(0.9723),doubleToFloat(0.7073),doubleToFloat(0.9517),doubleToFloat(0.7052),doubleToFloat(0.9484),doubleToFloat(0.7127),doubleToFloat(0.6512),doubleToFloat(0.7130),doubleToFloat(0.6717),doubleToFloat(0.7095),doubleToFloat(0.9723),doubleToFloat(0.7045),doubleToFloat(0.9723),doubleToFloat(0.8090),doubleToFloat(0.6714),doubleToFloat(0.7510),doubleToFloat(0.6714),doubleToFloat(0.9776),doubleToFloat(0.6307)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.9788),doubleToFloat(0.6395),doubleToFloat(0.9939),doubleToFloat(0.6478),doubleToFloat(0.9946),doubleToFloat(0.6717),doubleToFloat(0.7224),doubleToFloat(0.6395),doubleToFloat(0.7235),doubleToFloat(0.6307),doubleToFloat(0.7073),doubleToFloat(0.6478),doubleToFloat(0.7066),doubleToFloat(0.6717),doubleToFloat(0.8759),doubleToFloat(0.8947),doubleToFloat(0.8723),doubleToFloat(0.9313),doubleToFloat(0.8486),doubleToFloat(0.9313)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.8486),doubleToFloat(0.8947),doubleToFloat(0.9267),doubleToFloat(0.6307),doubleToFloat(0.9198),doubleToFloat(0.5940),doubleToFloat(0.8814),doubleToFloat(0.5940),doubleToFloat(0.8834),doubleToFloat(0.6307),doubleToFloat(0.9474),doubleToFloat(0.6307),doubleToFloat(0.9454),doubleToFloat(0.5940),doubleToFloat(0.9494),doubleToFloat(0.9313),doubleToFloat(0.9490),doubleToFloat(0.8947),doubleToFloat(0.9765),doubleToFloat(0.8947)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.9756),doubleToFloat(0.9313),doubleToFloat(0.8502),doubleToFloat(0.5940),doubleToFloat(0.8502),doubleToFloat(0.6307),doubleToFloat(0.9167),doubleToFloat(0.8947),doubleToFloat(0.9144),doubleToFloat(0.9313),doubleToFloat(0.8213),doubleToFloat(0.8947),doubleToFloat(0.8231),doubleToFloat(0.9313),doubleToFloat(0.7738),doubleToFloat(0.6307),doubleToFloat(0.8171),doubleToFloat(0.6307),doubleToFloat(0.8191),doubleToFloat(0.5940)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7807),doubleToFloat(0.5940),doubleToFloat(0.7531),doubleToFloat(0.6307),doubleToFloat(0.7550),doubleToFloat(0.5940),doubleToFloat(0.7478),doubleToFloat(0.9313),doubleToFloat(0.7215),doubleToFloat(0.9313),doubleToFloat(0.7206),doubleToFloat(0.8947),doubleToFloat(0.7482),doubleToFloat(0.8947),doubleToFloat(0.7771),doubleToFloat(0.9313),doubleToFloat(0.7805),doubleToFloat(0.8947),doubleToFloat(0.9785),doubleToFloat(0.5940)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.9776),doubleToFloat(0.6307),doubleToFloat(0.7235),doubleToFloat(0.6307),doubleToFloat(0.7226),doubleToFloat(0.5940),doubleToFloat(0.9167),doubleToFloat(0.8947),doubleToFloat(0.8759),doubleToFloat(0.8947),doubleToFloat(0.8833),doubleToFloat(0.8504),doubleToFloat(0.9257),doubleToFloat(0.8504),doubleToFloat(0.9490),doubleToFloat(0.8947),doubleToFloat(0.9525),doubleToFloat(0.8504),doubleToFloat(0.8814),doubleToFloat(0.5940)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.9198),doubleToFloat(0.5940),doubleToFloat(0.9179),doubleToFloat(0.5497),doubleToFloat(0.8814),doubleToFloat(0.5497),doubleToFloat(0.9454),doubleToFloat(0.5940),doubleToFloat(0.9441),doubleToFloat(0.5497),doubleToFloat(0.9765),doubleToFloat(0.8947),doubleToFloat(0.9780),doubleToFloat(0.8504),doubleToFloat(0.8486),doubleToFloat(0.8947),doubleToFloat(0.8486),doubleToFloat(0.8504),doubleToFloat(0.8502),doubleToFloat(0.5940)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.8502),doubleToFloat(0.5497),doubleToFloat(0.7805),doubleToFloat(0.8947),doubleToFloat(0.7715),doubleToFloat(0.8504),doubleToFloat(0.8139),doubleToFloat(0.8504),doubleToFloat(0.8213),doubleToFloat(0.8947),doubleToFloat(0.7482),doubleToFloat(0.8947),doubleToFloat(0.7447),doubleToFloat(0.8504),doubleToFloat(0.8191),doubleToFloat(0.5940),doubleToFloat(0.8190),doubleToFloat(0.5497),doubleToFloat(0.7826),doubleToFloat(0.5497)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7807),doubleToFloat(0.5940),doubleToFloat(0.7564),doubleToFloat(0.5497),doubleToFloat(0.7550),doubleToFloat(0.5940),doubleToFloat(0.7206),doubleToFloat(0.8947),doubleToFloat(0.7191),doubleToFloat(0.8504),doubleToFloat(0.9785),doubleToFloat(0.5940),doubleToFloat(0.9800),doubleToFloat(0.5497),doubleToFloat(0.7226),doubleToFloat(0.5940),doubleToFloat(0.7211),doubleToFloat(0.5497),doubleToFloat(0.9814),doubleToFloat(0.8054)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.9452),doubleToFloat(0.5047),doubleToFloat(0.9441),doubleToFloat(0.5497),doubleToFloat(0.9780),doubleToFloat(0.8504),doubleToFloat(0.9177),doubleToFloat(0.5047),doubleToFloat(0.9179),doubleToFloat(0.5497),doubleToFloat(0.8833),doubleToFloat(0.8504),doubleToFloat(0.8854),doubleToFloat(0.8054),doubleToFloat(0.9275),doubleToFloat(0.8054),doubleToFloat(0.9257),doubleToFloat(0.8504),doubleToFloat(0.9550),doubleToFloat(0.8054)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.9525),doubleToFloat(0.8504),doubleToFloat(0.8816),doubleToFloat(0.5047),doubleToFloat(0.8814),doubleToFloat(0.5497),doubleToFloat(0.8486),doubleToFloat(0.8504),doubleToFloat(0.8486),doubleToFloat(0.8054),doubleToFloat(0.8502),doubleToFloat(0.5047),doubleToFloat(0.8502),doubleToFloat(0.5497),doubleToFloat(0.7157),doubleToFloat(0.8054),doubleToFloat(0.7191),doubleToFloat(0.8504),doubleToFloat(0.7564),doubleToFloat(0.5497)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7552),doubleToFloat(0.5047),doubleToFloat(0.7826),doubleToFloat(0.5497),doubleToFloat(0.7828),doubleToFloat(0.5047),doubleToFloat(0.8139),doubleToFloat(0.8504),doubleToFloat(0.7715),doubleToFloat(0.8504),doubleToFloat(0.7697),doubleToFloat(0.8054),doubleToFloat(0.8118),doubleToFloat(0.8054),doubleToFloat(0.7447),doubleToFloat(0.8504),doubleToFloat(0.7422),doubleToFloat(0.8054),doubleToFloat(0.8190),doubleToFloat(0.5497)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.8189),doubleToFloat(0.5047),doubleToFloat(0.9834),doubleToFloat(0.5047),doubleToFloat(0.9800),doubleToFloat(0.5497),doubleToFloat(0.7177),doubleToFloat(0.5047),doubleToFloat(0.7211),doubleToFloat(0.5497),doubleToFloat(0.9275),doubleToFloat(0.8054),doubleToFloat(0.8854),doubleToFloat(0.8054),doubleToFloat(0.8859),doubleToFloat(0.7607),doubleToFloat(0.9286),doubleToFloat(0.7607),doubleToFloat(0.9550),doubleToFloat(0.8054)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.9577),doubleToFloat(0.7607),doubleToFloat(0.8816),doubleToFloat(0.5047),doubleToFloat(0.9177),doubleToFloat(0.5047),doubleToFloat(0.9197),doubleToFloat(0.4600),doubleToFloat(0.8824),doubleToFloat(0.4600),doubleToFloat(0.9452),doubleToFloat(0.5047),doubleToFloat(0.9482),doubleToFloat(0.4600),doubleToFloat(0.9814),doubleToFloat(0.8054),doubleToFloat(0.9874),doubleToFloat(0.7607),doubleToFloat(0.8486),doubleToFloat(0.8054)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.8486),doubleToFloat(0.7607),doubleToFloat(0.8502),doubleToFloat(0.4600),doubleToFloat(0.8502),doubleToFloat(0.5047),doubleToFloat(0.7697),doubleToFloat(0.8054),doubleToFloat(0.7686),doubleToFloat(0.7607),doubleToFloat(0.8113),doubleToFloat(0.7607),doubleToFloat(0.8118),doubleToFloat(0.8054),doubleToFloat(0.7422),doubleToFloat(0.8054),doubleToFloat(0.7395),doubleToFloat(0.7607),doubleToFloat(0.8189),doubleToFloat(0.5047)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.8181),doubleToFloat(0.4600),doubleToFloat(0.7808),doubleToFloat(0.4600),doubleToFloat(0.7828),doubleToFloat(0.5047),doubleToFloat(0.7523),doubleToFloat(0.4600),doubleToFloat(0.7552),doubleToFloat(0.5047),doubleToFloat(0.7157),doubleToFloat(0.8054),doubleToFloat(0.7097),doubleToFloat(0.7607),doubleToFloat(0.9834),doubleToFloat(0.5047),doubleToFloat(0.9894),doubleToFloat(0.4600),doubleToFloat(0.7177),doubleToFloat(0.5047)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7117),doubleToFloat(0.4600),doubleToFloat(0.8859),doubleToFloat(0.7607),doubleToFloat(0.8486),doubleToFloat(0.7607),doubleToFloat(0.8486),doubleToFloat(0.7369),doubleToFloat(0.8860),doubleToFloat(0.7369),doubleToFloat(0.8486),doubleToFloat(0.7260),doubleToFloat(0.8863),doubleToFloat(0.7260),doubleToFloat(0.9863),doubleToFloat(0.7369),doubleToFloat(0.9566),doubleToFloat(0.7369),doubleToFloat(0.9501),doubleToFloat(0.7260)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.9784),doubleToFloat(0.7260),doubleToFloat(0.9262),doubleToFloat(0.7369),doubleToFloat(0.9239),doubleToFloat(0.7260),doubleToFloat(0.8839),doubleToFloat(0.4363),doubleToFloat(0.9190),doubleToFloat(0.4363),doubleToFloat(0.9158),doubleToFloat(0.4253),doubleToFloat(0.8832),doubleToFloat(0.4253),doubleToFloat(0.9468),doubleToFloat(0.4363),doubleToFloat(0.9410),doubleToFloat(0.4253),doubleToFloat(0.8502),doubleToFloat(0.4363)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.8502),doubleToFloat(0.4253),doubleToFloat(0.8485),doubleToFloat(0.7125),doubleToFloat(0.8864),doubleToFloat(0.7125),doubleToFloat(0.8863),doubleToFloat(0.4119),doubleToFloat(0.8506),doubleToFloat(0.4119),doubleToFloat(0.9181),doubleToFloat(0.4119),doubleToFloat(0.9383),doubleToFloat(0.4119),doubleToFloat(0.9477),doubleToFloat(0.7125),doubleToFloat(0.9478),doubleToFloat(0.7125),doubleToFloat(0.9205),doubleToFloat(0.7125)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.8485),doubleToFloat(0.7014),doubleToFloat(0.8502),doubleToFloat(0.4600),doubleToFloat(0.8824),doubleToFloat(0.4600),doubleToFloat(0.9197),doubleToFloat(0.4600),doubleToFloat(0.9286),doubleToFloat(0.7607),doubleToFloat(0.9577),doubleToFloat(0.7607),doubleToFloat(0.9874),doubleToFloat(0.7607),doubleToFloat(0.9482),doubleToFloat(0.4600),doubleToFloat(0.8113),doubleToFloat(0.7607),doubleToFloat(0.8112),doubleToFloat(0.7369)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.8109),doubleToFloat(0.7260),doubleToFloat(0.7107),doubleToFloat(0.7369),doubleToFloat(0.7187),doubleToFloat(0.7260),doubleToFloat(0.7471),doubleToFloat(0.7260),doubleToFloat(0.7405),doubleToFloat(0.7369),doubleToFloat(0.7733),doubleToFloat(0.7260),doubleToFloat(0.7710),doubleToFloat(0.7369),doubleToFloat(0.8166),doubleToFloat(0.4363),doubleToFloat(0.8173),doubleToFloat(0.4253),doubleToFloat(0.7847),doubleToFloat(0.4253)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.7814),doubleToFloat(0.4363),doubleToFloat(0.7595),doubleToFloat(0.4253),doubleToFloat(0.7537),doubleToFloat(0.4363),doubleToFloat(0.8106),doubleToFloat(0.7125),doubleToFloat(0.8148),doubleToFloat(0.4119),doubleToFloat(0.7830),doubleToFloat(0.4119),doubleToFloat(0.7628),doubleToFloat(0.4119),doubleToFloat(0.7494),doubleToFloat(0.7125),doubleToFloat(0.7492),doubleToFloat(0.7125),doubleToFloat(0.7765),doubleToFloat(0.7125)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.8181),doubleToFloat(0.4600),doubleToFloat(0.7808),doubleToFloat(0.4600),doubleToFloat(0.7686),doubleToFloat(0.7607),doubleToFloat(0.7399),doubleToFloat(0.7607),doubleToFloat(0.7097),doubleToFloat(0.7607),doubleToFloat(0.7523),doubleToFloat(0.4600),doubleToFloat(0.9884),doubleToFloat(0.4363),doubleToFloat(0.9804),doubleToFloat(0.4253),doubleToFloat(0.9497),doubleToFloat(0.4119),doubleToFloat(0.8506),doubleToFloat(0.4007)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.9894),doubleToFloat(0.4600),doubleToFloat(0.7127),doubleToFloat(0.4363),doubleToFloat(0.7207),doubleToFloat(0.4253),doubleToFloat(0.7514),doubleToFloat(0.4119),doubleToFloat(0.7117),doubleToFloat(0.4600),doubleToFloat(0.2901),doubleToFloat(0.7364),doubleToFloat(0.2859),doubleToFloat(0.7381),doubleToFloat(0.2781),doubleToFloat(0.7445),doubleToFloat(0.2810),doubleToFloat(0.7434),doubleToFloat(0.2745),doubleToFloat(0.7396)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.2700),doubleToFloat(0.7453),doubleToFloat(0.2590),doubleToFloat(0.7400),doubleToFloat(0.2590),doubleToFloat(0.7456),doubleToFloat(0.2590),doubleToFloat(0.7333),doubleToFloat(0.2745),doubleToFloat(0.7337),doubleToFloat(0.2700),doubleToFloat(0.7448),doubleToFloat(0.2590),doubleToFloat(0.7445),doubleToFloat(0.2859),doubleToFloat(0.7349),doubleToFloat(0.2781),doubleToFloat(0.7455),doubleToFloat(0.2590),doubleToFloat(0.7454)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.2878),doubleToFloat(0.7132),doubleToFloat(0.2922),doubleToFloat(0.7115),doubleToFloat(0.2756),doubleToFloat(0.7145),doubleToFloat(0.2590),doubleToFloat(0.7149),doubleToFloat(0.2763),doubleToFloat(0.7087),doubleToFloat(0.2590),doubleToFloat(0.7082),doubleToFloat(0.2877),doubleToFloat(0.7098),doubleToFloat(0.2279),doubleToFloat(0.7364),doubleToFloat(0.2370),doubleToFloat(0.7434),doubleToFloat(0.2399),doubleToFloat(0.7445)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.2321),doubleToFloat(0.7381),doubleToFloat(0.2480),doubleToFloat(0.7453),doubleToFloat(0.2435),doubleToFloat(0.7396),doubleToFloat(0.2480),doubleToFloat(0.7448),doubleToFloat(0.2435),doubleToFloat(0.7337),doubleToFloat(0.2399),doubleToFloat(0.7455),doubleToFloat(0.2321),doubleToFloat(0.7349),doubleToFloat(0.2302),doubleToFloat(0.7132),doubleToFloat(0.2258),doubleToFloat(0.7115),doubleToFloat(0.2424),doubleToFloat(0.7145)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.2417),doubleToFloat(0.7087),doubleToFloat(0.2303),doubleToFloat(0.7098)], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet coordIndex field, scene-graph level=11, element #199, 2104 total numbers */
	this.IndexedFaceSet_11_199_coordIndex = new MFInt32(Java.to([41,42,17,-1,17,7,41,-1,62,65,14,-1,14,6,62,-1,5,9,15,-1,15,16,5,-1,9,22,23,-1,23,15,9,-1,21,43,44,-1,44,4,21,-1,12,161,162,-1,162,7,12,-1,6,30,64,-1,64,62,6,-1,5,11,10,-1,10,9,5,-1,17,23,22,-1,22,7,17,-1,26,24,29,-1,29,0,26,-1,25,172,173,-1,173,52,25,-1,45,137,161,-1,161,12,45,-1,2,63,66,-1,66,70,2,-1,46,44,10,-1,10,11,46,-1,162,181,41,-1,41,7,162,-1,23,17,25,-1,25,28,23,-1,14,26,27,-1,27,13,14,-1,13,27,18,-1,18,20,13,-1,67,187,38,-1,38,0,67,-1,37,27,26,-1,26,49,37,-1,3,45,43,-1,43,21,3,-1,29,50,67,-1,67,0,29,-1,16,51,24,-1,24,65,16,-1,15,28,51,-1,51,16,15,-1,15,23,28,-1,19,18,40,-1,40,39,19,-1,27,37,40,-1,40,18,27,-1,8,31,34,-1,34,6,8,-1,92,32,54,-1,92,75,33,-1,33,32,92,-1,31,54,53,-1,53,34,31,-1,35,32,33,-1,33,36,35,-1,92,8,47,-1,29,24,51,-1,51,52,29,-1,8,6,14,-1,14,13,8,-1,41,138,42,-1,42,138,68,-1,3,208,137,-1,137,45,3,-1,1,4,44,-1,44,46,1,-1,11,64,66,-1,66,46,11,-1,19,39,61,-1,61,60,19,-1,69,17,42,-1,42,68,69,-1,25,17,69,-1,69,172,25,-1,138,41,181,-1,70,36,33,-1,33,75,70,-1,43,45,12,-1,12,48,43,-1,12,7,22,-1,22,48,12,-1,9,10,48,-1,48,22,9,-1,43,48,10,-1,10,44,43,-1,38,49,26,-1,26,0,38,-1,50,29,52,-1,52,173,50,-1,28,25,52,-1,52,51,28,-1,36,70,30,-1,30,35,36,-1,30,6,34,-1,34,53,30,-1,54,32,35,-1,35,53,54,-1,53,35,30,-1,54,31,8,-1,8,92,54,-1,49,38,56,-1,56,55,49,-1,38,187,139,-1,139,56,38,-1,61,39,57,-1,57,214,61,-1,39,40,58,-1,58,57,39,-1,40,37,59,-1,59,58,40,-1,37,49,55,-1,55,59,37,-1,55,56,140,-1,56,139,140,-1,214,57,140,-1,57,58,140,-1,58,59,140,-1,59,55,140,-1,5,16,65,-1,65,62,5,-1,11,5,62,-1,62,64,11,-1,63,1,46,-1,46,66,63,-1,64,30,70,-1,70,66,64,-1,26,14,65,-1,65,24,26,-1,47,8,13,-1,13,20,47,-1,87,88,78,-1,78,70,87,-1,70,75,87,-1,98,72,91,-1,91,99,98,-1,98,99,224,-1,224,121,98,-1,122,119,105,-1,105,104,122,-1,76,91,72,-1,72,71,76,-1,136,133,88,-1,88,130,136,-1,78,132,84,-1,84,86,78,-1,93,92,116,-1,116,107,93,-1,130,79,95,-1,95,126,130,-1,101,100,95,-1,95,96,101,-1,101,96,97,-1,97,102,101,-1,121,246,103,-1,103,98,121,-1,72,81,80,-1,80,71,72,-1,131,128,90,-1,90,89,131,-1,125,100,123,-1,123,254,125,-1,123,100,101,-1,101,256,123,-1,102,257,256,-1,256,101,102,-1,70,78,86,-1,86,85,70,-1,84,77,83,-1,83,86,84,-1,86,83,82,-1,82,85,86,-1,79,130,88,-1,88,87,79,-1,73,132,133,-1,133,89,73,-1,71,80,79,-1,79,87,71,-1,72,98,103,-1,103,81,72,-1,128,129,263,-1,263,90,128,-1,102,103,246,-1,246,257,102,-1,93,94,91,-1,91,76,93,-1,74,104,105,-1,105,94,74,-1,76,75,92,-1,92,93,76,-1,224,99,105,-1,105,119,224,-1,107,74,94,-1,94,93,107,-1,99,91,94,-1,94,105,99,-1,100,125,126,-1,126,95,100,-1,96,80,81,-1,81,97,96,-1,79,80,96,-1,96,95,79,-1,97,81,103,-1,103,102,97,-1,75,76,71,-1,71,87,75,-1,263,137,106,-1,106,90,263,-1,89,90,106,-1,106,73,89,-1,74,113,114,-1,114,104,74,-1,104,114,269,-1,269,122,104,-1,107,115,113,-1,113,74,107,-1,108,117,118,-1,118,109,108,-1,110,116,117,-1,117,108,110,-1,113,108,109,-1,109,114,113,-1,114,109,141,-1,141,269,114,-1,115,110,108,-1,108,113,115,-1,117,111,112,-1,112,118,117,-1,118,112,278,-1,278,120,118,-1,116,92,111,-1,111,117,116,-1,116,110,115,-1,115,107,116,-1,127,135,134,-1,134,124,127,-1,124,134,283,-1,283,284,124,-1,124,284,129,-1,129,128,124,-1,135,136,130,-1,130,126,135,-1,127,124,128,-1,128,131,127,-1,136,131,89,-1,89,133,136,-1,132,78,88,-1,88,133,132,-1,135,126,125,-1,125,134,135,-1,134,125,254,-1,254,283,134,-1,127,131,136,-1,136,135,127,-1,132,73,84,-1,109,118,120,-1,120,141,109,-1,143,142,145,-1,145,144,143,-1,147,146,149,-1,149,148,147,-1,150,153,152,-1,152,151,150,-1,151,152,155,-1,155,154,151,-1,157,156,159,-1,159,158,157,-1,160,142,162,-1,162,161,160,-1,146,147,164,-1,164,163,146,-1,150,151,166,-1,166,165,150,-1,145,142,154,-1,154,155,145,-1,167,170,169,-1,169,168,167,-1,171,174,173,-1,173,172,171,-1,175,160,161,-1,161,137,175,-1,177,176,179,-1,179,178,177,-1,180,165,166,-1,166,159,180,-1,162,142,143,-1,143,181,162,-1,155,182,171,-1,171,145,155,-1,149,183,184,-1,184,167,149,-1,183,186,185,-1,185,184,183,-1,67,170,188,-1,188,187,67,-1,190,189,167,-1,167,184,190,-1,191,157,158,-1,158,175,191,-1,169,170,67,-1,67,50,169,-1,153,148,168,-1,168,192,153,-1,152,153,192,-1,192,182,152,-1,152,182,155,-1,193,195,194,-1,194,185,193,-1,184,185,194,-1,194,190,184,-1,196,146,198,-1,198,197,196,-1,199,201,200,-1,199,200,203,-1,203,202,199,-1,197,198,204,-1,204,201,197,-1,205,206,203,-1,203,200,205,-1,199,207,196,-1,169,174,192,-1,192,168,169,-1,196,183,149,-1,149,146,196,-1,143,144,138,-1,144,68,138,-1,191,175,137,-1,137,208,191,-1,209,180,159,-1,159,156,209,-1,165,180,179,-1,179,164,165,-1,193,60,61,-1,61,195,193,-1,69,68,144,-1,144,145,69,-1,171,172,69,-1,69,145,171,-1,138,181,143,-1,176,202,203,-1,203,206,176,-1,158,210,160,-1,160,175,158,-1,160,210,154,-1,154,142,160,-1,151,154,210,-1,210,166,151,-1,158,159,166,-1,166,210,158,-1,188,170,167,-1,167,189,188,-1,50,173,174,-1,174,169,50,-1,182,192,174,-1,174,171,182,-1,206,205,163,-1,163,176,206,-1,163,204,198,-1,198,146,163,-1,201,204,205,-1,205,200,201,-1,204,163,205,-1,201,199,196,-1,196,197,201,-1,189,212,211,-1,211,188,189,-1,188,211,139,-1,139,187,188,-1,61,214,213,-1,213,195,61,-1,195,213,215,-1,215,194,195,-1,194,215,216,-1,216,190,194,-1,190,216,212,-1,212,189,190,-1,212,140,211,-1,211,140,139,-1,214,140,213,-1,213,140,215,-1,215,140,216,-1,216,140,212,-1,150,147,148,-1,148,153,150,-1,165,164,147,-1,147,150,165,-1,178,179,180,-1,180,209,178,-1,164,179,176,-1,176,163,164,-1,167,168,148,-1,148,149,167,-1,207,186,183,-1,183,196,207,-1,217,176,219,-1,219,218,217,-1,176,217,202,-1,221,220,223,-1,223,222,221,-1,221,121,224,-1,224,220,221,-1,122,225,226,-1,226,119,122,-1,227,228,222,-1,222,223,227,-1,230,229,218,-1,218,231,230,-1,219,234,233,-1,233,232,219,-1,235,237,236,-1,236,199,235,-1,229,240,239,-1,239,238,229,-1,242,241,239,-1,239,243,242,-1,242,244,245,-1,245,241,242,-1,121,221,247,-1,247,246,121,-1,222,228,249,-1,249,248,222,-1,250,253,252,-1,252,251,250,-1,255,254,123,-1,123,243,255,-1,123,256,242,-1,242,243,123,-1,244,242,256,-1,256,257,244,-1,176,258,234,-1,234,219,176,-1,233,234,260,-1,260,259,233,-1,234,258,261,-1,261,260,234,-1,238,217,218,-1,218,229,238,-1,262,253,231,-1,231,232,262,-1,228,217,238,-1,238,249,228,-1,222,248,247,-1,247,221,222,-1,251,252,263,-1,263,129,251,-1,244,257,246,-1,246,247,244,-1,235,227,223,-1,223,264,235,-1,265,264,226,-1,226,225,265,-1,227,235,199,-1,199,202,227,-1,224,119,226,-1,226,220,224,-1,237,235,264,-1,264,265,237,-1,220,226,264,-1,264,223,220,-1,243,239,240,-1,240,255,243,-1,241,245,248,-1,248,249,241,-1,238,239,241,-1,241,249,238,-1,245,244,247,-1,247,248,245,-1,202,217,228,-1,228,227,202,-1,263,252,266,-1,266,137,263,-1,253,262,266,-1,266,252,253,-1,265,225,268,-1,268,267,265,-1,225,122,269,-1,269,268,225,-1,237,265,267,-1,267,270,237,-1,272,271,274,-1,274,273,272,-1,275,272,273,-1,273,236,275,-1,267,268,271,-1,271,272,267,-1,268,269,141,-1,141,271,268,-1,270,267,272,-1,272,275,270,-1,273,274,277,-1,277,276,273,-1,274,120,278,-1,278,277,274,-1,236,273,276,-1,276,199,236,-1,236,237,270,-1,270,275,236,-1,280,279,282,-1,282,281,280,-1,279,284,283,-1,283,282,279,-1,279,251,129,-1,129,284,279,-1,281,240,229,-1,229,230,281,-1,280,250,251,-1,251,279,280,-1,230,231,253,-1,253,250,230,-1,232,231,218,-1,218,219,232,-1,281,282,255,-1,255,240,281,-1,282,283,254,-1,254,255,282,-1,280,281,230,-1,230,250,280,-1,232,233,262,-1,271,141,120,-1,120,274,271,-1], Java.type("int[]")));

	/** Large attribute array: IndexedFaceSet texCoordIndex field, scene-graph level=11, element #199, 2104 total numbers */
	this.IndexedFaceSet_11_199_texCoordIndex = new MFInt32(Java.to([1,2,3,-1,3,0,1,-1,78,80,81,-1,81,4,78,-1,5,7,8,-1,8,6,5,-1,7,11,12,-1,12,8,7,-1,14,15,16,-1,16,13,14,-1,17,18,19,-1,19,0,17,-1,4,20,79,-1,79,78,4,-1,5,21,22,-1,22,7,5,-1,3,12,11,-1,11,0,3,-1,23,24,25,-1,25,26,23,-1,27,28,67,-1,67,66,27,-1,29,30,18,-1,18,17,29,-1,32,84,85,-1,85,31,32,-1,34,16,22,-1,22,21,34,-1,19,35,1,-1,1,0,19,-1,12,3,27,-1,27,36,12,-1,81,23,37,-1,37,82,81,-1,82,37,38,-1,38,83,82,-1,41,64,42,-1,42,26,41,-1,43,37,23,-1,23,63,43,-1,44,29,15,-1,15,14,44,-1,25,45,41,-1,41,26,25,-1,6,65,24,-1,24,80,6,-1,8,36,65,-1,65,6,8,-1,8,12,36,-1,39,38,46,-1,46,47,39,-1,37,43,46,-1,46,38,37,-1,10,48,49,-1,49,4,10,-1,50,51,69,-1,50,60,52,-1,52,51,50,-1,48,69,68,-1,68,49,48,-1,53,51,52,-1,52,54,53,-1,55,10,9,-1,25,24,65,-1,65,66,25,-1,10,4,81,-1,81,82,10,-1,1,56,2,-1,2,56,57,-1,44,58,30,-1,30,29,44,-1,33,13,16,-1,16,34,33,-1,21,79,85,-1,85,34,21,-1,39,47,61,-1,61,40,39,-1,59,3,2,-1,2,57,59,-1,27,3,59,-1,59,28,27,-1,56,1,35,-1,31,54,52,-1,52,60,31,-1,15,29,17,-1,17,62,15,-1,17,0,11,-1,11,62,17,-1,7,22,62,-1,62,11,7,-1,15,62,22,-1,22,16,15,-1,42,63,23,-1,23,26,42,-1,45,25,66,-1,66,67,45,-1,36,27,66,-1,66,65,36,-1,54,31,20,-1,20,53,54,-1,20,4,49,-1,49,68,20,-1,69,51,53,-1,53,68,69,-1,68,53,20,-1,69,48,10,-1,10,50,69,-1,63,42,71,-1,71,70,63,-1,42,64,72,-1,72,71,42,-1,61,47,74,-1,74,73,61,-1,47,46,75,-1,75,74,47,-1,46,43,76,-1,76,75,46,-1,43,63,70,-1,70,76,43,-1,70,71,77,-1,71,72,77,-1,73,74,77,-1,74,75,77,-1,75,76,77,-1,76,70,77,-1,5,6,80,-1,80,78,5,-1,21,5,78,-1,78,79,21,-1,84,33,34,-1,34,85,84,-1,79,20,31,-1,31,85,79,-1,23,81,80,-1,80,24,23,-1,9,10,82,-1,82,83,9,-1,87,88,89,-1,89,86,87,-1,86,92,87,-1,90,94,96,-1,96,95,90,-1,90,95,101,-1,101,91,90,-1,100,102,103,-1,103,99,100,-1,104,96,94,-1,94,93,104,-1,163,159,88,-1,88,112,163,-1,89,158,107,-1,107,108,89,-1,110,111,109,-1,109,97,110,-1,112,113,114,-1,114,115,112,-1,120,121,114,-1,114,119,120,-1,120,119,123,-1,123,122,120,-1,91,124,125,-1,125,90,91,-1,94,127,126,-1,126,93,94,-1,118,116,138,-1,138,105,118,-1,128,121,130,-1,130,129,128,-1,130,121,120,-1,120,132,130,-1,122,133,132,-1,132,120,122,-1,86,89,108,-1,108,134,86,-1,107,135,136,-1,136,108,107,-1,108,136,137,-1,137,134,108,-1,113,112,88,-1,88,87,113,-1,106,158,159,-1,159,105,106,-1,93,126,113,-1,113,87,93,-1,94,90,125,-1,125,127,94,-1,116,131,117,-1,117,138,116,-1,122,125,124,-1,124,133,122,-1,110,139,96,-1,96,104,110,-1,98,99,103,-1,103,139,98,-1,104,92,111,-1,111,110,104,-1,101,95,103,-1,103,102,101,-1,97,98,139,-1,139,110,97,-1,95,96,139,-1,139,103,95,-1,121,128,115,-1,115,114,121,-1,119,126,127,-1,127,123,119,-1,113,126,119,-1,119,114,113,-1,123,127,125,-1,125,122,123,-1,92,104,93,-1,93,87,92,-1,117,140,141,-1,141,138,117,-1,105,138,141,-1,141,106,105,-1,98,142,143,-1,143,99,98,-1,99,143,144,-1,144,100,99,-1,97,145,142,-1,142,98,97,-1,147,148,149,-1,149,146,147,-1,151,109,148,-1,148,147,151,-1,142,147,146,-1,146,143,142,-1,143,146,164,-1,164,144,143,-1,145,151,147,-1,147,142,145,-1,148,152,153,-1,153,149,148,-1,149,153,154,-1,154,150,149,-1,109,111,152,-1,152,148,109,-1,109,151,145,-1,145,97,109,-1,156,161,160,-1,160,155,156,-1,155,160,162,-1,162,157,155,-1,155,157,131,-1,131,116,155,-1,161,163,112,-1,112,115,161,-1,156,155,116,-1,116,118,156,-1,163,118,105,-1,105,159,163,-1,158,89,88,-1,88,159,158,-1,161,115,128,-1,128,160,161,-1,160,128,129,-1,129,162,160,-1,156,118,163,-1,163,161,156,-1,158,106,107,-1,146,149,150,-1,150,164,146,-1,166,165,168,-1,168,167,166,-1,170,169,172,-1,172,171,170,-1,173,176,175,-1,175,174,173,-1,174,175,178,-1,178,177,174,-1,180,179,182,-1,182,181,180,-1,183,165,185,-1,185,184,183,-1,169,170,187,-1,187,186,169,-1,173,174,189,-1,189,188,173,-1,168,165,177,-1,177,178,168,-1,190,193,192,-1,192,191,190,-1,194,197,196,-1,196,195,194,-1,198,183,184,-1,184,199,198,-1,201,200,203,-1,203,202,201,-1,204,188,189,-1,189,182,204,-1,185,165,166,-1,166,205,185,-1,178,206,194,-1,194,168,178,-1,172,207,208,-1,208,190,172,-1,207,210,209,-1,209,208,207,-1,211,193,213,-1,213,212,211,-1,215,214,190,-1,190,208,215,-1,216,180,181,-1,181,198,216,-1,192,193,211,-1,211,217,192,-1,176,171,191,-1,191,218,176,-1,175,176,218,-1,218,206,175,-1,175,206,178,-1,219,221,220,-1,220,209,219,-1,208,209,220,-1,220,215,208,-1,222,169,224,-1,224,223,222,-1,225,227,226,-1,225,226,229,-1,229,228,225,-1,223,224,230,-1,230,227,223,-1,231,232,229,-1,229,226,231,-1,233,234,222,-1,192,197,218,-1,218,191,192,-1,222,207,172,-1,172,169,222,-1,166,167,235,-1,167,236,235,-1,216,198,199,-1,199,237,216,-1,238,204,182,-1,182,179,238,-1,188,204,203,-1,203,187,188,-1,219,240,239,-1,239,221,219,-1,241,236,167,-1,167,168,241,-1,194,195,241,-1,241,168,194,-1,235,205,166,-1,200,228,229,-1,229,232,200,-1,181,242,183,-1,183,198,181,-1,183,242,177,-1,177,165,183,-1,174,177,242,-1,242,189,174,-1,181,182,189,-1,189,242,181,-1,213,193,190,-1,190,214,213,-1,217,196,197,-1,197,192,217,-1,206,218,197,-1,197,194,206,-1,232,231,186,-1,186,200,232,-1,186,230,224,-1,224,169,186,-1,227,230,231,-1,231,226,227,-1,230,186,231,-1,227,225,222,-1,222,223,227,-1,214,244,243,-1,243,213,214,-1,213,243,245,-1,245,212,213,-1,239,247,246,-1,246,221,239,-1,221,246,248,-1,248,220,221,-1,220,248,249,-1,249,215,220,-1,215,249,244,-1,244,214,215,-1,244,250,243,-1,243,250,245,-1,247,250,246,-1,246,250,248,-1,248,250,249,-1,249,250,244,-1,173,170,171,-1,171,176,173,-1,188,187,170,-1,170,173,188,-1,202,203,204,-1,204,238,202,-1,187,203,200,-1,200,186,187,-1,190,191,171,-1,171,172,190,-1,234,210,207,-1,207,222,234,-1,252,251,254,-1,254,253,252,-1,251,252,255,-1,257,256,259,-1,259,258,257,-1,257,260,261,-1,261,256,257,-1,263,262,265,-1,265,264,263,-1,266,267,258,-1,258,259,266,-1,269,268,253,-1,253,270,269,-1,254,273,272,-1,272,271,254,-1,274,277,276,-1,276,275,274,-1,268,280,279,-1,279,278,268,-1,282,281,279,-1,279,283,282,-1,282,284,285,-1,285,281,282,-1,260,257,287,-1,287,286,260,-1,258,267,289,-1,289,288,258,-1,290,293,292,-1,292,291,290,-1,295,294,296,-1,296,283,295,-1,296,297,282,-1,282,283,296,-1,284,282,297,-1,297,298,284,-1,251,299,273,-1,273,254,251,-1,272,273,301,-1,301,300,272,-1,273,299,302,-1,302,301,273,-1,278,252,253,-1,253,268,278,-1,303,293,270,-1,270,271,303,-1,267,252,278,-1,278,289,267,-1,258,288,287,-1,287,257,258,-1,291,292,305,-1,305,304,291,-1,284,298,286,-1,286,287,284,-1,274,266,259,-1,259,306,274,-1,307,306,265,-1,265,262,307,-1,266,274,275,-1,275,255,266,-1,261,264,265,-1,265,256,261,-1,277,274,306,-1,306,307,277,-1,256,265,306,-1,306,259,256,-1,283,279,280,-1,280,295,283,-1,281,285,288,-1,288,289,281,-1,278,279,281,-1,281,289,278,-1,285,284,287,-1,287,288,285,-1,255,252,267,-1,267,266,255,-1,305,292,309,-1,309,308,305,-1,293,303,309,-1,309,292,293,-1,307,262,311,-1,311,310,307,-1,262,263,312,-1,312,311,262,-1,277,307,310,-1,310,313,277,-1,315,314,317,-1,317,316,315,-1,318,315,316,-1,316,276,318,-1,310,311,314,-1,314,315,310,-1,311,312,319,-1,319,314,311,-1,313,310,315,-1,315,318,313,-1,316,317,321,-1,321,320,316,-1,317,323,322,-1,322,321,317,-1,276,316,320,-1,320,275,276,-1,276,277,313,-1,313,318,276,-1,325,324,327,-1,327,326,325,-1,324,329,328,-1,328,327,324,-1,324,291,304,-1,304,329,324,-1,326,280,268,-1,268,269,326,-1,325,290,291,-1,291,324,325,-1,269,270,293,-1,293,290,269,-1,271,270,253,-1,253,254,271,-1,326,327,295,-1,295,280,326,-1,327,328,294,-1,294,295,327,-1,325,326,269,-1,269,290,325,-1,271,272,303,-1,314,319,323,-1,323,317,314,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=12, element #199, 855 total numbers made up of 285 3-tuple values */
	this.Coordinate_12_199_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([doubleToFloat(1.0100),doubleToFloat(0.2606),doubleToFloat(1.6860),doubleToFloat(4.3200),doubleToFloat(6.2650),doubleToFloat(2.7520),doubleToFloat(4.8610),doubleToFloat(5.9370),doubleToFloat(-0.2956),doubleToFloat(0.8391),doubleToFloat(6.8220),doubleToFloat(4.8630),doubleToFloat(3.5640),doubleToFloat(6.5150),doubleToFloat(3.7990),doubleToFloat(3.8630),doubleToFloat(2.9200),doubleToFloat(2.5150),doubleToFloat(4.1070),doubleToFloat(2.8590),doubleToFloat(0.1893),doubleToFloat(0.8265),doubleToFloat(3.0620),doubleToFloat(4.7300),doubleToFloat(4.1110),doubleToFloat(2.8930),doubleToFloat(-0.1586),doubleToFloat(3.2560),doubleToFloat(2.9260),doubleToFloat(3.5820)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(3.4460),doubleToFloat(4.1880),doubleToFloat(3.6210),doubleToFloat(4.0960),doubleToFloat(4.1380),doubleToFloat(2.5790),doubleToFloat(0.8125),doubleToFloat(4.2220),doubleToFloat(4.6020),doubleToFloat(3.2800),doubleToFloat(1.3640),doubleToFloat(-0.2629),doubleToFloat(3.2910),doubleToFloat(1.3570),doubleToFloat(0.5764),doubleToFloat(2.9010),doubleToFloat(1.8020),doubleToFloat(3.7130),doubleToFloat(3.2190),doubleToFloat(1.5810),doubleToFloat(2.7120),doubleToFloat(0.7970),doubleToFloat(2.1070),doubleToFloat(4.7520),doubleToFloat(2.3100),doubleToFloat(0.8337),doubleToFloat(-1.6750),doubleToFloat(1.3920),doubleToFloat(0.9176),doubleToFloat(-2.6170)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(3.2920),doubleToFloat(1.6450),doubleToFloat(-1.3780),doubleToFloat(2.2880),doubleToFloat(6.7320),doubleToFloat(4.5010),doubleToFloat(2.1870),doubleToFloat(2.9750),doubleToFloat(4.4390),doubleToFloat(2.1220),doubleToFloat(2.0050),doubleToFloat(4.4030),doubleToFloat(2.3440),doubleToFloat(0.6905),doubleToFloat(2.1490),doubleToFloat(0.8489),doubleToFloat(0.9212),doubleToFloat(4.3590),doubleToFloat(2.4150),doubleToFloat(0.6353),doubleToFloat(1.1120),doubleToFloat(2.4720),doubleToFloat(0.7634),doubleToFloat(-0.0987),doubleToFloat(2.0020),doubleToFloat(1.2550),doubleToFloat(4.1440),doubleToFloat(1.0220),doubleToFloat(0.2694),doubleToFloat(2.5540)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(4.6390),doubleToFloat(4.0280),doubleToFloat(0.0209),doubleToFloat(4.5780),doubleToFloat(3.0880),doubleToFloat(-0.5623),doubleToFloat(5.1730),doubleToFloat(4.3520),doubleToFloat(-1.2010),doubleToFloat(5.1150),doubleToFloat(5.0870),doubleToFloat(-0.8764),doubleToFloat(4.6950),doubleToFloat(3.0860),doubleToFloat(-0.4211),doubleToFloat(5.3060),doubleToFloat(4.3600),doubleToFloat(-1.0450),doubleToFloat(5.2130),doubleToFloat(5.1030),doubleToFloat(-0.6857),doubleToFloat(1.8940),doubleToFloat(0.4791),doubleToFloat(-0.0621),doubleToFloat(0.9860),doubleToFloat(0.1174),doubleToFloat(1.3000),doubleToFloat(1.0030),doubleToFloat(0.4362),doubleToFloat(-1.5430)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(1.6460),doubleToFloat(0.4648),doubleToFloat(-0.8986),doubleToFloat(0.5655),doubleToFloat(2.7500),doubleToFloat(5.1030),doubleToFloat(0.5458),doubleToFloat(2.3690),doubleToFloat(5.1680),doubleToFloat(2.2660),doubleToFloat(5.5020),doubleToFloat(4.4020),doubleToFloat(3.4830),doubleToFloat(5.4020),doubleToFloat(3.7310),doubleToFloat(0.8159),doubleToFloat(5.5210),doubleToFloat(4.8120),doubleToFloat(4.2690),doubleToFloat(5.2470),doubleToFloat(2.6550),doubleToFloat(4.1780),doubleToFloat(2.9630),doubleToFloat(-1.2150),doubleToFloat(2.2930),doubleToFloat(4.2220),doubleToFloat(4.3310),doubleToFloat(1.7640),doubleToFloat(0.3298),doubleToFloat(0.7501)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.0000),doubleToFloat(0.1588),doubleToFloat(2.6580),doubleToFloat(2.2040),doubleToFloat(0.8597),doubleToFloat(3.2850),doubleToFloat(0.9370),doubleToFloat(0.4803),doubleToFloat(3.7470),doubleToFloat(5.1050),doubleToFloat(3.5480),doubleToFloat(-0.7329),doubleToFloat(4.9800),doubleToFloat(3.5440),doubleToFloat(-0.8815),doubleToFloat(1.4080),doubleToFloat(-0.1113),doubleToFloat(0.2968),doubleToFloat(0.8508),doubleToFloat(-0.2869),doubleToFloat(0.6094),doubleToFloat(0.8071),doubleToFloat(-0.0807),doubleToFloat(-0.8579),doubleToFloat(1.2540),doubleToFloat(-0.0317),doubleToFloat(-0.4868),doubleToFloat(1.5190),doubleToFloat(-0.0345),doubleToFloat(-0.0256)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.0000),doubleToFloat(0.9352),doubleToFloat(-2.8010),doubleToFloat(0.0000),doubleToFloat(0.4310),doubleToFloat(-1.6940),doubleToFloat(4.0460),doubleToFloat(2.8910),doubleToFloat(1.4120),doubleToFloat(4.8370),doubleToFloat(5.9600),doubleToFloat(-0.1402),doubleToFloat(4.4390),doubleToFloat(4.0890),doubleToFloat(1.3390),doubleToFloat(3.2970),doubleToFloat(1.4560),doubleToFloat(1.6820),doubleToFloat(4.7890),doubleToFloat(5.1720),doubleToFloat(0.2839),doubleToFloat(0.0000),doubleToFloat(0.1186),doubleToFloat(1.8130),doubleToFloat(0.0000),doubleToFloat(2.2440),doubleToFloat(5.2470),doubleToFloat(0.0000),doubleToFloat(2.0290),doubleToFloat(4.9210)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(4.8360),doubleToFloat(5.1620),doubleToFloat(0.0226),doubleToFloat(4.5980),doubleToFloat(6.0480),doubleToFloat(-2.0860),doubleToFloat(3.4810),doubleToFloat(6.0260),doubleToFloat(-3.9680),doubleToFloat(3.4540),doubleToFloat(5.3460),doubleToFloat(3.9790),doubleToFloat(2.9970),doubleToFloat(2.2690),doubleToFloat(-3.3640),doubleToFloat(4.8780),doubleToFloat(5.1370),doubleToFloat(-0.5536),doubleToFloat(4.5510),doubleToFloat(5.1130),doubleToFloat(-2.0600),doubleToFloat(3.9500),doubleToFloat(2.7490),doubleToFloat(2.0400),doubleToFloat(4.8050),doubleToFloat(5.1620),doubleToFloat(1.1840),doubleToFloat(4.8360),doubleToFloat(7.7690),doubleToFloat(-0.3588)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(4.4830),doubleToFloat(7.7710),doubleToFloat(-2.0890),doubleToFloat(3.3670),doubleToFloat(7.7140),doubleToFloat(-3.7830),doubleToFloat(4.1920),doubleToFloat(2.7770),doubleToFloat(0.3081),doubleToFloat(4.1390),doubleToFloat(2.5800),doubleToFloat(1.2960),doubleToFloat(4.1750),doubleToFloat(4.1120),doubleToFloat(2.6090),doubleToFloat(4.6320),doubleToFloat(4.0300),doubleToFloat(0.1254),doubleToFloat(4.6410),doubleToFloat(4.0170),doubleToFloat(1.2070),doubleToFloat(5.0070),doubleToFloat(6.1140),doubleToFloat(-0.3905),doubleToFloat(4.9100),doubleToFloat(6.1030),doubleToFloat(1.1730),doubleToFloat(3.4220),doubleToFloat(6.1100),doubleToFloat(4.2420)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(1.5270),doubleToFloat(6.1160),doubleToFloat(4.9900),doubleToFloat(3.4230),doubleToFloat(5.0050),doubleToFloat(-3.9760),doubleToFloat(4.7840),doubleToFloat(4.2020),doubleToFloat(-1.2370),doubleToFloat(4.4140),doubleToFloat(3.9840),doubleToFloat(-2.0560),doubleToFloat(3.2630),doubleToFloat(3.7330),doubleToFloat(-3.8200),doubleToFloat(3.6910),doubleToFloat(9.9150),doubleToFloat(-0.3475),doubleToFloat(3.5100),doubleToFloat(9.5170),doubleToFloat(-2.2140),doubleToFloat(3.0080),doubleToFloat(8.9570),doubleToFloat(-3.2650),doubleToFloat(1.7420),doubleToFloat(5.9480),doubleToFloat(-4.7390),doubleToFloat(1.6670),doubleToFloat(4.8650),doubleToFloat(-4.7590)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(1.7840),doubleToFloat(10.9800),doubleToFloat(-0.3520),doubleToFloat(1.6420),doubleToFloat(10.4900),doubleToFloat(-2.3540),doubleToFloat(1.5520),doubleToFloat(9.3940),doubleToFloat(-3.8630),doubleToFloat(1.7160),doubleToFloat(7.6270),doubleToFloat(-4.5470),doubleToFloat(1.4310),doubleToFloat(2.1430),doubleToFloat(-4.1170),doubleToFloat(1.5610),doubleToFloat(3.6500),doubleToFloat(-4.5820),doubleToFloat(1.5130),doubleToFloat(5.5780),doubleToFloat(4.7920),doubleToFloat(3.9350),doubleToFloat(2.5090),doubleToFloat(-2.0510),doubleToFloat(2.4640),doubleToFloat(0.5524),doubleToFloat(-1.5920),doubleToFloat(1.2360),doubleToFloat(0.2977),doubleToFloat(-2.0620)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(3.2060),doubleToFloat(1.0100),doubleToFloat(-1.2090),doubleToFloat(3.1110),doubleToFloat(3.6080),doubleToFloat(-1.4350),doubleToFloat(1.8480),doubleToFloat(3.4740),doubleToFloat(-1.7250),doubleToFloat(2.5400),doubleToFloat(0.6815),doubleToFloat(-2.5150),doubleToFloat(1.2520),doubleToFloat(0.4058),doubleToFloat(-3.1220),doubleToFloat(3.1890),doubleToFloat(1.0460),doubleToFloat(-1.9540),doubleToFloat(4.1480),doubleToFloat(2.7010),doubleToFloat(-1.2480),doubleToFloat(2.8170),doubleToFloat(2.1080),doubleToFloat(-1.5140),doubleToFloat(1.5620),doubleToFloat(1.9160),doubleToFloat(-1.8660),doubleToFloat(0.0000),doubleToFloat(3.5820),doubleToFloat(-4.7990)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.0000),doubleToFloat(1.8720),doubleToFloat(-2.2640),doubleToFloat(0.0000),doubleToFloat(5.8890),doubleToFloat(-4.9930),doubleToFloat(0.0000),doubleToFloat(2.1310),doubleToFloat(-4.3300),doubleToFloat(0.0000),doubleToFloat(11.2100),doubleToFloat(-0.3565),doubleToFloat(1.5520),doubleToFloat(9.3190),doubleToFloat(4.2440),doubleToFloat(1.7310),doubleToFloat(10.9200),doubleToFloat(1.3580),doubleToFloat(3.6300),doubleToFloat(9.8130),doubleToFloat(1.3040),doubleToFloat(3.0080),doubleToFloat(8.9570),doubleToFloat(3.9040),doubleToFloat(1.5670),doubleToFloat(7.6940),doubleToFloat(4.9140),doubleToFloat(0.0000),doubleToFloat(7.6900),doubleToFloat(5.1230)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(4.7300),doubleToFloat(7.7790),doubleToFloat(1.2140),doubleToFloat(3.3270),doubleToFloat(7.6380),doubleToFloat(4.2790),doubleToFloat(4.3770),doubleToFloat(5.2550),doubleToFloat(2.6640),doubleToFloat(4.4370),doubleToFloat(6.1080),doubleToFloat(2.7350),doubleToFloat(1.6420),doubleToFloat(10.3600),doubleToFloat(2.9930),doubleToFloat(3.3820),doubleToFloat(9.4800),doubleToFloat(2.9190),doubleToFloat(4.2820),doubleToFloat(7.7250),doubleToFloat(2.8620),doubleToFloat(0.0000),doubleToFloat(5.5480),doubleToFloat(4.9380),doubleToFloat(0.0000),doubleToFloat(2.4950),doubleToFloat(5.3270),doubleToFloat(0.0000),doubleToFloat(-0.4119),doubleToFloat(0.7020)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(0.0000),doubleToFloat(-0.3444),doubleToFloat(-0.0886),doubleToFloat(0.0000),doubleToFloat(0.2852),doubleToFloat(-2.2590),doubleToFloat(-0.8265),doubleToFloat(3.0620),doubleToFloat(4.7300),doubleToFloat(-0.5655),doubleToFloat(2.7500),doubleToFloat(5.1030),doubleToFloat(-0.5458),doubleToFloat(2.3690),doubleToFloat(5.1680),doubleToFloat(-0.7970),doubleToFloat(2.1070),doubleToFloat(4.7520),doubleToFloat(-4.1070),doubleToFloat(2.8590),doubleToFloat(0.1893),doubleToFloat(-4.0460),doubleToFloat(2.8910),doubleToFloat(1.4120),doubleToFloat(-3.2970),doubleToFloat(1.4560),doubleToFloat(1.6820),doubleToFloat(-3.2910),doubleToFloat(1.3570),doubleToFloat(0.5764)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-3.8630),doubleToFloat(2.9200),doubleToFloat(2.5150),doubleToFloat(-3.2560),doubleToFloat(2.9260),doubleToFloat(3.5820),doubleToFloat(-2.9010),doubleToFloat(1.8020),doubleToFloat(3.7130),doubleToFloat(-3.2190),doubleToFloat(1.5810),doubleToFloat(2.7120),doubleToFloat(-2.1870),doubleToFloat(2.9750),doubleToFloat(4.4390),doubleToFloat(-2.1220),doubleToFloat(2.0050),doubleToFloat(4.4030),doubleToFloat(-3.5640),doubleToFloat(6.5150),doubleToFloat(3.7990),doubleToFloat(-2.2880),doubleToFloat(6.7320),doubleToFloat(4.5010),doubleToFloat(-2.2660),doubleToFloat(5.5020),doubleToFloat(4.4020),doubleToFloat(-3.4830),doubleToFloat(5.4020),doubleToFloat(3.7310)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-0.8125),doubleToFloat(4.2220),doubleToFloat(4.6020),doubleToFloat(0.0000),doubleToFloat(4.2220),doubleToFloat(4.7270),doubleToFloat(0.0000),doubleToFloat(3.3180),doubleToFloat(4.9290),doubleToFloat(-4.6390),doubleToFloat(4.0280),doubleToFloat(0.0209),doubleToFloat(-4.4390),doubleToFloat(4.0890),doubleToFloat(1.3390),doubleToFloat(-4.0960),doubleToFloat(4.1380),doubleToFloat(2.5790),doubleToFloat(-3.4460),doubleToFloat(4.1880),doubleToFloat(3.6210),doubleToFloat(-2.4150),doubleToFloat(0.6353),doubleToFloat(1.1120),doubleToFloat(-2.3440),doubleToFloat(0.6905),doubleToFloat(2.1490),doubleToFloat(-1.0220),doubleToFloat(0.2694),doubleToFloat(2.5540)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.0100),doubleToFloat(0.2606),doubleToFloat(1.6860),doubleToFloat(-0.8489),doubleToFloat(0.9212),doubleToFloat(4.3590),doubleToFloat(0.0000),doubleToFloat(0.8615),doubleToFloat(4.4730),doubleToFloat(0.0000),doubleToFloat(0.3620),doubleToFloat(3.8960),doubleToFloat(-0.9370),doubleToFloat(0.4803),doubleToFloat(3.7470),doubleToFloat(-0.8158),doubleToFloat(5.5210),doubleToFloat(4.8120),doubleToFloat(-4.8360),doubleToFloat(5.1620),doubleToFloat(0.0226),doubleToFloat(-4.8610),doubleToFloat(5.9370),doubleToFloat(-0.2957),doubleToFloat(-4.8370),doubleToFloat(5.9600),doubleToFloat(-0.1402),doubleToFloat(-4.7890),doubleToFloat(5.1720),doubleToFloat(0.2839)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-4.2690),doubleToFloat(5.2470),doubleToFloat(2.6550),doubleToFloat(0.0000),doubleToFloat(2.9180),doubleToFloat(5.1730),doubleToFloat(-2.0020),doubleToFloat(1.2550),doubleToFloat(4.1440),doubleToFloat(-3.2800),doubleToFloat(1.3640),doubleToFloat(-0.2629),doubleToFloat(-2.4720),doubleToFloat(0.7634),doubleToFloat(-0.0987),doubleToFloat(-2.3100),doubleToFloat(0.8337),doubleToFloat(-1.6750),doubleToFloat(-3.2920),doubleToFloat(1.6450),doubleToFloat(-1.3780),doubleToFloat(0.0000),doubleToFloat(-0.0148),doubleToFloat(1.4390),doubleToFloat(-0.9860),doubleToFloat(0.1174),doubleToFloat(1.3000),doubleToFloat(-1.7640),doubleToFloat(0.3298),doubleToFloat(0.7501)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.8940),doubleToFloat(0.4791),doubleToFloat(-0.0621),doubleToFloat(-0.8391),doubleToFloat(6.8220),doubleToFloat(4.8630),doubleToFloat(-2.2040),doubleToFloat(0.8597),doubleToFloat(3.2850),doubleToFloat(-1.3920),doubleToFloat(0.9176),doubleToFloat(-2.6170),doubleToFloat(-1.6460),doubleToFloat(0.4648),doubleToFloat(-0.8986),doubleToFloat(-1.0030),doubleToFloat(0.4362),doubleToFloat(-1.5430),doubleToFloat(-4.1110),doubleToFloat(2.8930),doubleToFloat(-0.1586),doubleToFloat(-4.5780),doubleToFloat(3.0880),doubleToFloat(-0.5623),doubleToFloat(-4.6950),doubleToFloat(3.0860),doubleToFloat(-0.4210),doubleToFloat(-4.7840),doubleToFloat(4.2020),doubleToFloat(-1.2370)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-5.1730),doubleToFloat(4.3520),doubleToFloat(-1.2010),doubleToFloat(-4.9800),doubleToFloat(3.5440),doubleToFloat(-0.8815),doubleToFloat(-4.8780),doubleToFloat(5.1370),doubleToFloat(-0.5536),doubleToFloat(-5.1150),doubleToFloat(5.0870),doubleToFloat(-0.8764),doubleToFloat(-5.1050),doubleToFloat(3.5480),doubleToFloat(-0.7329),doubleToFloat(-5.3060),doubleToFloat(4.3600),doubleToFloat(-1.0450),doubleToFloat(-5.2130),doubleToFloat(5.1030),doubleToFloat(-0.6857),doubleToFloat(-4.1780),doubleToFloat(2.9630),doubleToFloat(-1.2150),doubleToFloat(0.0000),doubleToFloat(6.8350),doubleToFloat(4.9720),doubleToFloat(-4.3200),doubleToFloat(6.2650),doubleToFloat(2.7520)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-2.2930),doubleToFloat(4.2220),doubleToFloat(4.3310),doubleToFloat(-0.8508),doubleToFloat(-0.2869),doubleToFloat(0.6094),doubleToFloat(-1.4080),doubleToFloat(-0.1113),doubleToFloat(0.2968),doubleToFloat(-0.8071),doubleToFloat(-0.0807),doubleToFloat(-0.8579),doubleToFloat(0.0000),doubleToFloat(-0.0937),doubleToFloat(-0.9581),doubleToFloat(-1.2540),doubleToFloat(-0.0317),doubleToFloat(-0.4868),doubleToFloat(-1.5190),doubleToFloat(-0.0345),doubleToFloat(-0.0256),doubleToFloat(-5.0070),doubleToFloat(6.1140),doubleToFloat(-0.3905),doubleToFloat(-4.9100),doubleToFloat(6.1030),doubleToFloat(1.1730),doubleToFloat(-4.8050),doubleToFloat(5.1620),doubleToFloat(1.1840)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-1.6670),doubleToFloat(4.8650),doubleToFloat(-4.7590),doubleToFloat(-1.7420),doubleToFloat(5.9480),doubleToFloat(-4.7390),doubleToFloat(-3.4810),doubleToFloat(6.0260),doubleToFloat(-3.9680),doubleToFloat(-3.4230),doubleToFloat(5.0050),doubleToFloat(-3.9760),doubleToFloat(0.0000),doubleToFloat(4.7710),doubleToFloat(-4.9670),doubleToFloat(-1.4310),doubleToFloat(2.1430),doubleToFloat(-4.1170),doubleToFloat(-1.5610),doubleToFloat(3.6500),doubleToFloat(-4.5820),doubleToFloat(-4.5510),doubleToFloat(5.1130),doubleToFloat(-2.0600),doubleToFloat(-4.5980),doubleToFloat(6.0480),doubleToFloat(-2.0860),doubleToFloat(-4.7300),doubleToFloat(7.7790),doubleToFloat(1.2140)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-4.2820),doubleToFloat(7.7250),doubleToFloat(2.8620),doubleToFloat(-4.4370),doubleToFloat(6.1080),doubleToFloat(2.7350),doubleToFloat(-4.3770),doubleToFloat(5.2550),doubleToFloat(2.6640),doubleToFloat(-4.1750),doubleToFloat(4.1120),doubleToFloat(2.6090),doubleToFloat(-4.6410),doubleToFloat(4.0170),doubleToFloat(1.2070),doubleToFloat(-4.4140),doubleToFloat(3.9840),doubleToFloat(-2.0560),doubleToFloat(-4.1480),doubleToFloat(2.7010),doubleToFloat(-1.2480),doubleToFloat(-3.9350),doubleToFloat(2.5090),doubleToFloat(-2.0510),doubleToFloat(-4.8360),doubleToFloat(7.7690),doubleToFloat(-0.3588),doubleToFloat(-3.6910),doubleToFloat(9.9150),doubleToFloat(-0.3474)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-3.6300),doubleToFloat(9.8130),doubleToFloat(1.3040),doubleToFloat(-3.5100),doubleToFloat(9.5170),doubleToFloat(-2.2140),doubleToFloat(-1.6420),doubleToFloat(10.4900),doubleToFloat(-2.3540),doubleToFloat(-1.7840),doubleToFloat(10.9800),doubleToFloat(-0.3520),doubleToFloat(-1.5520),doubleToFloat(9.3940),doubleToFloat(-3.8630),doubleToFloat(-3.0080),doubleToFloat(8.9570),doubleToFloat(-3.2650),doubleToFloat(0.0000),doubleToFloat(7.5820),doubleToFloat(-4.8110),doubleToFloat(-1.7160),doubleToFloat(7.6270),doubleToFloat(-4.5470),doubleToFloat(-3.3670),doubleToFloat(7.7140),doubleToFloat(-3.7830),doubleToFloat(-4.4830),doubleToFloat(7.7710),doubleToFloat(-2.0890)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-3.3270),doubleToFloat(7.6380),doubleToFloat(4.2790),doubleToFloat(-1.5670),doubleToFloat(7.6940),doubleToFloat(4.9140),doubleToFloat(-1.5270),doubleToFloat(6.1160),doubleToFloat(4.9900),doubleToFloat(-3.4220),doubleToFloat(6.1100),doubleToFloat(4.2420),doubleToFloat(0.0000),doubleToFloat(11.1100),doubleToFloat(1.4000),doubleToFloat(-1.7310),doubleToFloat(10.9200),doubleToFloat(1.3580),doubleToFloat(0.0000),doubleToFloat(10.7100),doubleToFloat(-2.3580),doubleToFloat(0.0000),doubleToFloat(9.5450),doubleToFloat(-4.0070),doubleToFloat(-4.6320),doubleToFloat(4.0300),doubleToFloat(0.1254),doubleToFloat(-3.9500),doubleToFloat(2.7490),doubleToFloat(2.0400)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-4.1390),doubleToFloat(2.5800),doubleToFloat(1.2960),doubleToFloat(-4.1920),doubleToFloat(2.7770),doubleToFloat(0.3081),doubleToFloat(-3.4540),doubleToFloat(5.3460),doubleToFloat(3.9790),doubleToFloat(0.0000),doubleToFloat(6.1280),doubleToFloat(5.1790),doubleToFloat(-3.2630),doubleToFloat(3.7330),doubleToFloat(-3.8200),doubleToFloat(-2.9970),doubleToFloat(2.2690),doubleToFloat(-3.3640),doubleToFloat(-1.5130),doubleToFloat(5.5780),doubleToFloat(4.7920),doubleToFloat(-2.5400),doubleToFloat(0.6815),doubleToFloat(-2.5150),doubleToFloat(-1.2520),doubleToFloat(0.4058),doubleToFloat(-3.1220),doubleToFloat(0.0000),doubleToFloat(0.3427),doubleToFloat(-3.3240)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-3.1890),doubleToFloat(1.0460),doubleToFloat(-1.9540),doubleToFloat(-1.2360),doubleToFloat(0.2977),doubleToFloat(-2.0620),doubleToFloat(-2.4640),doubleToFloat(0.5524),doubleToFloat(-1.5920),doubleToFloat(-2.8170),doubleToFloat(2.1080),doubleToFloat(-1.5140),doubleToFloat(-1.5620),doubleToFloat(1.9160),doubleToFloat(-1.8660),doubleToFloat(-3.2060),doubleToFloat(1.0100),doubleToFloat(-1.2090),doubleToFloat(-3.1110),doubleToFloat(3.6080),doubleToFloat(-1.4350),doubleToFloat(-1.8480),doubleToFloat(3.4740),doubleToFloat(-1.7250),doubleToFloat(0.0000),doubleToFloat(3.3950),doubleToFloat(-2.2640),doubleToFloat(-1.5520),doubleToFloat(9.3190),doubleToFloat(4.2440)], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([doubleToFloat(-3.0080),doubleToFloat(8.9570),doubleToFloat(3.9040),doubleToFloat(-3.3820),doubleToFloat(9.4800),doubleToFloat(2.9190),doubleToFloat(-1.6420),doubleToFloat(10.3600),doubleToFloat(2.9930),doubleToFloat(0.0000),doubleToFloat(10.5300),doubleToFloat(3.0500),doubleToFloat(0.0000),doubleToFloat(9.4790),doubleToFloat(4.3880)], Java.type("float[]"))));

	/** Large attribute array: TextureCoordinate point field, scene-graph level=12, element #200, 660 total numbers made up of 330 2-tuple values */
	this.TextureCoordinate_12_200_point = new MFVec2f() /* splitting up long array to improve readability */
	.append(new MFVec2f(Java.to([doubleToFloat(0.0372),doubleToFloat(0.4684),doubleToFloat(0.0249),doubleToFloat(0.4542),doubleToFloat(0.0241),doubleToFloat(0.4415),doubleToFloat(0.0388),doubleToFloat(0.4335),doubleToFloat(0.2247),doubleToFloat(0.4452),doubleToFloat(0.1629),doubleToFloat(0.4745),doubleToFloat(0.1434),doubleToFloat(0.4351),doubleToFloat(0.1252),doubleToFloat(0.4757),doubleToFloat(0.1141),doubleToFloat(0.4438),doubleToFloat(0.2647),doubleToFloat(0.4342)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.2347),doubleToFloat(0.4419),doubleToFloat(0.0815),doubleToFloat(0.4733),doubleToFloat(0.0808),doubleToFloat(0.4432),doubleToFloat(0.1466),doubleToFloat(0.5909),doubleToFloat(0.0935),doubleToFloat(0.6006),doubleToFloat(0.0907),doubleToFloat(0.5593),doubleToFloat(0.1389),doubleToFloat(0.5550),doubleToFloat(0.0390),doubleToFloat(0.5132),doubleToFloat(0.0122),doubleToFloat(0.5126),doubleToFloat(0.0095),doubleToFloat(0.4772)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.2430),doubleToFloat(0.4804),doubleToFloat(0.1735),doubleToFloat(0.5118),doubleToFloat(0.1336),doubleToFloat(0.5167),doubleToFloat(0.1688),doubleToFloat(0.3756),doubleToFloat(0.1393),doubleToFloat(0.3869),doubleToFloat(0.1065),doubleToFloat(0.3532),doubleToFloat(0.1322),doubleToFloat(0.3388),doubleToFloat(0.0536),doubleToFloat(0.3978),doubleToFloat(0.0302),doubleToFloat(0.3850),doubleToFloat(0.0399),doubleToFloat(0.5582)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.0126),doubleToFloat(0.5563),doubleToFloat(0.2591),doubleToFloat(0.5120),doubleToFloat(0.2630),doubleToFloat(0.5348),doubleToFloat(0.1928),doubleToFloat(0.5723),doubleToFloat(0.1845),doubleToFloat(0.5425),doubleToFloat(0.0066),doubleToFloat(0.4603),doubleToFloat(0.0873),doubleToFloat(0.4167),doubleToFloat(0.2069),doubleToFloat(0.3662),doubleToFloat(0.2569),doubleToFloat(0.3479),doubleToFloat(0.2786),doubleToFloat(0.3131)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.2789),doubleToFloat(0.2666),doubleToFloat(0.1110),doubleToFloat(0.3112),doubleToFloat(0.1451),doubleToFloat(0.3315),doubleToFloat(0.1993),doubleToFloat(0.3476),doubleToFloat(0.0408),doubleToFloat(0.6017),doubleToFloat(0.0835),doubleToFloat(0.3282),doubleToFloat(0.2269),doubleToFloat(0.3316),doubleToFloat(0.2435),doubleToFloat(0.3053),doubleToFloat(0.2503),doubleToFloat(0.4501),doubleToFloat(0.2480),doubleToFloat(0.4526)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.2896),doubleToFloat(0.4632),doubleToFloat(0.2847),doubleToFloat(0.4724),doubleToFloat(0.2779),doubleToFloat(0.4930),doubleToFloat(0.2805),doubleToFloat(0.4753),doubleToFloat(0.2751),doubleToFloat(0.4955),doubleToFloat(0.2662),doubleToFloat(0.4451),doubleToFloat(0.0054),doubleToFloat(0.4443),doubleToFloat(0.0076),doubleToFloat(0.4342),doubleToFloat(0.0115),doubleToFloat(0.6002),doubleToFloat(0.0146),doubleToFloat(0.4211)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.2804),doubleToFloat(0.5029),doubleToFloat(0.2437),doubleToFloat(0.2708),doubleToFloat(0.0884),doubleToFloat(0.5164),doubleToFloat(0.1727),doubleToFloat(0.3498),doubleToFloat(0.1261),doubleToFloat(0.3036),doubleToFloat(0.1083),doubleToFloat(0.4016),doubleToFloat(0.0728),doubleToFloat(0.3763),doubleToFloat(0.0488),doubleToFloat(0.3588),doubleToFloat(0.2634),doubleToFloat(0.4615),doubleToFloat(0.2662),doubleToFloat(0.4593)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1826),doubleToFloat(0.3288),doubleToFloat(0.1667),doubleToFloat(0.3148),doubleToFloat(0.1531),doubleToFloat(0.2901),doubleToFloat(0.2106),doubleToFloat(0.2740),doubleToFloat(0.2127),doubleToFloat(0.3004),doubleToFloat(0.2052),doubleToFloat(0.3173),doubleToFloat(0.1932),doubleToFloat(0.3293),doubleToFloat(0.1795),doubleToFloat(0.2807),doubleToFloat(0.1922),doubleToFloat(0.4606),doubleToFloat(0.2084),doubleToFloat(0.4958)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1719),doubleToFloat(0.4221),doubleToFloat(0.2003),doubleToFloat(0.4106),doubleToFloat(0.2236),doubleToFloat(0.4017),doubleToFloat(0.2546),doubleToFloat(0.3886),doubleToFloat(0.2307),doubleToFloat(0.5524),doubleToFloat(0.2218),doubleToFloat(0.5270),doubleToFloat(0.3845),doubleToFloat(0.7969),doubleToFloat(0.4084),doubleToFloat(0.8030),doubleToFloat(0.3864),doubleToFloat(0.8314),doubleToFloat(0.3694),doubleToFloat(0.8215)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5223),doubleToFloat(0.7377),doubleToFloat(0.5577),doubleToFloat(0.7215),doubleToFloat(0.3982),doubleToFloat(0.7818),doubleToFloat(0.4405),doubleToFloat(0.7791),doubleToFloat(0.4842),doubleToFloat(0.7563),doubleToFloat(0.5123),doubleToFloat(0.7151),doubleToFloat(0.4760),doubleToFloat(0.7392),doubleToFloat(0.4206),doubleToFloat(0.7099),doubleToFloat(0.4498),doubleToFloat(0.6909),doubleToFloat(0.4759),doubleToFloat(0.6634)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4958),doubleToFloat(0.6390),doubleToFloat(0.5433),doubleToFloat(0.6943),doubleToFloat(0.5245),doubleToFloat(0.6680),doubleToFloat(0.4983),doubleToFloat(0.6912),doubleToFloat(0.4305),doubleToFloat(0.7633),doubleToFloat(0.3521),doubleToFloat(0.9011),doubleToFloat(0.3376),doubleToFloat(0.8898),doubleToFloat(0.3308),doubleToFloat(0.8418),doubleToFloat(0.3467),doubleToFloat(0.8112),doubleToFloat(0.4059),doubleToFloat(0.7165)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4224),doubleToFloat(0.7420),doubleToFloat(0.4007),doubleToFloat(0.7518),doubleToFloat(0.4151),doubleToFloat(0.8536),doubleToFloat(0.4345),doubleToFloat(0.8295),doubleToFloat(0.4738),doubleToFloat(0.8653),doubleToFloat(0.4521),doubleToFloat(0.8881),doubleToFloat(0.3783),doubleToFloat(0.9535),doubleToFloat(0.3384),doubleToFloat(0.9802),doubleToFloat(0.3822),doubleToFloat(0.9143),doubleToFloat(0.4952),doubleToFloat(0.8347)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5351),doubleToFloat(0.8559),doubleToFloat(0.5104),doubleToFloat(0.8948),doubleToFloat(0.5452),doubleToFloat(0.8153),doubleToFloat(0.5101),doubleToFloat(0.8139),doubleToFloat(0.5724),doubleToFloat(0.7633),doubleToFloat(0.5359),doubleToFloat(0.7734),doubleToFloat(0.4624),doubleToFloat(0.8077),doubleToFloat(0.4995),doubleToFloat(0.7871),doubleToFloat(0.4848),doubleToFloat(0.9229),doubleToFloat(0.5083),doubleToFloat(0.9525)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5417),doubleToFloat(0.9181),doubleToFloat(0.3752),doubleToFloat(0.9878),doubleToFloat(0.5679),doubleToFloat(0.8700),doubleToFloat(0.5788),doubleToFloat(0.8177),doubleToFloat(0.3578),doubleToFloat(0.7892),doubleToFloat(0.3097),doubleToFloat(0.8154),doubleToFloat(0.3154),doubleToFloat(0.7987),doubleToFloat(0.3290),doubleToFloat(0.7806),doubleToFloat(0.3435),doubleToFloat(0.9461),doubleToFloat(0.4651),doubleToFloat(0.7171)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.3254),doubleToFloat(0.9764),doubleToFloat(0.3313),doubleToFloat(0.9417),doubleToFloat(0.4282),doubleToFloat(0.6600),doubleToFloat(0.4402),doubleToFloat(0.6350),doubleToFloat(0.4485),doubleToFloat(0.6108),doubleToFloat(0.4191),doubleToFloat(0.6751),doubleToFloat(0.4150),doubleToFloat(0.6357),doubleToFloat(0.4106),doubleToFloat(0.6599),doubleToFloat(0.3936),doubleToFloat(0.6872),doubleToFloat(0.3852),doubleToFloat(0.6587)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.3746),doubleToFloat(0.6244),doubleToFloat(0.4077),doubleToFloat(0.6759),doubleToFloat(0.3738),doubleToFloat(0.7126),doubleToFloat(0.3584),doubleToFloat(0.6814),doubleToFloat(0.3424),doubleToFloat(0.6395),doubleToFloat(0.4179),doubleToFloat(0.9552),doubleToFloat(0.4106),doubleToFloat(0.9233),doubleToFloat(0.4238),doubleToFloat(0.9886),doubleToFloat(0.3527),doubleToFloat(0.8541),doubleToFloat(0.3678),doubleToFloat(0.8633)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4526),doubleToFloat(0.9442),doubleToFloat(0.4287),doubleToFloat(0.9099),doubleToFloat(0.4676),doubleToFloat(0.9767),doubleToFloat(0.3964),doubleToFloat(0.8826),doubleToFloat(0.4143),doubleToFloat(0.6105),doubleToFloat(0.0372),doubleToFloat(0.4684),doubleToFloat(0.0249),doubleToFloat(0.4542),doubleToFloat(0.0241),doubleToFloat(0.4415),doubleToFloat(0.0388),doubleToFloat(0.4335),doubleToFloat(0.2247),doubleToFloat(0.4452)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1922),doubleToFloat(0.4606),doubleToFloat(0.1719),doubleToFloat(0.4221),doubleToFloat(0.2003),doubleToFloat(0.4106),doubleToFloat(0.1629),doubleToFloat(0.4745),doubleToFloat(0.1252),doubleToFloat(0.4757),doubleToFloat(0.1141),doubleToFloat(0.4438),doubleToFloat(0.1434),doubleToFloat(0.4351),doubleToFloat(0.0815),doubleToFloat(0.4733),doubleToFloat(0.0808),doubleToFloat(0.4432),doubleToFloat(0.1466),doubleToFloat(0.5909)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.0935),doubleToFloat(0.6006),doubleToFloat(0.0907),doubleToFloat(0.5593),doubleToFloat(0.1389),doubleToFloat(0.5550),doubleToFloat(0.0390),doubleToFloat(0.5132),doubleToFloat(0.0122),doubleToFloat(0.5126),doubleToFloat(0.0095),doubleToFloat(0.4772),doubleToFloat(0.2430),doubleToFloat(0.4804),doubleToFloat(0.2084),doubleToFloat(0.4958),doubleToFloat(0.1735),doubleToFloat(0.5118),doubleToFloat(0.1336),doubleToFloat(0.5167)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1688),doubleToFloat(0.3756),doubleToFloat(0.1393),doubleToFloat(0.3869),doubleToFloat(0.1065),doubleToFloat(0.3532),doubleToFloat(0.1322),doubleToFloat(0.3388),doubleToFloat(0.0536),doubleToFloat(0.3978),doubleToFloat(0.0302),doubleToFloat(0.3850),doubleToFloat(0.0488),doubleToFloat(0.3588),doubleToFloat(0.0728),doubleToFloat(0.3763),doubleToFloat(0.0399),doubleToFloat(0.5582),doubleToFloat(0.0126),doubleToFloat(0.5563)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.2591),doubleToFloat(0.5120),doubleToFloat(0.2630),doubleToFloat(0.5348),doubleToFloat(0.2307),doubleToFloat(0.5524),doubleToFloat(0.2218),doubleToFloat(0.5270),doubleToFloat(0.1845),doubleToFloat(0.5425),doubleToFloat(0.0066),doubleToFloat(0.4603),doubleToFloat(0.0873),doubleToFloat(0.4167),doubleToFloat(0.2236),doubleToFloat(0.4017),doubleToFloat(0.2069),doubleToFloat(0.3662),doubleToFloat(0.2569),doubleToFloat(0.3479)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.2546),doubleToFloat(0.3886),doubleToFloat(0.1110),doubleToFloat(0.3112),doubleToFloat(0.1261),doubleToFloat(0.3036),doubleToFloat(0.1451),doubleToFloat(0.3315),doubleToFloat(0.1727),doubleToFloat(0.3498),doubleToFloat(0.1993),doubleToFloat(0.3476),doubleToFloat(0.0408),doubleToFloat(0.6017),doubleToFloat(0.0835),doubleToFloat(0.3282),doubleToFloat(0.1083),doubleToFloat(0.4016),doubleToFloat(0.2786),doubleToFloat(0.3131)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.2269),doubleToFloat(0.3316),doubleToFloat(0.2435),doubleToFloat(0.3053),doubleToFloat(0.2347),doubleToFloat(0.4419),doubleToFloat(0.2503),doubleToFloat(0.4501),doubleToFloat(0.2480),doubleToFloat(0.4526),doubleToFloat(0.2896),doubleToFloat(0.4632),doubleToFloat(0.2847),doubleToFloat(0.4724),doubleToFloat(0.2662),doubleToFloat(0.4593),doubleToFloat(0.2804),doubleToFloat(0.5029),doubleToFloat(0.2779),doubleToFloat(0.4930)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.2634),doubleToFloat(0.4615),doubleToFloat(0.2805),doubleToFloat(0.4753),doubleToFloat(0.2751),doubleToFloat(0.4955),doubleToFloat(0.2662),doubleToFloat(0.4451),doubleToFloat(0.2647),doubleToFloat(0.4342),doubleToFloat(0.0054),doubleToFloat(0.4443),doubleToFloat(0.0076),doubleToFloat(0.4342),doubleToFloat(0.0115),doubleToFloat(0.6002),doubleToFloat(0.1928),doubleToFloat(0.5723),doubleToFloat(0.2437),doubleToFloat(0.2708)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.2789),doubleToFloat(0.2666),doubleToFloat(0.0146),doubleToFloat(0.4211),doubleToFloat(0.0884),doubleToFloat(0.5164),doubleToFloat(0.1667),doubleToFloat(0.3148),doubleToFloat(0.1826),doubleToFloat(0.3288),doubleToFloat(0.1531),doubleToFloat(0.2901),doubleToFloat(0.2127),doubleToFloat(0.3004),doubleToFloat(0.2106),doubleToFloat(0.2740),doubleToFloat(0.2052),doubleToFloat(0.3173),doubleToFloat(0.1932),doubleToFloat(0.3293)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.1795),doubleToFloat(0.2807),doubleToFloat(0.3845),doubleToFloat(0.7969),doubleToFloat(0.4084),doubleToFloat(0.8030),doubleToFloat(0.3864),doubleToFloat(0.8314),doubleToFloat(0.3694),doubleToFloat(0.8215),doubleToFloat(0.3982),doubleToFloat(0.7818),doubleToFloat(0.5123),doubleToFloat(0.7151),doubleToFloat(0.5223),doubleToFloat(0.7377),doubleToFloat(0.4842),doubleToFloat(0.7563),doubleToFloat(0.4760),doubleToFloat(0.7392)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.5577),doubleToFloat(0.7215),doubleToFloat(0.5433),doubleToFloat(0.6943),doubleToFloat(0.4759),doubleToFloat(0.6634),doubleToFloat(0.4958),doubleToFloat(0.6390),doubleToFloat(0.5245),doubleToFloat(0.6680),doubleToFloat(0.4983),doubleToFloat(0.6912),doubleToFloat(0.4305),doubleToFloat(0.7633),doubleToFloat(0.4405),doubleToFloat(0.7791),doubleToFloat(0.4151),doubleToFloat(0.8536),doubleToFloat(0.3964),doubleToFloat(0.8826)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.3678),doubleToFloat(0.8633),doubleToFloat(0.3527),doubleToFloat(0.8541),doubleToFloat(0.3308),doubleToFloat(0.8418),doubleToFloat(0.3467),doubleToFloat(0.8112),doubleToFloat(0.4224),doubleToFloat(0.7420),doubleToFloat(0.4007),doubleToFloat(0.7518),doubleToFloat(0.4059),doubleToFloat(0.7165),doubleToFloat(0.4206),doubleToFloat(0.7099),doubleToFloat(0.4345),doubleToFloat(0.8295),doubleToFloat(0.4738),doubleToFloat(0.8653)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4521),doubleToFloat(0.8881),doubleToFloat(0.4952),doubleToFloat(0.8347),doubleToFloat(0.5351),doubleToFloat(0.8559),doubleToFloat(0.5104),doubleToFloat(0.8948),doubleToFloat(0.5452),doubleToFloat(0.8153),doubleToFloat(0.5101),doubleToFloat(0.8139),doubleToFloat(0.5724),doubleToFloat(0.7633),doubleToFloat(0.5359),doubleToFloat(0.7734),doubleToFloat(0.4995),doubleToFloat(0.7871),doubleToFloat(0.4624),doubleToFloat(0.8077)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.3822),doubleToFloat(0.9143),doubleToFloat(0.3783),doubleToFloat(0.9535),doubleToFloat(0.3435),doubleToFloat(0.9461),doubleToFloat(0.3521),doubleToFloat(0.9011),doubleToFloat(0.5083),doubleToFloat(0.9525),doubleToFloat(0.4848),doubleToFloat(0.9229),doubleToFloat(0.5417),doubleToFloat(0.9181),doubleToFloat(0.5679),doubleToFloat(0.8700),doubleToFloat(0.5788),doubleToFloat(0.8177),doubleToFloat(0.3578),doubleToFloat(0.7892)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.3097),doubleToFloat(0.8154),doubleToFloat(0.3154),doubleToFloat(0.7987),doubleToFloat(0.3290),doubleToFloat(0.7806),doubleToFloat(0.3376),doubleToFloat(0.8898),doubleToFloat(0.3752),doubleToFloat(0.9878),doubleToFloat(0.3384),doubleToFloat(0.9802),doubleToFloat(0.4651),doubleToFloat(0.7171),doubleToFloat(0.4498),doubleToFloat(0.6909),doubleToFloat(0.3254),doubleToFloat(0.9764),doubleToFloat(0.3313),doubleToFloat(0.9417)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.4282),doubleToFloat(0.6600),doubleToFloat(0.4402),doubleToFloat(0.6350),doubleToFloat(0.4485),doubleToFloat(0.6108),doubleToFloat(0.4191),doubleToFloat(0.6751),doubleToFloat(0.4150),doubleToFloat(0.6357),doubleToFloat(0.4106),doubleToFloat(0.6599),doubleToFloat(0.3936),doubleToFloat(0.6872),doubleToFloat(0.3852),doubleToFloat(0.6587),doubleToFloat(0.4077),doubleToFloat(0.6759),doubleToFloat(0.4143),doubleToFloat(0.6105)], Java.type("float[]"))))
	.append(new MFVec2f(Java.to([doubleToFloat(0.3738),doubleToFloat(0.7126),doubleToFloat(0.3584),doubleToFloat(0.6814),doubleToFloat(0.3424),doubleToFloat(0.6395),doubleToFloat(0.3746),doubleToFloat(0.6244),doubleToFloat(0.4179),doubleToFloat(0.9552),doubleToFloat(0.4106),doubleToFloat(0.9233),doubleToFloat(0.4287),doubleToFloat(0.9099),doubleToFloat(0.4526),doubleToFloat(0.9442),doubleToFloat(0.4676),doubleToFloat(0.9767),doubleToFloat(0.4238),doubleToFloat(0.9886)], Java.type("float[]"))));
  this.x3dModel = new X3D().setProfile("Immersive").setVersion("4.0")
  .setHead(new head()
    .addComponent(new component().setName("HAnim").setLevel(1))
    .addMeta(new meta().setName("title").setContent("KoreanCharacter11Min.x3d"))
    .addMeta(new meta().setName("creator").setContent("Jin Hoon Lee and Min Joo Lee"))
    .addMeta(new meta().setName("translator").setContent("Chul Hee Jung and Myeong Won Lee"))
    .addMeta(new meta().setName("created").setContent("31 March 2011"))
    .addMeta(new meta().setName("translated").setContent("1 November 2014"))
    .addMeta(new meta().setName("modified").setContent("23 December 2021"))
    .addMeta(new meta().setName("description").setContent("Articulated 3D game character designed with a general graphics tool, then converted into an X3D HAnim model."))
    .addMeta(new meta().setName("reference").setContent("KoreanCharacter00ReadMe.txt"))
    .addMeta(new meta().setName("reference").setContent("KoreanCharacterHumanMotion_Infotech2014_140706.pdf"))
    .addMeta(new meta().setName("reference").setContent("KoreanCharactersIllustrated.pdf"))
    .addMeta(new meta().setName("identifier").setContent("https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Characters/KoreanCharacter11Min.x3d"))
    .addMeta(new meta().setName("generator").setContent("3DS MAX, http://www.autodesk.com/products/autodesk-3ds-max/overview"))
    .addMeta(new meta().setName("generator").setContent("Suwon University HAnim Editor"))
    .addMeta(new meta().setName("generator").setContent("Gnu Image Manipulation Program, http://www.gimp.org"))
    .addMeta(new meta().setName("generator").setContent("X3D-Edit 3.3, https://savage.nps.edu/X3D-Edit"))
    .addMeta(new meta().setName("license").setContent("../license.html")))
  .setScene(new Scene()
    .addChild(new WorldInfo().setTitle("KoreanCharacter11Min.x3d"))
    .addChild(new NavigationInfo().setSpeed(1.5))
    .addChild(new Viewpoint().setDescription("Min").setCenterOfRotation(doubleToFloat(0.0),doubleToFloat(1.0),doubleToFloat(0.0)).setPosition(doubleToFloat(0.0),doubleToFloat(1.0),doubleToFloat(3.0)))
    .addChild(new HAnimHumanoid("hanim_Min").setName("Min").setScale(doubleToFloat(0.0225),doubleToFloat(0.0225),doubleToFloat(0.0225)).setVersion("2.0")
      .addComments(" original HAnimHumanoid info='\"authorName=Chul Hee Jung and Myeong Won Lee\" \"authorEmail=myeongwonlee@gmail.com\" \"creationDate=31 March 2011\" \"humanoidVersion=2.0\" \"gender=male\" \"height=1.5\"' ")
      .setMetadata(new MetadataSet().setName("HAnimHumanoid.info").setReference(this.MetadataSet_HAnimHumanoid.info_4_22_reference)
        .addValue(new MetadataString().setName("authorName").setValue(new MFString("\"Chul Hee Jung and Myeong Won Lee\"")))
        .addValue(new MetadataString().setName("authorEmail").setValue(new MFString("\"myeongwonlee@gmail.com\"")))
        .addValue(new MetadataString().setName("creationDate").setValue(new MFString("\"31 March 2011\"")))
        .addValue(new MetadataString().setName("gender").setValue(new MFString("\"male\"")))
        .addValue(new MetadataFloat().setName("height").setValue(Java.to([doubleToFloat(1.5)], Java.type("float[]"))))
        .addValue(new MetadataString().setName("humanoidVersion").setValue(new MFString("\"2.0\""))))
      .addSkeleton(new HAnimJoint("hanim_humanoid_root").setName("humanoid_root").setCenter(doubleToFloat(0.0),doubleToFloat(33.689999),doubleToFloat(-2.063000))
        .addChild(new HAnimSegment("hanim_sacrum").setName("sacrum")
          .addChild(new Transform().setTranslation(doubleToFloat(0.0),doubleToFloat(33.689999),doubleToFloat(-2.063000))
            .addChild(new Shape()
              .setAppearance(new Appearance()
                .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588000),doubleToFloat(0.588000),doubleToFloat(0.588000)))
                .setTexture(new ImageTexture("MinTextureAtlas").setUrl(new MFString("\"images/Min.png\" \"https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Characters/images/Min.png\""))))
              .setGeometry(new IndexedFaceSet().setCreaseAngle(1.57).setCoordIndex(this.IndexedFaceSet_8_32_coordIndex).setTexCoordIndex(this.IndexedFaceSet_8_32_texCoordIndex)
                .setCoord(new Coordinate().setPoint(this.Coordinate_9_32_point))
                .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_9_33_point))))))
        .addChild(new HAnimJoint("hanim_l_hip").setName("l_hip").setCenter(doubleToFloat(3.383000),doubleToFloat(32.919998),doubleToFloat(-2.063000))
          .addChild(new HAnimSegment("hanim_l_thigh").setName("l_thigh")
            .addChild(new Transform().setTranslation(doubleToFloat(3.383000),doubleToFloat(32.919998),doubleToFloat(-2.063000))
              .addChild(new Shape()
                .setAppearance(new Appearance()
                  .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588000),doubleToFloat(0.588000),doubleToFloat(0.588000)))
                  .setTexture(new ImageTexture().setUSE("MinTextureAtlas")))
                .setGeometry(new IndexedFaceSet().setCreaseAngle(1.57).setCoordIndex(this.IndexedFaceSet_9_41_coordIndex).setTexCoordIndex(this.IndexedFaceSet_9_41_texCoordIndex)
                  .setCoord(new Coordinate().setPoint(this.Coordinate_10_41_point))
                  .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_10_42_point))))))
          .addChild(new HAnimJoint("hanim_l_knee").setName("l_knee").setCenter(doubleToFloat(3.745000),doubleToFloat(17.990000),doubleToFloat(-2.063000))
            .addChild(new HAnimSegment("hanim_l_calf").setName("l_calf")
              .addChild(new Transform().setTranslation(doubleToFloat(3.745000),doubleToFloat(17.990000),doubleToFloat(-2.063000))
                .addChild(new Shape()
                  .setAppearance(new Appearance()
                    .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588000),doubleToFloat(0.588000),doubleToFloat(0.588000)))
                    .setTexture(new ImageTexture().setUSE("MinTextureAtlas")))
                  .setGeometry(new IndexedFaceSet().setCreaseAngle(1.57).setCoordIndex(this.IndexedFaceSet_10_50_coordIndex).setTexCoordIndex(this.IndexedFaceSet_10_50_texCoordIndex)
                    .setCoord(new Coordinate().setPoint(this.Coordinate_11_50_point))
                    .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_11_51_point))))))
            .addChild(new HAnimJoint("hanim_l_talocrural").setName("l_talocrural").setCenter(doubleToFloat(3.701000),doubleToFloat(4.188000),doubleToFloat(-1.915000))
              .addChild(new HAnimSegment("hanim_l_talus").setName("l_talus")
                .addChild(new Transform().setTranslation(doubleToFloat(3.701000),doubleToFloat(4.188000),doubleToFloat(-1.915000))
                  .addChild(new Shape()
                    .setAppearance(new Appearance()
                      .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588000),doubleToFloat(0.588000),doubleToFloat(0.588000)))
                      .setTexture(new ImageTexture().setUSE("MinTextureAtlas")))
                    .setGeometry(new IndexedFaceSet().setCreaseAngle(1.57).setCoordIndex(this.IndexedFaceSet_11_59_coordIndex).setTexCoordIndex(this.IndexedFaceSet_11_59_texCoordIndex)
                      .setCoord(new Coordinate().setPoint(this.Coordinate_12_59_point))
                      .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_12_60_point))))))
              .addChild(new HAnimJoint("hanim_l_metatarsophalangeal_2").setName("l_metatarsophalangeal_2").setCenter(doubleToFloat(3.701000),doubleToFloat(3.418000),doubleToFloat(-0.400900))
                .addChild(new HAnimSegment("hanim_l_tarsal_proximal_phalanx_2").setName("l_tarsal_proximal_phalanx_2")
                  .addChild(new Transform().setTranslation(doubleToFloat(3.701000),doubleToFloat(3.418000),doubleToFloat(-0.400900))
                    .addChild(new Shape()
                      .setAppearance(new Appearance()
                        .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588000),doubleToFloat(0.588000),doubleToFloat(0.588000)))
                        .setTexture(new ImageTexture().setUSE("MinTextureAtlas")))
                      .setGeometry(new IndexedFaceSet().setCreaseAngle(1.57).setCoordIndex(this.IndexedFaceSet_12_68_coordIndex).setTexCoordIndex(this.IndexedFaceSet_12_68_texCoordIndex)
                        .setCoord(new Coordinate().setPoint(this.Coordinate_13_68_point))
                        .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_13_69_point))))))))))
        .addChild(new HAnimJoint("hanim_r_hip").setName("r_hip").setCenter(doubleToFloat(-3.383000),doubleToFloat(32.919998),doubleToFloat(-2.063000))
          .addChild(new HAnimSegment("hanim_r_thigh").setName("r_thigh")
            .addChild(new Transform().setTranslation(doubleToFloat(-3.383000),doubleToFloat(32.919998),doubleToFloat(-2.063000))
              .addChild(new Shape()
                .setAppearance(new Appearance()
                  .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588000),doubleToFloat(0.588000),doubleToFloat(0.588000)))
                  .setTexture(new ImageTexture().setUSE("MinTextureAtlas")))
                .setGeometry(new IndexedFaceSet().setCreaseAngle(1.57).setCoordIndex(this.IndexedFaceSet_9_81_coordIndex).setTexCoordIndex(this.IndexedFaceSet_9_81_texCoordIndex)
                  .setCoord(new Coordinate().setPoint(this.Coordinate_10_81_point))
                  .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_10_82_point))))))
          .addChild(new HAnimJoint("hanim_r_knee").setName("r_knee").setCenter(doubleToFloat(-3.745000),doubleToFloat(17.990000),doubleToFloat(-2.063000))
            .addChild(new HAnimSegment("hanim_r_calf").setName("r_calf")
              .addChild(new Transform().setTranslation(doubleToFloat(-3.745000),doubleToFloat(17.990000),doubleToFloat(-2.063000))
                .addChild(new Shape()
                  .setAppearance(new Appearance()
                    .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588000),doubleToFloat(0.588000),doubleToFloat(0.588000)))
                    .setTexture(new ImageTexture().setUSE("MinTextureAtlas")))
                  .setGeometry(new IndexedFaceSet().setCreaseAngle(1.57).setCoordIndex(this.IndexedFaceSet_10_90_coordIndex).setTexCoordIndex(this.IndexedFaceSet_10_90_texCoordIndex)
                    .setCoord(new Coordinate().setPoint(this.Coordinate_11_90_point))
                    .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_11_91_point))))))
            .addChild(new HAnimJoint("hanim_r_talocrural").setName("r_talocrural").setCenter(doubleToFloat(-3.701000),doubleToFloat(4.188000),doubleToFloat(-1.915000))
              .addChild(new HAnimSegment("hanim_r_talus").setName("r_talus")
                .addChild(new Transform().setTranslation(doubleToFloat(-3.701000),doubleToFloat(4.188000),doubleToFloat(-1.915000))
                  .addChild(new Shape()
                    .setAppearance(new Appearance()
                      .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588000),doubleToFloat(0.588000),doubleToFloat(0.588000)))
                      .setTexture(new ImageTexture().setUSE("MinTextureAtlas")))
                    .setGeometry(new IndexedFaceSet().setCreaseAngle(1.57).setCoordIndex(this.IndexedFaceSet_11_99_coordIndex).setTexCoordIndex(this.IndexedFaceSet_11_99_texCoordIndex)
                      .setCoord(new Coordinate().setPoint(this.Coordinate_12_99_point))
                      .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_12_100_point))))))
              .addChild(new HAnimJoint("hanim_r_metatarsophalangeal_2").setName("r_metatarsophalangeal_2").setCenter(doubleToFloat(-3.701000),doubleToFloat(3.418000),doubleToFloat(-0.400900))
                .addChild(new HAnimSegment("hanim_r_tarsal_proximal_phalanx_2").setName("r_tarsal_proximal_phalanx_2")
                  .addChild(new Transform().setTranslation(doubleToFloat(-3.701000),doubleToFloat(3.418000),doubleToFloat(-0.400900))
                    .addChild(new Shape()
                      .setAppearance(new Appearance()
                        .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588000),doubleToFloat(0.588000),doubleToFloat(0.588000)))
                        .setTexture(new ImageTexture().setUSE("MinTextureAtlas")))
                      .setGeometry(new IndexedFaceSet().setCreaseAngle(1.57).setCoordIndex(this.IndexedFaceSet_12_108_coordIndex).setTexCoordIndex(this.IndexedFaceSet_12_108_texCoordIndex)
                        .setCoord(new Coordinate().setPoint(this.Coordinate_13_108_point))
                        .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_13_109_point))))))))))
        .addChild(new HAnimJoint("hanim_sacroiliac").setName("sacroiliac").setCenter(doubleToFloat(0.0),doubleToFloat(30.980000),doubleToFloat(-2.063000))
          .addChild(new HAnimSegment("hanim_pelvis").setName("pelvis")
            .addChild(new Transform().setTranslation(doubleToFloat(0.0),doubleToFloat(30.980000),doubleToFloat(-2.063000))
              .addChild(new Shape()
                .setAppearance(new Appearance()
                  .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588000),doubleToFloat(0.588000),doubleToFloat(0.588000)))
                  .setTexture(new ImageTexture().setUSE("MinTextureAtlas")))
                .setGeometry(new IndexedFaceSet().setCreaseAngle(1.57).setCoordIndex(this.IndexedFaceSet_9_121_coordIndex).setTexCoordIndex(this.IndexedFaceSet_9_121_texCoordIndex)
                  .setCoord(new Coordinate().setPoint(this.Coordinate_10_121_point))
                  .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_10_122_point))))))
          .addChild(new HAnimJoint("hanim_l_shoulder").setName("l_shoulder").setCenter(doubleToFloat(5.199000),doubleToFloat(51.119999),doubleToFloat(-2.106000))
            .addChild(new HAnimSegment("hanim_l_upperarm").setName("l_upperarm")
              .addChild(new Transform().setTranslation(doubleToFloat(5.199000),doubleToFloat(51.119999),doubleToFloat(-2.106000))
                .addChild(new Shape()
                  .setAppearance(new Appearance()
                    .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588000),doubleToFloat(0.588000),doubleToFloat(0.588000)))
                    .setTexture(new ImageTexture().setUSE("MinTextureAtlas")))
                  .setGeometry(new IndexedFaceSet().setCreaseAngle(1.57).setCoordIndex(this.IndexedFaceSet_10_130_coordIndex).setTexCoordIndex(this.IndexedFaceSet_10_130_texCoordIndex)
                    .setCoord(new Coordinate().setPoint(this.Coordinate_11_130_point))
                    .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_11_131_point))))))
            .addChild(new HAnimJoint("hanim_l_elbow").setName("l_elbow").setCenter(doubleToFloat(7.024000),doubleToFloat(42.730000),doubleToFloat(-2.051000))
              .addChild(new HAnimSegment("hanim_l_forearm").setName("l_forearm")
                .addChild(new Transform().setTranslation(doubleToFloat(7.024000),doubleToFloat(42.730000),doubleToFloat(-2.051000))
                  .addChild(new Shape()
                    .setAppearance(new Appearance()
                      .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588000),doubleToFloat(0.588000),doubleToFloat(0.588000)))
                      .setTexture(new ImageTexture().setUSE("MinTextureAtlas")))
                    .setGeometry(new IndexedFaceSet().setCreaseAngle(1.57).setCoordIndex(this.IndexedFaceSet_11_139_coordIndex).setTexCoordIndex(this.IndexedFaceSet_11_139_texCoordIndex)
                      .setCoord(new Coordinate().setPoint(this.Coordinate_12_139_point))
                      .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_12_140_point))))))
              .addChild(new HAnimJoint("hanim_l_radiocarpal").setName("l_radiocarpal").setCenter(doubleToFloat(7.221000),doubleToFloat(34.0),doubleToFloat(-2.015000))
                .addChild(new HAnimSegment("hanim_l_carpal").setName("l_carpal")
                  .addChild(new Transform().setTranslation(doubleToFloat(7.221000),doubleToFloat(34.0),doubleToFloat(-2.015000))
                    .addChild(new Shape()
                      .setAppearance(new Appearance()
                        .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588000),doubleToFloat(0.588000),doubleToFloat(0.588000)))
                        .setTexture(new ImageTexture().setUSE("MinTextureAtlas")))
                      .setGeometry(new IndexedFaceSet().setCreaseAngle(1.57).setCoordIndex(this.IndexedFaceSet_12_148_coordIndex).setTexCoordIndex(this.IndexedFaceSet_12_148_texCoordIndex)
                        .setCoord(new Coordinate().setPoint(this.Coordinate_13_148_point))
                        .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_13_149_point)))))))))
          .addChild(new HAnimJoint("hanim_r_shoulder").setName("r_shoulder").setCenter(doubleToFloat(-5.199000),doubleToFloat(51.119999),doubleToFloat(-2.106000))
            .addChild(new HAnimSegment("hanim_r_upperarm").setName("r_upperarm")
              .addChild(new Transform().setTranslation(doubleToFloat(-5.199000),doubleToFloat(51.119999),doubleToFloat(-2.106000))
                .addChild(new Shape()
                  .setAppearance(new Appearance()
                    .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588000),doubleToFloat(0.588000),doubleToFloat(0.588000)))
                    .setTexture(new ImageTexture().setUSE("MinTextureAtlas")))
                  .setGeometry(new IndexedFaceSet().setCreaseAngle(1.57).setCoordIndex(this.IndexedFaceSet_10_160_coordIndex).setTexCoordIndex(this.IndexedFaceSet_10_160_texCoordIndex)
                    .setCoord(new Coordinate().setPoint(this.Coordinate_11_160_point))
                    .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_11_161_point))))))
            .addChild(new HAnimJoint("hanim_r_elbow").setName("r_elbow").setCenter(doubleToFloat(-7.024000),doubleToFloat(42.730000),doubleToFloat(-2.051000))
              .addChild(new HAnimSegment("hanim_r_forearm").setName("r_forearm")
                .addChild(new Transform().setTranslation(doubleToFloat(-7.024000),doubleToFloat(42.730000),doubleToFloat(-2.051000))
                  .addChild(new Shape()
                    .setAppearance(new Appearance()
                      .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588000),doubleToFloat(0.588000),doubleToFloat(0.588000)))
                      .setTexture(new ImageTexture().setUSE("MinTextureAtlas")))
                    .setGeometry(new IndexedFaceSet().setCreaseAngle(1.57).setCoordIndex(this.IndexedFaceSet_11_169_coordIndex).setTexCoordIndex(this.IndexedFaceSet_11_169_texCoordIndex)
                      .setCoord(new Coordinate().setPoint(this.Coordinate_12_169_point))
                      .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_12_170_point))))))
              .addChild(new HAnimJoint("hanim_r_radiocarpal").setName("r_radiocarpal").setCenter(doubleToFloat(-7.221000),doubleToFloat(34.0),doubleToFloat(-2.015000))
                .addChild(new HAnimSegment("hanim_r_carpal").setName("r_carpal")
                  .addChild(new Transform().setTranslation(doubleToFloat(-7.221000),doubleToFloat(34.0),doubleToFloat(-2.015000))
                    .addChild(new Shape()
                      .setAppearance(new Appearance()
                        .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588000),doubleToFloat(0.588000),doubleToFloat(0.588000)))
                        .setTexture(new ImageTexture().setUSE("MinTextureAtlas")))
                      .setGeometry(new IndexedFaceSet().setCreaseAngle(1.57).setCoordIndex(this.IndexedFaceSet_12_178_coordIndex).setTexCoordIndex(this.IndexedFaceSet_12_178_texCoordIndex)
                        .setCoord(new Coordinate().setPoint(this.Coordinate_13_178_point))
                        .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_13_179_point)))))))))
          .addChild(new HAnimJoint("hanim_vl5").setName("vl5").setCenter(doubleToFloat(0.0),doubleToFloat(36.290001),doubleToFloat(-2.197000))
            .addChild(new HAnimSegment("hanim_l5").setName("l5")
              .addChild(new Transform().setTranslation(doubleToFloat(0.0),doubleToFloat(36.290001),doubleToFloat(-2.197000))
                .addChild(new Shape()
                  .setAppearance(new Appearance()
                    .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588000),doubleToFloat(0.588000),doubleToFloat(0.588000)))
                    .setTexture(new ImageTexture().setUSE("MinTextureAtlas")))
                  .setGeometry(new IndexedFaceSet().setCreaseAngle(1.57).setCoordIndex(this.IndexedFaceSet_10_190_coordIndex).setTexCoordIndex(this.IndexedFaceSet_10_190_texCoordIndex)
                    .setCoord(new Coordinate().setPoint(this.Coordinate_11_190_point))
                    .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_11_191_point))))))
            .addChild(new HAnimJoint("hanim_skullbase").setName("skullbase").setCenter(doubleToFloat(0.0),doubleToFloat(54.840000),doubleToFloat(-1.903000))
              .addChild(new HAnimSegment("hanim_skull").setName("skull")
                .addChild(new Transform().setTranslation(doubleToFloat(0.0),doubleToFloat(54.840000),doubleToFloat(-1.903000))
                  .addChild(new Shape()
                    .setAppearance(new Appearance()
                      .setMaterial(new Material().setDiffuseColor(doubleToFloat(0.588000),doubleToFloat(0.588000),doubleToFloat(0.588000)))
                      .setTexture(new ImageTexture().setUSE("MinTextureAtlas")))
                    .setGeometry(new IndexedFaceSet().setCreaseAngle(1.57).setCoordIndex(this.IndexedFaceSet_11_199_coordIndex).setTexCoordIndex(this.IndexedFaceSet_11_199_texCoordIndex)
                      .setCoord(new Coordinate().setPoint(this.Coordinate_12_199_point))
                      .setTexCoord(new TextureCoordinate().setPoint(this.TextureCoordinate_12_200_point))))))))))
      .addJoints(new HAnimJoint().setUSE("hanim_humanoid_root"))
      .addJoints(new HAnimJoint().setUSE("hanim_sacroiliac"))
      .addJoints(new HAnimJoint().setUSE("hanim_skullbase"))
      .addJoints(new HAnimJoint().setUSE("hanim_vl5"))
      .addJoints(new HAnimJoint().setUSE("hanim_l_elbow"))
      .addJoints(new HAnimJoint().setUSE("hanim_r_elbow"))
      .addJoints(new HAnimJoint().setUSE("hanim_l_hip"))
      .addJoints(new HAnimJoint().setUSE("hanim_r_hip"))
      .addJoints(new HAnimJoint().setUSE("hanim_l_knee"))
      .addJoints(new HAnimJoint().setUSE("hanim_r_knee"))
      .addJoints(new HAnimJoint().setUSE("hanim_l_metatarsophalangeal_2"))
      .addJoints(new HAnimJoint().setUSE("hanim_r_metatarsophalangeal_2"))
      .addJoints(new HAnimJoint().setUSE("hanim_l_radiocarpal"))
      .addJoints(new HAnimJoint().setUSE("hanim_r_radiocarpal"))
      .addJoints(new HAnimJoint().setUSE("hanim_l_shoulder"))
      .addJoints(new HAnimJoint().setUSE("hanim_r_shoulder"))
      .addJoints(new HAnimJoint().setUSE("hanim_l_talocrural"))
      .addJoints(new HAnimJoint().setUSE("hanim_r_talocrural"))
      .addSegments(new HAnimSegment().setUSE("hanim_l5"))
      .addSegments(new HAnimSegment().setUSE("hanim_pelvis"))
      .addSegments(new HAnimSegment().setUSE("hanim_sacrum"))
      .addSegments(new HAnimSegment().setUSE("hanim_skull"))
      .addSegments(new HAnimSegment().setUSE("hanim_l_calf"))
      .addSegments(new HAnimSegment().setUSE("hanim_r_calf"))
      .addSegments(new HAnimSegment().setUSE("hanim_l_carpal"))
      .addSegments(new HAnimSegment().setUSE("hanim_r_carpal"))
      .addSegments(new HAnimSegment().setUSE("hanim_l_forearm"))
      .addSegments(new HAnimSegment().setUSE("hanim_r_forearm"))
      .addSegments(new HAnimSegment().setUSE("hanim_l_talus"))
      .addSegments(new HAnimSegment().setUSE("hanim_r_talus"))
      .addSegments(new HAnimSegment().setUSE("hanim_l_tarsal_proximal_phalanx_2"))
      .addSegments(new HAnimSegment().setUSE("hanim_r_tarsal_proximal_phalanx_2"))
      .addSegments(new HAnimSegment().setUSE("hanim_l_thigh"))
      .addSegments(new HAnimSegment().setUSE("hanim_r_thigh"))
      .addSegments(new HAnimSegment().setUSE("hanim_l_upperarm"))
      .addSegments(new HAnimSegment().setUSE("hanim_r_upperarm"))));
  },
  // end of initialize() method


  /** Provide a shallow copy of the X3D model.
   * @return KoreanCharacter11Min model
   */
  getX3dModel : function()
  {	  
	  return this.x3dModel;
  },
  
  /** Indicate X3DJSAIL validation results for this X3D model.
   * @return validation results plus exception information, if any
   */
  validateSelf : function()
  {
	var       metaResult = "";
	var validationResult = "";
	var  exceptionResult = "";
	try
	{
		this.initialize();
		
		if ((this.getX3dModel() == null) || (this.getX3dModel().getHead() == null))
		{
			validationResult = "empty scene, nothing to validate. " + this.x3dModel.validate();
			return validationResult;
		}
		// first list informational meta elements of interest
		var metaList = this.getX3dModel().getHead().getMetaList();
		for (var m in metaList) {
			var metaObject = metaList[m];
			if (metaObject.getName() === metaObject.NAME_ERROR ||
				metaObject.getName() === metaObject.NAME_WARNING ||
				metaObject.getName() === metaObject.NAME_HINT ||
				metaObject.getName() === metaObject.NAME_INFO ||
				metaObject.getName() === metaObject.NAME_TODO)
			{
				metaResult += metaObject.toStringX3D();
			}
		}
		validationResult += this.x3dModel.validate(); // walk entire tree to validate correctness
	}
	catch (e)
	{
		exceptionResult = e; // report exception failures, if any
	}
	if  (metaResult === "" && exceptionResult === "" && validationResult === "")
	     return "success";
	else
	{
		var returnMessage = metaResult;
		if  (exceptionResult !== "" && validationResult !== "")
			returnMessage += "\n*** ";
		returnMessage += exceptionResult;
		if  (exceptionResult === "" && validationResult !== "")
			returnMessage = "\n" + returnMessage; // skip line before meta tags, etc.
		returnMessage += validationResult;
		return returnMessage;
	}
  },
    /** Default main() method provided for test purposes.
     * @param argv input parameters
     */
    main : function (argv)
    {
		var testObject = new KoreanCharacter11Min();
		print ("KoreanCharacter11Min execution self-validation test results: " + testObject.validateSelf());
	}
}
new KoreanCharacter11Min().main();