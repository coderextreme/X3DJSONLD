CommentsBlock = Java.type("org.web3d.x3d.jsail.Core.CommentsBlock")
AcousticProperties = Java.type('net.coderextreme.remove.NewAcousticProperties')
Analyser = Java.type('net.coderextreme.remove.NewAnalyser')
Anchor = Java.type('net.coderextreme.remove.NewAnchor')
Appearance = Java.type('net.coderextreme.remove.NewAppearance')
Arc2D = Java.type('net.coderextreme.remove.NewArc2D')
ArcClose2D = Java.type('net.coderextreme.remove.NewArcClose2D')
AudioClip = Java.type('net.coderextreme.remove.NewAudioClip')
AudioDestination = Java.type('net.coderextreme.remove.NewAudioDestination')
Background = Java.type('net.coderextreme.remove.NewBackground')
BallJoint = Java.type('net.coderextreme.remove.NewBallJoint')
Billboard = Java.type('net.coderextreme.remove.NewBillboard')
BiquadFilter = Java.type('net.coderextreme.remove.NewBiquadFilter')
BlendedVolumeStyle = Java.type('net.coderextreme.remove.NewBlendedVolumeStyle')
BooleanFilter = Java.type('net.coderextreme.remove.NewBooleanFilter')
BooleanSequencer = Java.type('net.coderextreme.remove.NewBooleanSequencer')
BooleanToggle = Java.type('net.coderextreme.remove.NewBooleanToggle')
BooleanTrigger = Java.type('net.coderextreme.remove.NewBooleanTrigger')
BoundaryEnhancementVolumeStyle = Java.type('net.coderextreme.remove.NewBoundaryEnhancementVolumeStyle')
BoundedPhysicsModel = Java.type('net.coderextreme.remove.NewBoundedPhysicsModel')
Box = Java.type('net.coderextreme.remove.NewBox')
BufferAudioSource = Java.type('net.coderextreme.remove.NewBufferAudioSource')
CADAssembly = Java.type('net.coderextreme.remove.NewCADAssembly')
CADFace = Java.type('net.coderextreme.remove.NewCADFace')
CADLayer = Java.type('net.coderextreme.remove.NewCADLayer')
CADPart = Java.type('net.coderextreme.remove.NewCADPart')
CartoonVolumeStyle = Java.type('net.coderextreme.remove.NewCartoonVolumeStyle')
ChannelMerger = Java.type('net.coderextreme.remove.NewChannelMerger')
ChannelSelector = Java.type('net.coderextreme.remove.NewChannelSelector')
ChannelSplitter = Java.type('net.coderextreme.remove.NewChannelSplitter')
Circle2D = Java.type('net.coderextreme.remove.NewCircle2D')
ClipPlane = Java.type('net.coderextreme.remove.NewClipPlane')
CollidableOffset = Java.type('net.coderextreme.remove.NewCollidableOffset')
CollidableShape = Java.type('net.coderextreme.remove.NewCollidableShape')
Collision = Java.type('net.coderextreme.remove.NewCollision')
CollisionCollection = Java.type('net.coderextreme.remove.NewCollisionCollection')
CollisionSensor = Java.type('net.coderextreme.remove.NewCollisionSensor')
CollisionSpace = Java.type('net.coderextreme.remove.NewCollisionSpace')
Color = Java.type('net.coderextreme.remove.NewColor')
ColorChaser = Java.type('net.coderextreme.remove.NewColorChaser')
ColorDamper = Java.type('net.coderextreme.remove.NewColorDamper')
ColorInterpolator = Java.type('net.coderextreme.remove.NewColorInterpolator')
ColorRGBA = Java.type('net.coderextreme.remove.NewColorRGBA')
ComposedCubeMapTexture = Java.type('net.coderextreme.remove.NewComposedCubeMapTexture')
ComposedShader = Java.type('net.coderextreme.remove.NewComposedShader')
ComposedTexture3D = Java.type('net.coderextreme.remove.NewComposedTexture3D')
ComposedVolumeStyle = Java.type('net.coderextreme.remove.NewComposedVolumeStyle')
Cone = Java.type('net.coderextreme.remove.NewCone')
ConeEmitter = Java.type('net.coderextreme.remove.NewConeEmitter')
Contact = Java.type('net.coderextreme.remove.NewContact')
Contour2D = Java.type('net.coderextreme.remove.NewContour2D')
ContourPolyline2D = Java.type('net.coderextreme.remove.NewContourPolyline2D')
Convolver = Java.type('net.coderextreme.remove.NewConvolver')
Coordinate = Java.type('net.coderextreme.remove.NewCoordinate')
CoordinateChaser = Java.type('net.coderextreme.remove.NewCoordinateChaser')
CoordinateDamper = Java.type('net.coderextreme.remove.NewCoordinateDamper')
CoordinateDouble = Java.type('net.coderextreme.remove.NewCoordinateDouble')
CoordinateInterpolator = Java.type('net.coderextreme.remove.NewCoordinateInterpolator')
CoordinateInterpolator2D = Java.type('net.coderextreme.remove.NewCoordinateInterpolator2D')
Cylinder = Java.type('net.coderextreme.remove.NewCylinder')
CylinderSensor = Java.type('net.coderextreme.remove.NewCylinderSensor')
Delay = Java.type('net.coderextreme.remove.NewDelay')
DirectionalLight = Java.type('net.coderextreme.remove.NewDirectionalLight')
DISEntityManager = Java.type('net.coderextreme.remove.NewDISEntityManager')
DISEntityTypeMapping = Java.type('net.coderextreme.remove.NewDISEntityTypeMapping')
Disk2D = Java.type('net.coderextreme.remove.NewDisk2D')
DoubleAxisHingeJoint = Java.type('net.coderextreme.remove.NewDoubleAxisHingeJoint')
DynamicsCompressor = Java.type('net.coderextreme.remove.NewDynamicsCompressor')
EaseInEaseOut = Java.type('net.coderextreme.remove.NewEaseInEaseOut')
EdgeEnhancementVolumeStyle = Java.type('net.coderextreme.remove.NewEdgeEnhancementVolumeStyle')
ElevationGrid = Java.type('net.coderextreme.remove.NewElevationGrid')
EspduTransform = Java.type('net.coderextreme.remove.NewEspduTransform')
ExplosionEmitter = Java.type('net.coderextreme.remove.NewExplosionEmitter')
Extrusion = Java.type('net.coderextreme.remove.NewExtrusion')
FillProperties = Java.type('net.coderextreme.remove.NewFillProperties')
FloatVertexAttribute = Java.type('net.coderextreme.remove.NewFloatVertexAttribute')
Fog = Java.type('net.coderextreme.remove.NewFog')
FogCoordinate = Java.type('net.coderextreme.remove.NewFogCoordinate')
FontStyle = Java.type('net.coderextreme.remove.NewFontStyle')
ForcePhysicsModel = Java.type('net.coderextreme.remove.NewForcePhysicsModel')
Gain = Java.type('net.coderextreme.remove.NewGain')
GeneratedCubeMapTexture = Java.type('net.coderextreme.remove.NewGeneratedCubeMapTexture')
GeoCoordinate = Java.type('net.coderextreme.remove.NewGeoCoordinate')
GeoElevationGrid = Java.type('net.coderextreme.remove.NewGeoElevationGrid')
GeoLocation = Java.type('net.coderextreme.remove.NewGeoLocation')
GeoLOD = Java.type('net.coderextreme.remove.NewGeoLOD')
GeoMetadata = Java.type('net.coderextreme.remove.NewGeoMetadata')
GeoOrigin = Java.type('net.coderextreme.remove.NewGeoOrigin')
GeoPositionInterpolator = Java.type('net.coderextreme.remove.NewGeoPositionInterpolator')
GeoProximitySensor = Java.type('net.coderextreme.remove.NewGeoProximitySensor')
GeoTouchSensor = Java.type('net.coderextreme.remove.NewGeoTouchSensor')
GeoTransform = Java.type('net.coderextreme.remove.NewGeoTransform')
GeoViewpoint = Java.type('net.coderextreme.remove.NewGeoViewpoint')
Group = Java.type('net.coderextreme.remove.NewGroup')
HAnimDisplacer = Java.type('net.coderextreme.remove.NewHAnimDisplacer')
HAnimHumanoid = Java.type('net.coderextreme.remove.NewHAnimHumanoid')
HAnimJoint = Java.type('net.coderextreme.remove.NewHAnimJoint')
HAnimMotion = Java.type('net.coderextreme.remove.NewHAnimMotion')
HAnimSegment = Java.type('net.coderextreme.remove.NewHAnimSegment')
HAnimSite = Java.type('net.coderextreme.remove.NewHAnimSite')
ImageCubeMapTexture = Java.type('net.coderextreme.remove.NewImageCubeMapTexture')
ImageTexture = Java.type('net.coderextreme.remove.NewImageTexture')
ImageTexture3D = Java.type('net.coderextreme.remove.NewImageTexture3D')
IndexedFaceSet = Java.type('net.coderextreme.remove.NewIndexedFaceSet')
IndexedLineSet = Java.type('net.coderextreme.remove.NewIndexedLineSet')
IndexedQuadSet = Java.type('net.coderextreme.remove.NewIndexedQuadSet')
IndexedTriangleFanSet = Java.type('net.coderextreme.remove.NewIndexedTriangleFanSet')
IndexedTriangleSet = Java.type('net.coderextreme.remove.NewIndexedTriangleSet')
IndexedTriangleStripSet = Java.type('net.coderextreme.remove.NewIndexedTriangleStripSet')
Inline = Java.type('net.coderextreme.remove.NewInline')
IntegerSequencer = Java.type('net.coderextreme.remove.NewIntegerSequencer')
IntegerTrigger = Java.type('net.coderextreme.remove.NewIntegerTrigger')
IsoSurfaceVolumeData = Java.type('net.coderextreme.remove.NewIsoSurfaceVolumeData')
KeySensor = Java.type('net.coderextreme.remove.NewKeySensor')
Layer = Java.type('net.coderextreme.remove.NewLayer')
LayerSet = Java.type('net.coderextreme.remove.NewLayerSet')
Layout = Java.type('net.coderextreme.remove.NewLayout')
LayoutGroup = Java.type('net.coderextreme.remove.NewLayoutGroup')
LayoutLayer = Java.type('net.coderextreme.remove.NewLayoutLayer')
LinePickSensor = Java.type('net.coderextreme.remove.NewLinePickSensor')
LineProperties = Java.type('net.coderextreme.remove.NewLineProperties')
LineSet = Java.type('net.coderextreme.remove.NewLineSet')
ListenerPointSource = Java.type('net.coderextreme.remove.NewListenerPointSource')
LoadSensor = Java.type('net.coderextreme.remove.NewLoadSensor')
LocalFog = Java.type('net.coderextreme.remove.NewLocalFog')
LOD = Java.type('net.coderextreme.remove.NewLOD')
Material = Java.type('net.coderextreme.remove.NewMaterial')
Matrix3VertexAttribute = Java.type('net.coderextreme.remove.NewMatrix3VertexAttribute')
Matrix4VertexAttribute = Java.type('net.coderextreme.remove.NewMatrix4VertexAttribute')
MetadataBoolean = Java.type('net.coderextreme.remove.NewMetadataBoolean')
MetadataDouble = Java.type('net.coderextreme.remove.NewMetadataDouble')
MetadataFloat = Java.type('net.coderextreme.remove.NewMetadataFloat')
MetadataInteger = Java.type('net.coderextreme.remove.NewMetadataInteger')
MetadataSet = Java.type('net.coderextreme.remove.NewMetadataSet')
MetadataString = Java.type('net.coderextreme.remove.NewMetadataString')
MicrophoneSource = Java.type('net.coderextreme.remove.NewMicrophoneSource')
MotorJoint = Java.type('net.coderextreme.remove.NewMotorJoint')
MovieTexture = Java.type('net.coderextreme.remove.NewMovieTexture')
MultiTexture = Java.type('net.coderextreme.remove.NewMultiTexture')
MultiTextureCoordinate = Java.type('net.coderextreme.remove.NewMultiTextureCoordinate')
MultiTextureTransform = Java.type('net.coderextreme.remove.NewMultiTextureTransform')
NavigationInfo = Java.type('net.coderextreme.remove.NewNavigationInfo')
Normal = Java.type('net.coderextreme.remove.NewNormal')
NormalInterpolator = Java.type('net.coderextreme.remove.NewNormalInterpolator')
NurbsCurve = Java.type('net.coderextreme.remove.NewNurbsCurve')
NurbsCurve2D = Java.type('net.coderextreme.remove.NewNurbsCurve2D')
NurbsOrientationInterpolator = Java.type('net.coderextreme.remove.NewNurbsOrientationInterpolator')
NurbsPatchSurface = Java.type('net.coderextreme.remove.NewNurbsPatchSurface')
NurbsPositionInterpolator = Java.type('net.coderextreme.remove.NewNurbsPositionInterpolator')
NurbsSet = Java.type('net.coderextreme.remove.NewNurbsSet')
NurbsSurfaceInterpolator = Java.type('net.coderextreme.remove.NewNurbsSurfaceInterpolator')
NurbsSweptSurface = Java.type('net.coderextreme.remove.NewNurbsSweptSurface')
NurbsSwungSurface = Java.type('net.coderextreme.remove.NewNurbsSwungSurface')
NurbsTextureCoordinate = Java.type('net.coderextreme.remove.NewNurbsTextureCoordinate')
NurbsTrimmedSurface = Java.type('net.coderextreme.remove.NewNurbsTrimmedSurface')
OpacityMapVolumeStyle = Java.type('net.coderextreme.remove.NewOpacityMapVolumeStyle')
OrientationChaser = Java.type('net.coderextreme.remove.NewOrientationChaser')
OrientationDamper = Java.type('net.coderextreme.remove.NewOrientationDamper')
OrientationInterpolator = Java.type('net.coderextreme.remove.NewOrientationInterpolator')
OrthoViewpoint = Java.type('net.coderextreme.remove.NewOrthoViewpoint')
OscillatorSource = Java.type('net.coderextreme.remove.NewOscillatorSource')
PackagedShader = Java.type('net.coderextreme.remove.NewPackagedShader')
ParticleSystem = Java.type('net.coderextreme.remove.NewParticleSystem')
PeriodicWave = Java.type('net.coderextreme.remove.NewPeriodicWave')
PhysicalMaterial = Java.type('net.coderextreme.remove.NewPhysicalMaterial')
PickableGroup = Java.type('net.coderextreme.remove.NewPickableGroup')
PixelTexture = Java.type('net.coderextreme.remove.NewPixelTexture')
PixelTexture3D = Java.type('net.coderextreme.remove.NewPixelTexture3D')
PlaneSensor = Java.type('net.coderextreme.remove.NewPlaneSensor')
PointEmitter = Java.type('net.coderextreme.remove.NewPointEmitter')
PointLight = Java.type('net.coderextreme.remove.NewPointLight')
PointPickSensor = Java.type('net.coderextreme.remove.NewPointPickSensor')
PointProperties = Java.type('net.coderextreme.remove.NewPointProperties')
PointSet = Java.type('net.coderextreme.remove.NewPointSet')
Polyline2D = Java.type('net.coderextreme.remove.NewPolyline2D')
PolylineEmitter = Java.type('net.coderextreme.remove.NewPolylineEmitter')
Polypoint2D = Java.type('net.coderextreme.remove.NewPolypoint2D')
PositionChaser = Java.type('net.coderextreme.remove.NewPositionChaser')
PositionChaser2D = Java.type('net.coderextreme.remove.NewPositionChaser2D')
PositionDamper = Java.type('net.coderextreme.remove.NewPositionDamper')
PositionDamper2D = Java.type('net.coderextreme.remove.NewPositionDamper2D')
PositionInterpolator = Java.type('net.coderextreme.remove.NewPositionInterpolator')
PositionInterpolator2D = Java.type('net.coderextreme.remove.NewPositionInterpolator2D')
PrimitivePickSensor = Java.type('net.coderextreme.remove.NewPrimitivePickSensor')
ProgramShader = Java.type('net.coderextreme.remove.NewProgramShader')
ProjectionVolumeStyle = Java.type('net.coderextreme.remove.NewProjectionVolumeStyle')
ProtoInstance = Java.type('net.coderextreme.remove.NewProtoInstance')
ProximitySensor = Java.type('net.coderextreme.remove.NewProximitySensor')
QuadSet = Java.type('net.coderextreme.remove.NewQuadSet')
ReceiverPdu = Java.type('net.coderextreme.remove.NewReceiverPdu')
Rectangle2D = Java.type('net.coderextreme.remove.NewRectangle2D')
RigidBody = Java.type('net.coderextreme.remove.NewRigidBody')
RigidBodyCollection = Java.type('net.coderextreme.remove.NewRigidBodyCollection')
ScalarChaser = Java.type('net.coderextreme.remove.NewScalarChaser')
ScalarDamper = Java.type('net.coderextreme.remove.NewScalarDamper')
ScalarInterpolator = Java.type('net.coderextreme.remove.NewScalarInterpolator')
ScreenFontStyle = Java.type('net.coderextreme.remove.NewScreenFontStyle')
ScreenGroup = Java.type('net.coderextreme.remove.NewScreenGroup')
Script = Java.type('net.coderextreme.remove.NewScript')
SegmentedVolumeData = Java.type('net.coderextreme.remove.NewSegmentedVolumeData')
ShadedVolumeStyle = Java.type('net.coderextreme.remove.NewShadedVolumeStyle')
ShaderPart = Java.type('net.coderextreme.remove.NewShaderPart')
ShaderProgram = Java.type('net.coderextreme.remove.NewShaderProgram')
Shape = Java.type('net.coderextreme.remove.NewShape')
SignalPdu = Java.type('net.coderextreme.remove.NewSignalPdu')
SilhouetteEnhancementVolumeStyle = Java.type('net.coderextreme.remove.NewSilhouetteEnhancementVolumeStyle')
SingleAxisHingeJoint = Java.type('net.coderextreme.remove.NewSingleAxisHingeJoint')
SliderJoint = Java.type('net.coderextreme.remove.NewSliderJoint')
Sound = Java.type('net.coderextreme.remove.NewSound')
SpatialSound = Java.type('net.coderextreme.remove.NewSpatialSound')
Sphere = Java.type('net.coderextreme.remove.NewSphere')
SphereSensor = Java.type('net.coderextreme.remove.NewSphereSensor')
SplinePositionInterpolator = Java.type('net.coderextreme.remove.NewSplinePositionInterpolator')
SplinePositionInterpolator2D = Java.type('net.coderextreme.remove.NewSplinePositionInterpolator2D')
SplineScalarInterpolator = Java.type('net.coderextreme.remove.NewSplineScalarInterpolator')
SpotLight = Java.type('net.coderextreme.remove.NewSpotLight')
SquadOrientationInterpolator = Java.type('net.coderextreme.remove.NewSquadOrientationInterpolator')
StaticGroup = Java.type('net.coderextreme.remove.NewStaticGroup')
StreamAudioDestination = Java.type('net.coderextreme.remove.NewStreamAudioDestination')
StreamAudioSource = Java.type('net.coderextreme.remove.NewStreamAudioSource')
StringSensor = Java.type('net.coderextreme.remove.NewStringSensor')
SurfaceEmitter = Java.type('net.coderextreme.remove.NewSurfaceEmitter')
Switch = Java.type('net.coderextreme.remove.NewSwitch')
TexCoordChaser2D = Java.type('net.coderextreme.remove.NewTexCoordChaser2D')
TexCoordDamper2D = Java.type('net.coderextreme.remove.NewTexCoordDamper2D')
Text = Java.type('net.coderextreme.remove.NewText')
TextureBackground = Java.type('net.coderextreme.remove.NewTextureBackground')
TextureCoordinate = Java.type('net.coderextreme.remove.NewTextureCoordinate')
TextureCoordinate3D = Java.type('net.coderextreme.remove.NewTextureCoordinate3D')
TextureCoordinate4D = Java.type('net.coderextreme.remove.NewTextureCoordinate4D')
TextureCoordinateGenerator = Java.type('net.coderextreme.remove.NewTextureCoordinateGenerator')
TextureProjector = Java.type('net.coderextreme.remove.NewTextureProjector')
TextureProjectorParallel = Java.type('net.coderextreme.remove.NewTextureProjectorParallel')
TextureProperties = Java.type('net.coderextreme.remove.NewTextureProperties')
TextureTransform = Java.type('net.coderextreme.remove.NewTextureTransform')
TextureTransform3D = Java.type('net.coderextreme.remove.NewTextureTransform3D')
TextureTransformMatrix3D = Java.type('net.coderextreme.remove.NewTextureTransformMatrix3D')
TimeSensor = Java.type('net.coderextreme.remove.NewTimeSensor')
TimeTrigger = Java.type('net.coderextreme.remove.NewTimeTrigger')
ToneMappedVolumeStyle = Java.type('net.coderextreme.remove.NewToneMappedVolumeStyle')
TouchSensor = Java.type('net.coderextreme.remove.NewTouchSensor')
Transform = Java.type('net.coderextreme.remove.NewTransform')
TransformSensor = Java.type('net.coderextreme.remove.NewTransformSensor')
TransmitterPdu = Java.type('net.coderextreme.remove.NewTransmitterPdu')
TriangleFanSet = Java.type('net.coderextreme.remove.NewTriangleFanSet')
TriangleSet = Java.type('net.coderextreme.remove.NewTriangleSet')
TriangleSet2D = Java.type('net.coderextreme.remove.NewTriangleSet2D')
TriangleStripSet = Java.type('net.coderextreme.remove.NewTriangleStripSet')
TwoSidedMaterial = Java.type('net.coderextreme.remove.NewTwoSidedMaterial')
UniversalJoint = Java.type('net.coderextreme.remove.NewUniversalJoint')
UnlitMaterial = Java.type('net.coderextreme.remove.NewUnlitMaterial')
Viewpoint = Java.type('net.coderextreme.remove.NewViewpoint')
ViewpointGroup = Java.type('net.coderextreme.remove.NewViewpointGroup')
Viewport = Java.type('net.coderextreme.remove.NewViewport')
VisibilitySensor = Java.type('net.coderextreme.remove.NewVisibilitySensor')
VolumeData = Java.type('net.coderextreme.remove.NewVolumeData')
VolumeEmitter = Java.type('net.coderextreme.remove.NewVolumeEmitter')
VolumePickSensor = Java.type('net.coderextreme.remove.NewVolumePickSensor')
WaveShaper = Java.type('net.coderextreme.remove.NewWaveShaper')
WindPhysicsModel = Java.type('net.coderextreme.remove.NewWindPhysicsModel')
WorldInfo = Java.type('net.coderextreme.remove.NewWorldInfo')
component = Java.type('net.coderextreme.remove.Newcomponent')
connect = Java.type('net.coderextreme.remove.Newconnect')
EXPORT = Java.type('net.coderextreme.remove.NewEXPORT')
ExternProtoDeclare = Java.type('net.coderextreme.remove.NewExternProtoDeclare')
field = Java.type('net.coderextreme.remove.Newfield')
fieldValue = Java.type('net.coderextreme.remove.NewfieldValue')
head = Java.type('net.coderextreme.remove.Newhead')
IMPORT = Java.type('net.coderextreme.remove.NewIMPORT')
IS = Java.type('net.coderextreme.remove.NewIS')
meta = Java.type('net.coderextreme.remove.Newmeta')
ProtoBody = Java.type('net.coderextreme.remove.NewProtoBody')
ProtoDeclare = Java.type('net.coderextreme.remove.NewProtoDeclare')
ProtoInterface = Java.type('net.coderextreme.remove.NewProtoInterface')
ROUTE = Java.type('net.coderextreme.remove.NewROUTE')
Scene = Java.type('net.coderextreme.remove.NewScene')
unit = Java.type('net.coderextreme.remove.Newunit')
X3D = Java.type('net.coderextreme.remove.NewX3D')
SFBool = Java.type('org.web3d.x3d.jsail.fields.SFBool')
MFBool = Java.type('org.web3d.x3d.jsail.fields.MFBool')
SFColor = Java.type('org.web3d.x3d.jsail.fields.SFColor')
MFColor = Java.type('org.web3d.x3d.jsail.fields.MFColor')
SFColorRGBA = Java.type('org.web3d.x3d.jsail.fields.SFColorRGBA')
MFColorRGBA = Java.type('org.web3d.x3d.jsail.fields.MFColorRGBA')
SFDouble = Java.type('org.web3d.x3d.jsail.fields.SFDouble')
MFDouble = Java.type('org.web3d.x3d.jsail.fields.MFDouble')
SFFloat = Java.type('org.web3d.x3d.jsail.fields.SFFloat')
MFFloat = Java.type('org.web3d.x3d.jsail.fields.MFFloat')
SFImage = Java.type('org.web3d.x3d.jsail.fields.SFImage')
MFImage = Java.type('org.web3d.x3d.jsail.fields.MFImage')
SFInt32 = Java.type('org.web3d.x3d.jsail.fields.SFInt32')
MFInt32 = Java.type('org.web3d.x3d.jsail.fields.MFInt32')
SFMatrix3d = Java.type('org.web3d.x3d.jsail.fields.SFMatrix3d')
MFMatrix3d = Java.type('org.web3d.x3d.jsail.fields.MFMatrix3d')
SFMatrix3f = Java.type('org.web3d.x3d.jsail.fields.SFMatrix3f')
MFMatrix3f = Java.type('org.web3d.x3d.jsail.fields.MFMatrix3f')
SFMatrix4d = Java.type('org.web3d.x3d.jsail.fields.SFMatrix4d')
MFMatrix4d = Java.type('org.web3d.x3d.jsail.fields.MFMatrix4d')
SFMatrix4f = Java.type('org.web3d.x3d.jsail.fields.SFMatrix4f')
MFMatrix4f = Java.type('org.web3d.x3d.jsail.fields.MFMatrix4f')
SFNode = Java.type('org.web3d.x3d.jsail.fields.SFNode')
MFNode = Java.type('org.web3d.x3d.jsail.fields.MFNode')
SFRotation = Java.type('org.web3d.x3d.jsail.fields.SFRotation')
MFRotation = Java.type('org.web3d.x3d.jsail.fields.MFRotation')
SFString = Java.type('org.web3d.x3d.jsail.fields.SFString')
MFString = Java.type('org.web3d.x3d.jsail.fields.MFString')
SFTime = Java.type('org.web3d.x3d.jsail.fields.SFTime')
MFTime = Java.type('org.web3d.x3d.jsail.fields.MFTime')
SFVec2d = Java.type('org.web3d.x3d.jsail.fields.SFVec2d')
MFVec2d = Java.type('org.web3d.x3d.jsail.fields.MFVec2d')
SFVec2f = Java.type('org.web3d.x3d.jsail.fields.SFVec2f')
MFVec2f = Java.type('org.web3d.x3d.jsail.fields.MFVec2f')
SFVec3d = Java.type('org.web3d.x3d.jsail.fields.SFVec3d')
MFVec3d = Java.type('org.web3d.x3d.jsail.fields.MFVec3d')
SFVec3f = Java.type('org.web3d.x3d.jsail.fields.SFVec3f')
MFVec3f = Java.type('org.web3d.x3d.jsail.fields.MFVec3f')
SFVec4d = Java.type('org.web3d.x3d.jsail.fields.SFVec4d')
MFVec4d = Java.type('org.web3d.x3d.jsail.fields.MFVec4d')
SFVec4f = Java.type('org.web3d.x3d.jsail.fields.SFVec4f')
MFVec4f = Java.type('org.web3d.x3d.jsail.fields.MFVec4f')
var ConfigurationProperties = Packages.org.web3d.x3d.jsail.ConfigurationProperties;
ConfigurationProperties.showDefaultAttributes = false;
ConfigurationProperties.xsltEngine = ConfigurationProperties.XSLT_ENGINE_NATIVE_JAVA;
ConfigurationProperties.deleteIntermediateFiles = false;
ConfigurationProperties.setStripTrailingZeroes(true);
ConfigurationProperties.setStripDefaultAttributes(true);
function doubleToFloat(d) {
    if (Float32Array)
	return new Float32Array(d);
}
      var X3D0 =  new X3D().setProfile("Immersive").setVersion("3.0")
      .setHead(new head()
        .addMeta(new meta().setName("title").setContent("Trebuchet.x3d"))
        .addMeta(new meta().setName("description").setContent("Working model of a 14th century Trebuchet Catapult."))
        .addMeta(new meta().setName("creator").setContent("LT Joe Roth"))
        .addMeta(new meta().setName("created").setContent("20 June 2001"))
        .addMeta(new meta().setName("modified").setContent("20 October 2019"))
        .addMeta(new meta().setName("version").setContent("7.8"))
        .addMeta(new meta().setName("identifier").setContent("https://www.web3d.org/x3d/content/examples/Basic/StudentProjects/Trebuchet.x3d"))
        .addMeta(new meta().setName("reference").setContent("http://trebuchet.com"))
        .addMeta(new meta().setName("reference").setContent("http://members.home.net/dimona"))
        .addMeta(new meta().setName("subject").setContent("trebuchet catapult Monty Python"))
        .addMeta(new meta().setName("reference").setContent("Permission granted for use of the VRML chicken I own a copy of Monty Python and the Holy Grail I have requested permission to use for non profit use. No response received. I will use the sound clips under \"Fair Use\" clause of the DMCA"))
        .addMeta(new meta().setName("reference").setContent("https://www.web3d.org/WorkingGroups/media/textures/nature/leaves_5.jpg.htm"))
        .addMeta(new meta().setName("reference").setContent("http://www.revemonde.net/UniversalMedia/textures/nature/leaves_5.jpg.htm"))
        .addMeta(new meta().setName("generator").setContent("X3D-Edit 3.3, https://savage.nps.edu/X3D-Edit"))
        .addMeta(new meta().setName("license").setContent("../license.html")))
      .setScene(new Scene()
        .addChild(new WorldInfo().setTitle("Trebuchet.x3d"))
        .addChild(new Background().setBackUrl(Java.to(["https://www.web3d.org/WorkingGroups/media/textures/panoramas/meadow_2_back.jpg"], Java.type("java.lang.String[]"))).setBottomUrl(Java.to(["https://www.web3d.org/WorkingGroups/media/textures/panoramas/meadow_2_bottom.jpg"], Java.type("java.lang.String[]"))).setFrontUrl(Java.to(["https://www.web3d.org/WorkingGroups/media/textures/panoramas/meadow_2_front.jpg"], Java.type("java.lang.String[]"))).setGroundAngle(Java.to(doubleToFloat([1.309,1.570796]), Java.type("float[]"))).setGroundColor(Java.to(doubleToFloat([0.1,0.1,0,0.4,0.25,0.2,0.6,0.6,0.6]), Java.type("float[]"))).setLeftUrl(Java.to(["https://www.web3d.org/WorkingGroups/media/textures/panoramas/meadow_2_left.jpg"], Java.type("java.lang.String[]"))).setRightUrl(Java.to(["https://www.web3d.org/WorkingGroups/media/textures/panoramas/meadow_2_right.jpg"], Java.type("java.lang.String[]"))).setSkyAngle(Java.to(doubleToFloat([1.309,1.57079]), Java.type("float[]"))).setSkyColor(Java.to(doubleToFloat([0,0.2,0.7,0,0.5,1,1,1,1]), Java.type("float[]"))).setTopUrl(Java.to(["https://www.web3d.org/WorkingGroups/media/textures/panoramas/meadow_2_top.jpg"], Java.type("java.lang.String[]"))))
        .addChild(new Sound().setMaxBack(1000).setMaxFront(1000)
          .setSource(new AudioClip().setDEF("HolyGrail").setDescription("HolyGrail").setLoop(true).setUrl(Java.to(["holygral.mp3","http://www.nps.navy.mil/code32/vrml/holygral.mp3"], Java.type("java.lang.String[]")))))
        .addChild(new Shape()
          .setGeometry(new Box().setSize(Java.to(doubleToFloat([10000,1,10000]), Java.type("float[]"))))
          .setAppearance(new Appearance()
            .setTexture(new ImageTexture().setUrl(Java.to(["grass.jpg","https://www.web3d.org/x3d/content/examples/Basic/StudentProjects/grass.jpg"], Java.type("java.lang.String[]"))))))
        .addChild(new Transform().setRotation(Java.to(doubleToFloat([0,1,0,1.57]), Java.type("float[]"))).setScale(Java.to(doubleToFloat([0.5,0.5,0.5]), Java.type("float[]"))).setTranslation(Java.to(doubleToFloat([10.5,6.5,4.5]), Java.type("float[]")))
          .addChild(new Shape()
            .setAppearance(new Appearance().setDEF("TextAppearance")
              .setMaterial(new Material().setDiffuseColor(Java.to(doubleToFloat([1,0,0]), Java.type("float[]"))).setEmissiveColor(Java.to(doubleToFloat([1,1,0]), Java.type("float[]")))))
            .setGeometry(new Text().setString(Java.to(["Click Sling to Select Projectile"], Java.type("java.lang.String[]")))
              .setFontStyle(new FontStyle()))))
        .addChild(new Transform().setRotation(Java.to(doubleToFloat([0,1,0,1.57]), Java.type("float[]"))).setScale(Java.to(doubleToFloat([0.5,0.5,0.5]), Java.type("float[]"))).setTranslation(Java.to(doubleToFloat([11,5.5,6]), Java.type("float[]")))
          .addChild(new Switch().setDEF("Weight").setWhichChoice(0)
            .addChild(new Group()
              .addChild(new Shape()
                .setAppearance(new Appearance().setUSE("TextAppearance"))
                .setGeometry(new Text().setString(Java.to(["Click Here to Change Counter Weight (50 lbs)"], Java.type("java.lang.String[]"))))))
            .addChild(new Group()
              .addChild(new Shape()
                .setAppearance(new Appearance().setUSE("TextAppearance"))
                .setGeometry(new Text().setString(Java.to(["Click Here to Change Counter Weight (500 lbs)"], Java.type("java.lang.String[]"))))))
            .addChild(new Group()
              .addChild(new Shape()
                .setAppearance(new Appearance().setUSE("TextAppearance"))
                .setGeometry(new Text().setString(Java.to(["Click Here to Change Counter Weight (1000 lbs)"], Java.type("java.lang.String[]"))))))
            .addChild(new Group()
              .addChild(new Shape()
                .setAppearance(new Appearance().setUSE("TextAppearance"))
                .setGeometry(new Text().setString(Java.to(["Click Here to Change Counter Weight (10000 lbs)"], Java.type("java.lang.String[]")))))))
          .addChild(new TouchSensor().setDEF("weightselector").setDescription("weight selector"))
          .addChild(new Transform().setTranslation(Java.to(doubleToFloat([8,0,0]), Java.type("float[]")))
            .addChild(new Shape()
              .setGeometry(new Box().setSize(Java.to(doubleToFloat([20,1,1]), Java.type("float[]"))))
              .setAppearance(new Appearance()
                .setMaterial(new Material().setTransparency(1))))))
        .addChild(new Transform().setRotation(Java.to(doubleToFloat([0,1,0,1.57]), Java.type("float[]"))).setTranslation(Java.to(doubleToFloat([10,0.5,4.5]), Java.type("float[]")))
          .addChild(new Transform().setDEF("launch").setTranslation(Java.to(doubleToFloat([0,2,5]), Java.type("float[]")))
            .addChild(new Billboard()
              .addChild(new Shape()
                .setAppearance(new Appearance()
                  .setMaterial(new Material().setDiffuseColor(Java.to(doubleToFloat([1,0,0]), Java.type("float[]")))))
                .setGeometry(new Text().setString(Java.to(["LAUNCH"], Java.type("java.lang.String[]")))
                  .setFontStyle(new FontStyle())))
              .addChild(new Transform().setTranslation(Java.to(doubleToFloat([2,0.3,0]), Java.type("float[]")))
                .addChild(new Shape()
                  .setGeometry(new Box().setSize(Java.to(doubleToFloat([5,1,1]), Java.type("float[]"))))
                  .setAppearance(new Appearance()
                    .setMaterial(new Material().setTransparency(1)))))
              .addChild(new Switch().setDEF("PigdogMonk").setWhichChoice(-1)
                .addChild(new Group()
                  .addChild(new Sound().setMaxBack(1000).setMaxFront(1000)
                    .setSource(new AudioClip().setDEF("PigDogSound").setDescription("PigDogSound").setUrl(Java.to(["pigdog.wav","http://www.nps.navy.mil/code32/vrml/pigdog.wav"], Java.type("java.lang.String[]"))))))
                .addChild(new Group()
                  .addChild(new Sound().setMaxBack(1000).setMaxFront(1000)
                    .setSource(new AudioClip().setDEF("MonkSound").setDescription("MonkSound").setUrl(Java.to(["monks.wav","http://www.nps.navy.mil/code32/vrml/monks.wav"], Java.type("java.lang.String[]"))))))))
            .addChild(new TouchSensor().setDEF("Launch").setDescription("launch!")))
          .addChild(new Transform()
            .addChild(new Switch().setDEF("projectilename").setWhichChoice(0)
              .addChild(new Group()
                .addChild(new Shape()
                  .setAppearance(new Appearance().setUSE("TextAppearance"))
                  .setGeometry(new Text().setString(Java.to(["Bowling Ball (10 lbs)"], Java.type("java.lang.String[]")))
                    .setFontStyle(new FontStyle().setSize(0.5))))
                .addChild(new Sound().setMaxBack(1000).setMaxFront(1000).setPriority(1)
                  .setSource(new AudioClip().setDEF("HolyHandGrenadeSound").setDescription("HolyHandGrenadeSound").setUrl(Java.to(["grenade.wav","http://www.nps.navy.mil/code32/vrml/grenade.wav"], Java.type("java.lang.String[]"))))))
              .addChild(new Group()
                .addChild(new Shape()
                  .setAppearance(new Appearance().setUSE("TextAppearance"))
                  .setGeometry(new Text().setString(Java.to(["Cow (1000 lbs)"], Java.type("java.lang.String[]")))
                    .setFontStyle(new FontStyle().setSize(0.5))))
                .addChild(new Sound().setMaxBack(1000).setMaxFront(1000)
                  .setSource(new AudioClip().setDEF("CowSound").setDescription("CowSound").setUrl(Java.to(["lavache.wav","http://www.nps.navy.mil/code32/vrml/lavache.wav"], Java.type("java.lang.String[]"))))))
              .addChild(new Group()
                .addChild(new Shape()
                  .setAppearance(new Appearance().setUSE("TextAppearance"))
                  .setGeometry(new Text().setString(Java.to(["Chicken (5 lbs)"], Java.type("java.lang.String[]")))
                    .setFontStyle(new FontStyle().setSize(0.5))))
                .addChild(new Sound().setMaxBack(1000).setMaxFront(1000).setPriority(1)
                  .setSource(new AudioClip().setDEF("HamsterSound").setDescription("HamsterSound").setUrl(Java.to(["hamster.wav","http://www.nps.navy.mil/code32/vrml/hamster.wav"], Java.type("java.lang.String[]")))))))))
        .addChild(new Transform().setRotation(Java.to(doubleToFloat([0,1,0,-1.67]), Java.type("float[]")))
          .addChild(new Transform().setDEF("aft").setTranslation(Java.to(doubleToFloat([5,5,15]), Java.type("float[]")))
            .addChild(new Transform().setTranslation(Java.to(doubleToFloat([-2.5,-4.5,-2]), Java.type("float[]")))
              .addChild(new Transform().setUSE("launch")))))
        .addChild(new Transform().setTranslation(Java.to(doubleToFloat([0,3,0]), Java.type("float[]")))
          .addChild(new Shape().setDEF("plank")
            .setGeometry(new Box().setSize(Java.to(doubleToFloat([25,1,1]), Java.type("float[]"))))
            .setAppearance(new Appearance().setDEF("wood")
              .setTexture(new ImageTexture().setDEF("woodTexture").setUrl(Java.to(["wood.gif","https://www.web3d.org/x3d/content/examples/Basic/StudentProjects/wood.gif"], Java.type("java.lang.String[]"))))))
          .addChild(new Transform().setDEF("angledsupport").setRotation(Java.to(doubleToFloat([0,0,1,1]), Java.type("float[]"))).setTranslation(Java.to(doubleToFloat([-5,10,0]), Java.type("float[]")))
            .addChild(new Shape().setUSE("plank")))
          .addChild(new Transform().setDEF("angledsupport2").setRotation(Java.to(doubleToFloat([0,0,1,-1]), Java.type("float[]"))).setTranslation(Java.to(doubleToFloat([5,10,0]), Java.type("float[]")))
            .addChild(new Shape().setUSE("plank")))
          .addChild(new Transform().setDEF("verticalsupport").setRotation(Java.to(doubleToFloat([0,0,1,1.57]), Java.type("float[]"))).setScale(Java.to(doubleToFloat([0.9,1,1]), Java.type("float[]"))).setTranslation(Java.to(doubleToFloat([0,11,0]), Java.type("float[]")))
            .addChild(new Shape().setUSE("plank"))
            .addComments(new CommentsBlock("Main Verticle Support")))
          .addChild(new Transform().setDEF("horizontalsupport").setScale(Java.to(doubleToFloat([0.4,1,1]), Java.type("float[]"))).setTranslation(Java.to(doubleToFloat([0,10,0]), Java.type("float[]")))
            .addChild(new Shape().setUSE("plank")))
          .addChild(new Transform().setRotation(Java.to(doubleToFloat([0,0,1,1.57]), Java.type("float[]"))).setScale(Java.to(doubleToFloat([0.6,1,1]), Java.type("float[]"))).setTranslation(Java.to(doubleToFloat([0,5,10]), Java.type("float[]")))
            .addChild(new Transform().setRotation(Java.to(doubleToFloat([0,1,0,0.4]), Java.type("float[]")))
              .addChild(new Shape().setUSE("plank"))))
          .addChild(new Transform().setDEF("panel").setTranslation(Java.to(doubleToFloat([0,18.2,-0.3]), Java.type("float[]")))
            .addChild(new Shape()
              .setGeometry(new Box().setSize(Java.to(doubleToFloat([5,5,0.5]), Java.type("float[]"))))
              .setAppearance(new Appearance().setUSE("wood"))))
          .addChild(new Transform().setRotation(Java.to(doubleToFloat([1,0,0,-1.57]), Java.type("float[]"))).setTranslation(Java.to(doubleToFloat([0,0.6,2.5]), Java.type("float[]")))
            .addChild(new Transform().setRotation(Java.to(doubleToFloat([0,0,1,1.57]), Java.type("float[]")))
              .addChild(new Shape()
                .setGeometry(new Extrusion().setBeginCap(false).setCrossSection(Java.to(doubleToFloat([1,-0.38,0.92,-0.38,0.71,-0.71,0.38,-0.92,0,-1,-0.38,-0.92,-0.71,-0.71,-0.92,-0.38,-1,-0.38,-1,-1.1,1,-1.1,1,-0.38]), Java.type("float[]"))).setEndCap(false).setSolid(false).setSpine(Java.to(doubleToFloat([0,6,0,0,-11,0]), Java.type("float[]"))))
                .setAppearance(new Appearance().setUSE("wood")))))
          .addChild(new Transform().setDEF("flinger").setCenter(Java.to(doubleToFloat([7,0,0]), Java.type("float[]"))).setRotation(Java.to(doubleToFloat([0,0,1,0.82]), Java.type("float[]"))).setScale(Java.to(doubleToFloat([0.9,1,1]), Java.type("float[]"))).setTranslation(Java.to(doubleToFloat([-7,18,2.5]), Java.type("float[]")))
            .addChild(new Transform()
              .addChild(new Shape()
                .setGeometry(new Box().setSize(Java.to(doubleToFloat([35,1,1]), Java.type("float[]"))))
                .setAppearance(new Appearance().setUSE("wood")))
              .addChild(new Transform().setTranslation(Java.to(doubleToFloat([7,0,0]), Java.type("float[]")))
                .addChild(new Shape()
                  .setGeometry(new Box().setSize(Java.to(doubleToFloat([8,2,2]), Java.type("float[]"))))
                  .setAppearance(new Appearance().setUSE("wood")))))
            .addChild(new Transform().setRotation(Java.to(doubleToFloat([1,0,0,1.57]), Java.type("float[]"))).setScale(Java.to(doubleToFloat([0.2,0.2,0.2]), Java.type("float[]"))).setTranslation(Java.to(doubleToFloat([-15,-1,0]), Java.type("float[]")))
              .addChild(new Shape().setDEF("Torus")
                .setAppearance(new Appearance()
                  .setMaterial(new Material().setSpecularColor(Java.to(doubleToFloat([1,1,1]), Java.type("float[]")))))
                .setGeometry(new Extrusion().setBeginCap(false).setConvex(false).setCreaseAngle(1.57).setCrossSection(Java.to(doubleToFloat([0.9,0,0.81,-0.34,0.63,-0.63,0.34,-0.83,0,-0.9,-0.34,-0.81,-0.63,-0.63,-0.81,-0.34,-0.9,0,-0.81,0.34,-0.63,0.63,-0.34,0.81,0,0.9,0.38,0.81,0.63,0.63,0.81,0.34,0.9,0]), Java.type("float[]"))).setEndCap(false).setSpine(Java.to(doubleToFloat([2,0,0,1.85,0,0.77,1.41,0,1.41,0.77,0,1.85,0,0,2,-0.77,0,1.85,-1.41,0,1.41,-1.85,0,0.77,-2,0,0,-1.85,0,-0.77,-1.41,0,-1.41,-0.77,0,-1.85,0,0,-2,0.77,0,-1.85,1.41,0,-1.41,1.85,0,-0.77,2,0,0]), Java.type("float[]")))))
              .addChild(new Transform().setTranslation(Java.to(doubleToFloat([1,0,2]), Java.type("float[]")))
                .addChild(new Shape()
                  .setAppearance(new Appearance().setDEF("rope")
                    .setTexture(new ImageTexture().setUSE("woodTexture")))
                  .setGeometry(new Sphere().setRadius(1.5)))
                .addComments(new CommentsBlock("knott"))))
            .addComments(new CommentsBlock("The Unicorn"))
            .addChild(new Transform().setRotation(Java.to(doubleToFloat([0,0,1,1.2]), Java.type("float[]"))).setScale(Java.to(doubleToFloat([0.2,0.2,0.2]), Java.type("float[]"))).setTranslation(Java.to(doubleToFloat([-18.3,0.3,0]), Java.type("float[]")))
              .addChild(new Shape()
                .setGeometry(new Cylinder().setHeight(10))
                .setAppearance(new Appearance()
                  .setMaterial(new Material().setSpecularColor(Java.to(doubleToFloat([1,1,1]), Java.type("float[]"))))))
              .addChild(new Transform().setTranslation(Java.to(doubleToFloat([0,-2.5,0]), Java.type("float[]")))
                .addComments(new CommentsBlock("The Unicorn"))
                .addChild(new Shape().setUSE("Torus"))
                .addChild(new Transform().setTranslation(Java.to(doubleToFloat([-2,0,0]), Java.type("float[]")))
                  .addChild(new Shape()
                    .setGeometry(new Sphere().setRadius(1.5))
                    .setAppearance(new Appearance().setUSE("rope")))
                  .addComments(new CommentsBlock("Knott"))))
              .addChild(new Transform().setRotation(Java.to(doubleToFloat([0,0,1,1.2]), Java.type("float[]"))).setTranslation(Java.to(doubleToFloat([15,55,-11]), Java.type("float[]")))
                .addChild(new Transform().setScale(Java.to(doubleToFloat([5,5,5]), Java.type("float[]")))
                  .addChild(new Shape()
                    .setAppearance(new Appearance().setUSE("rope"))
                    .setGeometry(new Extrusion().setBeginCap(false).setCreaseAngle(0.76).setCrossSection(Java.to(doubleToFloat([0.1,0,0.092,-0.038,0.071,-0.071,0.038,-0.092,0,-0.1,-0.038,-0.092,-0.071,-0.071,-0.092,-0.038,-0.1,0,-0.092,0.038,-0.071,0.071,-0.038,0.092,0,0.1,0.038,0.092,0.071,0.071,0.092,0.038,0.1,0]), Java.type("float[]"))).setEndCap(false).setSolid(false).setSpine(Java.to(doubleToFloat([-15.2,1.4,2.2,-12,-0.8,2.2]), Java.type("float[]"))))))))
            .addChild(new Transform().setRotation(Java.to(doubleToFloat([1,0,0,-1.7]), Java.type("float[]"))).setTranslation(Java.to(doubleToFloat([-17,-4.5,0]), Java.type("float[]")))
              .addChild(new Transform().setScale(Java.to(doubleToFloat([0.2,0.2,0.2]), Java.type("float[]")))
                .addComments(new CommentsBlock("Knot"))
                .addChild(new Shape().setUSE("Torus"))
                .addChild(new Transform().setTranslation(Java.to(doubleToFloat([-1,0,1.7]), Java.type("float[]")))
                  .addChild(new Shape()
                    .setGeometry(new Sphere().setRadius(1.5))
                    .setAppearance(new Appearance().setUSE("rope"))))))
            .addChild(new Transform().setDEF("RnS")
              .addChild(new Transform().setDEF("ropes")
                .addChild(new Transform().setRotation(Java.to(doubleToFloat([0,0,1,-0.82]), Java.type("float[]"))).setTranslation(Java.to(doubleToFloat([7,-26,-2.5]), Java.type("float[]")))
                  .addChild(new Shape()
                    .setAppearance(new Appearance().setUSE("rope"))
                    .setGeometry(new Extrusion().setBeginCap(false).setCreaseAngle(0.76).setCrossSection(Java.to(doubleToFloat([0.1,0,0.092,-0.038,0.071,-0.071,0.038,-0.092,0,-0.1,-0.038,-0.092,-0.071,-0.071,-0.092,-0.038,-0.1,0,-0.092,0.038,-0.071,0.071,-0.038,0.092,0,0.1,0.038,0.092,0.071,0.071,0.092,0.038,0.1,0]), Java.type("float[]"))).setEndCap(false).setSolid(false).setSpine(Java.to(doubleToFloat([-33,0.9,2.5,-18.5,1.9,2.55]), Java.type("float[]")))))
                  .addChild(new Shape()
                    .setAppearance(new Appearance().setUSE("rope"))
                    .setGeometry(new Extrusion().setBeginCap(false).setCreaseAngle(0.76).setCrossSection(Java.to(doubleToFloat([0.1,0,0.092,-0.038,0.071,-0.071,0.038,-0.092,0,-0.1,-0.038,-0.092,-0.071,-0.071,-0.092,-0.038,-0.1,0,-0.092,0.038,-0.071,0.071,-0.038,0.092,0,0.1,0.038,0.092,0.071,0.071,0.092,0.038,0.1,0]), Java.type("float[]"))).setEndCap(false).setSolid(false).setSpine(Java.to(doubleToFloat([-35.7,-0.8,2.5,-18.8,-0.8,2.55]), Java.type("float[]")))))))
              .addChild(new Transform().setDEF("sling").setRotation(Java.to(doubleToFloat([0,0,1,-0.82]), Java.type("float[]"))).setTranslation(Java.to(doubleToFloat([-4,-15.3,0]), Java.type("float[]")))
                .addChild(new Transform()
                  .addChild(new Transform().setRotation(Java.to(doubleToFloat([0,1,0,-1.57]), Java.type("float[]"))).setScale(Java.to(doubleToFloat([1,1.3,1]), Java.type("float[]"))).setTranslation(Java.to(doubleToFloat([0.5,0,-1]), Java.type("float[]")))
                    .addChild(new Transform().setRotation(Java.to(doubleToFloat([0,0,1,1.57]), Java.type("float[]")))
                      .addChild(new Transform().setScale(Java.to(doubleToFloat([0.3,0.3,0.3]), Java.type("float[]")))
                        .addChild(new Shape().setDEF("halfsling")
                          .setAppearance(new Appearance().setDEF("clear")
                            .setMaterial(new Material().setTransparency(0.5)))
                          .setGeometry(new Extrusion().setCrossSection(Java.to(doubleToFloat([0,0,0,5,0.5,7,1,8,2,9,3,11,3.5,11.2,4,11,5,9,6,8,6.5,7,6.7,5,6.7,0,0,0]), Java.type("float[]"))).setSpine(Java.to(doubleToFloat([0,0,0,0.1,0,0]), Java.type("float[]")))))
                        .addChild(new Transform().setScale(Java.to(doubleToFloat([0.3,0.3,0.3]), Java.type("float[]"))).setTranslation(Java.to(doubleToFloat([0,-3.5,11.5]), Java.type("float[]")))
                          .addChild(new Shape().setUSE("Torus"))
                          .addChild(new Transform().setTranslation(Java.to(doubleToFloat([0,0,2]), Java.type("float[]")))
                            .addChild(new Shape()
                              .setAppearance(new Appearance().setUSE("rope"))
                              .setGeometry(new Sphere().setRadius(1.5))))))
                      .addChild(new Transform().setScale(Java.to(doubleToFloat([0.3,0.3,0.3]), Java.type("float[]"))).setTranslation(Java.to(doubleToFloat([2,0,0]), Java.type("float[]")))
                        .addChild(new Shape().setUSE("halfsling"))
                        .addChild(new Transform().setScale(Java.to(doubleToFloat([0.3,0.3,0.3]), Java.type("float[]"))).setTranslation(Java.to(doubleToFloat([0,-3.5,11.3]), Java.type("float[]")))
                          .addChild(new Shape().setUSE("Torus"))
                          .addChild(new Transform().setTranslation(Java.to(doubleToFloat([0,0,2]), Java.type("float[]")))
                            .addChild(new Shape()
                              .setAppearance(new Appearance().setUSE("rope"))
                              .setGeometry(new Sphere().setRadius(1.5))))))
                      .addChild(new Transform().setTranslation(Java.to(doubleToFloat([1,-1,0]), Java.type("float[]")))
                        .addChild(new Shape()
                          .setGeometry(new Extrusion().setBeginCap(false).setCreaseAngle(0.785).setCrossSection(Java.to(doubleToFloat([1,0,0.92,-0.38,0.71,-0.71,0.38,-0.92,0,-1,-0.38,-0.92,-0.71,-0.71,-0.92,-0.38,-1,0]), Java.type("float[]"))).setEndCap(false).setSolid(false).setSpine(Java.to(doubleToFloat([0,-1,0,0,1,0]), Java.type("float[]"))))
                          .setAppearance(new Appearance().setUSE("clear")))))
                    .addChild(new TouchSensor().setDEF("LauncheeChoice").setDescription("launcher choice")))
                  .addChild(new Transform().setDEF("projectiletransform").setScale(Java.to(doubleToFloat([0.01,0.01,0.01]), Java.type("float[]")))
                    .addChild(new Switch().setDEF("projectile").setWhichChoice(0)
                      .addChild(new Group()
                        .addChild(new Transform().setTranslation(Java.to(doubleToFloat([0,0.7,0]), Java.type("float[]")))
                          .addChild(new Shape()
                            .setGeometry(new Sphere().setRadius(0.7))
                            .setAppearance(new Appearance().setDEF("black")
                              .setMaterial(new Material().setDiffuseColor(Java.to(doubleToFloat([0,0,0]), Java.type("float[]"))).setSpecularColor(Java.to(doubleToFloat([1,1,1]), Java.type("float[]"))))))))
                      .addChild(new Group()
                        .addChild(new Transform()
                          .addChild(new Inline().setUrl(Java.to(["cow.wrl","http://www.uoguelph.ca/~dchiu/cow.wrl"], Java.type("java.lang.String[]"))))))
                      .addChild(new Group()
                        .addChild(new Transform().setRotation(Java.to(doubleToFloat([0,1,0,1.57]), Java.type("float[]"))).setScale(Java.to(doubleToFloat([0.4,0.4,0.4]), Java.type("float[]"))).setTranslation(Java.to(doubleToFloat([0,0.7,0]), Java.type("float[]")))
                          .addChild(new Inline().setUrl(Java.to(["vrml_ginger.wrl","http://home.inreach.com/ntamura/vrml/vrml_ginger.wrl"], Java.type("java.lang.String[]"))))))))))))
          .addChild(new Transform().setRotation(Java.to(doubleToFloat([1,0,0,1.57]), Java.type("float[]"))).setTranslation(Java.to(doubleToFloat([0,18,2.5]), Java.type("float[]")))
            .addChild(new Shape()
              .setGeometry(new Cylinder().setHeight(8).setRadius(0.4))
              .setAppearance(new Appearance()
                .setMaterial(new Material().setDiffuseColor(Java.to(doubleToFloat([0,0,0]), Java.type("float[]"))).setSpecularColor(Java.to(doubleToFloat([1,1,1]), Java.type("float[]"))))))
            .addComments(new CommentsBlock("Top Pivot")))
          .addChild(new Transform().setDEF("verticalweight")
            .addChild(new Transform().setTranslation(Java.to(doubleToFloat([4,18,1.8]), Java.type("float[]")))
              .addChild(new Shape()
                .setGeometry(new Box().setSize(Java.to(doubleToFloat([1,10,0.5]), Java.type("float[]"))))
                .setAppearance(new Appearance().setUSE("wood"))))
            .addChild(new Transform().setTranslation(Java.to(doubleToFloat([4,18,3.2]), Java.type("float[]")))
              .addChild(new Shape()
                .setGeometry(new Box().setSize(Java.to(doubleToFloat([1,10,0.5]), Java.type("float[]"))))
                .setAppearance(new Appearance().setUSE("wood"))))
            .addChild(new Transform().setTranslation(Java.to(doubleToFloat([4,14,2.5]), Java.type("float[]")))
              .addComments(new CommentsBlock("CounterWeight"))
              .addChild(new Shape()
                .setGeometry(new Cylinder().setHeight(4).setRadius(1.5))
                .setAppearance(new Appearance()
                  .setMaterial(new Material().setDiffuseColor(Java.to(doubleToFloat([0,0,0]), Java.type("float[]"))).setSpecularColor(Java.to(doubleToFloat([1,1,1]), Java.type("float[]")))))))
            .addChild(new Transform().setRotation(Java.to(doubleToFloat([1,0,0,1.57]), Java.type("float[]"))).setTranslation(Java.to(doubleToFloat([4,22,2.5]), Java.type("float[]")))
              .addChild(new Shape()
                .setGeometry(new Cylinder().setHeight(2.5).setRadius(0.3))
                .setAppearance(new Appearance()
                  .setMaterial(new Material().setDiffuseColor(Java.to(doubleToFloat([0,0,0]), Java.type("float[]"))).setSpecularColor(Java.to(doubleToFloat([1,1,1]), Java.type("float[]"))))))))
          .addChild(new Transform().setRotation(Java.to(doubleToFloat([0,0,1,1.57]), Java.type("float[]"))).setScale(Java.to(doubleToFloat([0.2,0.2,0.2]), Java.type("float[]"))).setTranslation(Java.to(doubleToFloat([-11.5,-1,2]), Java.type("float[]")))
            .addChild(new Transform().setDEF("screw").setRotation(Java.to(doubleToFloat([1,0,0,1.57]), Java.type("float[]")))
              .addChild(new Shape().setUSE("Torus"))
              .addChild(new Transform().setRotation(Java.to(doubleToFloat([1,0,0,-1.57]), Java.type("float[]"))).setTranslation(Java.to(doubleToFloat([0,0,7]), Java.type("float[]")))
                .addChild(new Shape()
                  .setGeometry(new Cylinder().setHeight(10).setRadius(0.7))
                  .setAppearance(new Appearance()
                    .setMaterial(new Material().setSpecularColor(Java.to(doubleToFloat([1,1,1]), Java.type("float[]"))))))))
            .addChild(new Transform().setTranslation(Java.to(doubleToFloat([0,0,7]), Java.type("float[]")))
              .addChild(new Transform().setUSE("screw")))
            .addComments(new CommentsBlock("Release Pin"))
            .addChild(new Transform().setDEF("Pin").setRotation(Java.to(doubleToFloat([1,0,0,-1.57]), Java.type("float[]"))).setTranslation(Java.to(doubleToFloat([0,0,-3]), Java.type("float[]")))
              .addChild(new Transform().setUSE("screw"))))
          .addChild(new Transform().setTranslation(Java.to(doubleToFloat([0,0,5]), Java.type("float[]")))
            .addChild(new Shape().setUSE("plank"))
            .addChild(new Transform().setUSE("angledsupport"))
            .addChild(new Transform().setUSE("angledsupport2"))
            .addChild(new Transform().setUSE("verticalsupport"))
            .addChild(new Transform().setUSE("horizontalsupport"))
            .addChild(new Transform().setRotation(Java.to(doubleToFloat([0,1,0,1.57]), Java.type("float[]"))).setScale(Java.to(doubleToFloat([0.6,1,1]), Java.type("float[]"))).setTranslation(Java.to(doubleToFloat([0,-11,-2.5]), Java.type("float[]")))
              .addChild(new Transform().setUSE("horizontalsupport")))
            .addChild(new Transform().setRotation(Java.to(doubleToFloat([0,0,1,-1.57]), Java.type("float[]"))).setScale(Java.to(doubleToFloat([0.6,1,1]), Java.type("float[]"))).setTranslation(Java.to(doubleToFloat([0,5,-10]), Java.type("float[]")))
              .addChild(new Transform().setRotation(Java.to(doubleToFloat([0,1,0,0.4]), Java.type("float[]")))
                .addChild(new Shape().setUSE("plank"))))
            .addChild(new Transform().setTranslation(Java.to(doubleToFloat([0,0,0.6]), Java.type("float[]")))
              .addChild(new Transform().setUSE("panel"))))
          .addChild(new Transform().setTranslation(Java.to(doubleToFloat([10,-1,2.5]), Java.type("float[]")))
            .addChild(new Shape().setDEF("Axle")
              .setGeometry(new Box().setSize(Java.to(doubleToFloat([1,1,8]), Java.type("float[]"))))
              .setAppearance(new Appearance().setUSE("wood")))
            .addChild(new Transform().setRotation(Java.to(doubleToFloat([1,0,0,1.57]), Java.type("float[]"))).setTranslation(Java.to(doubleToFloat([0,0,4.5]), Java.type("float[]")))
              .addChild(new Shape().setDEF("wheel")
                .setGeometry(new Cylinder().setRadius(2))
                .setAppearance(new Appearance().setUSE("wood")))
              .addChild(new Shape().setDEF("tracks")
                .setGeometry(new Sphere().setRadius(1.5))
                .setAppearance(new Appearance().setUSE("black")))
              .addChild(new Transform().setTranslation(Java.to(doubleToFloat([0,0.55,0]), Java.type("float[]")))
                .addChild(new Shape().setDEF("hub")
                  .setGeometry(new Sphere().setRadius(1.5))
                  .setAppearance(new Appearance().setUSE("black")))))
            .addChild(new Transform().setRotation(Java.to(doubleToFloat([1,0,0,1.57]), Java.type("float[]"))).setTranslation(Java.to(doubleToFloat([0,0,-4.5]), Java.type("float[]")))
              .addChild(new Shape().setUSE("wheel"))
              .addChild(new Shape().setUSE("tracks"))
              .addChild(new Transform().setTranslation(Java.to(doubleToFloat([0,-0.55,0]), Java.type("float[]")))
                .addChild(new Shape().setUSE("hub")))))
          .addChild(new Transform().setTranslation(Java.to(doubleToFloat([-10,-1,2.5]), Java.type("float[]")))
            .addChild(new Shape().setUSE("Axle"))
            .addChild(new Transform().setRotation(Java.to(doubleToFloat([1,0,0,1.57]), Java.type("float[]"))).setTranslation(Java.to(doubleToFloat([0,0,4.5]), Java.type("float[]")))
              .addChild(new Shape().setUSE("wheel"))
              .addChild(new Shape().setUSE("tracks"))
              .addChild(new Transform().setTranslation(Java.to(doubleToFloat([0,0.55,0]), Java.type("float[]")))
                .addChild(new Shape().setUSE("hub"))))
            .addChild(new Transform().setRotation(Java.to(doubleToFloat([1,0,0,1.57]), Java.type("float[]"))).setTranslation(Java.to(doubleToFloat([0,0,-4.5]), Java.type("float[]")))
              .addChild(new Shape().setUSE("wheel"))
              .addChild(new Shape().setUSE("tracks"))
              .addChild(new Transform().setTranslation(Java.to(doubleToFloat([0,-0.55,0]), Java.type("float[]")))
                .addChild(new Shape().setUSE("hub"))))
            .addChild(new Transform().setRotation(Java.to(doubleToFloat([0,1,0,-0.6]), Java.type("float[]"))).setTranslation(Java.to(doubleToFloat([0,100,400]), Java.type("float[]")))
              .addChild(new Transform().setTranslation(Java.to(doubleToFloat([1,3,0]), Java.type("float[]")))
                .addChild(new Viewpoint().setDescription("Side")))
              .addChild(new Transform().setUSE("launch"))
              .addChild(new Transform()
                .addChild(new TouchSensor().setUSE("LauncheeChoice"))
                .addChild(new Switch().setUSE("projectilename"))
                .addChild(new Transform().setTranslation(Java.to(doubleToFloat([2.5,0,0]), Java.type("float[]")))
                  .addChild(new Shape()
                    .setGeometry(new Box().setSize(Java.to(doubleToFloat([5,0.5,0.5]), Java.type("float[]"))))
                    .setAppearance(new Appearance()
                      .setMaterial(new Material().setTransparency(1))))))
              .addChild(new Transform().setScale(Java.to(doubleToFloat([0.5,0.5,0.5]), Java.type("float[]"))).setTranslation(Java.to(doubleToFloat([0,-1,0]), Java.type("float[]")))
                .addChild(new TouchSensor().setUSE("weightselector"))
                .addChild(new Switch().setUSE("Weight"))
                .addChild(new Transform().setTranslation(Java.to(doubleToFloat([8,0,0]), Java.type("float[]")))
                  .addChild(new Shape()
                    .setGeometry(new Box().setSize(Java.to(doubleToFloat([17,1,0.5]), Java.type("float[]"))))
                    .setAppearance(new Appearance()
                      .setMaterial(new Material().setTransparency(1)))))))
            .addChild(new Transform().setDEF("ProjectileTransform").setTranslation(Java.to(doubleToFloat([14.25,1.25,0]), Java.type("float[]")))
              .addChild(new Switch().setUSE("projectile"))
              .addChild(new Transform().setRotation(Java.to(doubleToFloat([0,1,0,1.57]), Java.type("float[]"))).setTranslation(Java.to(doubleToFloat([0,1,0]), Java.type("float[]")))
                .addChild(new Viewpoint().setDescription("Projectile Cam").setPosition(Java.to(doubleToFloat([0,0,15]), Java.type("float[]"))))))
            .addChild(new Transform().setTranslation(Java.to(doubleToFloat([20,2,0]), Java.type("float[]")))
              .addChild(new Transform().setDEF("Front").setRotation(Java.to(doubleToFloat([0,1,0,1.57]), Java.type("float[]")))
                .addChild(new Viewpoint().setDescription("Fore"))))
            .addChild(new Transform().setTranslation(Java.to(doubleToFloat([-8,4,0]), Java.type("float[]")))
              .addChild(new Transform().setRotation(Java.to(doubleToFloat([0,1,0,-1.57]), Java.type("float[]")))
                .addChild(new Viewpoint().setDescription("Aft"))))
            .addChild(new Script().setDEF("WeightScript")
              .addField(new field().setType(field.TYPE_SFBOOL).setName("set_boolean").setAccessType(field.ACCESSTYPE_INPUTONLY))
              .addField(new field().setType(field.TYPE_SFINT32).setName("whichchoice").setAccessType(field.ACCESSTYPE_OUTPUTONLY))
              .addField(new field().setType(field.TYPE_SFFLOAT).setName("CounterWeight").setAccessType(field.ACCESSTYPE_OUTPUTONLY))
              .setSourceCode(`ecmascript:


function initialize ()
{
	whichchoice =0;
	CounterWeight=100;
}

function set_boolean ( boolean_input, eventTime)
{

	if ( boolean_input== false ) { return; } // ignore the unclick
        whichchoice = whichchoice +1;
	if (whichchoice == 0)CounterWeight=50.00;
	if (whichchoice == 1)CounterWeight=500.00;
	if (whichchoice == 2)CounterWeight=1000.00;
	if (whichchoice == 3)CounterWeight=10000.00;
        if ( whichchoice ==4 ) { whichchoice = 0; CounterWeight=50; }


        Browser.println ('CounterWeight ='+CounterWeight);
}`))
            .addChild(new Script().setDEF("LauncheeScript")
              .addField(new field().setType(field.TYPE_SFBOOL).setName("set_boolean").setAccessType(field.ACCESSTYPE_INPUTONLY))
              .addField(new field().setType(field.TYPE_SFINT32).setName("whichchoice").setAccessType(field.ACCESSTYPE_OUTPUTONLY))
              .addField(new field().setType(field.TYPE_SFFLOAT).setName("ProjectileWeight").setAccessType(field.ACCESSTYPE_OUTPUTONLY))
              .setSourceCode(`ecmascript:

function set_boolean (boolean_input, eventTime)
{
	if ( boolean_input== false ) { return; } // ignore unclick
        whichchoice = whichchoice +1;
        if (whichchoice == 0)ProjectileWeight=10.00;
        if (whichchoice == 1)ProjectileWeight=1000.00;
	if (whichchoice == 2)ProjectileWeight=5;

	if ( whichchoice ==3 ) { whichchoice = 0; ProjectileWeight=10.00; }
	Browser.println ('Projectile Weight'+ProjectileWeight);
}`))
            .addChild(new Script().setDEF("PigdogMonkScript")
              .addField(new field().setType(field.TYPE_SFBOOL).setName("set_boolean").setAccessType(field.ACCESSTYPE_INPUTONLY))
              .addField(new field().setType(field.TYPE_SFINT32).setName("whichchoice").setAccessType(field.ACCESSTYPE_OUTPUTONLY))
              .setSourceCode(`ecmascript:

function set_boolean (boolean_input, eventTime)
{
	if ( boolean_input== false ) { return; } // ignore unclick

        whichchoice = whichchoice +1;

        if ( whichchoice ==2 )  whichchoice = 0;


}`))
            .addChild(new Script().setDEF("Mover")
              .addField(new field().setType(field.TYPE_SFFLOAT).setName("set_fraction").setAccessType(field.ACCESSTYPE_INPUTONLY))
              .addField(new field().setType(field.TYPE_SFFLOAT).setName("set_MassCounterWeight").setAccessType(field.ACCESSTYPE_INPUTONLY))
              .addField(new field().setType(field.TYPE_SFFLOAT).setName("set_MassProjectileWeight").setAccessType(field.ACCESSTYPE_INPUTONLY))
              .addField(new field().setType(field.TYPE_SFFLOAT).setName("MassCounterWeight").setAccessType(field.ACCESSTYPE_INITIALIZEONLY).setValue("1"))
              .addField(new field().setType(field.TYPE_SFFLOAT).setName("MassProjectileWeight").setAccessType(field.ACCESSTYPE_INITIALIZEONLY).setValue("1"))
              .addField(new field().setType(field.TYPE_SFVEC3F).setName("transparent").setAccessType(field.ACCESSTYPE_OUTPUTONLY))
              .addField(new field().setType(field.TYPE_SFVEC3F).setName("value_changed").setAccessType(field.ACCESSTYPE_OUTPUTONLY))
              .setSourceCode(`ecmascript:

function initialize ()
{
	MassCounterWeight=100;
	MassProjectileWeight=10;
	Browser.println ('MassCounterWeight =' + MassCounterWeight);
	Browser.println ('MassProjectileWeight =' + MassProjectileWeight);
}

function set_MassProjectileWeight (value, timestamp)
{
	MassProjectileWeight = value;
	Browser.println ('new MassProjectileWeight =' + MassProjectileWeight);
}
function set_MassCounterWeight (value2, timestamp)
{
	MassCounterWeight = value2;
	Browser.println ('new MassCounterWeight =' + MassCounterWeight);
}


function set_fraction ( fraction, eventTime )
{
	var TrebuchetHeight=45;
	var Height =25;
      	x = (2*(MassCounterWeight/MassProjectileWeight)*Height*fraction)-.5*TrebuchetHeight;
	// start at TrebuchetHeight and keep along z axis (z=zero)
	y =  (MassCounterWeight/MassProjectileWeight)*Height*Math.sin(fraction*3.14);
        z = 0;
        transparent = new SFVec3f (1,1,1);
     if (y <1.5*TrebuchetHeight  )if (x<TrebuchetHeight)
		{
		x=x-10;
		y=y+1;
		transparent = new SFVec3f(.01, .01, .01);
			}

	value_changed = new SFVec3f (x, y, z);
	Browser.println ('x=' + value_changed[0] + ' y=' + value_changed[1] + ' z=' + value_changed[2]);
}`))))
        .addChild(new TimeSensor().setDEF("clock").setCycleInterval(10))
        .addChild(new PositionInterpolator().setDEF("verticalweightpath").setKey(Java.to(doubleToFloat([0,0.1,0.2,0.2,0.3,0.9]), Java.type("float[]"))).setKeyValue(Java.to(doubleToFloat([1.4,1.6,0,1,-8,0,-3.5,-12,0,-3.5,-12,0,1.2,-8,0,1.4,1.6,0]), Java.type("float[]"))))
        .addChild(new OrientationInterpolator().setDEF("flingerangles").setKey(Java.to(doubleToFloat([0,0.1,0.2,0.2,0.3,0.9]), Java.type("float[]"))).setKeyValue(Java.to(doubleToFloat([0,0,1,0.82,0,0,1,-0.77,0,0,1,-1.57,0,0,1,-1.57,0,0,1,-0.77,0,0,1,0.82]), Java.type("float[]"))))
        .addChild(new PositionInterpolator().setDEF("pinpath").setKey(Java.to(doubleToFloat([0,0.01,0.95,1]), Java.type("float[]"))).setKeyValue(Java.to(doubleToFloat([0,0,-3,0,0,-10,0,0,-10,0,0,-3]), Java.type("float[]"))))
        .addChild(new OrientationInterpolator().setDEF("RnSAngels").setKey(Java.to(doubleToFloat([0,0.7,1]), Java.type("float[]"))).setKeyValue(Java.to(doubleToFloat([0,0,1,0,0,0,1,-3.14,0,0,1,0]), Java.type("float[]"))))
        .addChild(new PositionInterpolator().setDEF("invisiable").setKey(Java.to(doubleToFloat([0,0.2,0.98,0.99]), Java.type("float[]"))).setKeyValue(Java.to(doubleToFloat([1,1,1,0.01,0.01,0.01,0.01,0.01,0.01,1,1,1]), Java.type("float[]"))))
        .addChild(new ROUTE().setFromField("fraction_changed").setFromNode("clock").setToField("set_fraction").setToNode("invisiable"))
        .addChild(new ROUTE().setFromField("value_changed").setFromNode("invisiable").setToField("set_scale").setToNode("projectiletransform"))
        .addChild(new ROUTE().setFromField("CounterWeight").setFromNode("WeightScript").setToField("set_MassCounterWeight").setToNode("Mover"))
        .addChild(new ROUTE().setFromField("ProjectileWeight").setFromNode("LauncheeScript").setToField("set_MassProjectileWeight").setToNode("Mover"))
        .addChild(new ROUTE().setFromField("fraction_changed").setFromNode("clock").setToField("set_fraction").setToNode("Mover"))
        .addChild(new ROUTE().setFromField("value_changed").setFromNode("Mover").setToField("set_translation").setToNode("ProjectileTransform"))
        .addChild(new ROUTE().setFromField("transparent").setFromNode("Mover").setToField("set_scale").setToNode("ProjectileTransform"))
        .addChild(new ROUTE().setFromField("touchTime").setFromNode("Launch").setToField("set_startTime").setToNode("clock"))
        .addChild(new ROUTE().setFromField("isActive").setFromNode("Launch").setToField("set_boolean").setToNode("PigdogMonkScript"))
        .addChild(new ROUTE().setFromField("touchTime").setFromNode("Launch").setToField("set_startTime").setToNode("PigDogSound"))
        .addChild(new ROUTE().setFromField("touchTime").setFromNode("Launch").setToField("set_startTime").setToNode("MonkSound"))
        .addChild(new ROUTE().setFromField("whichchoice").setFromNode("PigdogMonkScript").setToField("whichChoice").setToNode("PigdogMonk"))
        .addChild(new ROUTE().setFromField("touchTime").setFromNode("LauncheeChoice").setToField("set_startTime").setToNode("HolyHandGrenadeSound"))
        .addChild(new ROUTE().setFromField("touchTime").setFromNode("LauncheeChoice").setToField("set_startTime").setToNode("CowSound"))
        .addChild(new ROUTE().setFromField("touchTime").setFromNode("LauncheeChoice").setToField("set_startTime").setToNode("HamsterSound"))
        .addChild(new ROUTE().setFromField("isActive").setFromNode("LauncheeChoice").setToField("set_boolean").setToNode("LauncheeScript"))
        .addChild(new ROUTE().setFromField("whichchoice").setFromNode("LauncheeScript").setToField("whichChoice").setToNode("projectile"))
        .addChild(new ROUTE().setFromField("whichchoice").setFromNode("LauncheeScript").setToField("whichChoice").setToNode("projectilename"))
        .addChild(new ROUTE().setFromField("isActive").setFromNode("weightselector").setToField("set_boolean").setToNode("WeightScript"))
        .addChild(new ROUTE().setFromField("whichchoice").setFromNode("WeightScript").setToField("whichChoice").setToNode("Weight"))
        .addChild(new ROUTE().setFromField("fraction_changed").setFromNode("clock").setToField("set_fraction").setToNode("flingerangles"))
        .addChild(new ROUTE().setFromField("value_changed").setFromNode("flingerangles").setToField("set_rotation").setToNode("flinger"))
        .addChild(new ROUTE().setFromField("fraction_changed").setFromNode("clock").setToField("set_fraction").setToNode("verticalweightpath"))
        .addChild(new ROUTE().setFromField("value_changed").setFromNode("verticalweightpath").setToField("set_translation").setToNode("verticalweight"))
        .addChild(new ROUTE().setFromField("fraction_changed").setFromNode("clock").setToField("set_fraction").setToNode("pinpath"))
        .addChild(new ROUTE().setFromField("value_changed").setFromNode("pinpath").setToField("set_translation").setToNode("Pin")))      ;
    X3D0.toFileX3D("../data/Trebuchet.new.graal.x3d");
    X3D0.toFileJSON("../data/Trebuchet.new.graal.json");
