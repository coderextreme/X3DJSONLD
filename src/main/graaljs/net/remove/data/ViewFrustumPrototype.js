load('X3Dautoclass.js');
var ConfigurationProperties = Packages.org.web3d.x3d.jsail.ConfigurationProperties;
ConfigurationProperties.showDefaultAttributes = false;
ConfigurationProperties.xsltEngine = ConfigurationProperties.XSLT_ENGINE_NATIVE_JAVA;
ConfigurationProperties.deleteIntermediateFiles = false;
ConfigurationProperties.setStripTrailingZeroes(true);
ConfigurationProperties.setStripDefaultAttributes(true);
function doubleToFloat(d) {
    if (Float32Array)
	return new Float32Array(d);
}
      var X3D0 =  new X3D().setProfile("Immersive").setVersion("4.0")
      .setHead(new head()
        .addMeta(new meta().setName("title").setContent("ViewFrustumPrototype.x3d"))
        .addMeta(new meta().setName("description").setContent("Define a view frustum associated with a given pair of Viewpoint and NavigationInfo nodes, provided as a reusable prototype."))
        .addMeta(new meta().setName("creator").setContent("Don Brutzman"))
        .addMeta(new meta().setName("translated").setContent("16 August 2008"))
        .addMeta(new meta().setName("modified").setContent("20 October 2019"))
        .addMeta(new meta().setName("reference").setContent("ViewFrustumExample.x3d"))
        .addMeta(new meta().setName("drawing").setContent("ViewFrustumComputation.png"))
        .addMeta(new meta().setName("Image").setContent("ViewFrustumOverheadView.png"))
        .addMeta(new meta().setName("Image").setContent("ViewFrustumObliqueView.png"))
        .addMeta(new meta().setName("subject").setContent("view culling frustum"))
        .addMeta(new meta().setName("identifier").setContent("http://X3dGraphics.com/examples/X3dForWebAuthors/Chapter14Prototypes/ViewFrustumPrototype.x3d"))
        .addMeta(new meta().setName("generator").setContent("X3D-Edit 3.3, https://savage.nps.edu/X3D-Edit"))
        .addMeta(new meta().setName("license").setContent("../license.html")))
      .setScene(new Scene()
        .addChild(new WorldInfo().setTitle("ViewFrustumPrototype.x3d"))
        .addChild(new ProtoDeclare().setName("ViewFrustum").setAppinfo("Display view frustum associated with a given pair of Viewpoint NavigationInfo nodes")
          .setProtoInterface(new ProtoInterface()
            .addField(new field().setType(field.TYPE_SFNODE).setName("ViewpointNode").setAccessType(field.ACCESSTYPE_INITIALIZEONLY).setAppinfo("required: insert Viewpoint DEF or USE node for view of interest")
              .addComments(new CommentsBlock("NULL node, ProtoInstance must provide")))
            .addField(new field().setType(field.TYPE_SFNODE).setName("NavigationInfoNode").setAccessType(field.ACCESSTYPE_INITIALIZEONLY).setAppinfo("required: insert NavigationInfo DEF or USE node of interest")
              .addComments(new CommentsBlock("NULL node, ProtoInstance must provide")))
            .addField(new field().setType(field.TYPE_SFBOOL).setName("visible").setAccessType(field.ACCESSTYPE_INPUTOUTPUT).setAppinfo("whether or not frustum geometry is rendered").setValue("true"))
            .addField(new field().setType(field.TYPE_SFCOLOR).setName("lineColor").setAccessType(field.ACCESSTYPE_INPUTOUTPUT).setAppinfo("RGB color of ViewFrustum outline, default value 0.9 0.9 0.9").setValue("0.9 0.9 0.9"))
            .addField(new field().setType(field.TYPE_SFCOLOR).setName("frustumColor").setAccessType(field.ACCESSTYPE_INPUTOUTPUT).setAppinfo("RGB color of ViewFrustum hull geometry, default value 0.8 0.8 0.8").setValue("0.8 0.8 0.8"))
            .addField(new field().setType(field.TYPE_SFFLOAT).setName("transparency").setAccessType(field.ACCESSTYPE_INPUTOUTPUT).setAppinfo("transparency of ViewFrustum hull geometry, default value 0.5").setValue("0.5"))
            .addField(new field().setType(field.TYPE_SFFLOAT).setName("aspectRatio").setAccessType(field.ACCESSTYPE_INPUTOUTPUT).setAppinfo("assumed ratio height/width, default value 0.75").setValue("0.75"))
            .addField(new field().setType(field.TYPE_SFBOOL).setName("trace").setAccessType(field.ACCESSTYPE_INITIALIZEONLY).setAppinfo("debug support, default false").setValue("false")))
          .setProtoBody(new ProtoBody()
            .addChild(new Switch().setDEF("VisibilitySwitch").setWhichChoice(-1)
              .addChild(new Transform().setDEF("PositionTransform").setRotation(Java.to(doubleToFloat([0,1,0,3.14159]), Java.type("float[]")))
                .addChild(new Transform().setDEF("OrientationTransform")
                  .addChild(new Shape()
                    .setGeometry(new IndexedLineSet().setDEF("FrustumLines").setCoordIndex(Java.to([0,1,2,3,0,-1,4,5,6,7,4,-1,0,4,-1,1,5,-1,2,6,-1,3,7,-1], Java.type("int[]")))
                      .setCoord(new Coordinate().setDEF("FrustumCoordinate").setPoint(Java.to(doubleToFloat([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]), Java.type("float[]")))))
                    .setAppearance(new Appearance()
                      .setMaterial(new Material()
                        .setIS(new IS()
                          .addConnect(new connect().setNodeField("emissiveColor").setProtoField("lineColor"))))))
                  .addChild(new Shape()
                    .setGeometry(new Extrusion().setDEF("FrustumExtrusion"))
                    .setAppearance(new Appearance().setDEF("FrustumAppearance")
                      .setMaterial(new Material()
                        .setIS(new IS()
                          .addConnect(new connect().setNodeField("diffuseColor").setProtoField("frustumColor"))
                          .addConnect(new connect().setNodeField("transparency").setProtoField("transparency"))))))
                  .addChild(new Shape()
                    .setGeometry(new Sphere().setRadius(0.08))
                    .setAppearance(new Appearance().setUSE("FrustumAppearance"))))))
            .addChild(new Script().setDEF("GeometryComputationScript").setDirectOutput(true).setUrl(Java.to(["ViewFrustumPrototypeScript.js"], Java.type("java.lang.String[]")))
              .addField(new field().setType(field.TYPE_SFBOOL).setName("visible").setAccessType(field.ACCESSTYPE_INPUTOUTPUT).setAppinfo("Whether or not frustum geometry is rendered"))
              .addField(new field().setType(field.TYPE_SFINT32).setName("visibilitySwitchSelection").setAccessType(field.ACCESSTYPE_OUTPUTONLY).setAppinfo("Adjust Switch selection to make geometry visible or not"))
              .addField(new field().setType(field.TYPE_SFNODE).setName("ViewpointNode").setAccessType(field.ACCESSTYPE_INITIALIZEONLY)
                .addComments(new CommentsBlock("initialization node (if any) goes here")))
              .addField(new field().setType(field.TYPE_SFNODE).setName("NavigationInfoNode").setAccessType(field.ACCESSTYPE_INITIALIZEONLY)
                .addComments(new CommentsBlock("initialization node (if any) goes here")))
              .addField(new field().setType(field.TYPE_SFNODE).setName("FrustumCoordinate").setAccessType(field.ACCESSTYPE_INITIALIZEONLY)
                .addChild(new Coordinate().setUSE("FrustumCoordinate")))
              .addField(new field().setType(field.TYPE_SFNODE).setName("FrustumExtrusion").setAccessType(field.ACCESSTYPE_INITIALIZEONLY)
                .addChild(new Extrusion().setUSE("FrustumExtrusion")))
              .addField(new field().setType(field.TYPE_SFBOOL).setName("recompute").setAccessType(field.ACCESSTYPE_INPUTONLY))
              .addField(new field().setType(field.TYPE_SFFLOAT).setName("aspectRatio").setAccessType(field.ACCESSTYPE_INPUTOUTPUT).setAppinfo("assumed ratio height/width"))
              .addField(new field().setType(field.TYPE_SFVEC3F).setName("position_changed").setAccessType(field.ACCESSTYPE_OUTPUTONLY))
              .addField(new field().setType(field.TYPE_SFROTATION).setName("orientation_changed").setAccessType(field.ACCESSTYPE_OUTPUTONLY))
              .addField(new field().setType(field.TYPE_MFVEC3F).setName("spine_changed").setAccessType(field.ACCESSTYPE_OUTPUTONLY))
              .addField(new field().setType(field.TYPE_MFVEC2F).setName("scale_changed").setAccessType(field.ACCESSTYPE_OUTPUTONLY))
              .addField(new field().setType(field.TYPE_MFVEC3F).setName("point_changed").setAccessType(field.ACCESSTYPE_OUTPUTONLY))
              .addField(new field().setType(field.TYPE_SFBOOL).setName("trace").setAccessType(field.ACCESSTYPE_INITIALIZEONLY))
              .setIS(new IS()
                .addConnect(new connect().setNodeField("visible").setProtoField("visible"))
                .addConnect(new connect().setNodeField("ViewpointNode").setProtoField("ViewpointNode"))
                .addConnect(new connect().setNodeField("NavigationInfoNode").setProtoField("NavigationInfoNode"))
                .addConnect(new connect().setNodeField("aspectRatio").setProtoField("aspectRatio"))
                .addConnect(new connect().setNodeField("trace").setProtoField("trace"))))
            .addChild(new ROUTE().setFromField("visibilitySwitchSelection").setFromNode("GeometryComputationScript").setToField("whichChoice").setToNode("VisibilitySwitch"))
            .addChild(new ROUTE().setFromField("position_changed").setFromNode("GeometryComputationScript").setToField("translation").setToNode("PositionTransform"))
            .addChild(new ROUTE().setFromField("orientation_changed").setFromNode("GeometryComputationScript").setToField("rotation").setToNode("OrientationTransform"))
            .addChild(new ROUTE().setFromField("spine_changed").setFromNode("GeometryComputationScript").setToField("set_spine").setToNode("FrustumExtrusion"))
            .addChild(new ROUTE().setFromField("scale_changed").setFromNode("GeometryComputationScript").setToField("set_scale").setToNode("FrustumExtrusion"))
            .addChild(new ROUTE().setFromField("point_changed").setFromNode("GeometryComputationScript").setToField("point").setToNode("FrustumCoordinate"))))
        .addComments(new CommentsBlock("Example use is in separate scene"))
        .addChild(new Anchor().setDescription("ViewFrustum Example").setUrl(Java.to(["ViewFrustumExample.x3d"], Java.type("java.lang.String[]")))
          .addChild(new Shape()
            .setAppearance(new Appearance()
              .setMaterial(new Material().setDiffuseColor(Java.to(doubleToFloat([0.8,0.4,0]), Java.type("float[]")))))
            .setGeometry(new Text().setString(Java.to(["ViewFrustumPrototype.x3d","is a Prototype declaration file.","For an example scene using the prototype,","click this text and view","ViewFrustumExample.x3d"], Java.type("java.lang.String[]")))
              .setFontStyle(new FontStyle().setJustify(Java.to(["MIDDLE","MIDDLE"], Java.type("java.lang.String[]"))).setSize(0.8))))))      ;
    X3D0.toFileX3D("../data/ViewFrustumPrototype.new.graal.x3d");
    X3D0.toFileJSON("../data/ViewFrustumPrototype.new.graal.json");
