load('X3Dautoclass.js');
var ConfigurationProperties = Packages.org.web3d.x3d.jsail.ConfigurationProperties;
ConfigurationProperties.showDefaultAttributes = false;
ConfigurationProperties.xsltEngine = ConfigurationProperties.XSLT_ENGINE_NATIVE_JAVA;
ConfigurationProperties.deleteIntermediateFiles = false;
ConfigurationProperties.setStripTrailingZeroes(true);
ConfigurationProperties.setStripDefaultAttributes(true);
function doubleToFloat(d) {
    if (Float32Array)
	return new Float32Array(d);
}
      var X3D0 =  new X3D().setProfile("Full").setVersion("4.0")
      .setHead(new head()
        .addComponent(new component().setName("Scripting").setLevel(1))
        .addComponent(new component().setName("EnvironmentalEffects").setLevel(3))
        .addComponent(new component().setName("Shaders").setLevel(1))
        .addComponent(new component().setName("CubeMapTexturing").setLevel(1))
        .addComponent(new component().setName("Texturing").setLevel(1))
        .addComponent(new component().setName("Rendering").setLevel(1))
        .addComponent(new component().setName("Grouping").setLevel(3))
        .addComponent(new component().setName("Core").setLevel(1))
        .addComponent(new component().setName("DIS").setLevel(2))
        .addComments(new CommentsBlock("<component name='Shape' level='4'></component>"))
        .addComments(new CommentsBlock("Additional authoring resources for meta-tags: http://www.dublincore.org/documents/dcmi-terms http://www.dublincore.org/documents/dces http://www.w3.org/TR/html4/struct/global.html#h-7.4.4 http://vancouver-webpages.com/META http://vancouver-webpages.com/META/about-mk-metas2.html Additional authoring resources for language codes: ftp://ftp.isi.edu/in-notes/bcp/bcp47.txt http://www.loc.gov/standards/iso639-2/langhome.html http://www.iana.org/numbers.html#L"))
        .addMeta(new meta().setName("title").setContent("bumpfreewrlsliders.x3d"))
        .addMeta(new meta().setName("description").setContent("*enter description here, short-sentence summaries preferred*"))
        .addMeta(new meta().setName("creator").setContent("Doug Sanden, Christoph Valentin, John Carlson"))
        .addMeta(new meta().setName("translator").setContent("*if manually translating VRML-to-X3D, enter name of person translating here*"))
        .addMeta(new meta().setName("created").setContent("*enter date of initial version here*"))
        .addMeta(new meta().setName("translated").setContent("*enter date of translation here*"))
        .addMeta(new meta().setName("modified").setContent("*enter date of latest revision here*"))
        .addMeta(new meta().setName("version").setContent("*enter version here, if any*"))
        .addMeta(new meta().setName("reference").setContent("*enter reference citation or relative/online url here*"))
        .addMeta(new meta().setName("reference").setContent("*enter additional url/bibliographic reference information here*"))
        .addMeta(new meta().setName("requires").setContent("*enter reference resource here if required to support function, delivery, or coherence of content*"))
        .addMeta(new meta().setName("rights").setContent("*enter copyright information here* Example: Copyright (c) Web3D Consortium Inc. 2008, 2024"))
        .addMeta(new meta().setName("drawing").setContent("*enter drawing filename/url here*"))
        .addMeta(new meta().setName("MovingImage").setContent("*enter movie filename/url here*"))
        .addMeta(new meta().setName("photo").setContent("*enter photo filename/url here*"))
        .addMeta(new meta().setName("subject").setContent("*enter subject keywords here*"))
        .addMeta(new meta().setName("accessRights").setContent("*enter permission statements or url here*"))
        .addMeta(new meta().setName("identifier").setContent("*enter online Uniform Resource Identifier (URI) or Uniform Resource Locator (URL) address for this file here*"))
        .addMeta(new meta().setName("generator").setContent("PSPad, http://www.pspad.com/"))
        .addMeta(new meta().setName("license").setContent("license.html")))
      .addComments(new CommentsBlock("\"The Flower Review (TPREV)\", a simple MU scene using DIS Sensor Event Distribution, It is assumed the reviewers (users) have a non-X3D voice channel (e.g. TeamSpeak) open for their \"discussion about the teapot\""))
      .setScene(new Scene()
        .addComments(new CommentsBlock("LayerSet with two layers, navigation happens in layer 1"))
        .addLayerSet(new LayerSet().setActiveLayer(1).setOrder(Java.to([1,2], Java.type("int[]")))
          .addComments(new CommentsBlock("the first Layer contains the main scenery - \"The Review of the Flower (DIS Multiuser)\""))
          .addComments(new CommentsBlock("the second layer contains the sliders that are moved with the user's display like a HUD (heads up display)"))
          .addLayers(new Layer().setPickable(true).setObjectType(Java.to(["ALL"], Java.type("java.lang.String[]")))
            .addComments(new CommentsBlock("basic nodes, which might be present in any scene"))
            .addChild(new NavigationInfo().setType(Java.to(["EXAMINE"], Java.type("java.lang.String[]"))).setAvatarSize(Java.to(doubleToFloat([0.25,1.75,0.75]), Java.type("float[]"))))
            .addChild(new DirectionalLight().setAmbientIntensity(0.2).setDirection(Java.to(doubleToFloat([0,-1,0]), Java.type("float[]"))))
            .addChild(new DirectionalLight().setAmbientIntensity(0.2).setDirection(Java.to(doubleToFloat([-1,-0.1,-1]), Java.type("float[]"))))
            .addChild(new Viewpoint().setDescription("My Overview").setFieldOfView(1.570796).setPosition(Java.to(doubleToFloat([0,1.75,60]), Java.type("float[]"))))
            .addComments(new CommentsBlock("this group contains the red/green/blue 3D crosshair"))
            .addChild(new Group()
              .addComments(new CommentsBlock("Arrow X"))
              .addChild(new Transform().setTranslation(Java.to(doubleToFloat([25,0,0]), Java.type("float[]"))).setRotation(Java.to(doubleToFloat([0,0,-1,1.57]), Java.type("float[]")))
                .addChild(new Shape()
                  .setGeometry(new Cylinder().setDEF("Shaft").setRadius(0.35).setHeight(50))
                  .setAppearance(new Appearance()
                    .setMaterial(new Material().setDEF("RED").setDiffuseColor(Java.to(doubleToFloat([1,0,0]), Java.type("float[]"))).setEmissiveColor(Java.to(doubleToFloat([1,0,0]), Java.type("float[]")))))))
              .addChild(new Transform().setTranslation(Java.to(doubleToFloat([50,0,0]), Java.type("float[]"))).setRotation(Java.to(doubleToFloat([0,0,-1,1.57]), Java.type("float[]")))
                .addChild(new Shape()
                  .setGeometry(new Cone().setDEF("Tip").setBottomRadius(0.8).setHeight(3))
                  .setAppearance(new Appearance()
                    .setMaterial(new Material().setUSE("RED")))))
              .addComments(new CommentsBlock("Arrow Y"))
              .addChild(new Transform().setTranslation(Java.to(doubleToFloat([0,25,0]), Java.type("float[]")))
                .addChild(new Shape()
                  .setGeometry(new Cylinder().setUSE("Shaft"))
                  .setAppearance(new Appearance()
                    .setMaterial(new Material().setDEF("GREEN").setDiffuseColor(Java.to(doubleToFloat([0,1,0]), Java.type("float[]"))).setEmissiveColor(Java.to(doubleToFloat([0,1,0]), Java.type("float[]")))))))
              .addChild(new Transform().setTranslation(Java.to(doubleToFloat([0,50,0]), Java.type("float[]")))
                .addChild(new Shape()
                  .setGeometry(new Cone().setUSE("Tip"))
                  .setAppearance(new Appearance()
                    .setMaterial(new Material().setUSE("GREEN")))))
              .addComments(new CommentsBlock("Arrow Z"))
              .addChild(new Transform().setTranslation(Java.to(doubleToFloat([0,0,25]), Java.type("float[]"))).setRotation(Java.to(doubleToFloat([1,0,0,1.57]), Java.type("float[]")))
                .addChild(new Shape()
                  .setGeometry(new Cylinder().setUSE("Shaft"))
                  .setAppearance(new Appearance()
                    .setMaterial(new Material().setDEF("BLUE").setDiffuseColor(Java.to(doubleToFloat([0,0,1]), Java.type("float[]"))).setEmissiveColor(Java.to(doubleToFloat([0,0,1]), Java.type("float[]")))))))
              .addChild(new Transform().setTranslation(Java.to(doubleToFloat([0,0,50]), Java.type("float[]"))).setRotation(Java.to(doubleToFloat([1,0,0,1.57]), Java.type("float[]")))
                .addChild(new Shape()
                  .setGeometry(new Cone().setUSE("Tip"))
                  .setAppearance(new Appearance()
                    .setMaterial(new Material().setUSE("BLUE"))))))
            .addComments(new CommentsBlock("the model that is being reviewed by the users of this scene"))
            .addChild(new Transform().setDEF("FlowerTransform")
              .addComments(new CommentsBlock("<Inline DEF=\"Flower\" url='\"bumpyfreewrl.x3d\"' />"))
              .addComments(new CommentsBlock("Images courtesy of Paul Debevec's Light Probe Image Gallery"))
              .addChild(new Background().setBackUrl(Java.to(["../resources/images/all_probes/stpeters_cross/stpeters_back.png","https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_back.png"], Java.type("java.lang.String[]"))).setBottomUrl(Java.to(["../resources/images/all_probes/stpeters_cross/stpeters_bottom.png","https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_bottom.png"], Java.type("java.lang.String[]"))).setFrontUrl(Java.to(["../resources/images/all_probes/stpeters_cross/stpeters_front.png","https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_front.png"], Java.type("java.lang.String[]"))).setLeftUrl(Java.to(["../resources/images/all_probes/stpeters_cross/stpeters_left.png","https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_left.png"], Java.type("java.lang.String[]"))).setRightUrl(Java.to(["../resources/images/all_probes/stpeters_cross/stpeters_right.png","https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_right.png"], Java.type("java.lang.String[]"))).setTopUrl(Java.to(["../resources/images/all_probes/stpeters_cross/stpeters_top.png","https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_top.png"], Java.type("java.lang.String[]"))))
              .addChild(new Shape()
                .setGeometry(new Sphere().setRadius(0.01))
                .setAppearance(new Appearance()
                  .setMaterial(new Material().setDiffuseColor(Java.to(doubleToFloat([0.7,0.7,0.7]), Java.type("float[]"))).setSpecularColor(Java.to(doubleToFloat([0.5,0.5,0.5]), Java.type("float[]"))))
                  .setTexture(new ComposedCubeMapTexture().setDEF("texture")
                    .setBackTexture(new ImageTexture().setUrl(Java.to(["../resources/images/all_probes/stpeters_cross/stpeters_back.png","https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_back.png"], Java.type("java.lang.String[]"))))
                    .setBottomTexture(new ImageTexture().setUrl(Java.to(["../resources/images/all_probes/stpeters_cross/stpeters_bottom.png","https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_bottom.png"], Java.type("java.lang.String[]"))))
                    .setFrontTexture(new ImageTexture().setUrl(Java.to(["../resources/images/all_probes/stpeters_cross/stpeters_front.png","https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_front.png"], Java.type("java.lang.String[]"))))
                    .setLeftTexture(new ImageTexture().setUrl(Java.to(["../resources/images/all_probes/stpeters_cross/stpeters_left.png","https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_left.png"], Java.type("java.lang.String[]"))))
                    .setRightTexture(new ImageTexture().setUrl(Java.to(["../resources/images/all_probes/stpeters_cross/stpeters_right.png","https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_right.png"], Java.type("java.lang.String[]"))))
                    .setTopTexture(new ImageTexture().setUrl(Java.to(["../resources/images/all_probes/stpeters_cross/stpeters_top.png","https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_top.png"], Java.type("java.lang.String[]")))))
                  .addShaders(new ComposedShader().setDEF("freewrlShader").setLanguage("GLSL")
                    .addField(new field().setType(field.TYPE_SFVEC3F).setName("chromaticDispertion").setAccessType(field.ACCESSTYPE_INPUTONLY).setValue("0.98 1 1.033"))
                    .addField(new field().setType(field.TYPE_SFINT32).setName("fw_textureCoordGenType").setAccessType(field.ACCESSTYPE_INPUTONLY).setValue("0"))
                    .addField(new field().setType(field.TYPE_SFFLOAT).setName("bias").setAccessType(field.ACCESSTYPE_INPUTONLY).setValue("0.5"))
                    .addField(new field().setType(field.TYPE_SFFLOAT).setName("scale").setAccessType(field.ACCESSTYPE_INPUTONLY).setValue("0.5"))
                    .addField(new field().setType(field.TYPE_SFFLOAT).setName("power").setAccessType(field.ACCESSTYPE_INPUTONLY).setValue("2"))
                    .addField(new field().setType(field.TYPE_SFFLOAT).setName("a").setAccessType(field.ACCESSTYPE_INPUTOUTPUT).setValue("15"))
                    .addField(new field().setType(field.TYPE_SFFLOAT).setName("b").setAccessType(field.ACCESSTYPE_INPUTOUTPUT).setValue("5"))
                    .addField(new field().setType(field.TYPE_SFFLOAT).setName("c").setAccessType(field.ACCESSTYPE_INPUTOUTPUT).setValue("5"))
                    .addField(new field().setType(field.TYPE_SFFLOAT).setName("d").setAccessType(field.ACCESSTYPE_INPUTOUTPUT).setValue("5"))
                    .addField(new field().setType(field.TYPE_SFFLOAT).setName("tdelta").setAccessType(field.ACCESSTYPE_INPUTOUTPUT).setValue("0"))
                    .addField(new field().setType(field.TYPE_SFFLOAT).setName("pdelta").setAccessType(field.ACCESSTYPE_INPUTOUTPUT).setValue("0"))
                    .addParts(new ShaderPart().setType("VERTEX").setUrl(Java.to(["../shaders/freewrl_flowers_chromatic.vs","https://coderextreme.net/X3DJSONLD/src/main/shaders/freewrl_flowers_chromatic.vs"], Java.type("java.lang.String[]"))))
                    .addParts(new ShaderPart().setType("FRAGMENT").setUrl(Java.to(["../shaders/freewrl_bubbles.fs","https://coderextreme.net/X3DJSONLD/src/main/shaders/freewrl_bubbles.fs"], Java.type("java.lang.String[]"))))))))
            .addComments(new CommentsBlock("DIS multiuser facilities"))
            .addChild(new DISEntityManager().setDEF("EntityManager").setNetworkMode("networkReader")
              .addChild(new DISEntityTypeMapping().setCategory(77).setSpecific(1).setUrl(Java.to(["../data/Leif8Final.x3d","https://coderextreme.net/X3DJSONLD/src/main/data/Leif8Final.x3d"], Java.type("java.lang.String[]"))))
              .addChild(new DISEntityTypeMapping().setCategory(77).setSpecific(2).setUrl(Java.to(["../data/Lily8Final.x3d","https://coderextreme.net/X3DJSONLD/src/main/data/Lily8Final.x3d"], Java.type("java.lang.String[]"))))
              .addChild(new DISEntityTypeMapping().setCategory(77).setSpecific(3).setUrl(Java.to(["../data/Tufani8Final.x3d","https://coderextreme.net/X3DJSONLD/src/main/data/Tufani8Final.x3d"], Java.type("java.lang.String[]"))))
              .addChild(new DISEntityTypeMapping().setCategory(77).setSpecific(4).setUrl(Java.to(["../data/Gramps8Final.x3d","https://coderextreme.net/X3DJSONLD/src/main/data/Gramps8Final.x3d"], Java.type("java.lang.String[]")))))
            .addChild(new Collision().setEnabled(false)
              .addChild(new Group().setDEF("AvatarHolder")))
            .addChild(new ROUTE().setFromField("addedEntities").setFromNode("EntityManager").setToField("addChildren").setToNode("AvatarHolder"))
            .addChild(new ROUTE().setFromField("removedEntities").setFromNode("EntityManager").setToField("removeChildren").setToNode("AvatarHolder")))
          .addLayers(new LayoutLayer().setPickable(true).setObjectType(Java.to(["ALL"], Java.type("java.lang.String[]")))
            .addComments(new CommentsBlock("positioning the LayoutLayer"))
            .addComments(new CommentsBlock("clipping the LayoutLayer"))
            .addComments(new CommentsBlock("the content (children) of the LayoutLayer"))
            .addComments(new CommentsBlock("first, the slider for scaling the model"))
            .addChild(new Transform().setTranslation(Java.to(doubleToFloat([0,0,-3]), Java.type("float[]")))
              .addChild(new Shape()
                .setAppearance(new Appearance()
                  .setMaterial(new Material().setDiffuseColor(Java.to(doubleToFloat([0,0,0]), Java.type("float[]"))).setTransparency(0.7)))
                .setGeometry(new Box().setSize(Java.to(doubleToFloat([100,100,0.02]), Java.type("float[]"))))))
            .addComments(new CommentsBlock("the plane sensors"))
            .addChild(new Transform().setDEF("aSlider").setTranslation(Java.to(doubleToFloat([0,0.7,0]), Java.type("float[]")))
              .addChild(new Transform().setRotation(Java.to(doubleToFloat([0,0,1,1.57]), Java.type("float[]")))
                .addChild(new Shape()
                  .setAppearance(new Appearance()
                    .setMaterial(new Material()))
                  .setGeometry(new Cylinder().setRadius(0.05).setHeight(2.5))))
              .addChild(new Transform().setDEF("aTransform").setTranslation(Java.to(doubleToFloat([0,0,0.1]), Java.type("float[]")))
                .addChild(new PlaneSensor().setDEF("aSensor").setMinPosition(Java.to(doubleToFloat([-20,0]), Java.type("float[]"))).setMaxPosition(Java.to(doubleToFloat([20,0]), Java.type("float[]"))))
                .addChild(new Transform().setTranslation(Java.to(doubleToFloat([0,0,0]), Java.type("float[]")))
                  .addChild(new TouchSensor().setDEF("aTS"))
                  .addChild(new Shape()
                    .setGeometry(new Sphere().setRadius(0.08))
                    .setAppearance(new Appearance()
                      .setMaterial(new Material().setDiffuseColor(Java.to(doubleToFloat([1,0,0]), Java.type("float[]")))))))
                .addChild(new Shape()
                  .setGeometry(new Cylinder().setRadius(0.05).setHeight(0.3))
                  .setAppearance(new Appearance()
                    .setMaterial(new Material()))))
              .addChild(new Transform().setRotation(Java.to(doubleToFloat([0,0,1,1.57]), Java.type("float[]")))
                .addChild(new Shape()
                  .setAppearance(new Appearance()
                    .setMaterial(new Material()))
                  .setGeometry(new Cylinder().setRadius(0.05).setHeight(2.5)))))
            .addChild(new Transform().setDEF("bSlider").setTranslation(Java.to(doubleToFloat([0,0.4,0]), Java.type("float[]")))
              .addChild(new Transform().setRotation(Java.to(doubleToFloat([0,0,1,1.57]), Java.type("float[]")))
                .addChild(new Shape()
                  .setAppearance(new Appearance()
                    .setMaterial(new Material()))
                  .setGeometry(new Cylinder().setRadius(0.05).setHeight(2.5))))
              .addChild(new Transform().setDEF("bTransform").setTranslation(Java.to(doubleToFloat([0,0,0.1]), Java.type("float[]")))
                .addChild(new PlaneSensor().setDEF("bSensor").setMinPosition(Java.to(doubleToFloat([-20,0]), Java.type("float[]"))).setMaxPosition(Java.to(doubleToFloat([20,0]), Java.type("float[]"))))
                .addChild(new Transform().setTranslation(Java.to(doubleToFloat([0,0,0]), Java.type("float[]")))
                  .addChild(new TouchSensor().setDEF("bTS"))
                  .addChild(new Shape()
                    .setGeometry(new Sphere().setRadius(0.08))
                    .setAppearance(new Appearance()
                      .setMaterial(new Material().setDiffuseColor(Java.to(doubleToFloat([1,0,0]), Java.type("float[]")))))))
                .addChild(new Shape()
                  .setGeometry(new Cylinder().setRadius(0.05).setHeight(0.3))
                  .setAppearance(new Appearance()
                    .setMaterial(new Material())))))
            .addChild(new Transform().setDEF("cSlider").setTranslation(Java.to(doubleToFloat([0,0.1,0]), Java.type("float[]")))
              .addChild(new Transform().setRotation(Java.to(doubleToFloat([0,0,1,1.57]), Java.type("float[]")))
                .addChild(new Shape()
                  .setAppearance(new Appearance()
                    .setMaterial(new Material()))
                  .setGeometry(new Cylinder().setRadius(0.05).setHeight(2.5))))
              .addChild(new Transform().setDEF("cTransform").setTranslation(Java.to(doubleToFloat([0,0,0.1]), Java.type("float[]")))
                .addChild(new PlaneSensor().setDEF("cSensor").setMinPosition(Java.to(doubleToFloat([-20,0]), Java.type("float[]"))).setMaxPosition(Java.to(doubleToFloat([20,0]), Java.type("float[]"))))
                .addChild(new Transform().setTranslation(Java.to(doubleToFloat([0,0,0]), Java.type("float[]")))
                  .addChild(new TouchSensor().setDEF("cTS"))
                  .addChild(new Shape()
                    .setGeometry(new Sphere().setRadius(0.08))
                    .setAppearance(new Appearance()
                      .setMaterial(new Material().setDiffuseColor(Java.to(doubleToFloat([1,0,0]), Java.type("float[]")))))))
                .addChild(new Shape()
                  .setGeometry(new Cylinder().setRadius(0.05).setHeight(0.3))
                  .setAppearance(new Appearance()
                    .setMaterial(new Material())))))
            .addChild(new Transform().setDEF("dSlider").setTranslation(Java.to(doubleToFloat([0,-0.2,0]), Java.type("float[]")))
              .addChild(new Transform().setRotation(Java.to(doubleToFloat([0,0,1,1.57]), Java.type("float[]")))
                .addChild(new Shape()
                  .setAppearance(new Appearance()
                    .setMaterial(new Material()))
                  .setGeometry(new Cylinder().setRadius(0.05).setHeight(2.5))))
              .addChild(new Transform().setDEF("dTransform").setTranslation(Java.to(doubleToFloat([0,0,0.1]), Java.type("float[]")))
                .addChild(new PlaneSensor().setDEF("dSensor").setMinPosition(Java.to(doubleToFloat([-20,0]), Java.type("float[]"))).setMaxPosition(Java.to(doubleToFloat([20,0]), Java.type("float[]"))))
                .addChild(new Transform().setTranslation(Java.to(doubleToFloat([0,0,0]), Java.type("float[]")))
                  .addChild(new TouchSensor().setDEF("dTS"))
                  .addChild(new Shape()
                    .setGeometry(new Sphere().setRadius(0.08))
                    .setAppearance(new Appearance()
                      .setMaterial(new Material().setDiffuseColor(Java.to(doubleToFloat([1,0,0]), Java.type("float[]")))))))
                .addChild(new Shape()
                  .setGeometry(new Cylinder().setRadius(0.05).setHeight(0.3))
                  .setAppearance(new Appearance()
                    .setMaterial(new Material())))))
            .addChild(new Transform().setDEF("pdeltaSlider").setTranslation(Java.to(doubleToFloat([0,-0.5,0]), Java.type("float[]")))
              .addChild(new Transform().setRotation(Java.to(doubleToFloat([0,0,1,1.57]), Java.type("float[]")))
                .addChild(new Shape()
                  .setAppearance(new Appearance()
                    .setMaterial(new Material()))
                  .setGeometry(new Cylinder().setRadius(0.05).setHeight(2.5))))
              .addChild(new Transform().setDEF("pdeltaTransform").setTranslation(Java.to(doubleToFloat([0,0,0.1]), Java.type("float[]")))
                .addChild(new PlaneSensor().setDEF("pdeltaSensor").setMinPosition(Java.to(doubleToFloat([-20,0]), Java.type("float[]"))).setMaxPosition(Java.to(doubleToFloat([20,0]), Java.type("float[]"))))
                .addChild(new Transform().setTranslation(Java.to(doubleToFloat([0,0,0]), Java.type("float[]")))
                  .addChild(new TouchSensor().setDEF("pdeltaTS"))
                  .addChild(new Shape()
                    .setGeometry(new Sphere().setRadius(0.08))
                    .setAppearance(new Appearance()
                      .setMaterial(new Material().setDiffuseColor(Java.to(doubleToFloat([1,0,0]), Java.type("float[]")))))))
                .addChild(new Shape()
                  .setGeometry(new Cylinder().setRadius(0.05).setHeight(0.3))
                  .setAppearance(new Appearance()
                    .setMaterial(new Material())))))
            .addChild(new Transform().setDEF("tdeltaSlider").setTranslation(Java.to(doubleToFloat([0,-0.8,0]), Java.type("float[]")))
              .addChild(new Transform().setRotation(Java.to(doubleToFloat([0,0,1,1.57]), Java.type("float[]")))
                .addChild(new Shape()
                  .setAppearance(new Appearance()
                    .setMaterial(new Material()))
                  .setGeometry(new Cylinder().setRadius(0.05).setHeight(2.5))))
              .addChild(new Transform().setDEF("tdeltaTransform").setTranslation(Java.to(doubleToFloat([0,0,0.1]), Java.type("float[]")))
                .addChild(new PlaneSensor().setDEF("tdeltaSensor").setMinPosition(Java.to(doubleToFloat([-20,0]), Java.type("float[]"))).setMaxPosition(Java.to(doubleToFloat([20,0]), Java.type("float[]"))))
                .addChild(new Transform().setTranslation(Java.to(doubleToFloat([0,0,0]), Java.type("float[]")))
                  .addChild(new TouchSensor().setDEF("tdeltaTS"))
                  .addChild(new Shape()
                    .setGeometry(new Sphere().setRadius(0.08))
                    .setAppearance(new Appearance()
                      .setMaterial(new Material().setDiffuseColor(Java.to(doubleToFloat([1,0,0]), Java.type("float[]")))))))
                .addChild(new Shape()
                  .setGeometry(new Cylinder().setRadius(0.05).setHeight(0.3))
                  .setAppearance(new Appearance()
                    .setMaterial(new Material())))))
            .addChild(new Script().setDEF("aValueTransformerScript").setDirectOutput(true).setMustEvaluate(true)
              .addField(new field().setType(field.TYPE_SFVEC3F).setName("newTranslation").setAccessType(field.ACCESSTYPE_INPUTONLY).setValue("1 1 1"))
              .addField(new field().setType(field.TYPE_SFFLOAT).setName("aValue").setAccessType(field.ACCESSTYPE_OUTPUTONLY).setValue("1"))
              .setSourceCode(`ecmascript: function newTranslation(Value) { aValue = Value.x * 30; }`))
            .addChild(new Script().setDEF("bValueTransformerScript").setDirectOutput(true).setMustEvaluate(true)
              .addField(new field().setType(field.TYPE_SFVEC3F).setName("newTranslation").setAccessType(field.ACCESSTYPE_INPUTONLY).setValue("1 1 1"))
              .addField(new field().setType(field.TYPE_SFFLOAT).setName("bValue").setAccessType(field.ACCESSTYPE_OUTPUTONLY).setValue("1"))
              .setSourceCode(`ecmascript: function newTranslation(Value) { bValue = Value.x * 30; }`))
            .addChild(new Script().setDEF("cValueTransformerScript").setDirectOutput(true).setMustEvaluate(true)
              .addField(new field().setType(field.TYPE_SFVEC3F).setName("newTranslation").setAccessType(field.ACCESSTYPE_INPUTONLY).setValue("1 1 1"))
              .addField(new field().setType(field.TYPE_SFFLOAT).setName("cValue").setAccessType(field.ACCESSTYPE_OUTPUTONLY).setValue("1"))
              .setSourceCode(`ecmascript: function newTranslation(Value) { cValue = Value.x * 5; }`))
            .addChild(new Script().setDEF("dValueTransformerScript").setDirectOutput(true).setMustEvaluate(true)
              .addField(new field().setType(field.TYPE_SFVEC3F).setName("newTranslation").setAccessType(field.ACCESSTYPE_INPUTONLY).setValue("1 1 1"))
              .addField(new field().setType(field.TYPE_SFFLOAT).setName("dValue").setAccessType(field.ACCESSTYPE_OUTPUTONLY).setValue("1"))
              .setSourceCode(`ecmascript: function newTranslation(Value) { dValue = Value.x * 5; }`))
            .addChild(new Script().setDEF("pdeltaValueTransformerScript").setDirectOutput(true).setMustEvaluate(true)
              .addField(new field().setType(field.TYPE_SFVEC3F).setName("newTranslation").setAccessType(field.ACCESSTYPE_INPUTONLY).setValue("1 1 1"))
              .addField(new field().setType(field.TYPE_SFFLOAT).setName("pdeltaValue").setAccessType(field.ACCESSTYPE_OUTPUTONLY).setValue("1"))
              .setSourceCode(`ecmascript: function newTranslation(Value) { pdeltaValue = Value.x; }`))
            .addChild(new Script().setDEF("tdeltaValueTransformerScript").setDirectOutput(true).setMustEvaluate(true)
              .addField(new field().setType(field.TYPE_SFVEC3F).setName("newTranslation").setAccessType(field.ACCESSTYPE_INPUTONLY).setValue("1 1 1"))
              .addField(new field().setType(field.TYPE_SFFLOAT).setName("tdeltaValue").setAccessType(field.ACCESSTYPE_OUTPUTONLY).setValue("1"))
              .setSourceCode(`ecmascript: function newTranslation(Value) { tdeltaValue = Value.x; }`))
            .addChild(new ROUTE().setFromField("translation_changed").setFromNode("aSensor").setToField("set_translation").setToNode("aTransform"))
            .addChild(new ROUTE().setFromField("translation_changed").setFromNode("bSensor").setToField("set_translation").setToNode("bTransform"))
            .addChild(new ROUTE().setFromField("translation_changed").setFromNode("cSensor").setToField("set_translation").setToNode("cTransform"))
            .addChild(new ROUTE().setFromField("translation_changed").setFromNode("dSensor").setToField("set_translation").setToNode("dTransform"))
            .addChild(new ROUTE().setFromField("translation_changed").setFromNode("pdeltaSensor").setToField("set_translation").setToNode("pdeltaTransform"))
            .addChild(new ROUTE().setFromField("translation_changed").setFromNode("tdeltaSensor").setToField("set_translation").setToNode("tdeltaTransform"))
            .addChild(new ROUTE().setFromField("translation_changed").setFromNode("aSensor").setToField("newTranslation").setToNode("aValueTransformerScript"))
            .addChild(new ROUTE().setFromField("translation_changed").setFromNode("bSensor").setToField("newTranslation").setToNode("bValueTransformerScript"))
            .addChild(new ROUTE().setFromField("translation_changed").setFromNode("cSensor").setToField("newTranslation").setToNode("cValueTransformerScript"))
            .addChild(new ROUTE().setFromField("translation_changed").setFromNode("dSensor").setToField("newTranslation").setToNode("dValueTransformerScript"))
            .addChild(new ROUTE().setFromField("translation_changed").setFromNode("pdeltaSensor").setToField("newTranslation").setToNode("pdeltaValueTransformerScript"))
            .addChild(new ROUTE().setFromField("translation_changed").setFromNode("tdeltaSensor").setToField("newTranslation").setToNode("tdeltaValueTransformerScript"))
            .addChild(new ROUTE().setFromField("aValue").setFromNode("aValueTransformerScript").setToField("a").setToNode("freewrlShader"))
            .addChild(new ROUTE().setFromField("bValue").setFromNode("bValueTransformerScript").setToField("b").setToNode("freewrlShader"))
            .addChild(new ROUTE().setFromField("cValue").setFromNode("cValueTransformerScript").setToField("c").setToNode("freewrlShader"))
            .addChild(new ROUTE().setFromField("dValue").setFromNode("dValueTransformerScript").setToField("d").setToNode("freewrlShader"))
            .addChild(new ROUTE().setFromField("pdeltaValue").setFromNode("pdeltaValueTransformerScript").setToField("pdelta").setToNode("freewrlShader"))
            .addChild(new ROUTE().setFromField("tdeltaValue").setFromNode("tdeltaValueTransformerScript").setToField("tdelta").setToNode("freewrlShader"))
            .setLayout(new Layout().setAlign(Java.to(["RIGHT","BOTTOM"], Java.type("java.lang.String[]"))).setOffset(Java.to(doubleToFloat([0,0]), Java.type("float[]"))).setOffsetUnits(Java.to(["WORLD","WORLD"], Java.type("java.lang.String[]"))).setScaleMode(Java.to(["NONE","NONE"], Java.type("java.lang.String[]"))).setSize(Java.to(doubleToFloat([0.4,1]), Java.type("float[]"))).setSizeUnits(Java.to(["WORLD","WORLD"], Java.type("java.lang.String[]"))))
            .setViewport(new Viewport().setClipBoundary(Java.to(doubleToFloat([0,1,0,1]), Java.type("float[]")))))))      ;
    X3D0.toFileX3D("../data/bumpyfreewrlsliders.new.graal.x3d");
    X3D0.toFileJSON("../data/bumpyfreewrlsliders.new.graal.json");
