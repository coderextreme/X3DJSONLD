load('X3Dautoclass.js');
var ConfigurationProperties = Packages.org.web3d.x3d.jsail.ConfigurationProperties;
ConfigurationProperties.showDefaultAttributes = false;
ConfigurationProperties.xsltEngine = ConfigurationProperties.XSLT_ENGINE_NATIVE_JAVA;
ConfigurationProperties.deleteIntermediateFiles = false;
ConfigurationProperties.setStripTrailingZeroes(true);
function doubleToFloat(d) {
    if (Float32Array)
	return new Float32Array([d])[0];
}
      var X3D0 =  new X3D().setProfile("Immersive").setVersion("4.0")
      .setHead(new head()
        .addComponent(new component().setName("HAnim").setLevel(1))
        .addMeta(new meta().setName("title").setContent("KoreanCharacter08Da.x3d"))
        .addMeta(new meta().setName("creator").setContent("Jin Hoon Lee and Min Joo Lee"))
        .addMeta(new meta().setName("translator").setContent("Chul Hee Jung and Myeong Won Lee"))
        .addMeta(new meta().setName("created").setContent("31 March 2011"))
        .addMeta(new meta().setName("translated").setContent("1 November 2014"))
        .addMeta(new meta().setName("modified").setContent("23 December 2021"))
        .addMeta(new meta().setName("description").setContent("Articulated 3D game character designed with a general graphics tool, then converted into an X3D HAnim model."))
        .addMeta(new meta().setName("reference").setContent("KoreanCharacter00ReadMe.txt"))
        .addMeta(new meta().setName("reference").setContent("KoreanCharacterHumanMotion_Infotech2014_140706.pdf"))
        .addMeta(new meta().setName("reference").setContent("KoreanCharactersIllustrated.pdf"))
        .addMeta(new meta().setName("identifier").setContent("https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Characters/KoreanCharacter08Da.x3d"))
        .addMeta(new meta().setName("generator").setContent("3DS MAX, http://www.autodesk.com/products/autodesk-3ds-max/overview"))
        .addMeta(new meta().setName("generator").setContent("Suwon University HAnim Editor"))
        .addMeta(new meta().setName("generator").setContent("Gnu Image Manipulation Program, http://www.gimp.org"))
        .addMeta(new meta().setName("generator").setContent("X3D-Edit 3.3, https://savage.nps.edu/X3D-Edit"))
        .addMeta(new meta().setName("license").setContent("../license.html")))
      .setScene(new Scene()
        .addChild(new WorldInfo().setTitle("KoreanCharacter08Da.x3d"))
        .addChild(new NavigationInfo().setSpeed(1.5))
        .addChild(new Viewpoint().setCenterOfRotation(Java.to([doubleToFloat(0),doubleToFloat(1),doubleToFloat(0)], Java.type("float[]"))).setDescription("Da").setPosition(Java.to([doubleToFloat(0),doubleToFloat(1),doubleToFloat(3)], Java.type("float[]"))))
        .addChild(new HAnimHumanoid().setName("Da").setDEF("hanim_Da").setScale(Java.to([doubleToFloat(0.0225),doubleToFloat(0.0225),doubleToFloat(0.0225)], Java.type("float[]"))).setVersion("2.0")
          .addComments(new CommentsBlock("original HAnimHumanoid info='\"authorName=Chul Hee Jung and Myeong Won Lee\" \"authorEmail=myeongwonlee@gmail.com\" \"creationDate=31 March 2011\" \"humanoidVersion=2.0\" \"gender=female\" \"height=1.5\"'"))
          .setMetadata(new MetadataSet().setName("HAnimHumanoid.info").setReference("https://www.web3d.org/documents/specifications/19774/V2.0/Architecture/ObjectInterfaces.html#Humanoid")
            .addValue(new MetadataString().setName("authorName").setValue(Java.to(["Chul Hee Jung and Myeong Won Lee"], Java.type("java.lang.String[]"))))
            .addValue(new MetadataString().setName("authorEmail").setValue(Java.to(["myeongwonlee@gmail.com"], Java.type("java.lang.String[]"))))
            .addValue(new MetadataString().setName("creationDate").setValue(Java.to(["31 March 2011"], Java.type("java.lang.String[]"))))
            .addValue(new MetadataString().setName("gender").setValue(Java.to(["female"], Java.type("java.lang.String[]"))))
            .addValue(new MetadataFloat().setName("height").setValue(Java.to([doubleToFloat(1.5)], Java.type("float[]"))))
            .addValue(new MetadataString().setName("humanoidVersion").setValue(Java.to(["2.0"], Java.type("java.lang.String[]")))))
          .addSkeleton(new HAnimJoint("hanim_Da").setName("humanoid_root").setDEF("hanim_humanoid_root").setCenter(Java.to([doubleToFloat(0),doubleToFloat(32.73),doubleToFloat(-1.981)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(0)], Java.type("float[]"))).setLlimit(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(0)], Java.type("float[]"))).setContainerFieldOverride("skeleton")
            .addChild(new HAnimSegment("hanim_humanoid_root").setName("sacrum").setDEF("hanim_sacrum")
              .addChild(new Transform().setTranslation(Java.to([doubleToFloat(0),doubleToFloat(32.73),doubleToFloat(-1.981)], Java.type("float[]")))
                .addChild(new Shape()
                  .setAppearance(new Appearance()
                    .setMaterial(new Material().setDiffuseColor(Java.to([doubleToFloat(0.588),doubleToFloat(0.588),doubleToFloat(0.588)], Java.type("float[]"))))
                    .setTexture(new ImageTexture().setDEF("DaTextureAtlas").setUrl(Java.to(["images/Da.png","https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Characters/images/Da.png"], Java.type("java.lang.String[]")))))
                  .setGeometry(new IndexedFaceSet().setCoordIndex(Java.to([0,1,2,-1,0,2,3,-1,0,3,4,-1,0,4,5,-1,0,5,6,-1,0,6,7,-1,0,7,8,-1,0,8,1,-1,10,2,1,-1,1,9,10,-1,11,3,2,-1,2,10,11,-1,12,4,3,-1,3,11,12,-1,13,5,4,-1,4,12,13,-1,14,6,5,-1,5,13,14,-1,15,7,6,-1,6,14,15,-1,16,8,7,-1,7,15,16,-1,9,1,8,-1,8,16,9,-1,18,10,9,-1,9,17,18,-1,19,11,10,-1,10,18,19,-1,20,12,11,-1,11,19,20,-1,21,13,12,-1,12,20,21,-1,22,14,13,-1,13,21,22,-1,23,15,14,-1,14,22,23,-1,24,16,15,-1,15,23,24,-1,17,9,16,-1,16,24,17,-1,25,18,17,-1,25,19,18,-1,25,20,19,-1,25,21,20,-1,25,22,21,-1,25,23,22,-1,25,24,23,-1,25,17,24,-1], Java.type("int[]"))).setCreaseAngle(1.57).setTexCoordIndex(Java.to([0,8,9,-1,1,9,10,-1,2,10,11,-1,3,11,12,-1,4,12,13,-1,5,13,14,-1,6,14,15,-1,7,15,16,-1,18,9,8,-1,8,17,18,-1,19,10,9,-1,9,18,19,-1,20,11,10,-1,10,19,20,-1,21,12,11,-1,11,20,21,-1,22,13,12,-1,12,21,22,-1,23,14,13,-1,13,22,23,-1,24,15,14,-1,14,23,24,-1,25,16,15,-1,15,24,25,-1,27,18,17,-1,17,26,27,-1,28,19,18,-1,18,27,28,-1,29,20,19,-1,19,28,29,-1,30,21,20,-1,20,29,30,-1,31,22,21,-1,21,30,31,-1,32,23,22,-1,22,31,32,-1,33,24,23,-1,23,32,33,-1,34,25,24,-1,24,33,34,-1,35,27,26,-1,36,28,27,-1,37,29,28,-1,38,30,29,-1,39,31,30,-1,40,32,31,-1,41,33,32,-1,42,34,33,-1], Java.type("int[]")))
                    .setCoord(new Coordinate().setPoint(Java.to([doubleToFloat(0),doubleToFloat(0.9993),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.7066),doubleToFloat(-0.7066),doubleToFloat(-0.4996),doubleToFloat(0.7066),doubleToFloat(-0.4996),doubleToFloat(-0.7066),doubleToFloat(0.7066),doubleToFloat(0),doubleToFloat(-0.4996),doubleToFloat(0.7066),doubleToFloat(0.4996),doubleToFloat(0),doubleToFloat(0.7066),doubleToFloat(0.7066),doubleToFloat(0.4996),doubleToFloat(0.7066),doubleToFloat(0.4996),doubleToFloat(0.7066),doubleToFloat(0.7066),doubleToFloat(0),doubleToFloat(0.4996),doubleToFloat(0.7066),doubleToFloat(-0.4996),doubleToFloat(0),doubleToFloat(0),doubleToFloat(-0.9993),doubleToFloat(-0.7066),doubleToFloat(0),doubleToFloat(-0.7066),doubleToFloat(-0.9993),doubleToFloat(0),doubleToFloat(0),doubleToFloat(-0.7066),doubleToFloat(0),doubleToFloat(0.7066),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.9993),doubleToFloat(0.7066),doubleToFloat(0),doubleToFloat(0.7066),doubleToFloat(0.9993),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.7066),doubleToFloat(0),doubleToFloat(-0.7066),doubleToFloat(0),doubleToFloat(-0.7066),doubleToFloat(-0.7066),doubleToFloat(-0.4996),doubleToFloat(-0.7066),doubleToFloat(-0.4996),doubleToFloat(-0.7066),doubleToFloat(-0.7066),doubleToFloat(0),doubleToFloat(-0.4996),doubleToFloat(-0.7066),doubleToFloat(0.4996),doubleToFloat(0),doubleToFloat(-0.7066),doubleToFloat(0.7066),doubleToFloat(0.4996),doubleToFloat(-0.7066),doubleToFloat(0.4996),doubleToFloat(0.7066),doubleToFloat(-0.7066),doubleToFloat(0),doubleToFloat(0.4996),doubleToFloat(-0.7066),doubleToFloat(-0.4996),doubleToFloat(0),doubleToFloat(-0.9993),doubleToFloat(0)], Java.type("float[]"))))
                    .setTexCoord(new TextureCoordinate().setPoint(Java.to([doubleToFloat(0.4985),doubleToFloat(0.2607),doubleToFloat(0.5056),doubleToFloat(0.2607),doubleToFloat(0.5126),doubleToFloat(0.2607),doubleToFloat(0.5196),doubleToFloat(0.2607),doubleToFloat(0.5267),doubleToFloat(0.2607),doubleToFloat(0.5337),doubleToFloat(0.2607),doubleToFloat(0.5408),doubleToFloat(0.2607),doubleToFloat(0.5478),doubleToFloat(0.2607),doubleToFloat(0.4985),doubleToFloat(0.2466),doubleToFloat(0.5056),doubleToFloat(0.2466),doubleToFloat(0.5126),doubleToFloat(0.2466),doubleToFloat(0.5196),doubleToFloat(0.2466),doubleToFloat(0.5267),doubleToFloat(0.2466),doubleToFloat(0.5337),doubleToFloat(0.2466),doubleToFloat(0.5408),doubleToFloat(0.2466),doubleToFloat(0.5478),doubleToFloat(0.2466),doubleToFloat(0.5548),doubleToFloat(0.2466),doubleToFloat(0.4985),doubleToFloat(0.2325),doubleToFloat(0.5056),doubleToFloat(0.2325),doubleToFloat(0.5126),doubleToFloat(0.2325),doubleToFloat(0.5196),doubleToFloat(0.2325),doubleToFloat(0.5267),doubleToFloat(0.2325),doubleToFloat(0.5337),doubleToFloat(0.2325),doubleToFloat(0.5408),doubleToFloat(0.2325),doubleToFloat(0.5478),doubleToFloat(0.2325),doubleToFloat(0.5548),doubleToFloat(0.2325),doubleToFloat(0.4985),doubleToFloat(0.2184),doubleToFloat(0.5056),doubleToFloat(0.2184),doubleToFloat(0.5126),doubleToFloat(0.2184),doubleToFloat(0.5196),doubleToFloat(0.2184),doubleToFloat(0.5267),doubleToFloat(0.2184),doubleToFloat(0.5337),doubleToFloat(0.2184),doubleToFloat(0.5408),doubleToFloat(0.2184),doubleToFloat(0.5478),doubleToFloat(0.2184),doubleToFloat(0.5548),doubleToFloat(0.2184),doubleToFloat(0.4985),doubleToFloat(0.2044),doubleToFloat(0.5056),doubleToFloat(0.2044),doubleToFloat(0.5126),doubleToFloat(0.2044),doubleToFloat(0.5196),doubleToFloat(0.2044),doubleToFloat(0.5267),doubleToFloat(0.2044),doubleToFloat(0.5337),doubleToFloat(0.2044),doubleToFloat(0.5408),doubleToFloat(0.2044)], Java.type("float[]"))))))))
            .addChild(new HAnimJoint("hanim_humanoid_root").setName("l_hip").setDEF("hanim_l_hip").setCenter(Java.to([doubleToFloat(3.18),doubleToFloat(31.25),doubleToFloat(-0.9491)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(0)], Java.type("float[]"))).setLlimit(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(0)], Java.type("float[]")))
              .addChild(new HAnimSegment("hanim_l_hip").setName("l_thigh").setDEF("hanim_l_thigh")
                .addChild(new Transform().setTranslation(Java.to([doubleToFloat(3.18),doubleToFloat(31.25),doubleToFloat(-0.9491)], Java.type("float[]")))
                  .addChild(new Shape()
                    .setAppearance(new Appearance()
                      .setMaterial(new Material().setDiffuseColor(Java.to([doubleToFloat(0.588),doubleToFloat(0.588),doubleToFloat(0.588)], Java.type("float[]"))))
                      .setTexture(new ImageTexture().setUSE("DaTextureAtlas")))
                    .setGeometry(new IndexedFaceSet().setCoordIndex(Java.to([2,3,4,-1,4,5,6,-1,2,4,6,-1,6,7,8,-1,2,6,8,-1,2,8,0,-1,1,2,0,-1,40,43,1,-1,1,0,40,-1,43,44,2,-1,2,1,43,-1,44,45,3,-1,3,2,44,-1,45,46,4,-1,4,3,45,-1,46,41,5,-1,5,4,46,-1,41,42,6,-1,6,5,41,-1,42,48,7,-1,7,6,42,-1,48,49,8,-1,8,7,48,-1,49,40,0,-1,0,8,49,-1,9,10,16,-1,16,17,9,-1,10,11,18,-1,18,16,10,-1,11,36,37,-1,37,18,11,-1,12,13,20,-1,20,19,12,-1,13,14,21,-1,21,20,13,-1,15,22,21,-1,21,14,15,-1,9,17,22,-1,22,15,9,-1,16,29,35,-1,35,17,16,-1,30,29,16,-1,16,18,30,-1,31,39,37,-1,37,19,31,-1,32,31,19,-1,19,20,32,-1,33,32,20,-1,20,21,33,-1,22,34,33,-1,33,21,22,-1,17,35,34,-1,34,22,17,-1,24,42,41,-1,41,23,24,-1,48,42,24,-1,24,47,48,-1,43,40,38,-1,38,25,43,-1,26,44,43,-1,43,25,26,-1,27,45,44,-1,44,26,27,-1,28,46,45,-1,45,27,28,-1,23,41,46,-1,46,28,23,-1,29,24,23,-1,23,35,29,-1,47,24,29,-1,29,30,47,-1,25,38,39,-1,39,31,25,-1,26,25,31,-1,31,32,26,-1,27,26,32,-1,32,33,27,-1,34,28,27,-1,27,33,34,-1,35,23,28,-1,28,34,35,-1,37,36,12,-1,12,19,37,-1,39,30,18,-1,18,37,39,-1,38,47,30,-1,30,39,38,-1,47,38,40,-1,40,49,47,-1,49,48,47,-1,52,53,54,-1,54,55,56,-1,56,57,50,-1,54,56,50,-1,52,54,50,-1,51,52,50,-1,10,9,51,-1,51,50,10,-1,9,15,52,-1,52,51,9,-1,15,14,53,-1,53,52,15,-1,14,13,54,-1,54,53,14,-1,13,12,55,-1,55,54,13,-1,12,36,56,-1,56,55,12,-1,36,11,57,-1,57,56,36,-1,11,10,50,-1,50,57,11,-1], Java.type("int[]"))).setCreaseAngle(1.57).setTexCoordIndex(Java.to([2,3,4,-1,4,5,6,-1,2,4,6,-1,6,7,8,-1,2,6,8,-1,2,8,0,-1,1,2,0,-1,9,12,1,-1,1,0,9,-1,13,14,2,-1,2,1,13,-1,14,15,3,-1,3,2,14,-1,15,16,4,-1,4,3,15,-1,16,10,5,-1,5,4,16,-1,10,11,6,-1,6,5,10,-1,11,17,7,-1,7,6,11,-1,18,19,8,-1,8,7,18,-1,20,9,0,-1,0,8,20,-1,21,22,23,-1,23,24,21,-1,22,25,26,-1,26,23,22,-1,25,27,28,-1,28,26,25,-1,29,30,31,-1,31,32,29,-1,30,33,34,-1,34,31,30,-1,35,36,34,-1,34,33,35,-1,21,24,36,-1,36,35,21,-1,23,37,38,-1,38,24,23,-1,39,37,23,-1,23,26,39,-1,40,41,28,-1,28,53,40,-1,42,54,32,-1,32,31,42,-1,43,42,31,-1,31,34,43,-1,36,44,43,-1,43,34,36,-1,24,38,44,-1,44,36,24,-1,45,59,58,-1,58,46,45,-1,60,59,45,-1,45,56,60,-1,62,57,48,-1,48,47,62,-1,49,64,63,-1,63,55,49,-1,50,65,64,-1,64,49,50,-1,51,66,65,-1,65,50,51,-1,46,58,66,-1,66,51,46,-1,37,45,46,-1,46,38,37,-1,56,45,37,-1,37,39,56,-1,47,48,41,-1,41,40,47,-1,49,55,54,-1,54,42,49,-1,50,49,42,-1,42,43,50,-1,44,51,50,-1,50,43,44,-1,38,46,51,-1,51,44,38,-1,28,27,52,-1,52,53,28,-1,41,39,26,-1,26,28,41,-1,48,56,39,-1,39,41,48,-1,56,48,57,-1,57,61,56,-1,69,68,67,-1,72,73,74,-1,74,75,76,-1,76,77,70,-1,74,76,70,-1,72,74,70,-1,71,72,70,-1,22,21,71,-1,71,70,22,-1,21,35,72,-1,72,71,21,-1,35,33,73,-1,73,72,35,-1,33,30,74,-1,74,73,33,-1,30,29,75,-1,75,74,30,-1,52,27,76,-1,76,75,52,-1,27,25,77,-1,77,76,27,-1,25,22,70,-1,70,77,25,-1], Java.type("int[]")))
                      .setCoord(new Coordinate().setPoint(Java.to([doubleToFloat(-2.213),doubleToFloat(3.415),doubleToFloat(-1.432),doubleToFloat(-2.563),doubleToFloat(3.235),doubleToFloat(-0.044),doubleToFloat(-1.896),doubleToFloat(3.353),doubleToFloat(1.304),doubleToFloat(-0.2566),doubleToFloat(3.071),doubleToFloat(1.979),doubleToFloat(1.061),doubleToFloat(2.666),doubleToFloat(1.218),doubleToFloat(1.733),doubleToFloat(2.312),doubleToFloat(-0.0382),doubleToFloat(1.105),doubleToFloat(2.573),doubleToFloat(-1.55),doubleToFloat(-0.0841),doubleToFloat(2.894),doubleToFloat(-2.232),doubleToFloat(-1.033),doubleToFloat(3.07),doubleToFloat(-2.249),doubleToFloat(2.024),doubleToFloat(-14.23),doubleToFloat(-0.0084),doubleToFloat(1.105),doubleToFloat(-14.23),doubleToFloat(-1.033),doubleToFloat(0.2432),doubleToFloat(-14.23),doubleToFloat(-1.628),doubleToFloat(-1.544),doubleToFloat(-14.23),doubleToFloat(-0.0084),doubleToFloat(-0.958),doubleToFloat(-14.2),doubleToFloat(1.652),doubleToFloat(0.2432),doubleToFloat(-14.22),doubleToFloat(2.319),doubleToFloat(1.502),doubleToFloat(-14.17),doubleToFloat(1.712),doubleToFloat(1.254),doubleToFloat(-12.45),doubleToFloat(-1.41),doubleToFloat(1.95),doubleToFloat(-12.45),doubleToFloat(-0.0084),doubleToFloat(0.2427),doubleToFloat(-12.44),doubleToFloat(-2.045),doubleToFloat(-1.567),doubleToFloat(-12.45),doubleToFloat(-0.0084),doubleToFloat(-0.9137),doubleToFloat(-12.46),doubleToFloat(1.762),doubleToFloat(0.2427),doubleToFloat(-12.45),doubleToFloat(2.395),doubleToFloat(1.378),doubleToFloat(-12.47),doubleToFloat(1.687),doubleToFloat(2.546),doubleToFloat(-1.755),doubleToFloat(-0.0084),doubleToFloat(1.61),doubleToFloat(-1.638),doubleToFloat(-2.255),doubleToFloat(-2.471),doubleToFloat(-2.666),doubleToFloat(-0.0107),doubleToFloat(-1.873),doubleToFloat(-2.65),doubleToFloat(2.057),doubleToFloat(-0.0345),doubleToFloat(-2.462),doubleToFloat(3.088),doubleToFloat(1.694),doubleToFloat(-2.104),doubleToFloat(1.976),doubleToFloat(1.405),doubleToFloat(-8.209),doubleToFloat(-1.802),doubleToFloat(0.1104),doubleToFloat(-8.092),doubleToFloat(-2.569),doubleToFloat(-1.935),doubleToFloat(-8.892),doubleToFloat(-0.0084),doubleToFloat(-1.302),doubleToFloat(-8.974),doubleToFloat(1.866),doubleToFloat(0.1104),doubleToFloat(-8.922),doubleToFloat(2.658),doubleToFloat(1.57),doubleToFloat(-8.734),doubleToFloat(1.815),doubleToFloat(2.256),doubleToFloat(-8.478),doubleToFloat(-0.0084),doubleToFloat(-0.7153),doubleToFloat(-14.23),doubleToFloat(-1.033),doubleToFloat(-0.9827),doubleToFloat(-12.45),doubleToFloat(-1.368),doubleToFloat(-2.238),doubleToFloat(-2.425),doubleToFloat(-2.148),doubleToFloat(-1.544),doubleToFloat(-8.472),doubleToFloat(-1.802),doubleToFloat(-2.337),doubleToFloat(-1.248),doubleToFloat(-2.213),doubleToFloat(2.564),doubleToFloat(-0.1067),doubleToFloat(-0.0084),doubleToFloat(1.757),doubleToFloat(-0.2099),doubleToFloat(-2.414),doubleToFloat(-2.598),doubleToFloat(-1.583),doubleToFloat(-0.0084),doubleToFloat(-1.971),doubleToFloat(-1.132),doubleToFloat(2.138),doubleToFloat(-0.018),doubleToFloat(-0.5002),doubleToFloat(3.257),doubleToFloat(1.652),doubleToFloat(-0.15),doubleToFloat(2),doubleToFloat(-0.2311),doubleToFloat(-1.92),doubleToFloat(-3.327),doubleToFloat(0.3087),doubleToFloat(-0.559),doubleToFloat(-3.515),doubleToFloat(-0.8698),doubleToFloat(-0.924),doubleToFloat(-3.545),doubleToFloat(0.7809),doubleToFloat(-15.71),doubleToFloat(-0.9452),doubleToFloat(1.397),doubleToFloat(-15.71),doubleToFloat(-0.1162),doubleToFloat(1.08),doubleToFloat(-15.71),doubleToFloat(1.251),doubleToFloat(0.2583),doubleToFloat(-15.71),doubleToFloat(1.684),doubleToFloat(-0.5384),doubleToFloat(-15.71),doubleToFloat(1.201),doubleToFloat(-0.9046),doubleToFloat(-15.71),doubleToFloat(-0.1323),doubleToFloat(-0.3675),doubleToFloat(-15.71),doubleToFloat(-0.9437),doubleToFloat(0.238),doubleToFloat(-15.71),doubleToFloat(-1.355)], Java.type("float[]"))))
                      .setTexCoord(new TextureCoordinate().setPoint(Java.to([doubleToFloat(0.9323),doubleToFloat(0.8796),doubleToFloat(0.955),doubleToFloat(0.9007),doubleToFloat(0.8109),doubleToFloat(0.8829),doubleToFloat(0.8324),doubleToFloat(0.8719),doubleToFloat(0.8505),doubleToFloat(0.8713),doubleToFloat(0.8719),doubleToFloat(0.8723),doubleToFloat(0.9023),doubleToFloat(0.8773),doubleToFloat(0.9112),doubleToFloat(0.8772),doubleToFloat(0.922),doubleToFloat(0.8742),doubleToFloat(0.9323),doubleToFloat(0.8796),doubleToFloat(0.8719),doubleToFloat(0.8723),doubleToFloat(0.9023),doubleToFloat(0.8773),doubleToFloat(0.955),doubleToFloat(0.9007),doubleToFloat(0.7929),doubleToFloat(0.9027),doubleToFloat(0.8109),doubleToFloat(0.8829),doubleToFloat(0.8324),doubleToFloat(0.8719),doubleToFloat(0.8505),doubleToFloat(0.8713),doubleToFloat(0.9112),doubleToFloat(0.8772),doubleToFloat(0.9112),doubleToFloat(0.8772),doubleToFloat(0.922),doubleToFloat(0.8742),doubleToFloat(0.922),doubleToFloat(0.8742),doubleToFloat(0.8674),doubleToFloat(0.6509),doubleToFloat(0.8839),doubleToFloat(0.6494),doubleToFloat(0.8924),doubleToFloat(0.6779),doubleToFloat(0.8681),doubleToFloat(0.6767),doubleToFloat(0.8939),doubleToFloat(0.6493),doubleToFloat(0.9112),doubleToFloat(0.6761),doubleToFloat(0.9011),doubleToFloat(0.64),doubleToFloat(0.9277),doubleToFloat(0.6703),doubleToFloat(0.8255),doubleToFloat(0.6267),doubleToFloat(0.8368),doubleToFloat(0.6434),doubleToFloat(0.8121),doubleToFloat(0.6703),doubleToFloat(0.7869),doubleToFloat(0.6572),doubleToFloat(0.842),doubleToFloat(0.6491),doubleToFloat(0.8296),doubleToFloat(0.6745),doubleToFloat(0.8506),doubleToFloat(0.6493),doubleToFloat(0.8488),doubleToFloat(0.6758),doubleToFloat(0.9079),doubleToFloat(0.7498),doubleToFloat(0.87),doubleToFloat(0.745),doubleToFloat(0.9282),doubleToFloat(0.7486),doubleToFloat(0.9779),doubleToFloat(0.7341),doubleToFloat(0.9504),doubleToFloat(0.7433),doubleToFloat(0.7921),doubleToFloat(0.7337),doubleToFloat(0.8179),doubleToFloat(0.734),doubleToFloat(0.8447),doubleToFloat(0.7398),doubleToFloat(0.9056),doubleToFloat(0.8524),doubleToFloat(0.8721),doubleToFloat(0.8479),doubleToFloat(0.9822),doubleToFloat(0.8649),doubleToFloat(0.9552),doubleToFloat(0.8592),doubleToFloat(0.794),doubleToFloat(0.8537),doubleToFloat(0.82),doubleToFloat(0.8481),doubleToFloat(0.8471),doubleToFloat(0.8465),doubleToFloat(0.9073),doubleToFloat(0.6307),doubleToFloat(0.9433),doubleToFloat(0.6604),doubleToFloat(0.7593),doubleToFloat(0.7337),doubleToFloat(0.7655),doubleToFloat(0.8637),doubleToFloat(0.9289),doubleToFloat(0.8568),doubleToFloat(0.9323),doubleToFloat(0.8796),doubleToFloat(0.8719),doubleToFloat(0.8723),doubleToFloat(0.9023),doubleToFloat(0.8773),doubleToFloat(0.9112),doubleToFloat(0.8772),doubleToFloat(0.922),doubleToFloat(0.8742),doubleToFloat(0.955),doubleToFloat(0.9007),doubleToFloat(0.7929),doubleToFloat(0.9027),doubleToFloat(0.8109),doubleToFloat(0.8829),doubleToFloat(0.8324),doubleToFloat(0.8719),doubleToFloat(0.8505),doubleToFloat(0.8713),doubleToFloat(0.9289),doubleToFloat(0.8568),doubleToFloat(0.9112),doubleToFloat(0.8772),doubleToFloat(0.922),doubleToFloat(0.8742),doubleToFloat(0.8839),doubleToFloat(0.6494),doubleToFloat(0.8674),doubleToFloat(0.6509),doubleToFloat(0.8506),doubleToFloat(0.6493),doubleToFloat(0.842),doubleToFloat(0.6491),doubleToFloat(0.8368),doubleToFloat(0.6434),doubleToFloat(0.8255),doubleToFloat(0.6267),doubleToFloat(0.9011),doubleToFloat(0.64),doubleToFloat(0.8939),doubleToFloat(0.6493)], Java.type("float[]"))))))))
              .addChild(new HAnimJoint("hanim_l_hip").setName("l_knee").setDEF("hanim_l_knee").setCenter(Java.to([doubleToFloat(3.414),doubleToFloat(17.040001),doubleToFloat(-0.9556)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(0)], Java.type("float[]"))).setLlimit(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(0)], Java.type("float[]")))
                .addChild(new HAnimSegment("hanim_l_knee").setName("l_calf").setDEF("hanim_l_calf")
                  .addChild(new Transform().setTranslation(Java.to([doubleToFloat(3.414),doubleToFloat(17.040001),doubleToFloat(-0.9556)], Java.type("float[]")))
                    .addChild(new Shape()
                      .setAppearance(new Appearance()
                        .setMaterial(new Material().setDiffuseColor(Java.to([doubleToFloat(0.588),doubleToFloat(0.588),doubleToFloat(0.588)], Java.type("float[]"))))
                        .setTexture(new ImageTexture().setUSE("DaTextureAtlas")))
                      .setGeometry(new IndexedFaceSet().setCoordIndex(Java.to([32,38,1,-1,1,0,32,-1,33,32,0,-1,0,2,33,-1,34,39,14,-1,14,3,34,-1,35,34,3,-1,3,4,35,-1,5,36,35,-1,35,4,5,-1,6,37,36,-1,36,5,6,-1,1,38,37,-1,37,6,1,-1,24,7,8,-1,8,25,24,-1,26,25,8,-1,8,9,26,-1,15,10,27,-1,27,31,15,-1,11,28,27,-1,27,10,11,-1,12,29,28,-1,28,11,12,-1,13,30,29,-1,29,12,13,-1,24,30,13,-1,13,7,24,-1,9,18,20,-1,20,15,9,-1,31,26,9,-1,9,15,31,-1,8,7,17,-1,17,16,8,-1,9,8,16,-1,16,18,9,-1,19,10,15,-1,15,20,19,-1,21,11,10,-1,10,19,21,-1,22,12,11,-1,11,21,22,-1,23,13,12,-1,12,22,23,-1,7,13,23,-1,23,17,7,-1,33,39,20,-1,20,18,33,-1,16,17,38,-1,38,32,16,-1,18,16,32,-1,32,33,18,-1,19,20,39,-1,39,34,19,-1,35,21,19,-1,19,34,35,-1,36,22,21,-1,21,35,36,-1,37,23,22,-1,22,36,37,-1,38,17,23,-1,23,37,38,-1,2,14,39,-1,39,33,2,-1,0,1,40,-1,1,6,40,-1,6,5,40,-1,5,4,40,-1,4,3,40,-1,3,14,40,-1,14,2,40,-1,2,0,40,-1,24,25,42,-1,42,41,24,-1,25,26,43,-1,43,42,25,-1,26,31,44,-1,44,43,26,-1,31,27,45,-1,45,44,31,-1,27,28,46,-1,46,45,27,-1,28,29,47,-1,47,46,28,-1,29,30,48,-1,48,47,29,-1,30,24,41,-1,41,48,30,-1,43,44,45,-1,45,46,47,-1,47,48,41,-1,45,47,41,-1,43,45,41,-1,42,43,41,-1], Java.type("int[]"))).setCreaseAngle(1.57).setTexCoordIndex(Java.to([1,2,3,-1,3,0,1,-1,5,1,0,-1,0,4,5,-1,7,8,9,-1,9,6,7,-1,11,7,6,-1,6,10,11,-1,12,13,11,-1,11,10,12,-1,14,15,13,-1,13,12,14,-1,3,2,15,-1,15,14,3,-1,18,19,16,-1,16,17,18,-1,21,17,16,-1,16,20,21,-1,24,25,22,-1,22,23,24,-1,26,27,22,-1,22,25,26,-1,28,29,27,-1,27,26,28,-1,30,31,29,-1,29,28,30,-1,18,31,30,-1,30,19,18,-1,20,32,33,-1,33,44,20,-1,43,21,20,-1,20,44,43,-1,16,19,35,-1,35,34,16,-1,20,16,34,-1,34,32,20,-1,36,25,24,-1,24,45,36,-1,37,26,25,-1,25,36,37,-1,38,28,26,-1,26,37,38,-1,39,30,28,-1,28,38,39,-1,19,30,39,-1,39,35,19,-1,5,41,33,-1,33,32,5,-1,34,35,2,-1,2,1,34,-1,32,34,1,-1,1,5,32,-1,36,45,8,-1,8,7,36,-1,11,37,36,-1,36,7,11,-1,13,38,37,-1,37,11,13,-1,15,39,38,-1,38,13,15,-1,2,35,39,-1,39,15,2,-1,4,42,41,-1,41,5,4,-1,0,3,40,-1,3,14,40,-1,14,12,40,-1,12,10,40,-1,10,6,40,-1,6,9,40,-1,42,4,40,-1,4,0,40,-1,18,17,47,-1,47,46,18,-1,17,21,48,-1,48,47,17,-1,21,43,49,-1,49,48,21,-1,23,22,50,-1,50,49,23,-1,22,27,51,-1,51,50,22,-1,27,29,52,-1,52,51,27,-1,29,31,53,-1,53,52,29,-1,31,18,46,-1,46,53,31,-1,48,49,50,-1,50,51,52,-1,52,53,46,-1,50,52,46,-1,48,50,46,-1,47,48,46,-1], Java.type("int[]")))
                        .setCoord(new Coordinate().setPoint(Java.to([doubleToFloat(0.6772),doubleToFloat(-12.59),doubleToFloat(-0.8455),doubleToFloat(1.122),doubleToFloat(-12.59),doubleToFloat(-0.0018),doubleToFloat(0.009),doubleToFloat(-12.59),doubleToFloat(-1.096),doubleToFloat(-1.026),doubleToFloat(-12.59),doubleToFloat(-0.0018),doubleToFloat(-0.604),doubleToFloat(-12.59),doubleToFloat(0.842),doubleToFloat(0.009),doubleToFloat(-12.59),doubleToFloat(1.196),doubleToFloat(0.6772),doubleToFloat(-12.59),doubleToFloat(0.842),doubleToFloat(1.697),doubleToFloat(-1.448),doubleToFloat(-0.0018),doubleToFloat(0.9307),doubleToFloat(-1.443),doubleToFloat(-1.147),doubleToFloat(0.009),doubleToFloat(-1.44),doubleToFloat(-1.835),doubleToFloat(-1.619),doubleToFloat(-1.448),doubleToFloat(-0.0018),doubleToFloat(-0.9447),doubleToFloat(-1.496),doubleToFloat(1.521),doubleToFloat(0.009),doubleToFloat(-1.513),doubleToFloat(2.101),doubleToFloat(1.063),doubleToFloat(-1.454),doubleToFloat(1.487),doubleToFloat(-0.604),doubleToFloat(-12.59),doubleToFloat(-0.8455),doubleToFloat(-1.035),doubleToFloat(-1.443),doubleToFloat(-1.165),doubleToFloat(1.046),doubleToFloat(-5.151),doubleToFloat(-1.186),doubleToFloat(1.665),doubleToFloat(-5.556),doubleToFloat(-0.0018),doubleToFloat(0.009),doubleToFloat(-4.957),doubleToFloat(-1.943),doubleToFloat(-1.472),doubleToFloat(-5.761),doubleToFloat(-0.0018),doubleToFloat(-0.9836),doubleToFloat(-5.363),doubleToFloat(-1.213),doubleToFloat(-0.8429),doubleToFloat(-5.942),doubleToFloat(1.259),doubleToFloat(0.009),doubleToFloat(-5.944),doubleToFloat(1.81),doubleToFloat(0.9757),doubleToFloat(-5.877),doubleToFloat(1.262),doubleToFloat(1.791),doubleToFloat(-0.0118),doubleToFloat(-0.0018),doubleToFloat(0.8718),doubleToFloat(-0.0118),doubleToFloat(-1.026),doubleToFloat(0.0095),doubleToFloat(-0.0118),doubleToFloat(-1.651),doubleToFloat(-1.777),doubleToFloat(-0.0118),doubleToFloat(-0.0018),doubleToFloat(-1.192),doubleToFloat(0.0146),doubleToFloat(1.658),doubleToFloat(0.0095),doubleToFloat(-0.0006),doubleToFloat(2.325),doubleToFloat(1.268),doubleToFloat(0.0444),doubleToFloat(1.718),doubleToFloat(-0.949),doubleToFloat(-0.0118),doubleToFloat(-1.026),doubleToFloat(0.785),doubleToFloat(-11.37),doubleToFloat(-0.968),doubleToFloat(0.009),doubleToFloat(-11.36),doubleToFloat(-1.383),doubleToFloat(-1.164),doubleToFloat(-11.41),doubleToFloat(-0.0018),doubleToFloat(-0.7001),doubleToFloat(-11.44),doubleToFloat(0.9904),doubleToFloat(0.009),doubleToFloat(-11.41),doubleToFloat(1.452),doubleToFloat(0.7602),doubleToFloat(-11.41),doubleToFloat(0.9913),doubleToFloat(1.305),doubleToFloat(-11.37),doubleToFloat(-0.0018),doubleToFloat(-0.6593),doubleToFloat(-11.43),doubleToFloat(-1.065),doubleToFloat(0.009),doubleToFloat(-12.78),doubleToFloat(-0.0018),doubleToFloat(1.28),doubleToFloat(1.466),doubleToFloat(0.0746),doubleToFloat(0.6343),doubleToFloat(1.466),doubleToFloat(-0.6311),doubleToFloat(-0.0009),doubleToFloat(1.466),doubleToFloat(-1.039),doubleToFloat(-0.7076),doubleToFloat(1.466),doubleToFloat(-0.6307),doubleToFloat(-1.279),doubleToFloat(1.466),doubleToFloat(0.0701),doubleToFloat(-0.8935),doubleToFloat(1.466),doubleToFloat(1.209),doubleToFloat(0.0062),doubleToFloat(1.466),doubleToFloat(1.652),doubleToFloat(0.9447),doubleToFloat(1.466),doubleToFloat(1.251)], Java.type("float[]"))))
                        .setTexCoord(new TextureCoordinate().setPoint(Java.to([doubleToFloat(0.8803),doubleToFloat(0.4005),doubleToFloat(0.8916),doubleToFloat(0.4184),doubleToFloat(0.8769),doubleToFloat(0.4226),doubleToFloat(0.8712),doubleToFloat(0.4055),doubleToFloat(0.8899),doubleToFloat(0.393),doubleToFloat(0.9065),doubleToFloat(0.4125),doubleToFloat(0.8327),doubleToFloat(0.3995),doubleToFloat(0.8182),doubleToFloat(0.4195),doubleToFloat(0.8033),doubleToFloat(0.4115),doubleToFloat(0.8255),doubleToFloat(0.3877),doubleToFloat(0.8438),doubleToFloat(0.4073),doubleToFloat(0.8361),doubleToFloat(0.4244),doubleToFloat(0.8487),doubleToFloat(0.4091),doubleToFloat(0.8471),doubleToFloat(0.4254),doubleToFloat(0.86),doubleToFloat(0.4061),doubleToFloat(0.8623),doubleToFloat(0.4237),doubleToFloat(0.9101),doubleToFloat(0.5733),doubleToFloat(0.9014),doubleToFloat(0.599),doubleToFloat(0.8859),doubleToFloat(0.5939),doubleToFloat(0.8913),doubleToFloat(0.5715),doubleToFloat(0.926),doubleToFloat(0.5758),doubleToFloat(0.9115),doubleToFloat(0.6008),doubleToFloat(0.8402),doubleToFloat(0.6091),doubleToFloat(0.8351),doubleToFloat(0.6188),doubleToFloat(0.8038),doubleToFloat(0.5929),doubleToFloat(0.8218),doubleToFloat(0.5846),doubleToFloat(0.8433),doubleToFloat(0.5761),doubleToFloat(0.8552),doubleToFloat(0.5988),doubleToFloat(0.8584),doubleToFloat(0.5722),doubleToFloat(0.8625),doubleToFloat(0.5922),doubleToFloat(0.8734),doubleToFloat(0.5718),doubleToFloat(0.8704),doubleToFloat(0.5929),doubleToFloat(0.9249),doubleToFloat(0.4799),doubleToFloat(0.9417),doubleToFloat(0.4724),doubleToFloat(0.9059),doubleToFloat(0.487),doubleToFloat(0.8846),doubleToFloat(0.4921),doubleToFloat(0.8055),doubleToFloat(0.4821),doubleToFloat(0.8287),doubleToFloat(0.4832),doubleToFloat(0.8463),doubleToFloat(0.4871),doubleToFloat(0.8654),doubleToFloat(0.4897),doubleToFloat(0.8588),doubleToFloat(0.3881),doubleToFloat(0.915),doubleToFloat(0.4056),doubleToFloat(0.891),doubleToFloat(0.3868),doubleToFloat(0.9186),doubleToFloat(0.615),doubleToFloat(0.9429),doubleToFloat(0.5818),doubleToFloat(0.7863),doubleToFloat(0.4837),doubleToFloat(0.8859),doubleToFloat(0.5939),doubleToFloat(0.9014),doubleToFloat(0.599),doubleToFloat(0.9115),doubleToFloat(0.6008),doubleToFloat(0.9186),doubleToFloat(0.615),doubleToFloat(0.8402),doubleToFloat(0.6091),doubleToFloat(0.8552),doubleToFloat(0.5988),doubleToFloat(0.8625),doubleToFloat(0.5922),doubleToFloat(0.8704),doubleToFloat(0.5929)], Java.type("float[]"))))))))
                .addChild(new HAnimJoint("hanim_l_knee").setName("l_talocrural").setDEF("hanim_l_talocrural").setCenter(Java.to([doubleToFloat(3.631),doubleToFloat(4.504),doubleToFloat(-0.7461)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(0)], Java.type("float[]"))).setLlimit(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(0)], Java.type("float[]")))
                  .addChild(new HAnimSegment("hanim_l_talocrural").setName("l_talus").setDEF("hanim_l_talus")
                    .addChild(new Transform().setTranslation(Java.to([doubleToFloat(3.631),doubleToFloat(4.504),doubleToFloat(-0.7461)], Java.type("float[]")))
                      .addChild(new Shape()
                        .setAppearance(new Appearance()
                          .setMaterial(new Material().setDiffuseColor(Java.to([doubleToFloat(0.588),doubleToFloat(0.588),doubleToFloat(0.588)], Java.type("float[]"))))
                          .setTexture(new ImageTexture().setUSE("DaTextureAtlas")))
                        .setGeometry(new IndexedFaceSet().setCoordIndex(Java.to([0,1,19,-1,19,25,0,-1,2,20,19,-1,19,1,2,-1,3,21,20,-1,20,2,3,-1,4,22,21,-1,21,3,4,-1,0,25,24,-1,26,28,4,-1,4,3,26,-1,29,26,3,-1,3,2,29,-1,30,29,2,-1,2,1,30,-1,27,30,1,-1,1,0,27,-1,16,15,28,-1,28,26,16,-1,17,16,26,-1,26,29,17,-1,18,17,29,-1,29,30,18,-1,14,18,30,-1,30,27,14,-1,19,7,6,-1,6,25,19,-1,20,8,7,-1,7,19,20,-1,21,9,8,-1,8,20,21,-1,22,10,9,-1,9,21,22,-1,11,10,22,-1,22,23,11,-1,5,12,11,-1,11,23,5,-1,13,12,5,-1,5,24,13,-1,6,13,24,-1,24,25,6,-1,6,7,31,-1,7,8,31,-1,8,9,31,-1,9,10,31,-1,10,11,31,-1,11,12,31,-1,12,13,31,-1,13,6,31,-1,16,33,32,-1,32,15,16,-1,17,18,33,-1,33,16,17,-1,18,14,32,-1,32,33,18,-1,23,22,4,-1,35,36,37,-1,37,38,39,-1,39,40,41,-1,37,39,41,-1,41,42,43,-1,37,41,43,-1,35,37,43,-1,35,43,34,-1,5,23,35,-1,35,34,5,-1,23,4,36,-1,36,35,23,-1,4,28,37,-1,37,36,4,-1,28,15,38,-1,38,37,28,-1,15,32,39,-1,39,38,15,-1,32,14,40,-1,40,39,32,-1,14,27,41,-1,41,40,14,-1,27,0,42,-1,42,41,27,-1,0,24,43,-1,43,42,0,-1,24,5,34,-1,34,43,24,-1], Java.type("int[]"))).setCreaseAngle(1.57).setTexCoordIndex(Java.to([0,1,2,-1,2,5,0,-1,3,4,2,-1,2,1,3,-1,1,2,4,-1,4,3,1,-1,0,5,2,-1,2,1,0,-1,0,5,13,-1,19,10,0,-1,0,1,19,-1,23,19,1,-1,1,3,23,-1,19,23,3,-1,3,1,19,-1,10,19,1,-1,1,0,10,-1,30,28,10,-1,10,19,30,-1,31,30,19,-1,19,23,31,-1,29,32,26,-1,26,25,29,-1,27,29,25,-1,25,24,27,-1,2,39,41,-1,41,5,2,-1,4,40,39,-1,39,2,4,-1,2,39,40,-1,40,4,2,-1,5,41,39,-1,39,2,5,-1,42,41,5,-1,5,13,42,-1,14,44,42,-1,42,13,14,-1,42,44,14,-1,14,13,42,-1,41,42,13,-1,13,5,41,-1,41,39,43,-1,39,40,43,-1,40,39,43,-1,39,41,43,-1,41,42,43,-1,42,44,43,-1,44,42,43,-1,42,41,43,-1,34,35,22,-1,22,8,34,-1,36,37,35,-1,35,34,36,-1,37,33,22,-1,22,35,37,-1,13,5,0,-1,16,17,18,-1,18,49,20,-1,20,21,18,-1,18,20,18,-1,18,17,16,-1,18,18,16,-1,16,18,16,-1,16,16,15,-1,14,13,46,-1,46,45,14,-1,13,0,47,-1,47,46,13,-1,0,10,48,-1,48,47,0,-1,11,12,49,-1,49,18,11,-1,6,7,20,-1,20,49,6,-1,9,38,51,-1,51,50,9,-1,12,11,18,-1,18,21,12,-1,10,0,47,-1,47,48,10,-1,0,13,46,-1,46,47,0,-1,13,14,45,-1,45,46,13,-1], Java.type("int[]")))
                          .setCoord(new Coordinate().setPoint(Java.to([doubleToFloat(1.841),doubleToFloat(-1.908),doubleToFloat(-0.0161),doubleToFloat(1.307),doubleToFloat(-2.033),doubleToFloat(-1.161),doubleToFloat(-0.1196),doubleToFloat(-2.03),doubleToFloat(-1.925),doubleToFloat(-1.25),doubleToFloat(-2.033),doubleToFloat(-1.167),doubleToFloat(-1.775),doubleToFloat(-2.041),doubleToFloat(0.1968),doubleToFloat(-0.0463),doubleToFloat(-0.6579),doubleToFloat(1.458),doubleToFloat(1.122),doubleToFloat(0.1952),doubleToFloat(-0.0374),doubleToFloat(0.6712),doubleToFloat(0.1856),doubleToFloat(-1.088),doubleToFloat(-0.1196),doubleToFloat(0.1211),doubleToFloat(-1.349),doubleToFloat(-0.9596),doubleToFloat(0.0475),doubleToFloat(-1.118),doubleToFloat(-1.364),doubleToFloat(0.0184),doubleToFloat(-0.0431),doubleToFloat(-0.9545),doubleToFloat(0.0396),doubleToFloat(0.5647),doubleToFloat(-0.1196),doubleToFloat(0.1094),doubleToFloat(1.036),doubleToFloat(0.6764),doubleToFloat(0.1777),doubleToFloat(0.5682),doubleToFloat(1.715),doubleToFloat(-4.504),doubleToFloat(-0.0426),doubleToFloat(-1.643),doubleToFloat(-4.504),doubleToFloat(-0.0426),doubleToFloat(-1.156),doubleToFloat(-4.504),doubleToFloat(-1.154),doubleToFloat(-0.1196),doubleToFloat(-4.504),doubleToFloat(-1.87),doubleToFloat(1.219),doubleToFloat(-4.504),doubleToFloat(-1.154),doubleToFloat(0.9699),doubleToFloat(-0.7703),doubleToFloat(-1.144),doubleToFloat(-0.1196),doubleToFloat(-0.8069),doubleToFloat(-1.731),doubleToFloat(-1.156),doubleToFloat(-0.9176),doubleToFloat(-1.144),doubleToFloat(-1.623),doubleToFloat(-0.8933),doubleToFloat(0.1659),doubleToFloat(-1.424),doubleToFloat(-0.8548),doubleToFloat(1.044),doubleToFloat(1.272),doubleToFloat(-0.715),doubleToFloat(0.8194),doubleToFloat(1.461),doubleToFloat(-0.7428),doubleToFloat(-0.042),doubleToFloat(-1.451),doubleToFloat(-3.493),doubleToFloat(-1.19),doubleToFloat(2.132),doubleToFloat(-3.609),doubleToFloat(-0.0745),doubleToFloat(-2.061),doubleToFloat(-3.611),doubleToFloat(-0.0842),doubleToFloat(-0.1196),doubleToFloat(-3.44),doubleToFloat(-1.941),doubleToFloat(1.513),doubleToFloat(-3.488),doubleToFloat(-1.19),doubleToFloat(-0.1196),doubleToFloat(0.4595),doubleToFloat(-0.0414),doubleToFloat(-0.1196),doubleToFloat(-4.504),doubleToFloat(-0.0426),doubleToFloat(-0.1196),doubleToFloat(-4.504),doubleToFloat(-1.154),doubleToFloat(-0.0144),doubleToFloat(-1.393),doubleToFloat(1.513),doubleToFloat(-1.198),doubleToFloat(-1.547),doubleToFloat(1.103),doubleToFloat(-1.512),doubleToFloat(-2.253),doubleToFloat(0.7636),doubleToFloat(-1.783),doubleToFloat(-3.743),doubleToFloat(0.5048),doubleToFloat(-1.465),doubleToFloat(-4.436),doubleToFloat(0.6071),doubleToFloat(-0.0938),doubleToFloat(-4.438),doubleToFloat(0.6133),doubleToFloat(1.591),doubleToFloat(-4.439),doubleToFloat(0.6193),doubleToFloat(1.906),doubleToFloat(-3.741),doubleToFloat(0.5362),doubleToFloat(1.633),doubleToFloat(-2.143),doubleToFloat(0.5649),doubleToFloat(1.127),doubleToFloat(-1.423),doubleToFloat(0.8897)], Java.type("float[]"))))
                          .setTexCoord(new TextureCoordinate().setPoint(Java.to([doubleToFloat(0.3073),doubleToFloat(0.3733),doubleToFloat(0.2855),doubleToFloat(0.3775),doubleToFloat(0.2892),doubleToFloat(0.3946),doubleToFloat(0.2565),doubleToFloat(0.3837),doubleToFloat(0.2667),doubleToFloat(0.4044),doubleToFloat(0.3127),doubleToFloat(0.3911),doubleToFloat(0.2725),doubleToFloat(0.2624),doubleToFloat(0.2707),doubleToFloat(0.2591),doubleToFloat(0.2565),doubleToFloat(0.2656),doubleToFloat(0.2782),doubleToFloat(0.255),doubleToFloat(0.3066),doubleToFloat(0.3545),doubleToFloat(0.2798),doubleToFloat(0.2632),doubleToFloat(0.2784),doubleToFloat(0.2616),doubleToFloat(0.3352),doubleToFloat(0.3928),doubleToFloat(0.3553),doubleToFloat(0.4119),doubleToFloat(0.2871),doubleToFloat(0.2631),doubleToFloat(0.2845),doubleToFloat(0.2634),doubleToFloat(0.2813),doubleToFloat(0.2643),doubleToFloat(0.2798),doubleToFloat(0.2632),doubleToFloat(0.2827),doubleToFloat(0.3624),doubleToFloat(0.2707),doubleToFloat(0.2591),doubleToFloat(0.267),doubleToFloat(0.2579),doubleToFloat(0.2601),doubleToFloat(0.2561),doubleToFloat(0.2519),doubleToFloat(0.3634),doubleToFloat(0.2675),doubleToFloat(0.2819),doubleToFloat(0.2613),doubleToFloat(0.2839),doubleToFloat(0.2533),doubleToFloat(0.2842),doubleToFloat(0.2683),doubleToFloat(0.2762),doubleToFloat(0.3096),doubleToFloat(0.3328),doubleToFloat(0.2602),doubleToFloat(0.2773),doubleToFloat(0.2784),doubleToFloat(0.337),doubleToFloat(0.2504),doubleToFloat(0.3407),doubleToFloat(0.2529),doubleToFloat(0.2783),doubleToFloat(0.2564),doubleToFloat(0.2466),doubleToFloat(0.2476),doubleToFloat(0.2629),doubleToFloat(0.2512),doubleToFloat(0.2562),doubleToFloat(0.2421),doubleToFloat(0.2563),doubleToFloat(0.2475),doubleToFloat(0.2495),doubleToFloat(0.2637),doubleToFloat(0.2183),doubleToFloat(0.2954),doubleToFloat(0.41),doubleToFloat(0.2848),doubleToFloat(0.42),doubleToFloat(0.3102),doubleToFloat(0.406),doubleToFloat(0.3249),doubleToFloat(0.4108),doubleToFloat(0.3094),doubleToFloat(0.4281),doubleToFloat(0.3357),doubleToFloat(0.4239),doubleToFloat(0.3553),doubleToFloat(0.4119),doubleToFloat(0.3352),doubleToFloat(0.3928),doubleToFloat(0.3073),doubleToFloat(0.3733),doubleToFloat(0.3066),doubleToFloat(0.3545),doubleToFloat(0.2784),doubleToFloat(0.2616),doubleToFloat(0.2782),doubleToFloat(0.255),doubleToFloat(0.2637),doubleToFloat(0.2183)], Java.type("float[]"))))))))
                  .addChild(new HAnimJoint("hanim_l_talocrural").setName("l_metatarsophalangeal_2").setDEF("hanim_l_metatarsophalangeal_2").setCenter(Java.to([doubleToFloat(3.631),doubleToFloat(3.792),doubleToFloat(0.05479)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(0)], Java.type("float[]"))).setLlimit(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(0)], Java.type("float[]")))
                    .addChild(new HAnimSegment("hanim_l_metatarsophalangeal_2").setName("l_tarsal_proximal_phalanx_2").setDEF("hanim_l_tarsal_proximal_phalanx_2")
                      .addChild(new Transform().setTranslation(Java.to([doubleToFloat(3.631),doubleToFloat(3.792),doubleToFloat(0.05479)], Java.type("float[]")))
                        .addChild(new Shape()
                          .setAppearance(new Appearance()
                            .setMaterial(new Material().setDiffuseColor(Java.to([doubleToFloat(0.588),doubleToFloat(0.588),doubleToFloat(0.588)], Java.type("float[]"))))
                            .setTexture(new ImageTexture().setUSE("DaTextureAtlas")))
                          .setGeometry(new IndexedFaceSet().setCoordIndex(Java.to([34,0,38,-1,0,6,35,-1,35,38,0,-1,35,6,1,-1,1,39,35,-1,3,4,37,-1,37,42,3,-1,23,40,33,-1,33,1,23,-1,24,30,17,-1,17,18,24,-1,31,24,18,-1,18,19,31,-1,41,25,0,-1,0,34,41,-1,2,36,40,-1,40,23,2,-1,21,20,30,-1,30,24,21,-1,22,21,24,-1,24,31,22,-1,37,4,25,-1,25,41,37,-1,8,9,3,-1,3,2,8,-1,9,10,4,-1,4,3,9,-1,5,26,23,-1,23,1,5,-1,27,7,0,-1,0,25,27,-1,26,8,2,-1,2,23,26,-1,10,27,25,-1,25,4,10,-1,11,28,26,-1,26,5,11,-1,29,13,7,-1,7,27,29,-1,14,15,9,-1,9,8,14,-1,28,14,8,-1,8,26,28,-1,16,29,27,-1,27,10,16,-1,15,16,10,-1,10,9,15,-1,18,17,11,-1,11,12,18,-1,17,30,28,-1,28,11,17,-1,19,18,12,-1,12,13,19,-1,31,19,13,-1,13,29,31,-1,20,21,15,-1,15,14,20,-1,30,20,14,-1,14,28,30,-1,22,31,29,-1,29,16,22,-1,21,22,16,-1,16,15,21,-1,36,2,3,-1,3,42,36,-1,7,32,6,-1,6,0,7,-1,6,32,5,-1,5,1,6,-1,13,12,32,-1,32,7,13,-1,5,32,12,-1,12,11,5,-1,39,1,33,-1,44,45,46,-1,46,47,48,-1,44,46,48,-1,49,50,51,-1,48,49,51,-1,44,48,51,-1,44,51,52,-1,44,52,43,-1,38,35,44,-1,44,43,38,-1,35,39,45,-1,45,44,35,-1,39,33,46,-1,46,45,39,-1,33,40,47,-1,47,46,33,-1,40,36,48,-1,48,47,40,-1,36,42,49,-1,49,48,36,-1,42,37,50,-1,50,49,42,-1,37,41,51,-1,51,50,37,-1,41,34,52,-1,52,51,41,-1,34,38,43,-1,43,52,34,-1], Java.type("int[]"))).setCreaseAngle(1.57).setTexCoordIndex(Java.to([30,3,35,-1,3,22,31,-1,31,35,3,-1,31,22,3,-1,3,35,31,-1,0,1,34,-1,34,37,0,-1,7,36,30,-1,30,3,7,-1,6,5,4,-1,4,2,6,-1,5,6,2,-1,2,4,5,-1,36,7,3,-1,3,30,36,-1,53,59,61,-1,61,49,53,-1,52,51,47,-1,47,48,52,-1,11,12,69,-1,69,68,11,-1,33,15,70,-1,70,73,33,-1,9,10,45,-1,45,50,9,-1,10,13,46,-1,46,45,10,-1,16,23,7,-1,7,3,16,-1,23,16,3,-1,3,7,23,-1,54,55,53,-1,53,49,54,-1,24,71,70,-1,70,15,24,-1,25,27,23,-1,23,16,25,-1,27,25,16,-1,16,23,27,-1,14,17,10,-1,10,9,14,-1,56,57,55,-1,55,54,56,-1,28,72,71,-1,71,24,28,-1,17,18,13,-1,13,10,17,-1,2,4,25,-1,25,26,2,-1,4,5,27,-1,27,25,4,-1,4,2,26,-1,26,25,4,-1,5,4,25,-1,25,27,5,-1,19,20,17,-1,17,14,19,-1,47,51,57,-1,57,56,47,-1,11,68,72,-1,72,28,11,-1,20,21,18,-1,18,17,20,-1,32,8,0,-1,0,37,32,-1,16,29,22,-1,22,3,16,-1,22,29,16,-1,16,3,22,-1,25,26,29,-1,29,16,25,-1,16,29,26,-1,26,25,16,-1,35,3,30,-1,64,63,65,-1,65,66,42,-1,64,65,42,-1,43,67,66,-1,42,43,66,-1,64,42,66,-1,64,66,65,-1,64,65,63,-1,35,31,39,-1,39,38,35,-1,31,35,38,-1,38,39,31,-1,35,30,40,-1,40,38,35,-1,30,36,41,-1,41,40,30,-1,61,59,42,-1,42,66,61,-1,58,62,43,-1,43,42,58,-1,62,60,67,-1,67,43,62,-1,33,73,74,-1,74,44,33,-1,36,30,40,-1,40,41,36,-1,30,35,38,-1,38,40,30,-1], Java.type("int[]")))
                            .setCoord(new Coordinate().setPoint(Java.to([doubleToFloat(-1.58),doubleToFloat(-1.105),doubleToFloat(0.8483),doubleToFloat(1.609),doubleToFloat(-0.9849),doubleToFloat(0.6977),doubleToFloat(1.609),doubleToFloat(-3.792),doubleToFloat(0.6078),doubleToFloat(-0.1196),doubleToFloat(-3.792),doubleToFloat(0.6078),doubleToFloat(-1.533),doubleToFloat(-3.792),doubleToFloat(0.6078),doubleToFloat(1.932),doubleToFloat(-1.571),doubleToFloat(1.892),doubleToFloat(-0.1196),doubleToFloat(-0.64),doubleToFloat(1.328),doubleToFloat(-1.887),doubleToFloat(-1.737),doubleToFloat(2.083),doubleToFloat(2.161),doubleToFloat(-3.792),doubleToFloat(1.854),doubleToFloat(-0.1196),doubleToFloat(-3.792),doubleToFloat(1.854),doubleToFloat(-2.067),doubleToFloat(-3.792),doubleToFloat(1.854),doubleToFloat(2.012),doubleToFloat(-2.105),doubleToFloat(3.145),doubleToFloat(-0.1196),doubleToFloat(-1.78),doubleToFloat(3.449),doubleToFloat(-1.942),doubleToFloat(-2.104),doubleToFloat(3.135),doubleToFloat(2.197),doubleToFloat(-3.792),doubleToFloat(3.105),doubleToFloat(-0.1196),doubleToFloat(-3.792),doubleToFloat(3.105),doubleToFloat(-2.147),doubleToFloat(-3.792),doubleToFloat(3.105),doubleToFloat(1.672),doubleToFloat(-2.757),doubleToFloat(4.374),doubleToFloat(-0.2477),doubleToFloat(-2.432),doubleToFloat(4.639),doubleToFloat(-1.759),doubleToFloat(-2.686),doubleToFloat(4.292),doubleToFloat(1.777),doubleToFloat(-3.792),doubleToFloat(4.488),doubleToFloat(-0.4437),doubleToFloat(-3.792),doubleToFloat(5.029),doubleToFloat(-1.884),doubleToFloat(-3.792),doubleToFloat(4.512),doubleToFloat(1.869),doubleToFloat(-3.111),doubleToFloat(0.5785),doubleToFloat(-0.4437),doubleToFloat(-3.205),doubleToFloat(5.149),doubleToFloat(-1.921),doubleToFloat(-3.111),doubleToFloat(0.5785),doubleToFloat(2.407),doubleToFloat(-3.288),doubleToFloat(1.854),doubleToFloat(-2.363),doubleToFloat(-3.288),doubleToFloat(1.854),doubleToFloat(2.337),doubleToFloat(-3.288),doubleToFloat(3.105),doubleToFloat(-2.407),doubleToFloat(-3.288),doubleToFloat(3.105),doubleToFloat(1.848),doubleToFloat(-3.288),doubleToFloat(4.652),doubleToFloat(-1.98),doubleToFloat(-3.288),doubleToFloat(4.534),doubleToFloat(-0.1196),doubleToFloat(-1.258),doubleToFloat(2.396),doubleToFloat(1.841),doubleToFloat(-1.196),doubleToFloat(-0.8169),doubleToFloat(-1.775),doubleToFloat(-1.329),doubleToFloat(-0.604),doubleToFloat(-0.0463),doubleToFloat(0.0542),doubleToFloat(0.6575),doubleToFloat(1.715),doubleToFloat(-3.792),doubleToFloat(-0.8435),doubleToFloat(-1.643),doubleToFloat(-3.792),doubleToFloat(-0.8435),doubleToFloat(-1.424),doubleToFloat(-0.1427),doubleToFloat(0.2436),doubleToFloat(1.272),doubleToFloat(-0.0029),doubleToFloat(0.0185),doubleToFloat(2.132),doubleToFloat(-2.896),doubleToFloat(-0.8753),doubleToFloat(-2.061),doubleToFloat(-2.899),doubleToFloat(-0.885),doubleToFloat(-0.1196),doubleToFloat(-3.792),doubleToFloat(-0.8435),doubleToFloat(-1.29),doubleToFloat(-0.0564),doubleToFloat(-0.712),doubleToFloat(-0.0804),doubleToFloat(0.1027),doubleToFloat(-0.3015),doubleToFloat(1.085),doubleToFloat(0.069),doubleToFloat(-0.9272),doubleToFloat(1.599),doubleToFloat(-1.001),doubleToFloat(-1.725),doubleToFloat(1.874),doubleToFloat(-2.613),doubleToFloat(-1.758),doubleToFloat(1.546),doubleToFloat(-3.337),doubleToFloat(-1.682),doubleToFloat(-0.1591),doubleToFloat(-3.336),doubleToFloat(-1.687),doubleToFloat(-1.551),doubleToFloat(-3.334),doubleToFloat(-1.692),doubleToFloat(-1.881),doubleToFloat(-2.614),doubleToFloat(-1.787),doubleToFloat(-1.609),doubleToFloat(-1.114),doubleToFloat(-1.525)], Java.type("float[]"))))
                            .setTexCoord(new TextureCoordinate().setPoint(Java.to([doubleToFloat(0.3109),doubleToFloat(0.2547),doubleToFloat(0.3018),doubleToFloat(0.2892),doubleToFloat(0.416),doubleToFloat(0.3757),doubleToFloat(0.3443),doubleToFloat(0.3733),doubleToFloat(0.4055),doubleToFloat(0.3535),doubleToFloat(0.4123),doubleToFloat(0.3444),doubleToFloat(0.4347),doubleToFloat(0.3611),doubleToFloat(0.3436),doubleToFloat(0.3472),doubleToFloat(0.2943),doubleToFloat(0.2204),doubleToFloat(0.3263),doubleToFloat(0.2346),doubleToFloat(0.3263),doubleToFloat(0.237),doubleToFloat(0.3478),doubleToFloat(0.2609),doubleToFloat(0.3553),doubleToFloat(0.2657),doubleToFloat(0.3264),doubleToFloat(0.2395),doubleToFloat(0.3278),doubleToFloat(0.2342),doubleToFloat(0.3283),doubleToFloat(0.26),doubleToFloat(0.3686),doubleToFloat(0.3612),doubleToFloat(0.328),doubleToFloat(0.2376),doubleToFloat(0.328),doubleToFloat(0.2398),doubleToFloat(0.3292),doubleToFloat(0.2346),doubleToFloat(0.3299),doubleToFloat(0.2374),doubleToFloat(0.3292),doubleToFloat(0.2394),doubleToFloat(0.3735),doubleToFloat(0.3991),doubleToFloat(0.3684),doubleToFloat(0.3388),doubleToFloat(0.3352),doubleToFloat(0.2593),doubleToFloat(0.3882),doubleToFloat(0.3563),doubleToFloat(0.397),doubleToFloat(0.3872),doubleToFloat(0.3885),doubleToFloat(0.336),doubleToFloat(0.3423),doubleToFloat(0.2596),doubleToFloat(0.3817),doubleToFloat(0.395),doubleToFloat(0.3073),doubleToFloat(0.3733),doubleToFloat(0.3553),doubleToFloat(0.4119),doubleToFloat(0.2637),doubleToFloat(0.2183),doubleToFloat(0.3196),doubleToFloat(0.2607),doubleToFloat(0.264),doubleToFloat(0.2919),doubleToFloat(0.3352),doubleToFloat(0.3928),doubleToFloat(0.3066),doubleToFloat(0.3545),doubleToFloat(0.2782),doubleToFloat(0.255),doubleToFloat(0.3352),doubleToFloat(0.3928),doubleToFloat(0.3553),doubleToFloat(0.4119),doubleToFloat(0.3073),doubleToFloat(0.3733),doubleToFloat(0.3066),doubleToFloat(0.3545),doubleToFloat(0.3251),doubleToFloat(0.2416),doubleToFloat(0.3233),doubleToFloat(0.2371),doubleToFloat(0.3071),doubleToFloat(0.2495),doubleToFloat(0.3252),doubleToFloat(0.237),doubleToFloat(0.3246),doubleToFloat(0.239),doubleToFloat(0.331),doubleToFloat(0.2422),doubleToFloat(0.3323),doubleToFloat(0.2432),doubleToFloat(0.327),doubleToFloat(0.2424),doubleToFloat(0.3242),doubleToFloat(0.2351),doubleToFloat(0.331),doubleToFloat(0.2416),doubleToFloat(0.3326),doubleToFloat(0.2426),doubleToFloat(0.3269),doubleToFloat(0.2414),doubleToFloat(0.3285),doubleToFloat(0.2419),doubleToFloat(0.3284),doubleToFloat(0.2413),doubleToFloat(0.3296),doubleToFloat(0.2417),doubleToFloat(0.3299),doubleToFloat(0.2413),doubleToFloat(0.3224),doubleToFloat(0.2349),doubleToFloat(0.3251),doubleToFloat(0.2416),doubleToFloat(0.3225),doubleToFloat(0.2392),doubleToFloat(0.3249),doubleToFloat(0.2428),doubleToFloat(0.3233),doubleToFloat(0.2371),doubleToFloat(0.3266),doubleToFloat(0.245),doubleToFloat(0.3277),doubleToFloat(0.2461),doubleToFloat(0.325),doubleToFloat(0.2439),doubleToFloat(0.3249),doubleToFloat(0.2428),doubleToFloat(0.3225),doubleToFloat(0.2392),doubleToFloat(0.3478),doubleToFloat(0.2639),doubleToFloat(0.3539),doubleToFloat(0.2685),doubleToFloat(0.3289),doubleToFloat(0.2647),doubleToFloat(0.3357),doubleToFloat(0.2624),doubleToFloat(0.3412),doubleToFloat(0.2616),doubleToFloat(0.3188),doubleToFloat(0.2667),doubleToFloat(0.3188),doubleToFloat(0.2667)], Java.type("float[]"))))))))))))
            .addChild(new HAnimJoint("hanim_humanoid_root").setName("r_hip").setDEF("hanim_r_hip").setCenter(Java.to([doubleToFloat(-3.18),doubleToFloat(31.25),doubleToFloat(-0.9491)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(0)], Java.type("float[]"))).setLlimit(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(0)], Java.type("float[]")))
              .addChild(new HAnimSegment("hanim_r_hip").setName("r_thigh").setDEF("hanim_r_thigh")
                .addChild(new Transform().setTranslation(Java.to([doubleToFloat(-3.18),doubleToFloat(31.25),doubleToFloat(-0.9491)], Java.type("float[]")))
                  .addChild(new Shape()
                    .setAppearance(new Appearance()
                      .setMaterial(new Material().setDiffuseColor(Java.to([doubleToFloat(0.588),doubleToFloat(0.588),doubleToFloat(0.588)], Java.type("float[]"))))
                      .setTexture(new ImageTexture().setUSE("DaTextureAtlas")))
                    .setGeometry(new IndexedFaceSet().setCoordIndex(Java.to([8,7,6,-1,6,5,4,-1,4,3,2,-1,6,4,2,-1,8,6,2,-1,0,8,2,-1,1,0,2,-1,40,0,1,-1,1,43,40,-1,43,1,2,-1,2,44,43,-1,44,2,3,-1,3,45,44,-1,45,3,4,-1,4,46,45,-1,46,4,5,-1,5,41,46,-1,41,5,6,-1,6,42,41,-1,42,6,7,-1,7,48,42,-1,48,7,8,-1,8,49,48,-1,49,8,0,-1,0,40,49,-1,9,17,16,-1,16,10,9,-1,10,16,18,-1,18,11,10,-1,11,18,37,-1,37,36,11,-1,12,19,20,-1,20,13,12,-1,13,20,21,-1,21,14,13,-1,15,14,21,-1,21,22,15,-1,9,15,22,-1,22,17,9,-1,16,17,35,-1,35,29,16,-1,30,18,16,-1,16,29,30,-1,31,19,37,-1,37,39,31,-1,32,20,19,-1,19,31,32,-1,33,21,20,-1,20,32,33,-1,22,21,33,-1,33,34,22,-1,17,22,34,-1,34,35,17,-1,24,23,41,-1,41,42,24,-1,48,47,24,-1,24,42,48,-1,43,25,38,-1,38,40,43,-1,26,25,43,-1,43,44,26,-1,27,26,44,-1,44,45,27,-1,28,27,45,-1,45,46,28,-1,23,28,46,-1,46,41,23,-1,29,35,23,-1,23,24,29,-1,47,30,29,-1,29,24,47,-1,25,31,39,-1,39,38,25,-1,26,32,31,-1,31,25,26,-1,27,33,32,-1,32,26,27,-1,34,33,27,-1,27,28,34,-1,35,34,28,-1,28,23,35,-1,37,19,12,-1,12,36,37,-1,39,37,18,-1,18,30,39,-1,38,39,30,-1,30,47,38,-1,47,49,40,-1,40,38,47,-1,49,47,48,-1,50,57,56,-1,56,55,54,-1,50,56,54,-1,54,53,52,-1,50,54,52,-1,51,50,52,-1,10,50,51,-1,51,9,10,-1,9,51,52,-1,52,15,9,-1,15,52,53,-1,53,14,15,-1,14,53,54,-1,54,13,14,-1,13,54,55,-1,55,12,13,-1,12,55,56,-1,56,36,12,-1,36,56,57,-1,57,11,36,-1,11,57,50,-1,50,10,11,-1], Java.type("int[]"))).setCreaseAngle(1.57).setTexCoordIndex(Java.to([8,7,6,-1,6,5,4,-1,4,3,2,-1,6,4,2,-1,8,6,2,-1,0,8,2,-1,1,0,2,-1,9,0,1,-1,1,12,9,-1,13,1,2,-1,2,14,13,-1,14,2,3,-1,3,15,14,-1,15,3,4,-1,4,16,15,-1,16,4,5,-1,5,10,16,-1,10,5,6,-1,6,11,10,-1,11,6,7,-1,7,17,11,-1,18,7,8,-1,8,19,18,-1,20,8,0,-1,0,9,20,-1,21,24,23,-1,23,22,21,-1,22,23,26,-1,26,25,22,-1,25,26,28,-1,28,27,25,-1,29,32,31,-1,31,30,29,-1,30,31,34,-1,34,33,30,-1,35,33,34,-1,34,36,35,-1,21,35,36,-1,36,24,21,-1,23,24,38,-1,38,37,23,-1,39,26,23,-1,23,37,39,-1,40,53,28,-1,28,41,40,-1,42,31,32,-1,32,54,42,-1,43,34,31,-1,31,42,43,-1,36,34,43,-1,43,44,36,-1,24,36,44,-1,44,38,24,-1,45,46,58,-1,58,59,45,-1,60,56,45,-1,45,59,60,-1,62,47,48,-1,48,57,62,-1,49,55,63,-1,63,64,49,-1,50,49,64,-1,64,65,50,-1,51,50,65,-1,65,66,51,-1,46,51,66,-1,66,58,46,-1,37,38,46,-1,46,45,37,-1,56,39,37,-1,37,45,56,-1,47,40,41,-1,41,48,47,-1,49,42,54,-1,54,55,49,-1,50,43,42,-1,42,49,50,-1,44,43,50,-1,50,51,44,-1,38,44,51,-1,51,46,38,-1,28,53,52,-1,52,27,28,-1,41,28,26,-1,26,39,41,-1,48,41,39,-1,39,56,48,-1,56,61,57,-1,57,48,56,-1,69,67,68,-1,70,77,76,-1,76,75,74,-1,70,76,74,-1,74,73,72,-1,70,74,72,-1,71,70,72,-1,22,70,71,-1,71,21,22,-1,21,71,72,-1,72,35,21,-1,35,72,73,-1,73,33,35,-1,33,73,74,-1,74,30,33,-1,30,74,75,-1,75,29,30,-1,52,75,76,-1,76,27,52,-1,27,76,77,-1,77,25,27,-1,25,77,70,-1,70,22,25,-1], Java.type("int[]")))
                      .setCoord(new Coordinate().setPoint(Java.to([doubleToFloat(2.213),doubleToFloat(3.415),doubleToFloat(-1.432),doubleToFloat(2.563),doubleToFloat(3.235),doubleToFloat(-0.044),doubleToFloat(1.896),doubleToFloat(3.353),doubleToFloat(1.304),doubleToFloat(0.2566),doubleToFloat(3.071),doubleToFloat(1.979),doubleToFloat(-1.061),doubleToFloat(2.666),doubleToFloat(1.218),doubleToFloat(-1.733),doubleToFloat(2.312),doubleToFloat(-0.0382),doubleToFloat(-1.105),doubleToFloat(2.573),doubleToFloat(-1.55),doubleToFloat(0.0841),doubleToFloat(2.894),doubleToFloat(-2.232),doubleToFloat(1.033),doubleToFloat(3.07),doubleToFloat(-2.249),doubleToFloat(-2.024),doubleToFloat(-14.23),doubleToFloat(-0.0084),doubleToFloat(-1.105),doubleToFloat(-14.23),doubleToFloat(-1.033),doubleToFloat(-0.2432),doubleToFloat(-14.23),doubleToFloat(-1.628),doubleToFloat(1.544),doubleToFloat(-14.23),doubleToFloat(-0.0084),doubleToFloat(0.958),doubleToFloat(-14.2),doubleToFloat(1.652),doubleToFloat(-0.2432),doubleToFloat(-14.22),doubleToFloat(2.319),doubleToFloat(-1.502),doubleToFloat(-14.17),doubleToFloat(1.712),doubleToFloat(-1.254),doubleToFloat(-12.45),doubleToFloat(-1.41),doubleToFloat(-1.95),doubleToFloat(-12.45),doubleToFloat(-0.0084),doubleToFloat(-0.2427),doubleToFloat(-12.44),doubleToFloat(-2.045),doubleToFloat(1.567),doubleToFloat(-12.45),doubleToFloat(-0.0084),doubleToFloat(0.9137),doubleToFloat(-12.46),doubleToFloat(1.762),doubleToFloat(-0.2427),doubleToFloat(-12.45),doubleToFloat(2.395),doubleToFloat(-1.378),doubleToFloat(-12.47),doubleToFloat(1.687),doubleToFloat(-2.546),doubleToFloat(-1.755),doubleToFloat(-0.0084),doubleToFloat(-1.61),doubleToFloat(-1.638),doubleToFloat(-2.255),doubleToFloat(2.471),doubleToFloat(-2.666),doubleToFloat(-0.0107),doubleToFloat(1.873),doubleToFloat(-2.65),doubleToFloat(2.057),doubleToFloat(0.0345),doubleToFloat(-2.462),doubleToFloat(3.088),doubleToFloat(-1.694),doubleToFloat(-2.104),doubleToFloat(1.976),doubleToFloat(-1.405),doubleToFloat(-8.209),doubleToFloat(-1.802),doubleToFloat(-0.1104),doubleToFloat(-8.092),doubleToFloat(-2.569),doubleToFloat(1.935),doubleToFloat(-8.892),doubleToFloat(-0.0084),doubleToFloat(1.302),doubleToFloat(-8.974),doubleToFloat(1.866),doubleToFloat(-0.1104),doubleToFloat(-8.922),doubleToFloat(2.658),doubleToFloat(-1.57),doubleToFloat(-8.734),doubleToFloat(1.815),doubleToFloat(-2.256),doubleToFloat(-8.478),doubleToFloat(-0.0084),doubleToFloat(0.7153),doubleToFloat(-14.23),doubleToFloat(-1.033),doubleToFloat(0.9827),doubleToFloat(-12.45),doubleToFloat(-1.368),doubleToFloat(2.238),doubleToFloat(-2.425),doubleToFloat(-2.148),doubleToFloat(1.544),doubleToFloat(-8.472),doubleToFloat(-1.802),doubleToFloat(2.337),doubleToFloat(-1.248),doubleToFloat(-2.213),doubleToFloat(-2.564),doubleToFloat(-0.1067),doubleToFloat(-0.0084),doubleToFloat(-1.757),doubleToFloat(-0.2099),doubleToFloat(-2.414),doubleToFloat(2.598),doubleToFloat(-1.583),doubleToFloat(-0.0084),doubleToFloat(1.971),doubleToFloat(-1.132),doubleToFloat(2.138),doubleToFloat(0.018),doubleToFloat(-0.5002),doubleToFloat(3.257),doubleToFloat(-1.652),doubleToFloat(-0.15),doubleToFloat(2),doubleToFloat(0.2311),doubleToFloat(-1.92),doubleToFloat(-3.327),doubleToFloat(-0.3087),doubleToFloat(-0.559),doubleToFloat(-3.515),doubleToFloat(0.8698),doubleToFloat(-0.924),doubleToFloat(-3.545),doubleToFloat(-0.7809),doubleToFloat(-15.71),doubleToFloat(-0.9452),doubleToFloat(-1.397),doubleToFloat(-15.71),doubleToFloat(-0.1162),doubleToFloat(-1.08),doubleToFloat(-15.71),doubleToFloat(1.251),doubleToFloat(-0.2583),doubleToFloat(-15.71),doubleToFloat(1.684),doubleToFloat(0.5384),doubleToFloat(-15.71),doubleToFloat(1.201),doubleToFloat(0.9046),doubleToFloat(-15.71),doubleToFloat(-0.1323),doubleToFloat(0.3675),doubleToFloat(-15.71),doubleToFloat(-0.9437),doubleToFloat(-0.238),doubleToFloat(-15.71),doubleToFloat(-1.355)], Java.type("float[]"))))
                      .setTexCoord(new TextureCoordinate().setPoint(Java.to([doubleToFloat(0.9323),doubleToFloat(0.8796),doubleToFloat(0.955),doubleToFloat(0.9007),doubleToFloat(0.8109),doubleToFloat(0.8829),doubleToFloat(0.8324),doubleToFloat(0.8719),doubleToFloat(0.8505),doubleToFloat(0.8713),doubleToFloat(0.8719),doubleToFloat(0.8723),doubleToFloat(0.9023),doubleToFloat(0.8773),doubleToFloat(0.9112),doubleToFloat(0.8772),doubleToFloat(0.922),doubleToFloat(0.8742),doubleToFloat(0.9323),doubleToFloat(0.8796),doubleToFloat(0.8719),doubleToFloat(0.8723),doubleToFloat(0.9023),doubleToFloat(0.8773),doubleToFloat(0.955),doubleToFloat(0.9007),doubleToFloat(0.7929),doubleToFloat(0.9027),doubleToFloat(0.8109),doubleToFloat(0.8829),doubleToFloat(0.8324),doubleToFloat(0.8719),doubleToFloat(0.8505),doubleToFloat(0.8713),doubleToFloat(0.9112),doubleToFloat(0.8772),doubleToFloat(0.9112),doubleToFloat(0.8772),doubleToFloat(0.922),doubleToFloat(0.8742),doubleToFloat(0.922),doubleToFloat(0.8742),doubleToFloat(0.8674),doubleToFloat(0.6509),doubleToFloat(0.8839),doubleToFloat(0.6494),doubleToFloat(0.8924),doubleToFloat(0.6779),doubleToFloat(0.8681),doubleToFloat(0.6767),doubleToFloat(0.8939),doubleToFloat(0.6493),doubleToFloat(0.9112),doubleToFloat(0.6761),doubleToFloat(0.9011),doubleToFloat(0.64),doubleToFloat(0.9277),doubleToFloat(0.6703),doubleToFloat(0.8255),doubleToFloat(0.6267),doubleToFloat(0.8368),doubleToFloat(0.6434),doubleToFloat(0.8121),doubleToFloat(0.6703),doubleToFloat(0.7869),doubleToFloat(0.6572),doubleToFloat(0.842),doubleToFloat(0.6491),doubleToFloat(0.8296),doubleToFloat(0.6745),doubleToFloat(0.8506),doubleToFloat(0.6493),doubleToFloat(0.8488),doubleToFloat(0.6758),doubleToFloat(0.9079),doubleToFloat(0.7498),doubleToFloat(0.87),doubleToFloat(0.745),doubleToFloat(0.9282),doubleToFloat(0.7486),doubleToFloat(0.9779),doubleToFloat(0.7341),doubleToFloat(0.9504),doubleToFloat(0.7433),doubleToFloat(0.7921),doubleToFloat(0.7337),doubleToFloat(0.8179),doubleToFloat(0.734),doubleToFloat(0.8447),doubleToFloat(0.7398),doubleToFloat(0.9056),doubleToFloat(0.8524),doubleToFloat(0.8721),doubleToFloat(0.8479),doubleToFloat(0.9822),doubleToFloat(0.8649),doubleToFloat(0.9552),doubleToFloat(0.8592),doubleToFloat(0.794),doubleToFloat(0.8537),doubleToFloat(0.82),doubleToFloat(0.8481),doubleToFloat(0.8471),doubleToFloat(0.8465),doubleToFloat(0.9073),doubleToFloat(0.6307),doubleToFloat(0.9433),doubleToFloat(0.6604),doubleToFloat(0.7593),doubleToFloat(0.7337),doubleToFloat(0.7655),doubleToFloat(0.8637),doubleToFloat(0.9289),doubleToFloat(0.8568),doubleToFloat(0.9323),doubleToFloat(0.8796),doubleToFloat(0.8719),doubleToFloat(0.8723),doubleToFloat(0.9023),doubleToFloat(0.8773),doubleToFloat(0.9112),doubleToFloat(0.8772),doubleToFloat(0.922),doubleToFloat(0.8742),doubleToFloat(0.955),doubleToFloat(0.9007),doubleToFloat(0.7929),doubleToFloat(0.9027),doubleToFloat(0.8109),doubleToFloat(0.8829),doubleToFloat(0.8324),doubleToFloat(0.8719),doubleToFloat(0.8505),doubleToFloat(0.8713),doubleToFloat(0.9289),doubleToFloat(0.8568),doubleToFloat(0.9112),doubleToFloat(0.8772),doubleToFloat(0.922),doubleToFloat(0.8742),doubleToFloat(0.8839),doubleToFloat(0.6494),doubleToFloat(0.8674),doubleToFloat(0.6509),doubleToFloat(0.8506),doubleToFloat(0.6493),doubleToFloat(0.842),doubleToFloat(0.6491),doubleToFloat(0.8368),doubleToFloat(0.6434),doubleToFloat(0.8255),doubleToFloat(0.6267),doubleToFloat(0.9011),doubleToFloat(0.64),doubleToFloat(0.8939),doubleToFloat(0.6493)], Java.type("float[]"))))))))
              .addChild(new HAnimJoint("hanim_r_hip").setName("r_knee").setDEF("hanim_r_knee").setCenter(Java.to([doubleToFloat(-3.414),doubleToFloat(17.040001),doubleToFloat(-0.9556)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(0)], Java.type("float[]"))).setLlimit(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(0)], Java.type("float[]")))
                .addChild(new HAnimSegment("hanim_r_knee").setName("r_calf").setDEF("hanim_r_calf")
                  .addChild(new Transform().setTranslation(Java.to([doubleToFloat(-3.414),doubleToFloat(17.040001),doubleToFloat(-0.9556)], Java.type("float[]")))
                    .addChild(new Shape()
                      .setAppearance(new Appearance()
                        .setMaterial(new Material().setDiffuseColor(Java.to([doubleToFloat(0.588),doubleToFloat(0.588),doubleToFloat(0.588)], Java.type("float[]"))))
                        .setTexture(new ImageTexture().setUSE("DaTextureAtlas")))
                      .setGeometry(new IndexedFaceSet().setCoordIndex(Java.to([32,0,1,-1,1,38,32,-1,33,2,0,-1,0,32,33,-1,34,3,14,-1,14,39,34,-1,35,4,3,-1,3,34,35,-1,5,4,35,-1,35,36,5,-1,6,5,36,-1,36,37,6,-1,1,6,37,-1,37,38,1,-1,24,25,8,-1,8,7,24,-1,26,9,8,-1,8,25,26,-1,15,31,27,-1,27,10,15,-1,11,10,27,-1,27,28,11,-1,12,11,28,-1,28,29,12,-1,13,12,29,-1,29,30,13,-1,24,7,13,-1,13,30,24,-1,9,15,20,-1,20,18,9,-1,31,15,9,-1,9,26,31,-1,8,16,17,-1,17,7,8,-1,9,18,16,-1,16,8,9,-1,19,20,15,-1,15,10,19,-1,21,19,10,-1,10,11,21,-1,22,21,11,-1,11,12,22,-1,23,22,12,-1,12,13,23,-1,7,17,23,-1,23,13,7,-1,33,18,20,-1,20,39,33,-1,16,32,38,-1,38,17,16,-1,18,33,32,-1,32,16,18,-1,19,34,39,-1,39,20,19,-1,35,34,19,-1,19,21,35,-1,36,35,21,-1,21,22,36,-1,37,36,22,-1,22,23,37,-1,38,37,23,-1,23,17,38,-1,2,33,39,-1,39,14,2,-1,0,40,1,-1,1,40,6,-1,6,40,5,-1,5,40,4,-1,4,40,3,-1,3,40,14,-1,14,40,2,-1,2,40,0,-1,24,41,42,-1,42,25,24,-1,25,42,43,-1,43,26,25,-1,26,43,44,-1,44,31,26,-1,31,44,45,-1,45,27,31,-1,27,45,46,-1,46,28,27,-1,28,46,47,-1,47,29,28,-1,29,47,48,-1,48,30,29,-1,30,48,41,-1,41,24,30,-1,41,48,47,-1,47,46,45,-1,41,47,45,-1,45,44,43,-1,41,45,43,-1,42,41,43,-1], Java.type("int[]"))).setCreaseAngle(1.57).setTexCoordIndex(Java.to([1,0,3,-1,3,2,1,-1,5,4,0,-1,0,1,5,-1,7,6,9,-1,9,8,7,-1,11,10,6,-1,6,7,11,-1,12,10,11,-1,11,13,12,-1,14,12,13,-1,13,15,14,-1,3,14,15,-1,15,2,3,-1,18,17,16,-1,16,19,18,-1,21,20,16,-1,16,17,21,-1,24,23,22,-1,22,25,24,-1,26,25,22,-1,22,27,26,-1,28,26,27,-1,27,29,28,-1,30,28,29,-1,29,31,30,-1,18,19,30,-1,30,31,18,-1,20,44,33,-1,33,32,20,-1,43,44,20,-1,20,21,43,-1,16,34,35,-1,35,19,16,-1,20,32,34,-1,34,16,20,-1,36,45,24,-1,24,25,36,-1,37,36,25,-1,25,26,37,-1,38,37,26,-1,26,28,38,-1,39,38,28,-1,28,30,39,-1,19,35,39,-1,39,30,19,-1,5,32,33,-1,33,41,5,-1,34,1,2,-1,2,35,34,-1,32,5,1,-1,1,34,32,-1,36,7,8,-1,8,45,36,-1,11,7,36,-1,36,37,11,-1,13,11,37,-1,37,38,13,-1,15,13,38,-1,38,39,15,-1,2,15,39,-1,39,35,2,-1,4,5,41,-1,41,42,4,-1,0,40,3,-1,3,40,14,-1,14,40,12,-1,12,40,10,-1,10,40,6,-1,6,40,9,-1,42,40,4,-1,4,40,0,-1,18,46,47,-1,47,17,18,-1,17,47,48,-1,48,21,17,-1,21,48,49,-1,49,43,21,-1,23,49,50,-1,50,22,23,-1,22,50,51,-1,51,27,22,-1,27,51,52,-1,52,29,27,-1,29,52,53,-1,53,31,29,-1,31,53,46,-1,46,18,31,-1,46,53,52,-1,52,51,50,-1,46,52,50,-1,50,49,48,-1,46,50,48,-1,47,46,48,-1], Java.type("int[]")))
                        .setCoord(new Coordinate().setPoint(Java.to([doubleToFloat(-0.6772),doubleToFloat(-12.59),doubleToFloat(-0.8455),doubleToFloat(-1.122),doubleToFloat(-12.59),doubleToFloat(-0.0018),doubleToFloat(-0.009),doubleToFloat(-12.59),doubleToFloat(-1.096),doubleToFloat(1.026),doubleToFloat(-12.59),doubleToFloat(-0.0018),doubleToFloat(0.604),doubleToFloat(-12.59),doubleToFloat(0.842),doubleToFloat(-0.009),doubleToFloat(-12.59),doubleToFloat(1.196),doubleToFloat(-0.6772),doubleToFloat(-12.59),doubleToFloat(0.842),doubleToFloat(-1.697),doubleToFloat(-1.448),doubleToFloat(-0.0018),doubleToFloat(-0.9307),doubleToFloat(-1.443),doubleToFloat(-1.147),doubleToFloat(-0.009),doubleToFloat(-1.44),doubleToFloat(-1.835),doubleToFloat(1.619),doubleToFloat(-1.448),doubleToFloat(-0.0018),doubleToFloat(0.9447),doubleToFloat(-1.496),doubleToFloat(1.521),doubleToFloat(-0.009),doubleToFloat(-1.513),doubleToFloat(2.101),doubleToFloat(-1.063),doubleToFloat(-1.454),doubleToFloat(1.487),doubleToFloat(0.604),doubleToFloat(-12.59),doubleToFloat(-0.8455),doubleToFloat(1.035),doubleToFloat(-1.443),doubleToFloat(-1.165),doubleToFloat(-1.046),doubleToFloat(-5.151),doubleToFloat(-1.186),doubleToFloat(-1.665),doubleToFloat(-5.556),doubleToFloat(-0.0018),doubleToFloat(-0.009),doubleToFloat(-4.957),doubleToFloat(-1.943),doubleToFloat(1.472),doubleToFloat(-5.761),doubleToFloat(-0.0018),doubleToFloat(0.9836),doubleToFloat(-5.363),doubleToFloat(-1.213),doubleToFloat(0.8429),doubleToFloat(-5.942),doubleToFloat(1.259),doubleToFloat(-0.009),doubleToFloat(-5.944),doubleToFloat(1.81),doubleToFloat(-0.9757),doubleToFloat(-5.877),doubleToFloat(1.262),doubleToFloat(-1.791),doubleToFloat(-0.0118),doubleToFloat(-0.0018),doubleToFloat(-0.8718),doubleToFloat(-0.0118),doubleToFloat(-1.026),doubleToFloat(-0.0095),doubleToFloat(-0.0118),doubleToFloat(-1.651),doubleToFloat(1.777),doubleToFloat(-0.0118),doubleToFloat(-0.0018),doubleToFloat(1.192),doubleToFloat(0.0146),doubleToFloat(1.658),doubleToFloat(-0.0095),doubleToFloat(-0.0006),doubleToFloat(2.325),doubleToFloat(-1.268),doubleToFloat(0.0444),doubleToFloat(1.718),doubleToFloat(0.949),doubleToFloat(-0.0118),doubleToFloat(-1.026),doubleToFloat(-0.785),doubleToFloat(-11.37),doubleToFloat(-0.968),doubleToFloat(-0.009),doubleToFloat(-11.36),doubleToFloat(-1.383),doubleToFloat(1.164),doubleToFloat(-11.41),doubleToFloat(-0.0018),doubleToFloat(0.7001),doubleToFloat(-11.44),doubleToFloat(0.9904),doubleToFloat(-0.009),doubleToFloat(-11.41),doubleToFloat(1.452),doubleToFloat(-0.7602),doubleToFloat(-11.41),doubleToFloat(0.9913),doubleToFloat(-1.305),doubleToFloat(-11.37),doubleToFloat(-0.0018),doubleToFloat(0.6593),doubleToFloat(-11.43),doubleToFloat(-1.065),doubleToFloat(-0.009),doubleToFloat(-12.78),doubleToFloat(-0.0018),doubleToFloat(-1.28),doubleToFloat(1.466),doubleToFloat(0.0746),doubleToFloat(-0.6343),doubleToFloat(1.466),doubleToFloat(-0.6311),doubleToFloat(0.0009),doubleToFloat(1.466),doubleToFloat(-1.039),doubleToFloat(0.7076),doubleToFloat(1.466),doubleToFloat(-0.6307),doubleToFloat(1.279),doubleToFloat(1.466),doubleToFloat(0.0701),doubleToFloat(0.8935),doubleToFloat(1.466),doubleToFloat(1.209),doubleToFloat(-0.0062),doubleToFloat(1.466),doubleToFloat(1.652),doubleToFloat(-0.9447),doubleToFloat(1.466),doubleToFloat(1.251)], Java.type("float[]"))))
                        .setTexCoord(new TextureCoordinate().setPoint(Java.to([doubleToFloat(0.8803),doubleToFloat(0.4005),doubleToFloat(0.8916),doubleToFloat(0.4184),doubleToFloat(0.8769),doubleToFloat(0.4226),doubleToFloat(0.8712),doubleToFloat(0.4055),doubleToFloat(0.8899),doubleToFloat(0.393),doubleToFloat(0.9065),doubleToFloat(0.4125),doubleToFloat(0.8327),doubleToFloat(0.3995),doubleToFloat(0.8182),doubleToFloat(0.4195),doubleToFloat(0.8033),doubleToFloat(0.4115),doubleToFloat(0.8255),doubleToFloat(0.3877),doubleToFloat(0.8438),doubleToFloat(0.4073),doubleToFloat(0.8361),doubleToFloat(0.4244),doubleToFloat(0.8487),doubleToFloat(0.4091),doubleToFloat(0.8471),doubleToFloat(0.4254),doubleToFloat(0.86),doubleToFloat(0.4061),doubleToFloat(0.8623),doubleToFloat(0.4237),doubleToFloat(0.9101),doubleToFloat(0.5733),doubleToFloat(0.9014),doubleToFloat(0.599),doubleToFloat(0.8859),doubleToFloat(0.5939),doubleToFloat(0.8913),doubleToFloat(0.5715),doubleToFloat(0.926),doubleToFloat(0.5758),doubleToFloat(0.9115),doubleToFloat(0.6008),doubleToFloat(0.8402),doubleToFloat(0.6091),doubleToFloat(0.8351),doubleToFloat(0.6188),doubleToFloat(0.8038),doubleToFloat(0.5929),doubleToFloat(0.8218),doubleToFloat(0.5846),doubleToFloat(0.8433),doubleToFloat(0.5761),doubleToFloat(0.8552),doubleToFloat(0.5988),doubleToFloat(0.8584),doubleToFloat(0.5722),doubleToFloat(0.8625),doubleToFloat(0.5922),doubleToFloat(0.8734),doubleToFloat(0.5718),doubleToFloat(0.8704),doubleToFloat(0.5929),doubleToFloat(0.9249),doubleToFloat(0.4799),doubleToFloat(0.9417),doubleToFloat(0.4724),doubleToFloat(0.9059),doubleToFloat(0.487),doubleToFloat(0.8846),doubleToFloat(0.4921),doubleToFloat(0.8055),doubleToFloat(0.4821),doubleToFloat(0.8287),doubleToFloat(0.4832),doubleToFloat(0.8463),doubleToFloat(0.4871),doubleToFloat(0.8654),doubleToFloat(0.4897),doubleToFloat(0.8588),doubleToFloat(0.3881),doubleToFloat(0.915),doubleToFloat(0.4056),doubleToFloat(0.891),doubleToFloat(0.3868),doubleToFloat(0.9186),doubleToFloat(0.615),doubleToFloat(0.9429),doubleToFloat(0.5818),doubleToFloat(0.7863),doubleToFloat(0.4837),doubleToFloat(0.8859),doubleToFloat(0.5939),doubleToFloat(0.9014),doubleToFloat(0.599),doubleToFloat(0.9115),doubleToFloat(0.6008),doubleToFloat(0.9186),doubleToFloat(0.615),doubleToFloat(0.8402),doubleToFloat(0.6091),doubleToFloat(0.8552),doubleToFloat(0.5988),doubleToFloat(0.8625),doubleToFloat(0.5922),doubleToFloat(0.8704),doubleToFloat(0.5929)], Java.type("float[]"))))))))
                .addChild(new HAnimJoint("hanim_r_knee").setName("r_talocrural").setDEF("hanim_r_talocrural").setCenter(Java.to([doubleToFloat(-3.631),doubleToFloat(4.504),doubleToFloat(-0.7461)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(0)], Java.type("float[]"))).setLlimit(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(0)], Java.type("float[]")))
                  .addChild(new HAnimSegment("hanim_r_talocrural").setName("r_talus").setDEF("hanim_r_talus")
                    .addChild(new Transform().setTranslation(Java.to([doubleToFloat(-3.631),doubleToFloat(4.504),doubleToFloat(-0.7461)], Java.type("float[]")))
                      .addChild(new Shape()
                        .setAppearance(new Appearance()
                          .setMaterial(new Material().setDiffuseColor(Java.to([doubleToFloat(0.588),doubleToFloat(0.588),doubleToFloat(0.588)], Java.type("float[]"))))
                          .setTexture(new ImageTexture().setUSE("DaTextureAtlas")))
                        .setGeometry(new IndexedFaceSet().setCoordIndex(Java.to([0,25,19,-1,19,1,0,-1,2,1,19,-1,19,20,2,-1,3,2,20,-1,20,21,3,-1,4,3,21,-1,21,22,4,-1,0,24,25,-1,26,3,4,-1,4,28,26,-1,29,2,3,-1,3,26,29,-1,30,1,2,-1,2,29,30,-1,27,0,1,-1,1,30,27,-1,16,26,28,-1,28,15,16,-1,17,29,26,-1,26,16,17,-1,18,30,29,-1,29,17,18,-1,14,27,30,-1,30,18,14,-1,19,25,6,-1,6,7,19,-1,20,19,7,-1,7,8,20,-1,21,20,8,-1,8,9,21,-1,22,21,9,-1,9,10,22,-1,11,23,22,-1,22,10,11,-1,5,23,11,-1,11,12,5,-1,13,24,5,-1,5,12,13,-1,6,25,24,-1,24,13,6,-1,6,31,7,-1,7,31,8,-1,8,31,9,-1,9,31,10,-1,10,31,11,-1,11,31,12,-1,12,31,13,-1,13,31,6,-1,16,15,32,-1,32,33,16,-1,17,16,33,-1,33,18,17,-1,18,33,32,-1,32,14,18,-1,23,4,22,-1,35,34,43,-1,43,42,41,-1,41,40,39,-1,39,38,37,-1,41,39,37,-1,43,41,37,-1,35,43,37,-1,35,37,36,-1,5,34,35,-1,35,23,5,-1,23,35,36,-1,36,4,23,-1,4,36,37,-1,37,28,4,-1,28,37,38,-1,38,15,28,-1,15,38,39,-1,39,32,15,-1,32,39,40,-1,40,14,32,-1,14,40,41,-1,41,27,14,-1,27,41,42,-1,42,0,27,-1,0,42,43,-1,43,24,0,-1,24,43,34,-1,34,5,24,-1], Java.type("int[]"))).setCreaseAngle(1.57).setTexCoordIndex(Java.to([0,5,2,-1,2,1,0,-1,3,1,2,-1,2,4,3,-1,1,3,4,-1,4,2,1,-1,0,1,2,-1,2,5,0,-1,0,13,5,-1,19,1,0,-1,0,10,19,-1,23,3,1,-1,1,19,23,-1,19,1,3,-1,3,23,19,-1,10,0,1,-1,1,19,10,-1,30,19,10,-1,10,28,30,-1,31,23,19,-1,19,30,31,-1,29,25,26,-1,26,32,29,-1,27,24,25,-1,25,29,27,-1,2,5,41,-1,41,39,2,-1,4,2,39,-1,39,40,4,-1,2,4,40,-1,40,39,2,-1,5,2,39,-1,39,41,5,-1,42,13,5,-1,5,41,42,-1,14,13,42,-1,42,44,14,-1,42,13,14,-1,14,44,42,-1,41,5,13,-1,13,42,41,-1,41,43,39,-1,39,43,40,-1,40,43,39,-1,39,43,41,-1,41,43,42,-1,42,43,44,-1,44,43,42,-1,42,43,41,-1,34,8,22,-1,22,35,34,-1,36,34,35,-1,35,37,36,-1,37,35,22,-1,22,33,37,-1,13,0,5,-1,16,15,16,-1,16,17,18,-1,18,21,20,-1,20,49,18,-1,18,20,18,-1,16,18,18,-1,16,16,18,-1,16,18,17,-1,14,45,46,-1,46,13,14,-1,13,46,47,-1,47,0,13,-1,0,47,48,-1,48,10,0,-1,11,18,49,-1,49,12,11,-1,6,49,20,-1,20,7,6,-1,9,50,51,-1,51,38,9,-1,12,21,18,-1,18,11,12,-1,10,48,47,-1,47,0,10,-1,0,47,46,-1,46,13,0,-1,13,46,45,-1,45,14,13,-1], Java.type("int[]")))
                          .setCoord(new Coordinate().setPoint(Java.to([doubleToFloat(-1.841),doubleToFloat(-1.908),doubleToFloat(-0.0161),doubleToFloat(-1.307),doubleToFloat(-2.033),doubleToFloat(-1.161),doubleToFloat(0.1196),doubleToFloat(-2.03),doubleToFloat(-1.925),doubleToFloat(1.25),doubleToFloat(-2.033),doubleToFloat(-1.167),doubleToFloat(1.775),doubleToFloat(-2.041),doubleToFloat(0.1968),doubleToFloat(0.0463),doubleToFloat(-0.6579),doubleToFloat(1.458),doubleToFloat(-1.122),doubleToFloat(0.1952),doubleToFloat(-0.0374),doubleToFloat(-0.6712),doubleToFloat(0.1856),doubleToFloat(-1.088),doubleToFloat(0.1196),doubleToFloat(0.1211),doubleToFloat(-1.349),doubleToFloat(0.9596),doubleToFloat(0.0475),doubleToFloat(-1.118),doubleToFloat(1.364),doubleToFloat(0.0184),doubleToFloat(-0.0431),doubleToFloat(0.9545),doubleToFloat(0.0396),doubleToFloat(0.5647),doubleToFloat(0.1196),doubleToFloat(0.1094),doubleToFloat(1.036),doubleToFloat(-0.6764),doubleToFloat(0.1777),doubleToFloat(0.5682),doubleToFloat(-1.715),doubleToFloat(-4.504),doubleToFloat(-0.0426),doubleToFloat(1.643),doubleToFloat(-4.504),doubleToFloat(-0.0426),doubleToFloat(1.156),doubleToFloat(-4.504),doubleToFloat(-1.154),doubleToFloat(0.1196),doubleToFloat(-4.504),doubleToFloat(-1.87),doubleToFloat(-1.219),doubleToFloat(-4.504),doubleToFloat(-1.154),doubleToFloat(-0.9699),doubleToFloat(-0.7703),doubleToFloat(-1.144),doubleToFloat(0.1196),doubleToFloat(-0.8069),doubleToFloat(-1.731),doubleToFloat(1.156),doubleToFloat(-0.9176),doubleToFloat(-1.144),doubleToFloat(1.623),doubleToFloat(-0.8933),doubleToFloat(0.1659),doubleToFloat(1.424),doubleToFloat(-0.8548),doubleToFloat(1.044),doubleToFloat(-1.272),doubleToFloat(-0.715),doubleToFloat(0.8194),doubleToFloat(-1.461),doubleToFloat(-0.7428),doubleToFloat(-0.042),doubleToFloat(1.451),doubleToFloat(-3.493),doubleToFloat(-1.19),doubleToFloat(-2.132),doubleToFloat(-3.609),doubleToFloat(-0.0745),doubleToFloat(2.061),doubleToFloat(-3.611),doubleToFloat(-0.0842),doubleToFloat(0.1196),doubleToFloat(-3.44),doubleToFloat(-1.941),doubleToFloat(-1.513),doubleToFloat(-3.488),doubleToFloat(-1.19),doubleToFloat(0.1196),doubleToFloat(0.4595),doubleToFloat(-0.0414),doubleToFloat(0.1196),doubleToFloat(-4.504),doubleToFloat(-0.0426),doubleToFloat(0.1196),doubleToFloat(-4.504),doubleToFloat(-1.154),doubleToFloat(0.0144),doubleToFloat(-1.393),doubleToFloat(1.513),doubleToFloat(1.198),doubleToFloat(-1.547),doubleToFloat(1.103),doubleToFloat(1.512),doubleToFloat(-2.253),doubleToFloat(0.7636),doubleToFloat(1.783),doubleToFloat(-3.743),doubleToFloat(0.5048),doubleToFloat(1.465),doubleToFloat(-4.436),doubleToFloat(0.6071),doubleToFloat(0.0938),doubleToFloat(-4.438),doubleToFloat(0.6133),doubleToFloat(-1.591),doubleToFloat(-4.439),doubleToFloat(0.6193),doubleToFloat(-1.906),doubleToFloat(-3.741),doubleToFloat(0.5362),doubleToFloat(-1.633),doubleToFloat(-2.143),doubleToFloat(0.5649),doubleToFloat(-1.127),doubleToFloat(-1.423),doubleToFloat(0.8897)], Java.type("float[]"))))
                          .setTexCoord(new TextureCoordinate().setPoint(Java.to([doubleToFloat(0.3073),doubleToFloat(0.3733),doubleToFloat(0.2855),doubleToFloat(0.3775),doubleToFloat(0.2892),doubleToFloat(0.3946),doubleToFloat(0.2565),doubleToFloat(0.3837),doubleToFloat(0.2667),doubleToFloat(0.4044),doubleToFloat(0.3127),doubleToFloat(0.3911),doubleToFloat(0.2725),doubleToFloat(0.2624),doubleToFloat(0.2707),doubleToFloat(0.2591),doubleToFloat(0.2565),doubleToFloat(0.2656),doubleToFloat(0.2782),doubleToFloat(0.255),doubleToFloat(0.3066),doubleToFloat(0.3545),doubleToFloat(0.2798),doubleToFloat(0.2632),doubleToFloat(0.2784),doubleToFloat(0.2616),doubleToFloat(0.3352),doubleToFloat(0.3928),doubleToFloat(0.3553),doubleToFloat(0.4119),doubleToFloat(0.2871),doubleToFloat(0.2631),doubleToFloat(0.2845),doubleToFloat(0.2634),doubleToFloat(0.2813),doubleToFloat(0.2643),doubleToFloat(0.2798),doubleToFloat(0.2632),doubleToFloat(0.2827),doubleToFloat(0.3624),doubleToFloat(0.2707),doubleToFloat(0.2591),doubleToFloat(0.267),doubleToFloat(0.2579),doubleToFloat(0.2601),doubleToFloat(0.2561),doubleToFloat(0.2519),doubleToFloat(0.3634),doubleToFloat(0.2675),doubleToFloat(0.2819),doubleToFloat(0.2613),doubleToFloat(0.2839),doubleToFloat(0.2533),doubleToFloat(0.2842),doubleToFloat(0.2683),doubleToFloat(0.2762),doubleToFloat(0.3096),doubleToFloat(0.3328),doubleToFloat(0.2602),doubleToFloat(0.2773),doubleToFloat(0.2784),doubleToFloat(0.337),doubleToFloat(0.2504),doubleToFloat(0.3407),doubleToFloat(0.2529),doubleToFloat(0.2783),doubleToFloat(0.2564),doubleToFloat(0.2466),doubleToFloat(0.2476),doubleToFloat(0.2629),doubleToFloat(0.2512),doubleToFloat(0.2562),doubleToFloat(0.2421),doubleToFloat(0.2563),doubleToFloat(0.2475),doubleToFloat(0.2495),doubleToFloat(0.2637),doubleToFloat(0.2183),doubleToFloat(0.2954),doubleToFloat(0.41),doubleToFloat(0.2848),doubleToFloat(0.42),doubleToFloat(0.3102),doubleToFloat(0.406),doubleToFloat(0.3249),doubleToFloat(0.4108),doubleToFloat(0.3094),doubleToFloat(0.4281),doubleToFloat(0.3357),doubleToFloat(0.4239),doubleToFloat(0.3553),doubleToFloat(0.4119),doubleToFloat(0.3352),doubleToFloat(0.3928),doubleToFloat(0.3073),doubleToFloat(0.3733),doubleToFloat(0.3066),doubleToFloat(0.3545),doubleToFloat(0.2784),doubleToFloat(0.2616),doubleToFloat(0.2782),doubleToFloat(0.255),doubleToFloat(0.2637),doubleToFloat(0.2183)], Java.type("float[]"))))))))
                  .addChild(new HAnimJoint("hanim_r_talocrural").setName("r_metatarsophalangeal_2").setDEF("hanim_r_metatarsophalangeal_2").setCenter(Java.to([doubleToFloat(-3.631),doubleToFloat(3.792),doubleToFloat(0.05479)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(0)], Java.type("float[]"))).setLlimit(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(0)], Java.type("float[]")))
                    .addChild(new HAnimSegment("hanim_r_metatarsophalangeal_2").setName("r_tarsal_proximal_phalanx_2").setDEF("hanim_r_tarsal_proximal_phalanx_2")
                      .addChild(new Transform().setTranslation(Java.to([doubleToFloat(-3.631),doubleToFloat(3.792),doubleToFloat(0.05479)], Java.type("float[]")))
                        .addChild(new Shape()
                          .setAppearance(new Appearance()
                            .setMaterial(new Material().setDiffuseColor(Java.to([doubleToFloat(0.588),doubleToFloat(0.588),doubleToFloat(0.588)], Java.type("float[]"))))
                            .setTexture(new ImageTexture().setUSE("DaTextureAtlas")))
                          .setGeometry(new IndexedFaceSet().setCoordIndex(Java.to([34,38,0,-1,0,38,35,-1,35,6,0,-1,35,39,1,-1,1,6,35,-1,3,42,37,-1,37,4,3,-1,23,1,33,-1,33,40,23,-1,24,18,17,-1,17,30,24,-1,31,19,18,-1,18,24,31,-1,41,34,0,-1,0,25,41,-1,2,23,40,-1,40,36,2,-1,21,24,30,-1,30,20,21,-1,22,31,24,-1,24,21,22,-1,37,41,25,-1,25,4,37,-1,8,2,3,-1,3,9,8,-1,9,3,4,-1,4,10,9,-1,5,1,23,-1,23,26,5,-1,27,25,0,-1,0,7,27,-1,26,23,2,-1,2,8,26,-1,10,4,25,-1,25,27,10,-1,11,5,26,-1,26,28,11,-1,29,27,7,-1,7,13,29,-1,14,8,9,-1,9,15,14,-1,28,26,8,-1,8,14,28,-1,16,10,27,-1,27,29,16,-1,15,9,10,-1,10,16,15,-1,18,12,11,-1,11,17,18,-1,17,11,28,-1,28,30,17,-1,19,13,12,-1,12,18,19,-1,31,29,13,-1,13,19,31,-1,20,14,15,-1,15,21,20,-1,30,28,14,-1,14,20,30,-1,22,16,29,-1,29,31,22,-1,21,15,16,-1,16,22,21,-1,36,42,3,-1,3,2,36,-1,7,0,6,-1,6,32,7,-1,6,1,5,-1,5,32,6,-1,13,7,32,-1,32,12,13,-1,5,11,12,-1,12,32,5,-1,39,33,1,-1,44,43,52,-1,44,52,51,-1,51,50,49,-1,51,49,48,-1,44,51,48,-1,48,47,46,-1,44,48,46,-1,44,46,45,-1,38,43,44,-1,44,35,38,-1,35,44,45,-1,45,39,35,-1,39,45,46,-1,46,33,39,-1,33,46,47,-1,47,40,33,-1,40,47,48,-1,48,36,40,-1,36,48,49,-1,49,42,36,-1,42,49,50,-1,50,37,42,-1,37,50,51,-1,51,41,37,-1,41,51,52,-1,52,34,41,-1,34,52,43,-1,43,38,34,-1], Java.type("int[]"))).setCreaseAngle(1.57).setTexCoordIndex(Java.to([30,35,3,-1,3,35,31,-1,31,22,3,-1,31,35,3,-1,3,22,31,-1,0,37,34,-1,34,1,0,-1,7,3,30,-1,30,36,7,-1,6,2,4,-1,4,5,6,-1,5,4,2,-1,2,6,5,-1,36,30,3,-1,3,7,36,-1,53,49,61,-1,61,59,53,-1,52,48,47,-1,47,51,52,-1,11,68,69,-1,69,12,11,-1,33,73,70,-1,70,15,33,-1,9,50,45,-1,45,10,9,-1,10,45,46,-1,46,13,10,-1,16,3,7,-1,7,23,16,-1,23,7,3,-1,3,16,23,-1,54,49,53,-1,53,55,54,-1,24,15,70,-1,70,71,24,-1,25,16,23,-1,23,27,25,-1,27,23,16,-1,16,25,27,-1,14,9,10,-1,10,17,14,-1,56,54,55,-1,55,57,56,-1,28,24,71,-1,71,72,28,-1,17,10,13,-1,13,18,17,-1,2,26,25,-1,25,4,2,-1,4,25,27,-1,27,5,4,-1,4,25,26,-1,26,2,4,-1,5,27,25,-1,25,4,5,-1,19,14,17,-1,17,20,19,-1,47,56,57,-1,57,51,47,-1,11,28,72,-1,72,68,11,-1,20,17,18,-1,18,21,20,-1,32,37,0,-1,0,8,32,-1,16,3,22,-1,22,29,16,-1,22,3,16,-1,16,29,22,-1,25,16,29,-1,29,26,25,-1,16,25,26,-1,26,29,16,-1,35,30,3,-1,64,63,65,-1,64,65,66,-1,66,67,43,-1,66,43,42,-1,64,66,42,-1,42,66,65,-1,64,42,65,-1,64,65,63,-1,35,38,39,-1,39,31,35,-1,31,39,38,-1,38,35,31,-1,35,38,40,-1,40,30,35,-1,30,40,41,-1,41,36,30,-1,61,66,42,-1,42,59,61,-1,58,42,43,-1,43,62,58,-1,62,43,67,-1,67,60,62,-1,33,44,74,-1,74,73,33,-1,36,41,40,-1,40,30,36,-1,30,40,38,-1,38,35,30,-1], Java.type("int[]")))
                            .setCoord(new Coordinate().setPoint(Java.to([doubleToFloat(1.58),doubleToFloat(-1.105),doubleToFloat(0.8483),doubleToFloat(-1.609),doubleToFloat(-0.9849),doubleToFloat(0.6977),doubleToFloat(-1.609),doubleToFloat(-3.792),doubleToFloat(0.6078),doubleToFloat(0.1196),doubleToFloat(-3.792),doubleToFloat(0.6078),doubleToFloat(1.533),doubleToFloat(-3.792),doubleToFloat(0.6078),doubleToFloat(-1.932),doubleToFloat(-1.571),doubleToFloat(1.892),doubleToFloat(0.1196),doubleToFloat(-0.64),doubleToFloat(1.328),doubleToFloat(1.887),doubleToFloat(-1.737),doubleToFloat(2.083),doubleToFloat(-2.161),doubleToFloat(-3.792),doubleToFloat(1.854),doubleToFloat(0.1196),doubleToFloat(-3.792),doubleToFloat(1.854),doubleToFloat(2.067),doubleToFloat(-3.792),doubleToFloat(1.854),doubleToFloat(-2.012),doubleToFloat(-2.105),doubleToFloat(3.145),doubleToFloat(0.1196),doubleToFloat(-1.78),doubleToFloat(3.449),doubleToFloat(1.942),doubleToFloat(-2.104),doubleToFloat(3.135),doubleToFloat(-2.197),doubleToFloat(-3.792),doubleToFloat(3.105),doubleToFloat(0.1196),doubleToFloat(-3.792),doubleToFloat(3.105),doubleToFloat(2.147),doubleToFloat(-3.792),doubleToFloat(3.105),doubleToFloat(-1.672),doubleToFloat(-2.757),doubleToFloat(4.374),doubleToFloat(0.2477),doubleToFloat(-2.432),doubleToFloat(4.639),doubleToFloat(1.759),doubleToFloat(-2.686),doubleToFloat(4.292),doubleToFloat(-1.777),doubleToFloat(-3.792),doubleToFloat(4.488),doubleToFloat(0.4437),doubleToFloat(-3.792),doubleToFloat(5.029),doubleToFloat(1.884),doubleToFloat(-3.792),doubleToFloat(4.512),doubleToFloat(-1.869),doubleToFloat(-3.111),doubleToFloat(0.5785),doubleToFloat(0.4437),doubleToFloat(-3.205),doubleToFloat(5.149),doubleToFloat(1.921),doubleToFloat(-3.111),doubleToFloat(0.5785),doubleToFloat(-2.407),doubleToFloat(-3.288),doubleToFloat(1.854),doubleToFloat(2.363),doubleToFloat(-3.288),doubleToFloat(1.854),doubleToFloat(-2.337),doubleToFloat(-3.288),doubleToFloat(3.105),doubleToFloat(2.407),doubleToFloat(-3.288),doubleToFloat(3.105),doubleToFloat(-1.848),doubleToFloat(-3.288),doubleToFloat(4.652),doubleToFloat(1.98),doubleToFloat(-3.288),doubleToFloat(4.534),doubleToFloat(0.1196),doubleToFloat(-1.258),doubleToFloat(2.396),doubleToFloat(-1.841),doubleToFloat(-1.196),doubleToFloat(-0.8169),doubleToFloat(1.775),doubleToFloat(-1.329),doubleToFloat(-0.604),doubleToFloat(0.0463),doubleToFloat(0.0542),doubleToFloat(0.6575),doubleToFloat(-1.715),doubleToFloat(-3.792),doubleToFloat(-0.8435),doubleToFloat(1.643),doubleToFloat(-3.792),doubleToFloat(-0.8435),doubleToFloat(1.424),doubleToFloat(-0.1427),doubleToFloat(0.2436),doubleToFloat(-1.272),doubleToFloat(-0.0029),doubleToFloat(0.0185),doubleToFloat(-2.132),doubleToFloat(-2.896),doubleToFloat(-0.8753),doubleToFloat(2.061),doubleToFloat(-2.899),doubleToFloat(-0.885),doubleToFloat(0.1196),doubleToFloat(-3.792),doubleToFloat(-0.8435),doubleToFloat(1.29),doubleToFloat(-0.0564),doubleToFloat(-0.712),doubleToFloat(0.0804),doubleToFloat(0.1027),doubleToFloat(-0.3015),doubleToFloat(-1.085),doubleToFloat(0.069),doubleToFloat(-0.9272),doubleToFloat(-1.599),doubleToFloat(-1.001),doubleToFloat(-1.725),doubleToFloat(-1.874),doubleToFloat(-2.613),doubleToFloat(-1.758),doubleToFloat(-1.546),doubleToFloat(-3.337),doubleToFloat(-1.682),doubleToFloat(0.1591),doubleToFloat(-3.336),doubleToFloat(-1.687),doubleToFloat(1.551),doubleToFloat(-3.334),doubleToFloat(-1.692),doubleToFloat(1.881),doubleToFloat(-2.614),doubleToFloat(-1.787),doubleToFloat(1.609),doubleToFloat(-1.114),doubleToFloat(-1.525)], Java.type("float[]"))))
                            .setTexCoord(new TextureCoordinate().setPoint(Java.to([doubleToFloat(0.3109),doubleToFloat(0.2547),doubleToFloat(0.3018),doubleToFloat(0.2892),doubleToFloat(0.416),doubleToFloat(0.3757),doubleToFloat(0.3443),doubleToFloat(0.3733),doubleToFloat(0.4055),doubleToFloat(0.3535),doubleToFloat(0.4123),doubleToFloat(0.3444),doubleToFloat(0.4347),doubleToFloat(0.3611),doubleToFloat(0.3436),doubleToFloat(0.3472),doubleToFloat(0.2943),doubleToFloat(0.2204),doubleToFloat(0.3263),doubleToFloat(0.2346),doubleToFloat(0.3263),doubleToFloat(0.237),doubleToFloat(0.3478),doubleToFloat(0.2609),doubleToFloat(0.3553),doubleToFloat(0.2657),doubleToFloat(0.3264),doubleToFloat(0.2395),doubleToFloat(0.3278),doubleToFloat(0.2342),doubleToFloat(0.3283),doubleToFloat(0.26),doubleToFloat(0.3686),doubleToFloat(0.3612),doubleToFloat(0.328),doubleToFloat(0.2376),doubleToFloat(0.328),doubleToFloat(0.2398),doubleToFloat(0.3292),doubleToFloat(0.2346),doubleToFloat(0.3299),doubleToFloat(0.2374),doubleToFloat(0.3292),doubleToFloat(0.2394),doubleToFloat(0.3735),doubleToFloat(0.3991),doubleToFloat(0.3684),doubleToFloat(0.3388),doubleToFloat(0.3352),doubleToFloat(0.2593),doubleToFloat(0.3882),doubleToFloat(0.3563),doubleToFloat(0.397),doubleToFloat(0.3872),doubleToFloat(0.3885),doubleToFloat(0.336),doubleToFloat(0.3423),doubleToFloat(0.2596),doubleToFloat(0.3817),doubleToFloat(0.395),doubleToFloat(0.3073),doubleToFloat(0.3733),doubleToFloat(0.3553),doubleToFloat(0.4119),doubleToFloat(0.2637),doubleToFloat(0.2183),doubleToFloat(0.3196),doubleToFloat(0.2607),doubleToFloat(0.264),doubleToFloat(0.2919),doubleToFloat(0.3352),doubleToFloat(0.3928),doubleToFloat(0.3066),doubleToFloat(0.3545),doubleToFloat(0.2782),doubleToFloat(0.255),doubleToFloat(0.3352),doubleToFloat(0.3928),doubleToFloat(0.3553),doubleToFloat(0.4119),doubleToFloat(0.3073),doubleToFloat(0.3733),doubleToFloat(0.3066),doubleToFloat(0.3545),doubleToFloat(0.3251),doubleToFloat(0.2416),doubleToFloat(0.3233),doubleToFloat(0.2371),doubleToFloat(0.3071),doubleToFloat(0.2495),doubleToFloat(0.3252),doubleToFloat(0.237),doubleToFloat(0.3246),doubleToFloat(0.239),doubleToFloat(0.331),doubleToFloat(0.2422),doubleToFloat(0.3323),doubleToFloat(0.2432),doubleToFloat(0.327),doubleToFloat(0.2424),doubleToFloat(0.3242),doubleToFloat(0.2351),doubleToFloat(0.331),doubleToFloat(0.2416),doubleToFloat(0.3326),doubleToFloat(0.2426),doubleToFloat(0.3269),doubleToFloat(0.2414),doubleToFloat(0.3285),doubleToFloat(0.2419),doubleToFloat(0.3284),doubleToFloat(0.2413),doubleToFloat(0.3296),doubleToFloat(0.2417),doubleToFloat(0.3299),doubleToFloat(0.2413),doubleToFloat(0.3224),doubleToFloat(0.2349),doubleToFloat(0.3251),doubleToFloat(0.2416),doubleToFloat(0.3225),doubleToFloat(0.2392),doubleToFloat(0.3249),doubleToFloat(0.2428),doubleToFloat(0.3233),doubleToFloat(0.2371),doubleToFloat(0.3266),doubleToFloat(0.245),doubleToFloat(0.3277),doubleToFloat(0.2461),doubleToFloat(0.325),doubleToFloat(0.2439),doubleToFloat(0.3249),doubleToFloat(0.2428),doubleToFloat(0.3225),doubleToFloat(0.2392),doubleToFloat(0.3478),doubleToFloat(0.2639),doubleToFloat(0.3539),doubleToFloat(0.2685),doubleToFloat(0.3289),doubleToFloat(0.2647),doubleToFloat(0.3357),doubleToFloat(0.2624),doubleToFloat(0.3412),doubleToFloat(0.2616),doubleToFloat(0.3188),doubleToFloat(0.2667),doubleToFloat(0.3188),doubleToFloat(0.2667)], Java.type("float[]"))))))))))))
            .addChild(new HAnimJoint("hanim_humanoid_root").setName("sacroiliac").setDEF("hanim_sacroiliac").setCenter(Java.to([doubleToFloat(0),doubleToFloat(29.620001),doubleToFloat(-1.431)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(0)], Java.type("float[]"))).setLlimit(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(0)], Java.type("float[]")))
              .addChild(new HAnimSegment("hanim_sacroiliac").setName("pelvis").setDEF("hanim_pelvis")
                .addChild(new Transform().setTranslation(Java.to([doubleToFloat(0),doubleToFloat(29.620001),doubleToFloat(-1.431)], Java.type("float[]")))
                  .addChild(new Shape()
                    .setAppearance(new Appearance()
                      .setMaterial(new Material().setDiffuseColor(Java.to([doubleToFloat(0.588),doubleToFloat(0.588),doubleToFloat(0.588)], Java.type("float[]"))))
                      .setTexture(new ImageTexture().setUSE("DaTextureAtlas")))
                    .setGeometry(new IndexedFaceSet().setCoordIndex(Java.to([12,0,6,-1,6,7,12,-1,11,23,45,-1,45,9,11,-1,21,4,2,-1,2,20,21,-1,13,5,3,-1,3,11,13,-1,17,18,6,-1,6,0,17,-1,14,7,6,-1,6,1,14,-1,15,35,24,-1,24,2,15,-1,19,60,37,-1,37,3,19,-1,12,8,4,-1,4,0,12,-1,16,22,5,-1,5,1,16,-1,13,11,9,-1,17,0,4,-1,4,21,17,-1,14,1,5,-1,5,13,14,-1,8,15,2,-1,2,4,8,-1,22,19,3,-1,3,5,22,-1,18,16,1,-1,1,6,18,-1,31,38,66,-1,66,26,31,-1,25,15,30,-1,28,12,7,-1,7,27,28,-1,29,8,12,-1,12,28,29,-1,15,8,29,-1,29,30,15,-1,32,9,31,-1,33,13,9,-1,9,32,33,-1,34,14,13,-1,13,33,34,-1,27,7,14,-1,14,34,27,-1,35,15,25,-1,25,39,35,-1,10,20,2,-1,2,24,10,-1,11,3,37,-1,37,23,11,-1,38,31,9,-1,9,45,38,-1,26,66,39,-1,39,25,26,-1,30,26,25,-1,18,17,36,-1,17,21,36,-1,21,20,36,-1,20,10,36,-1,60,19,36,-1,19,22,36,-1,22,16,36,-1,16,18,36,-1,30,29,28,-1,28,27,34,-1,34,33,32,-1,28,34,32,-1,30,28,32,-1,30,32,31,-1,26,30,31,-1,40,43,42,-1,42,41,40,-1,44,46,45,-1,45,23,44,-1,48,47,50,-1,50,49,48,-1,51,44,53,-1,53,52,51,-1,54,41,42,-1,42,55,54,-1,57,56,42,-1,42,43,57,-1,58,50,24,-1,24,35,58,-1,59,53,37,-1,37,60,59,-1,40,41,49,-1,49,61,40,-1,62,56,52,-1,52,63,62,-1,51,46,44,-1,54,48,49,-1,49,41,54,-1,57,51,52,-1,52,56,57,-1,61,49,50,-1,50,58,61,-1,63,52,53,-1,53,59,63,-1,55,42,56,-1,56,62,55,-1,65,64,66,-1,66,38,65,-1,67,68,58,-1,69,70,43,-1,43,40,69,-1,71,69,40,-1,40,61,71,-1,58,68,71,-1,71,61,58,-1,72,65,46,-1,73,72,46,-1,46,51,73,-1,74,73,51,-1,51,57,74,-1,70,74,57,-1,57,43,70,-1,35,39,67,-1,67,58,35,-1,10,24,50,-1,50,47,10,-1,44,23,37,-1,37,53,44,-1,38,45,46,-1,46,65,38,-1,64,67,39,-1,39,66,64,-1,68,67,64,-1,55,36,54,-1,54,36,48,-1,48,36,47,-1,47,36,10,-1,60,36,59,-1,59,36,63,-1,63,36,62,-1,62,36,55,-1,72,73,74,-1,74,70,69,-1,72,74,69,-1,69,71,68,-1,72,69,68,-1,65,72,68,-1,64,65,68,-1], Java.type("int[]"))).setCreaseAngle(1.57).setTexCoordIndex(Java.to([0,1,2,-1,2,3,0,-1,4,5,6,-1,6,7,4,-1,9,10,11,-1,11,8,9,-1,12,13,14,-1,14,4,12,-1,15,16,2,-1,2,1,15,-1,18,3,2,-1,2,17,18,-1,19,20,21,-1,21,11,19,-1,22,23,24,-1,24,14,22,-1,0,25,10,-1,10,1,0,-1,26,27,13,-1,13,17,26,-1,12,4,7,-1,15,1,10,-1,10,9,15,-1,18,17,13,-1,13,12,18,-1,25,19,11,-1,11,10,25,-1,27,22,14,-1,14,13,27,-1,16,26,17,-1,17,2,16,-1,29,38,30,-1,30,28,29,-1,40,19,31,-1,32,0,3,-1,3,33,32,-1,34,25,0,-1,0,32,34,-1,19,25,34,-1,34,31,19,-1,35,7,29,-1,36,12,7,-1,7,35,36,-1,37,18,12,-1,12,36,37,-1,33,3,18,-1,18,37,33,-1,20,19,40,-1,40,41,20,-1,39,8,11,-1,11,21,39,-1,4,14,24,-1,24,5,4,-1,38,29,7,-1,7,6,38,-1,28,30,41,-1,41,40,28,-1,31,28,40,-1,16,15,42,-1,15,9,42,-1,9,8,42,-1,8,39,42,-1,23,22,42,-1,22,27,42,-1,27,26,42,-1,26,16,42,-1,31,34,32,-1,32,33,37,-1,37,36,35,-1,32,37,35,-1,31,32,35,-1,31,35,29,-1,28,31,29,-1,43,46,45,-1,45,44,43,-1,47,50,49,-1,49,48,47,-1,52,51,54,-1,54,53,52,-1,55,47,57,-1,57,56,55,-1,58,44,45,-1,45,59,58,-1,61,60,45,-1,45,46,61,-1,62,54,64,-1,64,63,62,-1,65,57,67,-1,67,66,65,-1,43,44,53,-1,53,68,43,-1,69,60,56,-1,56,70,69,-1,55,50,47,-1,58,52,53,-1,53,44,58,-1,61,55,56,-1,56,60,61,-1,68,53,54,-1,54,62,68,-1,70,56,57,-1,57,65,70,-1,59,45,60,-1,60,69,59,-1,72,71,74,-1,74,73,72,-1,75,76,62,-1,77,78,46,-1,46,43,77,-1,79,77,43,-1,43,68,79,-1,62,76,79,-1,79,68,62,-1,80,72,50,-1,81,80,50,-1,50,55,81,-1,82,81,55,-1,55,61,82,-1,78,82,61,-1,61,46,78,-1,63,83,75,-1,75,62,63,-1,84,64,54,-1,54,51,84,-1,47,48,67,-1,67,57,47,-1,73,49,50,-1,50,72,73,-1,71,75,83,-1,83,74,71,-1,76,75,71,-1,59,85,58,-1,58,85,52,-1,52,85,51,-1,51,85,84,-1,66,85,65,-1,65,85,70,-1,70,85,69,-1,69,85,59,-1,80,81,82,-1,82,78,77,-1,80,82,77,-1,77,79,76,-1,80,77,76,-1,72,80,76,-1,71,72,76,-1], Java.type("int[]")))
                      .setCoord(new Coordinate().setPoint(Java.to([doubleToFloat(4.708),doubleToFloat(5.247),doubleToFloat(-2.04),doubleToFloat(4.436),doubleToFloat(5.275),doubleToFloat(2.684),doubleToFloat(1.045),doubleToFloat(4.38),doubleToFloat(-4.101),doubleToFloat(1.455),doubleToFloat(4.932),doubleToFloat(4.263),doubleToFloat(3.369),doubleToFloat(4.858),doubleToFloat(-3.647),doubleToFloat(3.109),doubleToFloat(5.122),doubleToFloat(4.071),doubleToFloat(5.453),doubleToFloat(5.388),doubleToFloat(0.4763),doubleToFloat(5.679),doubleToFloat(3.668),doubleToFloat(0.4763),doubleToFloat(3.592),doubleToFloat(2.884),doubleToFloat(-3.721),doubleToFloat(1.228),doubleToFloat(0.9806),doubleToFloat(2.753),doubleToFloat(0),doubleToFloat(6.939),doubleToFloat(-3.34),doubleToFloat(1.462),doubleToFloat(2.823),doubleToFloat(4.176),doubleToFloat(4.995),doubleToFloat(3.357),doubleToFloat(-2.197),doubleToFloat(3.097),doubleToFloat(3.005),doubleToFloat(4.091),doubleToFloat(4.778),doubleToFloat(3.365),doubleToFloat(2.651),doubleToFloat(1.397),doubleToFloat(2.537),doubleToFloat(-4.004),doubleToFloat(4.094),doubleToFloat(6.939),doubleToFloat(2.37),doubleToFloat(4.468),doubleToFloat(6.939),doubleToFloat(-1.743),doubleToFloat(5.018),doubleToFloat(6.939),doubleToFloat(0.4763),doubleToFloat(1.182),doubleToFloat(6.939),doubleToFloat(3.906),doubleToFloat(0.7664),doubleToFloat(6.939),doubleToFloat(-3.517),doubleToFloat(3.013),doubleToFloat(6.939),doubleToFloat(-3.122),doubleToFloat(2.824),doubleToFloat(6.939),doubleToFloat(3.682),doubleToFloat(0),doubleToFloat(2.646),doubleToFloat(4.237),doubleToFloat(0),doubleToFloat(4.189),doubleToFloat(-3.936),doubleToFloat(0.9075),doubleToFloat(0.8489),doubleToFloat(-3.091),doubleToFloat(0.8381),doubleToFloat(0.3792),doubleToFloat(-1.731),doubleToFloat(5.739),doubleToFloat(1.52),doubleToFloat(0.4735),doubleToFloat(4.932),doubleToFloat(1.417),doubleToFloat(-1.932),doubleToFloat(3.484),doubleToFloat(1.068),doubleToFloat(-3.033),doubleToFloat(2.305),doubleToFloat(0.7032),doubleToFloat(-3.064),doubleToFloat(0.5771),doubleToFloat(0.0447),doubleToFloat(0.3717),doubleToFloat(1.204),doubleToFloat(0.4952),doubleToFloat(2.62),doubleToFloat(3.157),doubleToFloat(1.127),doubleToFloat(3.739),doubleToFloat(4.827),doubleToFloat(1.477),doubleToFloat(2.482),doubleToFloat(0),doubleToFloat(2.581),doubleToFloat(-3.824),doubleToFloat(0),doubleToFloat(7.505),doubleToFloat(0.4787),doubleToFloat(0),doubleToFloat(4.844),doubleToFloat(4.344),doubleToFloat(0),doubleToFloat(-0.0417),doubleToFloat(0.3717),doubleToFloat(0),doubleToFloat(0.8576),doubleToFloat(-3.137),doubleToFloat(-4.995),doubleToFloat(3.357),doubleToFloat(-2.197),doubleToFloat(-4.708),doubleToFloat(5.247),doubleToFloat(-2.04),doubleToFloat(-5.453),doubleToFloat(5.388),doubleToFloat(0.4763),doubleToFloat(-5.679),doubleToFloat(3.668),doubleToFloat(0.4763),doubleToFloat(-1.462),doubleToFloat(2.823),doubleToFloat(4.176),doubleToFloat(0),doubleToFloat(0.8319),doubleToFloat(2.875),doubleToFloat(-1.228),doubleToFloat(0.9806),doubleToFloat(2.753),doubleToFloat(-0.7664),doubleToFloat(6.939),doubleToFloat(-3.517),doubleToFloat(-3.013),doubleToFloat(6.939),doubleToFloat(-3.122),doubleToFloat(-3.369),doubleToFloat(4.858),doubleToFloat(-3.647),doubleToFloat(-1.045),doubleToFloat(4.38),doubleToFloat(-4.101),doubleToFloat(-3.097),doubleToFloat(3.005),doubleToFloat(4.091),doubleToFloat(-3.109),doubleToFloat(5.122),doubleToFloat(4.071),doubleToFloat(-1.455),doubleToFloat(4.932),doubleToFloat(4.263),doubleToFloat(-4.468),doubleToFloat(6.939),doubleToFloat(-1.743),doubleToFloat(-5.018),doubleToFloat(6.939),doubleToFloat(0.4763),doubleToFloat(-4.436),doubleToFloat(5.275),doubleToFloat(2.684),doubleToFloat(-4.778),doubleToFloat(3.365),doubleToFloat(2.651),doubleToFloat(-1.397),doubleToFloat(2.537),doubleToFloat(-4.004),doubleToFloat(-1.182),doubleToFloat(6.939),doubleToFloat(3.906),doubleToFloat(0),doubleToFloat(6.939),doubleToFloat(4.008),doubleToFloat(-3.592),doubleToFloat(2.884),doubleToFloat(-3.721),doubleToFloat(-4.094),doubleToFloat(6.939),doubleToFloat(2.37),doubleToFloat(-2.824),doubleToFloat(6.939),doubleToFloat(3.682),doubleToFloat(-0.8381),doubleToFloat(0.3792),doubleToFloat(-1.731),doubleToFloat(-0.5771),doubleToFloat(0.0447),doubleToFloat(0.3717),doubleToFloat(0),doubleToFloat(0.3221),doubleToFloat(-1.688),doubleToFloat(-0.9075),doubleToFloat(0.8489),doubleToFloat(-3.091),doubleToFloat(-2.305),doubleToFloat(0.7032),doubleToFloat(-3.064),doubleToFloat(-4.932),doubleToFloat(1.417),doubleToFloat(-1.932),doubleToFloat(-5.739),doubleToFloat(1.52),doubleToFloat(0.4735),doubleToFloat(-3.484),doubleToFloat(1.068),doubleToFloat(-3.033),doubleToFloat(-1.204),doubleToFloat(0.4952),doubleToFloat(2.62),doubleToFloat(-3.157),doubleToFloat(1.127),doubleToFloat(3.739),doubleToFloat(-4.827),doubleToFloat(1.477),doubleToFloat(2.482)], Java.type("float[]"))))
                      .setTexCoord(new TextureCoordinate().setPoint(Java.to([doubleToFloat(0.5751),doubleToFloat(0.2385),doubleToFloat(0.5817),doubleToFloat(0.2593),doubleToFloat(0.5297),doubleToFloat(0.2685),doubleToFloat(0.5302),doubleToFloat(0.2531),doubleToFloat(0.4675),doubleToFloat(0.1943),doubleToFloat(0.4561),doubleToFloat(0.1765),doubleToFloat(0.493),doubleToFloat(0.1526),doubleToFloat(0.5029),doubleToFloat(0.1659),doubleToFloat(0.6476),doubleToFloat(0.2378),doubleToFloat(0.6188),doubleToFloat(0.2624),doubleToFloat(0.6071),doubleToFloat(0.2407),doubleToFloat(0.6314),doubleToFloat(0.2148),doubleToFloat(0.4776),doubleToFloat(0.2139),doubleToFloat(0.4649),doubleToFloat(0.2379),doubleToFloat(0.4466),doubleToFloat(0.218),doubleToFloat(0.582),doubleToFloat(0.2803),doubleToFloat(0.5317),doubleToFloat(0.2843),doubleToFloat(0.4884),doubleToFloat(0.2554),doubleToFloat(0.4952),doubleToFloat(0.2386),doubleToFloat(0.6092),doubleToFloat(0.1981),doubleToFloat(0.6214),doubleToFloat(0.1786),doubleToFloat(0.6425),doubleToFloat(0.2044),doubleToFloat(0.4311),doubleToFloat(0.2355),doubleToFloat(0.4187),doubleToFloat(0.2238),doubleToFloat(0.4328),doubleToFloat(0.2038),doubleToFloat(0.5916),doubleToFloat(0.2227),doubleToFloat(0.4821),doubleToFloat(0.2718),doubleToFloat(0.4517),doubleToFloat(0.2538),doubleToFloat(0.5711),doubleToFloat(0.169),doubleToFloat(0.54),doubleToFloat(0.1541),doubleToFloat(0.57),doubleToFloat(0.1459),doubleToFloat(0.584),doubleToFloat(0.185),doubleToFloat(0.567),doubleToFloat(0.2188),doubleToFloat(0.5323),doubleToFloat(0.2285),doubleToFloat(0.5788),doubleToFloat(0.2054),doubleToFloat(0.5111),doubleToFloat(0.167),doubleToFloat(0.4948),doubleToFloat(0.1964),doubleToFloat(0.5061),doubleToFloat(0.2192),doubleToFloat(0.5359),doubleToFloat(0.144),doubleToFloat(0.6567),doubleToFloat(0.2307),doubleToFloat(0.5901),doubleToFloat(0.1835),doubleToFloat(0.5957),doubleToFloat(0.1623),doubleToFloat(0.5353),doubleToFloat(0.2566),doubleToFloat(0.5751),doubleToFloat(0.2385),doubleToFloat(0.5817),doubleToFloat(0.2593),doubleToFloat(0.5297),doubleToFloat(0.2685),doubleToFloat(0.5302),doubleToFloat(0.2531),doubleToFloat(0.4675),doubleToFloat(0.1943),doubleToFloat(0.4561),doubleToFloat(0.1765),doubleToFloat(0.493),doubleToFloat(0.1526),doubleToFloat(0.5029),doubleToFloat(0.1659),doubleToFloat(0.6476),doubleToFloat(0.2378),doubleToFloat(0.6188),doubleToFloat(0.2624),doubleToFloat(0.6071),doubleToFloat(0.2407),doubleToFloat(0.6314),doubleToFloat(0.2148),doubleToFloat(0.4776),doubleToFloat(0.2139),doubleToFloat(0.4649),doubleToFloat(0.2379),doubleToFloat(0.4466),doubleToFloat(0.218),doubleToFloat(0.582),doubleToFloat(0.2803),doubleToFloat(0.5317),doubleToFloat(0.2843),doubleToFloat(0.4884),doubleToFloat(0.2554),doubleToFloat(0.4952),doubleToFloat(0.2386),doubleToFloat(0.6092),doubleToFloat(0.1981),doubleToFloat(0.6214),doubleToFloat(0.1786),doubleToFloat(0.6425),doubleToFloat(0.2044),doubleToFloat(0.4311),doubleToFloat(0.2355),doubleToFloat(0.4187),doubleToFloat(0.2238),doubleToFloat(0.4328),doubleToFloat(0.2038),doubleToFloat(0.5916),doubleToFloat(0.2227),doubleToFloat(0.4821),doubleToFloat(0.2718),doubleToFloat(0.4517),doubleToFloat(0.2538),doubleToFloat(0.5711),doubleToFloat(0.169),doubleToFloat(0.54),doubleToFloat(0.1541),doubleToFloat(0.5359),doubleToFloat(0.144),doubleToFloat(0.57),doubleToFloat(0.1459),doubleToFloat(0.5901),doubleToFloat(0.1835),doubleToFloat(0.584),doubleToFloat(0.185),doubleToFloat(0.567),doubleToFloat(0.2188),doubleToFloat(0.5323),doubleToFloat(0.2285),doubleToFloat(0.5788),doubleToFloat(0.2054),doubleToFloat(0.5111),doubleToFloat(0.167),doubleToFloat(0.4948),doubleToFloat(0.1964),doubleToFloat(0.5061),doubleToFloat(0.2192),doubleToFloat(0.5957),doubleToFloat(0.1623),doubleToFloat(0.6567),doubleToFloat(0.2307),doubleToFloat(0.5353),doubleToFloat(0.2566)], Java.type("float[]"))))))))
              .addChild(new HAnimJoint("hanim_sacroiliac").setName("l_shoulder").setDEF("hanim_l_shoulder").setCenter(Java.to([doubleToFloat(6.32),doubleToFloat(49.709999),doubleToFloat(-1.215)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(0)], Java.type("float[]"))).setLlimit(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(0)], Java.type("float[]")))
                .addChild(new HAnimSegment("hanim_l_shoulder").setName("l_upperarm").setDEF("hanim_l_upperarm")
                  .addChild(new Transform().setTranslation(Java.to([doubleToFloat(6.32),doubleToFloat(49.709999),doubleToFloat(-1.215)], Java.type("float[]")))
                    .addChild(new Shape()
                      .setAppearance(new Appearance()
                        .setMaterial(new Material().setDiffuseColor(Java.to([doubleToFloat(0.588),doubleToFloat(0.588),doubleToFloat(0.588)], Java.type("float[]"))))
                        .setTexture(new ImageTexture().setUSE("DaTextureAtlas")))
                      .setGeometry(new IndexedFaceSet().setCoordIndex(Java.to([1,22,18,-1,18,2,1,-1,3,0,22,-1,22,1,3,-1,19,0,3,-1,3,4,19,-1,20,19,4,-1,4,5,20,-1,6,21,20,-1,20,5,6,-1,7,23,21,-1,21,6,7,-1,24,23,7,-1,7,8,24,-1,18,24,8,-1,8,2,18,-1,1,2,10,-1,10,9,1,-1,3,1,9,-1,9,11,3,-1,12,4,3,-1,3,11,12,-1,13,5,4,-1,4,12,13,-1,14,6,5,-1,5,13,14,-1,15,7,6,-1,6,14,15,-1,8,7,15,-1,15,16,8,-1,2,8,16,-1,16,10,2,-1,10,17,9,-1,9,17,11,-1,11,17,12,-1,12,17,13,-1,13,17,14,-1,14,17,15,-1,15,17,16,-1,16,17,10,-1,27,28,29,-1,29,30,31,-1,31,32,25,-1,29,31,25,-1,27,29,25,-1,26,27,25,-1,0,19,26,-1,26,25,0,-1,19,20,27,-1,27,26,19,-1,20,21,28,-1,28,27,20,-1,21,23,29,-1,29,28,21,-1,23,24,30,-1,30,29,23,-1,24,18,31,-1,31,30,24,-1,18,22,32,-1,32,31,18,-1,22,0,25,-1,25,32,22,-1], Java.type("int[]"))).setCreaseAngle(1.57).setTexCoordIndex(Java.to([9,0,1,-1,1,10,9,-1,11,2,0,-1,0,9,11,-1,3,2,11,-1,11,12,3,-1,4,3,12,-1,12,13,4,-1,14,5,4,-1,4,13,14,-1,15,6,5,-1,5,14,15,-1,8,7,17,-1,17,16,8,-1,1,8,16,-1,16,10,1,-1,9,10,19,-1,19,18,9,-1,11,9,18,-1,18,20,11,-1,21,12,11,-1,11,20,21,-1,22,13,12,-1,12,21,22,-1,23,14,13,-1,13,22,23,-1,24,15,14,-1,14,23,24,-1,16,17,26,-1,26,25,16,-1,10,16,25,-1,25,19,10,-1,19,27,18,-1,18,27,20,-1,20,27,21,-1,21,27,22,-1,22,27,23,-1,23,27,24,-1,26,27,25,-1,25,27,19,-1,30,31,32,-1,32,33,34,-1,34,35,28,-1,32,34,28,-1,30,32,28,-1,29,30,28,-1,2,3,29,-1,29,28,2,-1,3,4,30,-1,30,29,3,-1,4,5,31,-1,31,30,4,-1,5,6,32,-1,32,31,5,-1,7,8,33,-1,33,32,7,-1,8,1,34,-1,34,33,8,-1,1,0,35,-1,35,34,1,-1,0,2,28,-1,28,35,0,-1], Java.type("int[]")))
                        .setCoord(new Coordinate().setPoint(Java.to([doubleToFloat(1.579),doubleToFloat(-7.251),doubleToFloat(-0.1368),doubleToFloat(0.8267),doubleToFloat(-3.964),doubleToFloat(-1.274),doubleToFloat(0.128),doubleToFloat(-4.127),doubleToFloat(-1.538),doubleToFloat(1.398),doubleToFloat(-3.841),doubleToFloat(-0.0928),doubleToFloat(0.8148),doubleToFloat(-3.961),doubleToFloat(1.033),doubleToFloat(0.0962),doubleToFloat(-4.135),doubleToFloat(1.491),doubleToFloat(-0.6786),doubleToFloat(-4.25),doubleToFloat(1.162),doubleToFloat(-1.178),doubleToFloat(-4.312),doubleToFloat(0.0104),doubleToFloat(-0.6964),doubleToFloat(-4.263),doubleToFloat(-1.262),doubleToFloat(0.3338),doubleToFloat(0.8205),doubleToFloat(-1.217),doubleToFloat(-0.4556),doubleToFloat(-0.0372),doubleToFloat(-1.773),doubleToFloat(1.048),doubleToFloat(1.348),doubleToFloat(-0.0534),doubleToFloat(0.3358),doubleToFloat(0.8089),doubleToFloat(1.195),doubleToFloat(-0.4208),doubleToFloat(-0.0139),doubleToFloat(1.773),doubleToFloat(-1.033),doubleToFloat(-0.7003),doubleToFloat(1.49),doubleToFloat(-1.455),doubleToFloat(-1.43),doubleToFloat(0.0863),doubleToFloat(-1.091),doubleToFloat(-0.7318),doubleToFloat(-1.425),doubleToFloat(-0.722),doubleToFloat(0.6121),doubleToFloat(0.0125),doubleToFloat(0.3805),doubleToFloat(-7.446),doubleToFloat(-1.461),doubleToFloat(1.073),doubleToFloat(-7.329),doubleToFloat(0.8683),doubleToFloat(0.3719),doubleToFloat(-7.448),doubleToFloat(1.213),doubleToFloat(-0.3967),doubleToFloat(-7.578),doubleToFloat(0.8496),doubleToFloat(1.079),doubleToFloat(-7.328),doubleToFloat(-1.099),doubleToFloat(-0.8536),doubleToFloat(-7.662),doubleToFloat(-0.0937),doubleToFloat(-0.3541),doubleToFloat(-7.57),doubleToFloat(-1.121),doubleToFloat(1.295),doubleToFloat(-8.143),doubleToFloat(-0.1346),doubleToFloat(0.904),doubleToFloat(-8.202),doubleToFloat(0.6409),doubleToFloat(0.4207),doubleToFloat(-8.284),doubleToFloat(0.8789),doubleToFloat(-0.1246),doubleToFloat(-8.376),doubleToFloat(0.6209),doubleToFloat(-0.4703),doubleToFloat(-8.442),doubleToFloat(-0.0934),doubleToFloat(-0.0828),doubleToFloat(-8.369),doubleToFloat(-0.8906),doubleToFloat(0.4246),doubleToFloat(-8.283),doubleToFloat(-1.126),doubleToFloat(0.9105),doubleToFloat(-8.201),doubleToFloat(-0.8741)], Java.type("float[]"))))
                        .setTexCoord(new TextureCoordinate().setPoint(Java.to([doubleToFloat(0.1242),doubleToFloat(0.232),doubleToFloat(0.1329),doubleToFloat(0.2264),doubleToFloat(0.1089),doubleToFloat(0.234),doubleToFloat(0.0959),doubleToFloat(0.2328),doubleToFloat(0.0844),doubleToFloat(0.229),doubleToFloat(0.0746),doubleToFloat(0.2202),doubleToFloat(0.063),doubleToFloat(0.21),doubleToFloat(0.1539),doubleToFloat(0.2067),doubleToFloat(0.1416),doubleToFloat(0.2184),doubleToFloat(0.132),doubleToFloat(0.3),doubleToFloat(0.1468),doubleToFloat(0.2957),doubleToFloat(0.1102),doubleToFloat(0.3044),doubleToFloat(0.0882),doubleToFloat(0.3026),doubleToFloat(0.0722),doubleToFloat(0.2977),doubleToFloat(0.0604),doubleToFloat(0.2937),doubleToFloat(0.0382),doubleToFloat(0.2877),doubleToFloat(0.1612),doubleToFloat(0.2894),doubleToFloat(0.1834),doubleToFloat(0.2831),doubleToFloat(0.1419),doubleToFloat(0.3982),doubleToFloat(0.1642),doubleToFloat(0.3839),doubleToFloat(0.1121),doubleToFloat(0.4019),doubleToFloat(0.0756),doubleToFloat(0.3965),doubleToFloat(0.054),doubleToFloat(0.3836),doubleToFloat(0.0433),doubleToFloat(0.3749),doubleToFloat(0.0184),doubleToFloat(0.3603),doubleToFloat(0.1829),doubleToFloat(0.37),doubleToFloat(0.2085),doubleToFloat(0.3539),doubleToFloat(0.0991),doubleToFloat(0.3837),doubleToFloat(0.1089),doubleToFloat(0.234),doubleToFloat(0.0959),doubleToFloat(0.2328),doubleToFloat(0.0844),doubleToFloat(0.229),doubleToFloat(0.0746),doubleToFloat(0.2202),doubleToFloat(0.063),doubleToFloat(0.21),doubleToFloat(0.1416),doubleToFloat(0.2184),doubleToFloat(0.1329),doubleToFloat(0.2264),doubleToFloat(0.1242),doubleToFloat(0.232)], Java.type("float[]"))))))))
                .addChild(new HAnimJoint("hanim_l_shoulder").setName("l_elbow").setDEF("hanim_l_elbow").setCenter(Java.to([doubleToFloat(6.687),doubleToFloat(42.259998),doubleToFloat(-1.215)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(0)], Java.type("float[]"))).setLlimit(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(0)], Java.type("float[]")))
                  .addChild(new HAnimSegment("hanim_l_elbow").setName("l_forearm").setDEF("hanim_l_forearm")
                    .addChild(new Transform().setTranslation(Java.to([doubleToFloat(6.687),doubleToFloat(42.259998),doubleToFloat(-1.215)], Java.type("float[]")))
                      .addChild(new Shape()
                        .setAppearance(new Appearance()
                          .setMaterial(new Material().setDiffuseColor(Java.to([doubleToFloat(0.588),doubleToFloat(0.588),doubleToFloat(0.588)], Java.type("float[]"))))
                          .setTexture(new ImageTexture().setUSE("DaTextureAtlas")))
                        .setGeometry(new IndexedFaceSet().setCoordIndex(Java.to([25,29,8,-1,8,9,25,-1,29,24,10,-1,10,8,29,-1,10,24,26,-1,26,11,10,-1,11,26,27,-1,27,12,11,-1,12,27,28,-1,28,13,12,-1,13,28,30,-1,30,14,13,-1,15,31,25,-1,25,9,15,-1,30,31,15,-1,15,14,30,-1,9,8,7,-1,7,0,9,-1,8,10,1,-1,1,7,8,-1,1,10,11,-1,11,4,1,-1,4,11,12,-1,12,5,4,-1,5,12,13,-1,13,6,5,-1,6,13,14,-1,14,2,6,-1,3,15,9,-1,9,0,3,-1,14,15,3,-1,3,2,14,-1,18,19,20,-1,20,21,22,-1,18,20,22,-1,22,23,16,-1,18,22,16,-1,17,18,16,-1,0,7,17,-1,17,16,0,-1,7,1,18,-1,18,17,7,-1,1,4,19,-1,19,18,1,-1,4,5,20,-1,20,19,4,-1,5,6,21,-1,21,20,5,-1,6,2,22,-1,22,21,6,-1,2,3,23,-1,23,22,2,-1,3,0,16,-1,16,23,3,-1,34,35,36,-1,36,37,38,-1,38,39,32,-1,36,38,32,-1,34,36,32,-1,33,34,32,-1,26,24,33,-1,33,32,26,-1,24,29,34,-1,34,33,24,-1,29,25,35,-1,35,34,29,-1,25,31,36,-1,36,35,25,-1,31,30,37,-1,37,36,31,-1,30,28,38,-1,38,37,30,-1,28,27,39,-1,39,38,28,-1,27,26,32,-1,32,39,27,-1], Java.type("int[]"))).setCreaseAngle(1.57).setTexCoordIndex(Java.to([27,31,9,-1,9,10,27,-1,31,26,11,-1,11,9,31,-1,11,26,28,-1,28,12,11,-1,12,28,29,-1,29,13,12,-1,13,29,30,-1,30,14,13,-1,14,30,32,-1,32,15,14,-1,17,34,27,-1,27,10,17,-1,33,34,17,-1,17,16,33,-1,10,9,0,-1,0,1,10,-1,9,11,2,-1,2,0,9,-1,2,11,12,-1,12,3,2,-1,3,12,13,-1,13,4,3,-1,4,13,14,-1,14,5,4,-1,5,14,15,-1,15,6,5,-1,7,17,10,-1,10,1,7,-1,16,17,7,-1,7,8,16,-1,20,21,22,-1,22,23,24,-1,20,22,24,-1,24,25,18,-1,20,24,18,-1,19,20,18,-1,1,0,19,-1,19,18,1,-1,0,2,20,-1,20,19,0,-1,2,3,21,-1,21,20,2,-1,3,4,22,-1,22,21,3,-1,4,5,23,-1,23,22,4,-1,5,6,24,-1,24,23,5,-1,8,7,25,-1,25,24,8,-1,7,1,18,-1,18,25,7,-1,37,38,39,-1,39,40,41,-1,41,42,35,-1,39,41,35,-1,37,39,35,-1,36,37,35,-1,28,26,36,-1,36,35,28,-1,26,31,37,-1,37,36,26,-1,31,27,38,-1,38,37,31,-1,27,34,39,-1,39,38,27,-1,34,33,40,-1,40,39,34,-1,32,30,41,-1,41,40,32,-1,30,29,42,-1,42,41,30,-1,29,28,35,-1,35,42,29,-1], Java.type("int[]")))
                          .setCoord(new Coordinate().setPoint(Java.to([doubleToFloat(0.5486),doubleToFloat(-8.283),doubleToFloat(-1.232),doubleToFloat(1.486),doubleToFloat(-8.077),doubleToFloat(-0.2413),doubleToFloat(-0.2605),doubleToFloat(-8.42),doubleToFloat(-0.2663),doubleToFloat(0.0305),doubleToFloat(-8.37),doubleToFloat(-0.9039),doubleToFloat(1.111),doubleToFloat(-8.152),doubleToFloat(0.3642),doubleToFloat(0.5486),doubleToFloat(-8.283),doubleToFloat(0.736),doubleToFloat(0.0305),doubleToFloat(-8.37),doubleToFloat(0.2518),doubleToFloat(1.111),doubleToFloat(-8.159),doubleToFloat(-1.009),doubleToFloat(0.9449),doubleToFloat(-4.216),doubleToFloat(-1.053),doubleToFloat(0.2854),doubleToFloat(-4.402),doubleToFloat(-1.332),doubleToFloat(1.334),doubleToFloat(-4.12),doubleToFloat(-0.2381),doubleToFloat(0.9449),doubleToFloat(-4.216),doubleToFloat(0.6011),doubleToFloat(0.2854),doubleToFloat(-4.402),doubleToFloat(0.9772),doubleToFloat(-0.3877),doubleToFloat(-4.599),doubleToFloat(0.5422),doubleToFloat(-0.7557),doubleToFloat(-4.691),doubleToFloat(-0.2466),doubleToFloat(-0.3601),doubleToFloat(-4.573),doubleToFloat(-0.983),doubleToFloat(0.5729),doubleToFloat(-7.851),doubleToFloat(-0.97),doubleToFloat(0.9444),doubleToFloat(-7.765),doubleToFloat(-0.8227),doubleToFloat(1.222),doubleToFloat(-7.702),doubleToFloat(-0.2549),doubleToFloat(0.9428),doubleToFloat(-7.759),doubleToFloat(0.1945),doubleToFloat(0.5738),doubleToFloat(-7.851),doubleToFloat(0.4395),doubleToFloat(0.2134),doubleToFloat(-7.907),doubleToFloat(0.1035),doubleToFloat(-0.0011),doubleToFloat(-7.942),doubleToFloat(-0.2775),doubleToFloat(0.2111),doubleToFloat(-7.907),doubleToFloat(-0.7414),doubleToFloat(1.211),doubleToFloat(0.1953),doubleToFloat(-0.1368),doubleToFloat(0.0126),doubleToFloat(0.0001),doubleToFloat(-1.461),doubleToFloat(0.7047),doubleToFloat(0.1171),doubleToFloat(0.8683),doubleToFloat(0.004),doubleToFloat(-0.0014),doubleToFloat(1.213),doubleToFloat(-0.7646),doubleToFloat(-0.1313),doubleToFloat(0.8496),doubleToFloat(0.7109),doubleToFloat(0.1181),doubleToFloat(-1.099),doubleToFloat(-1.222),doubleToFloat(-0.216),doubleToFloat(-0.0937),doubleToFloat(-0.722),doubleToFloat(-0.1241),doubleToFloat(-1.121),doubleToFloat(0.3903),doubleToFloat(0.9161),doubleToFloat(0.6722),doubleToFloat(0.7974),doubleToFloat(0.9737),doubleToFloat(-0.1352),doubleToFloat(0.3972),doubleToFloat(0.9172),doubleToFloat(-0.9048),doubleToFloat(-0.1047),doubleToFloat(0.837),doubleToFloat(-1.165),doubleToFloat(-0.6284),doubleToFloat(0.7533),doubleToFloat(-0.922),doubleToFloat(-1.032),doubleToFloat(0.6814),doubleToFloat(-0.0917),doubleToFloat(-0.6726),doubleToFloat(0.7463),doubleToFloat(0.6509),doubleToFloat(-0.1086),doubleToFloat(0.8364),doubleToFloat(0.9178)], Java.type("float[]"))))
                          .setTexCoord(new TextureCoordinate().setPoint(Java.to([doubleToFloat(0.1049),doubleToFloat(0.0541),doubleToFloat(0.1104),doubleToFloat(0.0527),doubleToFloat(0.0952),doubleToFloat(0.0578),doubleToFloat(0.0898),doubleToFloat(0.0572),doubleToFloat(0.0825),doubleToFloat(0.057),doubleToFloat(0.0728),doubleToFloat(0.056),doubleToFloat(0.0641),doubleToFloat(0.0533),doubleToFloat(0.1172),doubleToFloat(0.0539),doubleToFloat(0.1257),doubleToFloat(0.0501),doubleToFloat(0.1098),doubleToFloat(0.1053),doubleToFloat(0.1172),doubleToFloat(0.1034),doubleToFloat(0.0987),doubleToFloat(0.1077),doubleToFloat(0.0894),doubleToFloat(0.1077),doubleToFloat(0.0804),doubleToFloat(0.1075),doubleToFloat(0.0703),doubleToFloat(0.1076),doubleToFloat(0.059),doubleToFloat(0.1083),doubleToFloat(0.137),doubleToFloat(0.1041),doubleToFloat(0.1245),doubleToFloat(0.1045),doubleToFloat(0.1104),doubleToFloat(0.0527),doubleToFloat(0.1049),doubleToFloat(0.0541),doubleToFloat(0.0952),doubleToFloat(0.0578),doubleToFloat(0.0898),doubleToFloat(0.0572),doubleToFloat(0.0825),doubleToFloat(0.057),doubleToFloat(0.0728),doubleToFloat(0.056),doubleToFloat(0.0641),doubleToFloat(0.0533),doubleToFloat(0.1172),doubleToFloat(0.0539),doubleToFloat(0.1022),doubleToFloat(0.1576),doubleToFloat(0.124),doubleToFloat(0.1541),doubleToFloat(0.0889),doubleToFloat(0.1582),doubleToFloat(0.0782),doubleToFloat(0.1579),doubleToFloat(0.0679),doubleToFloat(0.1593),doubleToFloat(0.1147),doubleToFloat(0.1566),doubleToFloat(0.0539),doubleToFloat(0.1632),doubleToFloat(0.1484),doubleToFloat(0.1582),doubleToFloat(0.1318),doubleToFloat(0.1551),doubleToFloat(0.0889),doubleToFloat(0.1582),doubleToFloat(0.1022),doubleToFloat(0.1576),doubleToFloat(0.1147),doubleToFloat(0.1566),doubleToFloat(0.124),doubleToFloat(0.1541),doubleToFloat(0.1318),doubleToFloat(0.1551),doubleToFloat(0.1484),doubleToFloat(0.1582),doubleToFloat(0.0679),doubleToFloat(0.1593),doubleToFloat(0.0782),doubleToFloat(0.1579)], Java.type("float[]"))))))))
                  .addChild(new HAnimJoint("hanim_l_elbow").setName("l_radiocarpal").setDEF("hanim_l_radiocarpal").setCenter(Java.to([doubleToFloat(7.341),doubleToFloat(34.169998),doubleToFloat(-1.443)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(0)], Java.type("float[]"))).setLlimit(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(0)], Java.type("float[]")))
                    .addChild(new HAnimSegment("hanim_l_radiocarpal").setName("l_carpal").setDEF("hanim_l_carpal")
                      .addChild(new Transform().setTranslation(Java.to([doubleToFloat(7.341),doubleToFloat(34.169998),doubleToFloat(-1.443)], Java.type("float[]")))
                        .addChild(new Shape()
                          .setAppearance(new Appearance()
                            .setMaterial(new Material().setDiffuseColor(Java.to([doubleToFloat(0.588),doubleToFloat(0.588),doubleToFloat(0.588)], Java.type("float[]"))))
                            .setTexture(new ImageTexture().setUSE("DaTextureAtlas")))
                          .setGeometry(new IndexedFaceSet().setCoordIndex(Java.to([14,17,18,-1,18,13,14,-1,12,19,20,-1,20,11,12,-1,4,8,6,-1,6,0,4,-1,10,21,22,-1,22,9,10,-1,16,18,17,-1,17,15,16,-1,2,6,8,-1,8,5,2,-1,13,20,19,-1,19,14,13,-1,3,5,8,-1,8,7,3,-1,15,22,21,-1,21,16,15,-1,8,4,1,-1,1,7,8,-1,2,5,17,-1,17,14,2,-1,18,32,28,-1,28,13,18,-1,12,0,6,-1,6,19,12,-1,20,35,24,-1,24,11,20,-1,10,26,36,-1,36,21,10,-1,22,7,1,-1,1,9,22,-1,30,32,18,-1,18,16,30,-1,17,5,3,-1,3,15,17,-1,28,35,20,-1,20,13,28,-1,19,6,2,-1,2,14,19,-1,3,7,22,-1,22,15,3,-1,21,36,30,-1,30,16,21,-1,28,32,33,-1,33,27,28,-1,24,35,34,-1,34,23,24,-1,25,37,36,-1,36,26,25,-1,30,29,33,-1,33,32,30,-1,31,23,34,-1,34,38,31,-1,29,37,38,-1,38,33,29,-1,28,27,34,-1,34,35,28,-1,29,30,36,-1,36,37,29,-1,27,33,38,-1,38,34,27,-1,31,38,37,-1,37,25,31,-1,67,44,43,-1,43,39,67,-1,40,46,45,-1,45,41,40,-1,42,39,43,-1,43,48,42,-1,47,55,41,-1,41,45,47,-1,42,48,46,-1,46,40,42,-1,9,1,50,-1,50,52,9,-1,4,0,49,-1,49,51,4,-1,11,24,54,-1,54,58,11,-1,1,4,51,-1,51,50,1,-1,10,9,52,-1,52,53,10,-1,26,10,53,-1,53,68,26,-1,0,12,70,-1,70,49,0,-1,31,25,61,-1,61,100,31,-1,25,26,68,-1,68,61,25,-1,24,23,95,-1,95,54,24,-1,23,31,100,-1,100,95,23,-1,95,96,54,-1,39,42,97,-1,97,96,39,-1,42,40,98,-1,98,97,42,-1,40,41,99,-1,99,98,40,-1,99,41,55,-1,55,100,99,-1,100,55,67,-1,67,95,100,-1,54,96,56,-1,56,58,54,-1,96,97,57,-1,57,56,96,-1,97,98,59,-1,59,57,97,-1,98,99,60,-1,60,59,98,-1,99,100,60,-1,52,50,63,-1,63,65,52,-1,51,49,62,-1,62,64,51,-1,50,51,64,-1,64,63,50,-1,53,52,65,-1,65,66,53,-1,70,71,62,-1,62,49,70,-1,68,69,60,-1,60,61,68,-1,72,73,65,-1,65,63,72,-1,73,74,66,-1,66,65,73,-1,81,69,66,-1,66,74,81,-1,75,76,59,-1,59,60,75,-1,76,77,57,-1,57,59,76,-1,77,78,56,-1,56,57,77,-1,82,71,56,-1,56,78,82,-1,79,80,64,-1,64,62,79,-1,80,72,63,-1,63,64,80,-1,55,47,44,-1,44,67,55,-1,95,67,39,-1,39,96,95,-1,68,53,66,-1,66,69,68,-1,75,60,69,-1,69,81,75,-1,100,61,60,-1,58,56,71,-1,71,70,58,-1,79,62,71,-1,71,82,79,-1,12,11,58,-1,58,70,12,-1,47,45,46,-1,46,48,47,-1,47,48,43,-1,43,44,47,-1,72,85,84,-1,84,73,72,-1,80,86,85,-1,85,72,80,-1,79,87,86,-1,86,80,79,-1,82,88,87,-1,87,79,82,-1,78,89,88,-1,88,82,78,-1,77,90,89,-1,89,78,77,-1,76,91,90,-1,90,77,76,-1,75,92,91,-1,91,76,75,-1,81,93,92,-1,92,75,81,-1,74,94,93,-1,93,81,74,-1,74,73,84,-1,84,94,74,-1,85,83,84,-1,86,83,85,-1,87,83,86,-1,88,83,87,-1,89,83,88,-1,90,83,89,-1,91,83,90,-1,92,83,91,-1,93,83,92,-1,94,83,93,-1,84,83,94,-1], Java.type("int[]"))).setCreaseAngle(1.57).setTexCoordIndex(Java.to([1,2,3,-1,3,0,1,-1,5,6,7,-1,7,4,5,-1,9,10,11,-1,11,8,9,-1,13,14,15,-1,15,12,13,-1,17,96,95,-1,95,16,17,-1,19,11,10,-1,10,18,19,-1,0,7,6,-1,6,1,0,-1,21,99,98,-1,98,20,21,-1,16,15,14,-1,14,17,16,-1,98,97,22,-1,22,20,98,-1,19,18,2,-1,2,1,19,-1,3,23,24,-1,24,0,3,-1,5,8,11,-1,11,6,5,-1,7,25,26,-1,26,4,7,-1,13,27,28,-1,28,14,13,-1,15,20,22,-1,22,12,15,-1,29,100,96,-1,96,17,29,-1,95,99,21,-1,21,16,95,-1,24,25,7,-1,7,0,24,-1,6,11,19,-1,19,1,6,-1,21,20,15,-1,15,16,21,-1,14,28,29,-1,29,17,14,-1,24,23,31,-1,31,30,24,-1,26,25,33,-1,33,32,26,-1,34,35,28,-1,28,27,34,-1,29,36,101,-1,101,100,29,-1,37,32,33,-1,33,39,37,-1,36,35,38,-1,38,101,36,-1,24,30,33,-1,33,25,24,-1,36,29,28,-1,28,35,36,-1,30,31,39,-1,39,33,30,-1,102,38,35,-1,35,34,102,-1,41,42,47,-1,47,40,41,-1,44,45,46,-1,46,43,44,-1,48,40,47,-1,47,53,48,-1,49,50,43,-1,43,46,49,-1,103,104,45,-1,45,44,103,-1,12,22,51,-1,51,52,12,-1,9,8,54,-1,54,55,9,-1,4,26,56,-1,56,59,4,-1,22,97,105,-1,105,51,22,-1,13,12,52,-1,52,57,13,-1,27,13,57,-1,57,58,27,-1,8,5,62,-1,62,54,8,-1,102,34,60,-1,60,61,102,-1,34,27,58,-1,58,60,34,-1,26,32,63,-1,63,56,26,-1,32,37,64,-1,64,63,32,-1,63,67,56,-1,40,48,127,-1,127,125,40,-1,103,44,128,-1,128,126,103,-1,44,43,129,-1,129,128,44,-1,129,43,50,-1,50,130,129,-1,131,73,41,-1,41,124,131,-1,56,67,74,-1,74,59,56,-1,67,68,76,-1,76,74,67,-1,106,65,69,-1,69,107,106,-1,65,66,70,-1,70,69,65,-1,66,61,70,-1,52,51,71,-1,71,72,52,-1,55,54,85,-1,85,86,55,-1,51,105,108,-1,108,71,51,-1,57,52,72,-1,72,75,57,-1,62,87,85,-1,85,54,62,-1,58,77,70,-1,70,60,58,-1,78,79,72,-1,72,71,78,-1,79,80,75,-1,75,72,79,-1,81,77,75,-1,75,80,81,-1,82,83,69,-1,69,70,82,-1,83,84,107,-1,107,69,83,-1,88,89,74,-1,74,76,88,-1,90,87,74,-1,74,89,90,-1,91,92,86,-1,86,85,91,-1,109,78,71,-1,71,108,109,-1,73,93,42,-1,42,41,73,-1,124,41,40,-1,40,125,124,-1,58,57,75,-1,75,77,58,-1,82,70,77,-1,77,81,82,-1,61,60,70,-1,59,74,87,-1,87,62,59,-1,91,85,87,-1,87,90,91,-1,5,4,59,-1,59,62,5,-1,49,46,45,-1,45,104,49,-1,93,53,47,-1,47,42,93,-1,78,112,111,-1,111,79,78,-1,109,113,112,-1,112,78,109,-1,91,115,114,-1,114,92,91,-1,90,116,115,-1,115,91,90,-1,89,117,116,-1,116,90,89,-1,88,118,117,-1,117,89,88,-1,83,120,119,-1,119,84,83,-1,82,121,120,-1,120,83,82,-1,81,122,121,-1,121,82,81,-1,80,123,122,-1,122,81,80,-1,80,79,111,-1,111,123,80,-1,112,110,111,-1,113,110,112,-1,115,94,114,-1,116,94,115,-1,117,94,116,-1,118,94,117,-1,120,110,119,-1,121,110,120,-1,122,110,121,-1,123,110,122,-1,111,110,123,-1], Java.type("int[]")))
                            .setCoord(new Coordinate().setPoint(Java.to([doubleToFloat(-0.0484),doubleToFloat(-2.669),doubleToFloat(-1.109),doubleToFloat(0.5122),doubleToFloat(-2.536),doubleToFloat(-1.211),doubleToFloat(0.0389),doubleToFloat(-3.633),doubleToFloat(-0.9447),doubleToFloat(0.3887),doubleToFloat(-3.753),doubleToFloat(-1.019),doubleToFloat(0.2345),doubleToFloat(-2.6),doubleToFloat(-1.283),doubleToFloat(0.1638),doubleToFloat(-3.794),doubleToFloat(-1.017),doubleToFloat(-0.0097),doubleToFloat(-3.197),doubleToFloat(-1.071),doubleToFloat(0.5439),doubleToFloat(-3.335),doubleToFloat(-1.193),doubleToFloat(0.2598),doubleToFloat(-3.267),doubleToFloat(-1.236),doubleToFloat(0.7593),doubleToFloat(-2.661),doubleToFloat(-0.6786),doubleToFloat(0.8727),doubleToFloat(-2.789),doubleToFloat(-0.0285),doubleToFloat(0.027),doubleToFloat(-2.955),doubleToFloat(-0.0639),doubleToFloat(0.0035),doubleToFloat(-2.833),doubleToFloat(-0.7125),doubleToFloat(0.2448),doubleToFloat(-4.088),doubleToFloat(-0.0434),doubleToFloat(0.1763),doubleToFloat(-3.945),doubleToFloat(-0.5948),doubleToFloat(0.6318),doubleToFloat(-4.095),doubleToFloat(-0.5705),doubleToFloat(0.6436),doubleToFloat(-4.232),doubleToFloat(-0.0154),doubleToFloat(0.4108),doubleToFloat(-4.136),doubleToFloat(-0.5685),doubleToFloat(0.4432),doubleToFloat(-4.282),doubleToFloat(-0.0213),doubleToFloat(0.0778),doubleToFloat(-3.4),doubleToFloat(-0.6804),doubleToFloat(0.1499),doubleToFloat(-3.521),doubleToFloat(-0.0474),doubleToFloat(0.8092),doubleToFloat(-3.775),doubleToFloat(-0.0027),doubleToFloat(0.7549),doubleToFloat(-3.656),doubleToFloat(-0.6552),doubleToFloat(-0.1145),doubleToFloat(-2.854),doubleToFloat(1.064),doubleToFloat(-0.0184),doubleToFloat(-2.931),doubleToFloat(0.5665),doubleToFloat(0.4652),doubleToFloat(-2.795),doubleToFloat(1.179),doubleToFloat(0.7695),doubleToFloat(-2.852),doubleToFloat(0.6593),doubleToFloat(-0.0912),doubleToFloat(-3.841),doubleToFloat(1.006),doubleToFloat(0.1328),doubleToFloat(-4.068),doubleToFloat(0.6052),doubleToFloat(0.2484),doubleToFloat(-3.879),doubleToFloat(1.085),doubleToFloat(0.5776),doubleToFloat(-4.178),doubleToFloat(0.6005),doubleToFloat(0.1741),doubleToFloat(-2.777),doubleToFloat(1.307),doubleToFloat(0.391),doubleToFloat(-4.211),doubleToFloat(0.5892),doubleToFloat(0.0222),doubleToFloat(-3.9),doubleToFloat(1.103),doubleToFloat(-0.0911),doubleToFloat(-3.456),doubleToFloat(1.078),doubleToFloat(0.0933),doubleToFloat(-3.543),doubleToFloat(0.5804),doubleToFloat(0.7321),doubleToFloat(-3.726),doubleToFloat(0.6506),doubleToFloat(0.398),doubleToFloat(-3.466),doubleToFloat(1.192),doubleToFloat(0.1303),doubleToFloat(-3.384),doubleToFloat(1.244),doubleToFloat(-0.6275),doubleToFloat(-1.818),doubleToFloat(1.199),doubleToFloat(-0.5455),doubleToFloat(-1.716),doubleToFloat(1.771),doubleToFloat(-0.1596),doubleToFloat(-1.86),doubleToFloat(1.723),doubleToFloat(-0.7564),doubleToFloat(-1.71),doubleToFloat(1.391),doubleToFloat(-0.7176),doubleToFloat(-2.41),doubleToFloat(1.495),doubleToFloat(-0.5088),doubleToFloat(-2.502),doubleToFloat(1.493),doubleToFloat(-0.4454),doubleToFloat(-2.494),doubleToFloat(1.856),doubleToFloat(-0.673),doubleToFloat(-2.397),doubleToFloat(1.84),doubleToFloat(-0.473),doubleToFloat(-2.597),doubleToFloat(1.729),doubleToFloat(-0.7943),doubleToFloat(-2.454),doubleToFloat(1.703),doubleToFloat(-0.1488),doubleToFloat(-1.898),doubleToFloat(-1.075),doubleToFloat(0.4772),doubleToFloat(-1.692),doubleToFloat(-1.126),doubleToFloat(0.1582),doubleToFloat(-1.743),doubleToFloat(-1.206),doubleToFloat(0.7034),doubleToFloat(-1.791),doubleToFloat(-0.6081),doubleToFloat(0.7947),doubleToFloat(-1.854),doubleToFloat(-0.0135),doubleToFloat(-0.271),doubleToFloat(-1.977),doubleToFloat(0.5803),doubleToFloat(-0.046),doubleToFloat(-1.962),doubleToFloat(1.525),doubleToFloat(-0.535),doubleToFloat(-0.7519),doubleToFloat(0.1207),doubleToFloat(-0.5847),doubleToFloat(-0.501),doubleToFloat(0.619),doubleToFloat(-0.2218),doubleToFloat(-2.022),doubleToFloat(-0.0712),doubleToFloat(-0.2651),doubleToFloat(-0.39),doubleToFloat(0.9595),doubleToFloat(0.3059),doubleToFloat(-0.5187),doubleToFloat(0.9004),doubleToFloat(0.4249),doubleToFloat(-1.7),doubleToFloat(1.165),doubleToFloat(-0.3218),doubleToFloat(-0.8135),doubleToFloat(-0.8924),doubleToFloat(0.3755),doubleToFloat(-0.7445),doubleToFloat(-0.9185),doubleToFloat(0.0375),doubleToFloat(-0.8231),doubleToFloat(-1.06),doubleToFloat(0.5692),doubleToFloat(-0.6704),doubleToFloat(-0.4588),doubleToFloat(0.6362),doubleToFloat(-0.6574),doubleToFloat(-0.0168),doubleToFloat(-0.3398),doubleToFloat(-2.013),doubleToFloat(1.232),doubleToFloat(0.7147),doubleToFloat(-1.78),doubleToFloat(0.6911),doubleToFloat(0.5559),doubleToFloat(-0.6254),doubleToFloat(0.574),doubleToFloat(-0.1664),doubleToFloat(-1.961),doubleToFloat(-0.6946),doubleToFloat(-0.3867),doubleToFloat(-0.8083),doubleToFloat(-0.483),doubleToFloat(0.2263),doubleToFloat(-0.0176),doubleToFloat(-0.602),doubleToFloat(0.4134),doubleToFloat(-0.0056),doubleToFloat(-0.3313),doubleToFloat(0.4772),doubleToFloat(-0.024),doubleToFloat(0.0197),doubleToFloat(0.2029),doubleToFloat(-0.0192),doubleToFloat(0.6487),doubleToFloat(-0.19),doubleToFloat(-0.1026),doubleToFloat(0.6875),doubleToFloat(-0.4637),doubleToFloat(-0.2014),doubleToFloat(0.4306),doubleToFloat(-0.4649),doubleToFloat(-0.2436),doubleToFloat(0.0672),doubleToFloat(-0.3571),doubleToFloat(-0.187),doubleToFloat(-0.6047),doubleToFloat(-0.085),doubleToFloat(-0.0795),doubleToFloat(-0.6916),doubleToFloat(0.3677),doubleToFloat(0.0022),doubleToFloat(0.4139),doubleToFloat(-0.4441),doubleToFloat(-0.2482),doubleToFloat(-0.2847),doubleToFloat(-0.073),doubleToFloat(0.7042),doubleToFloat(0.0189),doubleToFloat(0.3553),doubleToFloat(0.5674),doubleToFloat(-0.2789),doubleToFloat(0.1929),doubleToFloat(0.5039),doubleToFloat(-0.5229),doubleToFloat(-0.0913),doubleToFloat(0.5001),doubleToFloat(-0.6061),doubleToFloat(-0.3468),doubleToFloat(0.3753),doubleToFloat(-0.5281),doubleToFloat(-0.426),doubleToFloat(0.3319),doubleToFloat(-0.2365),doubleToFloat(-0.445),doubleToFloat(0.3505),doubleToFloat(0.0842),doubleToFloat(-0.4357),doubleToFloat(0.3809),doubleToFloat(0.4215),doubleToFloat(-0.1945),doubleToFloat(0.479),doubleToFloat(0.6494),doubleToFloat(0.1635),doubleToFloat(0.555),doubleToFloat(0.614),doubleToFloat(0.3158),doubleToFloat(0.5745),doubleToFloat(0.4038),doubleToFloat(0.4135),doubleToFloat(0.5506),doubleToFloat(0.0409),doubleToFloat(-0.3174),doubleToFloat(-1.934),doubleToFloat(1.03),doubleToFloat(-0.6016),doubleToFloat(-1.397),doubleToFloat(0.7368),doubleToFloat(-0.7178),doubleToFloat(-1.192),doubleToFloat(1.035),doubleToFloat(-0.4234),doubleToFloat(-1.114),doubleToFloat(1.502),doubleToFloat(0.0707),doubleToFloat(-1.244),doubleToFloat(1.455),doubleToFloat(0.1435),doubleToFloat(-1.576),doubleToFloat(1.365)], Java.type("float[]"))))
                            .setTexCoord(new TextureCoordinate().setPoint(Java.to([doubleToFloat(0.205),doubleToFloat(0.0658),doubleToFloat(0.1911),doubleToFloat(0.0707),doubleToFloat(0.1929),doubleToFloat(0.0623),doubleToFloat(0.2056),doubleToFloat(0.0584),doubleToFloat(0.204),doubleToFloat(0.0979),doubleToFloat(0.1894),doubleToFloat(0.0993),doubleToFloat(0.192),doubleToFloat(0.0812),doubleToFloat(0.2042),doubleToFloat(0.0782),doubleToFloat(0.1776),doubleToFloat(0.102),doubleToFloat(0.1691),doubleToFloat(0.1049),doubleToFloat(0.1722),doubleToFloat(0.0826),doubleToFloat(0.1792),doubleToFloat(0.0874),doubleToFloat(0.3576),doubleToFloat(0.0677),doubleToFloat(0.343),doubleToFloat(0.0677),doubleToFloat(0.3369),doubleToFloat(0.0378),doubleToFloat(0.3508),doubleToFloat(0.0394),doubleToFloat(0.3485),doubleToFloat(0.0301),doubleToFloat(0.3351),doubleToFloat(0.0289),doubleToFloat(0.1792),doubleToFloat(0.0721),doubleToFloat(0.1812),doubleToFloat(0.0788),doubleToFloat(0.3676),doubleToFloat(0.0436),doubleToFloat(0.3644),doubleToFloat(0.0343),doubleToFloat(0.3736),doubleToFloat(0.0676),doubleToFloat(0.2203),doubleToFloat(0.0605),doubleToFloat(0.2197),doubleToFloat(0.0666),doubleToFloat(0.2201),doubleToFloat(0.078),doubleToFloat(0.219),doubleToFloat(0.1006),doubleToFloat(0.3267),doubleToFloat(0.0697),doubleToFloat(0.3206),doubleToFloat(0.0416),doubleToFloat(0.3198),doubleToFloat(0.0314),doubleToFloat(0.2336),doubleToFloat(0.0701),doubleToFloat(0.2372),doubleToFloat(0.0664),doubleToFloat(0.237),doubleToFloat(0.1032),doubleToFloat(0.2337),doubleToFloat(0.0796),doubleToFloat(0.3092),doubleToFloat(0.0748),doubleToFloat(0.3062),doubleToFloat(0.0477),doubleToFloat(0.3048),doubleToFloat(0.0377),doubleToFloat(0.2463),doubleToFloat(0.1043),doubleToFloat(0.2993),doubleToFloat(0.0488),doubleToFloat(0.2421),doubleToFloat(0.0791),doubleToFloat(0.2419),doubleToFloat(0.1525),doubleToFloat(0.245),doubleToFloat(0.146),doubleToFloat(0.2625),doubleToFloat(0.1471),doubleToFloat(0.2867),doubleToFloat(0.1169),doubleToFloat(0.2863),doubleToFloat(0.1262),doubleToFloat(0.2719),doubleToFloat(0.1174),doubleToFloat(0.2719),doubleToFloat(0.1139),doubleToFloat(0.2586),doubleToFloat(0.1504),doubleToFloat(0.2416),doubleToFloat(0.1569),doubleToFloat(0.2696),doubleToFloat(0.112),doubleToFloat(0.2872),doubleToFloat(0.1121),doubleToFloat(0.3743),doubleToFloat(0.0911),doubleToFloat(0.3595),doubleToFloat(0.0892),doubleToFloat(0.2607),doubleToFloat(0.1541),doubleToFloat(0.1763),doubleToFloat(0.1313),doubleToFloat(0.1685),doubleToFloat(0.1288),doubleToFloat(0.2183),doubleToFloat(0.1225),doubleToFloat(0.3466),doubleToFloat(0.0922),doubleToFloat(0.3303),doubleToFloat(0.0955),doubleToFloat(0.2026),doubleToFloat(0.1199),doubleToFloat(0.3166),doubleToFloat(0.1021),doubleToFloat(0.3105),doubleToFloat(0.1115),doubleToFloat(0.1871),doubleToFloat(0.1227),doubleToFloat(0.2339),doubleToFloat(0.1345),doubleToFloat(0.2426),doubleToFloat(0.131),doubleToFloat(0.3089),doubleToFloat(0.1341),doubleToFloat(0.3091),doubleToFloat(0.123),doubleToFloat(0.2198),doubleToFloat(0.1467),doubleToFloat(0.2215),doubleToFloat(0.1552),doubleToFloat(0.3263),doubleToFloat(0.1386),doubleToFloat(0.3306),doubleToFloat(0.13),doubleToFloat(0.3736),doubleToFloat(0.1115),doubleToFloat(0.3601),doubleToFloat(0.1093),doubleToFloat(0.2498),doubleToFloat(0.1434),doubleToFloat(0.2005),doubleToFloat(0.1594),doubleToFloat(0.3526),doubleToFloat(0.1164),doubleToFloat(0.2108),doubleToFloat(0.1652),doubleToFloat(0.34),doubleToFloat(0.1206),doubleToFloat(0.3704),doubleToFloat(0.1321),doubleToFloat(0.3627),doubleToFloat(0.1306),doubleToFloat(0.356),doubleToFloat(0.1306),doubleToFloat(0.3496),doubleToFloat(0.1334),doubleToFloat(0.3443),doubleToFloat(0.1351),doubleToFloat(0.3407),doubleToFloat(0.1419),doubleToFloat(0.3435),doubleToFloat(0.1517),doubleToFloat(0.1768),doubleToFloat(0.1527),doubleToFloat(0.1675),doubleToFloat(0.1496),doubleToFloat(0.1846),doubleToFloat(0.1543),doubleToFloat(0.1988),doubleToFloat(0.1786),doubleToFloat(0.1926),doubleToFloat(0.1765),doubleToFloat(0.186),doubleToFloat(0.1735),doubleToFloat(0.1794),doubleToFloat(0.1722),doubleToFloat(0.174),doubleToFloat(0.1741),doubleToFloat(0.2658),doubleToFloat(0.1458),doubleToFloat(0.1866),doubleToFloat(0.1875),doubleToFloat(0.3498),doubleToFloat(0.025),doubleToFloat(0.3342),doubleToFloat(0.0242),doubleToFloat(0.3818),doubleToFloat(0.0652),doubleToFloat(0.3741),doubleToFloat(0.0425),doubleToFloat(0.3678),doubleToFloat(0.0299),doubleToFloat(0.3176),doubleToFloat(0.0272),doubleToFloat(0.3004),doubleToFloat(0.0345),doubleToFloat(0.3029),doubleToFloat(0.0766),doubleToFloat(0.2847),doubleToFloat(0.135),doubleToFloat(0.2695),doubleToFloat(0.1219),doubleToFloat(0.3863),doubleToFloat(0.0903),doubleToFloat(0.3064),doubleToFloat(0.1439),doubleToFloat(0.3237),doubleToFloat(0.1509),doubleToFloat(0.3852),doubleToFloat(0.1126),doubleToFloat(0.3751),doubleToFloat(0.1362),doubleToFloat(0.3572),doubleToFloat(0.1421),doubleToFloat(0.36),doubleToFloat(0.1363),doubleToFloat(0.3638),doubleToFloat(0.1371),doubleToFloat(0.3662),doubleToFloat(0.1391),doubleToFloat(0.1803),doubleToFloat(0.1808),doubleToFloat(0.183),doubleToFloat(0.1798),doubleToFloat(0.1863),doubleToFloat(0.1805),doubleToFloat(0.1896),doubleToFloat(0.182),doubleToFloat(0.1927),doubleToFloat(0.183),doubleToFloat(0.3504),doubleToFloat(0.1469),doubleToFloat(0.349),doubleToFloat(0.142),doubleToFloat(0.3508),doubleToFloat(0.1386),doubleToFloat(0.3534),doubleToFloat(0.1377),doubleToFloat(0.3566),doubleToFloat(0.1363),doubleToFloat(0.2339),doubleToFloat(0.1345),doubleToFloat(0.2198),doubleToFloat(0.1467),doubleToFloat(0.3064),doubleToFloat(0.1439),doubleToFloat(0.2215),doubleToFloat(0.1552),doubleToFloat(0.3089),doubleToFloat(0.1341),doubleToFloat(0.3091),doubleToFloat(0.123),doubleToFloat(0.3105),doubleToFloat(0.1115),doubleToFloat(0.2426),doubleToFloat(0.131)], Java.type("float[]")))))))))))
              .addChild(new HAnimJoint("hanim_sacroiliac").setName("r_shoulder").setDEF("hanim_r_shoulder").setCenter(Java.to([doubleToFloat(-6.32),doubleToFloat(49.709999),doubleToFloat(-1.215)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(0)], Java.type("float[]"))).setLlimit(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(0)], Java.type("float[]")))
                .addChild(new HAnimSegment("hanim_r_shoulder").setName("r_upperarm").setDEF("hanim_r_upperarm")
                  .addChild(new Transform().setTranslation(Java.to([doubleToFloat(-6.32),doubleToFloat(49.709999),doubleToFloat(-1.215)], Java.type("float[]")))
                    .addChild(new Shape()
                      .setAppearance(new Appearance()
                        .setMaterial(new Material().setDiffuseColor(Java.to([doubleToFloat(0.588),doubleToFloat(0.588),doubleToFloat(0.588)], Java.type("float[]"))))
                        .setTexture(new ImageTexture().setUSE("DaTextureAtlas")))
                      .setGeometry(new IndexedFaceSet().setCoordIndex(Java.to([1,2,18,-1,18,22,1,-1,3,1,22,-1,22,0,3,-1,19,4,3,-1,3,0,19,-1,20,5,4,-1,4,19,20,-1,6,5,20,-1,20,21,6,-1,7,6,21,-1,21,23,7,-1,24,8,7,-1,7,23,24,-1,18,2,8,-1,8,24,18,-1,1,9,10,-1,10,2,1,-1,3,11,9,-1,9,1,3,-1,12,11,3,-1,3,4,12,-1,13,12,4,-1,4,5,13,-1,14,13,5,-1,5,6,14,-1,15,14,6,-1,6,7,15,-1,8,16,15,-1,15,7,8,-1,2,10,16,-1,16,8,2,-1,10,9,17,-1,9,11,17,-1,11,12,17,-1,12,13,17,-1,13,14,17,-1,14,15,17,-1,15,16,17,-1,16,10,17,-1,25,32,31,-1,31,30,29,-1,25,31,29,-1,29,28,27,-1,25,29,27,-1,26,25,27,-1,0,25,26,-1,26,19,0,-1,19,26,27,-1,27,20,19,-1,20,27,28,-1,28,21,20,-1,21,28,29,-1,29,23,21,-1,23,29,30,-1,30,24,23,-1,24,30,31,-1,31,18,24,-1,18,31,32,-1,32,22,18,-1,22,32,25,-1,25,0,22,-1], Java.type("int[]"))).setCreaseAngle(1.57).setTexCoordIndex(Java.to([9,10,1,-1,1,0,9,-1,11,9,0,-1,0,2,11,-1,3,12,11,-1,11,2,3,-1,4,13,12,-1,12,3,4,-1,14,13,4,-1,4,5,14,-1,15,14,5,-1,5,6,15,-1,8,16,17,-1,17,7,8,-1,1,10,16,-1,16,8,1,-1,9,18,19,-1,19,10,9,-1,11,20,18,-1,18,9,11,-1,21,20,11,-1,11,12,21,-1,22,21,12,-1,12,13,22,-1,23,22,13,-1,13,14,23,-1,24,23,14,-1,14,15,24,-1,16,25,26,-1,26,17,16,-1,10,19,25,-1,25,16,10,-1,19,18,27,-1,18,20,27,-1,20,21,27,-1,21,22,27,-1,22,23,27,-1,23,24,27,-1,26,25,27,-1,25,19,27,-1,28,35,34,-1,34,33,32,-1,28,34,32,-1,32,31,30,-1,28,32,30,-1,29,28,30,-1,2,28,29,-1,29,3,2,-1,3,29,30,-1,30,4,3,-1,4,30,31,-1,31,5,4,-1,5,31,32,-1,32,6,5,-1,7,32,33,-1,33,8,7,-1,8,33,34,-1,34,1,8,-1,1,34,35,-1,35,0,1,-1,0,35,28,-1,28,2,0,-1], Java.type("int[]")))
                        .setCoord(new Coordinate().setPoint(Java.to([doubleToFloat(-1.579),doubleToFloat(-7.251),doubleToFloat(-0.1368),doubleToFloat(-0.8267),doubleToFloat(-3.964),doubleToFloat(-1.274),doubleToFloat(-0.128),doubleToFloat(-4.127),doubleToFloat(-1.538),doubleToFloat(-1.398),doubleToFloat(-3.841),doubleToFloat(-0.0928),doubleToFloat(-0.8148),doubleToFloat(-3.961),doubleToFloat(1.033),doubleToFloat(-0.0962),doubleToFloat(-4.135),doubleToFloat(1.491),doubleToFloat(0.6786),doubleToFloat(-4.25),doubleToFloat(1.162),doubleToFloat(1.178),doubleToFloat(-4.312),doubleToFloat(0.0104),doubleToFloat(0.6964),doubleToFloat(-4.263),doubleToFloat(-1.262),doubleToFloat(-0.3338),doubleToFloat(0.8205),doubleToFloat(-1.217),doubleToFloat(0.4556),doubleToFloat(-0.0372),doubleToFloat(-1.773),doubleToFloat(-1.048),doubleToFloat(1.348),doubleToFloat(-0.0534),doubleToFloat(-0.3358),doubleToFloat(0.8089),doubleToFloat(1.195),doubleToFloat(0.4208),doubleToFloat(-0.0139),doubleToFloat(1.773),doubleToFloat(1.033),doubleToFloat(-0.7003),doubleToFloat(1.49),doubleToFloat(1.455),doubleToFloat(-1.43),doubleToFloat(0.0863),doubleToFloat(1.091),doubleToFloat(-0.7318),doubleToFloat(-1.425),doubleToFloat(0.722),doubleToFloat(0.6121),doubleToFloat(0.0125),doubleToFloat(-0.3805),doubleToFloat(-7.446),doubleToFloat(-1.461),doubleToFloat(-1.073),doubleToFloat(-7.329),doubleToFloat(0.8683),doubleToFloat(-0.3719),doubleToFloat(-7.448),doubleToFloat(1.213),doubleToFloat(0.3967),doubleToFloat(-7.578),doubleToFloat(0.8496),doubleToFloat(-1.079),doubleToFloat(-7.328),doubleToFloat(-1.099),doubleToFloat(0.8536),doubleToFloat(-7.662),doubleToFloat(-0.0937),doubleToFloat(0.3541),doubleToFloat(-7.57),doubleToFloat(-1.121),doubleToFloat(-1.295),doubleToFloat(-8.143),doubleToFloat(-0.1346),doubleToFloat(-0.904),doubleToFloat(-8.202),doubleToFloat(0.6409),doubleToFloat(-0.4207),doubleToFloat(-8.284),doubleToFloat(0.8789),doubleToFloat(0.1246),doubleToFloat(-8.376),doubleToFloat(0.6209),doubleToFloat(0.4703),doubleToFloat(-8.442),doubleToFloat(-0.0934),doubleToFloat(0.0828),doubleToFloat(-8.369),doubleToFloat(-0.8906),doubleToFloat(-0.4246),doubleToFloat(-8.283),doubleToFloat(-1.126),doubleToFloat(-0.9105),doubleToFloat(-8.201),doubleToFloat(-0.8741)], Java.type("float[]"))))
                        .setTexCoord(new TextureCoordinate().setPoint(Java.to([doubleToFloat(0.1242),doubleToFloat(0.232),doubleToFloat(0.1329),doubleToFloat(0.2264),doubleToFloat(0.1089),doubleToFloat(0.234),doubleToFloat(0.0959),doubleToFloat(0.2328),doubleToFloat(0.0844),doubleToFloat(0.229),doubleToFloat(0.0746),doubleToFloat(0.2202),doubleToFloat(0.063),doubleToFloat(0.21),doubleToFloat(0.1539),doubleToFloat(0.2067),doubleToFloat(0.1416),doubleToFloat(0.2184),doubleToFloat(0.132),doubleToFloat(0.3),doubleToFloat(0.1468),doubleToFloat(0.2957),doubleToFloat(0.1102),doubleToFloat(0.3044),doubleToFloat(0.0882),doubleToFloat(0.3026),doubleToFloat(0.0722),doubleToFloat(0.2977),doubleToFloat(0.0604),doubleToFloat(0.2937),doubleToFloat(0.0382),doubleToFloat(0.2877),doubleToFloat(0.1612),doubleToFloat(0.2894),doubleToFloat(0.1834),doubleToFloat(0.2831),doubleToFloat(0.1419),doubleToFloat(0.3982),doubleToFloat(0.1642),doubleToFloat(0.3839),doubleToFloat(0.1121),doubleToFloat(0.4019),doubleToFloat(0.0756),doubleToFloat(0.3965),doubleToFloat(0.054),doubleToFloat(0.3836),doubleToFloat(0.0433),doubleToFloat(0.3749),doubleToFloat(0.0184),doubleToFloat(0.3603),doubleToFloat(0.1829),doubleToFloat(0.37),doubleToFloat(0.2085),doubleToFloat(0.3539),doubleToFloat(0.0991),doubleToFloat(0.3837),doubleToFloat(0.1089),doubleToFloat(0.234),doubleToFloat(0.0959),doubleToFloat(0.2328),doubleToFloat(0.0844),doubleToFloat(0.229),doubleToFloat(0.0746),doubleToFloat(0.2202),doubleToFloat(0.063),doubleToFloat(0.21),doubleToFloat(0.1416),doubleToFloat(0.2184),doubleToFloat(0.1329),doubleToFloat(0.2264),doubleToFloat(0.1242),doubleToFloat(0.232)], Java.type("float[]"))))))))
                .addChild(new HAnimJoint("hanim_r_shoulder").setName("r_elbow").setDEF("hanim_r_elbow").setCenter(Java.to([doubleToFloat(-6.687),doubleToFloat(42.259998),doubleToFloat(-1.215)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(0)], Java.type("float[]"))).setLlimit(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(0)], Java.type("float[]")))
                  .addChild(new HAnimSegment("hanim_r_elbow").setName("r_forearm").setDEF("hanim_r_forearm")
                    .addChild(new Transform().setTranslation(Java.to([doubleToFloat(-6.687),doubleToFloat(42.259998),doubleToFloat(-1.215)], Java.type("float[]")))
                      .addChild(new Shape()
                        .setAppearance(new Appearance()
                          .setMaterial(new Material().setDiffuseColor(Java.to([doubleToFloat(0.588),doubleToFloat(0.588),doubleToFloat(0.588)], Java.type("float[]"))))
                          .setTexture(new ImageTexture().setUSE("DaTextureAtlas")))
                        .setGeometry(new IndexedFaceSet().setCoordIndex(Java.to([25,9,8,-1,8,29,25,-1,29,8,10,-1,10,24,29,-1,10,11,26,-1,26,24,10,-1,11,12,27,-1,27,26,11,-1,12,13,28,-1,28,27,12,-1,13,14,30,-1,30,28,13,-1,15,9,25,-1,25,31,15,-1,30,14,15,-1,15,31,30,-1,9,0,7,-1,7,8,9,-1,8,7,1,-1,1,10,8,-1,1,4,11,-1,11,10,1,-1,4,5,12,-1,12,11,4,-1,5,6,13,-1,13,12,5,-1,6,2,14,-1,14,13,6,-1,3,0,9,-1,9,15,3,-1,14,2,3,-1,3,15,14,-1,16,23,22,-1,22,21,20,-1,20,19,18,-1,22,20,18,-1,16,22,18,-1,17,16,18,-1,0,16,17,-1,17,7,0,-1,7,17,18,-1,18,1,7,-1,1,18,19,-1,19,4,1,-1,4,19,20,-1,20,5,4,-1,5,20,21,-1,21,6,5,-1,6,21,22,-1,22,2,6,-1,2,22,23,-1,23,3,2,-1,3,23,16,-1,16,0,3,-1,32,39,38,-1,38,37,36,-1,32,38,36,-1,36,35,34,-1,32,36,34,-1,33,32,34,-1,26,32,33,-1,33,24,26,-1,24,33,34,-1,34,29,24,-1,29,34,35,-1,35,25,29,-1,25,35,36,-1,36,31,25,-1,31,36,37,-1,37,30,31,-1,30,37,38,-1,38,28,30,-1,28,38,39,-1,39,27,28,-1,27,39,32,-1,32,26,27,-1], Java.type("int[]"))).setCreaseAngle(1.57).setTexCoordIndex(Java.to([27,10,9,-1,9,31,27,-1,31,9,11,-1,11,26,31,-1,11,12,28,-1,28,26,11,-1,12,13,29,-1,29,28,12,-1,13,14,30,-1,30,29,13,-1,14,15,32,-1,32,30,14,-1,17,10,27,-1,27,34,17,-1,33,16,17,-1,17,34,33,-1,10,1,0,-1,0,9,10,-1,9,0,2,-1,2,11,9,-1,2,3,12,-1,12,11,2,-1,3,4,13,-1,13,12,3,-1,4,5,14,-1,14,13,4,-1,5,6,15,-1,15,14,5,-1,7,1,10,-1,10,17,7,-1,16,8,7,-1,7,17,16,-1,18,25,24,-1,24,23,22,-1,22,21,20,-1,24,22,20,-1,18,24,20,-1,19,18,20,-1,1,18,19,-1,19,0,1,-1,0,19,20,-1,20,2,0,-1,2,20,21,-1,21,3,2,-1,3,21,22,-1,22,4,3,-1,4,22,23,-1,23,5,4,-1,5,23,24,-1,24,6,5,-1,8,24,25,-1,25,7,8,-1,7,25,18,-1,18,1,7,-1,35,42,41,-1,41,40,39,-1,35,41,39,-1,39,38,37,-1,35,39,37,-1,36,35,37,-1,28,35,36,-1,36,26,28,-1,26,36,37,-1,37,31,26,-1,31,37,38,-1,38,27,31,-1,27,38,39,-1,39,34,27,-1,34,39,40,-1,40,33,34,-1,32,40,41,-1,41,30,32,-1,30,41,42,-1,42,29,30,-1,29,42,35,-1,35,28,29,-1], Java.type("int[]")))
                          .setCoord(new Coordinate().setPoint(Java.to([doubleToFloat(-0.5486),doubleToFloat(-8.283),doubleToFloat(-1.232),doubleToFloat(-1.486),doubleToFloat(-8.077),doubleToFloat(-0.2413),doubleToFloat(0.2605),doubleToFloat(-8.42),doubleToFloat(-0.2663),doubleToFloat(-0.0305),doubleToFloat(-8.37),doubleToFloat(-0.9039),doubleToFloat(-1.111),doubleToFloat(-8.152),doubleToFloat(0.3642),doubleToFloat(-0.5486),doubleToFloat(-8.283),doubleToFloat(0.736),doubleToFloat(-0.0305),doubleToFloat(-8.37),doubleToFloat(0.2518),doubleToFloat(-1.111),doubleToFloat(-8.159),doubleToFloat(-1.009),doubleToFloat(-0.9449),doubleToFloat(-4.216),doubleToFloat(-1.053),doubleToFloat(-0.2854),doubleToFloat(-4.402),doubleToFloat(-1.332),doubleToFloat(-1.334),doubleToFloat(-4.12),doubleToFloat(-0.2381),doubleToFloat(-0.9449),doubleToFloat(-4.216),doubleToFloat(0.6011),doubleToFloat(-0.2854),doubleToFloat(-4.402),doubleToFloat(0.9772),doubleToFloat(0.3877),doubleToFloat(-4.599),doubleToFloat(0.5422),doubleToFloat(0.7557),doubleToFloat(-4.691),doubleToFloat(-0.2466),doubleToFloat(0.3601),doubleToFloat(-4.573),doubleToFloat(-0.983),doubleToFloat(-0.5729),doubleToFloat(-7.851),doubleToFloat(-0.97),doubleToFloat(-0.9444),doubleToFloat(-7.765),doubleToFloat(-0.8227),doubleToFloat(-1.222),doubleToFloat(-7.702),doubleToFloat(-0.2549),doubleToFloat(-0.9428),doubleToFloat(-7.759),doubleToFloat(0.1945),doubleToFloat(-0.5738),doubleToFloat(-7.851),doubleToFloat(0.4395),doubleToFloat(-0.2134),doubleToFloat(-7.907),doubleToFloat(0.1035),doubleToFloat(0.0011),doubleToFloat(-7.942),doubleToFloat(-0.2774),doubleToFloat(-0.2111),doubleToFloat(-7.907),doubleToFloat(-0.7414),doubleToFloat(-1.211),doubleToFloat(0.1953),doubleToFloat(-0.1368),doubleToFloat(-0.0126),doubleToFloat(0.0001),doubleToFloat(-1.461),doubleToFloat(-0.7047),doubleToFloat(0.1171),doubleToFloat(0.8683),doubleToFloat(-0.004),doubleToFloat(-0.0014),doubleToFloat(1.213),doubleToFloat(0.7646),doubleToFloat(-0.1313),doubleToFloat(0.8496),doubleToFloat(-0.7109),doubleToFloat(0.1181),doubleToFloat(-1.099),doubleToFloat(1.222),doubleToFloat(-0.216),doubleToFloat(-0.0937),doubleToFloat(0.722),doubleToFloat(-0.1241),doubleToFloat(-1.121),doubleToFloat(-0.3903),doubleToFloat(0.9161),doubleToFloat(0.6722),doubleToFloat(-0.7974),doubleToFloat(0.9737),doubleToFloat(-0.1352),doubleToFloat(-0.3972),doubleToFloat(0.9172),doubleToFloat(-0.9048),doubleToFloat(0.1047),doubleToFloat(0.837),doubleToFloat(-1.165),doubleToFloat(0.6284),doubleToFloat(0.7533),doubleToFloat(-0.922),doubleToFloat(1.032),doubleToFloat(0.6814),doubleToFloat(-0.0917),doubleToFloat(0.6726),doubleToFloat(0.7463),doubleToFloat(0.6509),doubleToFloat(0.1086),doubleToFloat(0.8364),doubleToFloat(0.9178)], Java.type("float[]"))))
                          .setTexCoord(new TextureCoordinate().setPoint(Java.to([doubleToFloat(0.1049),doubleToFloat(0.0541),doubleToFloat(0.1104),doubleToFloat(0.0527),doubleToFloat(0.0952),doubleToFloat(0.0578),doubleToFloat(0.0898),doubleToFloat(0.0572),doubleToFloat(0.0825),doubleToFloat(0.057),doubleToFloat(0.0728),doubleToFloat(0.056),doubleToFloat(0.0641),doubleToFloat(0.0533),doubleToFloat(0.1172),doubleToFloat(0.0539),doubleToFloat(0.1257),doubleToFloat(0.0501),doubleToFloat(0.1098),doubleToFloat(0.1053),doubleToFloat(0.1172),doubleToFloat(0.1034),doubleToFloat(0.0987),doubleToFloat(0.1077),doubleToFloat(0.0894),doubleToFloat(0.1077),doubleToFloat(0.0804),doubleToFloat(0.1075),doubleToFloat(0.0703),doubleToFloat(0.1076),doubleToFloat(0.059),doubleToFloat(0.1083),doubleToFloat(0.137),doubleToFloat(0.1041),doubleToFloat(0.1245),doubleToFloat(0.1045),doubleToFloat(0.1104),doubleToFloat(0.0527),doubleToFloat(0.1049),doubleToFloat(0.0541),doubleToFloat(0.0952),doubleToFloat(0.0578),doubleToFloat(0.0898),doubleToFloat(0.0572),doubleToFloat(0.0825),doubleToFloat(0.057),doubleToFloat(0.0728),doubleToFloat(0.056),doubleToFloat(0.0641),doubleToFloat(0.0533),doubleToFloat(0.1172),doubleToFloat(0.0539),doubleToFloat(0.1022),doubleToFloat(0.1576),doubleToFloat(0.124),doubleToFloat(0.1541),doubleToFloat(0.0889),doubleToFloat(0.1582),doubleToFloat(0.0782),doubleToFloat(0.1579),doubleToFloat(0.0679),doubleToFloat(0.1593),doubleToFloat(0.1147),doubleToFloat(0.1566),doubleToFloat(0.0539),doubleToFloat(0.1632),doubleToFloat(0.1484),doubleToFloat(0.1582),doubleToFloat(0.1318),doubleToFloat(0.1551),doubleToFloat(0.0889),doubleToFloat(0.1582),doubleToFloat(0.1022),doubleToFloat(0.1576),doubleToFloat(0.1147),doubleToFloat(0.1566),doubleToFloat(0.124),doubleToFloat(0.1541),doubleToFloat(0.1318),doubleToFloat(0.1551),doubleToFloat(0.1484),doubleToFloat(0.1582),doubleToFloat(0.0679),doubleToFloat(0.1593),doubleToFloat(0.0782),doubleToFloat(0.1579)], Java.type("float[]"))))))))
                  .addChild(new HAnimJoint("hanim_r_elbow").setName("r_radiocarpal").setDEF("hanim_r_radiocarpal").setCenter(Java.to([doubleToFloat(-7.341),doubleToFloat(34.169998),doubleToFloat(-1.443)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(0)], Java.type("float[]"))).setLlimit(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(0)], Java.type("float[]")))
                    .addChild(new HAnimSegment("hanim_r_radiocarpal").setName("r_carpal").setDEF("hanim_r_carpal")
                      .addChild(new Transform().setTranslation(Java.to([doubleToFloat(-7.341),doubleToFloat(34.169998),doubleToFloat(-1.443)], Java.type("float[]")))
                        .addChild(new Shape()
                          .setAppearance(new Appearance()
                            .setMaterial(new Material().setDiffuseColor(Java.to([doubleToFloat(0.588),doubleToFloat(0.588),doubleToFloat(0.588)], Java.type("float[]"))))
                            .setTexture(new ImageTexture().setUSE("DaTextureAtlas")))
                          .setGeometry(new IndexedFaceSet().setCoordIndex(Java.to([14,13,18,-1,18,17,14,-1,12,11,20,-1,20,19,12,-1,4,0,6,-1,6,8,4,-1,10,9,22,-1,22,21,10,-1,16,15,17,-1,17,18,16,-1,2,5,8,-1,8,6,2,-1,13,14,19,-1,19,20,13,-1,3,7,8,-1,8,5,3,-1,15,16,21,-1,21,22,15,-1,8,7,1,-1,1,4,8,-1,2,14,17,-1,17,5,2,-1,18,13,28,-1,28,32,18,-1,12,19,6,-1,6,0,12,-1,20,11,24,-1,24,35,20,-1,10,21,36,-1,36,26,10,-1,22,9,1,-1,1,7,22,-1,30,16,18,-1,18,32,30,-1,17,15,3,-1,3,5,17,-1,28,13,20,-1,20,35,28,-1,19,14,2,-1,2,6,19,-1,3,15,22,-1,22,7,3,-1,21,16,30,-1,30,36,21,-1,28,27,33,-1,33,32,28,-1,24,23,34,-1,34,35,24,-1,25,26,36,-1,36,37,25,-1,30,32,33,-1,33,29,30,-1,31,38,34,-1,34,23,31,-1,29,33,38,-1,38,37,29,-1,28,35,34,-1,34,27,28,-1,29,37,36,-1,36,30,29,-1,27,34,38,-1,38,33,27,-1,31,25,37,-1,37,38,31,-1,67,39,43,-1,43,44,67,-1,40,41,45,-1,45,46,40,-1,42,48,43,-1,43,39,42,-1,47,45,41,-1,41,55,47,-1,42,40,46,-1,46,48,42,-1,9,52,50,-1,50,1,9,-1,4,51,49,-1,49,0,4,-1,11,58,54,-1,54,24,11,-1,1,50,51,-1,51,4,1,-1,10,53,52,-1,52,9,10,-1,26,68,53,-1,53,10,26,-1,0,49,70,-1,70,12,0,-1,31,100,61,-1,61,25,31,-1,25,61,68,-1,68,26,25,-1,24,54,95,-1,95,23,24,-1,23,95,100,-1,100,31,23,-1,95,54,96,-1,39,96,97,-1,97,42,39,-1,42,97,98,-1,98,40,42,-1,40,98,99,-1,99,41,40,-1,99,100,55,-1,55,41,99,-1,100,95,67,-1,67,55,100,-1,54,58,56,-1,56,96,54,-1,96,56,57,-1,57,97,96,-1,97,57,59,-1,59,98,97,-1,98,59,60,-1,60,99,98,-1,99,60,100,-1,52,65,63,-1,63,50,52,-1,51,64,62,-1,62,49,51,-1,50,63,64,-1,64,51,50,-1,53,66,65,-1,65,52,53,-1,70,49,62,-1,62,71,70,-1,68,61,60,-1,60,69,68,-1,72,63,65,-1,65,73,72,-1,73,65,66,-1,66,74,73,-1,81,74,66,-1,66,69,81,-1,75,60,59,-1,59,76,75,-1,76,59,57,-1,57,77,76,-1,77,57,56,-1,56,78,77,-1,82,78,56,-1,56,71,82,-1,79,62,64,-1,64,80,79,-1,80,64,63,-1,63,72,80,-1,55,67,44,-1,44,47,55,-1,95,96,39,-1,39,67,95,-1,68,69,66,-1,66,53,68,-1,75,81,69,-1,69,60,75,-1,100,60,61,-1,58,70,71,-1,71,56,58,-1,79,82,71,-1,71,62,79,-1,12,70,58,-1,58,11,12,-1,47,48,46,-1,46,45,47,-1,47,44,43,-1,43,48,47,-1,72,73,84,-1,84,85,72,-1,80,72,85,-1,85,86,80,-1,79,80,86,-1,86,87,79,-1,82,79,87,-1,87,88,82,-1,78,82,88,-1,88,89,78,-1,77,78,89,-1,89,90,77,-1,76,77,90,-1,90,91,76,-1,75,76,91,-1,91,92,75,-1,81,75,92,-1,92,93,81,-1,74,81,93,-1,93,94,74,-1,74,94,84,-1,84,73,74,-1,85,84,83,-1,86,85,83,-1,87,86,83,-1,88,87,83,-1,89,88,83,-1,90,89,83,-1,91,90,83,-1,92,91,83,-1,93,92,83,-1,94,93,83,-1,84,94,83,-1], Java.type("int[]"))).setCreaseAngle(1.57).setTexCoordIndex(Java.to([1,0,3,-1,3,2,1,-1,5,4,7,-1,7,6,5,-1,9,8,11,-1,11,10,9,-1,13,12,15,-1,15,14,13,-1,17,16,95,-1,95,96,17,-1,19,18,10,-1,10,11,19,-1,0,1,6,-1,6,7,0,-1,21,20,98,-1,98,99,21,-1,16,17,14,-1,14,15,16,-1,98,20,22,-1,22,97,98,-1,19,1,2,-1,2,18,19,-1,3,0,24,-1,24,23,3,-1,5,6,11,-1,11,8,5,-1,7,4,26,-1,26,25,7,-1,13,14,28,-1,28,27,13,-1,15,12,22,-1,22,20,15,-1,29,17,96,-1,96,100,29,-1,95,16,21,-1,21,99,95,-1,24,0,7,-1,7,25,24,-1,6,1,19,-1,19,11,6,-1,21,16,15,-1,15,20,21,-1,14,17,29,-1,29,28,14,-1,24,30,31,-1,31,23,24,-1,26,32,33,-1,33,25,26,-1,34,27,28,-1,28,35,34,-1,29,100,101,-1,101,36,29,-1,37,39,33,-1,33,32,37,-1,36,101,38,-1,38,35,36,-1,24,25,33,-1,33,30,24,-1,36,35,28,-1,28,29,36,-1,30,33,39,-1,39,31,30,-1,102,34,35,-1,35,38,102,-1,41,40,47,-1,47,42,41,-1,44,43,46,-1,46,45,44,-1,48,53,47,-1,47,40,48,-1,49,46,43,-1,43,50,49,-1,103,44,45,-1,45,104,103,-1,12,52,51,-1,51,22,12,-1,9,55,54,-1,54,8,9,-1,4,59,56,-1,56,26,4,-1,22,51,105,-1,105,97,22,-1,13,57,52,-1,52,12,13,-1,27,58,57,-1,57,13,27,-1,8,54,62,-1,62,5,8,-1,102,61,60,-1,60,34,102,-1,34,60,58,-1,58,27,34,-1,26,56,63,-1,63,32,26,-1,32,63,64,-1,64,37,32,-1,63,56,67,-1,40,125,127,-1,127,48,40,-1,103,126,128,-1,128,44,103,-1,44,128,129,-1,129,43,44,-1,129,130,50,-1,50,43,129,-1,131,124,41,-1,41,73,131,-1,56,59,74,-1,74,67,56,-1,67,74,76,-1,76,68,67,-1,106,107,69,-1,69,65,106,-1,65,69,70,-1,70,66,65,-1,66,70,61,-1,52,72,71,-1,71,51,52,-1,55,86,85,-1,85,54,55,-1,51,71,108,-1,108,105,51,-1,57,75,72,-1,72,52,57,-1,62,54,85,-1,85,87,62,-1,58,60,70,-1,70,77,58,-1,78,71,72,-1,72,79,78,-1,79,72,75,-1,75,80,79,-1,81,80,75,-1,75,77,81,-1,82,70,69,-1,69,83,82,-1,83,69,107,-1,107,84,83,-1,88,76,74,-1,74,89,88,-1,90,89,74,-1,74,87,90,-1,91,85,86,-1,86,92,91,-1,109,108,71,-1,71,78,109,-1,73,41,42,-1,42,93,73,-1,124,125,40,-1,40,41,124,-1,58,77,75,-1,75,57,58,-1,82,81,77,-1,77,70,82,-1,61,70,60,-1,59,62,87,-1,87,74,59,-1,91,90,87,-1,87,85,91,-1,5,62,59,-1,59,4,5,-1,49,104,45,-1,45,46,49,-1,93,42,47,-1,47,53,93,-1,78,79,111,-1,111,112,78,-1,109,78,112,-1,112,113,109,-1,91,92,114,-1,114,115,91,-1,90,91,115,-1,115,116,90,-1,89,90,116,-1,116,117,89,-1,88,89,117,-1,117,118,88,-1,83,84,119,-1,119,120,83,-1,82,83,120,-1,120,121,82,-1,81,82,121,-1,121,122,81,-1,80,81,122,-1,122,123,80,-1,80,123,111,-1,111,79,80,-1,112,111,110,-1,113,112,110,-1,115,114,94,-1,116,115,94,-1,117,116,94,-1,118,117,94,-1,120,119,110,-1,121,120,110,-1,122,121,110,-1,123,122,110,-1,111,123,110,-1], Java.type("int[]")))
                            .setCoord(new Coordinate().setPoint(Java.to([doubleToFloat(0.0484),doubleToFloat(-2.669),doubleToFloat(-1.109),doubleToFloat(-0.5122),doubleToFloat(-2.536),doubleToFloat(-1.211),doubleToFloat(-0.0389),doubleToFloat(-3.633),doubleToFloat(-0.9447),doubleToFloat(-0.3887),doubleToFloat(-3.753),doubleToFloat(-1.019),doubleToFloat(-0.2345),doubleToFloat(-2.6),doubleToFloat(-1.283),doubleToFloat(-0.1638),doubleToFloat(-3.794),doubleToFloat(-1.017),doubleToFloat(0.0097),doubleToFloat(-3.197),doubleToFloat(-1.071),doubleToFloat(-0.5439),doubleToFloat(-3.335),doubleToFloat(-1.193),doubleToFloat(-0.2598),doubleToFloat(-3.267),doubleToFloat(-1.236),doubleToFloat(-0.7593),doubleToFloat(-2.661),doubleToFloat(-0.6786),doubleToFloat(-0.8727),doubleToFloat(-2.789),doubleToFloat(-0.0285),doubleToFloat(-0.027),doubleToFloat(-2.955),doubleToFloat(-0.0639),doubleToFloat(-0.0035),doubleToFloat(-2.833),doubleToFloat(-0.7125),doubleToFloat(-0.2448),doubleToFloat(-4.088),doubleToFloat(-0.0434),doubleToFloat(-0.1763),doubleToFloat(-3.945),doubleToFloat(-0.5948),doubleToFloat(-0.6318),doubleToFloat(-4.095),doubleToFloat(-0.5705),doubleToFloat(-0.6436),doubleToFloat(-4.232),doubleToFloat(-0.0154),doubleToFloat(-0.4108),doubleToFloat(-4.136),doubleToFloat(-0.5685),doubleToFloat(-0.4432),doubleToFloat(-4.282),doubleToFloat(-0.0213),doubleToFloat(-0.0778),doubleToFloat(-3.4),doubleToFloat(-0.6804),doubleToFloat(-0.1499),doubleToFloat(-3.521),doubleToFloat(-0.0474),doubleToFloat(-0.8092),doubleToFloat(-3.775),doubleToFloat(-0.0027),doubleToFloat(-0.7549),doubleToFloat(-3.656),doubleToFloat(-0.6552),doubleToFloat(0.1145),doubleToFloat(-2.854),doubleToFloat(1.064),doubleToFloat(0.0184),doubleToFloat(-2.931),doubleToFloat(0.5665),doubleToFloat(-0.4652),doubleToFloat(-2.795),doubleToFloat(1.179),doubleToFloat(-0.7695),doubleToFloat(-2.852),doubleToFloat(0.6593),doubleToFloat(0.0912),doubleToFloat(-3.841),doubleToFloat(1.006),doubleToFloat(-0.1328),doubleToFloat(-4.068),doubleToFloat(0.6052),doubleToFloat(-0.2484),doubleToFloat(-3.879),doubleToFloat(1.085),doubleToFloat(-0.5776),doubleToFloat(-4.178),doubleToFloat(0.6005),doubleToFloat(-0.1741),doubleToFloat(-2.777),doubleToFloat(1.307),doubleToFloat(-0.391),doubleToFloat(-4.211),doubleToFloat(0.5892),doubleToFloat(-0.0222),doubleToFloat(-3.9),doubleToFloat(1.103),doubleToFloat(0.0911),doubleToFloat(-3.456),doubleToFloat(1.078),doubleToFloat(-0.0933),doubleToFloat(-3.543),doubleToFloat(0.5804),doubleToFloat(-0.7321),doubleToFloat(-3.726),doubleToFloat(0.6506),doubleToFloat(-0.398),doubleToFloat(-3.466),doubleToFloat(1.192),doubleToFloat(-0.1303),doubleToFloat(-3.384),doubleToFloat(1.244),doubleToFloat(0.6275),doubleToFloat(-1.818),doubleToFloat(1.199),doubleToFloat(0.5455),doubleToFloat(-1.716),doubleToFloat(1.771),doubleToFloat(0.1596),doubleToFloat(-1.86),doubleToFloat(1.723),doubleToFloat(0.7564),doubleToFloat(-1.71),doubleToFloat(1.391),doubleToFloat(0.7176),doubleToFloat(-2.41),doubleToFloat(1.495),doubleToFloat(0.5088),doubleToFloat(-2.502),doubleToFloat(1.493),doubleToFloat(0.4454),doubleToFloat(-2.494),doubleToFloat(1.856),doubleToFloat(0.673),doubleToFloat(-2.397),doubleToFloat(1.84),doubleToFloat(0.473),doubleToFloat(-2.597),doubleToFloat(1.729),doubleToFloat(0.7943),doubleToFloat(-2.454),doubleToFloat(1.703),doubleToFloat(0.1488),doubleToFloat(-1.898),doubleToFloat(-1.075),doubleToFloat(-0.4772),doubleToFloat(-1.692),doubleToFloat(-1.126),doubleToFloat(-0.1582),doubleToFloat(-1.743),doubleToFloat(-1.206),doubleToFloat(-0.7034),doubleToFloat(-1.791),doubleToFloat(-0.6081),doubleToFloat(-0.7947),doubleToFloat(-1.854),doubleToFloat(-0.0135),doubleToFloat(0.271),doubleToFloat(-1.977),doubleToFloat(0.5803),doubleToFloat(0.046),doubleToFloat(-1.962),doubleToFloat(1.525),doubleToFloat(0.535),doubleToFloat(-0.7519),doubleToFloat(0.1207),doubleToFloat(0.5847),doubleToFloat(-0.501),doubleToFloat(0.619),doubleToFloat(0.2218),doubleToFloat(-2.022),doubleToFloat(-0.0712),doubleToFloat(0.2651),doubleToFloat(-0.39),doubleToFloat(0.9595),doubleToFloat(-0.3059),doubleToFloat(-0.5187),doubleToFloat(0.9004),doubleToFloat(-0.4249),doubleToFloat(-1.7),doubleToFloat(1.165),doubleToFloat(0.3218),doubleToFloat(-0.8135),doubleToFloat(-0.8924),doubleToFloat(-0.3755),doubleToFloat(-0.7445),doubleToFloat(-0.9185),doubleToFloat(-0.0375),doubleToFloat(-0.8231),doubleToFloat(-1.06),doubleToFloat(-0.5692),doubleToFloat(-0.6704),doubleToFloat(-0.4588),doubleToFloat(-0.6362),doubleToFloat(-0.6574),doubleToFloat(-0.0168),doubleToFloat(0.3398),doubleToFloat(-2.013),doubleToFloat(1.232),doubleToFloat(-0.7147),doubleToFloat(-1.78),doubleToFloat(0.6911),doubleToFloat(-0.5559),doubleToFloat(-0.6254),doubleToFloat(0.574),doubleToFloat(0.1664),doubleToFloat(-1.961),doubleToFloat(-0.6946),doubleToFloat(0.3867),doubleToFloat(-0.8083),doubleToFloat(-0.483),doubleToFloat(-0.2263),doubleToFloat(-0.0176),doubleToFloat(-0.602),doubleToFloat(-0.4134),doubleToFloat(-0.0056),doubleToFloat(-0.3313),doubleToFloat(-0.4772),doubleToFloat(-0.024),doubleToFloat(0.0197),doubleToFloat(-0.2029),doubleToFloat(-0.0192),doubleToFloat(0.6487),doubleToFloat(0.19),doubleToFloat(-0.1026),doubleToFloat(0.6875),doubleToFloat(0.4637),doubleToFloat(-0.2014),doubleToFloat(0.4306),doubleToFloat(0.4649),doubleToFloat(-0.2436),doubleToFloat(0.0672),doubleToFloat(0.3571),doubleToFloat(-0.187),doubleToFloat(-0.6047),doubleToFloat(0.085),doubleToFloat(-0.0795),doubleToFloat(-0.6916),doubleToFloat(-0.3677),doubleToFloat(0.0022),doubleToFloat(0.4139),doubleToFloat(0.4441),doubleToFloat(-0.2482),doubleToFloat(-0.2847),doubleToFloat(0.073),doubleToFloat(0.7042),doubleToFloat(0.0189),doubleToFloat(-0.3553),doubleToFloat(0.5674),doubleToFloat(-0.2789),doubleToFloat(-0.1929),doubleToFloat(0.5039),doubleToFloat(-0.5229),doubleToFloat(0.0913),doubleToFloat(0.5001),doubleToFloat(-0.6061),doubleToFloat(0.3468),doubleToFloat(0.3753),doubleToFloat(-0.5281),doubleToFloat(0.426),doubleToFloat(0.3319),doubleToFloat(-0.2365),doubleToFloat(0.445),doubleToFloat(0.3505),doubleToFloat(0.0842),doubleToFloat(0.4357),doubleToFloat(0.3809),doubleToFloat(0.4215),doubleToFloat(0.1945),doubleToFloat(0.479),doubleToFloat(0.6494),doubleToFloat(-0.1635),doubleToFloat(0.555),doubleToFloat(0.614),doubleToFloat(-0.3158),doubleToFloat(0.5745),doubleToFloat(0.4038),doubleToFloat(-0.4135),doubleToFloat(0.5506),doubleToFloat(0.0409),doubleToFloat(0.3174),doubleToFloat(-1.934),doubleToFloat(1.03),doubleToFloat(0.6016),doubleToFloat(-1.397),doubleToFloat(0.7368),doubleToFloat(0.7178),doubleToFloat(-1.192),doubleToFloat(1.035),doubleToFloat(0.4234),doubleToFloat(-1.114),doubleToFloat(1.502),doubleToFloat(-0.0707),doubleToFloat(-1.244),doubleToFloat(1.455),doubleToFloat(-0.1435),doubleToFloat(-1.576),doubleToFloat(1.365)], Java.type("float[]"))))
                            .setTexCoord(new TextureCoordinate().setPoint(Java.to([doubleToFloat(0.205),doubleToFloat(0.0658),doubleToFloat(0.1911),doubleToFloat(0.0707),doubleToFloat(0.1929),doubleToFloat(0.0623),doubleToFloat(0.2056),doubleToFloat(0.0584),doubleToFloat(0.204),doubleToFloat(0.0979),doubleToFloat(0.1894),doubleToFloat(0.0993),doubleToFloat(0.192),doubleToFloat(0.0812),doubleToFloat(0.2042),doubleToFloat(0.0782),doubleToFloat(0.1776),doubleToFloat(0.102),doubleToFloat(0.1691),doubleToFloat(0.1049),doubleToFloat(0.1722),doubleToFloat(0.0826),doubleToFloat(0.1792),doubleToFloat(0.0874),doubleToFloat(0.3576),doubleToFloat(0.0677),doubleToFloat(0.343),doubleToFloat(0.0677),doubleToFloat(0.3369),doubleToFloat(0.0378),doubleToFloat(0.3508),doubleToFloat(0.0394),doubleToFloat(0.3485),doubleToFloat(0.0301),doubleToFloat(0.3351),doubleToFloat(0.0289),doubleToFloat(0.1792),doubleToFloat(0.0721),doubleToFloat(0.1812),doubleToFloat(0.0788),doubleToFloat(0.3676),doubleToFloat(0.0436),doubleToFloat(0.3644),doubleToFloat(0.0343),doubleToFloat(0.3736),doubleToFloat(0.0676),doubleToFloat(0.2203),doubleToFloat(0.0605),doubleToFloat(0.2197),doubleToFloat(0.0666),doubleToFloat(0.2201),doubleToFloat(0.078),doubleToFloat(0.219),doubleToFloat(0.1006),doubleToFloat(0.3267),doubleToFloat(0.0697),doubleToFloat(0.3206),doubleToFloat(0.0416),doubleToFloat(0.3198),doubleToFloat(0.0314),doubleToFloat(0.2336),doubleToFloat(0.0701),doubleToFloat(0.2372),doubleToFloat(0.0664),doubleToFloat(0.237),doubleToFloat(0.1032),doubleToFloat(0.2337),doubleToFloat(0.0796),doubleToFloat(0.3092),doubleToFloat(0.0748),doubleToFloat(0.3062),doubleToFloat(0.0477),doubleToFloat(0.3048),doubleToFloat(0.0377),doubleToFloat(0.2463),doubleToFloat(0.1043),doubleToFloat(0.2993),doubleToFloat(0.0488),doubleToFloat(0.2421),doubleToFloat(0.0791),doubleToFloat(0.2419),doubleToFloat(0.1525),doubleToFloat(0.245),doubleToFloat(0.146),doubleToFloat(0.2625),doubleToFloat(0.1471),doubleToFloat(0.2867),doubleToFloat(0.1169),doubleToFloat(0.2863),doubleToFloat(0.1262),doubleToFloat(0.2719),doubleToFloat(0.1174),doubleToFloat(0.2719),doubleToFloat(0.1139),doubleToFloat(0.2586),doubleToFloat(0.1504),doubleToFloat(0.2416),doubleToFloat(0.1569),doubleToFloat(0.2696),doubleToFloat(0.112),doubleToFloat(0.2872),doubleToFloat(0.1121),doubleToFloat(0.3743),doubleToFloat(0.0911),doubleToFloat(0.3595),doubleToFloat(0.0892),doubleToFloat(0.2607),doubleToFloat(0.1541),doubleToFloat(0.1763),doubleToFloat(0.1313),doubleToFloat(0.1685),doubleToFloat(0.1288),doubleToFloat(0.2183),doubleToFloat(0.1225),doubleToFloat(0.3466),doubleToFloat(0.0922),doubleToFloat(0.3303),doubleToFloat(0.0955),doubleToFloat(0.2026),doubleToFloat(0.1199),doubleToFloat(0.3166),doubleToFloat(0.1021),doubleToFloat(0.3105),doubleToFloat(0.1115),doubleToFloat(0.1871),doubleToFloat(0.1227),doubleToFloat(0.2339),doubleToFloat(0.1345),doubleToFloat(0.2426),doubleToFloat(0.131),doubleToFloat(0.3089),doubleToFloat(0.1341),doubleToFloat(0.3091),doubleToFloat(0.123),doubleToFloat(0.2198),doubleToFloat(0.1467),doubleToFloat(0.2215),doubleToFloat(0.1552),doubleToFloat(0.3263),doubleToFloat(0.1386),doubleToFloat(0.3306),doubleToFloat(0.13),doubleToFloat(0.3736),doubleToFloat(0.1115),doubleToFloat(0.3601),doubleToFloat(0.1093),doubleToFloat(0.2498),doubleToFloat(0.1434),doubleToFloat(0.2005),doubleToFloat(0.1594),doubleToFloat(0.3526),doubleToFloat(0.1164),doubleToFloat(0.2108),doubleToFloat(0.1652),doubleToFloat(0.34),doubleToFloat(0.1206),doubleToFloat(0.3704),doubleToFloat(0.1321),doubleToFloat(0.3627),doubleToFloat(0.1306),doubleToFloat(0.356),doubleToFloat(0.1306),doubleToFloat(0.3496),doubleToFloat(0.1334),doubleToFloat(0.3443),doubleToFloat(0.1351),doubleToFloat(0.3407),doubleToFloat(0.1419),doubleToFloat(0.3435),doubleToFloat(0.1517),doubleToFloat(0.1768),doubleToFloat(0.1527),doubleToFloat(0.1675),doubleToFloat(0.1496),doubleToFloat(0.1846),doubleToFloat(0.1543),doubleToFloat(0.1988),doubleToFloat(0.1786),doubleToFloat(0.1926),doubleToFloat(0.1765),doubleToFloat(0.186),doubleToFloat(0.1735),doubleToFloat(0.1794),doubleToFloat(0.1722),doubleToFloat(0.174),doubleToFloat(0.1741),doubleToFloat(0.2658),doubleToFloat(0.1458),doubleToFloat(0.1866),doubleToFloat(0.1875),doubleToFloat(0.3498),doubleToFloat(0.025),doubleToFloat(0.3342),doubleToFloat(0.0242),doubleToFloat(0.3818),doubleToFloat(0.0652),doubleToFloat(0.3741),doubleToFloat(0.0425),doubleToFloat(0.3678),doubleToFloat(0.0299),doubleToFloat(0.3176),doubleToFloat(0.0272),doubleToFloat(0.3004),doubleToFloat(0.0345),doubleToFloat(0.3029),doubleToFloat(0.0766),doubleToFloat(0.2847),doubleToFloat(0.135),doubleToFloat(0.2695),doubleToFloat(0.1219),doubleToFloat(0.3863),doubleToFloat(0.0903),doubleToFloat(0.3064),doubleToFloat(0.1439),doubleToFloat(0.3237),doubleToFloat(0.1509),doubleToFloat(0.3852),doubleToFloat(0.1126),doubleToFloat(0.3751),doubleToFloat(0.1362),doubleToFloat(0.3572),doubleToFloat(0.1421),doubleToFloat(0.36),doubleToFloat(0.1363),doubleToFloat(0.3638),doubleToFloat(0.1371),doubleToFloat(0.3662),doubleToFloat(0.1391),doubleToFloat(0.1803),doubleToFloat(0.1808),doubleToFloat(0.183),doubleToFloat(0.1798),doubleToFloat(0.1863),doubleToFloat(0.1805),doubleToFloat(0.1896),doubleToFloat(0.182),doubleToFloat(0.1927),doubleToFloat(0.183),doubleToFloat(0.3504),doubleToFloat(0.1469),doubleToFloat(0.349),doubleToFloat(0.142),doubleToFloat(0.3508),doubleToFloat(0.1386),doubleToFloat(0.3534),doubleToFloat(0.1377),doubleToFloat(0.3566),doubleToFloat(0.1363),doubleToFloat(0.2339),doubleToFloat(0.1345),doubleToFloat(0.2198),doubleToFloat(0.1467),doubleToFloat(0.3064),doubleToFloat(0.1439),doubleToFloat(0.2215),doubleToFloat(0.1552),doubleToFloat(0.3089),doubleToFloat(0.1341),doubleToFloat(0.3091),doubleToFloat(0.123),doubleToFloat(0.3105),doubleToFloat(0.1115),doubleToFloat(0.2426),doubleToFloat(0.131)], Java.type("float[]")))))))))))
              .addChild(new HAnimJoint("hanim_sacroiliac").setName("vl5").setDEF("hanim_vl5").setCenter(Java.to([doubleToFloat(0),doubleToFloat(36.869999),doubleToFloat(-1.035)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(0)], Java.type("float[]"))).setLlimit(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(0)], Java.type("float[]")))
                .addChild(new HAnimSegment("hanim_vl5").setName("l5").setDEF("hanim_l5")
                  .addChild(new Transform().setTranslation(Java.to([doubleToFloat(0),doubleToFloat(36.869999),doubleToFloat(-1.035)], Java.type("float[]")))
                    .addChild(new Shape()
                      .setAppearance(new Appearance()
                        .setMaterial(new Material().setDiffuseColor(Java.to([doubleToFloat(0.588),doubleToFloat(0.588),doubleToFloat(0.588)], Java.type("float[]"))))
                        .setTexture(new ImageTexture().setUSE("DaTextureAtlas")))
                      .setGeometry(new IndexedFaceSet().setCoordIndex(Java.to([32,6,7,-1,7,33,32,-1,51,52,5,-1,5,0,51,-1,38,20,19,-1,19,37,38,-1,41,42,6,-1,6,75,41,-1,11,83,84,-1,84,12,11,-1,7,39,40,-1,40,4,7,-1,36,18,20,-1,20,38,36,-1,32,31,29,-1,29,6,32,-1,34,33,7,-1,7,4,34,-1,17,8,53,-1,53,54,17,-1,16,24,25,-1,25,11,16,-1,12,9,16,-1,16,11,12,-1,84,88,58,-1,58,12,84,-1,280,281,13,-1,13,58,280,-1,13,14,15,-1,15,9,13,-1,10,26,24,-1,24,16,10,-1,9,15,10,-1,10,16,9,-1,12,58,13,-1,13,9,12,-1,76,78,172,-1,172,169,76,-1,77,292,293,-1,293,171,77,-1,81,80,166,-1,166,167,81,-1,82,79,168,-1,168,170,82,-1,10,15,17,-1,14,303,304,-1,304,8,14,-1,20,5,3,-1,3,19,20,-1,18,0,5,-1,5,20,18,-1,19,3,174,-1,174,91,19,-1,4,30,35,-1,35,34,4,-1,15,14,8,-1,8,17,15,-1,10,17,1,-1,1,26,10,-1,36,23,21,-1,21,18,36,-1,22,0,18,-1,18,21,22,-1,56,55,22,-1,22,1,56,-1,21,24,26,-1,26,22,21,-1,1,22,26,-1,27,37,89,-1,89,175,27,-1,29,38,37,-1,37,27,29,-1,4,2,28,-1,28,30,4,-1,31,36,38,-1,38,29,31,-1,28,2,86,-1,86,85,28,-1,19,91,89,-1,89,37,19,-1,68,69,45,-1,45,44,68,-1,46,70,325,-1,325,326,46,-1,43,71,72,-1,72,49,43,-1,48,47,73,-1,73,74,48,-1,45,69,71,-1,71,43,45,-1,44,48,74,-1,74,68,44,-1,49,72,70,-1,70,46,49,-1,50,2,4,-1,4,40,50,-1,42,39,7,-1,7,6,42,-1,76,79,52,-1,52,51,76,-1,77,80,54,-1,54,53,77,-1,0,22,55,-1,55,51,0,-1,8,304,336,-1,336,53,8,-1,1,17,54,-1,54,56,1,-1,57,3,5,-1,5,52,57,-1,56,81,78,-1,78,55,56,-1,57,82,92,-1,92,60,57,-1,33,150,149,-1,149,32,33,-1,34,151,150,-1,150,33,34,-1,35,152,151,-1,151,34,35,-1,25,153,152,-1,152,35,25,-1,156,164,161,-1,161,153,156,-1,156,154,162,-1,162,164,156,-1,31,155,154,-1,154,36,31,-1,31,32,149,-1,149,155,31,-1,41,75,350,-1,350,349,41,-1,3,57,60,-1,60,174,3,-1,86,87,353,-1,353,351,86,-1,303,14,13,-1,13,281,303,-1,47,176,165,-1,165,73,47,-1,68,61,62,-1,62,69,68,-1,70,63,357,-1,357,325,70,-1,71,64,65,-1,65,72,71,-1,73,66,67,-1,67,74,73,-1,69,62,64,-1,64,71,69,-1,74,67,61,-1,61,68,74,-1,72,65,63,-1,63,70,72,-1,66,73,165,-1,165,90,66,-1,75,27,175,-1,175,350,75,-1,29,27,75,-1,75,6,29,-1,169,168,79,-1,79,76,169,-1,171,166,80,-1,80,77,171,-1,81,167,172,-1,172,78,81,-1,82,170,173,-1,173,92,82,-1,51,55,78,-1,78,76,51,-1,53,336,292,-1,292,77,53,-1,56,54,80,-1,80,81,56,-1,57,52,79,-1,79,82,57,-1,83,30,28,-1,28,84,83,-1,84,28,85,-1,85,88,84,-1,351,362,85,-1,85,86,351,-1,2,50,87,-1,87,86,2,-1,362,363,88,-1,88,85,362,-1,363,280,58,-1,58,88,363,-1,25,24,21,-1,21,23,25,-1,25,35,30,-1,30,83,25,-1,83,11,25,-1,93,94,102,-1,102,101,93,-1,94,95,103,-1,103,102,94,-1,95,96,104,-1,104,103,95,-1,96,97,105,-1,105,104,96,-1,97,98,106,-1,106,105,97,-1,98,99,107,-1,107,106,98,-1,99,100,108,-1,108,107,99,-1,100,93,101,-1,101,108,100,-1,101,102,110,-1,110,109,101,-1,102,103,111,-1,111,110,102,-1,103,104,112,-1,112,111,103,-1,104,105,113,-1,113,112,104,-1,105,106,114,-1,114,113,105,-1,106,107,115,-1,115,114,106,-1,107,108,116,-1,116,115,107,-1,108,101,109,-1,109,116,108,-1,109,110,118,-1,118,117,109,-1,110,111,119,-1,119,118,110,-1,111,112,120,-1,120,119,111,-1,112,113,121,-1,121,120,112,-1,113,114,122,-1,122,121,113,-1,114,115,123,-1,123,122,114,-1,115,116,124,-1,124,123,115,-1,116,109,117,-1,117,124,116,-1,117,118,126,-1,126,125,117,-1,118,119,127,-1,127,126,118,-1,119,120,128,-1,128,127,119,-1,120,121,129,-1,129,128,120,-1,121,122,130,-1,130,129,121,-1,122,123,131,-1,131,130,122,-1,123,124,132,-1,132,131,123,-1,124,117,125,-1,125,132,124,-1,125,126,141,-1,141,142,125,-1,126,127,143,-1,143,141,126,-1,128,144,143,-1,143,127,128,-1,129,145,144,-1,144,128,129,-1,130,146,145,-1,145,129,130,-1,131,147,146,-1,146,130,131,-1,131,132,148,-1,148,147,131,-1,132,125,142,-1,142,148,132,-1,99,98,97,-1,97,96,95,-1,95,94,93,-1,97,95,93,-1,99,97,93,-1,100,99,93,-1,134,135,136,-1,136,137,138,-1,138,139,140,-1,136,138,140,-1,134,136,140,-1,133,134,140,-1,134,133,142,-1,142,141,134,-1,135,134,141,-1,141,143,135,-1,144,136,135,-1,135,143,144,-1,145,137,136,-1,136,144,145,-1,146,138,137,-1,137,145,146,-1,147,139,138,-1,138,146,147,-1,140,139,147,-1,147,148,140,-1,133,140,148,-1,148,142,133,-1,150,158,157,-1,157,149,150,-1,151,159,158,-1,158,150,151,-1,152,160,159,-1,159,151,152,-1,153,161,160,-1,160,152,153,-1,155,163,162,-1,162,154,155,-1,155,149,157,-1,157,163,155,-1,23,156,153,-1,153,25,23,-1,23,36,154,-1,154,156,23,-1,164,59,161,-1,162,59,164,-1,158,59,157,-1,159,59,158,-1,160,59,159,-1,161,59,160,-1,163,59,162,-1,157,59,163,-1,62,61,169,-1,169,172,62,-1,357,63,171,-1,171,293,357,-1,65,64,167,-1,167,166,65,-1,67,66,170,-1,170,168,67,-1,61,67,168,-1,168,169,61,-1,63,65,166,-1,166,171,63,-1,167,64,62,-1,62,172,167,-1,66,90,173,-1,173,170,66,-1,177,178,182,-1,182,186,177,-1,178,179,183,-1,183,182,178,-1,179,432,433,-1,433,183,179,-1,181,185,184,-1,184,180,181,-1,177,186,185,-1,185,181,177,-1,187,191,186,-1,186,182,187,-1,188,187,182,-1,182,183,188,-1,189,442,443,-1,443,184,189,-1,189,184,185,-1,185,190,189,-1,190,185,186,-1,186,191,190,-1,193,192,191,-1,191,187,193,-1,194,193,187,-1,187,188,194,-1,190,196,195,-1,195,189,190,-1,191,192,196,-1,196,190,191,-1,180,184,443,-1,443,198,180,-1,197,188,183,-1,183,433,197,-1,194,188,197,-1,197,450,194,-1,189,195,451,-1,451,442,189,-1,200,199,192,-1,192,193,200,-1,203,200,193,-1,193,194,203,-1,196,202,201,-1,201,195,196,-1,192,199,202,-1,202,196,192,-1,195,201,457,-1,457,451,195,-1,203,194,450,-1,450,458,203,-1,40,39,199,-1,199,200,40,-1,50,40,200,-1,200,203,50,-1,42,41,201,-1,201,202,42,-1,39,42,202,-1,202,199,39,-1,87,50,203,-1,203,458,87,-1,41,349,457,-1,457,201,41,-1,353,87,458,-1,206,238,239,-1,239,204,206,-1,209,206,204,-1,204,208,209,-1,206,209,210,-1,206,210,211,-1,206,211,212,-1,212,240,238,-1,238,206,212,-1,207,213,214,-1,207,214,215,-1,207,215,216,-1,217,205,207,-1,207,216,217,-1,219,209,208,-1,208,218,219,-1,220,210,209,-1,209,219,220,-1,221,211,210,-1,210,220,221,-1,222,212,211,-1,211,221,222,-1,222,241,240,-1,240,212,222,-1,224,214,213,-1,213,223,224,-1,225,215,214,-1,214,224,225,-1,226,216,215,-1,215,225,226,-1,227,217,216,-1,216,226,227,-1,229,219,218,-1,218,228,229,-1,230,220,219,-1,219,229,230,-1,231,221,220,-1,220,230,231,-1,232,222,221,-1,221,231,232,-1,232,242,241,-1,241,222,232,-1,234,224,223,-1,223,233,234,-1,235,225,224,-1,224,234,235,-1,236,226,225,-1,225,235,236,-1,237,227,226,-1,226,236,237,-1,207,205,239,-1,239,238,207,-1,213,207,238,-1,238,240,213,-1,223,213,240,-1,240,241,223,-1,233,223,241,-1,241,242,233,-1,243,246,245,-1,245,244,243,-1,248,247,250,-1,250,249,248,-1,252,251,254,-1,254,253,252,-1,255,257,244,-1,244,256,255,-1,259,258,261,-1,261,260,259,-1,245,262,264,-1,264,263,245,-1,265,252,253,-1,253,266,265,-1,243,244,268,-1,268,267,243,-1,269,262,245,-1,245,246,269,-1,270,273,272,-1,272,271,270,-1,274,259,276,-1,276,275,274,-1,258,259,274,-1,274,277,258,-1,261,258,279,-1,279,278,261,-1,280,279,282,-1,282,281,280,-1,282,277,284,-1,284,283,282,-1,285,274,275,-1,275,286,285,-1,277,274,285,-1,285,284,277,-1,258,277,282,-1,282,279,258,-1,287,290,289,-1,289,288,287,-1,291,294,293,-1,293,292,291,-1,295,298,297,-1,297,296,295,-1,299,302,301,-1,301,300,299,-1,285,270,284,-1,283,271,304,-1,304,303,283,-1,253,254,305,-1,305,250,253,-1,266,253,250,-1,250,247,266,-1,254,91,174,-1,174,305,254,-1,262,269,307,-1,307,306,262,-1,284,270,271,-1,271,283,284,-1,285,286,308,-1,308,270,285,-1,265,266,310,-1,310,309,265,-1,311,310,266,-1,266,247,311,-1,312,308,311,-1,311,313,312,-1,310,311,286,-1,286,275,310,-1,308,286,311,-1,314,175,89,-1,89,251,314,-1,268,314,251,-1,251,252,268,-1,262,306,316,-1,316,315,262,-1,267,268,252,-1,252,265,267,-1,316,318,317,-1,317,315,316,-1,254,251,89,-1,89,91,254,-1,320,319,322,-1,322,321,320,-1,323,326,325,-1,325,324,323,-1,327,330,329,-1,329,328,327,-1,331,334,333,-1,333,332,331,-1,322,327,328,-1,328,321,322,-1,319,320,334,-1,334,331,319,-1,330,323,324,-1,324,329,330,-1,335,264,262,-1,262,315,335,-1,256,244,245,-1,245,263,256,-1,287,248,249,-1,249,300,287,-1,291,272,273,-1,273,296,291,-1,247,248,313,-1,313,311,247,-1,271,272,336,-1,336,304,271,-1,308,312,273,-1,273,270,308,-1,337,249,250,-1,250,305,337,-1,312,313,288,-1,288,295,312,-1,337,60,92,-1,92,299,337,-1,246,243,339,-1,339,338,246,-1,269,246,338,-1,338,340,269,-1,307,269,340,-1,340,341,307,-1,276,307,341,-1,341,342,276,-1,343,342,345,-1,345,344,343,-1,343,344,347,-1,347,346,343,-1,267,265,346,-1,346,348,267,-1,267,348,339,-1,339,243,267,-1,255,349,350,-1,350,257,255,-1,305,174,60,-1,60,337,305,-1,317,351,353,-1,353,352,317,-1,303,281,282,-1,282,283,303,-1,332,333,165,-1,165,176,332,-1,320,321,355,-1,355,354,320,-1,324,325,357,-1,357,356,324,-1,328,329,359,-1,359,358,328,-1,333,334,361,-1,361,360,333,-1,321,328,358,-1,358,355,321,-1,334,320,354,-1,354,361,334,-1,329,324,356,-1,356,359,329,-1,360,90,165,-1,165,333,360,-1,257,350,175,-1,175,314,257,-1,268,244,257,-1,257,314,268,-1,290,287,300,-1,300,301,290,-1,294,291,296,-1,296,297,294,-1,295,288,289,-1,289,298,295,-1,299,92,173,-1,173,302,299,-1,248,287,288,-1,288,313,248,-1,272,291,292,-1,292,336,272,-1,312,295,296,-1,296,273,312,-1,337,299,300,-1,300,249,337,-1,260,261,316,-1,316,306,260,-1,261,278,318,-1,318,316,261,-1,351,317,318,-1,318,362,351,-1,315,317,352,-1,352,335,315,-1,362,318,278,-1,278,363,362,-1,363,278,279,-1,279,280,363,-1,276,309,310,-1,310,275,276,-1,276,260,306,-1,306,307,276,-1,260,276,259,-1,364,367,366,-1,366,365,364,-1,365,366,369,-1,369,368,365,-1,368,369,371,-1,371,370,368,-1,370,371,373,-1,373,372,370,-1,372,373,375,-1,375,374,372,-1,374,375,377,-1,377,376,374,-1,376,377,379,-1,379,378,376,-1,378,379,367,-1,367,364,378,-1,367,381,380,-1,380,366,367,-1,366,380,382,-1,382,369,366,-1,369,382,383,-1,383,371,369,-1,371,383,384,-1,384,373,371,-1,373,384,385,-1,385,375,373,-1,375,385,386,-1,386,377,375,-1,377,386,387,-1,387,379,377,-1,379,387,381,-1,381,367,379,-1,381,389,388,-1,388,380,381,-1,380,388,390,-1,390,382,380,-1,382,390,391,-1,391,383,382,-1,383,391,392,-1,392,384,383,-1,384,392,393,-1,393,385,384,-1,385,393,394,-1,394,386,385,-1,386,394,395,-1,395,387,386,-1,387,395,389,-1,389,381,387,-1,389,397,396,-1,396,388,389,-1,388,396,398,-1,398,390,388,-1,390,398,399,-1,399,391,390,-1,391,399,400,-1,400,392,391,-1,392,400,401,-1,401,393,392,-1,393,401,402,-1,402,394,393,-1,394,402,403,-1,403,395,394,-1,395,403,397,-1,397,389,395,-1,397,405,404,-1,404,396,397,-1,396,404,406,-1,406,398,396,-1,399,398,406,-1,406,407,399,-1,400,399,407,-1,407,408,400,-1,401,400,408,-1,408,409,401,-1,402,401,409,-1,409,410,402,-1,402,410,411,-1,411,403,402,-1,403,411,405,-1,405,397,403,-1,364,365,368,-1,368,370,372,-1,364,368,372,-1,372,374,376,-1,364,372,376,-1,378,364,376,-1,419,418,417,-1,417,416,415,-1,419,417,415,-1,415,414,413,-1,419,415,413,-1,412,419,413,-1,413,404,405,-1,405,412,413,-1,414,406,404,-1,404,413,414,-1,407,406,414,-1,414,415,407,-1,408,407,415,-1,415,416,408,-1,409,408,416,-1,416,417,409,-1,410,409,417,-1,417,418,410,-1,419,411,410,-1,410,418,419,-1,412,405,411,-1,411,419,412,-1,338,339,421,-1,421,420,338,-1,340,338,420,-1,420,422,340,-1,341,340,422,-1,422,423,341,-1,342,341,423,-1,423,345,342,-1,348,346,347,-1,347,424,348,-1,348,424,421,-1,421,339,348,-1,309,276,342,-1,342,343,309,-1,309,343,346,-1,346,265,309,-1,344,345,425,-1,347,344,425,-1,420,421,425,-1,422,420,425,-1,423,422,425,-1,345,423,425,-1,424,347,425,-1,421,424,425,-1,355,289,290,-1,290,354,355,-1,357,293,294,-1,294,356,357,-1,359,297,298,-1,298,358,359,-1,361,301,302,-1,302,360,361,-1,354,290,301,-1,301,361,354,-1,356,294,297,-1,297,359,356,-1,298,289,355,-1,355,358,298,-1,360,302,173,-1,173,90,360,-1,426,429,428,-1,428,427,426,-1,427,428,431,-1,431,430,427,-1,430,431,433,-1,433,432,430,-1,435,434,437,-1,437,436,435,-1,426,435,436,-1,436,429,426,-1,438,428,429,-1,429,439,438,-1,440,431,428,-1,428,438,440,-1,441,437,443,-1,443,442,441,-1,441,444,436,-1,436,437,441,-1,444,439,429,-1,429,436,444,-1,445,438,439,-1,439,446,445,-1,447,440,438,-1,438,445,447,-1,444,441,449,-1,449,448,444,-1,439,444,448,-1,448,446,439,-1,434,198,443,-1,443,437,434,-1,197,433,431,-1,431,440,197,-1,447,450,197,-1,197,440,447,-1,441,442,451,-1,451,449,441,-1,452,445,446,-1,446,453,452,-1,454,447,445,-1,445,452,454,-1,448,449,456,-1,456,455,448,-1,446,448,455,-1,455,453,446,-1,449,451,457,-1,457,456,449,-1,454,458,450,-1,450,447,454,-1,264,452,453,-1,453,263,264,-1,335,454,452,-1,452,264,335,-1,256,455,456,-1,456,255,256,-1,263,453,455,-1,455,256,263,-1,352,458,454,-1,454,335,352,-1,255,456,457,-1,457,349,255,-1,353,458,352,-1,460,459,462,-1,462,461,460,-1,464,463,459,-1,459,460,464,-1,460,465,464,-1,460,466,465,-1,460,467,466,-1,467,460,461,-1,461,468,467,-1,469,471,470,-1,469,472,471,-1,469,473,472,-1,474,473,469,-1,469,475,474,-1,477,476,463,-1,463,464,477,-1,478,477,464,-1,464,465,478,-1,479,478,465,-1,465,466,479,-1,480,479,466,-1,466,467,480,-1,480,467,468,-1,468,481,480,-1,483,482,470,-1,470,471,483,-1,484,483,471,-1,471,472,484,-1,485,484,472,-1,472,473,485,-1,486,485,473,-1,473,474,486,-1,488,487,476,-1,476,477,488,-1,489,488,477,-1,477,478,489,-1,490,489,478,-1,478,479,490,-1,491,490,479,-1,479,480,491,-1,491,480,481,-1,481,492,491,-1,494,493,482,-1,482,483,494,-1,495,494,483,-1,483,484,495,-1,496,495,484,-1,484,485,496,-1,497,496,485,-1,485,486,497,-1,469,461,462,-1,462,475,469,-1,470,468,461,-1,461,469,470,-1,482,481,468,-1,468,470,482,-1,493,492,481,-1,481,482,493,-1], Java.type("int[]"))).setCreaseAngle(1.57).setTexCoordIndex(Java.to([0,1,2,-1,2,3,0,-1,5,6,7,-1,7,4,5,-1,9,10,11,-1,11,8,9,-1,12,13,1,-1,1,14,12,-1,16,17,18,-1,18,15,16,-1,20,21,26,-1,26,19,20,-1,22,23,10,-1,10,9,22,-1,0,24,25,-1,25,1,0,-1,27,3,20,-1,20,19,27,-1,28,29,30,-1,30,31,28,-1,32,33,34,-1,34,16,32,-1,15,35,32,-1,32,16,15,-1,18,36,37,-1,37,15,18,-1,38,39,40,-1,40,37,38,-1,40,41,42,-1,42,35,40,-1,45,46,33,-1,33,32,45,-1,35,42,45,-1,45,32,35,-1,15,37,40,-1,40,35,15,-1,88,104,192,-1,192,189,88,-1,103,111,193,-1,193,191,103,-1,107,105,186,-1,186,187,107,-1,93,89,188,-1,188,190,93,-1,45,42,28,-1,41,56,57,-1,57,29,41,-1,10,7,53,-1,53,11,10,-1,23,4,7,-1,7,10,23,-1,11,53,54,-1,54,55,11,-1,19,58,62,-1,62,27,19,-1,42,41,29,-1,29,28,42,-1,45,28,63,-1,63,46,45,-1,22,59,60,-1,60,23,22,-1,61,4,23,-1,23,60,61,-1,67,68,61,-1,61,63,67,-1,60,33,46,-1,46,61,60,-1,63,61,46,-1,64,8,65,-1,65,66,64,-1,25,9,8,-1,8,64,25,-1,19,73,74,-1,74,58,19,-1,24,22,9,-1,9,25,24,-1,74,73,75,-1,75,76,74,-1,11,55,65,-1,65,8,11,-1,70,71,72,-1,72,69,70,-1,77,78,79,-1,79,80,77,-1,85,87,90,-1,90,91,85,-1,81,82,83,-1,83,84,81,-1,72,71,87,-1,87,85,72,-1,69,81,84,-1,84,70,69,-1,91,90,78,-1,78,77,91,-1,99,73,19,-1,19,26,99,-1,13,86,2,-1,2,1,13,-1,88,89,6,-1,6,5,88,-1,103,105,31,-1,31,30,103,-1,4,61,68,-1,68,5,4,-1,29,57,106,-1,106,30,29,-1,63,28,31,-1,31,67,63,-1,92,53,7,-1,7,6,92,-1,67,107,104,-1,104,68,67,-1,92,93,94,-1,94,95,92,-1,3,171,170,-1,170,0,3,-1,27,172,171,-1,171,3,27,-1,62,173,172,-1,172,27,62,-1,34,174,173,-1,173,62,34,-1,177,185,182,-1,182,174,177,-1,177,175,183,-1,183,185,177,-1,24,176,175,-1,175,22,24,-1,24,0,170,-1,170,176,24,-1,12,14,98,-1,98,97,12,-1,53,92,95,-1,95,54,53,-1,75,109,110,-1,110,108,75,-1,56,41,40,-1,40,39,56,-1,82,100,101,-1,101,83,82,-1,70,44,43,-1,43,71,70,-1,78,48,47,-1,47,79,78,-1,87,52,51,-1,51,90,87,-1,83,50,49,-1,49,84,83,-1,71,43,52,-1,52,87,71,-1,84,49,44,-1,44,70,84,-1,90,51,48,-1,48,78,90,-1,50,83,101,-1,101,102,50,-1,14,64,66,-1,66,98,14,-1,25,64,14,-1,14,1,25,-1,189,188,89,-1,89,88,189,-1,191,186,105,-1,105,103,191,-1,107,187,192,-1,192,104,107,-1,93,190,194,-1,194,94,93,-1,5,68,104,-1,104,88,5,-1,30,106,111,-1,111,103,30,-1,67,31,105,-1,105,107,67,-1,92,6,89,-1,89,93,92,-1,17,58,74,-1,74,18,17,-1,18,74,76,-1,76,36,18,-1,108,112,76,-1,76,75,108,-1,73,99,109,-1,109,75,73,-1,112,113,36,-1,36,76,112,-1,113,38,37,-1,37,36,113,-1,34,33,60,-1,60,59,34,-1,34,62,58,-1,58,17,34,-1,17,16,34,-1,114,115,116,-1,116,117,114,-1,115,118,119,-1,119,116,115,-1,118,120,121,-1,121,119,118,-1,120,122,123,-1,123,121,120,-1,122,124,125,-1,125,123,122,-1,124,126,127,-1,127,125,124,-1,126,128,129,-1,129,127,126,-1,128,114,117,-1,117,129,128,-1,117,116,130,-1,130,131,117,-1,116,119,132,-1,132,130,116,-1,119,121,133,-1,133,132,119,-1,121,123,134,-1,134,133,121,-1,123,125,135,-1,135,134,123,-1,125,127,136,-1,136,135,125,-1,127,129,137,-1,137,136,127,-1,129,117,131,-1,131,137,129,-1,131,130,138,-1,138,139,131,-1,130,132,140,-1,140,138,130,-1,132,133,141,-1,141,140,132,-1,133,134,142,-1,142,141,133,-1,134,135,143,-1,143,142,134,-1,135,136,144,-1,144,143,135,-1,136,137,145,-1,145,144,136,-1,137,131,139,-1,139,145,137,-1,139,138,146,-1,146,147,139,-1,138,140,148,-1,148,146,138,-1,140,141,149,-1,149,148,140,-1,141,142,150,-1,150,149,141,-1,142,143,151,-1,151,150,142,-1,143,144,152,-1,152,151,143,-1,144,145,153,-1,153,152,144,-1,145,139,147,-1,147,153,145,-1,147,146,154,-1,154,155,147,-1,146,148,156,-1,156,154,146,-1,149,157,156,-1,156,148,149,-1,150,158,157,-1,157,149,150,-1,151,159,158,-1,158,150,151,-1,152,160,159,-1,159,151,152,-1,152,153,161,-1,161,160,152,-1,153,147,155,-1,155,161,153,-1,126,124,122,-1,122,120,118,-1,118,115,114,-1,122,118,114,-1,126,122,114,-1,128,126,114,-1,163,164,165,-1,165,166,167,-1,167,168,169,-1,165,167,169,-1,163,165,169,-1,162,163,169,-1,163,162,155,-1,155,154,163,-1,164,163,154,-1,154,156,164,-1,157,165,164,-1,164,156,157,-1,158,166,165,-1,165,157,158,-1,159,167,166,-1,166,158,159,-1,160,168,167,-1,167,159,160,-1,169,168,160,-1,160,161,169,-1,162,169,161,-1,161,155,162,-1,171,179,178,-1,178,170,171,-1,172,180,179,-1,179,171,172,-1,173,181,180,-1,180,172,173,-1,174,182,181,-1,181,173,174,-1,176,184,183,-1,183,175,176,-1,176,170,178,-1,178,184,176,-1,59,177,174,-1,174,34,59,-1,59,22,175,-1,175,177,59,-1,185,96,182,-1,183,96,185,-1,179,96,178,-1,180,96,179,-1,181,96,180,-1,182,96,181,-1,184,96,183,-1,178,96,184,-1,43,44,189,-1,189,192,43,-1,47,48,191,-1,191,193,47,-1,51,52,187,-1,187,186,51,-1,49,50,190,-1,190,188,49,-1,44,49,188,-1,188,189,44,-1,48,51,186,-1,186,191,48,-1,187,52,43,-1,43,192,187,-1,50,102,194,-1,194,190,50,-1,195,196,197,-1,197,198,195,-1,196,199,200,-1,200,197,196,-1,199,201,202,-1,202,200,199,-1,204,205,206,-1,206,203,204,-1,195,198,205,-1,205,204,195,-1,207,208,198,-1,198,197,207,-1,209,207,197,-1,197,200,209,-1,210,211,212,-1,212,206,210,-1,210,206,205,-1,205,213,210,-1,213,205,198,-1,198,208,213,-1,214,215,208,-1,208,207,214,-1,216,214,207,-1,207,209,216,-1,213,217,218,-1,218,210,213,-1,208,215,217,-1,217,213,208,-1,203,206,212,-1,212,219,203,-1,220,209,200,-1,200,202,220,-1,216,209,220,-1,220,221,216,-1,210,218,222,-1,222,211,210,-1,223,224,215,-1,215,214,223,-1,225,223,214,-1,214,216,225,-1,217,226,227,-1,227,218,217,-1,215,224,226,-1,226,217,215,-1,218,227,228,-1,228,222,218,-1,225,216,221,-1,221,229,225,-1,26,21,230,-1,230,231,26,-1,99,26,231,-1,231,232,99,-1,13,12,233,-1,233,234,13,-1,86,13,234,-1,234,235,86,-1,109,99,232,-1,232,236,109,-1,12,97,237,-1,237,233,12,-1,110,109,236,-1,240,272,273,-1,273,238,240,-1,243,240,238,-1,238,242,243,-1,240,243,244,-1,240,244,245,-1,240,245,246,-1,246,274,272,-1,272,240,246,-1,241,247,248,-1,241,248,249,-1,241,249,250,-1,251,239,241,-1,241,250,251,-1,253,243,242,-1,242,252,253,-1,254,244,243,-1,243,253,254,-1,255,245,244,-1,244,254,255,-1,256,246,245,-1,245,255,256,-1,256,275,274,-1,274,246,256,-1,258,248,247,-1,247,257,258,-1,259,249,248,-1,248,258,259,-1,260,250,249,-1,249,259,260,-1,261,251,250,-1,250,260,261,-1,263,253,252,-1,252,262,263,-1,264,254,253,-1,253,263,264,-1,265,255,254,-1,254,264,265,-1,266,256,255,-1,255,265,266,-1,266,276,275,-1,275,256,266,-1,268,258,257,-1,257,267,268,-1,269,259,258,-1,258,268,269,-1,270,260,259,-1,259,269,270,-1,271,261,260,-1,260,270,271,-1,241,239,273,-1,273,272,241,-1,247,241,272,-1,272,274,247,-1,257,247,274,-1,274,275,257,-1,267,257,275,-1,275,276,267,-1,277,280,279,-1,279,278,277,-1,282,281,284,-1,284,283,282,-1,286,285,288,-1,288,287,286,-1,289,291,278,-1,278,290,289,-1,293,292,295,-1,295,294,293,-1,297,296,299,-1,299,298,297,-1,300,286,287,-1,287,301,300,-1,277,278,303,-1,303,302,277,-1,304,296,297,-1,297,280,304,-1,305,308,307,-1,307,306,305,-1,309,293,311,-1,311,310,309,-1,292,293,309,-1,309,312,292,-1,295,292,314,-1,314,313,295,-1,315,314,317,-1,317,316,315,-1,317,312,319,-1,319,318,317,-1,320,309,310,-1,310,321,320,-1,312,309,320,-1,320,319,312,-1,292,312,317,-1,317,314,292,-1,322,325,324,-1,324,323,322,-1,326,329,328,-1,328,327,326,-1,330,333,332,-1,332,331,330,-1,334,337,336,-1,336,335,334,-1,320,305,319,-1,318,306,339,-1,339,338,318,-1,287,288,340,-1,340,284,287,-1,301,287,284,-1,284,281,301,-1,288,342,341,-1,341,340,288,-1,296,304,344,-1,344,343,296,-1,319,305,306,-1,306,318,319,-1,320,321,345,-1,345,305,320,-1,300,301,347,-1,347,346,300,-1,348,347,301,-1,301,281,348,-1,349,345,348,-1,348,350,349,-1,347,348,321,-1,321,310,347,-1,345,321,348,-1,351,353,352,-1,352,285,351,-1,303,351,285,-1,285,286,303,-1,296,343,355,-1,355,354,296,-1,302,303,286,-1,286,300,302,-1,355,357,356,-1,356,354,355,-1,288,285,352,-1,352,342,288,-1,359,358,361,-1,361,360,359,-1,362,365,364,-1,364,363,362,-1,366,369,368,-1,368,367,366,-1,370,373,372,-1,372,371,370,-1,361,366,367,-1,367,360,361,-1,358,359,373,-1,373,370,358,-1,369,362,363,-1,363,368,369,-1,374,299,296,-1,296,354,374,-1,290,278,279,-1,279,375,290,-1,322,282,283,-1,283,335,322,-1,326,307,308,-1,308,331,326,-1,281,282,350,-1,350,348,281,-1,306,307,376,-1,376,339,306,-1,345,349,308,-1,308,305,345,-1,377,283,284,-1,284,340,377,-1,349,350,323,-1,323,330,349,-1,377,379,378,-1,378,334,377,-1,280,277,381,-1,381,380,280,-1,304,280,380,-1,380,382,304,-1,344,304,382,-1,382,383,344,-1,311,344,383,-1,383,384,311,-1,385,384,387,-1,387,386,385,-1,385,386,389,-1,389,388,385,-1,302,300,388,-1,388,390,302,-1,302,390,381,-1,381,277,302,-1,289,391,392,-1,392,291,289,-1,340,341,379,-1,379,377,340,-1,356,393,395,-1,395,394,356,-1,338,316,317,-1,317,318,338,-1,371,372,397,-1,397,396,371,-1,359,360,399,-1,399,398,359,-1,363,364,401,-1,401,400,363,-1,367,368,403,-1,403,402,367,-1,372,373,405,-1,405,404,372,-1,360,367,402,-1,402,399,360,-1,373,359,398,-1,398,405,373,-1,368,363,400,-1,400,403,368,-1,404,406,397,-1,397,372,404,-1,291,392,353,-1,353,351,291,-1,303,278,291,-1,291,351,303,-1,325,322,335,-1,335,336,325,-1,329,326,331,-1,331,332,329,-1,330,323,324,-1,324,333,330,-1,334,378,407,-1,407,337,334,-1,282,322,323,-1,323,350,282,-1,307,326,327,-1,327,376,307,-1,349,330,331,-1,331,308,349,-1,377,334,335,-1,335,283,377,-1,294,295,355,-1,355,343,294,-1,295,313,357,-1,357,355,295,-1,393,356,357,-1,357,408,393,-1,354,356,394,-1,394,374,354,-1,408,357,313,-1,313,409,408,-1,409,313,314,-1,314,315,409,-1,311,346,347,-1,347,310,311,-1,311,294,343,-1,343,344,311,-1,294,311,293,-1,410,413,412,-1,412,411,410,-1,411,412,415,-1,415,414,411,-1,414,415,417,-1,417,416,414,-1,416,417,419,-1,419,418,416,-1,418,419,421,-1,421,420,418,-1,420,421,423,-1,423,422,420,-1,422,423,425,-1,425,424,422,-1,424,425,413,-1,413,410,424,-1,413,427,426,-1,426,412,413,-1,412,426,428,-1,428,415,412,-1,415,428,429,-1,429,417,415,-1,417,429,430,-1,430,419,417,-1,419,430,431,-1,431,421,419,-1,421,431,432,-1,432,423,421,-1,423,432,433,-1,433,425,423,-1,425,433,427,-1,427,413,425,-1,427,435,434,-1,434,426,427,-1,426,434,436,-1,436,428,426,-1,428,436,437,-1,437,429,428,-1,429,437,438,-1,438,430,429,-1,430,438,439,-1,439,431,430,-1,431,439,440,-1,440,432,431,-1,432,440,441,-1,441,433,432,-1,433,441,435,-1,435,427,433,-1,435,443,442,-1,442,434,435,-1,434,442,444,-1,444,436,434,-1,436,444,445,-1,445,437,436,-1,437,445,446,-1,446,438,437,-1,438,446,447,-1,447,439,438,-1,439,447,448,-1,448,440,439,-1,440,448,449,-1,449,441,440,-1,441,449,443,-1,443,435,441,-1,443,451,450,-1,450,442,443,-1,442,450,452,-1,452,444,442,-1,445,444,452,-1,452,453,445,-1,446,445,453,-1,453,454,446,-1,447,446,454,-1,454,455,447,-1,448,447,455,-1,455,456,448,-1,448,456,457,-1,457,449,448,-1,449,457,451,-1,451,443,449,-1,410,411,414,-1,414,416,418,-1,410,414,418,-1,418,420,422,-1,410,418,422,-1,424,410,422,-1,465,464,463,-1,463,462,461,-1,465,463,461,-1,461,460,459,-1,465,461,459,-1,458,465,459,-1,459,450,451,-1,451,458,459,-1,460,452,450,-1,450,459,460,-1,453,452,460,-1,460,461,453,-1,454,453,461,-1,461,462,454,-1,455,454,462,-1,462,463,455,-1,456,455,463,-1,463,464,456,-1,465,457,456,-1,456,464,465,-1,458,451,457,-1,457,465,458,-1,380,381,467,-1,467,466,380,-1,382,380,466,-1,466,468,382,-1,383,382,468,-1,468,469,383,-1,384,383,469,-1,469,387,384,-1,390,388,389,-1,389,470,390,-1,390,470,467,-1,467,381,390,-1,346,311,384,-1,384,385,346,-1,346,385,388,-1,388,300,346,-1,386,387,471,-1,389,386,471,-1,466,467,471,-1,468,466,471,-1,469,468,471,-1,387,469,471,-1,470,389,471,-1,467,470,471,-1,399,324,325,-1,325,398,399,-1,401,328,329,-1,329,400,401,-1,403,332,333,-1,333,402,403,-1,405,336,337,-1,337,404,405,-1,398,325,336,-1,336,405,398,-1,400,329,332,-1,332,403,400,-1,333,324,399,-1,399,402,333,-1,404,337,407,-1,407,406,404,-1,472,475,474,-1,474,473,472,-1,473,474,477,-1,477,476,473,-1,476,477,479,-1,479,478,476,-1,481,480,483,-1,483,482,481,-1,472,481,482,-1,482,475,472,-1,484,474,475,-1,475,485,484,-1,486,477,474,-1,474,484,486,-1,487,483,489,-1,489,488,487,-1,487,490,482,-1,482,483,487,-1,490,485,475,-1,475,482,490,-1,491,484,485,-1,485,492,491,-1,493,486,484,-1,484,491,493,-1,490,487,495,-1,495,494,490,-1,485,490,494,-1,494,492,485,-1,480,496,489,-1,489,483,480,-1,497,479,477,-1,477,486,497,-1,493,498,497,-1,497,486,493,-1,487,488,499,-1,499,495,487,-1,500,491,492,-1,492,501,500,-1,502,493,491,-1,491,500,502,-1,494,495,504,-1,504,503,494,-1,492,494,503,-1,503,501,492,-1,495,499,505,-1,505,504,495,-1,502,506,498,-1,498,493,502,-1,299,508,507,-1,507,298,299,-1,374,509,508,-1,508,299,374,-1,290,511,510,-1,510,289,290,-1,375,512,511,-1,511,290,375,-1,394,513,509,-1,509,374,394,-1,289,510,514,-1,514,391,289,-1,395,513,394,-1,516,515,518,-1,518,517,516,-1,520,519,515,-1,515,516,520,-1,516,521,520,-1,516,522,521,-1,516,523,522,-1,523,516,517,-1,517,524,523,-1,525,527,526,-1,525,528,527,-1,525,529,528,-1,530,529,525,-1,525,531,530,-1,533,532,519,-1,519,520,533,-1,534,533,520,-1,520,521,534,-1,535,534,521,-1,521,522,535,-1,536,535,522,-1,522,523,536,-1,536,523,524,-1,524,537,536,-1,539,538,526,-1,526,527,539,-1,540,539,527,-1,527,528,540,-1,541,540,528,-1,528,529,541,-1,542,541,529,-1,529,530,542,-1,544,543,532,-1,532,533,544,-1,545,544,533,-1,533,534,545,-1,546,545,534,-1,534,535,546,-1,547,546,535,-1,535,536,547,-1,547,536,537,-1,537,548,547,-1,550,549,538,-1,538,539,550,-1,551,550,539,-1,539,540,551,-1,552,551,540,-1,540,541,552,-1,553,552,541,-1,541,542,553,-1,525,517,518,-1,518,531,525,-1,526,524,517,-1,517,525,526,-1,538,537,524,-1,524,526,538,-1,549,548,537,-1,537,538,549,-1], Java.type("int[]")))
                        .setCoord(new Coordinate().setPoint(Java.to([doubleToFloat(4.277),doubleToFloat(7.826),doubleToFloat(-2.023),doubleToFloat(3.736),doubleToFloat(7.524),doubleToFloat(2.038),doubleToFloat(1.964),doubleToFloat(13.63),doubleToFloat(1.831),doubleToFloat(1.171),doubleToFloat(7.822),doubleToFloat(-3.721),doubleToFloat(3.003),doubleToFloat(13.86),doubleToFloat(1.74),doubleToFloat(3.119),doubleToFloat(7.829),doubleToFloat(-3.386),doubleToFloat(3.599),doubleToFloat(14.88),doubleToFloat(-2.272),doubleToFloat(3.454),doubleToFloat(15.35),doubleToFloat(-0.2906),doubleToFloat(1.141),doubleToFloat(7.594),doubleToFloat(3.509),doubleToFloat(1.702),doubleToFloat(9.869),doubleToFloat(3.989),doubleToFloat(3.104),doubleToFloat(8.5),doubleToFloat(3.517),doubleToFloat(3.557),doubleToFloat(10.99),doubleToFloat(3.415),doubleToFloat(1.717),doubleToFloat(10.91),doubleToFloat(3.759),doubleToFloat(0.5679),doubleToFloat(9.683),doubleToFloat(3.766),doubleToFloat(0.746),doubleToFloat(8.455),doubleToFloat(3.729),doubleToFloat(1.941),doubleToFloat(8.411),doubleToFloat(3.737),doubleToFloat(3.498),doubleToFloat(9.915),doubleToFloat(3.61),doubleToFloat(2.545),doubleToFloat(7.576),doubleToFloat(3.29),doubleToFloat(4.399),doubleToFloat(9.141),doubleToFloat(-2.001),doubleToFloat(1.21),doubleToFloat(9.103),doubleToFloat(-3.685),doubleToFloat(3.142),doubleToFloat(9.12),doubleToFloat(-3.277),doubleToFloat(4.551),doubleToFloat(9.164),doubleToFloat(-0.0527),doubleToFloat(4.433),doubleToFloat(7.914),doubleToFloat(0.067),doubleToFloat(4.91),doubleToFloat(10.83),doubleToFloat(-0.2461),doubleToFloat(4.394),doubleToFloat(9.468),doubleToFloat(2.207),doubleToFloat(4.656),doubleToFloat(11.16),doubleToFloat(1.887),doubleToFloat(4.131),doubleToFloat(8.379),doubleToFloat(2.353),doubleToFloat(1.446),doubleToFloat(12.67),doubleToFloat(-3.483),doubleToFloat(1.966),doubleToFloat(12.51),doubleToFloat(2.721),doubleToFloat(3.572),doubleToFloat(12.75),doubleToFloat(-2.924),doubleToFloat(3.321),doubleToFloat(12.71),doubleToFloat(2.487),doubleToFloat(4.848),doubleToFloat(12.68),doubleToFloat(-2.238),doubleToFloat(5.062),doubleToFloat(14.31),doubleToFloat(-1.872),doubleToFloat(5.078),doubleToFloat(14.93),doubleToFloat(-0.2367),doubleToFloat(4.838),doubleToFloat(14.02),doubleToFloat(1.338),doubleToFloat(4.688),doubleToFloat(12.64),doubleToFloat(1.776),doubleToFloat(4.71),doubleToFloat(11.15),doubleToFloat(-1.805),doubleToFloat(1.324),doubleToFloat(11.04),doubleToFloat(-3.639),doubleToFloat(3.37),doubleToFloat(11.05),doubleToFloat(-3.145),doubleToFloat(2.782),doubleToFloat(15.39),doubleToFloat(-0.3671),doubleToFloat(2.369),doubleToFloat(14.83),doubleToFloat(0.4814),doubleToFloat(1.361),doubleToFloat(15.42),doubleToFloat(-2.398),doubleToFloat(2.416),doubleToFloat(15.53),doubleToFloat(-1.622),doubleToFloat(4.941),doubleToFloat(-1.602),doubleToFloat(2.267),doubleToFloat(5.071),doubleToFloat(-1.626),doubleToFloat(-2.412),doubleToFloat(5.525),doubleToFloat(-1.601),doubleToFloat(-0.0724),doubleToFloat(1.747),doubleToFloat(-1.67),doubleToFloat(3.844),doubleToFloat(1.495),doubleToFloat(-1.716),doubleToFloat(-4.445),doubleToFloat(3.571),doubleToFloat(-1.635),doubleToFloat(-4.009),doubleToFloat(3.511),doubleToFloat(-1.64),doubleToFloat(3.452),doubleToFloat(1.568),doubleToFloat(14.39),doubleToFloat(1.006),doubleToFloat(4.692),doubleToFloat(4.579),doubleToFloat(-2.112),doubleToFloat(3.28),doubleToFloat(4.466),doubleToFloat(-3.45),doubleToFloat(1.411),doubleToFloat(4.307),doubleToFloat(3.841),doubleToFloat(2.952),doubleToFloat(4.401),doubleToFloat(3.501),doubleToFloat(4.794),doubleToFloat(4.548),doubleToFloat(0.0209),doubleToFloat(4.27),doubleToFloat(4.487),doubleToFloat(2.173),doubleToFloat(1.248),doubleToFloat(4.431),doubleToFloat(-3.754),doubleToFloat(0.6396),doubleToFloat(10.67),doubleToFloat(3.595),doubleToFloat(6.326),doubleToFloat(12.2),doubleToFloat(-0.2397),doubleToFloat(0),doubleToFloat(4.4),doubleToFloat(-3.86),doubleToFloat(5.503),doubleToFloat(-0.6837),doubleToFloat(-2.468),doubleToFloat(5.798),doubleToFloat(-0.6529),doubleToFloat(0.0268),doubleToFloat(1.765),doubleToFloat(-0.797),doubleToFloat(4.325),doubleToFloat(5.23),doubleToFloat(-0.7329),doubleToFloat(2.447),doubleToFloat(3.772),doubleToFloat(-0.7961),doubleToFloat(3.716),doubleToFloat(1.41),doubleToFloat(-0.8547),doubleToFloat(-4.579),doubleToFloat(3.841),doubleToFloat(-0.7156),doubleToFloat(-4.176),doubleToFloat(5.29),doubleToFloat(-1.205),doubleToFloat(-2.527),doubleToFloat(5.62),doubleToFloat(-1.161),doubleToFloat(-0.0088),doubleToFloat(1.811),doubleToFloat(-1.28),doubleToFloat(4.296),doubleToFloat(5.089),doubleToFloat(-1.222),doubleToFloat(2.429),doubleToFloat(3.695),doubleToFloat(-1.265),doubleToFloat(3.681),doubleToFloat(1.358),doubleToFloat(-1.259),doubleToFloat(-4.679),doubleToFloat(3.635),doubleToFloat(-1.162),doubleToFloat(-4.234),doubleToFloat(1.432),doubleToFloat(14.75),doubleToFloat(-2.914),doubleToFloat(4.99),doubleToFloat(2.825),doubleToFloat(-2.225),doubleToFloat(1.575),doubleToFloat(2.532),doubleToFloat(3.984),doubleToFloat(5.127),doubleToFloat(2.818),doubleToFloat(-0.0142),doubleToFloat(3.467),doubleToFloat(2.614),doubleToFloat(-3.616),doubleToFloat(3.311),doubleToFloat(2.661),doubleToFloat(3.635),doubleToFloat(4.619),doubleToFloat(2.754),doubleToFloat(2.275),doubleToFloat(1.337),doubleToFloat(2.561),doubleToFloat(-3.972),doubleToFloat(3.524),doubleToFloat(11.67),doubleToFloat(3.075),doubleToFloat(1.791),doubleToFloat(11.59),doubleToFloat(3.387),doubleToFloat(0.6798),doubleToFloat(12.27),doubleToFloat(2.667),doubleToFloat(0.6343),doubleToFloat(13.35),doubleToFloat(1.902),doubleToFloat(0.5623),doubleToFloat(13.97),doubleToFloat(1.446),doubleToFloat(0.6742),doubleToFloat(11.49),doubleToFloat(3.209),doubleToFloat(0),doubleToFloat(11.07),doubleToFloat(-3.736),doubleToFloat(0),doubleToFloat(-0.8819),doubleToFloat(-4.655),doubleToFloat(0),doubleToFloat(9.116),doubleToFloat(-3.69),doubleToFloat(0),doubleToFloat(2.569),doubleToFloat(-4.094),doubleToFloat(2.909),doubleToFloat(15.27),doubleToFloat(-0.277),doubleToFloat(2.873),doubleToFloat(15.35),doubleToFloat(-0.2816),doubleToFloat(2.788),doubleToFloat(15.39),doubleToFloat(-0.295),doubleToFloat(2.703),doubleToFloat(15.35),doubleToFloat(-0.3093),doubleToFloat(2.668),doubleToFloat(15.27),doubleToFloat(-0.3162),doubleToFloat(2.703),doubleToFloat(15.18),doubleToFloat(-0.3117),doubleToFloat(2.788),doubleToFloat(15.14),doubleToFloat(-0.2983),doubleToFloat(2.873),doubleToFloat(15.18),doubleToFloat(-0.284),doubleToFloat(2.94),doubleToFloat(14.98),doubleToFloat(0.5179),doubleToFloat(2.907),doubleToFloat(15.06),doubleToFloat(0.5455),doubleToFloat(2.824),doubleToFloat(15.11),doubleToFloat(0.5456),doubleToFloat(2.738),doubleToFloat(15.08),doubleToFloat(0.5182),doubleToFloat(2.701),doubleToFloat(15),doubleToFloat(0.4793),doubleToFloat(2.733),doubleToFloat(14.92),doubleToFloat(0.4517),doubleToFloat(2.817),doubleToFloat(14.88),doubleToFloat(0.4516),doubleToFloat(2.902),doubleToFloat(14.9),doubleToFloat(0.4791),doubleToFloat(2.765),doubleToFloat(14.26),doubleToFloat(1.497),doubleToFloat(2.735),doubleToFloat(14.34),doubleToFloat(1.544),doubleToFloat(2.653),doubleToFloat(14.38),doubleToFloat(1.553),doubleToFloat(2.567),doubleToFloat(14.37),doubleToFloat(1.518),doubleToFloat(2.528),doubleToFloat(14.3),doubleToFloat(1.459),doubleToFloat(2.558),doubleToFloat(14.22),doubleToFloat(1.412),doubleToFloat(2.64),doubleToFloat(14.18),doubleToFloat(1.404),doubleToFloat(2.726),doubleToFloat(14.19),doubleToFloat(1.439),doubleToFloat(2.48),doubleToFloat(13.32),doubleToFloat(2.286),doubleToFloat(2.451),doubleToFloat(13.38),doubleToFloat(2.363),doubleToFloat(2.372),doubleToFloat(13.43),doubleToFloat(2.384),doubleToFloat(2.29),doubleToFloat(13.44),doubleToFloat(2.337),doubleToFloat(2.253),doubleToFloat(13.4),doubleToFloat(2.25),doubleToFloat(2.282),doubleToFloat(13.34),doubleToFloat(2.173),doubleToFloat(2.361),doubleToFloat(13.29),doubleToFloat(2.151),doubleToFloat(2.443),doubleToFloat(13.28),doubleToFloat(2.198),doubleToFloat(2.085),doubleToFloat(12.43),doubleToFloat(3.076),doubleToFloat(2.044),doubleToFloat(12.49),doubleToFloat(3.151),doubleToFloat(1.958),doubleToFloat(12.51),doubleToFloat(2.932),doubleToFloat(1.876),doubleToFloat(12.51),doubleToFloat(3.123),doubleToFloat(1.847),doubleToFloat(12.47),doubleToFloat(3.037),doubleToFloat(1.887),doubleToFloat(12.41),doubleToFloat(2.962),doubleToFloat(1.974),doubleToFloat(12.38),doubleToFloat(2.942),doubleToFloat(2.056),doubleToFloat(12.38),doubleToFloat(2.989),doubleToFloat(2.092),doubleToFloat(9.948),doubleToFloat(3.978),doubleToFloat(2.038),doubleToFloat(9.973),doubleToFloat(4.066),doubleToFloat(1.946),doubleToFloat(9.975),doubleToFloat(4.092),doubleToFloat(1.869),doubleToFloat(9.954),doubleToFloat(4.039),doubleToFloat(1.853),doubleToFloat(9.922),doubleToFloat(3.938),doubleToFloat(1.907),doubleToFloat(9.897),doubleToFloat(3.85),doubleToFloat(1.999),doubleToFloat(9.895),doubleToFloat(3.824),doubleToFloat(2.075),doubleToFloat(9.916),doubleToFloat(3.877),doubleToFloat(1.886),doubleToFloat(11.36),doubleToFloat(3.79),doubleToFloat(1.943),doubleToFloat(11.33),doubleToFloat(3.71),doubleToFloat(1.794),doubleToFloat(11.36),doubleToFloat(3.812),doubleToFloat(1.72),doubleToFloat(11.33),doubleToFloat(3.763),doubleToFloat(1.708),doubleToFloat(11.28),doubleToFloat(3.671),doubleToFloat(1.766),doubleToFloat(11.25),doubleToFloat(3.591),doubleToFloat(1.858),doubleToFloat(11.25),doubleToFloat(3.569),doubleToFloat(1.932),doubleToFloat(11.28),doubleToFloat(3.618),doubleToFloat(6.608),doubleToFloat(13.65),doubleToFloat(-1.345),doubleToFloat(7.294),doubleToFloat(14.2),doubleToFloat(-0.2222),doubleToFloat(6.573),doubleToFloat(13.64),doubleToFloat(1.031),doubleToFloat(5.797),doubleToFloat(12.79),doubleToFloat(1.58),doubleToFloat(5.349),doubleToFloat(11.61),doubleToFloat(1.181),doubleToFloat(5.293),doubleToFloat(11.61),doubleToFloat(-1.62),doubleToFloat(5.827),doubleToFloat(12.78),doubleToFloat(-1.917),doubleToFloat(5.261),doubleToFloat(11.17),doubleToFloat(-0.2445),doubleToFloat(6.66),doubleToFloat(12.96),doubleToFloat(-1.238),doubleToFloat(7.349),doubleToFloat(13.27),doubleToFloat(-0.2452),doubleToFloat(6.54),doubleToFloat(12.99),doubleToFloat(0.9578),doubleToFloat(6.044),doubleToFloat(12.43),doubleToFloat(0.9867),doubleToFloat(5.531),doubleToFloat(11.59),doubleToFloat(0.8431),doubleToFloat(5.545),doubleToFloat(11.56),doubleToFloat(-1.188),doubleToFloat(6.06),doubleToFloat(12.43),doubleToFloat(-1.497),doubleToFloat(5.429),doubleToFloat(11.24),doubleToFloat(-0.258),doubleToFloat(0),doubleToFloat(-1.249),doubleToFloat(-4.745),doubleToFloat(3.634),doubleToFloat(0.3583),doubleToFloat(3.78),doubleToFloat(4.989),doubleToFloat(0.4341),doubleToFloat(2.41),doubleToFloat(3.702),doubleToFloat(0.3726),doubleToFloat(-3.896),doubleToFloat(5.36),doubleToFloat(0.4945),doubleToFloat(-2.37),doubleToFloat(1.392),doubleToFloat(0.2768),doubleToFloat(-4.311),doubleToFloat(1.692),doubleToFloat(0.2913),doubleToFloat(4.193),doubleToFloat(5.556),doubleToFloat(0.5063),doubleToFloat(0.0063),doubleToFloat(0),doubleToFloat(0.2782),doubleToFloat(-4.386),doubleToFloat(0),doubleToFloat(7.79),doubleToFloat(-3.74),doubleToFloat(0),doubleToFloat(12.62),doubleToFloat(-3.652),doubleToFloat(0),doubleToFloat(-1.775),doubleToFloat(-4.491),doubleToFloat(1.301),doubleToFloat(18.16),doubleToFloat(-0.4263),doubleToFloat(1.268),doubleToFloat(18.03),doubleToFloat(0.209),doubleToFloat(0.9337),doubleToFloat(17.93),doubleToFloat(0.7814),doubleToFloat(0.5284),doubleToFloat(18.32),doubleToFloat(-1.291),doubleToFloat(1.048),doubleToFloat(18.26),doubleToFloat(-0.9761),doubleToFloat(1.481),doubleToFloat(17.31),doubleToFloat(0.2671),doubleToFloat(1.124),doubleToFloat(17.1),doubleToFloat(0.9138),doubleToFloat(0.6391),doubleToFloat(17.6),doubleToFloat(-1.541),doubleToFloat(1.157),doubleToFloat(17.55),doubleToFloat(-1.146),doubleToFloat(1.576),doubleToFloat(17.46),doubleToFloat(-0.5341),doubleToFloat(1.382),doubleToFloat(16.52),doubleToFloat(0.0833),doubleToFloat(1.005),doubleToFloat(16.35),doubleToFloat(0.6672),doubleToFloat(0.6304),doubleToFloat(16.7),doubleToFloat(-1.556),doubleToFloat(1.094),doubleToFloat(16.69),doubleToFloat(-1.214),doubleToFloat(1.585),doubleToFloat(16.64),doubleToFloat(-0.5766),doubleToFloat(2.023),doubleToFloat(15.71),doubleToFloat(-0.6784),doubleToFloat(1.64),doubleToFloat(15.45),doubleToFloat(0.0824),doubleToFloat(0.9391),doubleToFloat(15.3),doubleToFloat(0.736),doubleToFloat(0.7964),doubleToFloat(15.88),doubleToFloat(-1.825),doubleToFloat(1.34),doubleToFloat(15.81),doubleToFloat(-1.364),doubleToFloat(0),doubleToFloat(16.2),doubleToFloat(1.074),doubleToFloat(0),doubleToFloat(18.35),doubleToFloat(-1.421),doubleToFloat(3.047),doubleToFloat(15.22),doubleToFloat(-0.4634),doubleToFloat(2.537),doubleToFloat(14.57),doubleToFloat(0.521),doubleToFloat(1.217),doubleToFloat(14.89),doubleToFloat(-2.474),doubleToFloat(2.259),doubleToFloat(14.71),doubleToFloat(-1.829),doubleToFloat(1.465),doubleToFloat(13.74),doubleToFloat(1.144),doubleToFloat(2.849),doubleToFloat(3.065),doubleToFloat(4.415),doubleToFloat(4.155),doubleToFloat(3.106),doubleToFloat(3.721),doubleToFloat(3.016),doubleToFloat(1.332),doubleToFloat(4.622),doubleToFloat(4.321),doubleToFloat(1.372),doubleToFloat(3.928),doubleToFloat(2.377),doubleToFloat(3.025),doubleToFloat(4.447),doubleToFloat(2.543),doubleToFloat(1.292),doubleToFloat(4.654),doubleToFloat(2.625),doubleToFloat(0.9648),doubleToFloat(4.666),doubleToFloat(2.789),doubleToFloat(0.7287),doubleToFloat(4.62),doubleToFloat(2.989),doubleToFloat(0.6466),doubleToFloat(4.529),doubleToFloat(4.294),doubleToFloat(0.6874),doubleToFloat(3.835),doubleToFloat(4.477),doubleToFloat(0.7814),doubleToFloat(3.722),doubleToFloat(4.595),doubleToFloat(1.026),doubleToFloat(3.619),doubleToFloat(4.614),doubleToFloat(1.356),doubleToFloat(3.553),doubleToFloat(4.448),doubleToFloat(3.09),doubleToFloat(3.346),doubleToFloat(1.85),doubleToFloat(2.94),doubleToFloat(4.128),doubleToFloat(2.016),doubleToFloat(1.207),doubleToFloat(4.335),doubleToFloat(2.16),doubleToFloat(0.6404),doubleToFloat(4.356),doubleToFloat(2.443),doubleToFloat(0.2314),doubleToFloat(4.276),doubleToFloat(2.789),doubleToFloat(0.0893),doubleToFloat(4.118),doubleToFloat(4.095),doubleToFloat(0.1301),doubleToFloat(3.424),doubleToFloat(4.412),doubleToFloat(0.2929),doubleToFloat(3.229),doubleToFloat(4.615),doubleToFloat(0.717),doubleToFloat(3.051),doubleToFloat(4.649),doubleToFloat(1.289),doubleToFloat(2.935),doubleToFloat(4.483),doubleToFloat(3.022),doubleToFloat(2.729),doubleToFloat(1.412),doubleToFloat(2.833),doubleToFloat(3.544),doubleToFloat(1.578),doubleToFloat(1.099),doubleToFloat(3.75),doubleToFloat(1.744),doubleToFloat(0.4453),doubleToFloat(3.774),doubleToFloat(2.07),doubleToFloat(-0.0269),doubleToFloat(3.682),doubleToFloat(2.47),doubleToFloat(-0.191),doubleToFloat(3.5),doubleToFloat(3.776),doubleToFloat(-0.1502),doubleToFloat(2.806),doubleToFloat(4.142),doubleToFloat(0.0378),doubleToFloat(2.581),doubleToFloat(4.376),doubleToFloat(0.5275),doubleToFloat(2.374),doubleToFloat(4.416),doubleToFloat(1.188),doubleToFloat(2.242),doubleToFloat(4.25),doubleToFloat(2.921),doubleToFloat(2.035),doubleToFloat(3.844),doubleToFloat(1.353),doubleToFloat(4.267),doubleToFloat(3.678),doubleToFloat(3.086),doubleToFloat(4.06),doubleToFloat(3.85),doubleToFloat(0.5869),doubleToFloat(4.181),doubleToFloat(3.65),doubleToFloat(0.0296),doubleToFloat(3.771),doubleToFloat(3.331),doubleToFloat(-0.2507),doubleToFloat(3.152),doubleToFloat(-5.062),doubleToFloat(14.31),doubleToFloat(-1.872),doubleToFloat(-3.599),doubleToFloat(14.88),doubleToFloat(-2.272),doubleToFloat(-3.454),doubleToFloat(15.35),doubleToFloat(-0.2906),doubleToFloat(-5.078),doubleToFloat(14.93),doubleToFloat(-0.2367),doubleToFloat(-4.277),doubleToFloat(7.826),doubleToFloat(-2.023),doubleToFloat(-4.692),doubleToFloat(4.579),doubleToFloat(-2.112),doubleToFloat(-3.28),doubleToFloat(4.466),doubleToFloat(-3.45),doubleToFloat(-3.119),doubleToFloat(7.829),doubleToFloat(-3.386),doubleToFloat(-1.324),doubleToFloat(11.04),doubleToFloat(-3.639),doubleToFloat(-3.37),doubleToFloat(11.05),doubleToFloat(-3.145),doubleToFloat(-3.142),doubleToFloat(9.12),doubleToFloat(-3.277),doubleToFloat(-1.21),doubleToFloat(9.103),doubleToFloat(-3.685),doubleToFloat(-1.361),doubleToFloat(15.42),doubleToFloat(-2.398),doubleToFloat(-2.416),doubleToFloat(15.53),doubleToFloat(-1.622),doubleToFloat(-1.432),doubleToFloat(14.75),doubleToFloat(-2.914),doubleToFloat(-1.717),doubleToFloat(10.91),doubleToFloat(3.759),doubleToFloat(-3.557),doubleToFloat(10.99),doubleToFloat(3.415),doubleToFloat(-3.524),doubleToFloat(11.67),doubleToFloat(3.075),doubleToFloat(-1.791),doubleToFloat(11.59),doubleToFloat(3.387),doubleToFloat(-3.003),doubleToFloat(13.86),doubleToFloat(1.74),doubleToFloat(-2.782),doubleToFloat(15.39),doubleToFloat(-0.3671),doubleToFloat(-2.369),doubleToFloat(14.83),doubleToFloat(0.4814),doubleToFloat(-4.71),doubleToFloat(11.15),doubleToFloat(-1.805),doubleToFloat(-4.399),doubleToFloat(9.141),doubleToFloat(-2.001),doubleToFloat(-4.848),doubleToFloat(12.68),doubleToFloat(-2.238),doubleToFloat(-3.572),doubleToFloat(12.75),doubleToFloat(-2.924),doubleToFloat(-4.838),doubleToFloat(14.02),doubleToFloat(1.338),doubleToFloat(-2.545),doubleToFloat(7.576),doubleToFloat(3.29),doubleToFloat(-1.141),doubleToFloat(7.594),doubleToFloat(3.509),doubleToFloat(-1.411),doubleToFloat(4.307),doubleToFloat(3.841),doubleToFloat(-2.952),doubleToFloat(4.401),doubleToFloat(3.501),doubleToFloat(-3.498),doubleToFloat(9.915),doubleToFloat(3.61),doubleToFloat(-4.394),doubleToFloat(9.468),doubleToFloat(2.207),doubleToFloat(-4.656),doubleToFloat(11.16),doubleToFloat(1.887),doubleToFloat(-1.702),doubleToFloat(9.869),doubleToFloat(3.989),doubleToFloat(-0.6742),doubleToFloat(11.49),doubleToFloat(3.209),doubleToFloat(-0.6396),doubleToFloat(10.67),doubleToFloat(3.595),doubleToFloat(0),doubleToFloat(10.48),doubleToFloat(3.267),doubleToFloat(0),doubleToFloat(9.64),doubleToFloat(3.449),doubleToFloat(-0.5679),doubleToFloat(9.683),doubleToFloat(3.766),doubleToFloat(-0.746),doubleToFloat(8.455),doubleToFloat(3.729),doubleToFloat(-1.941),doubleToFloat(8.411),doubleToFloat(3.737),doubleToFloat(-3.104),doubleToFloat(8.5),doubleToFloat(3.517),doubleToFloat(-4.131),doubleToFloat(8.379),doubleToFloat(2.353),doubleToFloat(-4.99),doubleToFloat(2.825),doubleToFloat(-2.225),doubleToFloat(-5.127),doubleToFloat(2.818),doubleToFloat(-0.0142),doubleToFloat(-5.556),doubleToFloat(0.5063),doubleToFloat(0.0063),doubleToFloat(-5.36),doubleToFloat(0.4945),doubleToFloat(-2.37),doubleToFloat(-1.575),doubleToFloat(2.532),doubleToFloat(3.984),doubleToFloat(0),doubleToFloat(2.527),doubleToFloat(4.058),doubleToFloat(0),doubleToFloat(0.2984),doubleToFloat(4.281),doubleToFloat(-1.692),doubleToFloat(0.2913),doubleToFloat(4.193),doubleToFloat(-4.619),doubleToFloat(2.754),doubleToFloat(2.275),doubleToFloat(-3.311),doubleToFloat(2.661),doubleToFloat(3.635),doubleToFloat(-3.634),doubleToFloat(0.3583),doubleToFloat(3.78),doubleToFloat(-4.989),doubleToFloat(0.4341),doubleToFloat(2.41),doubleToFloat(-1.337),doubleToFloat(2.561),doubleToFloat(-3.972),doubleToFloat(-3.467),doubleToFloat(2.614),doubleToFloat(-3.616),doubleToFloat(-3.702),doubleToFloat(0.3726),doubleToFloat(-3.896),doubleToFloat(-1.392),doubleToFloat(0.2768),doubleToFloat(-4.311),doubleToFloat(0),doubleToFloat(8.539),doubleToFloat(3.632),doubleToFloat(0),doubleToFloat(7.599),doubleToFloat(3.532),doubleToFloat(-1.171),doubleToFloat(7.822),doubleToFloat(-3.721),doubleToFloat(-3.321),doubleToFloat(12.71),doubleToFloat(2.487),doubleToFloat(-4.688),doubleToFloat(12.64),doubleToFloat(1.776),doubleToFloat(-3.736),doubleToFloat(7.524),doubleToFloat(2.038),doubleToFloat(-4.91),doubleToFloat(10.83),doubleToFloat(-0.2461),doubleToFloat(-4.551),doubleToFloat(9.164),doubleToFloat(-0.0527),doubleToFloat(-4.433),doubleToFloat(7.914),doubleToFloat(0.067),doubleToFloat(-4.27),doubleToFloat(4.487),doubleToFloat(2.173),doubleToFloat(-4.794),doubleToFloat(4.548),doubleToFloat(0.0209),doubleToFloat(-1.446),doubleToFloat(12.67),doubleToFloat(-3.483),doubleToFloat(-1.964),doubleToFloat(13.63),doubleToFloat(1.831),doubleToFloat(-1.966),doubleToFloat(12.51),doubleToFloat(2.721),doubleToFloat(-0.6343),doubleToFloat(13.35),doubleToFloat(1.902),doubleToFloat(-0.6798),doubleToFloat(12.27),doubleToFloat(2.667),doubleToFloat(-5.071),doubleToFloat(-1.626),doubleToFloat(-2.412),doubleToFloat(-5.29),doubleToFloat(-1.205),doubleToFloat(-2.527),doubleToFloat(-5.62),doubleToFloat(-1.161),doubleToFloat(-0.0088),doubleToFloat(-5.525),doubleToFloat(-1.601),doubleToFloat(-0.0724),doubleToFloat(-1.747),doubleToFloat(-1.67),doubleToFloat(3.844),doubleToFloat(-1.811),doubleToFloat(-1.28),doubleToFloat(4.296),doubleToFloat(0),doubleToFloat(-1.258),doubleToFloat(4.416),doubleToFloat(0),doubleToFloat(-1.679),doubleToFloat(3.965),doubleToFloat(-4.941),doubleToFloat(-1.602),doubleToFloat(2.267),doubleToFloat(-5.089),doubleToFloat(-1.222),doubleToFloat(2.429),doubleToFloat(-3.695),doubleToFloat(-1.265),doubleToFloat(3.681),doubleToFloat(-3.511),doubleToFloat(-1.64),doubleToFloat(3.452),doubleToFloat(-3.571),doubleToFloat(-1.635),doubleToFloat(-4.009),doubleToFloat(-1.495),doubleToFloat(-1.716),doubleToFloat(-4.445),doubleToFloat(-1.358),doubleToFloat(-1.259),doubleToFloat(-4.679),doubleToFloat(-3.635),doubleToFloat(-1.162),doubleToFloat(-4.234),doubleToFloat(-1.568),doubleToFloat(14.39),doubleToFloat(1.006),doubleToFloat(0),doubleToFloat(4.302),doubleToFloat(3.879),doubleToFloat(-1.248),doubleToFloat(4.431),doubleToFloat(-3.754),doubleToFloat(-7.294),doubleToFloat(14.2),doubleToFloat(-0.2222),doubleToFloat(-6.608),doubleToFloat(13.65),doubleToFloat(-1.345),doubleToFloat(-6.573),doubleToFloat(13.64),doubleToFloat(1.031),doubleToFloat(-5.797),doubleToFloat(12.79),doubleToFloat(1.58),doubleToFloat(-5.349),doubleToFloat(11.61),doubleToFloat(1.181),doubleToFloat(-5.261),doubleToFloat(11.17),doubleToFloat(-0.2445),doubleToFloat(-5.429),doubleToFloat(11.24),doubleToFloat(-0.258),doubleToFloat(-5.531),doubleToFloat(11.59),doubleToFloat(0.8431),doubleToFloat(-5.293),doubleToFloat(11.61),doubleToFloat(-1.62),doubleToFloat(-5.545),doubleToFloat(11.56),doubleToFloat(-1.188),doubleToFloat(-5.827),doubleToFloat(12.78),doubleToFloat(-1.917),doubleToFloat(0),doubleToFloat(15.42),doubleToFloat(-2.558),doubleToFloat(0),doubleToFloat(14.71),doubleToFloat(-3.094),doubleToFloat(0),doubleToFloat(13.2),doubleToFloat(2.034),doubleToFloat(-0.5623),doubleToFloat(13.97),doubleToFloat(1.446),doubleToFloat(0),doubleToFloat(13.93),doubleToFloat(1.542),doubleToFloat(-5.503),doubleToFloat(-0.6837),doubleToFloat(-2.468),doubleToFloat(-5.798),doubleToFloat(-0.6529),doubleToFloat(0.0268),doubleToFloat(-1.765),doubleToFloat(-0.797),doubleToFloat(4.325),doubleToFloat(0),doubleToFloat(-0.7697),doubleToFloat(4.388),doubleToFloat(-5.23),doubleToFloat(-0.7329),doubleToFloat(2.447),doubleToFloat(-3.772),doubleToFloat(-0.7961),doubleToFloat(3.716),doubleToFloat(-1.41),doubleToFloat(-0.8547),doubleToFloat(-4.579),doubleToFloat(-3.841),doubleToFloat(-0.7156),doubleToFloat(-4.176),doubleToFloat(0),doubleToFloat(12.16),doubleToFloat(2.583),doubleToFloat(0),doubleToFloat(11.29),doubleToFloat(3.014),doubleToFloat(-2.909),doubleToFloat(15.27),doubleToFloat(-0.277),doubleToFloat(-2.873),doubleToFloat(15.35),doubleToFloat(-0.2816),doubleToFloat(-2.907),doubleToFloat(15.06),doubleToFloat(0.5455),doubleToFloat(-2.94),doubleToFloat(14.98),doubleToFloat(0.5179),doubleToFloat(-2.788),doubleToFloat(15.39),doubleToFloat(-0.295),doubleToFloat(-2.824),doubleToFloat(15.11),doubleToFloat(0.5456),doubleToFloat(-2.703),doubleToFloat(15.35),doubleToFloat(-0.3093),doubleToFloat(-2.738),doubleToFloat(15.08),doubleToFloat(0.5182),doubleToFloat(-2.668),doubleToFloat(15.27),doubleToFloat(-0.3162),doubleToFloat(-2.701),doubleToFloat(15),doubleToFloat(0.4793),doubleToFloat(-2.703),doubleToFloat(15.18),doubleToFloat(-0.3117),doubleToFloat(-2.733),doubleToFloat(14.92),doubleToFloat(0.4517),doubleToFloat(-2.788),doubleToFloat(15.14),doubleToFloat(-0.2983),doubleToFloat(-2.817),doubleToFloat(14.88),doubleToFloat(0.4516),doubleToFloat(-2.873),doubleToFloat(15.18),doubleToFloat(-0.284),doubleToFloat(-2.902),doubleToFloat(14.9),doubleToFloat(0.4791),doubleToFloat(-2.735),doubleToFloat(14.34),doubleToFloat(1.544),doubleToFloat(-2.765),doubleToFloat(14.26),doubleToFloat(1.497),doubleToFloat(-2.653),doubleToFloat(14.38),doubleToFloat(1.553),doubleToFloat(-2.567),doubleToFloat(14.37),doubleToFloat(1.518),doubleToFloat(-2.528),doubleToFloat(14.3),doubleToFloat(1.459),doubleToFloat(-2.558),doubleToFloat(14.22),doubleToFloat(1.412),doubleToFloat(-2.64),doubleToFloat(14.18),doubleToFloat(1.404),doubleToFloat(-2.726),doubleToFloat(14.19),doubleToFloat(1.439),doubleToFloat(-2.451),doubleToFloat(13.38),doubleToFloat(2.363),doubleToFloat(-2.48),doubleToFloat(13.32),doubleToFloat(2.286),doubleToFloat(-2.372),doubleToFloat(13.43),doubleToFloat(2.384),doubleToFloat(-2.29),doubleToFloat(13.44),doubleToFloat(2.337),doubleToFloat(-2.253),doubleToFloat(13.4),doubleToFloat(2.25),doubleToFloat(-2.282),doubleToFloat(13.34),doubleToFloat(2.173),doubleToFloat(-2.361),doubleToFloat(13.29),doubleToFloat(2.151),doubleToFloat(-2.443),doubleToFloat(13.28),doubleToFloat(2.198),doubleToFloat(-2.044),doubleToFloat(12.49),doubleToFloat(3.151),doubleToFloat(-2.085),doubleToFloat(12.43),doubleToFloat(3.076),doubleToFloat(-1.958),doubleToFloat(12.51),doubleToFloat(2.932),doubleToFloat(-1.876),doubleToFloat(12.51),doubleToFloat(3.123),doubleToFloat(-1.847),doubleToFloat(12.47),doubleToFloat(3.037),doubleToFloat(-1.887),doubleToFloat(12.41),doubleToFloat(2.962),doubleToFloat(-1.974),doubleToFloat(12.38),doubleToFloat(2.942),doubleToFloat(-2.056),doubleToFloat(12.38),doubleToFloat(2.989),doubleToFloat(-1.886),doubleToFloat(11.36),doubleToFloat(3.79),doubleToFloat(-1.943),doubleToFloat(11.33),doubleToFloat(3.71),doubleToFloat(-1.794),doubleToFloat(11.36),doubleToFloat(3.812),doubleToFloat(-1.72),doubleToFloat(11.33),doubleToFloat(3.763),doubleToFloat(-1.708),doubleToFloat(11.28),doubleToFloat(3.671),doubleToFloat(-1.766),doubleToFloat(11.25),doubleToFloat(3.591),doubleToFloat(-1.858),doubleToFloat(11.25),doubleToFloat(3.569),doubleToFloat(-1.932),doubleToFloat(11.28),doubleToFloat(3.618),doubleToFloat(-2.092),doubleToFloat(9.948),doubleToFloat(3.978),doubleToFloat(-2.038),doubleToFloat(9.973),doubleToFloat(4.066),doubleToFloat(-1.946),doubleToFloat(9.975),doubleToFloat(4.092),doubleToFloat(-1.869),doubleToFloat(9.954),doubleToFloat(4.039),doubleToFloat(-1.853),doubleToFloat(9.922),doubleToFloat(3.938),doubleToFloat(-1.907),doubleToFloat(9.897),doubleToFloat(3.85),doubleToFloat(-1.999),doubleToFloat(9.895),doubleToFloat(3.824),doubleToFloat(-2.075),doubleToFloat(9.916),doubleToFloat(3.877),doubleToFloat(-7.349),doubleToFloat(13.27),doubleToFloat(-0.2452),doubleToFloat(-6.66),doubleToFloat(12.96),doubleToFloat(-1.238),doubleToFloat(-6.54),doubleToFloat(12.99),doubleToFloat(0.9578),doubleToFloat(-6.044),doubleToFloat(12.43),doubleToFloat(0.9867),doubleToFloat(-6.06),doubleToFloat(12.43),doubleToFloat(-1.497),doubleToFloat(-6.326),doubleToFloat(12.2),doubleToFloat(-0.2397),doubleToFloat(-1.301),doubleToFloat(18.16),doubleToFloat(-0.4263),doubleToFloat(-1.268),doubleToFloat(18.03),doubleToFloat(0.209),doubleToFloat(-1.481),doubleToFloat(17.31),doubleToFloat(0.2671),doubleToFloat(-1.576),doubleToFloat(17.46),doubleToFloat(-0.5341),doubleToFloat(-0.9337),doubleToFloat(17.93),doubleToFloat(0.7814),doubleToFloat(-1.124),doubleToFloat(17.1),doubleToFloat(0.9138),doubleToFloat(0),doubleToFloat(17.83),doubleToFloat(1.309),doubleToFloat(0),doubleToFloat(16.9),doubleToFloat(1.422),doubleToFloat(-0.5284),doubleToFloat(18.32),doubleToFloat(-1.291),doubleToFloat(-1.048),doubleToFloat(18.26),doubleToFloat(-0.9761),doubleToFloat(-1.157),doubleToFloat(17.55),doubleToFloat(-1.146),doubleToFloat(-0.6391),doubleToFloat(17.6),doubleToFloat(-1.541),doubleToFloat(-1.382),doubleToFloat(16.52),doubleToFloat(0.0833),doubleToFloat(-1.585),doubleToFloat(16.64),doubleToFloat(-0.5766),doubleToFloat(-1.005),doubleToFloat(16.35),doubleToFloat(0.6672),doubleToFloat(-0.6304),doubleToFloat(16.7),doubleToFloat(-1.556),doubleToFloat(0),doubleToFloat(16.69),doubleToFloat(-1.677),doubleToFloat(0),doubleToFloat(17.6),doubleToFloat(-1.638),doubleToFloat(-1.094),doubleToFloat(16.69),doubleToFloat(-1.214),doubleToFloat(-1.64),doubleToFloat(15.45),doubleToFloat(0.0824),doubleToFloat(-2.023),doubleToFloat(15.71),doubleToFloat(-0.6784),doubleToFloat(-0.9391),doubleToFloat(15.3),doubleToFloat(0.736),doubleToFloat(-1.34),doubleToFloat(15.81),doubleToFloat(-1.364),doubleToFloat(-0.7964),doubleToFloat(15.88),doubleToFloat(-1.825),doubleToFloat(0),doubleToFloat(15.16),doubleToFloat(1.061),doubleToFloat(0),doubleToFloat(15.9),doubleToFloat(-1.97),doubleToFloat(-2.537),doubleToFloat(14.57),doubleToFloat(0.521),doubleToFloat(-3.047),doubleToFloat(15.22),doubleToFloat(-0.4634),doubleToFloat(-1.465),doubleToFloat(13.74),doubleToFloat(1.144),doubleToFloat(-2.259),doubleToFloat(14.71),doubleToFloat(-1.829),doubleToFloat(-1.217),doubleToFloat(14.89),doubleToFloat(-2.474),doubleToFloat(0),doubleToFloat(14.89),doubleToFloat(-2.767),doubleToFloat(0),doubleToFloat(13.59),doubleToFloat(1.455),doubleToFloat(-2.849),doubleToFloat(3.065),doubleToFloat(4.415),doubleToFloat(-3.016),doubleToFloat(1.332),doubleToFloat(4.622),doubleToFloat(-3.844),doubleToFloat(1.353),doubleToFloat(4.267),doubleToFloat(-3.678),doubleToFloat(3.086),doubleToFloat(4.06),doubleToFloat(-2.377),doubleToFloat(3.025),doubleToFloat(4.447),doubleToFloat(-2.543),doubleToFloat(1.292),doubleToFloat(4.654),doubleToFloat(-2.625),doubleToFloat(0.9648),doubleToFloat(4.666),doubleToFloat(-2.789),doubleToFloat(0.7287),doubleToFloat(4.62),doubleToFloat(-2.989),doubleToFloat(0.6466),doubleToFloat(4.529),doubleToFloat(-3.85),doubleToFloat(0.5869),doubleToFloat(4.181),doubleToFloat(-4.321),doubleToFloat(1.372),doubleToFloat(3.928),doubleToFloat(-4.294),doubleToFloat(0.6874),doubleToFloat(3.835),doubleToFloat(-4.477),doubleToFloat(0.7814),doubleToFloat(3.722),doubleToFloat(-4.595),doubleToFloat(1.026),doubleToFloat(3.619),doubleToFloat(-4.614),doubleToFloat(1.356),doubleToFloat(3.553),doubleToFloat(-4.448),doubleToFloat(3.09),doubleToFloat(3.346),doubleToFloat(-4.155),doubleToFloat(3.106),doubleToFloat(3.721),doubleToFloat(-1.85),doubleToFloat(2.94),doubleToFloat(4.128),doubleToFloat(-2.016),doubleToFloat(1.207),doubleToFloat(4.335),doubleToFloat(-2.16),doubleToFloat(0.6404),doubleToFloat(4.356),doubleToFloat(-2.443),doubleToFloat(0.2314),doubleToFloat(4.276),doubleToFloat(-2.789),doubleToFloat(0.0893),doubleToFloat(4.118),doubleToFloat(-3.65),doubleToFloat(0.0296),doubleToFloat(3.771),doubleToFloat(-4.095),doubleToFloat(0.1301),doubleToFloat(3.424),doubleToFloat(-4.412),doubleToFloat(0.2929),doubleToFloat(3.229),doubleToFloat(-4.615),doubleToFloat(0.717),doubleToFloat(3.051),doubleToFloat(-4.649),doubleToFloat(1.289),doubleToFloat(2.935),doubleToFloat(-4.483),doubleToFloat(3.022),doubleToFloat(2.729),doubleToFloat(-1.412),doubleToFloat(2.833),doubleToFloat(3.544),doubleToFloat(-1.578),doubleToFloat(1.099),doubleToFloat(3.75),doubleToFloat(-1.744),doubleToFloat(0.4453),doubleToFloat(3.774),doubleToFloat(-2.07),doubleToFloat(-0.0269),doubleToFloat(3.682),doubleToFloat(-2.47),doubleToFloat(-0.191),doubleToFloat(3.5),doubleToFloat(-3.331),doubleToFloat(-0.2507),doubleToFloat(3.152),doubleToFloat(-3.776),doubleToFloat(-0.1502),doubleToFloat(2.806),doubleToFloat(-4.142),doubleToFloat(0.0378),doubleToFloat(2.581),doubleToFloat(-4.376),doubleToFloat(0.5275),doubleToFloat(2.374),doubleToFloat(-4.416),doubleToFloat(1.188),doubleToFloat(2.242),doubleToFloat(-4.25),doubleToFloat(2.921),doubleToFloat(2.035)], Java.type("float[]"))))
                        .setTexCoord(new TextureCoordinate().setPoint(Java.to([doubleToFloat(0.6541),doubleToFloat(0.6778),doubleToFloat(0.6761),doubleToFloat(0.6928),doubleToFloat(0.6519),doubleToFloat(0.7145),doubleToFloat(0.6265),doubleToFloat(0.6918),doubleToFloat(0.6663),doubleToFloat(0.5748),doubleToFloat(0.6686),doubleToFloat(0.5197),doubleToFloat(0.7026),doubleToFloat(0.5159),doubleToFloat(0.7018),doubleToFloat(0.5763),doubleToFloat(0.7269),doubleToFloat(0.6359),doubleToFloat(0.6917),doubleToFloat(0.6301),doubleToFloat(0.697),doubleToFloat(0.598),doubleToFloat(0.7307),doubleToFloat(0.5999),doubleToFloat(0.7068),doubleToFloat(0.7157),doubleToFloat(0.6825),doubleToFloat(0.7174),doubleToFloat(0.7119),doubleToFloat(0.6999),doubleToFloat(0.534),doubleToFloat(0.6289),doubleToFloat(0.5649),doubleToFloat(0.6264),doubleToFloat(0.5679),doubleToFloat(0.6398),doubleToFloat(0.5389),doubleToFloat(0.6409),doubleToFloat(0.5691),doubleToFloat(0.6766),doubleToFloat(0.5939),doubleToFloat(0.7116),doubleToFloat(0.5845),doubleToFloat(0.7196),doubleToFloat(0.6535),doubleToFloat(0.6301),doubleToFloat(0.664),doubleToFloat(0.5969),doubleToFloat(0.6575),doubleToFloat(0.6535),doubleToFloat(0.6856),doubleToFloat(0.6576),doubleToFloat(0.5681),doubleToFloat(0.7046),doubleToFloat(0.5952),doubleToFloat(0.6672),doubleToFloat(0.552),doubleToFloat(0.5735),doubleToFloat(0.5263),doubleToFloat(0.5752),doubleToFloat(0.5259),doubleToFloat(0.5218),doubleToFloat(0.5472),doubleToFloat(0.5207),doubleToFloat(0.5627),doubleToFloat(0.6111),doubleToFloat(0.5889),doubleToFloat(0.6031),doubleToFloat(0.5886),doubleToFloat(0.6254),doubleToFloat(0.5337),doubleToFloat(0.6113),doubleToFloat(0.5198),doubleToFloat(0.6413),doubleToFloat(0.5171),doubleToFloat(0.6265),doubleToFloat(0.5048),doubleToFloat(0.6262),doubleToFloat(0.5042),doubleToFloat(0.6101),doubleToFloat(0.5149),doubleToFloat(0.6098),doubleToFloat(0.5188),doubleToFloat(0.5896),doubleToFloat(0.5389),doubleToFloat(0.5881),doubleToFloat(0.6182),doubleToFloat(0.3321),doubleToFloat(0.6657),doubleToFloat(0.3322),doubleToFloat(0.5584),doubleToFloat(0.5897),doubleToFloat(0.5828),doubleToFloat(0.589),doubleToFloat(0.4732),doubleToFloat(0.3353),doubleToFloat(0.503),doubleToFloat(0.3338),doubleToFloat(0.7047),doubleToFloat(0.3273),doubleToFloat(0.7432),doubleToFloat(0.3237),doubleToFloat(0.5422),doubleToFloat(0.332),doubleToFloat(0.5767),doubleToFloat(0.3319),doubleToFloat(0.7322),doubleToFloat(0.5792),doubleToFloat(0.7521),doubleToFloat(0.5797),doubleToFloat(0.7513),doubleToFloat(0.6003),doubleToFloat(0.506),doubleToFloat(0.591),doubleToFloat(0.5064),doubleToFloat(0.576),doubleToFloat(0.5681),doubleToFloat(0.6541),doubleToFloat(0.6253),doubleToFloat(0.6127),doubleToFloat(0.6291),doubleToFloat(0.5947),doubleToFloat(0.6271),doubleToFloat(0.5743),doubleToFloat(0.5871),doubleToFloat(0.6488),doubleToFloat(0.584),doubleToFloat(0.5712),doubleToFloat(0.7214),doubleToFloat(0.6626),doubleToFloat(0.7493),doubleToFloat(0.6376),doubleToFloat(0.7455),doubleToFloat(0.6662),doubleToFloat(0.5824),doubleToFloat(0.5229),doubleToFloat(0.6278),doubleToFloat(0.5246),doubleToFloat(0.6652),doubleToFloat(0.3118),doubleToFloat(0.6662),doubleToFloat(0.3244),doubleToFloat(0.6185),doubleToFloat(0.3222),doubleToFloat(0.6188),doubleToFloat(0.3105),doubleToFloat(0.5513),doubleToFloat(0.6777),doubleToFloat(0.5454),doubleToFloat(0.6552),doubleToFloat(0.528),doubleToFloat(0.6787),doubleToFloat(0.5233),doubleToFloat(0.657),doubleToFloat(0.5032),doubleToFloat(0.3134),doubleToFloat(0.501),doubleToFloat(0.3251),doubleToFloat(0.4727),doubleToFloat(0.326),doubleToFloat(0.473),doubleToFloat(0.3134),doubleToFloat(0.7033),doubleToFloat(0.3074),doubleToFloat(0.7386),doubleToFloat(0.3054),doubleToFloat(0.7425),doubleToFloat(0.316),doubleToFloat(0.7041),doubleToFloat(0.3189),doubleToFloat(0.5739),doubleToFloat(0.3121),doubleToFloat(0.6629),doubleToFloat(0.7161),doubleToFloat(0.5745),doubleToFloat(0.3232),doubleToFloat(0.6668),doubleToFloat(0.4523),doubleToFloat(0.7035),doubleToFloat(0.4461),doubleToFloat(0.5409),doubleToFloat(0.323),doubleToFloat(0.5412),doubleToFloat(0.3131),doubleToFloat(0.7346),doubleToFloat(0.5168),doubleToFloat(0.7423),doubleToFloat(0.4474),doubleToFloat(0.763),doubleToFloat(0.4518),doubleToFloat(0.7551),doubleToFloat(0.5222),doubleToFloat(0.6176),doubleToFloat(0.6563),doubleToFloat(0.7317),doubleToFloat(0.7159),doubleToFloat(0.7356),doubleToFloat(0.7045),doubleToFloat(0.5497),doubleToFloat(0.6974),doubleToFloat(0.7638),doubleToFloat(0.3032),doubleToFloat(0.7648),doubleToFloat(0.3142),doubleToFloat(0.7654),doubleToFloat(0.3221),doubleToFloat(0.5197),doubleToFloat(0.4562),doubleToFloat(0.6245),doubleToFloat(0.4572),doubleToFloat(0.5507),doubleToFloat(0.4545),doubleToFloat(0.5013),doubleToFloat(0.5241),doubleToFloat(0.583),doubleToFloat(0.4547),doubleToFloat(0.5165),doubleToFloat(0.678),doubleToFloat(0.5298),doubleToFloat(0.6914),doubleToFloat(0.5195),doubleToFloat(0.6906),doubleToFloat(0.4921),doubleToFloat(0.4585),doubleToFloat(0.5115),doubleToFloat(0.6588),doubleToFloat(0.5077),doubleToFloat(0.6418),doubleToFloat(0.4698),doubleToFloat(0.743),doubleToFloat(0.4689),doubleToFloat(0.7432),doubleToFloat(0.4698),doubleToFloat(0.722),doubleToFloat(0.4707),doubleToFloat(0.7227),doubleToFloat(0.4665),doubleToFloat(0.7435),doubleToFloat(0.4675),doubleToFloat(0.722),doubleToFloat(0.4642),doubleToFloat(0.7439),doubleToFloat(0.4651),doubleToFloat(0.7228),doubleToFloat(0.4632),doubleToFloat(0.7441),doubleToFloat(0.4641),doubleToFloat(0.7238),doubleToFloat(0.4642),doubleToFloat(0.7439),doubleToFloat(0.465),doubleToFloat(0.7245),doubleToFloat(0.4665),doubleToFloat(0.7435),doubleToFloat(0.4673),doubleToFloat(0.7245),doubleToFloat(0.4689),doubleToFloat(0.7432),doubleToFloat(0.4697),doubleToFloat(0.7238),doubleToFloat(0.465),doubleToFloat(0.6947),doubleToFloat(0.4659),doubleToFloat(0.6959),doubleToFloat(0.4628),doubleToFloat(0.6945),doubleToFloat(0.4604),doubleToFloat(0.6954),doubleToFloat(0.4593),doubleToFloat(0.697),doubleToFloat(0.4602),doubleToFloat(0.6982),doubleToFloat(0.4624),doubleToFloat(0.6984),doubleToFloat(0.4648),doubleToFloat(0.6975),doubleToFloat(0.4572),doubleToFloat(0.6722),doubleToFloat(0.458),doubleToFloat(0.6742),doubleToFloat(0.455),doubleToFloat(0.6716),doubleToFloat(0.4528),doubleToFloat(0.6729),doubleToFloat(0.4517),doubleToFloat(0.6752),doubleToFloat(0.4525),doubleToFloat(0.6773),doubleToFloat(0.4547),doubleToFloat(0.6779),doubleToFloat(0.457),doubleToFloat(0.6766),doubleToFloat(0.446),doubleToFloat(0.6505),doubleToFloat(0.4471),doubleToFloat(0.6525),doubleToFloat(0.4436),doubleToFloat(0.6564),doubleToFloat(0.4413),doubleToFloat(0.6512),doubleToFloat(0.4405),doubleToFloat(0.6536),doubleToFloat(0.4416),doubleToFloat(0.6556),doubleToFloat(0.444),doubleToFloat(0.6561),doubleToFloat(0.4463),doubleToFloat(0.6548),doubleToFloat(0.4416),doubleToFloat(0.6328),doubleToFloat(0.4432),doubleToFloat(0.6349),doubleToFloat(0.439),doubleToFloat(0.6322),doubleToFloat(0.437),doubleToFloat(0.6335),doubleToFloat(0.4367),doubleToFloat(0.6359),doubleToFloat(0.4383),doubleToFloat(0.6381),doubleToFloat(0.4408),doubleToFloat(0.6387),doubleToFloat(0.4428),doubleToFloat(0.6374),doubleToFloat(0.4473),doubleToFloat(0.6271),doubleToFloat(0.4458),doubleToFloat(0.6247),doubleToFloat(0.4432),doubleToFloat(0.6241),doubleToFloat(0.4411),doubleToFloat(0.6255),doubleToFloat(0.4407),doubleToFloat(0.6282),doubleToFloat(0.4422),doubleToFloat(0.6306),doubleToFloat(0.4447),doubleToFloat(0.6313),doubleToFloat(0.4468),doubleToFloat(0.6298),doubleToFloat(0.6375),doubleToFloat(0.671),doubleToFloat(0.6195),doubleToFloat(0.6801),doubleToFloat(0.5992),doubleToFloat(0.664),doubleToFloat(0.5927),doubleToFloat(0.6514),doubleToFloat(0.5921),doubleToFloat(0.6299),doubleToFloat(0.6486),doubleToFloat(0.6337),doubleToFloat(0.6522),doubleToFloat(0.6528),doubleToFloat(0.6231),doubleToFloat(0.6183),doubleToFloat(0.6276),doubleToFloat(0.6636),doubleToFloat(0.6186),doubleToFloat(0.6682),doubleToFloat(0.6084),doubleToFloat(0.6602),doubleToFloat(0.607),doubleToFloat(0.6548),doubleToFloat(0.6087),doubleToFloat(0.649),doubleToFloat(0.6274),doubleToFloat(0.6481),doubleToFloat(0.6287),doubleToFloat(0.6557),doubleToFloat(0.6194),doubleToFloat(0.6426),doubleToFloat(0.5465),doubleToFloat(0.3933),doubleToFloat(0.5799),doubleToFloat(0.3933),doubleToFloat(0.7041),doubleToFloat(0.3867),doubleToFloat(0.6663),doubleToFloat(0.3922),doubleToFloat(0.7427),doubleToFloat(0.3855),doubleToFloat(0.5113),doubleToFloat(0.395),doubleToFloat(0.6213),doubleToFloat(0.3946),doubleToFloat(0.4826),doubleToFloat(0.3969),doubleToFloat(0.7642),doubleToFloat(0.3869),doubleToFloat(0.0894),doubleToFloat(0.5347),doubleToFloat(0.0741),doubleToFloat(0.5347),doubleToFloat(0.0735),doubleToFloat(0.5092),doubleToFloat(0.0883),doubleToFloat(0.5109),doubleToFloat(0.0487),doubleToFloat(0.5282),doubleToFloat(0.0577),doubleToFloat(0.5054),doubleToFloat(0.0296),doubleToFloat(0.516),doubleToFloat(0.0446),doubleToFloat(0.5002),doubleToFloat(0.1273),doubleToFloat(0.533),doubleToFloat(0.104),doubleToFloat(0.536),doubleToFloat(0.1027),doubleToFloat(0.5117),doubleToFloat(0.1148),doubleToFloat(0.5127),doubleToFloat(0.0778),doubleToFloat(0.4925),doubleToFloat(0.0911),doubleToFloat(0.494),doubleToFloat(0.0618),doubleToFloat(0.4901),doubleToFloat(0.1152),doubleToFloat(0.5002),doubleToFloat(0.1256),doubleToFloat(0.5028),doubleToFloat(0.1268),doubleToFloat(0.5105),doubleToFloat(0.105),doubleToFloat(0.4966),doubleToFloat(0.0786),doubleToFloat(0.4744),doubleToFloat(0.0945),doubleToFloat(0.4791),doubleToFloat(0.0644),doubleToFloat(0.4726),doubleToFloat(0.1083),doubleToFloat(0.4805),doubleToFloat(0.1195),doubleToFloat(0.4848),doubleToFloat(0.1395),doubleToFloat(0.5292),doubleToFloat(0.0492),doubleToFloat(0.4884),doubleToFloat(0.0455),doubleToFloat(0.4743),doubleToFloat(0.1321),doubleToFloat(0.4908),doubleToFloat(0.079),doubleToFloat(0.4506),doubleToFloat(0.0954),doubleToFloat(0.4539),doubleToFloat(0.0615),doubleToFloat(0.4503),doubleToFloat(0.1154),doubleToFloat(0.4501),doubleToFloat(0.1348),doubleToFloat(0.4597),doubleToFloat(0.1514),doubleToFloat(0.473),doubleToFloat(0.0369),doubleToFloat(0.4546),doubleToFloat(0.5845),doubleToFloat(0.7196),doubleToFloat(0.5681),doubleToFloat(0.7046),doubleToFloat(0.5497),doubleToFloat(0.6974),doubleToFloat(0.7068),doubleToFloat(0.7157),doubleToFloat(0.6825),doubleToFloat(0.7174),doubleToFloat(0.6629),doubleToFloat(0.7161),doubleToFloat(0.5298),doubleToFloat(0.6914),doubleToFloat(0.7317),doubleToFloat(0.7159),doubleToFloat(0.1807),doubleToFloat(0.4425),doubleToFloat(0.2018),doubleToFloat(0.4805),doubleToFloat(0.2135),doubleToFloat(0.4243),doubleToFloat(0.2346),doubleToFloat(0.4623),doubleToFloat(0.1746),doubleToFloat(0.4313),doubleToFloat(0.2074),doubleToFloat(0.4131),doubleToFloat(0.2144),doubleToFloat(0.4112),doubleToFloat(0.2212),doubleToFloat(0.4127),doubleToFloat(0.226),doubleToFloat(0.4174),doubleToFloat(0.247),doubleToFloat(0.4554),doubleToFloat(0.2485),doubleToFloat(0.4619),doubleToFloat(0.2462),doubleToFloat(0.4685),doubleToFloat(0.2408),doubleToFloat(0.4734),doubleToFloat(0.208),doubleToFloat(0.4916),doubleToFloat(0.17),doubleToFloat(0.4232),doubleToFloat(0.2029),doubleToFloat(0.405),doubleToFloat(0.2151),doubleToFloat(0.4016),doubleToFloat(0.2269),doubleToFloat(0.4043),doubleToFloat(0.2351),doubleToFloat(0.4123),doubleToFloat(0.2562),doubleToFloat(0.4503),doubleToFloat(0.2586),doubleToFloat(0.4616),doubleToFloat(0.2546),doubleToFloat(0.473),doubleToFloat(0.2453),doubleToFloat(0.4816),doubleToFloat(0.2125),doubleToFloat(0.4998),doubleToFloat(0.1684),doubleToFloat(0.4202),doubleToFloat(0.2012),doubleToFloat(0.402),doubleToFloat(0.2153),doubleToFloat(0.3981),doubleToFloat(0.2289),doubleToFloat(0.4012),doubleToFloat(0.2384),doubleToFloat(0.4105),doubleToFloat(0.2595),doubleToFloat(0.4485),doubleToFloat(0.2623),doubleToFloat(0.4615),doubleToFloat(0.2577),doubleToFloat(0.4747),doubleToFloat(0.247),doubleToFloat(0.4846),doubleToFloat(0.2142),doubleToFloat(0.5027),doubleToFloat(0.2241),doubleToFloat(0.4433),doubleToFloat(0.1913),doubleToFloat(0.4615),doubleToFloat(0.2365),doubleToFloat(0.4364),doubleToFloat(0.2456),doubleToFloat(0.4313),doubleToFloat(0.249),doubleToFloat(0.4295),doubleToFloat(0.6541),doubleToFloat(0.6778),doubleToFloat(0.6761),doubleToFloat(0.6928),doubleToFloat(0.6519),doubleToFloat(0.7145),doubleToFloat(0.6265),doubleToFloat(0.6918),doubleToFloat(0.6663),doubleToFloat(0.5748),doubleToFloat(0.6686),doubleToFloat(0.5197),doubleToFloat(0.7026),doubleToFloat(0.5159),doubleToFloat(0.7018),doubleToFloat(0.5763),doubleToFloat(0.7269),doubleToFloat(0.6359),doubleToFloat(0.6917),doubleToFloat(0.6301),doubleToFloat(0.697),doubleToFloat(0.598),doubleToFloat(0.7307),doubleToFloat(0.5999),doubleToFloat(0.7068),doubleToFloat(0.7157),doubleToFloat(0.6825),doubleToFloat(0.7174),doubleToFloat(0.7119),doubleToFloat(0.6999),doubleToFloat(0.534),doubleToFloat(0.6289),doubleToFloat(0.5649),doubleToFloat(0.6264),doubleToFloat(0.5679),doubleToFloat(0.6398),doubleToFloat(0.5389),doubleToFloat(0.6409),doubleToFloat(0.5691),doubleToFloat(0.6766),doubleToFloat(0.5939),doubleToFloat(0.7116),doubleToFloat(0.5845),doubleToFloat(0.7196),doubleToFloat(0.5681),doubleToFloat(0.7046),doubleToFloat(0.6535),doubleToFloat(0.6301),doubleToFloat(0.664),doubleToFloat(0.5969),doubleToFloat(0.6575),doubleToFloat(0.6535),doubleToFloat(0.6856),doubleToFloat(0.6576),doubleToFloat(0.5952),doubleToFloat(0.6672),doubleToFloat(0.552),doubleToFloat(0.5735),doubleToFloat(0.5263),doubleToFloat(0.5752),doubleToFloat(0.5259),doubleToFloat(0.5218),doubleToFloat(0.5472),doubleToFloat(0.5207),doubleToFloat(0.5627),doubleToFloat(0.6111),doubleToFloat(0.5889),doubleToFloat(0.6031),doubleToFloat(0.5886),doubleToFloat(0.6254),doubleToFloat(0.5337),doubleToFloat(0.6113),doubleToFloat(0.5198),doubleToFloat(0.6413),doubleToFloat(0.5171),doubleToFloat(0.6265),doubleToFloat(0.5048),doubleToFloat(0.6262),doubleToFloat(0.5042),doubleToFloat(0.6101),doubleToFloat(0.5149),doubleToFloat(0.6098),doubleToFloat(0.5188),doubleToFloat(0.5896),doubleToFloat(0.5389),doubleToFloat(0.5881),doubleToFloat(0.5584),doubleToFloat(0.5897),doubleToFloat(0.5828),doubleToFloat(0.589),doubleToFloat(0.6668),doubleToFloat(0.4523),doubleToFloat(0.6245),doubleToFloat(0.4572),doubleToFloat(0.6213),doubleToFloat(0.3946),doubleToFloat(0.6663),doubleToFloat(0.3922),doubleToFloat(0.5197),doubleToFloat(0.4562),doubleToFloat(0.4921),doubleToFloat(0.4585),doubleToFloat(0.4826),doubleToFloat(0.3969),doubleToFloat(0.5113),doubleToFloat(0.395),doubleToFloat(0.583),doubleToFloat(0.4547),doubleToFloat(0.5507),doubleToFloat(0.4545),doubleToFloat(0.5465),doubleToFloat(0.3933),doubleToFloat(0.5799),doubleToFloat(0.3933),doubleToFloat(0.7423),doubleToFloat(0.4474),doubleToFloat(0.7035),doubleToFloat(0.4461),doubleToFloat(0.7041),doubleToFloat(0.3867),doubleToFloat(0.7427),doubleToFloat(0.3855),doubleToFloat(0.506),doubleToFloat(0.591),doubleToFloat(0.5064),doubleToFloat(0.576),doubleToFloat(0.7322),doubleToFloat(0.5792),doubleToFloat(0.7521),doubleToFloat(0.5797),doubleToFloat(0.7513),doubleToFloat(0.6003),doubleToFloat(0.5681),doubleToFloat(0.6541),doubleToFloat(0.5871),doubleToFloat(0.6488),doubleToFloat(0.584),doubleToFloat(0.5712),doubleToFloat(0.6253),doubleToFloat(0.6127),doubleToFloat(0.6291),doubleToFloat(0.5947),doubleToFloat(0.6271),doubleToFloat(0.5743),doubleToFloat(0.5824),doubleToFloat(0.5229),doubleToFloat(0.6278),doubleToFloat(0.5246),doubleToFloat(0.7214),doubleToFloat(0.6626),doubleToFloat(0.7493),doubleToFloat(0.6376),doubleToFloat(0.7455),doubleToFloat(0.6662),doubleToFloat(0.5513),doubleToFloat(0.6777),doubleToFloat(0.5454),doubleToFloat(0.6552),doubleToFloat(0.528),doubleToFloat(0.6787),doubleToFloat(0.5233),doubleToFloat(0.657),doubleToFloat(0.6652),doubleToFloat(0.3118),doubleToFloat(0.6662),doubleToFloat(0.3244),doubleToFloat(0.6185),doubleToFloat(0.3222),doubleToFloat(0.6188),doubleToFloat(0.3105),doubleToFloat(0.5032),doubleToFloat(0.3134),doubleToFloat(0.501),doubleToFloat(0.3251),doubleToFloat(0.4727),doubleToFloat(0.326),doubleToFloat(0.473),doubleToFloat(0.3134),doubleToFloat(0.5739),doubleToFloat(0.3121),doubleToFloat(0.5745),doubleToFloat(0.3232),doubleToFloat(0.5409),doubleToFloat(0.323),doubleToFloat(0.5412),doubleToFloat(0.3131),doubleToFloat(0.7033),doubleToFloat(0.3074),doubleToFloat(0.7386),doubleToFloat(0.3054),doubleToFloat(0.7425),doubleToFloat(0.316),doubleToFloat(0.7041),doubleToFloat(0.3189),doubleToFloat(0.5497),doubleToFloat(0.6974),doubleToFloat(0.6629),doubleToFloat(0.7161),doubleToFloat(0.5013),doubleToFloat(0.5241),doubleToFloat(0.7346),doubleToFloat(0.5168),doubleToFloat(0.763),doubleToFloat(0.4518),doubleToFloat(0.7551),doubleToFloat(0.5222),doubleToFloat(0.6195),doubleToFloat(0.6801),doubleToFloat(0.6375),doubleToFloat(0.671),doubleToFloat(0.5992),doubleToFloat(0.664),doubleToFloat(0.5927),doubleToFloat(0.6514),doubleToFloat(0.5921),doubleToFloat(0.6299),doubleToFloat(0.6231),doubleToFloat(0.6183),doubleToFloat(0.6194),doubleToFloat(0.6426),doubleToFloat(0.6087),doubleToFloat(0.649),doubleToFloat(0.6486),doubleToFloat(0.6337),doubleToFloat(0.6274),doubleToFloat(0.6481),doubleToFloat(0.6522),doubleToFloat(0.6528),doubleToFloat(0.7317),doubleToFloat(0.7159),doubleToFloat(0.7356),doubleToFloat(0.7045),doubleToFloat(0.5165),doubleToFloat(0.678),doubleToFloat(0.5298),doubleToFloat(0.6914),doubleToFloat(0.5195),doubleToFloat(0.6906),doubleToFloat(0.7638),doubleToFloat(0.3032),doubleToFloat(0.7648),doubleToFloat(0.3142),doubleToFloat(0.6657),doubleToFloat(0.3322),doubleToFloat(0.6182),doubleToFloat(0.3321),doubleToFloat(0.503),doubleToFloat(0.3338),doubleToFloat(0.4732),doubleToFloat(0.3353),doubleToFloat(0.5767),doubleToFloat(0.3319),doubleToFloat(0.5422),doubleToFloat(0.332),doubleToFloat(0.7432),doubleToFloat(0.3237),doubleToFloat(0.7047),doubleToFloat(0.3273),doubleToFloat(0.7654),doubleToFloat(0.3221),doubleToFloat(0.7642),doubleToFloat(0.3869),doubleToFloat(0.5115),doubleToFloat(0.6588),doubleToFloat(0.5077),doubleToFloat(0.6418),doubleToFloat(0.4698),doubleToFloat(0.743),doubleToFloat(0.4689),doubleToFloat(0.7432),doubleToFloat(0.4698),doubleToFloat(0.722),doubleToFloat(0.4707),doubleToFloat(0.7227),doubleToFloat(0.4665),doubleToFloat(0.7435),doubleToFloat(0.4675),doubleToFloat(0.722),doubleToFloat(0.4642),doubleToFloat(0.7439),doubleToFloat(0.4651),doubleToFloat(0.7228),doubleToFloat(0.4632),doubleToFloat(0.7441),doubleToFloat(0.4641),doubleToFloat(0.7238),doubleToFloat(0.4642),doubleToFloat(0.7439),doubleToFloat(0.465),doubleToFloat(0.7245),doubleToFloat(0.4665),doubleToFloat(0.7435),doubleToFloat(0.4673),doubleToFloat(0.7245),doubleToFloat(0.4689),doubleToFloat(0.7432),doubleToFloat(0.4697),doubleToFloat(0.7238),doubleToFloat(0.465),doubleToFloat(0.6947),doubleToFloat(0.4659),doubleToFloat(0.6959),doubleToFloat(0.4628),doubleToFloat(0.6945),doubleToFloat(0.4604),doubleToFloat(0.6954),doubleToFloat(0.4593),doubleToFloat(0.697),doubleToFloat(0.4602),doubleToFloat(0.6982),doubleToFloat(0.4624),doubleToFloat(0.6984),doubleToFloat(0.4648),doubleToFloat(0.6975),doubleToFloat(0.4572),doubleToFloat(0.6722),doubleToFloat(0.458),doubleToFloat(0.6742),doubleToFloat(0.455),doubleToFloat(0.6716),doubleToFloat(0.4528),doubleToFloat(0.6729),doubleToFloat(0.4517),doubleToFloat(0.6752),doubleToFloat(0.4525),doubleToFloat(0.6773),doubleToFloat(0.4547),doubleToFloat(0.6779),doubleToFloat(0.457),doubleToFloat(0.6766),doubleToFloat(0.446),doubleToFloat(0.6505),doubleToFloat(0.4471),doubleToFloat(0.6525),doubleToFloat(0.4436),doubleToFloat(0.6564),doubleToFloat(0.4413),doubleToFloat(0.6512),doubleToFloat(0.4405),doubleToFloat(0.6536),doubleToFloat(0.4416),doubleToFloat(0.6556),doubleToFloat(0.444),doubleToFloat(0.6561),doubleToFloat(0.4463),doubleToFloat(0.6548),doubleToFloat(0.4416),doubleToFloat(0.6328),doubleToFloat(0.4432),doubleToFloat(0.6349),doubleToFloat(0.439),doubleToFloat(0.6322),doubleToFloat(0.437),doubleToFloat(0.6335),doubleToFloat(0.4367),doubleToFloat(0.6359),doubleToFloat(0.4383),doubleToFloat(0.6381),doubleToFloat(0.4408),doubleToFloat(0.6387),doubleToFloat(0.4428),doubleToFloat(0.6374),doubleToFloat(0.4473),doubleToFloat(0.6271),doubleToFloat(0.4458),doubleToFloat(0.6247),doubleToFloat(0.4432),doubleToFloat(0.6241),doubleToFloat(0.4411),doubleToFloat(0.6255),doubleToFloat(0.4407),doubleToFloat(0.6282),doubleToFloat(0.4422),doubleToFloat(0.6306),doubleToFloat(0.4447),doubleToFloat(0.6313),doubleToFloat(0.4468),doubleToFloat(0.6298),doubleToFloat(0.6186),doubleToFloat(0.6682),doubleToFloat(0.6276),doubleToFloat(0.6636),doubleToFloat(0.6084),doubleToFloat(0.6602),doubleToFloat(0.607),doubleToFloat(0.6548),doubleToFloat(0.6287),doubleToFloat(0.6557),doubleToFloat(0.6176),doubleToFloat(0.6563),doubleToFloat(0.0894),doubleToFloat(0.5347),doubleToFloat(0.0741),doubleToFloat(0.5347),doubleToFloat(0.0735),doubleToFloat(0.5092),doubleToFloat(0.0883),doubleToFloat(0.5109),doubleToFloat(0.0487),doubleToFloat(0.5282),doubleToFloat(0.0577),doubleToFloat(0.5054),doubleToFloat(0.0296),doubleToFloat(0.516),doubleToFloat(0.0446),doubleToFloat(0.5002),doubleToFloat(0.1273),doubleToFloat(0.533),doubleToFloat(0.104),doubleToFloat(0.536),doubleToFloat(0.1027),doubleToFloat(0.5117),doubleToFloat(0.1148),doubleToFloat(0.5127),doubleToFloat(0.0778),doubleToFloat(0.4925),doubleToFloat(0.0911),doubleToFloat(0.494),doubleToFloat(0.0618),doubleToFloat(0.4901),doubleToFloat(0.1152),doubleToFloat(0.5002),doubleToFloat(0.1256),doubleToFloat(0.5028),doubleToFloat(0.1268),doubleToFloat(0.5105),doubleToFloat(0.105),doubleToFloat(0.4966),doubleToFloat(0.0786),doubleToFloat(0.4744),doubleToFloat(0.0945),doubleToFloat(0.4791),doubleToFloat(0.0644),doubleToFloat(0.4726),doubleToFloat(0.1083),doubleToFloat(0.4805),doubleToFloat(0.1195),doubleToFloat(0.4848),doubleToFloat(0.1395),doubleToFloat(0.5292),doubleToFloat(0.0492),doubleToFloat(0.4884),doubleToFloat(0.0455),doubleToFloat(0.4743),doubleToFloat(0.1321),doubleToFloat(0.4908),doubleToFloat(0.079),doubleToFloat(0.4506),doubleToFloat(0.0954),doubleToFloat(0.4539),doubleToFloat(0.0615),doubleToFloat(0.4503),doubleToFloat(0.1154),doubleToFloat(0.4501),doubleToFloat(0.1348),doubleToFloat(0.4597),doubleToFloat(0.1514),doubleToFloat(0.473),doubleToFloat(0.0369),doubleToFloat(0.4546),doubleToFloat(0.5845),doubleToFloat(0.7196),doubleToFloat(0.5681),doubleToFloat(0.7046),doubleToFloat(0.5497),doubleToFloat(0.6974),doubleToFloat(0.7068),doubleToFloat(0.7157),doubleToFloat(0.6825),doubleToFloat(0.7174),doubleToFloat(0.6629),doubleToFloat(0.7161),doubleToFloat(0.5298),doubleToFloat(0.6914),doubleToFloat(0.7317),doubleToFloat(0.7159),doubleToFloat(0.1807),doubleToFloat(0.4425),doubleToFloat(0.2135),doubleToFloat(0.4243),doubleToFloat(0.2241),doubleToFloat(0.4433),doubleToFloat(0.1913),doubleToFloat(0.4615),doubleToFloat(0.1746),doubleToFloat(0.4313),doubleToFloat(0.2074),doubleToFloat(0.4131),doubleToFloat(0.2144),doubleToFloat(0.4112),doubleToFloat(0.2212),doubleToFloat(0.4127),doubleToFloat(0.226),doubleToFloat(0.4174),doubleToFloat(0.2365),doubleToFloat(0.4364),doubleToFloat(0.2346),doubleToFloat(0.4623),doubleToFloat(0.247),doubleToFloat(0.4554),doubleToFloat(0.2485),doubleToFloat(0.4619),doubleToFloat(0.2462),doubleToFloat(0.4685),doubleToFloat(0.2408),doubleToFloat(0.4734),doubleToFloat(0.208),doubleToFloat(0.4916),doubleToFloat(0.2018),doubleToFloat(0.4805),doubleToFloat(0.17),doubleToFloat(0.4232),doubleToFloat(0.2029),doubleToFloat(0.405),doubleToFloat(0.2151),doubleToFloat(0.4016),doubleToFloat(0.2269),doubleToFloat(0.4043),doubleToFloat(0.2351),doubleToFloat(0.4123),doubleToFloat(0.2456),doubleToFloat(0.4313),doubleToFloat(0.2562),doubleToFloat(0.4503),doubleToFloat(0.2586),doubleToFloat(0.4616),doubleToFloat(0.2546),doubleToFloat(0.473),doubleToFloat(0.2453),doubleToFloat(0.4816),doubleToFloat(0.2125),doubleToFloat(0.4998),doubleToFloat(0.1684),doubleToFloat(0.4202),doubleToFloat(0.2012),doubleToFloat(0.402),doubleToFloat(0.2153),doubleToFloat(0.3981),doubleToFloat(0.2289),doubleToFloat(0.4012),doubleToFloat(0.2384),doubleToFloat(0.4105),doubleToFloat(0.249),doubleToFloat(0.4295),doubleToFloat(0.2595),doubleToFloat(0.4485),doubleToFloat(0.2623),doubleToFloat(0.4615),doubleToFloat(0.2577),doubleToFloat(0.4747),doubleToFloat(0.247),doubleToFloat(0.4846),doubleToFloat(0.2142),doubleToFloat(0.5027)], Java.type("float[]"))))))))
                .addChild(new HAnimJoint("hanim_vl5").setName("skullbase").setDEF("hanim_skullbase").setCenter(Java.to([doubleToFloat(0),doubleToFloat(53.98),doubleToFloat(-1.219)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(0)], Java.type("float[]"))).setLlimit(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(0)], Java.type("float[]")))
                  .addChild(new HAnimSegment("hanim_skullbase").setName("skull").setDEF("hanim_skull")
                    .addChild(new Transform().setTranslation(Java.to([doubleToFloat(0),doubleToFloat(53.98),doubleToFloat(-1.219)], Java.type("float[]")))
                      .addChild(new Shape()
                        .setAppearance(new Appearance()
                          .setMaterial(new Material().setDiffuseColor(Java.to([doubleToFloat(0.588),doubleToFloat(0.588),doubleToFloat(0.588)], Java.type("float[]"))))
                          .setTexture(new ImageTexture().setUSE("DaTextureAtlas")))
                        .setGeometry(new IndexedFaceSet().setCoordIndex(Java.to([39,40,17,-1,17,8,39,-1,9,7,16,-1,16,14,9,-1,10,15,16,-1,16,7,10,-1,9,14,48,-1,48,33,9,-1,21,23,15,-1,15,10,21,-1,20,41,42,-1,42,6,20,-1,13,68,69,-1,69,8,13,-1,9,31,12,-1,12,7,9,-1,7,12,11,-1,11,10,7,-1,17,23,21,-1,21,8,17,-1,26,24,30,-1,30,0,26,-1,27,5,30,-1,30,24,27,-1,25,80,81,-1,81,5,25,-1,13,8,21,-1,21,22,13,-1,43,84,68,-1,68,13,43,-1,2,1,44,-1,44,32,2,-1,44,42,11,-1,11,12,44,-1,69,89,39,-1,39,8,69,-1,23,17,25,-1,25,29,23,-1,14,26,28,-1,28,48,14,-1,0,92,93,-1,93,36,0,-1,35,28,26,-1,36,35,26,-1,0,36,26,-1,3,43,41,-1,41,20,3,-1,10,11,22,-1,22,21,10,-1,30,97,92,-1,92,0,30,-1,5,81,97,-1,97,30,5,-1,26,14,16,-1,16,24,26,-1,24,16,15,-1,15,27,24,-1,27,15,23,-1,23,29,27,-1,19,18,38,-1,38,37,19,-1,28,35,38,-1,38,18,28,-1,4,2,32,-1,31,9,33,-1,33,34,31,-1,32,31,34,-1,34,4,32,-1,5,27,29,-1,29,25,5,-1,104,105,40,-1,40,39,104,-1,40,105,106,-1,41,22,11,-1,11,42,41,-1,3,107,84,-1,84,43,3,-1,1,6,42,-1,42,44,1,-1,13,22,41,-1,41,43,13,-1,12,31,32,-1,32,44,12,-1,19,37,46,-1,46,45,19,-1,108,17,40,-1,40,106,108,-1,25,17,108,-1,108,80,25,-1,104,39,89,-1,28,18,47,-1,47,48,28,-1,50,49,52,-1,52,51,50,-1,53,56,55,-1,55,54,53,-1,57,54,55,-1,55,58,57,-1,53,60,59,-1,59,56,53,-1,61,57,58,-1,58,62,61,-1,64,63,66,-1,66,65,64,-1,67,49,69,-1,69,68,67,-1,53,54,71,-1,71,70,53,-1,54,57,72,-1,72,71,54,-1,52,49,61,-1,61,62,52,-1,73,76,75,-1,75,74,73,-1,77,74,75,-1,75,78,77,-1,79,78,81,-1,81,80,79,-1,67,82,61,-1,61,49,67,-1,83,67,68,-1,68,84,83,-1,86,85,88,-1,88,87,86,-1,88,71,72,-1,72,66,88,-1,69,49,50,-1,50,89,69,-1,62,90,79,-1,79,52,62,-1,56,59,91,-1,91,73,56,-1,76,94,93,-1,93,92,76,-1,73,91,95,-1,73,95,94,-1,76,73,94,-1,96,64,65,-1,65,83,96,-1,57,61,82,-1,82,72,57,-1,75,76,92,-1,92,97,75,-1,78,75,97,-1,97,81,78,-1,73,74,55,-1,55,56,73,-1,74,77,58,-1,58,55,74,-1,77,90,62,-1,62,58,77,-1,98,101,100,-1,100,99,98,-1,91,99,100,-1,100,95,91,-1,102,85,86,-1,70,103,60,-1,60,53,70,-1,85,102,103,-1,103,70,85,-1,78,79,90,-1,90,77,78,-1,104,50,51,-1,51,105,104,-1,51,106,105,-1,65,66,72,-1,72,82,65,-1,96,83,84,-1,84,107,96,-1,87,88,66,-1,66,63,87,-1,67,83,65,-1,65,82,67,-1,71,88,85,-1,85,70,71,-1,98,45,46,-1,46,101,98,-1,108,106,51,-1,51,52,108,-1,79,80,108,-1,108,52,79,-1,104,89,50,-1,91,59,109,-1,109,99,91,-1,110,119,120,-1,120,111,110,-1,112,121,119,-1,119,110,112,-1,110,111,114,-1,114,113,110,-1,112,110,113,-1,113,115,112,-1,113,114,123,-1,123,122,113,-1,115,113,122,-1,122,124,115,-1,117,116,122,-1,122,123,117,-1,118,128,154,-1,154,124,118,-1,116,118,124,-1,124,122,116,-1,114,111,120,-1,120,123,114,-1,123,120,138,-1,138,117,123,-1,120,119,125,-1,125,138,120,-1,157,158,126,-1,126,121,157,-1,119,121,126,-1,126,125,119,-1,121,112,129,-1,129,157,121,-1,112,115,127,-1,127,129,112,-1,115,124,154,-1,154,127,115,-1,134,135,194,-1,194,117,134,-1,130,131,132,-1,132,133,130,-1,131,130,193,-1,193,136,131,-1,133,132,166,-1,166,165,133,-1,134,136,193,-1,193,135,134,-1,134,117,138,-1,138,137,134,-1,142,141,140,-1,140,139,142,-1,143,142,139,-1,139,144,143,-1,142,146,145,-1,145,141,142,-1,143,147,146,-1,146,142,143,-1,146,149,148,-1,148,145,146,-1,147,150,149,-1,149,146,147,-1,151,148,149,-1,149,152,151,-1,153,150,154,-1,154,128,153,-1,152,149,150,-1,150,153,152,-1,145,148,140,-1,140,141,145,-1,148,151,155,-1,155,140,148,-1,140,155,156,-1,156,139,140,-1,157,144,159,-1,159,158,157,-1,139,156,159,-1,159,144,139,-1,144,157,129,-1,129,143,144,-1,143,129,127,-1,127,147,143,-1,147,127,154,-1,154,150,147,-1,160,151,196,-1,196,195,160,-1,197,198,162,-1,162,161,197,-1,161,163,164,-1,164,197,161,-1,198,165,166,-1,166,162,198,-1,160,195,164,-1,164,163,160,-1,160,167,155,-1,155,151,160,-1,172,169,170,-1,170,171,172,-1,173,175,177,-1,177,178,173,-1,130,171,168,-1,168,193,130,-1,172,133,165,-1,165,179,172,-1,133,172,171,-1,171,130,133,-1,171,170,176,-1,176,168,171,-1,170,169,175,-1,175,176,170,-1,169,172,179,-1,179,180,169,-1,174,194,135,-1,174,168,192,-1,169,180,177,-1,177,175,169,-1,175,173,176,-1,181,164,195,-1,195,182,181,-1,187,186,185,-1,185,184,187,-1,188,178,177,-1,177,189,188,-1,197,164,181,-1,181,186,197,-1,187,179,165,-1,165,198,187,-1,198,197,186,-1,186,187,198,-1,186,181,190,-1,190,185,186,-1,185,190,189,-1,189,184,185,-1,184,180,179,-1,179,187,184,-1,182,195,196,-1,196,183,182,-1,181,182,191,-1,191,190,181,-1,184,189,177,-1,177,180,184,-1,188,189,190,-1,190,191,188,-1,191,182,183,-1,174,135,193,-1,193,168,174,-1,192,168,176,-1,199,206,204,-1,204,203,199,-1,202,204,206,-1,206,205,202,-1,202,205,283,-1,283,267,202,-1,208,268,283,-1,283,205,208,-1,220,214,232,-1,232,219,220,-1,221,222,223,-1,202,267,230,-1,230,227,202,-1,203,204,229,-1,229,228,203,-1,217,215,233,-1,233,269,217,-1,220,219,223,-1,223,222,220,-1,215,214,297,-1,297,233,215,-1,216,217,269,-1,269,270,216,-1,297,214,220,-1,220,299,297,-1,222,221,226,-1,226,300,222,-1,299,220,222,-1,222,300,299,-1,229,227,224,-1,224,223,229,-1,216,270,271,-1,271,218,216,-1,221,224,272,-1,272,226,221,-1,208,205,206,-1,206,207,208,-1,207,206,199,-1,199,211,207,-1,212,209,201,-1,201,200,212,-1,218,225,209,-1,209,216,218,-1,209,225,210,-1,210,201,209,-1,201,210,211,-1,211,199,201,-1,217,216,209,-1,209,212,217,-1,199,203,200,-1,200,201,199,-1,272,224,227,-1,227,230,272,-1,229,223,219,-1,219,228,229,-1,204,202,227,-1,227,229,204,-1,203,228,213,-1,213,200,203,-1,215,217,212,-1,212,231,215,-1,212,200,213,-1,213,231,212,-1,213,228,219,-1,219,232,213,-1,214,215,231,-1,231,232,214,-1,232,231,213,-1,268,208,234,-1,234,314,268,-1,208,207,235,-1,235,234,208,-1,207,211,236,-1,236,235,207,-1,211,210,237,-1,237,236,211,-1,210,225,238,-1,238,237,210,-1,225,218,239,-1,239,238,225,-1,218,271,320,-1,320,239,218,-1,223,224,221,-1,273,321,241,-1,273,241,242,-1,273,242,243,-1,273,243,244,-1,273,244,245,-1,273,245,240,-1,247,241,321,-1,321,327,247,-1,248,242,241,-1,241,247,248,-1,249,243,242,-1,242,248,249,-1,250,244,243,-1,243,249,250,-1,251,245,244,-1,244,250,251,-1,246,240,245,-1,245,251,246,-1,252,247,327,-1,327,274,252,-1,253,248,247,-1,247,252,253,-1,254,249,248,-1,248,253,254,-1,255,250,249,-1,249,254,255,-1,256,251,250,-1,250,255,256,-1,338,246,251,-1,251,256,338,-1,257,252,274,-1,274,275,257,-1,258,253,252,-1,252,257,258,-1,259,254,253,-1,253,258,259,-1,260,255,254,-1,254,259,260,-1,261,256,255,-1,255,260,261,-1,344,338,256,-1,256,261,344,-1,262,257,275,-1,275,276,262,-1,263,258,257,-1,257,262,263,-1,264,259,258,-1,258,263,264,-1,265,260,259,-1,259,264,265,-1,266,261,260,-1,260,265,266,-1,350,344,261,-1,261,266,350,-1,351,262,276,-1,351,263,262,-1,351,264,263,-1,351,265,264,-1,351,266,265,-1,351,350,266,-1,277,280,279,-1,279,278,277,-1,282,281,278,-1,278,279,282,-1,282,267,283,-1,283,281,282,-1,284,281,283,-1,283,268,284,-1,286,285,288,-1,288,287,286,-1,289,291,290,-1,282,292,230,-1,230,267,282,-1,280,294,293,-1,293,279,280,-1,295,269,233,-1,233,296,295,-1,286,290,291,-1,291,285,286,-1,296,233,297,-1,297,287,296,-1,298,270,269,-1,269,295,298,-1,297,299,286,-1,286,287,297,-1,290,300,226,-1,226,289,290,-1,299,300,290,-1,290,286,299,-1,293,291,301,-1,301,292,293,-1,298,302,271,-1,271,270,298,-1,289,226,272,-1,272,301,289,-1,284,303,278,-1,278,281,284,-1,303,304,277,-1,277,278,303,-1,305,308,307,-1,307,306,305,-1,302,298,306,-1,306,309,302,-1,306,307,310,-1,310,309,306,-1,307,277,304,-1,304,310,307,-1,295,305,306,-1,306,298,295,-1,277,307,308,-1,308,280,277,-1,272,230,292,-1,292,301,272,-1,293,294,285,-1,285,291,293,-1,279,293,292,-1,292,282,279,-1,280,308,311,-1,311,294,280,-1,296,312,305,-1,305,295,296,-1,305,312,311,-1,311,308,305,-1,311,288,285,-1,285,294,311,-1,287,288,312,-1,312,296,287,-1,288,311,312,-1,268,314,313,-1,313,284,268,-1,284,313,315,-1,315,303,284,-1,303,315,316,-1,316,304,303,-1,304,316,317,-1,317,310,304,-1,310,317,318,-1,318,309,310,-1,309,318,319,-1,319,302,309,-1,302,319,320,-1,320,271,302,-1,291,289,301,-1,273,322,321,-1,273,323,322,-1,273,324,323,-1,273,325,324,-1,273,326,325,-1,273,240,326,-1,328,327,321,-1,321,322,328,-1,329,328,322,-1,322,323,329,-1,330,329,323,-1,323,324,330,-1,331,330,324,-1,324,325,331,-1,332,331,325,-1,325,326,332,-1,246,332,326,-1,326,240,246,-1,333,274,327,-1,327,328,333,-1,334,333,328,-1,328,329,334,-1,335,334,329,-1,329,330,335,-1,336,335,330,-1,330,331,336,-1,337,336,331,-1,331,332,337,-1,338,337,332,-1,332,246,338,-1,339,275,274,-1,274,333,339,-1,340,339,333,-1,333,334,340,-1,341,340,334,-1,334,335,341,-1,342,341,335,-1,335,336,342,-1,343,342,336,-1,336,337,343,-1,344,343,337,-1,337,338,344,-1,345,276,275,-1,275,339,345,-1,346,345,339,-1,339,340,346,-1,347,346,340,-1,340,341,347,-1,348,347,341,-1,341,342,348,-1,349,348,342,-1,342,343,349,-1,350,349,343,-1,343,344,350,-1,351,276,345,-1,351,345,346,-1,351,346,347,-1,351,347,348,-1,351,348,349,-1,351,349,350,-1], Java.type("int[]"))).setCreaseAngle(1.57).setTexCoordIndex(Java.to([1,2,3,-1,3,0,1,-1,4,5,6,-1,6,7,4,-1,8,9,6,-1,6,5,8,-1,4,7,10,-1,10,11,4,-1,12,13,9,-1,9,8,12,-1,15,16,17,-1,17,14,15,-1,18,47,59,-1,59,0,18,-1,4,19,20,-1,20,5,4,-1,5,20,21,-1,21,8,5,-1,3,13,12,-1,12,0,3,-1,22,23,24,-1,24,25,22,-1,26,27,24,-1,24,23,26,-1,28,48,55,-1,55,27,28,-1,18,0,12,-1,12,29,18,-1,30,53,47,-1,47,18,30,-1,32,33,34,-1,34,31,32,-1,34,17,21,-1,21,20,34,-1,59,61,1,-1,1,0,59,-1,13,3,28,-1,28,35,13,-1,7,22,36,-1,36,10,7,-1,25,49,57,-1,57,39,25,-1,40,36,22,-1,39,40,22,-1,25,39,22,-1,41,30,16,-1,16,15,41,-1,8,21,29,-1,29,12,8,-1,24,56,49,-1,49,25,24,-1,27,55,56,-1,56,24,27,-1,22,7,6,-1,6,23,22,-1,23,6,9,-1,9,26,23,-1,26,9,13,-1,13,35,26,-1,38,37,42,-1,42,43,38,-1,36,40,42,-1,42,37,36,-1,44,32,31,-1,19,4,11,-1,11,45,19,-1,31,19,45,-1,45,44,31,-1,27,26,35,-1,35,28,27,-1,51,58,2,-1,2,1,51,-1,2,58,52,-1,16,29,21,-1,21,17,16,-1,41,46,53,-1,53,30,41,-1,33,14,17,-1,17,34,33,-1,18,29,16,-1,16,30,18,-1,20,19,31,-1,31,34,20,-1,38,43,50,-1,50,54,38,-1,60,3,2,-1,2,52,60,-1,28,3,60,-1,60,48,28,-1,51,1,61,-1,36,37,62,-1,62,63,36,-1,65,64,67,-1,67,66,65,-1,68,71,70,-1,70,69,68,-1,72,69,70,-1,70,73,72,-1,68,75,74,-1,74,71,68,-1,76,72,73,-1,73,77,76,-1,79,78,81,-1,81,80,79,-1,82,64,84,-1,84,83,82,-1,68,69,86,-1,86,85,68,-1,69,72,87,-1,87,86,69,-1,67,64,76,-1,76,77,67,-1,88,91,90,-1,90,89,88,-1,92,89,90,-1,90,93,92,-1,94,93,96,-1,96,95,94,-1,82,97,76,-1,76,64,82,-1,98,82,83,-1,83,99,98,-1,101,100,103,-1,103,102,101,-1,103,86,87,-1,87,81,103,-1,84,64,65,-1,65,104,84,-1,77,105,94,-1,94,67,77,-1,71,74,106,-1,106,88,71,-1,91,109,108,-1,108,107,91,-1,88,106,110,-1,88,110,109,-1,91,88,109,-1,111,79,80,-1,80,98,111,-1,72,76,97,-1,97,87,72,-1,90,91,107,-1,107,112,90,-1,93,90,112,-1,112,96,93,-1,88,89,70,-1,70,71,88,-1,89,92,73,-1,73,70,89,-1,92,105,77,-1,77,73,92,-1,113,116,115,-1,115,114,113,-1,106,114,115,-1,115,110,106,-1,117,100,101,-1,85,118,75,-1,75,68,85,-1,100,117,118,-1,118,85,100,-1,93,94,105,-1,105,92,93,-1,119,65,66,-1,66,120,119,-1,66,121,120,-1,80,81,87,-1,87,97,80,-1,111,98,99,-1,99,122,111,-1,102,103,81,-1,81,78,102,-1,82,98,80,-1,80,97,82,-1,86,103,100,-1,100,85,86,-1,113,124,123,-1,123,116,113,-1,125,121,66,-1,66,67,125,-1,94,95,125,-1,125,67,94,-1,119,104,65,-1,106,127,126,-1,126,114,106,-1,130,128,129,-1,129,131,130,-1,133,132,128,-1,128,130,133,-1,130,131,134,-1,134,135,130,-1,133,130,135,-1,135,136,133,-1,135,134,141,-1,141,140,135,-1,136,135,140,-1,140,142,136,-1,137,138,140,-1,140,141,137,-1,139,152,153,-1,153,142,139,-1,138,139,142,-1,142,140,138,-1,134,131,143,-1,143,144,134,-1,144,143,145,-1,145,146,144,-1,129,128,147,-1,147,148,129,-1,154,155,149,-1,149,132,154,-1,128,132,149,-1,149,147,128,-1,132,133,150,-1,150,154,132,-1,133,136,151,-1,151,150,133,-1,136,142,153,-1,153,151,136,-1,157,158,159,-1,159,156,157,-1,161,162,163,-1,163,164,161,-1,162,161,160,-1,160,167,162,-1,164,163,166,-1,166,165,164,-1,157,167,160,-1,160,158,157,-1,157,156,168,-1,168,169,157,-1,173,172,171,-1,171,170,173,-1,174,173,170,-1,170,175,174,-1,173,177,176,-1,176,172,173,-1,174,178,177,-1,177,173,174,-1,177,180,179,-1,179,176,177,-1,178,181,180,-1,180,177,178,-1,182,179,180,-1,180,183,182,-1,184,181,186,-1,186,185,184,-1,183,180,181,-1,181,184,183,-1,176,188,187,-1,187,172,176,-1,188,190,189,-1,189,187,188,-1,171,192,191,-1,191,170,171,-1,193,175,195,-1,195,194,193,-1,170,191,195,-1,195,175,170,-1,175,193,196,-1,196,174,175,-1,174,196,197,-1,197,178,174,-1,178,197,186,-1,186,181,178,-1,199,198,201,-1,201,200,199,-1,202,205,204,-1,204,203,202,-1,203,206,207,-1,207,202,203,-1,205,208,209,-1,209,204,205,-1,199,200,207,-1,207,206,199,-1,199,211,210,-1,210,198,199,-1,216,213,214,-1,214,215,216,-1,217,218,219,-1,219,220,217,-1,239,215,212,-1,212,237,239,-1,216,240,247,-1,247,221,216,-1,240,216,215,-1,215,239,240,-1,215,214,222,-1,222,212,215,-1,214,213,218,-1,218,222,214,-1,213,216,221,-1,221,223,213,-1,224,238,241,-1,224,212,225,-1,213,223,219,-1,219,218,213,-1,218,217,222,-1,227,244,242,-1,242,226,227,-1,229,230,231,-1,231,228,229,-1,232,220,219,-1,219,233,232,-1,245,244,227,-1,227,230,245,-1,229,221,247,-1,247,246,229,-1,246,245,230,-1,230,229,246,-1,230,227,234,-1,234,231,230,-1,231,234,233,-1,233,228,231,-1,228,223,221,-1,221,229,228,-1,226,242,243,-1,243,235,226,-1,227,226,236,-1,236,234,227,-1,228,233,219,-1,219,223,228,-1,232,233,234,-1,234,236,232,-1,236,226,235,-1,224,241,237,-1,237,212,224,-1,225,212,222,-1,248,256,254,-1,254,253,248,-1,251,254,256,-1,256,255,251,-1,251,255,259,-1,259,252,251,-1,257,258,259,-1,259,255,257,-1,270,265,292,-1,292,269,270,-1,271,272,273,-1,251,252,290,-1,290,287,251,-1,253,254,289,-1,289,288,253,-1,268,266,276,-1,276,277,268,-1,270,269,273,-1,273,272,270,-1,266,265,280,-1,280,276,266,-1,267,268,277,-1,277,281,267,-1,280,265,270,-1,270,282,280,-1,272,271,284,-1,284,283,272,-1,282,270,272,-1,272,283,282,-1,289,287,274,-1,274,273,289,-1,267,281,286,-1,286,279,267,-1,271,274,275,-1,275,284,271,-1,257,255,256,-1,256,262,257,-1,262,256,248,-1,248,285,262,-1,263,260,250,-1,250,249,263,-1,279,278,260,-1,260,267,279,-1,260,278,261,-1,261,250,260,-1,250,261,285,-1,285,248,250,-1,268,267,260,-1,260,263,268,-1,248,253,249,-1,249,250,248,-1,275,274,287,-1,287,290,275,-1,289,273,269,-1,269,288,289,-1,254,251,287,-1,287,289,254,-1,253,288,264,-1,264,249,253,-1,266,268,263,-1,263,291,266,-1,263,249,264,-1,264,291,263,-1,264,288,269,-1,269,292,264,-1,265,266,291,-1,291,292,265,-1,292,291,264,-1,258,257,294,-1,294,293,258,-1,257,262,295,-1,295,294,257,-1,262,285,296,-1,296,295,262,-1,285,261,297,-1,297,296,285,-1,261,278,298,-1,298,297,261,-1,278,279,299,-1,299,298,278,-1,279,286,300,-1,300,299,279,-1,273,274,271,-1,301,302,303,-1,301,303,304,-1,301,304,305,-1,301,305,306,-1,301,306,307,-1,301,307,308,-1,310,303,302,-1,302,309,310,-1,311,304,303,-1,303,310,311,-1,312,305,304,-1,304,311,312,-1,313,306,305,-1,305,312,313,-1,314,307,306,-1,306,313,314,-1,315,308,307,-1,307,314,315,-1,317,310,309,-1,309,316,317,-1,318,311,310,-1,310,317,318,-1,319,312,311,-1,311,318,319,-1,320,313,312,-1,312,319,320,-1,321,314,313,-1,313,320,321,-1,322,315,314,-1,314,321,322,-1,324,317,316,-1,316,323,324,-1,325,318,317,-1,317,324,325,-1,326,319,318,-1,318,325,326,-1,327,320,319,-1,319,326,327,-1,328,321,320,-1,320,327,328,-1,329,322,321,-1,321,328,329,-1,331,324,323,-1,323,330,331,-1,332,325,324,-1,324,331,332,-1,333,326,325,-1,325,332,333,-1,334,327,326,-1,326,333,334,-1,335,328,327,-1,327,334,335,-1,336,329,328,-1,328,335,336,-1,337,331,330,-1,337,332,331,-1,337,333,332,-1,337,334,333,-1,337,335,334,-1,337,336,335,-1,338,341,340,-1,340,339,338,-1,343,342,339,-1,339,340,343,-1,343,344,345,-1,345,342,343,-1,346,342,345,-1,345,347,346,-1,349,348,351,-1,351,350,349,-1,352,354,353,-1,343,356,355,-1,355,344,343,-1,341,358,357,-1,357,340,341,-1,359,362,361,-1,361,360,359,-1,349,353,354,-1,354,348,349,-1,360,361,363,-1,363,350,360,-1,365,364,362,-1,362,359,365,-1,363,366,349,-1,349,350,363,-1,353,367,368,-1,368,352,353,-1,366,367,353,-1,353,349,366,-1,357,354,369,-1,369,356,357,-1,365,370,371,-1,371,364,365,-1,352,368,372,-1,372,369,352,-1,346,373,339,-1,339,342,346,-1,373,374,338,-1,338,339,373,-1,375,378,377,-1,377,376,375,-1,370,365,376,-1,376,379,370,-1,376,377,380,-1,380,379,376,-1,377,338,374,-1,374,380,377,-1,359,375,376,-1,376,365,359,-1,338,377,378,-1,378,341,338,-1,372,355,356,-1,356,369,372,-1,357,358,348,-1,348,354,357,-1,340,357,356,-1,356,343,340,-1,341,378,381,-1,381,358,341,-1,360,382,375,-1,375,359,360,-1,375,382,381,-1,381,378,375,-1,381,351,348,-1,348,358,381,-1,350,351,382,-1,382,360,350,-1,351,381,382,-1,347,384,383,-1,383,346,347,-1,346,383,385,-1,385,373,346,-1,373,385,386,-1,386,374,373,-1,374,386,387,-1,387,380,374,-1,380,387,388,-1,388,379,380,-1,379,388,389,-1,389,370,379,-1,370,389,390,-1,390,371,370,-1,354,352,369,-1,391,393,392,-1,391,394,393,-1,391,395,394,-1,391,396,395,-1,391,397,396,-1,391,398,397,-1,400,399,392,-1,392,393,400,-1,401,400,393,-1,393,394,401,-1,402,401,394,-1,394,395,402,-1,403,402,395,-1,395,396,403,-1,404,403,396,-1,396,397,404,-1,405,404,397,-1,397,398,405,-1,407,406,399,-1,399,400,407,-1,408,407,400,-1,400,401,408,-1,409,408,401,-1,401,402,409,-1,410,409,402,-1,402,403,410,-1,411,410,403,-1,403,404,411,-1,412,411,404,-1,404,405,412,-1,414,413,406,-1,406,407,414,-1,415,414,407,-1,407,408,415,-1,416,415,408,-1,408,409,416,-1,417,416,409,-1,409,410,417,-1,418,417,410,-1,410,411,418,-1,419,418,411,-1,411,412,419,-1,421,420,413,-1,413,414,421,-1,422,421,414,-1,414,415,422,-1,423,422,415,-1,415,416,423,-1,424,423,416,-1,416,417,424,-1,425,424,417,-1,417,418,425,-1,426,425,418,-1,418,419,426,-1,427,420,421,-1,427,421,422,-1,427,422,423,-1,427,423,424,-1,427,424,425,-1,427,425,426,-1], Java.type("int[]")))
                          .setCoord(new Coordinate().setPoint(Java.to([doubleToFloat(1.347),doubleToFloat(-0.451),doubleToFloat(2.233),doubleToFloat(4.628),doubleToFloat(6.949),doubleToFloat(2.849),doubleToFloat(4.722),doubleToFloat(6.218),doubleToFloat(0.6474),doubleToFloat(1.261),doubleToFloat(7.645),doubleToFloat(6.098),doubleToFloat(4.721),doubleToFloat(6.216),doubleToFloat(0.6388),doubleToFloat(1.167),doubleToFloat(0.0593),doubleToFloat(4.651),doubleToFloat(3.818),doubleToFloat(7.274),doubleToFloat(4.804),doubleToFloat(4.031),doubleToFloat(2.66),doubleToFloat(2.757),doubleToFloat(0.9545),doubleToFloat(3.01),doubleToFloat(5.723),doubleToFloat(4.104),doubleToFloat(2.689),doubleToFloat(1.468),doubleToFloat(3.284),doubleToFloat(2.92),doubleToFloat(4.595),doubleToFloat(3.676),doubleToFloat(4.156),doubleToFloat(4.731),doubleToFloat(4.295),doubleToFloat(3.948),doubleToFloat(2.805),doubleToFloat(0.8864),doubleToFloat(4.096),doubleToFloat(5.634),doubleToFloat(3.699),doubleToFloat(1.708),doubleToFloat(1.553),doubleToFloat(2.958),doubleToFloat(1.733),doubleToFloat(4.611),doubleToFloat(3.636),doubleToFloat(1.69),doubleToFloat(2.775),doubleToFloat(0.9615),doubleToFloat(2.101),doubleToFloat(5.868),doubleToFloat(1.938),doubleToFloat(0.5483),doubleToFloat(-1.673),doubleToFloat(0.8166),doubleToFloat(0.699),doubleToFloat(-2.343),doubleToFloat(2.737),doubleToFloat(7.542),doubleToFloat(5.461),doubleToFloat(2.119),doubleToFloat(2.964),doubleToFloat(5.227),doubleToFloat(2.397),doubleToFloat(4.125),doubleToFloat(5.169),doubleToFloat(1.921),doubleToFloat(1.908),doubleToFloat(5.259),doubleToFloat(2.485),doubleToFloat(0.423),doubleToFloat(3.241),doubleToFloat(0.8325),doubleToFloat(1.089),doubleToFloat(5.606),doubleToFloat(2.535),doubleToFloat(0.4128),doubleToFloat(1.812),doubleToFloat(2.103),doubleToFloat(0.6668),doubleToFloat(4.658),doubleToFloat(2.5),doubleToFloat(0.4559),doubleToFloat(-0.0601),doubleToFloat(1.423),doubleToFloat(1.295),doubleToFloat(5.285),doubleToFloat(1.352),doubleToFloat(-0.3835),doubleToFloat(3.744),doubleToFloat(4.446),doubleToFloat(3.839),doubleToFloat(1.447),doubleToFloat(4.715),doubleToFloat(4.964),doubleToFloat(1.604),doubleToFloat(4.198),doubleToFloat(2.871),doubleToFloat(-0.5614),doubleToFloat(4.617),doubleToFloat(4.064),doubleToFloat(-0.4436),doubleToFloat(1.189),doubleToFloat(-0.2955),doubleToFloat(0.1951),doubleToFloat(0.8412),doubleToFloat(-0.507),doubleToFloat(0.9623),doubleToFloat(0.4259),doubleToFloat(-0.1153),doubleToFloat(-1.289),doubleToFloat(1.104),doubleToFloat(-0.1534),doubleToFloat(-0.6998),doubleToFloat(0.436),doubleToFloat(2.439),doubleToFloat(6.258),doubleToFloat(0.4089),doubleToFloat(2.098),doubleToFloat(6.335),doubleToFloat(2.651),doubleToFloat(5.631),doubleToFloat(5.415),doubleToFloat(3.844),doubleToFloat(5.449),doubleToFloat(4.926),doubleToFloat(1.176),doubleToFloat(5.74),doubleToFloat(5.972),doubleToFloat(4.616),doubleToFloat(5.285),doubleToFloat(2.821),doubleToFloat(0),doubleToFloat(0.7175),doubleToFloat(-2.497),doubleToFloat(0),doubleToFloat(-0.1175),doubleToFloat(-1.377),doubleToFloat(3.074),doubleToFloat(1.863),doubleToFloat(-2.101),doubleToFloat(3.655),doubleToFloat(1.774),doubleToFloat(-0.5777),doubleToFloat(-0.9545),doubleToFloat(3.01),doubleToFloat(5.723),doubleToFloat(-0.436),doubleToFloat(2.439),doubleToFloat(6.258),doubleToFloat(-0.4089),doubleToFloat(2.098),doubleToFloat(6.335),doubleToFloat(-0.9615),doubleToFloat(2.101),doubleToFloat(5.868),doubleToFloat(-4.104),doubleToFloat(2.689),doubleToFloat(1.468),doubleToFloat(-4.031),doubleToFloat(2.66),doubleToFloat(2.757),doubleToFloat(-3.636),doubleToFloat(1.69),doubleToFloat(2.775),doubleToFloat(-3.699),doubleToFloat(1.708),doubleToFloat(1.553),doubleToFloat(-3.284),doubleToFloat(2.92),doubleToFloat(4.595),doubleToFloat(-2.958),doubleToFloat(1.733),doubleToFloat(4.611),doubleToFloat(-3.655),doubleToFloat(1.774),doubleToFloat(-0.5777),doubleToFloat(-4.198),doubleToFloat(2.871),doubleToFloat(-0.5614),doubleToFloat(-2.119),doubleToFloat(2.964),doubleToFloat(5.227),doubleToFloat(-1.921),doubleToFloat(1.908),doubleToFloat(5.259),doubleToFloat(-3.818),doubleToFloat(7.274),doubleToFloat(4.804),doubleToFloat(-2.737),doubleToFloat(7.542),doubleToFloat(5.461),doubleToFloat(-2.651),doubleToFloat(5.631),doubleToFloat(5.415),doubleToFloat(-3.844),doubleToFloat(5.449),doubleToFloat(4.926),doubleToFloat(-0.8864),doubleToFloat(4.096),doubleToFloat(5.634),doubleToFloat(0),doubleToFloat(4.021),doubleToFloat(5.992),doubleToFloat(0),doubleToFloat(3.156),doubleToFloat(6.097),doubleToFloat(-4.446),doubleToFloat(3.839),doubleToFloat(1.447),doubleToFloat(-4.295),doubleToFloat(3.948),doubleToFloat(2.805),doubleToFloat(-3.676),doubleToFloat(4.156),doubleToFloat(4.731),doubleToFloat(-2.535),doubleToFloat(0.4128),doubleToFloat(1.812),doubleToFloat(-2.485),doubleToFloat(0.423),doubleToFloat(3.241),doubleToFloat(-1.352),doubleToFloat(-0.3835),doubleToFloat(3.744),doubleToFloat(-1.347),doubleToFloat(-0.451),doubleToFloat(2.233),doubleToFloat(-2.103),doubleToFloat(0.6668),doubleToFloat(4.658),doubleToFloat(-1.167),doubleToFloat(0.0593),doubleToFloat(4.651),doubleToFloat(-0.8325),doubleToFloat(1.089),doubleToFloat(5.606),doubleToFloat(0),doubleToFloat(0.9462),doubleToFloat(5.722),doubleToFloat(0),doubleToFloat(-0.2405),doubleToFloat(4.778),doubleToFloat(-2.397),doubleToFloat(4.125),doubleToFloat(5.169),doubleToFloat(-1.176),doubleToFloat(5.74),doubleToFloat(5.972),doubleToFloat(0),doubleToFloat(5.76),doubleToFloat(6.279),doubleToFloat(-4.715),doubleToFloat(4.964),doubleToFloat(1.604),doubleToFloat(-4.722),doubleToFloat(6.218),doubleToFloat(0.6474),doubleToFloat(-4.628),doubleToFloat(6.949),doubleToFloat(2.849),doubleToFloat(-4.616),doubleToFloat(5.285),doubleToFloat(2.821),doubleToFloat(0),doubleToFloat(2.492),doubleToFloat(6.441),doubleToFloat(-1.423),doubleToFloat(1.295),doubleToFloat(5.285),doubleToFloat(-2.5),doubleToFloat(0.4559),doubleToFloat(-0.0601),doubleToFloat(0),doubleToFloat(-0.679),doubleToFloat(2.5),doubleToFloat(0),doubleToFloat(-0.6709),doubleToFloat(1.23),doubleToFloat(-0.8412),doubleToFloat(-0.507),doubleToFloat(0.9623),doubleToFloat(-1.189),doubleToFloat(-0.2955),doubleToFloat(0.1951),doubleToFloat(-1.261),doubleToFloat(7.645),doubleToFloat(6.098),doubleToFloat(0),doubleToFloat(-0.6266),doubleToFloat(4.038),doubleToFloat(-0.8166),doubleToFloat(0.699),doubleToFloat(-2.343),doubleToFloat(-1.938),doubleToFloat(0.5483),doubleToFloat(-1.673),doubleToFloat(-1.104),doubleToFloat(-0.1534),doubleToFloat(-0.6998),doubleToFloat(-0.4259),doubleToFloat(-0.1153),doubleToFloat(-1.289),doubleToFloat(-4.721),doubleToFloat(6.216),doubleToFloat(0.6388),doubleToFloat(-4.617),doubleToFloat(4.064),doubleToFloat(-0.4436),doubleToFloat(0),doubleToFloat(2.25),doubleToFloat(6.59),doubleToFloat(0),doubleToFloat(2.223),doubleToFloat(6.599),doubleToFloat(0),doubleToFloat(1.928),doubleToFloat(6.427),doubleToFloat(0),doubleToFloat(7.682),doubleToFloat(6.351),doubleToFloat(0),doubleToFloat(1.548),doubleToFloat(6.056),doubleToFloat(-3.074),doubleToFloat(1.863),doubleToFloat(-2.101),doubleToFloat(2.515),doubleToFloat(0.0567),doubleToFloat(-1.724),doubleToFloat(3.116),doubleToFloat(0.1642),doubleToFloat(-0.0862),doubleToFloat(1.197),doubleToFloat(0.0172),doubleToFloat(-2.576),doubleToFloat(2.313),doubleToFloat(-0.1743),doubleToFloat(-1.313),doubleToFloat(2.844),doubleToFloat(-0.0617),doubleToFloat(0.6026),doubleToFloat(1.017),doubleToFloat(-0.2137),doubleToFloat(-2.141),doubleToFloat(2.313),doubleToFloat(3.881),doubleToFloat(-1.313),doubleToFloat(4.691),doubleToFloat(3.858),doubleToFloat(0.694),doubleToFloat(1.017),doubleToFloat(3.932),doubleToFloat(-2.141),doubleToFloat(2.727),doubleToFloat(0.8574),doubleToFloat(-2.145),doubleToFloat(3.609),doubleToFloat(0.8154),doubleToFloat(-0.1959),doubleToFloat(1.393),doubleToFloat(0.8849),doubleToFloat(-3.079),doubleToFloat(2.313),doubleToFloat(0.8051),doubleToFloat(-1.313),doubleToFloat(3.467),doubleToFloat(0.8154),doubleToFloat(0.6474),doubleToFloat(1.017),doubleToFloat(0.8002),doubleToFloat(-2.141),doubleToFloat(2.955),doubleToFloat(2.018),doubleToFloat(-2.499),doubleToFloat(1.466),doubleToFloat(2.077),doubleToFloat(-3.384),doubleToFloat(0),doubleToFloat(-0.2179),doubleToFloat(-2.407),doubleToFloat(0),doubleToFloat(3.928),doubleToFloat(-2.407),doubleToFloat(0),doubleToFloat(0.013),doubleToFloat(-2.878),doubleToFloat(3.993),doubleToFloat(8.848),doubleToFloat(3.33),doubleToFloat(4.169),doubleToFloat(9.461),doubleToFloat(1.118),doubleToFloat(2.616),doubleToFloat(10.88),doubleToFloat(1.153),doubleToFloat(2.343),doubleToFloat(10.51),doubleToFloat(3.623),doubleToFloat(5.143),doubleToFloat(5.153),doubleToFloat(0.7479),doubleToFloat(4.83),doubleToFloat(4.806),doubleToFloat(2.669),doubleToFloat(5.243),doubleToFloat(6.594),doubleToFloat(0.8329),doubleToFloat(4.885),doubleToFloat(5.192),doubleToFloat(-0.4901),doubleToFloat(4.661),doubleToFloat(3.499),doubleToFloat(-0.4907),doubleToFloat(-2.727),doubleToFloat(0.8574),doubleToFloat(-2.145),doubleToFloat(-3.609),doubleToFloat(0.8154),doubleToFloat(-0.1959),doubleToFloat(-3.116),doubleToFloat(0.1642),doubleToFloat(-0.0862),doubleToFloat(-2.515),doubleToFloat(0.0567),doubleToFloat(-1.724),doubleToFloat(-1.197),doubleToFloat(0.0172),doubleToFloat(-2.576),doubleToFloat(-1.393),doubleToFloat(0.8849),doubleToFloat(-3.079),doubleToFloat(-2.844),doubleToFloat(-0.0617),doubleToFloat(0.6026),doubleToFloat(-2.313),doubleToFloat(-0.1743),doubleToFloat(-1.313),doubleToFloat(-1.017),doubleToFloat(-0.2137),doubleToFloat(-2.141),doubleToFloat(-3.467),doubleToFloat(0.8154),doubleToFloat(0.6474),doubleToFloat(-2.313),doubleToFloat(0.8051),doubleToFloat(-1.313),doubleToFloat(-1.017),doubleToFloat(0.8002),doubleToFloat(-2.141),doubleToFloat(-4.665),doubleToFloat(3.858),doubleToFloat(0.694),doubleToFloat(-2.313),doubleToFloat(3.881),doubleToFloat(-1.313),doubleToFloat(-1.017),doubleToFloat(3.932),doubleToFloat(-2.141),doubleToFloat(0),doubleToFloat(0.796),doubleToFloat(-2.407),doubleToFloat(-4.661),doubleToFloat(3.499),doubleToFloat(-0.4907),doubleToFloat(-2.955),doubleToFloat(2.018),doubleToFloat(-2.499),doubleToFloat(0),doubleToFloat(0.9434),doubleToFloat(-3.395),doubleToFloat(0),doubleToFloat(2.135),doubleToFloat(-3.709),doubleToFloat(-1.466),doubleToFloat(2.077),doubleToFloat(-3.384),doubleToFloat(-5.143),doubleToFloat(5.153),doubleToFloat(0.7479),doubleToFloat(-4.169),doubleToFloat(9.461),doubleToFloat(1.118),doubleToFloat(-2.616),doubleToFloat(10.88),doubleToFloat(1.153),doubleToFloat(-5.243),doubleToFloat(6.594),doubleToFloat(0.8329),doubleToFloat(-4.97),doubleToFloat(6.396),doubleToFloat(2.895),doubleToFloat(0),doubleToFloat(11.14),doubleToFloat(3.751),doubleToFloat(0),doubleToFloat(11.56),doubleToFloat(1.166),doubleToFloat(-4.885),doubleToFloat(5.192),doubleToFloat(-0.4901),doubleToFloat(4.373),doubleToFloat(5.977),doubleToFloat(4.846),doubleToFloat(1.445),doubleToFloat(7.811),doubleToFloat(6.204),doubleToFloat(2.658),doubleToFloat(7.168),doubleToFloat(5.823),doubleToFloat(3.573),doubleToFloat(7.81),doubleToFloat(5.042),doubleToFloat(1.764),doubleToFloat(9.067),doubleToFloat(5.313),doubleToFloat(1.13),doubleToFloat(5.113),doubleToFloat(6.272),doubleToFloat(4.054),doubleToFloat(4.396),doubleToFloat(4.649),doubleToFloat(1.353),doubleToFloat(6.061),doubleToFloat(6.45),doubleToFloat(2.53),doubleToFloat(5.776),doubleToFloat(5.838),doubleToFloat(-0.0423),doubleToFloat(5.813),doubleToFloat(6.684),doubleToFloat(-0.1479),doubleToFloat(4.81),doubleToFloat(6.515),doubleToFloat(0),doubleToFloat(9.678),doubleToFloat(5.365),doubleToFloat(-0.0209),doubleToFloat(8.106),doubleToFloat(6.433),doubleToFloat(-4.201),doubleToFloat(5.977),doubleToFloat(4.846),doubleToFloat(-4.176),doubleToFloat(4.518),doubleToFloat(4.444),doubleToFloat(-4.062),doubleToFloat(3.723),doubleToFloat(3.936),doubleToFloat(-1.53),doubleToFloat(7.811),doubleToFloat(6.204),doubleToFloat(-2.636),doubleToFloat(7.168),doubleToFloat(5.823),doubleToFloat(-3.628),doubleToFloat(7.81),doubleToFloat(5.042),doubleToFloat(-1.849),doubleToFloat(9.067),doubleToFloat(5.313),doubleToFloat(-1.753),doubleToFloat(4.463),doubleToFloat(6.241),doubleToFloat(-1.675),doubleToFloat(5.614),doubleToFloat(6.47),doubleToFloat(-2.999),doubleToFloat(5.638),doubleToFloat(5.677),doubleToFloat(-3.195),doubleToFloat(4.24),doubleToFloat(5.557),doubleToFloat(3.344),doubleToFloat(4.844),doubleToFloat(5.174),doubleToFloat(4.978),doubleToFloat(6.396),doubleToFloat(2.895),doubleToFloat(4.446),doubleToFloat(3.86),doubleToFloat(2.618),doubleToFloat(-4.857),doubleToFloat(4.806),doubleToFloat(2.669),doubleToFloat(-4.576),doubleToFloat(3.83),doubleToFloat(2.624),doubleToFloat(-3.993),doubleToFloat(8.848),doubleToFloat(3.33),doubleToFloat(-2.343),doubleToFloat(10.51),doubleToFloat(3.623),doubleToFloat(5.01),doubleToFloat(3.731),doubleToFloat(0.1406),doubleToFloat(5.496),doubleToFloat(6.833),doubleToFloat(1.852),doubleToFloat(5.27),doubleToFloat(5.229),doubleToFloat(2.998),doubleToFloat(2.221),doubleToFloat(4.094),doubleToFloat(-4.86),doubleToFloat(5.128),doubleToFloat(5.726),doubleToFloat(-0.6174),doubleToFloat(4.074),doubleToFloat(4.682),doubleToFloat(-3.332),doubleToFloat(2.068),doubleToFloat(2.268),doubleToFloat(-4.211),doubleToFloat(3.965),doubleToFloat(2.67),doubleToFloat(-2.693),doubleToFloat(3.688),doubleToFloat(0.9418),doubleToFloat(-1.942),doubleToFloat(1.736),doubleToFloat(0.6038),doubleToFloat(-3.374),doubleToFloat(4.529),doubleToFloat(6.731),doubleToFloat(5.074),doubleToFloat(4.648),doubleToFloat(4.179),doubleToFloat(4.238),doubleToFloat(4.509),doubleToFloat(2.071),doubleToFloat(1.014),doubleToFloat(4.815),doubleToFloat(8.276),doubleToFloat(3.851),doubleToFloat(5.172),doubleToFloat(8.637),doubleToFloat(0.7876),doubleToFloat(2.586),doubleToFloat(11.54),doubleToFloat(1.059),doubleToFloat(2.779),doubleToFloat(11),doubleToFloat(3.491),doubleToFloat(2.334),doubleToFloat(8.188),doubleToFloat(6.341),doubleToFloat(2.687),doubleToFloat(9.834),doubleToFloat(5.2),doubleToFloat(2),doubleToFloat(6.813),doubleToFloat(6.506),doubleToFloat(3.96),doubleToFloat(9.975),doubleToFloat(-1.425),doubleToFloat(2.659),doubleToFloat(11.19),doubleToFloat(-1.274),doubleToFloat(1.167),doubleToFloat(10.49),doubleToFloat(-5.662),doubleToFloat(1.987),doubleToFloat(11.14),doubleToFloat(-3.85),doubleToFloat(3.414),doubleToFloat(9.136),doubleToFloat(-3.568),doubleToFloat(1.817),doubleToFloat(8.376),doubleToFloat(-5.181),doubleToFloat(4.065),doubleToFloat(5.747),doubleToFloat(5.263),doubleToFloat(0),doubleToFloat(10.73),doubleToFloat(-6.383),doubleToFloat(2.197),doubleToFloat(6.392),doubleToFloat(-5.027),doubleToFloat(4.853),doubleToFloat(7.736),doubleToFloat(-1.238),doubleToFloat(3.99),doubleToFloat(6.837),doubleToFloat(-3.576),doubleToFloat(0),doubleToFloat(6.185),doubleToFloat(-5.428),doubleToFloat(4.709),doubleToFloat(9.654),doubleToFloat(2.787),doubleToFloat(4.171),doubleToFloat(10.54),doubleToFloat(0.9377),doubleToFloat(0),doubleToFloat(11.52),doubleToFloat(3.612),doubleToFloat(1.479),doubleToFloat(0.5426),doubleToFloat(-3.026),doubleToFloat(3.424),doubleToFloat(0.8784),doubleToFloat(-1.742),doubleToFloat(4.212),doubleToFloat(1.889),doubleToFloat(1.14),doubleToFloat(4.344),doubleToFloat(3.942),doubleToFloat(4.297),doubleToFloat(3.751),doubleToFloat(5.336),doubleToFloat(5.265),doubleToFloat(1.863),doubleToFloat(6.322),doubleToFloat(6.374),doubleToFloat(0),doubleToFloat(12.29),doubleToFloat(-8.721),doubleToFloat(0.4456),doubleToFloat(13.39),doubleToFloat(-7.476),doubleToFloat(0.7717),doubleToFloat(13.18),doubleToFloat(-7.72),doubleToFloat(0.8911),doubleToFloat(12.88),doubleToFloat(-8.053),doubleToFloat(0.7717),doubleToFloat(12.59),doubleToFloat(-8.387),doubleToFloat(0.4456),doubleToFloat(12.37),doubleToFloat(-8.631),doubleToFloat(0),doubleToFloat(11.37),doubleToFloat(-8.776),doubleToFloat(0.7717),doubleToFloat(13.28),doubleToFloat(-6.62),doubleToFloat(1.337),doubleToFloat(12.91),doubleToFloat(-7.043),doubleToFloat(1.543),doubleToFloat(12.39),doubleToFloat(-7.621),doubleToFloat(1.337),doubleToFloat(11.88),doubleToFloat(-8.199),doubleToFloat(0.7717),doubleToFloat(11.51),doubleToFloat(-8.622),doubleToFloat(0.8911),doubleToFloat(12.75),doubleToFloat(-5.875),doubleToFloat(1.543),doubleToFloat(12.32),doubleToFloat(-6.363),doubleToFloat(1.782),doubleToFloat(11.73),doubleToFloat(-7.03),doubleToFloat(1.543),doubleToFloat(11.14),doubleToFloat(-7.697),doubleToFloat(0.8911),doubleToFloat(10.7),doubleToFloat(-8.186),doubleToFloat(0.7717),doubleToFloat(11.95),doubleToFloat(-5.439),doubleToFloat(1.337),doubleToFloat(11.57),doubleToFloat(-5.862),doubleToFloat(1.543),doubleToFloat(11.06),doubleToFloat(-6.439),doubleToFloat(1.337),doubleToFloat(10.55),doubleToFloat(-7.017),doubleToFloat(0.7717),doubleToFloat(10.17),doubleToFloat(-7.44),doubleToFloat(0.4456),doubleToFloat(11.08),doubleToFloat(-5.429),doubleToFloat(0.7717),doubleToFloat(10.87),doubleToFloat(-5.673),doubleToFloat(0.8911),doubleToFloat(10.57),doubleToFloat(-6.007),doubleToFloat(0.7717),doubleToFloat(10.28),doubleToFloat(-6.341),doubleToFloat(0.4456),doubleToFloat(10.06),doubleToFloat(-6.585),doubleToFloat(0),doubleToFloat(3.91),doubleToFloat(-5.207),doubleToFloat(0),doubleToFloat(0.5571),doubleToFloat(-3.852),doubleToFloat(0),doubleToFloat(10.23),doubleToFloat(5.374),doubleToFloat(0),doubleToFloat(8.516),doubleToFloat(6.595),doubleToFloat(0),doubleToFloat(7.179),doubleToFloat(6.8),doubleToFloat(0),doubleToFloat(8.083),doubleToFloat(-5.553),doubleToFloat(0),doubleToFloat(13.06),doubleToFloat(-8.212),doubleToFloat(0),doubleToFloat(12.91),doubleToFloat(-5.696),doubleToFloat(0),doubleToFloat(12.08),doubleToFloat(-5.284),doubleToFloat(0),doubleToFloat(11.16),doubleToFloat(-5.34),doubleToFloat(-5.01),doubleToFloat(3.731),doubleToFloat(0.1406),doubleToFloat(-3.965),doubleToFloat(2.67),doubleToFloat(-2.693),doubleToFloat(-4.074),doubleToFloat(4.682),doubleToFloat(-3.332),doubleToFloat(-5.128),doubleToFloat(5.726),doubleToFloat(-0.6174),doubleToFloat(-2.068),doubleToFloat(2.268),doubleToFloat(-4.211),doubleToFloat(-2.221),doubleToFloat(4.094),doubleToFloat(-4.86),doubleToFloat(0),doubleToFloat(2.219),doubleToFloat(-4.634),doubleToFloat(-1.736),doubleToFloat(0.6038),doubleToFloat(-3.374),doubleToFloat(-3.96),doubleToFloat(9.975),doubleToFloat(-1.425),doubleToFloat(-2.659),doubleToFloat(11.19),doubleToFloat(-1.274),doubleToFloat(-2.586),doubleToFloat(11.54),doubleToFloat(1.059),doubleToFloat(-4.171),doubleToFloat(10.54),doubleToFloat(0.9377),doubleToFloat(-1.167),doubleToFloat(10.49),doubleToFloat(-5.662),doubleToFloat(-1.987),doubleToFloat(11.14),doubleToFloat(-3.85),doubleToFloat(-3.414),doubleToFloat(9.136),doubleToFloat(-3.568),doubleToFloat(-2.197),doubleToFloat(6.392),doubleToFloat(-5.027),doubleToFloat(-3.99),doubleToFloat(6.837),doubleToFloat(-3.576),doubleToFloat(-4.853),doubleToFloat(7.736),doubleToFloat(-1.238),doubleToFloat(-2.687),doubleToFloat(9.834),doubleToFloat(5.2),doubleToFloat(-2.779),doubleToFloat(11),doubleToFloat(3.491),doubleToFloat(0),doubleToFloat(12.08),doubleToFloat(1.157),doubleToFloat(-2.334),doubleToFloat(8.188),doubleToFloat(6.341),doubleToFloat(0),doubleToFloat(11.78),doubleToFloat(-1.08),doubleToFloat(0),doubleToFloat(11.68),doubleToFloat(-3.791),doubleToFloat(-1.817),doubleToFloat(8.376),doubleToFloat(-5.181),doubleToFloat(-2),doubleToFloat(6.813),doubleToFloat(6.506),doubleToFloat(-3.688),doubleToFloat(0.9418),doubleToFloat(-1.942),doubleToFloat(-4.509),doubleToFloat(2.071),doubleToFloat(1.014),doubleToFloat(-4.815),doubleToFloat(8.276),doubleToFloat(3.851),doubleToFloat(-4.529),doubleToFloat(6.731),doubleToFloat(5.074),doubleToFloat(-5.27),doubleToFloat(5.229),doubleToFloat(2.998),doubleToFloat(-5.496),doubleToFloat(6.833),doubleToFloat(1.852),doubleToFloat(-4.065),doubleToFloat(5.747),doubleToFloat(5.263),doubleToFloat(-4.648),doubleToFloat(4.179),doubleToFloat(4.238),doubleToFloat(-5.172),doubleToFloat(8.637),doubleToFloat(0.7876),doubleToFloat(-4.709),doubleToFloat(9.654),doubleToFloat(2.787),doubleToFloat(-1.479),doubleToFloat(0.5426),doubleToFloat(-3.026),doubleToFloat(0),doubleToFloat(0.5182),doubleToFloat(-3.38),doubleToFloat(-3.424),doubleToFloat(0.8784),doubleToFloat(-1.742),doubleToFloat(-4.212),doubleToFloat(1.889),doubleToFloat(1.14),doubleToFloat(-4.344),doubleToFloat(3.942),doubleToFloat(4.297),doubleToFloat(-3.751),doubleToFloat(5.336),doubleToFloat(5.265),doubleToFloat(-1.863),doubleToFloat(6.322),doubleToFloat(6.374),doubleToFloat(0),doubleToFloat(6.681),doubleToFloat(6.643),doubleToFloat(0),doubleToFloat(13.47),doubleToFloat(-7.386),doubleToFloat(-0.4456),doubleToFloat(13.39),doubleToFloat(-7.476),doubleToFloat(-0.7717),doubleToFloat(13.18),doubleToFloat(-7.72),doubleToFloat(-0.8911),doubleToFloat(12.88),doubleToFloat(-8.053),doubleToFloat(-0.7717),doubleToFloat(12.59),doubleToFloat(-8.387),doubleToFloat(-0.4456),doubleToFloat(12.37),doubleToFloat(-8.631),doubleToFloat(0),doubleToFloat(13.42),doubleToFloat(-6.465),doubleToFloat(-0.7717),doubleToFloat(13.28),doubleToFloat(-6.62),doubleToFloat(-1.337),doubleToFloat(12.91),doubleToFloat(-7.043),doubleToFloat(-1.543),doubleToFloat(12.39),doubleToFloat(-7.621),doubleToFloat(-1.337),doubleToFloat(11.88),doubleToFloat(-8.199),doubleToFloat(-0.7717),doubleToFloat(11.51),doubleToFloat(-8.622),doubleToFloat(-0.8911),doubleToFloat(12.75),doubleToFloat(-5.875),doubleToFloat(-1.543),doubleToFloat(12.32),doubleToFloat(-6.363),doubleToFloat(-1.782),doubleToFloat(11.73),doubleToFloat(-7.03),doubleToFloat(-1.543),doubleToFloat(11.14),doubleToFloat(-7.697),doubleToFloat(-0.8911),doubleToFloat(10.7),doubleToFloat(-8.186),doubleToFloat(0),doubleToFloat(10.55),doubleToFloat(-8.364),doubleToFloat(-0.7717),doubleToFloat(11.95),doubleToFloat(-5.439),doubleToFloat(-1.337),doubleToFloat(11.57),doubleToFloat(-5.862),doubleToFloat(-1.543),doubleToFloat(11.06),doubleToFloat(-6.439),doubleToFloat(-1.337),doubleToFloat(10.55),doubleToFloat(-7.017),doubleToFloat(-0.7717),doubleToFloat(10.17),doubleToFloat(-7.44),doubleToFloat(0),doubleToFloat(10.04),doubleToFloat(-7.595),doubleToFloat(-0.4456),doubleToFloat(11.08),doubleToFloat(-5.429),doubleToFloat(-0.7717),doubleToFloat(10.87),doubleToFloat(-5.673),doubleToFloat(-0.8911),doubleToFloat(10.57),doubleToFloat(-6.007),doubleToFloat(-0.7717),doubleToFloat(10.28),doubleToFloat(-6.341),doubleToFloat(-0.4456),doubleToFloat(10.06),doubleToFloat(-6.585),doubleToFloat(0),doubleToFloat(9.981),doubleToFloat(-6.674),doubleToFloat(0),doubleToFloat(10.39),doubleToFloat(-5.849)], Java.type("float[]"))))
                          .setTexCoord(new TextureCoordinate().setPoint(Java.to([doubleToFloat(0.0714),doubleToFloat(0.7634),doubleToFloat(0.0438),doubleToFloat(0.7489),doubleToFloat(0.0432),doubleToFloat(0.7344),doubleToFloat(0.071),doubleToFloat(0.7309),doubleToFloat(0.3314),doubleToFloat(0.7261),doubleToFloat(0.2498),doubleToFloat(0.753),doubleToFloat(0.2361),doubleToFloat(0.7162),doubleToFloat(0.3067),doubleToFloat(0.6925),doubleToFloat(0.1815),doubleToFloat(0.7717),doubleToFloat(0.1711),doubleToFloat(0.7262),doubleToFloat(0.3712),doubleToFloat(0.6404),doubleToFloat(0.3987),doubleToFloat(0.7199),doubleToFloat(0.1256),doubleToFloat(0.768),doubleToFloat(0.1218),doubleToFloat(0.7289),doubleToFloat(0.2067),doubleToFloat(0.9489),doubleToFloat(0.1485),doubleToFloat(0.9512),doubleToFloat(0.1438),doubleToFloat(0.8779),doubleToFloat(0.1986),doubleToFloat(0.8711),doubleToFloat(0.0676),doubleToFloat(0.8097),doubleToFloat(0.3568),doubleToFloat(0.7726),doubleToFloat(0.2644),doubleToFloat(0.803),doubleToFloat(0.1935),doubleToFloat(0.8207),doubleToFloat(0.2599),doubleToFloat(0.6327),doubleToFloat(0.1854),doubleToFloat(0.6646),doubleToFloat(0.1444),doubleToFloat(0.6271),doubleToFloat(0.1972),doubleToFloat(0.5951),doubleToFloat(0.143),doubleToFloat(0.6803),doubleToFloat(0.1158),doubleToFloat(0.6442),doubleToFloat(0.0817),doubleToFloat(0.6803),doubleToFloat(0.1358),doubleToFloat(0.8157),doubleToFloat(0.0747),doubleToFloat(0.8797),doubleToFloat(0.3481),doubleToFloat(0.823),doubleToFloat(0.368),doubleToFloat(0.8682),doubleToFloat(0.2893),doubleToFloat(0.934),doubleToFloat(0.2757),doubleToFloat(0.8544),doubleToFloat(0.1065),doubleToFloat(0.6948),doubleToFloat(0.3067),doubleToFloat(0.5966),doubleToFloat(0.3679),doubleToFloat(0.5476),doubleToFloat(0.39),doubleToFloat(0.5117),doubleToFloat(0.2432),doubleToFloat(0.5483),doubleToFloat(0.2764),doubleToFloat(0.5481),doubleToFloat(0.0773),doubleToFloat(0.9478),doubleToFloat(0.3045),doubleToFloat(0.54),doubleToFloat(0.3258),doubleToFloat(0.5018),doubleToFloat(0.3707),doubleToFloat(0.8663),doubleToFloat(0.418),doubleToFloat(0.7731),doubleToFloat(0.0206),doubleToFloat(0.9439),doubleToFloat(0.0268),doubleToFloat(0.8055),doubleToFloat(0.0498),doubleToFloat(0.6614),doubleToFloat(0.1577),doubleToFloat(0.5496),doubleToFloat(0.3316),doubleToFloat(0.4816),doubleToFloat(0.0224),doubleToFloat(0.7388),doubleToFloat(0.027),doubleToFloat(0.723),doubleToFloat(0.0238),doubleToFloat(0.8661),doubleToFloat(0.3936),doubleToFloat(0.4762),doubleToFloat(0.0773),doubleToFloat(0.6149),doubleToFloat(0.1039),doubleToFloat(0.5852),doubleToFloat(0.2005),doubleToFloat(0.5262),doubleToFloat(0.0225),doubleToFloat(0.7367),doubleToFloat(0.0269),doubleToFloat(0.7687),doubleToFloat(0.0358),doubleToFloat(0.7033),doubleToFloat(0.0234),doubleToFloat(0.7507),doubleToFloat(0.3679),doubleToFloat(0.5476),doubleToFloat(0.3067),doubleToFloat(0.5966),doubleToFloat(0.0714),doubleToFloat(0.7634),doubleToFloat(0.0438),doubleToFloat(0.7489),doubleToFloat(0.0432),doubleToFloat(0.7344),doubleToFloat(0.071),doubleToFloat(0.7309),doubleToFloat(0.3314),doubleToFloat(0.7261),doubleToFloat(0.2498),doubleToFloat(0.753),doubleToFloat(0.2361),doubleToFloat(0.7162),doubleToFloat(0.3067),doubleToFloat(0.6925),doubleToFloat(0.1815),doubleToFloat(0.7717),doubleToFloat(0.1711),doubleToFloat(0.7262),doubleToFloat(0.3712),doubleToFloat(0.6404),doubleToFloat(0.3987),doubleToFloat(0.7199),doubleToFloat(0.1256),doubleToFloat(0.768),doubleToFloat(0.1218),doubleToFloat(0.7289),doubleToFloat(0.2067),doubleToFloat(0.9489),doubleToFloat(0.1485),doubleToFloat(0.9512),doubleToFloat(0.1438),doubleToFloat(0.8779),doubleToFloat(0.1986),doubleToFloat(0.8711),doubleToFloat(0.0676),doubleToFloat(0.8097),doubleToFloat(0.0268),doubleToFloat(0.8055),doubleToFloat(0.0269),doubleToFloat(0.7687),doubleToFloat(0.3568),doubleToFloat(0.7726),doubleToFloat(0.2644),doubleToFloat(0.803),doubleToFloat(0.1935),doubleToFloat(0.8207),doubleToFloat(0.2599),doubleToFloat(0.6327),doubleToFloat(0.1854),doubleToFloat(0.6646),doubleToFloat(0.1444),doubleToFloat(0.6271),doubleToFloat(0.1972),doubleToFloat(0.5951),doubleToFloat(0.143),doubleToFloat(0.6803),doubleToFloat(0.1158),doubleToFloat(0.6442),doubleToFloat(0.0817),doubleToFloat(0.6803),doubleToFloat(0.0498),doubleToFloat(0.6614),doubleToFloat(0.0773),doubleToFloat(0.6149),doubleToFloat(0.1358),doubleToFloat(0.8157),doubleToFloat(0.0747),doubleToFloat(0.8797),doubleToFloat(0.0238),doubleToFloat(0.8661),doubleToFloat(0.3481),doubleToFloat(0.823),doubleToFloat(0.368),doubleToFloat(0.8682),doubleToFloat(0.2893),doubleToFloat(0.934),doubleToFloat(0.2757),doubleToFloat(0.8544),doubleToFloat(0.0234),doubleToFloat(0.7507),doubleToFloat(0.1065),doubleToFloat(0.6948),doubleToFloat(0.3067),doubleToFloat(0.5966),doubleToFloat(0.1577),doubleToFloat(0.5496),doubleToFloat(0.2005),doubleToFloat(0.5262),doubleToFloat(0.2432),doubleToFloat(0.5483),doubleToFloat(0.2764),doubleToFloat(0.5481),doubleToFloat(0.0773),doubleToFloat(0.9478),doubleToFloat(0.1039),doubleToFloat(0.5852),doubleToFloat(0.39),doubleToFloat(0.5117),doubleToFloat(0.3679),doubleToFloat(0.5476),doubleToFloat(0.3045),doubleToFloat(0.54),doubleToFloat(0.3258),doubleToFloat(0.5018),doubleToFloat(0.3707),doubleToFloat(0.8663),doubleToFloat(0.418),doubleToFloat(0.7731),doubleToFloat(0.0224),doubleToFloat(0.7388),doubleToFloat(0.0225),doubleToFloat(0.7367),doubleToFloat(0.027),doubleToFloat(0.723),doubleToFloat(0.0206),doubleToFloat(0.9439),doubleToFloat(0.3316),doubleToFloat(0.4816),doubleToFloat(0.3936),doubleToFloat(0.4762),doubleToFloat(0.0358),doubleToFloat(0.7033),doubleToFloat(0.3679),doubleToFloat(0.5476),doubleToFloat(0.3067),doubleToFloat(0.5966),doubleToFloat(0.8934),doubleToFloat(0.2713),doubleToFloat(0.9305),doubleToFloat(0.2712),doubleToFloat(0.9059),doubleToFloat(0.2338),doubleToFloat(0.9348),doubleToFloat(0.2356),doubleToFloat(0.8628),doubleToFloat(0.2683),doubleToFloat(0.8847),doubleToFloat(0.2317),doubleToFloat(0.9348),doubleToFloat(0.2356),doubleToFloat(0.9059),doubleToFloat(0.2338),doubleToFloat(0.8847),doubleToFloat(0.2317),doubleToFloat(0.9348),doubleToFloat(0.2356),doubleToFloat(0.9059),doubleToFloat(0.2338),doubleToFloat(0.8847),doubleToFloat(0.2317),doubleToFloat(0.9059),doubleToFloat(0.2338),doubleToFloat(0.9348),doubleToFloat(0.2356),doubleToFloat(0.8847),doubleToFloat(0.2317),doubleToFloat(0.9348),doubleToFloat(0.2356),doubleToFloat(0.9348),doubleToFloat(0.2356),doubleToFloat(0.9348),doubleToFloat(0.2356),doubleToFloat(0.9348),doubleToFloat(0.2356),doubleToFloat(0.8934),doubleToFloat(0.2713),doubleToFloat(0.9305),doubleToFloat(0.2712),doubleToFloat(0.8628),doubleToFloat(0.2683),doubleToFloat(0.8636),doubleToFloat(0.2296),doubleToFloat(0.8636),doubleToFloat(0.2296),doubleToFloat(0.8636),doubleToFloat(0.2296),doubleToFloat(0.8636),doubleToFloat(0.2296),doubleToFloat(0.8322),doubleToFloat(0.2652),doubleToFloat(0.8322),doubleToFloat(0.2652),doubleToFloat(0.9168),doubleToFloat(0.0808),doubleToFloat(0.8993),doubleToFloat(0.1056),doubleToFloat(0.8759),doubleToFloat(0.0803),doubleToFloat(0.888),doubleToFloat(0.0632),doubleToFloat(0.8379),doubleToFloat(0.1147),doubleToFloat(0.8144),doubleToFloat(0.1331),doubleToFloat(0.8378),doubleToFloat(0.1668),doubleToFloat(0.8072),doubleToFloat(0.1847),doubleToFloat(0.7911),doubleToFloat(0.1453),doubleToFloat(0.7456),doubleToFloat(0.1529),doubleToFloat(0.7468),doubleToFloat(0.1968),doubleToFloat(0.8841),doubleToFloat(0.1249),doubleToFloat(0.9168),doubleToFloat(0.0808),doubleToFloat(0.8993),doubleToFloat(0.1056),doubleToFloat(0.8934),doubleToFloat(0.2713),doubleToFloat(0.9305),doubleToFloat(0.2712),doubleToFloat(0.9348),doubleToFloat(0.2356),doubleToFloat(0.9059),doubleToFloat(0.2338),doubleToFloat(0.8847),doubleToFloat(0.2317),doubleToFloat(0.8628),doubleToFloat(0.2683),doubleToFloat(0.9348),doubleToFloat(0.2356),doubleToFloat(0.9059),doubleToFloat(0.2338),doubleToFloat(0.8847),doubleToFloat(0.2317),doubleToFloat(0.9348),doubleToFloat(0.2356),doubleToFloat(0.9059),doubleToFloat(0.2338),doubleToFloat(0.8847),doubleToFloat(0.2317),doubleToFloat(0.9348),doubleToFloat(0.2356),doubleToFloat(0.9059),doubleToFloat(0.2338),doubleToFloat(0.8847),doubleToFloat(0.2317),doubleToFloat(0.8636),doubleToFloat(0.2296),doubleToFloat(0.8636),doubleToFloat(0.2296),doubleToFloat(0.9348),doubleToFloat(0.2356),doubleToFloat(0.9348),doubleToFloat(0.2356),doubleToFloat(0.9348),doubleToFloat(0.2356),doubleToFloat(0.9348),doubleToFloat(0.2356),doubleToFloat(0.8934),doubleToFloat(0.2713),doubleToFloat(0.9305),doubleToFloat(0.2712),doubleToFloat(0.8322),doubleToFloat(0.2652),doubleToFloat(0.8322),doubleToFloat(0.2652),doubleToFloat(0.8628),doubleToFloat(0.2683),doubleToFloat(0.8636),doubleToFloat(0.2296),doubleToFloat(0.8636),doubleToFloat(0.2296),doubleToFloat(0.9168),doubleToFloat(0.0808),doubleToFloat(0.8993),doubleToFloat(0.1056),doubleToFloat(0.8759),doubleToFloat(0.0803),doubleToFloat(0.888),doubleToFloat(0.0632),doubleToFloat(0.8144),doubleToFloat(0.1331),doubleToFloat(0.8378),doubleToFloat(0.1668),doubleToFloat(0.8072),doubleToFloat(0.1847),doubleToFloat(0.7911),doubleToFloat(0.1453),doubleToFloat(0.8841),doubleToFloat(0.1249),doubleToFloat(0.8379),doubleToFloat(0.1147),doubleToFloat(0.7456),doubleToFloat(0.1529),doubleToFloat(0.7468),doubleToFloat(0.1968),doubleToFloat(0.9168),doubleToFloat(0.0808),doubleToFloat(0.8993),doubleToFloat(0.1056),doubleToFloat(0.8188),doubleToFloat(0.0815),doubleToFloat(0.7709),doubleToFloat(0.0832),doubleToFloat(0.7923),doubleToFloat(0.0858),doubleToFloat(0.7979),doubleToFloat(0.1034),doubleToFloat(0.7785),doubleToFloat(0.1104),doubleToFloat(0.7662),doubleToFloat(0.0373),doubleToFloat(0.7703),doubleToFloat(0.06),doubleToFloat(0.7403),doubleToFloat(0.0555),doubleToFloat(0.7379),doubleToFloat(0.0282),doubleToFloat(0.7444),doubleToFloat(0.117),doubleToFloat(0.7979),doubleToFloat(0.0586),doubleToFloat(0.7432),doubleToFloat(0.0852),doubleToFloat(0.8458),doubleToFloat(0.0493),doubleToFloat(0.8235),doubleToFloat(0.0467),doubleToFloat(0.6353),doubleToFloat(0.0614),doubleToFloat(0.6546),doubleToFloat(0.0821),doubleToFloat(0.7148),doubleToFloat(0.0869),doubleToFloat(0.71),doubleToFloat(0.1144),doubleToFloat(0.6743),doubleToFloat(0.1018),doubleToFloat(0.6921),doubleToFloat(0.0855),doubleToFloat(0.6978),doubleToFloat(0.0293),doubleToFloat(0.7058),doubleToFloat(0.0571),doubleToFloat(0.6789),doubleToFloat(0.0652),doubleToFloat(0.6204),doubleToFloat(0.048),doubleToFloat(0.6594),doubleToFloat(0.0352),doubleToFloat(0.8379),doubleToFloat(0.1147),doubleToFloat(0.888),doubleToFloat(0.0632),doubleToFloat(0.8144),doubleToFloat(0.1331),doubleToFloat(0.7911),doubleToFloat(0.1453),doubleToFloat(0.8759),doubleToFloat(0.0803),doubleToFloat(0.6114),doubleToFloat(0.0855),doubleToFloat(0.5975),doubleToFloat(0.0597),doubleToFloat(0.6271),doubleToFloat(0.108),doubleToFloat(0.6559),doubleToFloat(0.1272),doubleToFloat(0.6998),doubleToFloat(0.1495),doubleToFloat(0.7456),doubleToFloat(0.1529),doubleToFloat(0.5828),doubleToFloat(0.7987),doubleToFloat(0.547),doubleToFloat(0.844),doubleToFloat(0.5346),doubleToFloat(0.8122),doubleToFloat(0.6713),doubleToFloat(0.8344),doubleToFloat(0.7091),doubleToFloat(0.8309),doubleToFloat(0.5862),doubleToFloat(0.8382),doubleToFloat(0.6343),doubleToFloat(0.835),doubleToFloat(0.6688),doubleToFloat(0.7954),doubleToFloat(0.6364),doubleToFloat(0.796),doubleToFloat(0.6636),doubleToFloat(0.7584),doubleToFloat(0.6908),doubleToFloat(0.7532),doubleToFloat(0.7046),doubleToFloat(0.7902),doubleToFloat(0.4948),doubleToFloat(0.8341),doubleToFloat(0.5157),doubleToFloat(0.7891),doubleToFloat(0.6249),doubleToFloat(0.764),doubleToFloat(0.5074),doubleToFloat(0.8645),doubleToFloat(0.553),doubleToFloat(0.8788),doubleToFloat(0.5355),doubleToFloat(0.9333),doubleToFloat(0.4974),doubleToFloat(0.9188),doubleToFloat(0.4517),doubleToFloat(0.8634),doubleToFloat(0.472),doubleToFloat(0.8958),doubleToFloat(0.581),doubleToFloat(0.9118),doubleToFloat(0.5747),doubleToFloat(0.9393),doubleToFloat(0.656),doubleToFloat(0.949),doubleToFloat(0.6192),doubleToFloat(0.948),doubleToFloat(0.6192),doubleToFloat(0.9082),doubleToFloat(0.6599),doubleToFloat(0.9101),doubleToFloat(0.6916),doubleToFloat(0.9144),doubleToFloat(0.478),doubleToFloat(0.9587),doubleToFloat(0.443),doubleToFloat(0.9277),doubleToFloat(0.4841),doubleToFloat(0.8194),doubleToFloat(0.4476),doubleToFloat(0.8432),doubleToFloat(0.5258),doubleToFloat(0.9789),doubleToFloat(0.4177),doubleToFloat(0.8838),doubleToFloat(0.5713),doubleToFloat(0.984),doubleToFloat(0.6235),doubleToFloat(0.9793),doubleToFloat(0.6725),doubleToFloat(0.9619),doubleToFloat(0.5695),doubleToFloat(0.7661),doubleToFloat(0.4127),doubleToFloat(0.8533),doubleToFloat(0.6656),doubleToFloat(0.8753),doubleToFloat(0.5901),doubleToFloat(0.8705),doubleToFloat(0.629),doubleToFloat(0.8721),doubleToFloat(0.7033),doubleToFloat(0.8783),doubleToFloat(0.5186),doubleToFloat(0.8891),doubleToFloat(0.5424),doubleToFloat(0.9106),doubleToFloat(0.6842),doubleToFloat(0.7412),doubleToFloat(0.6577),doubleToFloat(0.7467),doubleToFloat(0.6207),doubleToFloat(0.755),doubleToFloat(0.565),doubleToFloat(0.7597),doubleToFloat(0.5118),doubleToFloat(0.7838),doubleToFloat(0.4814),doubleToFloat(0.8125),doubleToFloat(0.4473),doubleToFloat(0.8352),doubleToFloat(0.4142),doubleToFloat(0.8403),doubleToFloat(0.2705),doubleToFloat(0.4135),doubleToFloat(0.2852),doubleToFloat(0.4209),doubleToFloat(0.2836),doubleToFloat(0.4194),doubleToFloat(0.2792),doubleToFloat(0.4156),doubleToFloat(0.2733),doubleToFloat(0.4103),doubleToFloat(0.2673),doubleToFloat(0.4051),doubleToFloat(0.263),doubleToFloat(0.4012),doubleToFloat(0.2614),doubleToFloat(0.3998),doubleToFloat(0.3016),doubleToFloat(0.4199),doubleToFloat(0.2988),doubleToFloat(0.4174),doubleToFloat(0.2913),doubleToFloat(0.4107),doubleToFloat(0.281),doubleToFloat(0.4016),doubleToFloat(0.2707),doubleToFloat(0.3925),doubleToFloat(0.2632),doubleToFloat(0.3859),doubleToFloat(0.2604),doubleToFloat(0.3834),doubleToFloat(0.3153),doubleToFloat(0.4108),doubleToFloat(0.3121),doubleToFloat(0.408),doubleToFloat(0.3034),doubleToFloat(0.4003),doubleToFloat(0.2915),doubleToFloat(0.3898),doubleToFloat(0.2796),doubleToFloat(0.3792),doubleToFloat(0.2709),doubleToFloat(0.3715),doubleToFloat(0.2677),doubleToFloat(0.3687),doubleToFloat(0.3226),doubleToFloat(0.3961),doubleToFloat(0.3198),doubleToFloat(0.3937),doubleToFloat(0.3123),doubleToFloat(0.387),doubleToFloat(0.302),doubleToFloat(0.3779),doubleToFloat(0.2917),doubleToFloat(0.3688),doubleToFloat(0.2842),doubleToFloat(0.3621),doubleToFloat(0.2814),doubleToFloat(0.3597),doubleToFloat(0.3216),doubleToFloat(0.3797),doubleToFloat(0.32),doubleToFloat(0.3783),doubleToFloat(0.3157),doubleToFloat(0.3744),doubleToFloat(0.3097),doubleToFloat(0.3692),doubleToFloat(0.3038),doubleToFloat(0.3639),doubleToFloat(0.2994),doubleToFloat(0.3601),doubleToFloat(0.2978),doubleToFloat(0.3587),doubleToFloat(0.3125),doubleToFloat(0.366),doubleToFloat(0.5828),doubleToFloat(0.7987),doubleToFloat(0.6364),doubleToFloat(0.796),doubleToFloat(0.6343),doubleToFloat(0.835),doubleToFloat(0.5862),doubleToFloat(0.8382),doubleToFloat(0.6688),doubleToFloat(0.7954),doubleToFloat(0.6713),doubleToFloat(0.8344),doubleToFloat(0.7091),doubleToFloat(0.8309),doubleToFloat(0.7046),doubleToFloat(0.7902),doubleToFloat(0.6636),doubleToFloat(0.7584),doubleToFloat(0.6908),doubleToFloat(0.7532),doubleToFloat(0.581),doubleToFloat(0.9118),doubleToFloat(0.5747),doubleToFloat(0.9393),doubleToFloat(0.5355),doubleToFloat(0.9333),doubleToFloat(0.5424),doubleToFloat(0.9106),doubleToFloat(0.656),doubleToFloat(0.949),doubleToFloat(0.6192),doubleToFloat(0.948),doubleToFloat(0.6192),doubleToFloat(0.9082),doubleToFloat(0.7033),doubleToFloat(0.8783),doubleToFloat(0.6656),doubleToFloat(0.8753),doubleToFloat(0.629),doubleToFloat(0.8721),doubleToFloat(0.5901),doubleToFloat(0.8705),doubleToFloat(0.472),doubleToFloat(0.8958),doubleToFloat(0.4974),doubleToFloat(0.9188),doubleToFloat(0.478),doubleToFloat(0.9587),doubleToFloat(0.443),doubleToFloat(0.9277),doubleToFloat(0.5258),doubleToFloat(0.9789),doubleToFloat(0.4177),doubleToFloat(0.8838),doubleToFloat(0.4517),doubleToFloat(0.8634),doubleToFloat(0.5713),doubleToFloat(0.984),doubleToFloat(0.6235),doubleToFloat(0.9793),doubleToFloat(0.6725),doubleToFloat(0.9619),doubleToFloat(0.6599),doubleToFloat(0.9101),doubleToFloat(0.4476),doubleToFloat(0.8432),doubleToFloat(0.4127),doubleToFloat(0.8533),doubleToFloat(0.6916),doubleToFloat(0.9144),doubleToFloat(0.6249),doubleToFloat(0.764),doubleToFloat(0.5695),doubleToFloat(0.7661),doubleToFloat(0.5074),doubleToFloat(0.8645),doubleToFloat(0.4948),doubleToFloat(0.8341),doubleToFloat(0.5346),doubleToFloat(0.8122),doubleToFloat(0.547),doubleToFloat(0.844),doubleToFloat(0.4841),doubleToFloat(0.8194),doubleToFloat(0.5157),doubleToFloat(0.7891),doubleToFloat(0.553),doubleToFloat(0.8788),doubleToFloat(0.5186),doubleToFloat(0.8891),doubleToFloat(0.6577),doubleToFloat(0.7467),doubleToFloat(0.6842),doubleToFloat(0.7412),doubleToFloat(0.6207),doubleToFloat(0.755),doubleToFloat(0.565),doubleToFloat(0.7597),doubleToFloat(0.5118),doubleToFloat(0.7838),doubleToFloat(0.4814),doubleToFloat(0.8125),doubleToFloat(0.4473),doubleToFloat(0.8352),doubleToFloat(0.4142),doubleToFloat(0.8403),doubleToFloat(0.2705),doubleToFloat(0.4135),doubleToFloat(0.2852),doubleToFloat(0.4209),doubleToFloat(0.2836),doubleToFloat(0.4194),doubleToFloat(0.2792),doubleToFloat(0.4156),doubleToFloat(0.2733),doubleToFloat(0.4103),doubleToFloat(0.2673),doubleToFloat(0.4051),doubleToFloat(0.263),doubleToFloat(0.4012),doubleToFloat(0.2614),doubleToFloat(0.3998),doubleToFloat(0.3016),doubleToFloat(0.4199),doubleToFloat(0.2988),doubleToFloat(0.4174),doubleToFloat(0.2913),doubleToFloat(0.4107),doubleToFloat(0.281),doubleToFloat(0.4016),doubleToFloat(0.2707),doubleToFloat(0.3925),doubleToFloat(0.2632),doubleToFloat(0.3859),doubleToFloat(0.2604),doubleToFloat(0.3834),doubleToFloat(0.3153),doubleToFloat(0.4108),doubleToFloat(0.3121),doubleToFloat(0.408),doubleToFloat(0.3034),doubleToFloat(0.4003),doubleToFloat(0.2915),doubleToFloat(0.3898),doubleToFloat(0.2796),doubleToFloat(0.3792),doubleToFloat(0.2709),doubleToFloat(0.3715),doubleToFloat(0.2677),doubleToFloat(0.3687),doubleToFloat(0.3226),doubleToFloat(0.3961),doubleToFloat(0.3198),doubleToFloat(0.3937),doubleToFloat(0.3123),doubleToFloat(0.387),doubleToFloat(0.302),doubleToFloat(0.3779),doubleToFloat(0.2917),doubleToFloat(0.3688),doubleToFloat(0.2842),doubleToFloat(0.3621),doubleToFloat(0.2814),doubleToFloat(0.3597),doubleToFloat(0.3216),doubleToFloat(0.3797),doubleToFloat(0.32),doubleToFloat(0.3783),doubleToFloat(0.3157),doubleToFloat(0.3744),doubleToFloat(0.3097),doubleToFloat(0.3692),doubleToFloat(0.3038),doubleToFloat(0.3639),doubleToFloat(0.2994),doubleToFloat(0.3601),doubleToFloat(0.2978),doubleToFloat(0.3587),doubleToFloat(0.3125),doubleToFloat(0.366)], Java.type("float[]"))))))))))))
          .addJoints(new HAnimJoint("hanim_Da").setContainerFieldOverride("joints").setUSE("hanim_humanoid_root"))
          .addJoints(new HAnimJoint("hanim_Da").setContainerFieldOverride("joints").setUSE("hanim_sacroiliac"))
          .addJoints(new HAnimJoint("hanim_Da").setContainerFieldOverride("joints").setUSE("hanim_skullbase"))
          .addJoints(new HAnimJoint("hanim_Da").setContainerFieldOverride("joints").setUSE("hanim_vl5"))
          .addJoints(new HAnimJoint("hanim_Da").setContainerFieldOverride("joints").setUSE("hanim_l_elbow"))
          .addJoints(new HAnimJoint("hanim_Da").setContainerFieldOverride("joints").setUSE("hanim_r_elbow"))
          .addJoints(new HAnimJoint("hanim_Da").setContainerFieldOverride("joints").setUSE("hanim_l_hip"))
          .addJoints(new HAnimJoint("hanim_Da").setContainerFieldOverride("joints").setUSE("hanim_r_hip"))
          .addJoints(new HAnimJoint("hanim_Da").setContainerFieldOverride("joints").setUSE("hanim_l_knee"))
          .addJoints(new HAnimJoint("hanim_Da").setContainerFieldOverride("joints").setUSE("hanim_r_knee"))
          .addJoints(new HAnimJoint("hanim_Da").setContainerFieldOverride("joints").setUSE("hanim_l_metatarsophalangeal_2"))
          .addJoints(new HAnimJoint("hanim_Da").setContainerFieldOverride("joints").setUSE("hanim_r_metatarsophalangeal_2"))
          .addJoints(new HAnimJoint("hanim_Da").setContainerFieldOverride("joints").setUSE("hanim_l_radiocarpal"))
          .addJoints(new HAnimJoint("hanim_Da").setContainerFieldOverride("joints").setUSE("hanim_r_radiocarpal"))
          .addJoints(new HAnimJoint("hanim_Da").setContainerFieldOverride("joints").setUSE("hanim_l_shoulder"))
          .addJoints(new HAnimJoint("hanim_Da").setContainerFieldOverride("joints").setUSE("hanim_r_shoulder"))
          .addJoints(new HAnimJoint("hanim_Da").setContainerFieldOverride("joints").setUSE("hanim_l_talocrural"))
          .addJoints(new HAnimJoint("hanim_Da").setContainerFieldOverride("joints").setUSE("hanim_r_talocrural"))
          .addSegments(new HAnimSegment("hanim_Da").setContainerFieldOverride("segments").setUSE("hanim_l5"))
          .addSegments(new HAnimSegment("hanim_Da").setContainerFieldOverride("segments").setUSE("hanim_pelvis"))
          .addSegments(new HAnimSegment("hanim_Da").setContainerFieldOverride("segments").setUSE("hanim_sacrum"))
          .addSegments(new HAnimSegment("hanim_Da").setContainerFieldOverride("segments").setUSE("hanim_skull"))
          .addSegments(new HAnimSegment("hanim_Da").setContainerFieldOverride("segments").setUSE("hanim_l_calf"))
          .addSegments(new HAnimSegment("hanim_Da").setContainerFieldOverride("segments").setUSE("hanim_r_calf"))
          .addSegments(new HAnimSegment("hanim_Da").setContainerFieldOverride("segments").setUSE("hanim_l_carpal"))
          .addSegments(new HAnimSegment("hanim_Da").setContainerFieldOverride("segments").setUSE("hanim_r_carpal"))
          .addSegments(new HAnimSegment("hanim_Da").setContainerFieldOverride("segments").setUSE("hanim_l_forearm"))
          .addSegments(new HAnimSegment("hanim_Da").setContainerFieldOverride("segments").setUSE("hanim_r_forearm"))
          .addSegments(new HAnimSegment("hanim_Da").setContainerFieldOverride("segments").setUSE("hanim_l_talus"))
          .addSegments(new HAnimSegment("hanim_Da").setContainerFieldOverride("segments").setUSE("hanim_r_talus"))
          .addSegments(new HAnimSegment("hanim_Da").setContainerFieldOverride("segments").setUSE("hanim_l_tarsal_proximal_phalanx_2"))
          .addSegments(new HAnimSegment("hanim_Da").setContainerFieldOverride("segments").setUSE("hanim_r_tarsal_proximal_phalanx_2"))
          .addSegments(new HAnimSegment("hanim_Da").setContainerFieldOverride("segments").setUSE("hanim_l_thigh"))
          .addSegments(new HAnimSegment("hanim_Da").setContainerFieldOverride("segments").setUSE("hanim_r_thigh"))
          .addSegments(new HAnimSegment("hanim_Da").setContainerFieldOverride("segments").setUSE("hanim_l_upperarm"))
          .addSegments(new HAnimSegment("hanim_Da").setContainerFieldOverride("segments").setUSE("hanim_r_upperarm"))))      ;
    X3D0.toFileX3D("../data/KoreanCharacter08Da.new.graal.x3d");
    X3D0.toFileJSON("../data/KoreanCharacter08Da.new.graal.json");
