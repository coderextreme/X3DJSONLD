load('X3Dautoclass.js');
var ConfigurationProperties = Packages.org.web3d.x3d.jsail.ConfigurationProperties;
ConfigurationProperties.showDefaultAttributes = false;
ConfigurationProperties.xsltEngine = ConfigurationProperties.XSLT_ENGINE_NATIVE_JAVA;
ConfigurationProperties.deleteIntermediateFiles = false;
ConfigurationProperties.setStripTrailingZeroes(true);
function doubleToFloat(d) {
    if (Float32Array)
	return new Float32Array([d])[0];
}
      var X3D0 =  new X3D().setProfile("Interchange").setVersion("3.3")
      .setHead(new head()
        .addMeta(new meta().setName("title").setContent("ArchHalf.x3d"))
        .addMeta(new meta().setName("description").setContent("Create a half arch with parameters clearSpanWidth=4; riseHeight=2; depth=3; topAbutmentHeight=0.5; pierWidth=0.5; pierHeight=1. Parameter clearSpanWidth measure refers to a full arc, consider clearSpanWidth/2 for the archHalf width. Modify them with Transform > scale or editing the IndexedFileSet node. See the reference file ArchModelingDiagrams.pdf and the ArchScript_more_readable.js script to find further information."))
        .addMeta(new meta().setName("creator").setContent("Michele Foti, Don Brutzman"))
        .addMeta(new meta().setName("created").setContent("15 December 2014"))
        .addMeta(new meta().setName("modified").setContent("16 February 2016"))
        .addMeta(new meta().setName("reference").setContent("ArchModelingDiagrams.pdf"))
        .addMeta(new meta().setName("reference").setContent("https://en.wikipedia.org/wiki/Arch"))
        .addMeta(new meta().setName("identifier").setContent("http://X3dGraphics.com/examples/X3dForAdvancedModeling/Buildings/ArchHalf.x3d"))
        .addMeta(new meta().setName("generator").setContent("X3D-Edit 3.3, https://savage.nps.edu/X3D-Edit"))
        .addMeta(new meta().setName("license").setContent("../license.html")))
      .setScene(new Scene()
        .addChild(new Shape().setDEF("Arch")
          .addComments(new CommentsBlock("note that convex='false' (meaning concave geometry) is crucial for this IFS of a geometric chord to render properly"))
          .setGeometry(new IndexedFaceSet().setDEF("ArchIndex").setConvex(false).setCoordIndex(Java.to([31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,144,-1,149,31,144,147,-1,134,147,144,145,-1,145,144,62,141,-1,132,133,141,62,-1,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,143,-1,148,94,143,146,-1,142,128,146,143,-1,140,125,143,142,-1,125,126,127,140,-1,31,94,95,32,-1,32,95,96,33,-1,33,96,97,34,-1,34,97,98,35,-1,35,98,99,36,-1,36,99,100,37,-1,37,100,101,38,-1,38,101,102,39,-1,39,102,103,40,-1,40,103,104,41,-1,41,104,105,42,-1,42,105,106,43,-1,43,106,107,44,-1,44,107,108,45,-1,45,108,109,46,-1,46,109,110,47,-1,47,110,111,48,-1,48,111,112,49,-1,49,112,113,50,-1,50,113,114,51,-1,51,114,115,52,-1,52,115,116,53,-1,53,116,117,54,-1,54,117,118,55,-1,55,118,119,56,-1,56,119,120,57,-1,57,120,121,58,-1,58,121,122,59,-1,59,122,123,60,-1,60,123,124,61,-1,61,124,125,62,-1,148,149,147,146,-1,146,147,134,128,-1,128,134,145,142,-1,140,141,145,142,-1,127,133,141,140,-1,127,126,132,133,-1,126,132,62,125,-1,31,94,143,144,-1,142,143,144,145,-1,140,125,62,141,-1,31,94,148,149,-1], Java.type("int[]"))).setSolid(false)
            .setCoord(new Coordinate().setDEF("ArchChord").setPoint(Java.to([doubleToFloat(2),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1.997498435543818),doubleToFloat(0.1),doubleToFloat(0),doubleToFloat(1.98997487421324),doubleToFloat(0.2),doubleToFloat(0),doubleToFloat(1.977371993328519),doubleToFloat(0.3),doubleToFloat(0),doubleToFloat(1.9595917942265424),doubleToFloat(0.4),doubleToFloat(0),doubleToFloat(1.9364916731037085),doubleToFloat(0.5),doubleToFloat(0),doubleToFloat(1.907878402833891),doubleToFloat(0.6),doubleToFloat(0),doubleToFloat(1.8734993995195193),doubleToFloat(0.7),doubleToFloat(0),doubleToFloat(1.833030277982336),doubleToFloat(0.8),doubleToFloat(0),doubleToFloat(1.786057109949175),doubleToFloat(0.9),doubleToFloat(0),doubleToFloat(1.7320508075688774),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1.6703293088490068),doubleToFloat(1.1),doubleToFloat(0),doubleToFloat(1.6),doubleToFloat(1.2),doubleToFloat(0),doubleToFloat(1.5198684153570663),doubleToFloat(1.3),doubleToFloat(0),doubleToFloat(1.42828568570857),doubleToFloat(1.4),doubleToFloat(0),doubleToFloat(1.3228756555322954),doubleToFloat(1.5),doubleToFloat(0),doubleToFloat(1.2),doubleToFloat(1.6),doubleToFloat(0),doubleToFloat(1.0535653752852738),doubleToFloat(1.7),doubleToFloat(0),doubleToFloat(0.9020947843768965),doubleToFloat(1.785),doubleToFloat(0),doubleToFloat(0.7599342076785331),doubleToFloat(1.85),doubleToFloat(0),doubleToFloat(0.6244997998398398),doubleToFloat(1.9),doubleToFloat(0),doubleToFloat(0.5425633603552678),doubleToFloat(1.925),doubleToFloat(0),doubleToFloat(0.4444097208657794),doubleToFloat(1.95),doubleToFloat(0),doubleToFloat(0.36181625170796194),doubleToFloat(1.967),doubleToFloat(0),doubleToFloat(0.2821347195933173),doubleToFloat(1.98),doubleToFloat(0),doubleToFloat(0.19974984355438344),doubleToFloat(1.99),doubleToFloat(0),doubleToFloat(0.16718552568927703),doubleToFloat(1.993),doubleToFloat(0),doubleToFloat(0.14133294025102577),doubleToFloat(1.995),doubleToFloat(0),doubleToFloat(0.10950342460398416),doubleToFloat(1.997),doubleToFloat(0),doubleToFloat(0.08942035562443253),doubleToFloat(1.998),doubleToFloat(0),doubleToFloat(0.06323764701505419),doubleToFloat(1.999),doubleToFloat(0),doubleToFloat(0),doubleToFloat(2),doubleToFloat(0),doubleToFloat(-0.06323764701505419),doubleToFloat(1.999),doubleToFloat(0),doubleToFloat(-0.08942035562443253),doubleToFloat(1.998),doubleToFloat(0),doubleToFloat(-0.10950342460398416),doubleToFloat(1.997),doubleToFloat(0),doubleToFloat(-0.14133294025102577),doubleToFloat(1.995),doubleToFloat(0),doubleToFloat(-0.16718552568927703),doubleToFloat(1.993),doubleToFloat(0),doubleToFloat(-0.19974984355438344),doubleToFloat(1.99),doubleToFloat(0),doubleToFloat(-0.2821347195933173),doubleToFloat(1.98),doubleToFloat(0),doubleToFloat(-0.36181625170796194),doubleToFloat(1.967),doubleToFloat(0),doubleToFloat(-0.4444097208657794),doubleToFloat(1.95),doubleToFloat(0),doubleToFloat(-0.5425633603552678),doubleToFloat(1.925),doubleToFloat(0),doubleToFloat(-0.6244997998398398),doubleToFloat(1.9),doubleToFloat(0),doubleToFloat(-0.7599342076785331),doubleToFloat(1.85),doubleToFloat(0),doubleToFloat(-0.9020947843768965),doubleToFloat(1.785),doubleToFloat(0),doubleToFloat(-1.0535653752852738),doubleToFloat(1.7),doubleToFloat(0),doubleToFloat(-1.2),doubleToFloat(1.6),doubleToFloat(0),doubleToFloat(-1.3228756555322954),doubleToFloat(1.5),doubleToFloat(0),doubleToFloat(-1.42828568570857),doubleToFloat(1.4),doubleToFloat(0),doubleToFloat(-1.5198684153570663),doubleToFloat(1.3),doubleToFloat(0),doubleToFloat(-1.6),doubleToFloat(1.2),doubleToFloat(0),doubleToFloat(-1.6703293088490068),doubleToFloat(1.1),doubleToFloat(0),doubleToFloat(-1.7320508075688774),doubleToFloat(1),doubleToFloat(0),doubleToFloat(-1.786057109949175),doubleToFloat(0.9),doubleToFloat(0),doubleToFloat(-1.833030277982336),doubleToFloat(0.8),doubleToFloat(0),doubleToFloat(-1.8734993995195193),doubleToFloat(0.7),doubleToFloat(0),doubleToFloat(-1.907878402833891),doubleToFloat(0.6),doubleToFloat(0),doubleToFloat(-1.9364916731037085),doubleToFloat(0.5),doubleToFloat(0),doubleToFloat(-1.9595917942265424),doubleToFloat(0.4),doubleToFloat(0),doubleToFloat(-1.977371993328519),doubleToFloat(0.3),doubleToFloat(0),doubleToFloat(-1.98997487421324),doubleToFloat(0.2),doubleToFloat(0),doubleToFloat(-1.997498435543818),doubleToFloat(0.1),doubleToFloat(0),doubleToFloat(-2),doubleToFloat(0),doubleToFloat(0),doubleToFloat(2),doubleToFloat(0),doubleToFloat(3),doubleToFloat(1.997498435543818),doubleToFloat(0.1),doubleToFloat(3),doubleToFloat(1.98997487421324),doubleToFloat(0.2),doubleToFloat(3),doubleToFloat(1.977371993328519),doubleToFloat(0.3),doubleToFloat(3),doubleToFloat(1.9595917942265424),doubleToFloat(0.4),doubleToFloat(3),doubleToFloat(1.9364916731037085),doubleToFloat(0.5),doubleToFloat(3),doubleToFloat(1.907878402833891),doubleToFloat(0.6),doubleToFloat(3),doubleToFloat(1.8734993995195193),doubleToFloat(0.7),doubleToFloat(3),doubleToFloat(1.833030277982336),doubleToFloat(0.8),doubleToFloat(3),doubleToFloat(1.786057109949175),doubleToFloat(0.9),doubleToFloat(3),doubleToFloat(1.7320508075688774),doubleToFloat(1),doubleToFloat(3),doubleToFloat(1.6703293088490068),doubleToFloat(1.1),doubleToFloat(3),doubleToFloat(1.6),doubleToFloat(1.2),doubleToFloat(3),doubleToFloat(1.5198684153570663),doubleToFloat(1.3),doubleToFloat(3),doubleToFloat(1.42828568570857),doubleToFloat(1.4),doubleToFloat(3),doubleToFloat(1.3228756555322954),doubleToFloat(1.5),doubleToFloat(3),doubleToFloat(1.2),doubleToFloat(1.6),doubleToFloat(3),doubleToFloat(1.0535653752852738),doubleToFloat(1.7),doubleToFloat(3),doubleToFloat(0.9020947843768965),doubleToFloat(1.785),doubleToFloat(3),doubleToFloat(0.7599342076785331),doubleToFloat(1.85),doubleToFloat(3),doubleToFloat(0.6244997998398398),doubleToFloat(1.9),doubleToFloat(3),doubleToFloat(0.5425633603552678),doubleToFloat(1.925),doubleToFloat(3),doubleToFloat(0.4444097208657794),doubleToFloat(1.95),doubleToFloat(3),doubleToFloat(0.36181625170796194),doubleToFloat(1.967),doubleToFloat(3),doubleToFloat(0.2821347195933173),doubleToFloat(1.98),doubleToFloat(3),doubleToFloat(0.19974984355438344),doubleToFloat(1.99),doubleToFloat(3),doubleToFloat(0.16718552568927703),doubleToFloat(1.993),doubleToFloat(3),doubleToFloat(0.14133294025102577),doubleToFloat(1.995),doubleToFloat(3),doubleToFloat(0.10950342460398416),doubleToFloat(1.997),doubleToFloat(3),doubleToFloat(0.08942035562443253),doubleToFloat(1.998),doubleToFloat(3),doubleToFloat(0.06323764701505419),doubleToFloat(1.999),doubleToFloat(3),doubleToFloat(0),doubleToFloat(2),doubleToFloat(3),doubleToFloat(-0.06323764701505419),doubleToFloat(1.999),doubleToFloat(3),doubleToFloat(-0.08942035562443253),doubleToFloat(1.998),doubleToFloat(3),doubleToFloat(-0.10950342460398416),doubleToFloat(1.997),doubleToFloat(3),doubleToFloat(-0.14133294025102577),doubleToFloat(1.995),doubleToFloat(3),doubleToFloat(-0.16718552568927703),doubleToFloat(1.993),doubleToFloat(3),doubleToFloat(-0.19974984355438344),doubleToFloat(1.99),doubleToFloat(3),doubleToFloat(-0.2821347195933173),doubleToFloat(1.98),doubleToFloat(3),doubleToFloat(-0.36181625170796194),doubleToFloat(1.967),doubleToFloat(3),doubleToFloat(-0.4444097208657794),doubleToFloat(1.95),doubleToFloat(3),doubleToFloat(-0.5425633603552678),doubleToFloat(1.925),doubleToFloat(3),doubleToFloat(-0.6244997998398398),doubleToFloat(1.9),doubleToFloat(3),doubleToFloat(-0.7599342076785331),doubleToFloat(1.85),doubleToFloat(3),doubleToFloat(-0.9020947843768965),doubleToFloat(1.785),doubleToFloat(3),doubleToFloat(-1.0535653752852738),doubleToFloat(1.7),doubleToFloat(3),doubleToFloat(-1.2),doubleToFloat(1.6),doubleToFloat(3),doubleToFloat(-1.3228756555322954),doubleToFloat(1.5),doubleToFloat(3),doubleToFloat(-1.42828568570857),doubleToFloat(1.4),doubleToFloat(3),doubleToFloat(-1.5198684153570663),doubleToFloat(1.3),doubleToFloat(3),doubleToFloat(-1.6),doubleToFloat(1.2),doubleToFloat(3),doubleToFloat(-1.6703293088490068),doubleToFloat(1.1),doubleToFloat(3),doubleToFloat(-1.7320508075688774),doubleToFloat(1),doubleToFloat(3),doubleToFloat(-1.786057109949175),doubleToFloat(0.9),doubleToFloat(3),doubleToFloat(-1.833030277982336),doubleToFloat(0.8),doubleToFloat(3),doubleToFloat(-1.8734993995195193),doubleToFloat(0.7),doubleToFloat(3),doubleToFloat(-1.907878402833891),doubleToFloat(0.6),doubleToFloat(3),doubleToFloat(-1.9364916731037085),doubleToFloat(0.5),doubleToFloat(3),doubleToFloat(-1.9595917942265424),doubleToFloat(0.4),doubleToFloat(3),doubleToFloat(-1.977371993328519),doubleToFloat(0.3),doubleToFloat(3),doubleToFloat(-1.98997487421324),doubleToFloat(0.2),doubleToFloat(3),doubleToFloat(-1.997498435543818),doubleToFloat(0.1),doubleToFloat(3),doubleToFloat(-2),doubleToFloat(0),doubleToFloat(3),doubleToFloat(-2),doubleToFloat(-1),doubleToFloat(3),doubleToFloat(-2.5),doubleToFloat(-1),doubleToFloat(3),doubleToFloat(-2.5),doubleToFloat(2.5),doubleToFloat(3),doubleToFloat(2.5),doubleToFloat(2.5),doubleToFloat(3),doubleToFloat(2.5),doubleToFloat(-1),doubleToFloat(3),doubleToFloat(2),doubleToFloat(-1),doubleToFloat(3),doubleToFloat(-2),doubleToFloat(-1),doubleToFloat(0),doubleToFloat(-2.5),doubleToFloat(-1),doubleToFloat(0),doubleToFloat(-2.5),doubleToFloat(2.5),doubleToFloat(0),doubleToFloat(2.5),doubleToFloat(2.5),doubleToFloat(0),doubleToFloat(2.5),doubleToFloat(-1),doubleToFloat(0),doubleToFloat(2),doubleToFloat(-1),doubleToFloat(0),doubleToFloat(2.5),doubleToFloat(0),doubleToFloat(3),doubleToFloat(2.5),doubleToFloat(0),doubleToFloat(0),doubleToFloat(-2.5),doubleToFloat(0),doubleToFloat(3),doubleToFloat(-2.5),doubleToFloat(0),doubleToFloat(0),doubleToFloat(-2.5),doubleToFloat(2),doubleToFloat(3),doubleToFloat(-2),doubleToFloat(2),doubleToFloat(3),doubleToFloat(-2),doubleToFloat(2),doubleToFloat(0),doubleToFloat(-2.5),doubleToFloat(2),doubleToFloat(0),doubleToFloat(-2),doubleToFloat(2.5),doubleToFloat(3),doubleToFloat(-2),doubleToFloat(2.5),doubleToFloat(0),doubleToFloat(0),doubleToFloat(2.5),doubleToFloat(3),doubleToFloat(0),doubleToFloat(2.5),doubleToFloat(0),doubleToFloat(2),doubleToFloat(2),doubleToFloat(3),doubleToFloat(2.5),doubleToFloat(2),doubleToFloat(3),doubleToFloat(2.5),doubleToFloat(2),doubleToFloat(0),doubleToFloat(2),doubleToFloat(2),doubleToFloat(0),doubleToFloat(2),doubleToFloat(2.5),doubleToFloat(3),doubleToFloat(2),doubleToFloat(2.5),doubleToFloat(0)], Java.type("float[]")))))
          .setAppearance(new Appearance()
            .setMaterial(new Material().setDEF("MaterialNode").setDiffuseColor(Java.to([doubleToFloat(1),doubleToFloat(0.75),doubleToFloat(0.25)], Java.type("float[]")))))))      ;
    X3D0.toFileX3D("../data/ArchHalf.new.graal.x3d");
    X3D0.toFileJSON("../data/ArchHalf.new.graal.json");
