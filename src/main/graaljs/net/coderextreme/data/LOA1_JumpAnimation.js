load('X3Dautoclass.js');
var ConfigurationProperties = Packages.org.web3d.x3d.jsail.ConfigurationProperties;
ConfigurationProperties.showDefaultAttributes = false;
ConfigurationProperties.xsltEngine = ConfigurationProperties.XSLT_ENGINE_NATIVE_JAVA;
ConfigurationProperties.deleteIntermediateFiles = false;
ConfigurationProperties.setStripTrailingZeroes(true);
function doubleToFloat(d) {
    if (Float32Array)
	return new Float32Array([d])[0];
}
      var X3D0 =  new X3D().setProfile("Immersive").setVersion("3.3")
      .setHead(new head()
        .addMeta(new meta().setName("title").setContent("LOA1_JumpAnimation.x3d"))
        .addMeta(new meta().setName("description").setContent("Humanoid animation prototype reusable by any Humanoid."))
        .addMeta(new meta().setName("creator").setContent("Cindy Ballreich cindy@ballreich.net 3Name3D"))
        .addMeta(new meta().setName("rights").setContent("1997 3Name3D / Yglesias, Wallock, Divekar, Inc., all rights reserved."))
        .addMeta(new meta().setName("translator").setContent("Scott Tufts"))
        .addMeta(new meta().setName("translated").setContent("1 December 2001"))
        .addMeta(new meta().setName("modified").setContent("23 May 2020"))
        .addMeta(new meta().setName("reference").setContent("http://www.ballreich.net/vrml/HAnim/nancy_HAnim.wrl"))
        .addMeta(new meta().setName("reference").setContent("http://www.HAnim.org"))
        .addMeta(new meta().setName("reference").setContent("http://HAnim.org/Models"))
        .addMeta(new meta().setName("reference").setContent("http://HAnim.org/Nodes"))
        .addMeta(new meta().setName("subject").setContent("InterchangableActorsViaDynamicRouting Nancy jump Animation HAnim 2001"))
        .addMeta(new meta().setName("identifier").setContent("https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Prototypes/LOA1_JumpAnimation.x3d"))
        .addMeta(new meta().setName("generator").setContent("X3D-Edit 3.3, https://savage.nps.edu/X3D-Edit"))
        .addMeta(new meta().setName("license").setContent("../license.html")))
      .setScene(new Scene()
        .addChild(new WorldInfo().setTitle("LOA1_JumpAnimation.x3d"))
        .addChild(new ProtoDeclare().setName("LOA1_JumpAnimation")
          .setProtoInterface(new ProtoInterface()
            .addField(new field().setType(field.TYPE_SFTIME).setName("cycleInterval").setAccessType(field.ACCESSTYPE_INPUTOUTPUT).setValue("2"))
            .addField(new field().setType(field.TYPE_SFBOOL).setName("enabled").setAccessType(field.ACCESSTYPE_INPUTOUTPUT).setValue("true"))
            .addField(new field().setType(field.TYPE_SFBOOL).setName("loop").setAccessType(field.ACCESSTYPE_INPUTOUTPUT).setValue("true"))
            .addField(new field().setType(field.TYPE_SFTIME).setName("startTime").setAccessType(field.ACCESSTYPE_INPUTOUTPUT).setValue("0"))
            .addField(new field().setType(field.TYPE_SFTIME).setName("stopTime").setAccessType(field.ACCESSTYPE_INPUTOUTPUT).setValue("-1"))
            .addField(new field().setType(field.TYPE_SFFLOAT).setName("fraction_changed").setAccessType(field.ACCESSTYPE_OUTPUTONLY))
            .addField(new field().setType(field.TYPE_SFBOOL).setName("isActive").setAccessType(field.ACCESSTYPE_OUTPUTONLY))
            .addField(new field().setType(field.TYPE_SFVEC3F).setName("HumanoidRoot_translation_changed").setAccessType(field.ACCESSTYPE_OUTPUTONLY))
            .addField(new field().setType(field.TYPE_SFROTATION).setName("HumanoidRoot_rotation_changed").setAccessType(field.ACCESSTYPE_OUTPUTONLY))
            .addField(new field().setType(field.TYPE_SFROTATION).setName("lower_body_rotation_changed").setAccessType(field.ACCESSTYPE_OUTPUTONLY))
            .addField(new field().setType(field.TYPE_SFROTATION).setName("l_hip_rotation_changed").setAccessType(field.ACCESSTYPE_OUTPUTONLY))
            .addField(new field().setType(field.TYPE_SFROTATION).setName("l_knee_rotation_changed").setAccessType(field.ACCESSTYPE_OUTPUTONLY))
            .addField(new field().setType(field.TYPE_SFROTATION).setName("l_ankle_rotation_changed").setAccessType(field.ACCESSTYPE_OUTPUTONLY))
            .addField(new field().setType(field.TYPE_SFROTATION).setName("l_midtarsal_rotation_changed").setAccessType(field.ACCESSTYPE_OUTPUTONLY))
            .addField(new field().setType(field.TYPE_SFROTATION).setName("r_hip_rotation_changed").setAccessType(field.ACCESSTYPE_OUTPUTONLY))
            .addField(new field().setType(field.TYPE_SFROTATION).setName("r_knee_rotation_changed").setAccessType(field.ACCESSTYPE_OUTPUTONLY))
            .addField(new field().setType(field.TYPE_SFROTATION).setName("r_ankle_rotation_changed").setAccessType(field.ACCESSTYPE_OUTPUTONLY))
            .addField(new field().setType(field.TYPE_SFROTATION).setName("r_midtarsal_rotation_changed").setAccessType(field.ACCESSTYPE_OUTPUTONLY))
            .addField(new field().setType(field.TYPE_SFROTATION).setName("vl5_rotation_changed").setAccessType(field.ACCESSTYPE_OUTPUTONLY))
            .addField(new field().setType(field.TYPE_SFROTATION).setName("skullbase_rotation_changed").setAccessType(field.ACCESSTYPE_OUTPUTONLY))
            .addField(new field().setType(field.TYPE_SFROTATION).setName("l_shoulder_rotation_changed").setAccessType(field.ACCESSTYPE_OUTPUTONLY))
            .addField(new field().setType(field.TYPE_SFROTATION).setName("l_elbow_rotation_changed").setAccessType(field.ACCESSTYPE_OUTPUTONLY))
            .addField(new field().setType(field.TYPE_SFROTATION).setName("l_wrist_rotation_changed").setAccessType(field.ACCESSTYPE_OUTPUTONLY))
            .addField(new field().setType(field.TYPE_SFROTATION).setName("r_shoulder_rotation_changed").setAccessType(field.ACCESSTYPE_OUTPUTONLY))
            .addField(new field().setType(field.TYPE_SFROTATION).setName("r_elbow_rotation_changed").setAccessType(field.ACCESSTYPE_OUTPUTONLY))
            .addField(new field().setType(field.TYPE_SFROTATION).setName("r_wrist_rotation_changed").setAccessType(field.ACCESSTYPE_OUTPUTONLY)))
          .setProtoBody(new ProtoBody()
            .addChild(new Group()
              .addChild(new TimeSensor().setDEF("TIMER").setLoop(true)
                .setIS(new IS()
                  .addConnect(new connect().setNodeField("cycleInterval").setProtoField("cycleInterval"))
                  .addConnect(new connect().setNodeField("enabled").setProtoField("enabled"))
                  .addConnect(new connect().setNodeField("loop").setProtoField("loop"))
                  .addConnect(new connect().setNodeField("startTime").setProtoField("startTime"))
                  .addConnect(new connect().setNodeField("stopTime").setProtoField("stopTime"))
                  .addConnect(new connect().setNodeField("fraction_changed").setProtoField("fraction_changed"))
                  .addConnect(new connect().setNodeField("isActive").setProtoField("isActive"))))
              .addChild(new PositionInterpolator().setDEF("HUMANOIDROOT_POSITION_ANIMATOR").setKey(Java.to([doubleToFloat(0),doubleToFloat(0.04),doubleToFloat(0.08),doubleToFloat(0.12),doubleToFloat(0.16),doubleToFloat(0.2),doubleToFloat(0.24),doubleToFloat(0.28),doubleToFloat(0.32),doubleToFloat(0.36),doubleToFloat(0.4),doubleToFloat(0.44),doubleToFloat(0.48),doubleToFloat(0.64),doubleToFloat(0.76),doubleToFloat(0.8),doubleToFloat(0.84),doubleToFloat(0.88),doubleToFloat(0.92),doubleToFloat(0.96),doubleToFloat(1)], Java.type("float[]"))).setKeyValue(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(-0.01264),doubleToFloat(-0.01289),doubleToFloat(0),doubleToFloat(-0.04712),doubleToFloat(-0.03738),doubleToFloat(-0.0003345),doubleToFloat(-0.1049),doubleToFloat(-0.05353),doubleToFloat(-0.0005712),doubleToFloat(-0.1892),doubleToFloat(-0.06561),doubleToFloat(-0.0008233),doubleToFloat(-0.286),doubleToFloat(-0.06276),doubleToFloat(-0.0009591),doubleToFloat(-0.3795),doubleToFloat(-0.05148),doubleToFloat(-0.00106),doubleToFloat(-0.4484),doubleToFloat(-0.03656),doubleToFloat(-0.00106),doubleToFloat(-0.4484),doubleToFloat(-0.03656),doubleToFloat(-0.001122),doubleToFloat(-0.3269),doubleToFloat(-0.1499),doubleToFloat(-0.0008616),doubleToFloat(-0.13),doubleToFloat(-0.06358),doubleToFloat(-0.0005128),doubleToFloat(-0.03123),doubleToFloat(-0.05488),doubleToFloat(0.0004779),doubleToFloat(0.053),doubleToFloat(0.02732),doubleToFloat(0.0001728),doubleToFloat(0.4148),doubleToFloat(0.006873),doubleToFloat(0),doubleToFloat(0.03045),doubleToFloat(0.02148),doubleToFloat(0),doubleToFloat(-0.01299),doubleToFloat(-0.01057),doubleToFloat(0),doubleToFloat(-0.06932),doubleToFloat(-0.01064),doubleToFloat(0.0001365),doubleToFloat(-0.1037),doubleToFloat(-0.005059),doubleToFloat(0.0001279),doubleToFloat(-0.07198),doubleToFloat(-0.007596),doubleToFloat(0.000141),doubleToFloat(-0.01626),doubleToFloat(-0.004935),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0)], Java.type("float[]")))
                .setIS(new IS()
                  .addConnect(new connect().setNodeField("value_changed").setProtoField("HumanoidRoot_translation_changed"))))
              .addChild(new OrientationInterpolator().setDEF("HUMANOIDROOT_ANIMATOR").setKey(Java.to([doubleToFloat(0),doubleToFloat(0.28),doubleToFloat(0.32),doubleToFloat(0.48),doubleToFloat(0.64),doubleToFloat(0.76),doubleToFloat(1)], Java.type("float[]"))).setKeyValue(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.3273),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.3273),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0)], Java.type("float[]")))
                .setIS(new IS()
                  .addConnect(new connect().setNodeField("value_changed").setProtoField("HumanoidRoot_rotation_changed"))))
              .addChild(new OrientationInterpolator().setDEF("SACROILIAC_ANIMATOR").setKey(Java.to([doubleToFloat(0),doubleToFloat(0.28),doubleToFloat(0.32),doubleToFloat(0.48),doubleToFloat(0.76),doubleToFloat(1)], Java.type("float[]"))).setKeyValue(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.1892),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.1892),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0)], Java.type("float[]")))
                .setIS(new IS()
                  .addConnect(new connect().setNodeField("value_changed").setProtoField("lower_body_rotation_changed"))))
              .addChild(new OrientationInterpolator().setDEF("L_HIP_ANIMATOR").setKey(Java.to([doubleToFloat(0),doubleToFloat(0.28),doubleToFloat(0.32),doubleToFloat(0.36),doubleToFloat(0.4),doubleToFloat(0.44),doubleToFloat(0.48),doubleToFloat(0.64),doubleToFloat(0.76),doubleToFloat(0.88),doubleToFloat(1)], Java.type("float[]"))).setKeyValue(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(4.349),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(4.349),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(4.615),doubleToFloat(-1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.9136),doubleToFloat(-1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.3614),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(-1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.7869),doubleToFloat(-1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.3918),doubleToFloat(-1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.5433),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0)], Java.type("float[]")))
                .setIS(new IS()
                  .addConnect(new connect().setNodeField("value_changed").setProtoField("l_hip_rotation_changed"))))
              .addChild(new OrientationInterpolator().setDEF("L_KNEE_ANIMATOR").setKey(Java.to([doubleToFloat(0),doubleToFloat(0.28),doubleToFloat(0.32),doubleToFloat(0.48),doubleToFloat(0.64),doubleToFloat(0.76),doubleToFloat(0.88),doubleToFloat(1)], Java.type("float[]"))).setKeyValue(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(2.047),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(2.047),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1.566),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.5913),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.9235),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0)], Java.type("float[]")))
                .setIS(new IS()
                  .addConnect(new connect().setNodeField("value_changed").setProtoField("l_knee_rotation_changed"))))
              .addChild(new OrientationInterpolator().setDEF("L_ANKLE_ANIMATOR").setKey(Java.to([doubleToFloat(0),doubleToFloat(0.28),doubleToFloat(0.32),doubleToFloat(0.36),doubleToFloat(0.4),doubleToFloat(0.44),doubleToFloat(0.48),doubleToFloat(0.64),doubleToFloat(0.76),doubleToFloat(0.84),doubleToFloat(0.88),doubleToFloat(0.92),doubleToFloat(0.96),doubleToFloat(1)], Java.type("float[]"))).setKeyValue(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(-1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.625),doubleToFloat(-1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.625),doubleToFloat(-1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.3364),doubleToFloat(-1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.2742),doubleToFloat(-1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.05078),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.2833),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.6667),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.2833),doubleToFloat(-1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.2108),doubleToFloat(-1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.375),doubleToFloat(-1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.3146),doubleToFloat(-1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.1174),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0)], Java.type("float[]")))
                .setIS(new IS()
                  .addConnect(new connect().setNodeField("value_changed").setProtoField("l_ankle_rotation_changed"))))
              .addChild(new OrientationInterpolator().setDEF("L_MIDTARSAL_ANIMATOR").setKey(Java.to([doubleToFloat(0),doubleToFloat(0.5),doubleToFloat(1)], Java.type("float[]"))).setKeyValue(Java.to([doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(-0.2),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0)], Java.type("float[]")))
                .setIS(new IS()
                  .addConnect(new connect().setNodeField("value_changed").setProtoField("l_midtarsal_rotation_changed"))))
              .addChild(new OrientationInterpolator().setDEF("R_HIP_ANIMATOR").setKey(Java.to([doubleToFloat(0),doubleToFloat(0.28),doubleToFloat(0.32),doubleToFloat(0.36),doubleToFloat(0.4),doubleToFloat(0.44),doubleToFloat(0.48),doubleToFloat(0.64),doubleToFloat(0.76),doubleToFloat(0.88),doubleToFloat(1)], Java.type("float[]"))).setKeyValue(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(4.433),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(4.433),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(4.647),doubleToFloat(-1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.8943),doubleToFloat(-1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.3698),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(-1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.4963),doubleToFloat(-1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.3829),doubleToFloat(-1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.5169),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0)], Java.type("float[]")))
                .setIS(new IS()
                  .addConnect(new connect().setNodeField("value_changed").setProtoField("r_hip_rotation_changed"))))
              .addChild(new OrientationInterpolator().setDEF("R_KNEE_ANIMATOR").setKey(Java.to([doubleToFloat(0),doubleToFloat(0.28),doubleToFloat(0.32),doubleToFloat(0.48),doubleToFloat(0.64),doubleToFloat(0.76),doubleToFloat(0.88),doubleToFloat(1)], Java.type("float[]"))).setKeyValue(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(2.005),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(2.005),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.9507),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.5845),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.9054),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0)], Java.type("float[]")))
                .setIS(new IS()
                  .addConnect(new connect().setNodeField("value_changed").setProtoField("r_knee_rotation_changed"))))
              .addChild(new OrientationInterpolator().setDEF("R_ANKLE_ANIMATOR").setKey(Java.to([doubleToFloat(0),doubleToFloat(0.28),doubleToFloat(0.32),doubleToFloat(0.36),doubleToFloat(0.4),doubleToFloat(0.44),doubleToFloat(0.48),doubleToFloat(0.64),doubleToFloat(0.76),doubleToFloat(0.84),doubleToFloat(0.88),doubleToFloat(0.92),doubleToFloat(0.96),doubleToFloat(1)], Java.type("float[]"))).setKeyValue(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(-1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.6735),doubleToFloat(-1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.6735),doubleToFloat(-1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.3527),doubleToFloat(-1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.3038),doubleToFloat(-1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.07964),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.3001),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.6509),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.3001),doubleToFloat(-1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.2087),doubleToFloat(-1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.3756),doubleToFloat(-1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.3279),doubleToFloat(-1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.1193),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0)], Java.type("float[]")))
                .setIS(new IS()
                  .addConnect(new connect().setNodeField("value_changed").setProtoField("r_ankle_rotation_changed"))))
              .addChild(new OrientationInterpolator().setDEF("R_MIDTARSAL_ANIMATOR").setKey(Java.to([doubleToFloat(0),doubleToFloat(0.5),doubleToFloat(1)], Java.type("float[]"))).setKeyValue(Java.to([doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(-0.2),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(-0.2)], Java.type("float[]")))
                .setIS(new IS()
                  .addConnect(new connect().setNodeField("value_changed").setProtoField("r_midtarsal_rotation_changed"))))
              .addChild(new OrientationInterpolator().setDEF("VL5_ANIMATOR").setKey(Java.to([doubleToFloat(0),doubleToFloat(0.2083),doubleToFloat(0.375),doubleToFloat(0.75),doubleToFloat(0.8333),doubleToFloat(1)], Java.type("float[]"))).setKeyValue(Java.to([doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0.0826),doubleToFloat(-0.01972),doubleToFloat(-0.5974),doubleToFloat(0.8017),doubleToFloat(0.08231),doubleToFloat(0.009296),doubleToFloat(-0.9648),doubleToFloat(0.2627),doubleToFloat(0.1734),doubleToFloat(-0.01238),doubleToFloat(0.9549),doubleToFloat(-0.2968),doubleToFloat(0.08732),doubleToFloat(-0.008125),doubleToFloat(0.9691),doubleToFloat(-0.2463),doubleToFloat(0.158),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0.0826)], Java.type("float[]")))
                .setIS(new IS()
                  .addConnect(new connect().setNodeField("value_changed").setProtoField("vl5_rotation_changed"))))
              .addChild(new OrientationInterpolator().setDEF("SKULLBASE_ANIMATOR").setKey(Java.to([doubleToFloat(0),doubleToFloat(0.28),doubleToFloat(0.32),doubleToFloat(0.48),doubleToFloat(0.76),doubleToFloat(1)], Java.type("float[]"))).setKeyValue(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(-1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.5989),doubleToFloat(-1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.5989),doubleToFloat(-1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.3216),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.06503),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0)], Java.type("float[]")))
                .setIS(new IS()
                  .addConnect(new connect().setNodeField("value_changed").setProtoField("skullbase_rotation_changed"))))
              .addChild(new OrientationInterpolator().setDEF("L_SHOULDER_ANIMATOR").setKey(Java.to([doubleToFloat(0),doubleToFloat(0.28),doubleToFloat(0.32),doubleToFloat(0.64),doubleToFloat(0.76),doubleToFloat(0.88),doubleToFloat(1)], Java.type("float[]"))).setKeyValue(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(-0.9987),doubleToFloat(0.02554),doubleToFloat(0.04498),doubleToFloat(1.57),doubleToFloat(-0.9987),doubleToFloat(0.02554),doubleToFloat(0.04498),doubleToFloat(1.57),doubleToFloat(1),doubleToFloat(0.0004113),doubleToFloat(0.003055),doubleToFloat(4.114),doubleToFloat(-0.8413),doubleToFloat(0.3238),doubleToFloat(0.4329),doubleToFloat(1.453),doubleToFloat(-0.877),doubleToFloat(0.4198),doubleToFloat(0.2337),doubleToFloat(0.6009),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0)], Java.type("float[]")))
                .setIS(new IS()
                  .addConnect(new connect().setNodeField("value_changed").setProtoField("l_shoulder_rotation_changed"))))
              .addChild(new OrientationInterpolator().setDEF("L_ELBOW_ANIMATOR").setKey(Java.to([doubleToFloat(0),doubleToFloat(0.28),doubleToFloat(0.32),doubleToFloat(0.64),doubleToFloat(0.76),doubleToFloat(1)], Java.type("float[]"))).setKeyValue(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(-1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.1229),doubleToFloat(-1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.1229),doubleToFloat(-1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.5976),doubleToFloat(-1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.3917),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0)], Java.type("float[]")))
                .setIS(new IS()
                  .addConnect(new connect().setNodeField("value_changed").setProtoField("l_elbow_rotation_changed"))))
              .addChild(new OrientationInterpolator().setDEF("L_WRIST_ANIMATOR").setKey(Java.to([doubleToFloat(0),doubleToFloat(0.28),doubleToFloat(0.32),doubleToFloat(0.64),doubleToFloat(0.76),doubleToFloat(0.88),doubleToFloat(1)], Java.type("float[]"))).setKeyValue(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0.0672928),doubleToFloat(0.989475),doubleToFloat(-0.128107),doubleToFloat(4.15574),doubleToFloat(0.0672928),doubleToFloat(0.989475),doubleToFloat(-0.128107),doubleToFloat(4.15574),doubleToFloat(0.00364942),doubleToFloat(0.999901),doubleToFloat(0.0135896),doubleToFloat(4.5822),doubleToFloat(0),doubleToFloat(-1),doubleToFloat(0),doubleToFloat(0.655922),doubleToFloat(-0.00050618),doubleToFloat(-0.999999),doubleToFloat(0.0012782),doubleToFloat(1.28397),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0)], Java.type("float[]")))
                .setIS(new IS()
                  .addConnect(new connect().setNodeField("value_changed").setProtoField("l_wrist_rotation_changed"))))
              .addChild(new OrientationInterpolator().setDEF("R_SHOULDER_ANIMATOR").setKey(Java.to([doubleToFloat(0),doubleToFloat(0.28),doubleToFloat(0.32),doubleToFloat(0.64),doubleToFloat(0.76),doubleToFloat(0.88),doubleToFloat(1)], Java.type("float[]"))).setKeyValue(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0.9992),doubleToFloat(0.02042),doubleToFloat(0.03558),doubleToFloat(4.688),doubleToFloat(0.9992),doubleToFloat(0.02042),doubleToFloat(0.03558),doubleToFloat(4.688),doubleToFloat(0.9989),doubleToFloat(-0.04623),doubleToFloat(0.005159),doubleToFloat(4.079),doubleToFloat(-0.8687),doubleToFloat(-0.2525),doubleToFloat(-0.4261),doubleToFloat(1.501),doubleToFloat(-0.941),doubleToFloat(-0.2893),doubleToFloat(-0.1754),doubleToFloat(0.4788),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0)], Java.type("float[]")))
                .setIS(new IS()
                  .addConnect(new connect().setNodeField("value_changed").setProtoField("r_shoulder_rotation_changed"))))
              .addChild(new OrientationInterpolator().setDEF("R_ELBOW_ANIMATOR").setKey(Java.to([doubleToFloat(0),doubleToFloat(0.28),doubleToFloat(0.32),doubleToFloat(0.64),doubleToFloat(0.76),doubleToFloat(1)], Java.type("float[]"))).setKeyValue(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(-1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.04151),doubleToFloat(-1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.04151),doubleToFloat(-1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.5855),doubleToFloat(-1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.5852),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0)], Java.type("float[]")))
                .setIS(new IS()
                  .addConnect(new connect().setNodeField("value_changed").setProtoField("r_elbow_rotation_changed"))))
              .addChild(new OrientationInterpolator().setDEF("R_WRIST_ANIMATOR").setKey(Java.to([doubleToFloat(0),doubleToFloat(0.28),doubleToFloat(0.32),doubleToFloat(0.64),doubleToFloat(0.76),doubleToFloat(1)], Java.type("float[]"))).setKeyValue(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(-0.0585279),doubleToFloat(0.983903),doubleToFloat(-0.168849),doubleToFloat(1.85956),doubleToFloat(-0.0585279),doubleToFloat(0.983903),doubleToFloat(-0.168849),doubleToFloat(1.85956),doubleToFloat(-0.00222418),doubleToFloat(0.99801),doubleToFloat(-0.0630095),doubleToFloat(1.46072),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0.497349),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0)], Java.type("float[]")))
                .setIS(new IS()
                  .addConnect(new connect().setNodeField("value_changed").setProtoField("r_wrist_rotation_changed")))))
            .addChild(new ROUTE().setFromField("fraction_changed").setFromNode("TIMER").setToField("set_fraction").setToNode("HUMANOIDROOT_POSITION_ANIMATOR"))
            .addChild(new ROUTE().setFromField("fraction_changed").setFromNode("TIMER").setToField("set_fraction").setToNode("HUMANOIDROOT_ANIMATOR"))
            .addChild(new ROUTE().setFromField("fraction_changed").setFromNode("TIMER").setToField("set_fraction").setToNode("SACROILIAC_ANIMATOR"))
            .addChild(new ROUTE().setFromField("fraction_changed").setFromNode("TIMER").setToField("set_fraction").setToNode("L_HIP_ANIMATOR"))
            .addChild(new ROUTE().setFromField("fraction_changed").setFromNode("TIMER").setToField("set_fraction").setToNode("L_KNEE_ANIMATOR"))
            .addChild(new ROUTE().setFromField("fraction_changed").setFromNode("TIMER").setToField("set_fraction").setToNode("L_ANKLE_ANIMATOR"))
            .addChild(new ROUTE().setFromField("fraction_changed").setFromNode("TIMER").setToField("set_fraction").setToNode("L_MIDTARSAL_ANIMATOR"))
            .addChild(new ROUTE().setFromField("fraction_changed").setFromNode("TIMER").setToField("set_fraction").setToNode("R_HIP_ANIMATOR"))
            .addChild(new ROUTE().setFromField("fraction_changed").setFromNode("TIMER").setToField("set_fraction").setToNode("R_KNEE_ANIMATOR"))
            .addChild(new ROUTE().setFromField("fraction_changed").setFromNode("TIMER").setToField("set_fraction").setToNode("R_ANKLE_ANIMATOR"))
            .addChild(new ROUTE().setFromField("fraction_changed").setFromNode("TIMER").setToField("set_fraction").setToNode("R_MIDTARSAL_ANIMATOR"))
            .addChild(new ROUTE().setFromField("fraction_changed").setFromNode("TIMER").setToField("set_fraction").setToNode("VL5_ANIMATOR"))
            .addChild(new ROUTE().setFromField("fraction_changed").setFromNode("TIMER").setToField("set_fraction").setToNode("SKULLBASE_ANIMATOR"))
            .addChild(new ROUTE().setFromField("fraction_changed").setFromNode("TIMER").setToField("set_fraction").setToNode("L_SHOULDER_ANIMATOR"))
            .addChild(new ROUTE().setFromField("fraction_changed").setFromNode("TIMER").setToField("set_fraction").setToNode("L_ELBOW_ANIMATOR"))
            .addChild(new ROUTE().setFromField("fraction_changed").setFromNode("TIMER").setToField("set_fraction").setToNode("L_WRIST_ANIMATOR"))
            .addChild(new ROUTE().setFromField("fraction_changed").setFromNode("TIMER").setToField("set_fraction").setToNode("R_SHOULDER_ANIMATOR"))
            .addChild(new ROUTE().setFromField("fraction_changed").setFromNode("TIMER").setToField("set_fraction").setToNode("R_ELBOW_ANIMATOR"))
            .addChild(new ROUTE().setFromField("fraction_changed").setFromNode("TIMER").setToField("set_fraction").setToNode("R_WRIST_ANIMATOR"))))
        .addChild(new Anchor().setDescription("see InterchangableActorsViaDynamicRouting scene").setParameter(Java.to(["target=_blank"], Java.type("java.lang.String[]"))).setUrl(Java.to(["InterchangableActorsViaDynamicRouting.x3d","https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Prototypes/InterchangableActorsViaDynamicRouting.x3d","InterchangableActorsViaDynamicRouting.wrl","https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Prototypes/InterchangableActorsViaDynamicRouting.wrl"], Java.type("java.lang.String[]")))
          .addChild(new Shape()
            .setGeometry(new Text().setString(Java.to(["LOA1_JumpAnimation.x3d","defines a prototype","for animating a humanoid.","","Click this text to see","InterchangableActorsViaDynamicRouting example."], Java.type("java.lang.String[]")))
              .setFontStyle(new FontStyle().setJustify(Java.to(["MIDDLE","MIDDLE"], Java.type("java.lang.String[]"))).setSize(0.8)))
            .setAppearance(new Appearance()
              .setMaterial(new Material().setDiffuseColor(Java.to([doubleToFloat(1),doubleToFloat(1),doubleToFloat(0.2)], Java.type("float[]"))))))))      ;
    X3D0.toFileX3D("../data/LOA1_JumpAnimation.new.graal.x3d");
    X3D0.toFileJSON("../data/LOA1_JumpAnimation.new.graal.json");
