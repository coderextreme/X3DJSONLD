load('X3Dautoclass.js');
var ConfigurationProperties = Packages.org.web3d.x3d.jsail.ConfigurationProperties;
ConfigurationProperties.showDefaultAttributes = false;
ConfigurationProperties.xsltEngine = ConfigurationProperties.XSLT_ENGINE_NATIVE_JAVA;
ConfigurationProperties.deleteIntermediateFiles = false;
ConfigurationProperties.setStripTrailingZeroes(true);
function doubleToFloat(d) {
    if (Float32Array)
	return new Float32Array([d])[0];
}
      var X3D0 =  new X3D().setProfile("Immersive").setVersion("4.0")
      .setHead(new head()
        .addComponent(new component().setName("HAnim").setLevel(1))
        .addMeta(new meta().setName("title").setContent("KoreanCharacter07No.x3d"))
        .addMeta(new meta().setName("creator").setContent("Jin Hoon Lee and Min Joo Lee"))
        .addMeta(new meta().setName("translator").setContent("Chul Hee Jung and Myeong Won Lee"))
        .addMeta(new meta().setName("created").setContent("31 March 2011"))
        .addMeta(new meta().setName("translated").setContent("1 November 2014"))
        .addMeta(new meta().setName("modified").setContent("23 December 2021"))
        .addMeta(new meta().setName("description").setContent("Articulated 3D game character designed with a general graphics tool, then converted into an X3D HAnim model."))
        .addMeta(new meta().setName("reference").setContent("KoreanCharacter00ReadMe.txt"))
        .addMeta(new meta().setName("reference").setContent("KoreanCharacterHumanMotion_Infotech2014_140706.pdf"))
        .addMeta(new meta().setName("reference").setContent("KoreanCharactersIllustrated.pdf"))
        .addMeta(new meta().setName("identifier").setContent("https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Characters/KoreanCharacter07No.x3d"))
        .addMeta(new meta().setName("generator").setContent("3DS MAX, http://www.autodesk.com/products/autodesk-3ds-max/overview"))
        .addMeta(new meta().setName("generator").setContent("Suwon University HAnim Editor"))
        .addMeta(new meta().setName("generator").setContent("Gnu Image Manipulation Program, http://www.gimp.org"))
        .addMeta(new meta().setName("generator").setContent("X3D-Edit 3.3, https://savage.nps.edu/X3D-Edit"))
        .addMeta(new meta().setName("license").setContent("../license.html")))
      .setScene(new Scene()
        .addChild(new WorldInfo().setTitle("KoreanCharacter07No.x3d"))
        .addChild(new NavigationInfo().setSpeed(1.5))
        .addChild(new Viewpoint().setCenterOfRotation(Java.to([doubleToFloat(0),doubleToFloat(1),doubleToFloat(0)], Java.type("float[]"))).setDescription("No").setPosition(Java.to([doubleToFloat(0),doubleToFloat(1),doubleToFloat(3)], Java.type("float[]"))))
        .addChild(new HAnimHumanoid().setName("No").setDEF("hanim_No").setScale(Java.to([doubleToFloat(0.0225),doubleToFloat(0.0225),doubleToFloat(0.0225)], Java.type("float[]"))).setVersion("2.0")
          .addComments(new CommentsBlock("original HAnimHumanoid info='\"authorName=Chul Hee Jung and Myeong Won Lee\" \"authorEmail=myeongwonlee@gmail.com\" \"creationDate=31 March 2011\" \"humanoidVersion=2.0\" \"gender=male\" \"height=1.5\"'"))
          .setMetadata(new MetadataSet().setName("HAnimHumanoid.info").setReference("https://www.web3d.org/documents/specifications/19774/V2.0/Architecture/ObjectInterfaces.html#Humanoid")
            .addValue(new MetadataString().setName("authorName").setValue(Java.to(["Chul Hee Jung and Myeong Won Lee"], Java.type("java.lang.String[]"))))
            .addValue(new MetadataString().setName("authorEmail").setValue(Java.to(["myeongwonlee@gmail.com"], Java.type("java.lang.String[]"))))
            .addValue(new MetadataString().setName("creationDate").setValue(Java.to(["31 March 2011"], Java.type("java.lang.String[]"))))
            .addValue(new MetadataString().setName("gender").setValue(Java.to(["male"], Java.type("java.lang.String[]"))))
            .addValue(new MetadataFloat().setName("height").setValue(Java.to([doubleToFloat(1.5)], Java.type("float[]"))))
            .addValue(new MetadataString().setName("humanoidVersion").setValue(Java.to(["2.0"], Java.type("java.lang.String[]")))))
          .addSkeleton(new HAnimJoint("hanim_No").setName("humanoid_root").setDEF("hanim_humanoid_root").setCenter(Java.to([doubleToFloat(0),doubleToFloat(34.790001),doubleToFloat(-1.299)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(0)], Java.type("float[]"))).setLlimit(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(0)], Java.type("float[]"))).setContainerFieldOverride("skeleton")
            .addChild(new HAnimSegment("hanim_humanoid_root").setName("sacrum").setDEF("hanim_sacrum")
              .addChild(new Transform().setTranslation(Java.to([doubleToFloat(0),doubleToFloat(34.790001),doubleToFloat(-1.299)], Java.type("float[]")))
                .addChild(new Shape()
                  .setAppearance(new Appearance()
                    .setMaterial(new Material().setDiffuseColor(Java.to([doubleToFloat(0.588),doubleToFloat(0.588),doubleToFloat(0.588)], Java.type("float[]"))))
                    .setTexture(new ImageTexture().setDEF("NoTextureAtlas").setUrl(Java.to(["images/No.png","https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Characters/images/No.png"], Java.type("java.lang.String[]")))))
                  .setGeometry(new IndexedFaceSet().setCoordIndex(Java.to([0,1,2,-1,0,2,3,-1,0,3,4,-1,0,4,5,-1,0,5,6,-1,0,6,7,-1,0,7,8,-1,0,8,9,-1,0,9,10,-1,0,10,11,-1,0,11,12,-1,0,12,1,-1,14,2,1,-1,1,13,14,-1,15,3,2,-1,2,14,15,-1,16,4,3,-1,3,15,16,-1,17,5,4,-1,4,16,17,-1,18,6,5,-1,5,17,18,-1,19,7,6,-1,6,18,19,-1,20,8,7,-1,7,19,20,-1,21,9,8,-1,8,20,21,-1,22,10,9,-1,9,21,22,-1,23,11,10,-1,10,22,23,-1,24,12,11,-1,11,23,24,-1,13,1,12,-1,12,24,13,-1,26,14,13,-1,13,25,26,-1,27,15,14,-1,14,26,27,-1,28,16,15,-1,15,27,28,-1,29,17,16,-1,16,28,29,-1,30,18,17,-1,17,29,30,-1,31,19,18,-1,18,30,31,-1,32,20,19,-1,19,31,32,-1,33,21,20,-1,20,32,33,-1,34,22,21,-1,21,33,34,-1,35,23,22,-1,22,34,35,-1,36,24,23,-1,23,35,36,-1,25,13,24,-1,24,36,25,-1,38,26,25,-1,25,37,38,-1,39,27,26,-1,26,38,39,-1,40,28,27,-1,27,39,40,-1,41,29,28,-1,28,40,41,-1,42,30,29,-1,29,41,42,-1,43,31,30,-1,30,42,43,-1,44,32,31,-1,31,43,44,-1,45,33,32,-1,32,44,45,-1,46,34,33,-1,33,45,46,-1,47,35,34,-1,34,46,47,-1,48,36,35,-1,35,47,48,-1,37,25,36,-1,36,48,37,-1,50,38,37,-1,37,49,50,-1,51,39,38,-1,38,50,51,-1,52,40,39,-1,39,51,52,-1,53,41,40,-1,40,52,53,-1,54,42,41,-1,41,53,54,-1,55,43,42,-1,42,54,55,-1,56,44,43,-1,43,55,56,-1,57,45,44,-1,44,56,57,-1,58,46,45,-1,45,57,58,-1,59,47,46,-1,46,58,59,-1,60,48,47,-1,47,59,60,-1,49,37,48,-1,48,60,49,-1,61,50,49,-1,61,51,50,-1,61,52,51,-1,61,53,52,-1,61,54,53,-1,61,55,54,-1,61,56,55,-1,61,57,56,-1,61,58,57,-1,61,59,58,-1,61,60,59,-1,61,49,60,-1], Java.type("int[]"))).setCreaseAngle(1.57).setTexCoordIndex(Java.to([0,1,2,-1,0,2,3,-1,0,3,4,-1,0,4,5,-1,0,5,6,-1,0,6,7,-1,0,7,8,-1,0,8,9,-1,0,9,10,-1,0,10,11,-1,0,11,12,-1,0,12,1,-1,14,2,1,-1,1,13,14,-1,15,3,2,-1,2,14,15,-1,16,4,3,-1,3,15,16,-1,17,5,4,-1,4,16,17,-1,18,6,5,-1,5,17,18,-1,19,7,6,-1,6,18,19,-1,20,8,7,-1,7,19,20,-1,21,9,8,-1,8,20,21,-1,22,10,9,-1,9,21,22,-1,23,11,10,-1,10,22,23,-1,24,12,11,-1,11,23,24,-1,13,1,12,-1,12,24,13,-1,26,14,13,-1,13,25,26,-1,27,15,14,-1,14,26,27,-1,28,16,15,-1,15,27,28,-1,29,17,16,-1,16,28,29,-1,30,18,17,-1,17,29,30,-1,31,19,18,-1,18,30,31,-1,32,20,19,-1,19,31,32,-1,33,21,20,-1,20,32,33,-1,34,22,21,-1,21,33,34,-1,35,23,22,-1,22,34,35,-1,36,24,23,-1,23,35,36,-1,25,13,24,-1,24,36,25,-1,38,26,25,-1,25,37,38,-1,39,27,26,-1,26,38,39,-1,40,28,27,-1,27,39,40,-1,41,29,28,-1,28,40,41,-1,42,30,29,-1,29,41,42,-1,43,31,30,-1,30,42,43,-1,44,32,31,-1,31,43,44,-1,45,33,32,-1,32,44,45,-1,46,34,33,-1,33,45,46,-1,47,35,34,-1,34,46,47,-1,48,36,35,-1,35,47,48,-1,37,25,36,-1,36,48,37,-1,50,38,37,-1,37,49,50,-1,51,39,38,-1,38,50,51,-1,52,40,39,-1,39,51,52,-1,53,41,40,-1,40,52,53,-1,54,42,41,-1,41,53,54,-1,55,43,42,-1,42,54,55,-1,56,44,43,-1,43,55,56,-1,57,45,44,-1,44,56,57,-1,58,46,45,-1,45,57,58,-1,59,47,46,-1,46,58,59,-1,60,48,47,-1,47,59,60,-1,49,37,48,-1,48,60,49,-1,61,50,49,-1,61,51,50,-1,61,52,51,-1,61,53,52,-1,61,54,53,-1,61,55,54,-1,61,56,55,-1,61,57,56,-1,61,58,57,-1,61,59,58,-1,61,60,59,-1,61,49,60,-1], Java.type("int[]")))
                    .setCoord(new Coordinate().setPoint(Java.to([doubleToFloat(0),doubleToFloat(1.053),doubleToFloat(0.0273),doubleToFloat(0),doubleToFloat(0.9123),doubleToFloat(-0.5414),doubleToFloat(-0.4375),doubleToFloat(0.9123),doubleToFloat(-0.4652),doubleToFloat(-0.7578),doubleToFloat(0.9123),doubleToFloat(-0.3733),doubleToFloat(-0.875),doubleToFloat(0.9123),doubleToFloat(0.0273),doubleToFloat(-0.7578),doubleToFloat(0.9123),doubleToFloat(0.4279),doubleToFloat(-0.4375),doubleToFloat(0.9123),doubleToFloat(0.5198),doubleToFloat(0),doubleToFloat(0.9123),doubleToFloat(0.596),doubleToFloat(0.4375),doubleToFloat(0.9123),doubleToFloat(0.5198),doubleToFloat(0.7578),doubleToFloat(0.9123),doubleToFloat(0.4279),doubleToFloat(0.875),doubleToFloat(0.9123),doubleToFloat(0.0273),doubleToFloat(0.7578),doubleToFloat(0.9123),doubleToFloat(-0.3733),doubleToFloat(0.4375),doubleToFloat(0.9123),doubleToFloat(-0.4652),doubleToFloat(0),doubleToFloat(0.5267),doubleToFloat(-0.8842),doubleToFloat(-0.5658),doubleToFloat(0.5267),doubleToFloat(-0.7621),doubleToFloat(-0.98),doubleToFloat(0.5267),doubleToFloat(-0.4285),doubleToFloat(-1.132),doubleToFloat(0.5267),doubleToFloat(0.0273),doubleToFloat(-0.98),doubleToFloat(0.5267),doubleToFloat(0.483),doubleToFloat(-0.5658),doubleToFloat(0.5267),doubleToFloat(0.6985),doubleToFloat(0),doubleToFloat(0.5267),doubleToFloat(0.8206),doubleToFloat(0.5658),doubleToFloat(0.5267),doubleToFloat(0.6985),doubleToFloat(0.98),doubleToFloat(0.5267),doubleToFloat(0.483),doubleToFloat(1.132),doubleToFloat(0.5267),doubleToFloat(0.0273),doubleToFloat(0.98),doubleToFloat(0.5267),doubleToFloat(-0.4285),doubleToFloat(0.5658),doubleToFloat(0.5267),doubleToFloat(-0.7621),doubleToFloat(0),doubleToFloat(0),doubleToFloat(-0.9616),doubleToFloat(-0.6534),doubleToFloat(0),doubleToFloat(-0.8206),doubleToFloat(-1.132),doubleToFloat(0),doubleToFloat(-0.4353),doubleToFloat(-1.307),doubleToFloat(0),doubleToFloat(0.0273),doubleToFloat(-1.132),doubleToFloat(0),doubleToFloat(0.5536),doubleToFloat(-0.6534),doubleToFloat(0),doubleToFloat(0.8206),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.9616),doubleToFloat(0.6534),doubleToFloat(0),doubleToFloat(0.8206),doubleToFloat(1.132),doubleToFloat(0),doubleToFloat(0.5536),doubleToFloat(1.307),doubleToFloat(0),doubleToFloat(0.0273),doubleToFloat(1.132),doubleToFloat(0),doubleToFloat(-0.4353),doubleToFloat(0.6534),doubleToFloat(0),doubleToFloat(-0.8206),doubleToFloat(0),doubleToFloat(-0.5267),doubleToFloat(-0.8206),doubleToFloat(-0.5658),doubleToFloat(-0.5267),doubleToFloat(-0.6985),doubleToFloat(-0.98),doubleToFloat(-0.5267),doubleToFloat(-0.3648),doubleToFloat(-1.132),doubleToFloat(-0.5267),doubleToFloat(0.0273),doubleToFloat(-0.98),doubleToFloat(-0.5267),doubleToFloat(0.483),doubleToFloat(-0.5658),doubleToFloat(-0.5267),doubleToFloat(0.6985),doubleToFloat(0),doubleToFloat(-0.5267),doubleToFloat(0.8206),doubleToFloat(0.5658),doubleToFloat(-0.5267),doubleToFloat(0.6985),doubleToFloat(0.98),doubleToFloat(-0.5267),doubleToFloat(0.483),doubleToFloat(1.132),doubleToFloat(-0.5267),doubleToFloat(0.0273),doubleToFloat(0.98),doubleToFloat(-0.5267),doubleToFloat(-0.3648),doubleToFloat(0.5658),doubleToFloat(-0.5267),doubleToFloat(-0.6985),doubleToFloat(0),doubleToFloat(-0.9123),doubleToFloat(-0.4353),doubleToFloat(-0.3267),doubleToFloat(-0.9123),doubleToFloat(-0.3648),doubleToFloat(-0.5658),doubleToFloat(-0.9123),doubleToFloat(-0.2358),doubleToFloat(-0.6534),doubleToFloat(-0.9123),doubleToFloat(0.0273),doubleToFloat(-0.5658),doubleToFloat(-0.9123),doubleToFloat(0.2904),doubleToFloat(-0.3267),doubleToFloat(-0.9123),doubleToFloat(0.483),doubleToFloat(0),doubleToFloat(-0.9123),doubleToFloat(0.5536),doubleToFloat(0.3267),doubleToFloat(-0.9123),doubleToFloat(0.483),doubleToFloat(0.5658),doubleToFloat(-0.9123),doubleToFloat(0.2904),doubleToFloat(0.6534),doubleToFloat(-0.9123),doubleToFloat(0.0273),doubleToFloat(0.5658),doubleToFloat(-0.9123),doubleToFloat(-0.2358),doubleToFloat(0.3267),doubleToFloat(-0.9123),doubleToFloat(-0.3648),doubleToFloat(0),doubleToFloat(-1.053),doubleToFloat(0.0273)], Java.type("float[]"))))
                    .setTexCoord(new TextureCoordinate().setPoint(Java.to([doubleToFloat(0.8186),doubleToFloat(0.5634),doubleToFloat(0.8987),doubleToFloat(0.5617),doubleToFloat(0.8871),doubleToFloat(0.5617),doubleToFloat(0.8526),doubleToFloat(0.5606),doubleToFloat(0.8181),doubleToFloat(0.5606),doubleToFloat(0.816),doubleToFloat(0.5609),doubleToFloat(0.7815),doubleToFloat(0.5609),doubleToFloat(0.7188),doubleToFloat(0.5606),doubleToFloat(0.7815),doubleToFloat(0.5609),doubleToFloat(0.816),doubleToFloat(0.5609),doubleToFloat(0.8181),doubleToFloat(0.5606),doubleToFloat(0.8526),doubleToFloat(0.5606),doubleToFloat(0.8871),doubleToFloat(0.5617),doubleToFloat(0.9077),doubleToFloat(0.5435),doubleToFloat(0.8943),doubleToFloat(0.5435),doubleToFloat(0.8566),doubleToFloat(0.5187),doubleToFloat(0.819),doubleToFloat(0.4986),doubleToFloat(0.8158),doubleToFloat(0.4991),doubleToFloat(0.7835),doubleToFloat(0.5089),doubleToFloat(0.7188),doubleToFloat(0.5435),doubleToFloat(0.7835),doubleToFloat(0.5089),doubleToFloat(0.8158),doubleToFloat(0.4991),doubleToFloat(0.819),doubleToFloat(0.4986),doubleToFloat(0.8566),doubleToFloat(0.5187),doubleToFloat(0.8943),doubleToFloat(0.5435),doubleToFloat(0.9017),doubleToFloat(0.4799),doubleToFloat(0.8882),doubleToFloat(0.4799),doubleToFloat(0.8592),doubleToFloat(0.4741),doubleToFloat(0.8178),doubleToFloat(0.4732),doubleToFloat(0.8155),doubleToFloat(0.4732),doubleToFloat(0.7814),doubleToFloat(0.4765),doubleToFloat(0.7186),doubleToFloat(0.5235),doubleToFloat(0.7814),doubleToFloat(0.4765),doubleToFloat(0.8155),doubleToFloat(0.4732),doubleToFloat(0.8178),doubleToFloat(0.4732),doubleToFloat(0.8592),doubleToFloat(0.4741),doubleToFloat(0.8882),doubleToFloat(0.4799),doubleToFloat(0.9035),doubleToFloat(0.4666),doubleToFloat(0.8895),doubleToFloat(0.4666),doubleToFloat(0.8545),doubleToFloat(0.4604),doubleToFloat(0.8198),doubleToFloat(0.4629),doubleToFloat(0.8161),doubleToFloat(0.4629),doubleToFloat(0.7809),doubleToFloat(0.467),doubleToFloat(0.7185),doubleToFloat(0.5036),doubleToFloat(0.7809),doubleToFloat(0.467),doubleToFloat(0.8161),doubleToFloat(0.4629),doubleToFloat(0.8198),doubleToFloat(0.4629),doubleToFloat(0.8545),doubleToFloat(0.4604),doubleToFloat(0.8895),doubleToFloat(0.4666),doubleToFloat(0.9004),doubleToFloat(0.451),doubleToFloat(0.8882),doubleToFloat(0.451),doubleToFloat(0.8562),doubleToFloat(0.4537),doubleToFloat(0.8211),doubleToFloat(0.4537),doubleToFloat(0.8228),doubleToFloat(0.4535),doubleToFloat(0.7785),doubleToFloat(0.4535),doubleToFloat(0.7195),doubleToFloat(0.4721),doubleToFloat(0.7785),doubleToFloat(0.4535),doubleToFloat(0.8228),doubleToFloat(0.4535),doubleToFloat(0.8211),doubleToFloat(0.4537),doubleToFloat(0.8562),doubleToFloat(0.4537),doubleToFloat(0.8882),doubleToFloat(0.451),doubleToFloat(0.8199),doubleToFloat(0.4484)], Java.type("float[]"))))))))
            .addChild(new HAnimJoint("hanim_humanoid_root").setName("l_hip").setDEF("hanim_l_hip").setCenter(Java.to([doubleToFloat(3.785),doubleToFloat(34.07),doubleToFloat(-1.57)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(0)], Java.type("float[]"))).setLlimit(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(0)], Java.type("float[]")))
              .addChild(new HAnimSegment("hanim_l_hip").setName("l_thigh").setDEF("hanim_l_thigh")
                .addChild(new Transform().setTranslation(Java.to([doubleToFloat(3.785),doubleToFloat(34.07),doubleToFloat(-1.57)], Java.type("float[]")))
                  .addChild(new Shape()
                    .setAppearance(new Appearance()
                      .setMaterial(new Material().setDiffuseColor(Java.to([doubleToFloat(0.588),doubleToFloat(0.588),doubleToFloat(0.588)], Java.type("float[]"))))
                      .setTexture(new ImageTexture().setUSE("NoTextureAtlas")))
                    .setGeometry(new IndexedFaceSet().setCoordIndex(Java.to([0,14,20,-1,20,1,0,-1,15,14,0,-1,0,2,15,-1,16,23,21,-1,21,3,16,-1,17,16,3,-1,3,4,17,-1,18,17,4,-1,4,5,18,-1,6,19,18,-1,18,5,6,-1,1,20,19,-1,19,6,1,-1,8,26,25,-1,25,7,8,-1,27,26,8,-1,8,9,27,-1,30,24,22,-1,22,10,30,-1,11,28,30,-1,30,10,11,-1,12,29,28,-1,28,11,12,-1,13,31,29,-1,29,12,13,-1,7,25,31,-1,31,13,7,-1,14,8,7,-1,7,20,14,-1,9,8,14,-1,14,15,9,-1,10,22,23,-1,23,16,10,-1,11,10,16,-1,16,17,11,-1,12,11,17,-1,17,18,12,-1,19,13,12,-1,12,18,19,-1,20,7,13,-1,13,19,20,-1,23,15,2,-1,2,21,23,-1,22,9,15,-1,15,23,22,-1,9,22,24,-1,24,27,9,-1,0,1,32,-1,32,33,0,-1,34,2,0,-1,0,33,34,-1,3,21,39,-1,39,35,3,-1,4,3,35,-1,35,36,4,-1,37,5,4,-1,4,36,37,-1,6,5,37,-1,37,38,6,-1,1,6,38,-1,38,32,1,-1,39,21,2,-1,2,34,39,-1,33,32,41,-1,41,40,33,-1,32,38,42,-1,42,41,32,-1,38,37,43,-1,43,42,38,-1,37,36,44,-1,44,43,37,-1,36,35,45,-1,45,44,36,-1,35,39,46,-1,46,45,35,-1,39,34,47,-1,47,46,39,-1,34,33,40,-1,40,47,34,-1,40,41,48,-1,41,42,48,-1,42,43,48,-1,43,44,48,-1,44,45,48,-1,45,46,48,-1,46,47,48,-1,47,40,48,-1,24,30,50,-1,50,49,24,-1,30,28,51,-1,51,50,30,-1,28,29,52,-1,52,51,28,-1,29,31,53,-1,53,52,29,-1,31,25,54,-1,54,53,31,-1,25,26,55,-1,55,54,25,-1,26,27,56,-1,56,55,26,-1,27,24,49,-1,49,56,27,-1,49,50,57,-1,50,51,57,-1,51,52,57,-1,52,53,57,-1,53,54,57,-1,54,55,57,-1,55,56,57,-1,56,49,57,-1], Java.type("int[]"))).setCreaseAngle(1.57).setTexCoordIndex(Java.to([0,8,9,-1,9,1,0,-1,10,8,0,-1,0,2,10,-1,11,12,3,-1,3,24,11,-1,13,25,5,-1,5,4,13,-1,14,13,4,-1,4,6,14,-1,7,15,14,-1,14,6,7,-1,1,9,15,-1,15,7,1,-1,16,38,37,-1,37,17,16,-1,39,38,16,-1,16,18,39,-1,42,36,20,-1,20,19,42,-1,21,40,43,-1,43,26,21,-1,22,41,40,-1,40,21,22,-1,23,44,41,-1,41,22,23,-1,17,37,44,-1,44,23,17,-1,8,16,17,-1,17,9,8,-1,18,16,8,-1,8,10,18,-1,19,20,12,-1,12,11,19,-1,21,26,25,-1,25,13,21,-1,22,21,13,-1,13,14,22,-1,15,23,22,-1,22,14,15,-1,9,17,23,-1,23,15,9,-1,12,10,2,-1,2,3,12,-1,20,18,10,-1,10,12,20,-1,18,20,36,-1,36,39,18,-1,27,28,45,-1,45,46,27,-1,47,29,27,-1,27,46,47,-1,30,31,53,-1,53,48,30,-1,32,30,48,-1,48,49,32,-1,50,33,32,-1,32,49,50,-1,34,33,50,-1,50,51,34,-1,28,34,51,-1,51,45,28,-1,52,35,29,-1,29,47,52,-1,46,45,55,-1,55,54,46,-1,45,51,56,-1,56,55,45,-1,51,50,57,-1,57,56,51,-1,50,49,58,-1,58,57,50,-1,49,48,59,-1,59,58,49,-1,48,53,60,-1,60,59,48,-1,52,47,61,-1,61,60,52,-1,47,46,54,-1,54,61,47,-1,54,55,62,-1,55,56,62,-1,56,57,62,-1,57,58,62,-1,58,59,62,-1,59,60,62,-1,60,61,62,-1,61,54,62,-1,36,42,64,-1,64,63,36,-1,43,40,65,-1,65,64,43,-1,40,41,66,-1,66,65,40,-1,41,44,67,-1,67,66,41,-1,44,37,68,-1,68,67,44,-1,37,38,69,-1,69,68,37,-1,38,39,70,-1,70,69,38,-1,39,36,63,-1,63,70,39,-1,63,64,71,-1,64,65,71,-1,65,66,71,-1,66,67,71,-1,67,68,71,-1,68,69,71,-1,69,70,71,-1,70,63,71,-1], Java.type("int[]")))
                      .setCoord(new Coordinate().setPoint(Java.to([doubleToFloat(1.162),doubleToFloat(-14.04),doubleToFloat(-1.359),doubleToFloat(1.979),doubleToFloat(-14.04),doubleToFloat(0.2402),doubleToFloat(-0.0057),doubleToFloat(-14.01),doubleToFloat(-1.93),doubleToFloat(-1.868),doubleToFloat(-13.98),doubleToFloat(0.1731),doubleToFloat(-1.157),doubleToFloat(-13.99),doubleToFloat(1.802),doubleToFloat(0.0006),doubleToFloat(-14.01),doubleToFloat(2.628),doubleToFloat(1.222),doubleToFloat(-14.03),doubleToFloat(1.842),doubleToFloat(2.86),doubleToFloat(-1.295),doubleToFloat(0.2487),doubleToFloat(1.7),doubleToFloat(-1.378),doubleToFloat(-2.333),doubleToFloat(-0.2513),doubleToFloat(-1.731),doubleToFloat(-3.188),doubleToFloat(-2.72),doubleToFloat(-2.654),doubleToFloat(0.2487),doubleToFloat(-1.961),doubleToFloat(-2.387),doubleToFloat(2.505),doubleToFloat(-0.0094),doubleToFloat(-1.813),doubleToFloat(3.505),doubleToFloat(1.88),doubleToFloat(-1.402),doubleToFloat(2.639),doubleToFloat(1.51),doubleToFloat(-7.87),doubleToFloat(-1.817),doubleToFloat(-0.0134),doubleToFloat(-8.129),doubleToFloat(-2.572),doubleToFloat(-2.277),doubleToFloat(-8.867),doubleToFloat(0.3315),doubleToFloat(-1.557),doubleToFloat(-8.95),doubleToFloat(2.222),doubleToFloat(-0.0134),doubleToFloat(-8.805),doubleToFloat(2.976),doubleToFloat(1.751),doubleToFloat(-8.336),doubleToFloat(2.168),doubleToFloat(2.411),doubleToFloat(-8.045),doubleToFloat(0.3315),doubleToFloat(-1.157),doubleToFloat(-13.99),doubleToFloat(-1.434),doubleToFloat(-1.945),doubleToFloat(-2.238),doubleToFloat(-2.277),doubleToFloat(-1.725),doubleToFloat(-8.485),doubleToFloat(-1.721),doubleToFloat(-1.997),doubleToFloat(-0.9593),doubleToFloat(-2.461),doubleToFloat(2.937),doubleToFloat(0.5163),doubleToFloat(0.2487),doubleToFloat(1.88),doubleToFloat(0.251),doubleToFloat(-2.456),doubleToFloat(-0.3535),doubleToFloat(-0.2789),doubleToFloat(-3.397),doubleToFloat(-2.141),doubleToFloat(-0.859),doubleToFloat(2.623),doubleToFloat(-0.0042),doubleToFloat(-0.1116),doubleToFloat(3.623),doubleToFloat(-2.928),doubleToFloat(-1.599),doubleToFloat(0.2487),doubleToFloat(1.92),doubleToFloat(0.4484),doubleToFloat(2.778),doubleToFloat(2),doubleToFloat(-15.65),doubleToFloat(0.2549),doubleToFloat(1.137),doubleToFloat(-15.65),doubleToFloat(-1.175),doubleToFloat(-0.0135),doubleToFloat(-15.63),doubleToFloat(-1.707),doubleToFloat(-1.893),doubleToFloat(-15.6),doubleToFloat(0.187),doubleToFloat(-1.199),doubleToFloat(-15.63),doubleToFloat(1.775),doubleToFloat(-0.0034),doubleToFloat(-15.66),doubleToFloat(2.495),doubleToFloat(1.172),doubleToFloat(-15.64),doubleToFloat(1.807),doubleToFloat(-1.157),doubleToFloat(-15.61),doubleToFloat(-1.282),doubleToFloat(0.6957),doubleToFloat(-17.02),doubleToFloat(-0.7517),doubleToFloat(1.31),doubleToFloat(-17.02),doubleToFloat(0.2656),doubleToFloat(0.7015),doubleToFloat(-17.01),doubleToFloat(1.406),doubleToFloat(-0.0153),doubleToFloat(-17.02),doubleToFloat(1.825),doubleToFloat(-0.7385),doubleToFloat(-17),doubleToFloat(1.39),doubleToFloat(-1.26),doubleToFloat(-16.98),doubleToFloat(0.1966),doubleToFloat(-0.738),doubleToFloat(-16.99),doubleToFloat(-0.846),doubleToFloat(-0.0561),doubleToFloat(-17),doubleToFloat(-1.099),doubleToFloat(-0.0203),doubleToFloat(-17.53),doubleToFloat(0.3051),doubleToFloat(-1.738),doubleToFloat(0.2246),doubleToFloat(-1.968),doubleToFloat(-2.469),doubleToFloat(-0.3593),doubleToFloat(0.2259),doubleToFloat(-1.889),doubleToFloat(0.2993),doubleToFloat(2.062),doubleToFloat(-0.3216),doubleToFloat(0.8479),doubleToFloat(2.795),doubleToFloat(1.011),doubleToFloat(1.213),doubleToFloat(2.214),doubleToFloat(1.822),doubleToFloat(1.224),doubleToFloat(0.2337),doubleToFloat(0.9695),doubleToFloat(1.04),doubleToFloat(-1.924),doubleToFloat(-0.6483),doubleToFloat(0.7244),doubleToFloat(-2.598),doubleToFloat(-0.716),doubleToFloat(1.584),doubleToFloat(0.109)], Java.type("float[]"))))
                      .setTexCoord(new TextureCoordinate().setPoint(Java.to([doubleToFloat(0.8112),doubleToFloat(0.1978),doubleToFloat(0.7928),doubleToFloat(0.198),doubleToFloat(0.8249),doubleToFloat(0.1977),doubleToFloat(0.8374),doubleToFloat(0.1943),doubleToFloat(0.7528),doubleToFloat(0.1934),doubleToFloat(0.7357),doubleToFloat(0.1864),doubleToFloat(0.7651),doubleToFloat(0.1959),doubleToFloat(0.7783),doubleToFloat(0.1968),doubleToFloat(0.8266),doubleToFloat(0.2736),doubleToFloat(0.7988),doubleToFloat(0.2698),doubleToFloat(0.8418),doubleToFloat(0.2733),doubleToFloat(0.8787),doubleToFloat(0.2649),doubleToFloat(0.8586),doubleToFloat(0.2704),doubleToFloat(0.7368),doubleToFloat(0.2642),doubleToFloat(0.7588),doubleToFloat(0.2631),doubleToFloat(0.7794),doubleToFloat(0.2665),doubleToFloat(0.8232),doubleToFloat(0.3468),doubleToFloat(0.7985),doubleToFloat(0.342),doubleToFloat(0.8402),doubleToFloat(0.3517),doubleToFloat(0.878),doubleToFloat(0.3584),doubleToFloat(0.8605),doubleToFloat(0.3541),doubleToFloat(0.7419),doubleToFloat(0.3502),doubleToFloat(0.7594),doubleToFloat(0.3447),doubleToFloat(0.7789),doubleToFloat(0.3418),doubleToFloat(0.851),doubleToFloat(0.1871),doubleToFloat(0.714),doubleToFloat(0.2658),doubleToFloat(0.7234),doubleToFloat(0.3577),doubleToFloat(0.9517),doubleToFloat(0.1696),doubleToFloat(0.9373),doubleToFloat(0.1675),doubleToFloat(0.9627),doubleToFloat(0.1723),doubleToFloat(0.8889),doubleToFloat(0.1769),doubleToFloat(0.8764),doubleToFloat(0.1822),doubleToFloat(0.9037),doubleToFloat(0.1713),doubleToFloat(0.9136),doubleToFloat(0.1687),doubleToFloat(0.9236),doubleToFloat(0.1679),doubleToFloat(0.9745),doubleToFloat(0.1762),doubleToFloat(0.8429),doubleToFloat(0.368),doubleToFloat(0.7988),doubleToFloat(0.3576),doubleToFloat(0.8205),doubleToFloat(0.3655),doubleToFloat(0.8283),doubleToFloat(0.3651),doubleToFloat(0.7546),doubleToFloat(0.3699),doubleToFloat(0.7696),doubleToFloat(0.3606),doubleToFloat(0.8588),doubleToFloat(0.3834),doubleToFloat(0.742),doubleToFloat(0.3846),doubleToFloat(0.7838),doubleToFloat(0.3576),doubleToFloat(0.9373),doubleToFloat(0.1675),doubleToFloat(0.9517),doubleToFloat(0.1696),doubleToFloat(0.9627),doubleToFloat(0.1723),doubleToFloat(0.8889),doubleToFloat(0.1769),doubleToFloat(0.9037),doubleToFloat(0.1713),doubleToFloat(0.9136),doubleToFloat(0.1687),doubleToFloat(0.9236),doubleToFloat(0.1679),doubleToFloat(0.9745),doubleToFloat(0.1762),doubleToFloat(0.8764),doubleToFloat(0.1822),doubleToFloat(0.9517),doubleToFloat(0.1696),doubleToFloat(0.9373),doubleToFloat(0.1675),doubleToFloat(0.9236),doubleToFloat(0.1679),doubleToFloat(0.9136),doubleToFloat(0.1687),doubleToFloat(0.9037),doubleToFloat(0.1713),doubleToFloat(0.8889),doubleToFloat(0.1769),doubleToFloat(0.8764),doubleToFloat(0.1822),doubleToFloat(0.9627),doubleToFloat(0.1723),doubleToFloat(0.9197),doubleToFloat(0.1721),doubleToFloat(0.8429),doubleToFloat(0.368),doubleToFloat(0.8588),doubleToFloat(0.3834),doubleToFloat(0.7546),doubleToFloat(0.3699),doubleToFloat(0.7696),doubleToFloat(0.3606),doubleToFloat(0.7838),doubleToFloat(0.3576),doubleToFloat(0.7988),doubleToFloat(0.3576),doubleToFloat(0.8205),doubleToFloat(0.3655),doubleToFloat(0.8283),doubleToFloat(0.3651),doubleToFloat(0.8072),doubleToFloat(0.366)], Java.type("float[]"))))))))
              .addChild(new HAnimJoint("hanim_l_hip").setName("l_knee").setDEF("hanim_l_knee").setCenter(Java.to([doubleToFloat(3.838),doubleToFloat(18.4),doubleToFloat(-1.212)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(0)], Java.type("float[]"))).setLlimit(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(0)], Java.type("float[]")))
                .addChild(new HAnimSegment("hanim_l_knee").setName("l_calf").setDEF("hanim_l_calf")
                  .addChild(new Transform().setTranslation(Java.to([doubleToFloat(3.838),doubleToFloat(18.4),doubleToFloat(-1.212)], Java.type("float[]")))
                    .addChild(new Shape()
                      .setAppearance(new Appearance()
                        .setMaterial(new Material().setDiffuseColor(Java.to([doubleToFloat(0.588),doubleToFloat(0.588),doubleToFloat(0.588)], Java.type("float[]"))))
                        .setTexture(new ImageTexture().setUSE("NoTextureAtlas")))
                      .setGeometry(new IndexedFaceSet().setCoordIndex(Java.to([24,30,1,-1,1,0,24,-1,25,24,0,-1,0,2,25,-1,26,31,14,-1,14,3,26,-1,27,26,3,-1,3,4,27,-1,5,28,27,-1,27,4,5,-1,6,29,28,-1,28,5,6,-1,1,30,29,-1,29,6,1,-1,9,18,20,-1,20,15,9,-1,8,7,17,-1,17,16,8,-1,9,8,16,-1,16,18,9,-1,19,10,15,-1,15,20,19,-1,21,11,10,-1,10,19,21,-1,22,12,11,-1,11,21,22,-1,23,13,12,-1,12,22,23,-1,7,13,23,-1,23,17,7,-1,25,31,20,-1,20,18,25,-1,16,17,30,-1,30,24,16,-1,18,16,24,-1,24,25,18,-1,19,20,31,-1,31,26,19,-1,27,21,19,-1,19,26,27,-1,28,22,21,-1,21,27,28,-1,29,23,22,-1,22,28,29,-1,30,17,23,-1,23,29,30,-1,2,14,31,-1,31,25,2,-1,0,1,32,-1,1,6,32,-1,6,5,32,-1,5,4,32,-1,4,3,32,-1,3,14,32,-1,14,2,32,-1,2,0,32,-1,8,34,33,-1,33,7,8,-1,9,35,34,-1,34,8,9,-1,10,36,40,-1,40,15,10,-1,10,11,37,-1,37,36,10,-1,12,38,37,-1,37,11,12,-1,13,39,38,-1,38,12,13,-1,7,33,39,-1,39,13,7,-1,15,40,35,-1,35,9,15,-1,33,34,42,-1,42,41,33,-1,34,35,43,-1,43,42,34,-1,35,40,44,-1,44,43,35,-1,40,36,45,-1,45,44,40,-1,36,37,46,-1,46,45,36,-1,37,38,47,-1,47,46,37,-1,38,39,48,-1,48,47,38,-1,39,33,41,-1,41,48,39,-1,41,42,49,-1,42,43,49,-1,43,44,49,-1,44,45,49,-1,45,46,49,-1,46,47,49,-1,47,48,49,-1,48,41,49,-1], Java.type("int[]"))).setCreaseAngle(1.57).setTexCoordIndex(Java.to([1,2,3,-1,3,0,1,-1,5,1,0,-1,0,4,5,-1,7,8,9,-1,9,6,7,-1,11,7,6,-1,6,10,11,-1,12,13,11,-1,11,10,12,-1,14,15,13,-1,13,12,14,-1,3,2,15,-1,15,14,3,-1,18,24,25,-1,25,35,18,-1,16,17,27,-1,27,26,16,-1,18,16,26,-1,26,24,18,-1,28,20,19,-1,19,36,28,-1,29,21,20,-1,20,28,29,-1,30,22,21,-1,21,29,30,-1,31,23,22,-1,22,30,31,-1,17,23,31,-1,31,27,17,-1,5,33,25,-1,25,24,5,-1,26,27,2,-1,2,1,26,-1,24,26,1,-1,1,5,24,-1,28,36,8,-1,8,7,28,-1,11,29,28,-1,28,7,11,-1,13,30,29,-1,29,11,13,-1,15,31,30,-1,30,13,15,-1,2,27,31,-1,31,15,2,-1,4,34,33,-1,33,5,4,-1,0,3,32,-1,3,14,32,-1,14,12,32,-1,12,10,32,-1,10,6,32,-1,6,9,32,-1,34,4,32,-1,4,0,32,-1,16,38,37,-1,37,17,16,-1,18,39,38,-1,38,16,18,-1,20,40,45,-1,45,19,20,-1,20,21,41,-1,41,40,20,-1,22,42,41,-1,41,21,22,-1,23,43,42,-1,42,22,23,-1,17,37,43,-1,43,23,17,-1,35,44,39,-1,39,18,35,-1,37,38,47,-1,47,46,37,-1,38,39,48,-1,48,47,38,-1,39,44,49,-1,49,48,39,-1,45,40,50,-1,50,49,45,-1,40,41,51,-1,51,50,40,-1,41,42,52,-1,52,51,41,-1,42,43,53,-1,53,52,42,-1,43,37,46,-1,46,53,43,-1,46,47,54,-1,47,48,54,-1,48,49,54,-1,49,50,54,-1,50,51,54,-1,51,52,54,-1,52,53,54,-1,53,46,54,-1], Java.type("int[]")))
                        .setCoord(new Coordinate().setPoint(Java.to([doubleToFloat(0.6802),doubleToFloat(-14.47),doubleToFloat(-1.046),doubleToFloat(1.131),doubleToFloat(-14.47),doubleToFloat(-0.1321),doubleToFloat(-0.1728),doubleToFloat(-14.47),doubleToFloat(-1.461),doubleToFloat(-1.44),doubleToFloat(-14.47),doubleToFloat(-0.177),doubleToFloat(-0.9948),doubleToFloat(-14.47),doubleToFloat(0.7524),doubleToFloat(-0.2093),doubleToFloat(-14.47),doubleToFloat(1.433),doubleToFloat(0.6826),doubleToFloat(-14.47),doubleToFloat(0.8297),doubleToFloat(1.766),doubleToFloat(-1.607),doubleToFloat(-0.121),doubleToFloat(0.9594),doubleToFloat(-1.594),doubleToFloat(-1.515),doubleToFloat(-0.047),doubleToFloat(-1.58),doubleToFloat(-2.136),doubleToFloat(-1.778),doubleToFloat(-1.557),doubleToFloat(-0.1829),doubleToFloat(-1.169),doubleToFloat(-1.603),doubleToFloat(1.193),doubleToFloat(-0.0665),doubleToFloat(-1.637),doubleToFloat(1.901),doubleToFloat(0.954),doubleToFloat(-1.596),doubleToFloat(1.204),doubleToFloat(-0.8812),doubleToFloat(-14.47),doubleToFloat(-0.9886),doubleToFloat(-1.076),doubleToFloat(-1.566),doubleToFloat(-1.642),doubleToFloat(0.8712),doubleToFloat(-6.987),doubleToFloat(-1.462),doubleToFloat(1.58),doubleToFloat(-6.82),doubleToFloat(-0.1242),doubleToFloat(-0.2167),doubleToFloat(-7.265),doubleToFloat(-2.016),doubleToFloat(-1.685),doubleToFloat(-7.632),doubleToFloat(-0.1812),doubleToFloat(-1.054),doubleToFloat(-7.528),doubleToFloat(-1.491),doubleToFloat(-1.107),doubleToFloat(-7.553),doubleToFloat(1.106),doubleToFloat(-0.1228),doubleToFloat(-7.253),doubleToFloat(1.773),doubleToFloat(0.9062),doubleToFloat(-7.028),doubleToFloat(1.167),doubleToFloat(0.7544),doubleToFloat(-13.44),doubleToFloat(-1.12),doubleToFloat(-0.1636),doubleToFloat(-13.42),doubleToFloat(-1.601),doubleToFloat(-1.465),doubleToFloat(-13.45),doubleToFloat(-0.1774),doubleToFloat(-1.002),doubleToFloat(-13.47),doubleToFloat(0.7811),doubleToFloat(-0.2213),doubleToFloat(-13.46),doubleToFloat(1.483),doubleToFloat(0.6466),doubleToFloat(-13.47),doubleToFloat(0.8065),doubleToFloat(1.197),doubleToFloat(-13.45),doubleToFloat(-0.1309),doubleToFloat(-0.9586),doubleToFloat(-13.47),doubleToFloat(-1.084),doubleToFloat(-0.184),doubleToFloat(-14.79),doubleToFloat(-0.155),doubleToFloat(1.947),doubleToFloat(0.0101),doubleToFloat(-0.1035),doubleToFloat(1.083),doubleToFloat(0.0162),doubleToFloat(-1.534),doubleToFloat(-0.0672),doubleToFloat(0.0385),doubleToFloat(-2.065),doubleToFloat(-1.947),doubleToFloat(0.0623),doubleToFloat(-0.1715),doubleToFloat(-1.253),doubleToFloat(0.0335),doubleToFloat(1.416),doubleToFloat(-0.0571),doubleToFloat(0.0079),doubleToFloat(2.136),doubleToFloat(1.119),doubleToFloat(0.0202),doubleToFloat(1.449),doubleToFloat(-1.211),doubleToFloat(0.0535),doubleToFloat(-1.641),doubleToFloat(1.68),doubleToFloat(1.544),doubleToFloat(-0.09),doubleToFloat(0.9219),doubleToFloat(1.548),doubleToFloat(-1.346),doubleToFloat(-0.0599),doubleToFloat(1.568),doubleToFloat(-1.799),doubleToFloat(-1.008),doubleToFloat(1.581),doubleToFloat(-1.447),doubleToFloat(-1.654),doubleToFloat(1.589),doubleToFloat(-0.1584),doubleToFloat(-1.033),doubleToFloat(1.562),doubleToFloat(1.263),doubleToFloat(-0.0368),doubleToFloat(1.539),doubleToFloat(1.862),doubleToFloat(0.9449),doubleToFloat(1.553),doubleToFloat(1.288),doubleToFloat(-0.0222),doubleToFloat(2.153),doubleToFloat(-0.0477)], Java.type("float[]"))))
                        .setTexCoord(new TextureCoordinate().setPoint(Java.to([doubleToFloat(0.932),doubleToFloat(0.0281),doubleToFloat(0.9375),doubleToFloat(0.0382),doubleToFloat(0.9285),doubleToFloat(0.0402),doubleToFloat(0.9254),doubleToFloat(0.0312),doubleToFloat(0.9374),doubleToFloat(0.024),doubleToFloat(0.9462),doubleToFloat(0.0354),doubleToFloat(0.8988),doubleToFloat(0.0252),doubleToFloat(0.8904),doubleToFloat(0.038),doubleToFloat(0.8808),doubleToFloat(0.0336),doubleToFloat(0.8942),doubleToFloat(0.0184),doubleToFloat(0.9057),doubleToFloat(0.0303),doubleToFloat(0.9022),doubleToFloat(0.0409),doubleToFloat(0.9104),doubleToFloat(0.0324),doubleToFloat(0.9093),doubleToFloat(0.0416),doubleToFloat(0.9182),doubleToFloat(0.0316),doubleToFloat(0.9191),doubleToFloat(0.0408),doubleToFloat(0.9517),doubleToFloat(0.1696),doubleToFloat(0.9373),doubleToFloat(0.1675),doubleToFloat(0.9627),doubleToFloat(0.1723),doubleToFloat(0.8764),doubleToFloat(0.1822),doubleToFloat(0.8889),doubleToFloat(0.1769),doubleToFloat(0.9037),doubleToFloat(0.1713),doubleToFloat(0.9136),doubleToFloat(0.1687),doubleToFloat(0.9236),doubleToFloat(0.1679),doubleToFloat(0.9644),doubleToFloat(0.1089),doubleToFloat(0.9758),doubleToFloat(0.1044),doubleToFloat(0.9513),doubleToFloat(0.1129),doubleToFloat(0.9366),doubleToFloat(0.1157),doubleToFloat(0.881),doubleToFloat(0.1091),doubleToFloat(0.8973),doubleToFloat(0.1096),doubleToFloat(0.9098),doubleToFloat(0.1121),doubleToFloat(0.9231),doubleToFloat(0.1139),doubleToFloat(0.9177),doubleToFloat(0.0179),doubleToFloat(0.9548),doubleToFloat(0.03),doubleToFloat(0.9408),doubleToFloat(0.0161),doubleToFloat(0.9745),doubleToFloat(0.1762),doubleToFloat(0.8679),doubleToFloat(0.1104),doubleToFloat(0.9373),doubleToFloat(0.1675),doubleToFloat(0.9517),doubleToFloat(0.1696),doubleToFloat(0.9627),doubleToFloat(0.1723),doubleToFloat(0.8889),doubleToFloat(0.1769),doubleToFloat(0.9037),doubleToFloat(0.1713),doubleToFloat(0.9136),doubleToFloat(0.1687),doubleToFloat(0.9236),doubleToFloat(0.1679),doubleToFloat(0.9745),doubleToFloat(0.1762),doubleToFloat(0.8764),doubleToFloat(0.1822),doubleToFloat(0.9373),doubleToFloat(0.1675),doubleToFloat(0.9517),doubleToFloat(0.1696),doubleToFloat(0.9627),doubleToFloat(0.1723),doubleToFloat(0.9745),doubleToFloat(0.1762),doubleToFloat(0.8889),doubleToFloat(0.1769),doubleToFloat(0.9037),doubleToFloat(0.1713),doubleToFloat(0.9136),doubleToFloat(0.1687),doubleToFloat(0.9236),doubleToFloat(0.1679),doubleToFloat(0.932),doubleToFloat(0.1713)], Java.type("float[]"))))))))
                .addChild(new HAnimJoint("hanim_l_knee").setName("l_talocrural").setDEF("hanim_l_talocrural").setCenter(Java.to([doubleToFloat(3.826),doubleToFloat(4.044),doubleToFloat(-1.361)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(0)], Java.type("float[]"))).setLlimit(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(0)], Java.type("float[]")))
                  .addChild(new HAnimSegment("hanim_l_talocrural").setName("l_talus").setDEF("hanim_l_talus")
                    .addChild(new Transform().setTranslation(Java.to([doubleToFloat(3.826),doubleToFloat(4.044),doubleToFloat(-1.361)], Java.type("float[]")))
                      .addChild(new Shape()
                        .setAppearance(new Appearance()
                          .setMaterial(new Material().setDiffuseColor(Java.to([doubleToFloat(0.588),doubleToFloat(0.588),doubleToFloat(0.588)], Java.type("float[]"))))
                          .setTexture(new ImageTexture().setUSE("NoTextureAtlas")))
                        .setGeometry(new IndexedFaceSet().setCoordIndex(Java.to([0,1,10,-1,10,16,0,-1,2,11,10,-1,10,1,2,-1,3,12,11,-1,11,2,3,-1,4,13,12,-1,12,3,4,-1,41,0,16,-1,16,15,41,-1,0,41,44,-1,44,18,0,-1,17,19,4,-1,4,3,17,-1,20,17,3,-1,3,2,20,-1,21,20,2,-1,2,1,21,-1,18,21,1,-1,1,0,18,-1,18,44,42,-1,42,6,18,-1,8,7,19,-1,19,17,8,-1,23,8,17,-1,17,20,23,-1,9,23,20,-1,20,21,9,-1,6,9,21,-1,21,18,6,-1,10,24,26,-1,26,16,10,-1,11,25,24,-1,24,10,11,-1,12,27,25,-1,25,11,12,-1,13,28,27,-1,27,12,13,-1,5,28,13,-1,13,14,5,-1,30,29,39,-1,39,15,30,-1,26,30,15,-1,15,16,26,-1,8,23,22,-1,22,7,8,-1,9,6,22,-1,22,23,9,-1,6,42,46,-1,46,22,6,-1,33,34,35,-1,35,36,37,-1,37,38,31,-1,35,37,31,-1,33,35,31,-1,32,33,31,-1,28,5,32,-1,32,31,28,-1,5,29,33,-1,33,32,5,-1,29,30,34,-1,34,33,29,-1,30,26,35,-1,35,34,30,-1,26,24,36,-1,36,35,26,-1,24,25,37,-1,37,36,24,-1,25,27,38,-1,38,37,25,-1,27,28,31,-1,31,38,27,-1,39,29,5,-1,5,14,39,-1,7,22,46,-1,46,43,7,-1,4,19,45,-1,45,40,4,-1,19,7,43,-1,43,45,19,-1,4,40,14,-1,14,13,4,-1,48,49,50,-1,50,51,52,-1,48,50,52,-1,53,54,55,-1,52,53,55,-1,48,52,55,-1,48,55,56,-1,48,56,47,-1,15,39,48,-1,48,47,15,-1,39,14,49,-1,49,48,39,-1,14,40,50,-1,50,49,14,-1,40,45,51,-1,51,50,40,-1,45,43,52,-1,52,51,45,-1,43,46,53,-1,53,52,43,-1,46,42,54,-1,54,53,46,-1,42,44,55,-1,55,54,42,-1,44,41,56,-1,56,55,44,-1,41,15,47,-1,47,56,41,-1], Java.type("int[]"))).setCreaseAngle(1.57).setTexCoordIndex(Java.to([0,1,2,-1,2,3,0,-1,4,5,2,-1,2,1,4,-1,6,7,5,-1,5,4,6,-1,10,11,7,-1,7,6,10,-1,12,0,3,-1,3,13,12,-1,0,12,14,-1,14,15,0,-1,16,17,10,-1,10,6,16,-1,18,16,6,-1,6,4,18,-1,19,18,4,-1,4,1,19,-1,15,19,1,-1,1,0,15,-1,15,14,20,-1,20,21,15,-1,22,23,17,-1,17,16,22,-1,24,22,16,-1,16,18,24,-1,25,24,18,-1,18,19,25,-1,21,25,19,-1,19,15,21,-1,67,26,27,-1,27,68,67,-1,69,71,26,-1,26,67,69,-1,80,29,28,-1,28,79,80,-1,81,30,29,-1,29,80,81,-1,32,30,81,-1,81,82,32,-1,33,72,73,-1,73,70,33,-1,27,33,70,-1,70,68,27,-1,9,38,39,-1,39,8,9,-1,41,42,39,-1,39,38,41,-1,42,62,63,-1,63,39,42,-1,37,40,43,-1,43,44,45,-1,45,46,47,-1,43,45,47,-1,37,43,47,-1,36,37,47,-1,30,32,36,-1,36,47,30,-1,32,34,37,-1,37,36,32,-1,72,33,75,-1,75,74,72,-1,33,27,76,-1,76,75,33,-1,27,26,77,-1,77,76,27,-1,26,71,78,-1,78,77,26,-1,28,29,46,-1,46,45,28,-1,29,30,47,-1,47,46,29,-1,83,34,32,-1,32,82,83,-1,8,39,63,-1,63,64,8,-1,10,17,49,-1,49,48,10,-1,17,23,50,-1,50,49,17,-1,10,48,31,-1,31,11,10,-1,51,52,53,-1,53,54,55,-1,51,53,55,-1,56,57,58,-1,55,56,58,-1,51,55,58,-1,51,58,59,-1,51,59,60,-1,13,35,51,-1,51,60,13,-1,35,31,52,-1,52,51,35,-1,31,48,53,-1,53,52,31,-1,48,49,54,-1,54,53,48,-1,49,50,55,-1,55,54,49,-1,50,61,56,-1,56,55,50,-1,63,62,65,-1,65,66,63,-1,20,14,58,-1,58,57,20,-1,14,12,59,-1,59,58,14,-1,12,13,60,-1,60,59,12,-1], Java.type("int[]")))
                          .setCoord(new Coordinate().setPoint(Java.to([doubleToFloat(1.731),doubleToFloat(-1.878),doubleToFloat(0.029),doubleToFloat(1.222),doubleToFloat(-1.878),doubleToFloat(-1.495),doubleToFloat(-0.1851),doubleToFloat(-1.878),doubleToFloat(-1.825),doubleToFloat(-1.363),doubleToFloat(-1.878),doubleToFloat(-1.501),doubleToFloat(-1.883),doubleToFloat(-1.878),doubleToFloat(0.029),doubleToFloat(-0.9249),doubleToFloat(-0.0082),doubleToFloat(0.7476),doubleToFloat(1.502),doubleToFloat(-4.021),doubleToFloat(0.029),doubleToFloat(-1.633),doubleToFloat(-4.021),doubleToFloat(0.029),doubleToFloat(-1.266),doubleToFloat(-4.021),doubleToFloat(-1.51),doubleToFloat(1.131),doubleToFloat(-4.021),doubleToFloat(-1.504),doubleToFloat(0.9183),doubleToFloat(-1.002),doubleToFloat(-1.283),doubleToFloat(-0.1851),doubleToFloat(-0.9421),doubleToFloat(-1.604),doubleToFloat(-1.202),doubleToFloat(-0.9993),doubleToFloat(-1.283),doubleToFloat(-1.721),doubleToFloat(-1.025),doubleToFloat(0.029),doubleToFloat(-1.52),doubleToFloat(-0.9401),doubleToFloat(1.079),doubleToFloat(1.206),doubleToFloat(-0.9401),doubleToFloat(1.08),doubleToFloat(1.395),doubleToFloat(-1.025),doubleToFloat(0.029),doubleToFloat(-1.383),doubleToFloat(-3.557),doubleToFloat(-1.518),doubleToFloat(1.652),doubleToFloat(-3.557),doubleToFloat(0.029),doubleToFloat(-1.788),doubleToFloat(-3.557),doubleToFloat(0.029),doubleToFloat(-0.1851),doubleToFloat(-3.557),doubleToFloat(-1.914),doubleToFloat(1.246),doubleToFloat(-3.557),doubleToFloat(-1.516),doubleToFloat(-0.1851),doubleToFloat(-4.021),doubleToFloat(0.029),doubleToFloat(-0.1851),doubleToFloat(-4.021),doubleToFloat(-1.886),doubleToFloat(0.6003),doubleToFloat(-0.0082),doubleToFloat(-0.7875),doubleToFloat(-0.1851),doubleToFloat(-0.0082),doubleToFloat(-1.132),doubleToFloat(1.019),doubleToFloat(-0.0082),doubleToFloat(0.029),doubleToFloat(-0.8784),doubleToFloat(-0.0082),doubleToFloat(-0.8046),doubleToFloat(-1.274),doubleToFloat(-0.0082),doubleToFloat(0.029),doubleToFloat(-0.1851),doubleToFloat(-0.0082),doubleToFloat(1.203),doubleToFloat(0.6064),doubleToFloat(-0.0082),doubleToFloat(0.7351),doubleToFloat(-0.9328),doubleToFloat(0.8725),doubleToFloat(0.0232),doubleToFloat(-0.6695),doubleToFloat(0.8725),doubleToFloat(0.538),doubleToFloat(-0.1788),doubleToFloat(0.8725),doubleToFloat(0.8317),doubleToFloat(0.3605),doubleToFloat(0.8725),doubleToFloat(0.5208),doubleToFloat(0.6667),doubleToFloat(0.8725),doubleToFloat(0.0213),doubleToFloat(0.3805),doubleToFloat(0.8725),doubleToFloat(-0.5818),doubleToFloat(-0.1786),doubleToFloat(0.8725),doubleToFloat(-0.8408),doubleToFloat(-0.657),doubleToFloat(0.8725),doubleToFloat(-0.6004),doubleToFloat(-0.1851),doubleToFloat(-0.5691),doubleToFloat(1.74),doubleToFloat(-1.796),doubleToFloat(-1.86),doubleToFloat(0.9221),doubleToFloat(1.592),doubleToFloat(-1.86),doubleToFloat(0.9179),doubleToFloat(1.541),doubleToFloat(-4.021),doubleToFloat(0.9221),doubleToFloat(-1.639),doubleToFloat(-4.021),doubleToFloat(0.9221),doubleToFloat(1.708),doubleToFloat(-3.557),doubleToFloat(0.9221),doubleToFloat(-1.82),doubleToFloat(-3.557),doubleToFloat(0.9221),doubleToFloat(-0.1851),doubleToFloat(-4.021),doubleToFloat(0.9221),doubleToFloat(1.084),doubleToFloat(-1.469),doubleToFloat(1.63),doubleToFloat(-0.4507),doubleToFloat(-0.8535),doubleToFloat(1.908),doubleToFloat(-1.352),doubleToFloat(-1.469),doubleToFloat(1.635),doubleToFloat(-1.508),doubleToFloat(-1.986),doubleToFloat(1.539),doubleToFloat(-1.527),doubleToFloat(-3.593),doubleToFloat(1.555),doubleToFloat(-1.442),doubleToFloat(-3.815),doubleToFloat(1.585),doubleToFloat(-0.1848),doubleToFloat(-3.815),doubleToFloat(1.585),doubleToFloat(1.338),doubleToFloat(-3.815),doubleToFloat(1.585),doubleToFloat(1.413),doubleToFloat(-3.593),doubleToFloat(1.554),doubleToFloat(1.298),doubleToFloat(-1.986),doubleToFloat(1.54)], Java.type("float[]"))))
                          .setTexCoord(new TextureCoordinate().setPoint(Java.to([doubleToFloat(0.3815),doubleToFloat(0.8453),doubleToFloat(0.3815),doubleToFloat(0.8109),doubleToFloat(0.3624),doubleToFloat(0.829),doubleToFloat(0.3685),doubleToFloat(0.8453),doubleToFloat(0.3815),doubleToFloat(0.8034),doubleToFloat(0.3528),doubleToFloat(0.8194),doubleToFloat(0.3815),doubleToFloat(0.8107),doubleToFloat(0.3623),doubleToFloat(0.8291),doubleToFloat(0.4668),doubleToFloat(0.873),doubleToFloat(0.4763),doubleToFloat(0.8464),doubleToFloat(0.3815),doubleToFloat(0.8453),doubleToFloat(0.3685),doubleToFloat(0.8453),doubleToFloat(0.3813),doubleToFloat(0.8654),doubleToFloat(0.368),doubleToFloat(0.8691),doubleToFloat(0.4224),doubleToFloat(0.8577),doubleToFloat(0.4224),doubleToFloat(0.8376),doubleToFloat(0.4224),doubleToFloat(0.8026),doubleToFloat(0.4224),doubleToFloat(0.8376),doubleToFloat(0.4224),doubleToFloat(0.7937),doubleToFloat(0.4224),doubleToFloat(0.8026),doubleToFloat(0.4291),doubleToFloat(0.8577),doubleToFloat(0.4291),doubleToFloat(0.8376),doubleToFloat(0.4291),doubleToFloat(0.8028),doubleToFloat(0.4291),doubleToFloat(0.8376),doubleToFloat(0.4291),doubleToFloat(0.7943),doubleToFloat(0.4291),doubleToFloat(0.8029),doubleToFloat(0.3433),doubleToFloat(0.8314),doubleToFloat(0.3514),doubleToFloat(0.8453),doubleToFloat(0.3396),doubleToFloat(0.8261),doubleToFloat(0.3431),doubleToFloat(0.8311),doubleToFloat(0.3514),doubleToFloat(0.8453),doubleToFloat(0.368),doubleToFloat(0.869),doubleToFloat(0.352),doubleToFloat(0.8609),doubleToFloat(0.352),doubleToFloat(0.8606),doubleToFloat(0.3472),doubleToFloat(0.8677),doubleToFloat(0.3591),doubleToFloat(0.8766),doubleToFloat(0.3419),doubleToFloat(0.8568),doubleToFloat(0.3419),doubleToFloat(0.8634),doubleToFloat(0.5046),doubleToFloat(0.84),doubleToFloat(0.5046),doubleToFloat(0.873),doubleToFloat(0.3419),doubleToFloat(0.8564),doubleToFloat(0.539),doubleToFloat(0.8465),doubleToFloat(0.5488),doubleToFloat(0.873),doubleToFloat(0.3419),doubleToFloat(0.8451),doubleToFloat(0.3434),doubleToFloat(0.8311),doubleToFloat(0.3404),doubleToFloat(0.826),doubleToFloat(0.3431),doubleToFloat(0.8307),doubleToFloat(0.3419),doubleToFloat(0.8452),doubleToFloat(0.3813),doubleToFloat(0.8655),doubleToFloat(0.4224),doubleToFloat(0.8577),doubleToFloat(0.4291),doubleToFloat(0.8577),doubleToFloat(0.3684),doubleToFloat(0.8871),doubleToFloat(0.3756),doubleToFloat(0.8816),doubleToFloat(0.3831),doubleToFloat(0.8794),doubleToFloat(0.4229),doubleToFloat(0.872),doubleToFloat(0.4261),doubleToFloat(0.8727),doubleToFloat(0.4261),doubleToFloat(0.8727),doubleToFloat(0.4261),doubleToFloat(0.8727),doubleToFloat(0.4229),doubleToFloat(0.872),doubleToFloat(0.3831),doubleToFloat(0.8794),doubleToFloat(0.3756),doubleToFloat(0.8815),doubleToFloat(0.4291),doubleToFloat(0.8577),doubleToFloat(0.5498),doubleToFloat(0.8883),doubleToFloat(0.5046),doubleToFloat(0.8883),doubleToFloat(0.4666),doubleToFloat(0.8883),doubleToFloat(0.5445),doubleToFloat(0.8996),doubleToFloat(0.5046),doubleToFloat(0.8996),doubleToFloat(0.3624),doubleToFloat(0.829),doubleToFloat(0.3685),doubleToFloat(0.8453),doubleToFloat(0.3528),doubleToFloat(0.8194),doubleToFloat(0.368),doubleToFloat(0.8691),doubleToFloat(0.3396),doubleToFloat(0.8261),doubleToFloat(0.3472),doubleToFloat(0.8677),doubleToFloat(0.3591),doubleToFloat(0.8766),doubleToFloat(0.3419),doubleToFloat(0.8634),doubleToFloat(0.3419),doubleToFloat(0.8564),doubleToFloat(0.3419),doubleToFloat(0.8451),doubleToFloat(0.3434),doubleToFloat(0.8311),doubleToFloat(0.3404),doubleToFloat(0.826),doubleToFloat(0.3528),doubleToFloat(0.8194),doubleToFloat(0.3623),doubleToFloat(0.8291),doubleToFloat(0.3685),doubleToFloat(0.8453),doubleToFloat(0.368),doubleToFloat(0.869),doubleToFloat(0.3591),doubleToFloat(0.8766)], Java.type("float[]"))))))))
                  .addChild(new HAnimJoint("hanim_l_talocrural").setName("l_metatarsophalangeal_2").setDEF("hanim_l_metatarsophalangeal_2").setCenter(Java.to([doubleToFloat(3.826),doubleToFloat(3.118),doubleToFloat(-0.2867)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(0)], Java.type("float[]"))).setLlimit(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(0)], Java.type("float[]")))
                    .addChild(new HAnimSegment("hanim_l_metatarsophalangeal_2").setName("l_tarsal_proximal_phalanx_2").setDEF("hanim_l_tarsal_proximal_phalanx_2")
                      .addChild(new Transform().setTranslation(Java.to([doubleToFloat(3.826),doubleToFloat(3.118),doubleToFloat(-0.2867)], Java.type("float[]")))
                        .addChild(new Shape()
                          .setAppearance(new Appearance()
                            .setMaterial(new Material().setDiffuseColor(Java.to([doubleToFloat(0.588),doubleToFloat(0.588),doubleToFloat(0.588)], Java.type("float[]"))))
                            .setTexture(new ImageTexture().setUSE("NoTextureAtlas")))
                          .setGeometry(new IndexedFaceSet().setCoordIndex(Java.to([36,0,33,-1,1,35,33,-1,33,0,1,-1,34,35,1,-1,1,2,34,-1,5,39,42,-1,42,4,5,-1,25,31,18,-1,18,19,25,-1,32,25,19,-1,19,20,32,-1,36,41,26,-1,26,0,36,-1,22,21,31,-1,31,25,22,-1,23,22,25,-1,25,32,23,-1,41,39,5,-1,5,26,41,-1,7,6,2,-1,2,1,7,-1,8,7,1,-1,1,0,8,-1,9,10,4,-1,4,3,9,-1,10,11,5,-1,5,4,10,-1,6,27,24,-1,24,2,6,-1,28,8,0,-1,0,26,28,-1,27,9,3,-1,3,24,27,-1,11,28,26,-1,26,5,11,-1,13,12,6,-1,6,7,13,-1,12,29,27,-1,27,6,12,-1,14,13,7,-1,7,8,14,-1,30,14,8,-1,8,28,30,-1,15,16,10,-1,10,9,15,-1,29,15,9,-1,9,27,29,-1,17,30,28,-1,28,11,17,-1,16,17,11,-1,11,10,16,-1,19,18,12,-1,12,13,19,-1,18,31,29,-1,29,12,18,-1,20,19,13,-1,13,14,20,-1,32,20,14,-1,14,30,32,-1,21,22,16,-1,16,15,21,-1,31,21,15,-1,15,29,31,-1,23,32,30,-1,30,17,23,-1,22,23,17,-1,17,16,22,-1,37,2,24,-1,24,40,37,-1,40,24,3,-1,3,38,40,-1,38,3,4,-1,4,42,38,-1,34,2,37,-1,44,45,46,-1,46,47,48,-1,48,49,50,-1,46,48,50,-1,50,51,52,-1,46,50,52,-1,44,46,52,-1,44,52,43,-1,35,34,44,-1,44,43,35,-1,34,37,45,-1,45,44,34,-1,37,40,46,-1,46,45,37,-1,40,38,47,-1,47,46,40,-1,38,42,48,-1,48,47,38,-1,42,39,49,-1,49,48,42,-1,39,41,50,-1,50,49,39,-1,41,36,51,-1,51,50,41,-1,36,33,52,-1,52,51,36,-1,33,35,43,-1,43,52,33,-1], Java.type("int[]"))).setCreaseAngle(1.57).setTexCoordIndex(Java.to([2,3,4,-1,5,6,4,-1,4,3,5,-1,8,6,5,-1,5,7,8,-1,1,9,10,-1,10,0,1,-1,16,17,12,-1,12,13,16,-1,24,16,13,-1,13,23,24,-1,2,25,26,-1,26,3,2,-1,27,28,17,-1,17,16,27,-1,29,27,16,-1,16,24,29,-1,25,30,31,-1,31,26,25,-1,32,33,7,-1,7,5,32,-1,34,32,5,-1,5,3,34,-1,14,15,0,-1,0,11,14,-1,15,18,1,-1,1,0,15,-1,33,38,37,-1,37,7,33,-1,39,34,3,-1,3,26,39,-1,38,42,41,-1,41,37,38,-1,43,39,26,-1,26,31,43,-1,44,45,33,-1,33,32,44,-1,45,48,38,-1,38,33,45,-1,49,44,32,-1,32,34,49,-1,50,49,34,-1,34,39,50,-1,19,20,15,-1,15,14,19,-1,48,51,42,-1,42,38,48,-1,52,50,39,-1,39,43,52,-1,20,21,18,-1,18,15,20,-1,13,12,45,-1,45,44,13,-1,12,17,48,-1,48,45,12,-1,23,13,44,-1,44,49,23,-1,24,23,49,-1,49,50,24,-1,22,35,20,-1,20,19,22,-1,17,28,51,-1,51,48,17,-1,29,24,50,-1,50,52,29,-1,35,36,21,-1,21,20,35,-1,53,7,37,-1,37,54,53,-1,54,37,41,-1,41,55,54,-1,40,11,0,-1,0,10,40,-1,8,7,53,-1,56,57,58,-1,58,59,60,-1,60,61,62,-1,58,60,62,-1,62,63,64,-1,58,62,64,-1,56,58,64,-1,56,64,65,-1,6,8,56,-1,56,65,6,-1,8,53,57,-1,57,56,8,-1,53,54,58,-1,58,57,53,-1,54,55,59,-1,59,58,54,-1,55,66,60,-1,60,59,55,-1,10,9,46,-1,46,47,10,-1,30,25,62,-1,62,61,30,-1,25,2,63,-1,63,62,25,-1,2,4,64,-1,64,63,2,-1,4,6,65,-1,65,64,4,-1], Java.type("int[]")))
                            .setCoord(new Coordinate().setPoint(Java.to([doubleToFloat(-1.696),doubleToFloat(-0.8024),doubleToFloat(0.901),doubleToFloat(-0.1851),doubleToFloat(-0.1712),doubleToFloat(1.313),doubleToFloat(1.433),doubleToFloat(-0.8024),doubleToFloat(0.8928),doubleToFloat(1.585),doubleToFloat(-3.095),doubleToFloat(0.8819),doubleToFloat(-0.1851),doubleToFloat(-3.095),doubleToFloat(0.8819),doubleToFloat(-1.646),doubleToFloat(-3.095),doubleToFloat(0.8819),doubleToFloat(1.846),doubleToFloat(-1.229),doubleToFloat(2.182),doubleToFloat(-0.2812),doubleToFloat(-0.6275),doubleToFloat(2.435),doubleToFloat(-1.968),doubleToFloat(-1.229),doubleToFloat(2.184),doubleToFloat(2.007),doubleToFloat(-3.095),doubleToFloat(2.178),doubleToFloat(-0.1851),doubleToFloat(-3.095),doubleToFloat(2.178),doubleToFloat(-2.112),doubleToFloat(-3.095),doubleToFloat(2.178),doubleToFloat(1.931),doubleToFloat(-1.633),doubleToFloat(3.572),doubleToFloat(-0.2858),doubleToFloat(-1.142),doubleToFloat(3.845),doubleToFloat(-2.059),doubleToFloat(-1.633),doubleToFloat(3.562),doubleToFloat(2.148),doubleToFloat(-3.095),doubleToFloat(3.628),doubleToFloat(-0.1851),doubleToFloat(-3.095),doubleToFloat(3.628),doubleToFloat(-2.25),doubleToFloat(-3.095),doubleToFloat(3.628),doubleToFloat(1.486),doubleToFloat(-2.129),doubleToFloat(4.51),doubleToFloat(-0.2858),doubleToFloat(-1.597),doubleToFloat(4.893),doubleToFloat(-1.797),doubleToFloat(-2.129),doubleToFloat(4.446),doubleToFloat(1.781),doubleToFloat(-3.095),doubleToFloat(4.687),doubleToFloat(-0.2858),doubleToFloat(-3.095),doubleToFloat(5.256),doubleToFloat(-1.925),doubleToFloat(-3.095),doubleToFloat(4.687),doubleToFloat(1.772),doubleToFloat(-2.631),doubleToFloat(0.8819),doubleToFloat(-0.2858),doubleToFloat(-2.631),doubleToFloat(5.412),doubleToFloat(-1.857),doubleToFloat(-2.631),doubleToFloat(0.8819),doubleToFloat(2.223),doubleToFloat(-2.631),doubleToFloat(2.178),doubleToFloat(-2.293),doubleToFloat(-2.631),doubleToFloat(2.178),doubleToFloat(2.341),doubleToFloat(-2.631),doubleToFloat(3.628),doubleToFloat(-2.394),doubleToFloat(-2.631),doubleToFloat(3.628),doubleToFloat(1.84),doubleToFloat(-2.631),doubleToFloat(4.756),doubleToFloat(-2.017),doubleToFloat(-2.631),doubleToFloat(4.756),doubleToFloat(-1.52),doubleToFloat(-0.0134),doubleToFloat(0.0048),doubleToFloat(1.206),doubleToFloat(-0.0134),doubleToFloat(0.0061),doubleToFloat(-0.1851),doubleToFloat(0.3576),doubleToFloat(0.6662),doubleToFloat(-1.796),doubleToFloat(-0.9332),doubleToFloat(-0.1518),doubleToFloat(1.592),doubleToFloat(-0.9332),doubleToFloat(-0.1559),doubleToFloat(1.541),doubleToFloat(-3.095),doubleToFloat(-0.1518),doubleToFloat(-1.639),doubleToFloat(-3.095),doubleToFloat(-0.1518),doubleToFloat(1.708),doubleToFloat(-2.631),doubleToFloat(-0.1518),doubleToFloat(-1.82),doubleToFloat(-2.631),doubleToFloat(-0.1518),doubleToFloat(-0.1851),doubleToFloat(-3.095),doubleToFloat(-0.1518),doubleToFloat(-0.1828),doubleToFloat(0.0846),doubleToFloat(-0.6939),doubleToFloat(0.8905),doubleToFloat(-0.1781),doubleToFloat(-1.341),doubleToFloat(1.175),doubleToFloat(-0.8458),doubleToFloat(-1.468),doubleToFloat(1.281),doubleToFloat(-2.321),doubleToFloat(-1.412),doubleToFloat(1.245),doubleToFloat(-2.492),doubleToFloat(-1.394),doubleToFloat(-0.1856),doubleToFloat(-2.492),doubleToFloat(-1.394),doubleToFloat(-1.352),doubleToFloat(-2.492),doubleToFloat(-1.394),doubleToFloat(-1.398),doubleToFloat(-2.321),doubleToFloat(-1.412),doubleToFloat(-1.375),doubleToFloat(-0.8458),doubleToFloat(-1.468),doubleToFloat(-1.178),doubleToFloat(-0.1781),doubleToFloat(-1.341)], Java.type("float[]"))))
                            .setTexCoord(new TextureCoordinate().setPoint(Java.to([doubleToFloat(0.5046),doubleToFloat(0.9061),doubleToFloat(0.4664),doubleToFloat(0.9061),doubleToFloat(0.3813),doubleToFloat(0.8655),doubleToFloat(0.3794),doubleToFloat(0.8893),doubleToFloat(0.368),doubleToFloat(0.869),doubleToFloat(0.3703),doubleToFloat(0.8986),doubleToFloat(0.3591),doubleToFloat(0.8766),doubleToFloat(0.3794),doubleToFloat(0.8891),doubleToFloat(0.368),doubleToFloat(0.8691),doubleToFloat(0.4666),doubleToFloat(0.8883),doubleToFloat(0.5046),doubleToFloat(0.8883),doubleToFloat(0.5509),doubleToFloat(0.9061),doubleToFloat(0.3967),doubleToFloat(0.963),doubleToFloat(0.3877),doubleToFloat(0.9702),doubleToFloat(0.562),doubleToFloat(0.9285),doubleToFloat(0.5046),doubleToFloat(0.9285),doubleToFloat(0.4059),doubleToFloat(0.9781),doubleToFloat(0.4144),doubleToFloat(0.966),doubleToFloat(0.4542),doubleToFloat(0.9285),doubleToFloat(0.5657),doubleToFloat(0.9535),doubleToFloat(0.5046),doubleToFloat(0.9535),doubleToFloat(0.4506),doubleToFloat(0.9535),doubleToFloat(0.5561),doubleToFloat(0.9717),doubleToFloat(0.397),doubleToFloat(0.9616),doubleToFloat(0.4144),doubleToFloat(0.966),doubleToFloat(0.4224),doubleToFloat(0.8577),doubleToFloat(0.4263),doubleToFloat(0.8811),doubleToFloat(0.4134),doubleToFloat(0.9791),doubleToFloat(0.4208),doubleToFloat(0.9685),doubleToFloat(0.4208),doubleToFloat(0.9685),doubleToFloat(0.4291),doubleToFloat(0.8577),doubleToFloat(0.4329),doubleToFloat(0.8811),doubleToFloat(0.3769),doubleToFloat(0.9239),doubleToFloat(0.3855),doubleToFloat(0.9182),doubleToFloat(0.3855),doubleToFloat(0.9183),doubleToFloat(0.502),doubleToFloat(0.9815),doubleToFloat(0.4591),doubleToFloat(0.9717),doubleToFloat(0.4263),doubleToFloat(0.8811),doubleToFloat(0.4263),doubleToFloat(0.9104),doubleToFloat(0.4263),doubleToFloat(0.9104),doubleToFloat(0.5498),doubleToFloat(0.8883),doubleToFloat(0.4329),doubleToFloat(0.8811),doubleToFloat(0.4329),doubleToFloat(0.9104),doubleToFloat(0.4329),doubleToFloat(0.9104),doubleToFloat(0.3843),doubleToFloat(0.9558),doubleToFloat(0.3913),doubleToFloat(0.9496),doubleToFloat(0.4741),doubleToFloat(0.8664),doubleToFloat(0.5046),doubleToFloat(0.8664),doubleToFloat(0.4263),doubleToFloat(0.9431),doubleToFloat(0.3913),doubleToFloat(0.9494),doubleToFloat(0.4263),doubleToFloat(0.9431),doubleToFloat(0.4329),doubleToFloat(0.9431),doubleToFloat(0.4329),doubleToFloat(0.9431),doubleToFloat(0.3813),doubleToFloat(0.8654),doubleToFloat(0.4224),doubleToFloat(0.8577),doubleToFloat(0.4291),doubleToFloat(0.8577),doubleToFloat(0.3704),doubleToFloat(0.8386),doubleToFloat(0.38),doubleToFloat(0.8357),doubleToFloat(0.4179),doubleToFloat(0.8293),doubleToFloat(0.4204),doubleToFloat(0.8297),doubleToFloat(0.4204),doubleToFloat(0.8297),doubleToFloat(0.4204),doubleToFloat(0.8297),doubleToFloat(0.4179),doubleToFloat(0.8293),doubleToFloat(0.38),doubleToFloat(0.8357),doubleToFloat(0.3704),doubleToFloat(0.8386),doubleToFloat(0.3666),doubleToFloat(0.8532),doubleToFloat(0.4291),doubleToFloat(0.8577)], Java.type("float[]"))))))))))))
            .addChild(new HAnimJoint("hanim_humanoid_root").setName("r_hip").setDEF("hanim_r_hip").setCenter(Java.to([doubleToFloat(-3.785),doubleToFloat(34.07),doubleToFloat(-1.57)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(0)], Java.type("float[]"))).setLlimit(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(0)], Java.type("float[]")))
              .addChild(new HAnimSegment("hanim_r_hip").setName("r_thigh").setDEF("hanim_r_thigh")
                .addChild(new Transform().setTranslation(Java.to([doubleToFloat(-3.785),doubleToFloat(34.07),doubleToFloat(-1.57)], Java.type("float[]")))
                  .addChild(new Shape()
                    .setAppearance(new Appearance()
                      .setMaterial(new Material().setDiffuseColor(Java.to([doubleToFloat(0.588),doubleToFloat(0.588),doubleToFloat(0.588)], Java.type("float[]"))))
                      .setTexture(new ImageTexture().setUSE("NoTextureAtlas")))
                    .setGeometry(new IndexedFaceSet().setCoordIndex(Java.to([0,1,20,-1,20,14,0,-1,15,2,0,-1,0,14,15,-1,16,3,21,-1,21,23,16,-1,17,4,3,-1,3,16,17,-1,18,5,4,-1,4,17,18,-1,6,5,18,-1,18,19,6,-1,1,6,19,-1,19,20,1,-1,8,7,25,-1,25,26,8,-1,27,9,8,-1,8,26,27,-1,30,10,22,-1,22,24,30,-1,11,10,30,-1,30,28,11,-1,12,11,28,-1,28,29,12,-1,13,12,29,-1,29,31,13,-1,7,13,31,-1,31,25,7,-1,14,20,7,-1,7,8,14,-1,9,15,14,-1,14,8,9,-1,10,16,23,-1,23,22,10,-1,11,17,16,-1,16,10,11,-1,12,18,17,-1,17,11,12,-1,19,18,12,-1,12,13,19,-1,20,19,13,-1,13,7,20,-1,23,21,2,-1,2,15,23,-1,22,23,15,-1,15,9,22,-1,9,27,24,-1,24,22,9,-1,0,33,32,-1,32,1,0,-1,34,33,0,-1,0,2,34,-1,3,35,39,-1,39,21,3,-1,4,36,35,-1,35,3,4,-1,37,36,4,-1,4,5,37,-1,6,38,37,-1,37,5,6,-1,1,32,38,-1,38,6,1,-1,39,34,2,-1,2,21,39,-1,33,40,41,-1,41,32,33,-1,32,41,42,-1,42,38,32,-1,38,42,43,-1,43,37,38,-1,37,43,44,-1,44,36,37,-1,36,44,45,-1,45,35,36,-1,35,45,46,-1,46,39,35,-1,39,46,47,-1,47,34,39,-1,34,47,40,-1,40,33,34,-1,40,48,41,-1,41,48,42,-1,42,48,43,-1,43,48,44,-1,44,48,45,-1,45,48,46,-1,46,48,47,-1,47,48,40,-1,24,49,50,-1,50,30,24,-1,30,50,51,-1,51,28,30,-1,28,51,52,-1,52,29,28,-1,29,52,53,-1,53,31,29,-1,31,53,54,-1,54,25,31,-1,25,54,55,-1,55,26,25,-1,26,55,56,-1,56,27,26,-1,27,56,49,-1,49,24,27,-1,49,57,50,-1,50,57,51,-1,51,57,52,-1,52,57,53,-1,53,57,54,-1,54,57,55,-1,55,57,56,-1,56,57,49,-1], Java.type("int[]"))).setCreaseAngle(1.57).setTexCoordIndex(Java.to([0,1,9,-1,9,8,0,-1,10,2,0,-1,0,8,10,-1,11,24,3,-1,3,12,11,-1,13,4,5,-1,5,25,13,-1,14,6,4,-1,4,13,14,-1,7,6,14,-1,14,15,7,-1,1,7,15,-1,15,9,1,-1,16,17,37,-1,37,38,16,-1,39,18,16,-1,16,38,39,-1,42,19,20,-1,20,36,42,-1,21,26,43,-1,43,40,21,-1,22,21,40,-1,40,41,22,-1,23,22,41,-1,41,44,23,-1,17,23,44,-1,44,37,17,-1,8,9,17,-1,17,16,8,-1,18,10,8,-1,8,16,18,-1,19,11,12,-1,12,20,19,-1,21,13,25,-1,25,26,21,-1,22,14,13,-1,13,21,22,-1,15,14,22,-1,22,23,15,-1,9,15,23,-1,23,17,9,-1,12,3,2,-1,2,10,12,-1,20,12,10,-1,10,18,20,-1,18,39,36,-1,36,20,18,-1,27,46,45,-1,45,28,27,-1,47,46,27,-1,27,29,47,-1,30,48,53,-1,53,31,30,-1,32,49,48,-1,48,30,32,-1,50,49,32,-1,32,33,50,-1,34,51,50,-1,50,33,34,-1,28,45,51,-1,51,34,28,-1,52,47,29,-1,29,35,52,-1,46,54,55,-1,55,45,46,-1,45,55,56,-1,56,51,45,-1,51,56,57,-1,57,50,51,-1,50,57,58,-1,58,49,50,-1,49,58,59,-1,59,48,49,-1,48,59,60,-1,60,53,48,-1,52,60,61,-1,61,47,52,-1,47,61,54,-1,54,46,47,-1,54,62,55,-1,55,62,56,-1,56,62,57,-1,57,62,58,-1,58,62,59,-1,59,62,60,-1,60,62,61,-1,61,62,54,-1,36,63,64,-1,64,42,36,-1,43,64,65,-1,65,40,43,-1,40,65,66,-1,66,41,40,-1,41,66,67,-1,67,44,41,-1,44,67,68,-1,68,37,44,-1,37,68,69,-1,69,38,37,-1,38,69,70,-1,70,39,38,-1,39,70,63,-1,63,36,39,-1,63,71,64,-1,64,71,65,-1,65,71,66,-1,66,71,67,-1,67,71,68,-1,68,71,69,-1,69,71,70,-1,70,71,63,-1], Java.type("int[]")))
                      .setCoord(new Coordinate().setPoint(Java.to([doubleToFloat(-1.162),doubleToFloat(-14.04),doubleToFloat(-1.359),doubleToFloat(-1.979),doubleToFloat(-14.04),doubleToFloat(0.2402),doubleToFloat(0.0057),doubleToFloat(-14.01),doubleToFloat(-1.93),doubleToFloat(1.868),doubleToFloat(-13.98),doubleToFloat(0.1731),doubleToFloat(1.157),doubleToFloat(-13.99),doubleToFloat(1.802),doubleToFloat(-0.0006),doubleToFloat(-14.01),doubleToFloat(2.628),doubleToFloat(-1.222),doubleToFloat(-14.03),doubleToFloat(1.842),doubleToFloat(-2.86),doubleToFloat(-1.295),doubleToFloat(0.2487),doubleToFloat(-1.7),doubleToFloat(-1.378),doubleToFloat(-2.333),doubleToFloat(0.2513),doubleToFloat(-1.731),doubleToFloat(-3.188),doubleToFloat(2.72),doubleToFloat(-2.654),doubleToFloat(0.2487),doubleToFloat(1.961),doubleToFloat(-2.387),doubleToFloat(2.505),doubleToFloat(0.0094),doubleToFloat(-1.813),doubleToFloat(3.505),doubleToFloat(-1.88),doubleToFloat(-1.402),doubleToFloat(2.639),doubleToFloat(-1.51),doubleToFloat(-7.87),doubleToFloat(-1.817),doubleToFloat(0.0134),doubleToFloat(-8.129),doubleToFloat(-2.572),doubleToFloat(2.277),doubleToFloat(-8.867),doubleToFloat(0.3315),doubleToFloat(1.557),doubleToFloat(-8.95),doubleToFloat(2.222),doubleToFloat(0.0134),doubleToFloat(-8.805),doubleToFloat(2.976),doubleToFloat(-1.751),doubleToFloat(-8.336),doubleToFloat(2.168),doubleToFloat(-2.411),doubleToFloat(-8.045),doubleToFloat(0.3315),doubleToFloat(1.157),doubleToFloat(-13.99),doubleToFloat(-1.434),doubleToFloat(1.945),doubleToFloat(-2.238),doubleToFloat(-2.277),doubleToFloat(1.725),doubleToFloat(-8.485),doubleToFloat(-1.721),doubleToFloat(1.997),doubleToFloat(-0.9593),doubleToFloat(-2.461),doubleToFloat(-2.937),doubleToFloat(0.5163),doubleToFloat(0.2487),doubleToFloat(-1.88),doubleToFloat(0.251),doubleToFloat(-2.456),doubleToFloat(0.3535),doubleToFloat(-0.2789),doubleToFloat(-3.397),doubleToFloat(2.141),doubleToFloat(-0.859),doubleToFloat(2.623),doubleToFloat(0.0042),doubleToFloat(-0.1116),doubleToFloat(3.623),doubleToFloat(2.928),doubleToFloat(-1.599),doubleToFloat(0.2487),doubleToFloat(-1.92),doubleToFloat(0.4484),doubleToFloat(2.778),doubleToFloat(-2),doubleToFloat(-15.65),doubleToFloat(0.2549),doubleToFloat(-1.137),doubleToFloat(-15.65),doubleToFloat(-1.175),doubleToFloat(0.0135),doubleToFloat(-15.63),doubleToFloat(-1.707),doubleToFloat(1.893),doubleToFloat(-15.6),doubleToFloat(0.187),doubleToFloat(1.199),doubleToFloat(-15.63),doubleToFloat(1.775),doubleToFloat(0.0034),doubleToFloat(-15.66),doubleToFloat(2.495),doubleToFloat(-1.172),doubleToFloat(-15.64),doubleToFloat(1.807),doubleToFloat(1.157),doubleToFloat(-15.61),doubleToFloat(-1.282),doubleToFloat(-0.6957),doubleToFloat(-17.02),doubleToFloat(-0.7517),doubleToFloat(-1.31),doubleToFloat(-17.02),doubleToFloat(0.2656),doubleToFloat(-0.7015),doubleToFloat(-17.01),doubleToFloat(1.406),doubleToFloat(0.0153),doubleToFloat(-17.02),doubleToFloat(1.825),doubleToFloat(0.7385),doubleToFloat(-17),doubleToFloat(1.39),doubleToFloat(1.26),doubleToFloat(-16.98),doubleToFloat(0.1966),doubleToFloat(0.738),doubleToFloat(-16.99),doubleToFloat(-0.846),doubleToFloat(0.0561),doubleToFloat(-17),doubleToFloat(-1.099),doubleToFloat(0.0203),doubleToFloat(-17.53),doubleToFloat(0.3051),doubleToFloat(1.738),doubleToFloat(0.2246),doubleToFloat(-1.968),doubleToFloat(2.469),doubleToFloat(-0.3593),doubleToFloat(0.2259),doubleToFloat(1.889),doubleToFloat(0.2993),doubleToFloat(2.062),doubleToFloat(0.3216),doubleToFloat(0.8479),doubleToFloat(2.795),doubleToFloat(-1.011),doubleToFloat(1.213),doubleToFloat(2.214),doubleToFloat(-1.822),doubleToFloat(1.224),doubleToFloat(0.2337),doubleToFloat(-0.9695),doubleToFloat(1.04),doubleToFloat(-1.924),doubleToFloat(0.6483),doubleToFloat(0.7244),doubleToFloat(-2.598),doubleToFloat(0.716),doubleToFloat(1.584),doubleToFloat(0.109)], Java.type("float[]"))))
                      .setTexCoord(new TextureCoordinate().setPoint(Java.to([doubleToFloat(0.8112),doubleToFloat(0.1978),doubleToFloat(0.7928),doubleToFloat(0.198),doubleToFloat(0.8249),doubleToFloat(0.1977),doubleToFloat(0.8374),doubleToFloat(0.1943),doubleToFloat(0.7528),doubleToFloat(0.1934),doubleToFloat(0.7357),doubleToFloat(0.1864),doubleToFloat(0.7651),doubleToFloat(0.1959),doubleToFloat(0.7783),doubleToFloat(0.1968),doubleToFloat(0.8266),doubleToFloat(0.2736),doubleToFloat(0.7988),doubleToFloat(0.2698),doubleToFloat(0.8418),doubleToFloat(0.2733),doubleToFloat(0.8787),doubleToFloat(0.2649),doubleToFloat(0.8586),doubleToFloat(0.2704),doubleToFloat(0.7368),doubleToFloat(0.2642),doubleToFloat(0.7588),doubleToFloat(0.2631),doubleToFloat(0.7794),doubleToFloat(0.2665),doubleToFloat(0.8232),doubleToFloat(0.3468),doubleToFloat(0.7985),doubleToFloat(0.342),doubleToFloat(0.8402),doubleToFloat(0.3517),doubleToFloat(0.878),doubleToFloat(0.3584),doubleToFloat(0.8605),doubleToFloat(0.3541),doubleToFloat(0.7419),doubleToFloat(0.3502),doubleToFloat(0.7594),doubleToFloat(0.3447),doubleToFloat(0.7789),doubleToFloat(0.3418),doubleToFloat(0.851),doubleToFloat(0.1871),doubleToFloat(0.714),doubleToFloat(0.2658),doubleToFloat(0.7234),doubleToFloat(0.3577),doubleToFloat(0.9517),doubleToFloat(0.1696),doubleToFloat(0.9373),doubleToFloat(0.1675),doubleToFloat(0.9627),doubleToFloat(0.1723),doubleToFloat(0.8889),doubleToFloat(0.1769),doubleToFloat(0.8764),doubleToFloat(0.1822),doubleToFloat(0.9037),doubleToFloat(0.1713),doubleToFloat(0.9136),doubleToFloat(0.1687),doubleToFloat(0.9236),doubleToFloat(0.1679),doubleToFloat(0.9745),doubleToFloat(0.1762),doubleToFloat(0.8429),doubleToFloat(0.368),doubleToFloat(0.7988),doubleToFloat(0.3576),doubleToFloat(0.8205),doubleToFloat(0.3655),doubleToFloat(0.8283),doubleToFloat(0.3651),doubleToFloat(0.7546),doubleToFloat(0.3699),doubleToFloat(0.7696),doubleToFloat(0.3606),doubleToFloat(0.8588),doubleToFloat(0.3834),doubleToFloat(0.742),doubleToFloat(0.3846),doubleToFloat(0.7838),doubleToFloat(0.3576),doubleToFloat(0.9373),doubleToFloat(0.1675),doubleToFloat(0.9517),doubleToFloat(0.1696),doubleToFloat(0.9627),doubleToFloat(0.1723),doubleToFloat(0.8889),doubleToFloat(0.1769),doubleToFloat(0.9037),doubleToFloat(0.1713),doubleToFloat(0.9136),doubleToFloat(0.1687),doubleToFloat(0.9236),doubleToFloat(0.1679),doubleToFloat(0.9745),doubleToFloat(0.1762),doubleToFloat(0.8764),doubleToFloat(0.1822),doubleToFloat(0.9517),doubleToFloat(0.1696),doubleToFloat(0.9373),doubleToFloat(0.1675),doubleToFloat(0.9236),doubleToFloat(0.1679),doubleToFloat(0.9136),doubleToFloat(0.1687),doubleToFloat(0.9037),doubleToFloat(0.1713),doubleToFloat(0.8889),doubleToFloat(0.1769),doubleToFloat(0.8764),doubleToFloat(0.1822),doubleToFloat(0.9627),doubleToFloat(0.1723),doubleToFloat(0.9197),doubleToFloat(0.1721),doubleToFloat(0.8429),doubleToFloat(0.368),doubleToFloat(0.8588),doubleToFloat(0.3834),doubleToFloat(0.7546),doubleToFloat(0.3699),doubleToFloat(0.7696),doubleToFloat(0.3606),doubleToFloat(0.7838),doubleToFloat(0.3576),doubleToFloat(0.7988),doubleToFloat(0.3576),doubleToFloat(0.8205),doubleToFloat(0.3655),doubleToFloat(0.8283),doubleToFloat(0.3651),doubleToFloat(0.8072),doubleToFloat(0.366)], Java.type("float[]"))))))))
              .addChild(new HAnimJoint("hanim_r_hip").setName("r_knee").setDEF("hanim_r_knee").setCenter(Java.to([doubleToFloat(-3.838),doubleToFloat(18.4),doubleToFloat(-1.212)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(0)], Java.type("float[]"))).setLlimit(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(0)], Java.type("float[]")))
                .addChild(new HAnimSegment("hanim_r_knee").setName("r_calf").setDEF("hanim_r_calf")
                  .addChild(new Transform().setTranslation(Java.to([doubleToFloat(-3.838),doubleToFloat(18.4),doubleToFloat(-1.212)], Java.type("float[]")))
                    .addChild(new Shape()
                      .setAppearance(new Appearance()
                        .setMaterial(new Material().setDiffuseColor(Java.to([doubleToFloat(0.588),doubleToFloat(0.588),doubleToFloat(0.588)], Java.type("float[]"))))
                        .setTexture(new ImageTexture().setUSE("NoTextureAtlas")))
                      .setGeometry(new IndexedFaceSet().setCoordIndex(Java.to([24,0,1,-1,1,30,24,-1,25,2,0,-1,0,24,25,-1,26,3,14,-1,14,31,26,-1,27,4,3,-1,3,26,27,-1,5,4,27,-1,27,28,5,-1,6,5,28,-1,28,29,6,-1,1,6,29,-1,29,30,1,-1,9,15,20,-1,20,18,9,-1,8,16,17,-1,17,7,8,-1,9,18,16,-1,16,8,9,-1,19,20,15,-1,15,10,19,-1,21,19,10,-1,10,11,21,-1,22,21,11,-1,11,12,22,-1,23,22,12,-1,12,13,23,-1,7,17,23,-1,23,13,7,-1,25,18,20,-1,20,31,25,-1,16,24,30,-1,30,17,16,-1,18,25,24,-1,24,16,18,-1,19,26,31,-1,31,20,19,-1,27,26,19,-1,19,21,27,-1,28,27,21,-1,21,22,28,-1,29,28,22,-1,22,23,29,-1,30,29,23,-1,23,17,30,-1,2,25,31,-1,31,14,2,-1,0,32,1,-1,1,32,6,-1,6,32,5,-1,5,32,4,-1,4,32,3,-1,3,32,14,-1,14,32,2,-1,2,32,0,-1,8,7,33,-1,33,34,8,-1,9,8,34,-1,34,35,9,-1,10,15,40,-1,40,36,10,-1,10,36,37,-1,37,11,10,-1,12,11,37,-1,37,38,12,-1,13,12,38,-1,38,39,13,-1,7,13,39,-1,39,33,7,-1,15,9,35,-1,35,40,15,-1,33,41,42,-1,42,34,33,-1,34,42,43,-1,43,35,34,-1,35,43,44,-1,44,40,35,-1,40,44,45,-1,45,36,40,-1,36,45,46,-1,46,37,36,-1,37,46,47,-1,47,38,37,-1,38,47,48,-1,48,39,38,-1,39,48,41,-1,41,33,39,-1,41,49,42,-1,42,49,43,-1,43,49,44,-1,44,49,45,-1,45,49,46,-1,46,49,47,-1,47,49,48,-1,48,49,41,-1], Java.type("int[]"))).setCreaseAngle(1.57).setTexCoordIndex(Java.to([1,0,3,-1,3,2,1,-1,5,4,0,-1,0,1,5,-1,7,6,9,-1,9,8,7,-1,11,10,6,-1,6,7,11,-1,12,10,11,-1,11,13,12,-1,14,12,13,-1,13,15,14,-1,3,14,15,-1,15,2,3,-1,18,35,25,-1,25,24,18,-1,16,26,27,-1,27,17,16,-1,18,24,26,-1,26,16,18,-1,28,36,19,-1,19,20,28,-1,29,28,20,-1,20,21,29,-1,30,29,21,-1,21,22,30,-1,31,30,22,-1,22,23,31,-1,17,27,31,-1,31,23,17,-1,5,24,25,-1,25,33,5,-1,26,1,2,-1,2,27,26,-1,24,5,1,-1,1,26,24,-1,28,7,8,-1,8,36,28,-1,11,7,28,-1,28,29,11,-1,13,11,29,-1,29,30,13,-1,15,13,30,-1,30,31,15,-1,2,15,31,-1,31,27,2,-1,4,5,33,-1,33,34,4,-1,0,32,3,-1,3,32,14,-1,14,32,12,-1,12,32,10,-1,10,32,6,-1,6,32,9,-1,34,32,4,-1,4,32,0,-1,16,17,37,-1,37,38,16,-1,18,16,38,-1,38,39,18,-1,20,19,45,-1,45,40,20,-1,20,40,41,-1,41,21,20,-1,22,21,41,-1,41,42,22,-1,23,22,42,-1,42,43,23,-1,17,23,43,-1,43,37,17,-1,35,18,39,-1,39,44,35,-1,37,46,47,-1,47,38,37,-1,38,47,48,-1,48,39,38,-1,39,48,49,-1,49,44,39,-1,45,49,50,-1,50,40,45,-1,40,50,51,-1,51,41,40,-1,41,51,52,-1,52,42,41,-1,42,52,53,-1,53,43,42,-1,43,53,46,-1,46,37,43,-1,46,54,47,-1,47,54,48,-1,48,54,49,-1,49,54,50,-1,50,54,51,-1,51,54,52,-1,52,54,53,-1,53,54,46,-1], Java.type("int[]")))
                        .setCoord(new Coordinate().setPoint(Java.to([doubleToFloat(-0.6802),doubleToFloat(-14.47),doubleToFloat(-1.046),doubleToFloat(-1.131),doubleToFloat(-14.47),doubleToFloat(-0.1321),doubleToFloat(0.1728),doubleToFloat(-14.47),doubleToFloat(-1.461),doubleToFloat(1.44),doubleToFloat(-14.47),doubleToFloat(-0.177),doubleToFloat(0.9948),doubleToFloat(-14.47),doubleToFloat(0.7524),doubleToFloat(0.2093),doubleToFloat(-14.47),doubleToFloat(1.433),doubleToFloat(-0.6826),doubleToFloat(-14.47),doubleToFloat(0.8297),doubleToFloat(-1.766),doubleToFloat(-1.607),doubleToFloat(-0.121),doubleToFloat(-0.9594),doubleToFloat(-1.594),doubleToFloat(-1.515),doubleToFloat(0.047),doubleToFloat(-1.58),doubleToFloat(-2.136),doubleToFloat(1.778),doubleToFloat(-1.557),doubleToFloat(-0.1829),doubleToFloat(1.169),doubleToFloat(-1.603),doubleToFloat(1.193),doubleToFloat(0.0665),doubleToFloat(-1.637),doubleToFloat(1.901),doubleToFloat(-0.954),doubleToFloat(-1.596),doubleToFloat(1.204),doubleToFloat(0.8812),doubleToFloat(-14.47),doubleToFloat(-0.9886),doubleToFloat(1.076),doubleToFloat(-1.566),doubleToFloat(-1.642),doubleToFloat(-0.8712),doubleToFloat(-6.987),doubleToFloat(-1.462),doubleToFloat(-1.58),doubleToFloat(-6.82),doubleToFloat(-0.1242),doubleToFloat(0.2167),doubleToFloat(-7.265),doubleToFloat(-2.016),doubleToFloat(1.685),doubleToFloat(-7.632),doubleToFloat(-0.1812),doubleToFloat(1.054),doubleToFloat(-7.528),doubleToFloat(-1.491),doubleToFloat(1.107),doubleToFloat(-7.553),doubleToFloat(1.106),doubleToFloat(0.1228),doubleToFloat(-7.253),doubleToFloat(1.773),doubleToFloat(-0.9062),doubleToFloat(-7.028),doubleToFloat(1.167),doubleToFloat(-0.7544),doubleToFloat(-13.44),doubleToFloat(-1.12),doubleToFloat(0.1636),doubleToFloat(-13.42),doubleToFloat(-1.601),doubleToFloat(1.465),doubleToFloat(-13.45),doubleToFloat(-0.1774),doubleToFloat(1.002),doubleToFloat(-13.47),doubleToFloat(0.7811),doubleToFloat(0.2213),doubleToFloat(-13.46),doubleToFloat(1.483),doubleToFloat(-0.6466),doubleToFloat(-13.47),doubleToFloat(0.8065),doubleToFloat(-1.197),doubleToFloat(-13.45),doubleToFloat(-0.1309),doubleToFloat(0.9586),doubleToFloat(-13.47),doubleToFloat(-1.084),doubleToFloat(0.184),doubleToFloat(-14.79),doubleToFloat(-0.155),doubleToFloat(-1.947),doubleToFloat(0.0101),doubleToFloat(-0.1035),doubleToFloat(-1.083),doubleToFloat(0.0162),doubleToFloat(-1.534),doubleToFloat(0.0672),doubleToFloat(0.0385),doubleToFloat(-2.065),doubleToFloat(1.947),doubleToFloat(0.0623),doubleToFloat(-0.1715),doubleToFloat(1.253),doubleToFloat(0.0335),doubleToFloat(1.416),doubleToFloat(0.0571),doubleToFloat(0.0079),doubleToFloat(2.136),doubleToFloat(-1.119),doubleToFloat(0.0202),doubleToFloat(1.449),doubleToFloat(1.211),doubleToFloat(0.0535),doubleToFloat(-1.641),doubleToFloat(-1.68),doubleToFloat(1.544),doubleToFloat(-0.09),doubleToFloat(-0.9219),doubleToFloat(1.548),doubleToFloat(-1.346),doubleToFloat(0.0599),doubleToFloat(1.568),doubleToFloat(-1.799),doubleToFloat(1.008),doubleToFloat(1.581),doubleToFloat(-1.447),doubleToFloat(1.654),doubleToFloat(1.589),doubleToFloat(-0.1584),doubleToFloat(1.033),doubleToFloat(1.562),doubleToFloat(1.263),doubleToFloat(0.0368),doubleToFloat(1.539),doubleToFloat(1.862),doubleToFloat(-0.9449),doubleToFloat(1.553),doubleToFloat(1.288),doubleToFloat(0.0222),doubleToFloat(2.153),doubleToFloat(-0.0477)], Java.type("float[]"))))
                        .setTexCoord(new TextureCoordinate().setPoint(Java.to([doubleToFloat(0.932),doubleToFloat(0.0281),doubleToFloat(0.9375),doubleToFloat(0.0382),doubleToFloat(0.9285),doubleToFloat(0.0402),doubleToFloat(0.9254),doubleToFloat(0.0312),doubleToFloat(0.9374),doubleToFloat(0.024),doubleToFloat(0.9462),doubleToFloat(0.0354),doubleToFloat(0.8988),doubleToFloat(0.0252),doubleToFloat(0.8904),doubleToFloat(0.038),doubleToFloat(0.8808),doubleToFloat(0.0336),doubleToFloat(0.8942),doubleToFloat(0.0184),doubleToFloat(0.9057),doubleToFloat(0.0303),doubleToFloat(0.9022),doubleToFloat(0.0409),doubleToFloat(0.9104),doubleToFloat(0.0324),doubleToFloat(0.9093),doubleToFloat(0.0416),doubleToFloat(0.9182),doubleToFloat(0.0316),doubleToFloat(0.9191),doubleToFloat(0.0408),doubleToFloat(0.9517),doubleToFloat(0.1696),doubleToFloat(0.9373),doubleToFloat(0.1675),doubleToFloat(0.9627),doubleToFloat(0.1723),doubleToFloat(0.8764),doubleToFloat(0.1822),doubleToFloat(0.8889),doubleToFloat(0.1769),doubleToFloat(0.9037),doubleToFloat(0.1713),doubleToFloat(0.9136),doubleToFloat(0.1687),doubleToFloat(0.9236),doubleToFloat(0.1679),doubleToFloat(0.9644),doubleToFloat(0.1089),doubleToFloat(0.9758),doubleToFloat(0.1044),doubleToFloat(0.9513),doubleToFloat(0.1129),doubleToFloat(0.9366),doubleToFloat(0.1157),doubleToFloat(0.881),doubleToFloat(0.1091),doubleToFloat(0.8973),doubleToFloat(0.1096),doubleToFloat(0.9098),doubleToFloat(0.1121),doubleToFloat(0.9231),doubleToFloat(0.1139),doubleToFloat(0.9177),doubleToFloat(0.0179),doubleToFloat(0.9548),doubleToFloat(0.03),doubleToFloat(0.9408),doubleToFloat(0.0161),doubleToFloat(0.9745),doubleToFloat(0.1762),doubleToFloat(0.8679),doubleToFloat(0.1104),doubleToFloat(0.9373),doubleToFloat(0.1675),doubleToFloat(0.9517),doubleToFloat(0.1696),doubleToFloat(0.9627),doubleToFloat(0.1723),doubleToFloat(0.8889),doubleToFloat(0.1769),doubleToFloat(0.9037),doubleToFloat(0.1713),doubleToFloat(0.9136),doubleToFloat(0.1687),doubleToFloat(0.9236),doubleToFloat(0.1679),doubleToFloat(0.9745),doubleToFloat(0.1762),doubleToFloat(0.8764),doubleToFloat(0.1822),doubleToFloat(0.9373),doubleToFloat(0.1675),doubleToFloat(0.9517),doubleToFloat(0.1696),doubleToFloat(0.9627),doubleToFloat(0.1723),doubleToFloat(0.9745),doubleToFloat(0.1762),doubleToFloat(0.8889),doubleToFloat(0.1769),doubleToFloat(0.9037),doubleToFloat(0.1713),doubleToFloat(0.9136),doubleToFloat(0.1687),doubleToFloat(0.9236),doubleToFloat(0.1679),doubleToFloat(0.932),doubleToFloat(0.1713)], Java.type("float[]"))))))))
                .addChild(new HAnimJoint("hanim_r_knee").setName("r_talocrural").setDEF("hanim_r_talocrural").setCenter(Java.to([doubleToFloat(-3.826),doubleToFloat(4.044),doubleToFloat(-1.361)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(0)], Java.type("float[]"))).setLlimit(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(0)], Java.type("float[]")))
                  .addChild(new HAnimSegment("hanim_r_talocrural").setName("r_talus").setDEF("hanim_r_talus")
                    .addChild(new Transform().setTranslation(Java.to([doubleToFloat(-3.826),doubleToFloat(4.044),doubleToFloat(-1.361)], Java.type("float[]")))
                      .addChild(new Shape()
                        .setAppearance(new Appearance()
                          .setMaterial(new Material().setDiffuseColor(Java.to([doubleToFloat(0.588),doubleToFloat(0.588),doubleToFloat(0.588)], Java.type("float[]"))))
                          .setTexture(new ImageTexture().setUSE("NoTextureAtlas")))
                        .setGeometry(new IndexedFaceSet().setCoordIndex(Java.to([0,16,10,-1,10,1,0,-1,2,1,10,-1,10,11,2,-1,3,2,11,-1,11,12,3,-1,4,3,12,-1,12,13,4,-1,41,15,16,-1,16,0,41,-1,0,18,44,-1,44,41,0,-1,17,3,4,-1,4,19,17,-1,20,2,3,-1,3,17,20,-1,21,1,2,-1,2,20,21,-1,18,0,1,-1,1,21,18,-1,18,6,42,-1,42,44,18,-1,8,17,19,-1,19,7,8,-1,23,20,17,-1,17,8,23,-1,9,21,20,-1,20,23,9,-1,6,18,21,-1,21,9,6,-1,10,16,26,-1,26,24,10,-1,11,10,24,-1,24,25,11,-1,12,11,25,-1,25,27,12,-1,13,12,27,-1,27,28,13,-1,5,14,13,-1,13,28,5,-1,30,15,39,-1,39,29,30,-1,26,16,15,-1,15,30,26,-1,8,7,22,-1,22,23,8,-1,9,23,22,-1,22,6,9,-1,6,22,46,-1,46,42,6,-1,31,38,37,-1,37,36,35,-1,31,37,35,-1,35,34,33,-1,31,35,33,-1,32,31,33,-1,28,31,32,-1,32,5,28,-1,5,32,33,-1,33,29,5,-1,29,33,34,-1,34,30,29,-1,30,34,35,-1,35,26,30,-1,26,35,36,-1,36,24,26,-1,24,36,37,-1,37,25,24,-1,25,37,38,-1,38,27,25,-1,27,38,31,-1,31,28,27,-1,39,14,5,-1,5,29,39,-1,7,43,46,-1,46,22,7,-1,4,40,45,-1,45,19,4,-1,19,45,43,-1,43,7,19,-1,4,13,14,-1,14,40,4,-1,48,47,56,-1,48,56,55,-1,55,54,53,-1,55,53,52,-1,48,55,52,-1,52,51,50,-1,48,52,50,-1,48,50,49,-1,15,47,48,-1,48,39,15,-1,39,48,49,-1,49,14,39,-1,14,49,50,-1,50,40,14,-1,40,50,51,-1,51,45,40,-1,45,51,52,-1,52,43,45,-1,43,52,53,-1,53,46,43,-1,46,53,54,-1,54,42,46,-1,42,54,55,-1,55,44,42,-1,44,55,56,-1,56,41,44,-1,41,56,47,-1,47,15,41,-1], Java.type("int[]"))).setCreaseAngle(1.57).setTexCoordIndex(Java.to([0,3,2,-1,2,1,0,-1,4,1,2,-1,2,5,4,-1,6,4,5,-1,5,7,6,-1,10,6,7,-1,7,11,10,-1,12,13,3,-1,3,0,12,-1,0,15,14,-1,14,12,0,-1,16,6,10,-1,10,17,16,-1,18,4,6,-1,6,16,18,-1,19,1,4,-1,4,18,19,-1,15,0,1,-1,1,19,15,-1,15,21,20,-1,20,14,15,-1,22,16,17,-1,17,23,22,-1,24,18,16,-1,16,22,24,-1,25,19,18,-1,18,24,25,-1,21,15,19,-1,19,25,21,-1,67,68,27,-1,27,26,67,-1,69,67,26,-1,26,71,69,-1,80,79,28,-1,28,29,80,-1,81,80,29,-1,29,30,81,-1,32,82,81,-1,81,30,32,-1,33,70,73,-1,73,72,33,-1,27,68,70,-1,70,33,27,-1,9,8,39,-1,39,38,9,-1,41,38,39,-1,39,42,41,-1,42,39,63,-1,63,62,42,-1,47,46,45,-1,45,44,43,-1,47,45,43,-1,43,40,37,-1,47,43,37,-1,36,47,37,-1,30,47,36,-1,36,32,30,-1,32,36,37,-1,37,34,32,-1,72,74,75,-1,75,33,72,-1,33,75,76,-1,76,27,33,-1,27,76,77,-1,77,26,27,-1,26,77,78,-1,78,71,26,-1,28,45,46,-1,46,29,28,-1,29,46,47,-1,47,30,29,-1,83,82,32,-1,32,34,83,-1,8,64,63,-1,63,39,8,-1,10,48,49,-1,49,17,10,-1,17,49,50,-1,50,23,17,-1,10,11,31,-1,31,48,10,-1,51,60,59,-1,51,59,58,-1,58,57,56,-1,58,56,55,-1,51,58,55,-1,55,54,53,-1,51,55,53,-1,51,53,52,-1,13,60,51,-1,51,35,13,-1,35,51,52,-1,52,31,35,-1,31,52,53,-1,53,48,31,-1,48,53,54,-1,54,49,48,-1,49,54,55,-1,55,50,49,-1,50,55,56,-1,56,61,50,-1,63,66,65,-1,65,62,63,-1,20,57,58,-1,58,14,20,-1,14,58,59,-1,59,12,14,-1,12,59,60,-1,60,13,12,-1], Java.type("int[]")))
                          .setCoord(new Coordinate().setPoint(Java.to([doubleToFloat(-1.731),doubleToFloat(-1.878),doubleToFloat(0.029),doubleToFloat(-1.222),doubleToFloat(-1.878),doubleToFloat(-1.495),doubleToFloat(0.1851),doubleToFloat(-1.878),doubleToFloat(-1.825),doubleToFloat(1.363),doubleToFloat(-1.878),doubleToFloat(-1.501),doubleToFloat(1.883),doubleToFloat(-1.878),doubleToFloat(0.029),doubleToFloat(0.9249),doubleToFloat(-0.0082),doubleToFloat(0.7476),doubleToFloat(-1.502),doubleToFloat(-4.021),doubleToFloat(0.029),doubleToFloat(1.633),doubleToFloat(-4.021),doubleToFloat(0.029),doubleToFloat(1.266),doubleToFloat(-4.021),doubleToFloat(-1.51),doubleToFloat(-1.131),doubleToFloat(-4.021),doubleToFloat(-1.504),doubleToFloat(-0.9183),doubleToFloat(-1.002),doubleToFloat(-1.283),doubleToFloat(0.1851),doubleToFloat(-0.9421),doubleToFloat(-1.604),doubleToFloat(1.202),doubleToFloat(-0.9993),doubleToFloat(-1.283),doubleToFloat(1.721),doubleToFloat(-1.025),doubleToFloat(0.029),doubleToFloat(1.52),doubleToFloat(-0.9401),doubleToFloat(1.079),doubleToFloat(-1.206),doubleToFloat(-0.9401),doubleToFloat(1.08),doubleToFloat(-1.395),doubleToFloat(-1.025),doubleToFloat(0.029),doubleToFloat(1.383),doubleToFloat(-3.557),doubleToFloat(-1.518),doubleToFloat(-1.652),doubleToFloat(-3.557),doubleToFloat(0.029),doubleToFloat(1.788),doubleToFloat(-3.557),doubleToFloat(0.029),doubleToFloat(0.1851),doubleToFloat(-3.557),doubleToFloat(-1.914),doubleToFloat(-1.246),doubleToFloat(-3.557),doubleToFloat(-1.516),doubleToFloat(0.1851),doubleToFloat(-4.021),doubleToFloat(0.029),doubleToFloat(0.1851),doubleToFloat(-4.021),doubleToFloat(-1.886),doubleToFloat(-0.6003),doubleToFloat(-0.0082),doubleToFloat(-0.7875),doubleToFloat(0.1851),doubleToFloat(-0.0082),doubleToFloat(-1.132),doubleToFloat(-1.019),doubleToFloat(-0.0082),doubleToFloat(0.029),doubleToFloat(0.8784),doubleToFloat(-0.0082),doubleToFloat(-0.8046),doubleToFloat(1.274),doubleToFloat(-0.0082),doubleToFloat(0.029),doubleToFloat(0.1851),doubleToFloat(-0.0082),doubleToFloat(1.203),doubleToFloat(-0.6064),doubleToFloat(-0.0082),doubleToFloat(0.7351),doubleToFloat(0.9328),doubleToFloat(0.8725),doubleToFloat(0.0232),doubleToFloat(0.6695),doubleToFloat(0.8725),doubleToFloat(0.538),doubleToFloat(0.1788),doubleToFloat(0.8725),doubleToFloat(0.8317),doubleToFloat(-0.3605),doubleToFloat(0.8725),doubleToFloat(0.5208),doubleToFloat(-0.6667),doubleToFloat(0.8725),doubleToFloat(0.0213),doubleToFloat(-0.3805),doubleToFloat(0.8725),doubleToFloat(-0.5818),doubleToFloat(0.1786),doubleToFloat(0.8725),doubleToFloat(-0.8408),doubleToFloat(0.657),doubleToFloat(0.8725),doubleToFloat(-0.6004),doubleToFloat(0.1851),doubleToFloat(-0.5691),doubleToFloat(1.74),doubleToFloat(1.796),doubleToFloat(-1.86),doubleToFloat(0.9221),doubleToFloat(-1.592),doubleToFloat(-1.86),doubleToFloat(0.9179),doubleToFloat(-1.541),doubleToFloat(-4.021),doubleToFloat(0.9221),doubleToFloat(1.639),doubleToFloat(-4.021),doubleToFloat(0.9221),doubleToFloat(-1.708),doubleToFloat(-3.557),doubleToFloat(0.9221),doubleToFloat(1.82),doubleToFloat(-3.557),doubleToFloat(0.9221),doubleToFloat(0.1851),doubleToFloat(-4.021),doubleToFloat(0.9221),doubleToFloat(-1.084),doubleToFloat(-1.469),doubleToFloat(1.63),doubleToFloat(0.4507),doubleToFloat(-0.8535),doubleToFloat(1.908),doubleToFloat(1.352),doubleToFloat(-1.469),doubleToFloat(1.635),doubleToFloat(1.508),doubleToFloat(-1.986),doubleToFloat(1.539),doubleToFloat(1.527),doubleToFloat(-3.593),doubleToFloat(1.555),doubleToFloat(1.442),doubleToFloat(-3.815),doubleToFloat(1.585),doubleToFloat(0.1848),doubleToFloat(-3.815),doubleToFloat(1.585),doubleToFloat(-1.338),doubleToFloat(-3.815),doubleToFloat(1.585),doubleToFloat(-1.413),doubleToFloat(-3.593),doubleToFloat(1.554),doubleToFloat(-1.298),doubleToFloat(-1.986),doubleToFloat(1.54)], Java.type("float[]"))))
                          .setTexCoord(new TextureCoordinate().setPoint(Java.to([doubleToFloat(0.3815),doubleToFloat(0.8453),doubleToFloat(0.3815),doubleToFloat(0.8109),doubleToFloat(0.3624),doubleToFloat(0.829),doubleToFloat(0.3685),doubleToFloat(0.8453),doubleToFloat(0.3815),doubleToFloat(0.8034),doubleToFloat(0.3528),doubleToFloat(0.8194),doubleToFloat(0.3815),doubleToFloat(0.8107),doubleToFloat(0.3623),doubleToFloat(0.8291),doubleToFloat(0.4668),doubleToFloat(0.873),doubleToFloat(0.4763),doubleToFloat(0.8464),doubleToFloat(0.3815),doubleToFloat(0.8453),doubleToFloat(0.3685),doubleToFloat(0.8453),doubleToFloat(0.3813),doubleToFloat(0.8654),doubleToFloat(0.368),doubleToFloat(0.8691),doubleToFloat(0.4224),doubleToFloat(0.8577),doubleToFloat(0.4224),doubleToFloat(0.8376),doubleToFloat(0.4224),doubleToFloat(0.8026),doubleToFloat(0.4224),doubleToFloat(0.8376),doubleToFloat(0.4224),doubleToFloat(0.7937),doubleToFloat(0.4224),doubleToFloat(0.8026),doubleToFloat(0.4291),doubleToFloat(0.8577),doubleToFloat(0.4291),doubleToFloat(0.8376),doubleToFloat(0.4291),doubleToFloat(0.8028),doubleToFloat(0.4291),doubleToFloat(0.8376),doubleToFloat(0.4291),doubleToFloat(0.7943),doubleToFloat(0.4291),doubleToFloat(0.8029),doubleToFloat(0.3433),doubleToFloat(0.8314),doubleToFloat(0.3514),doubleToFloat(0.8453),doubleToFloat(0.3396),doubleToFloat(0.8261),doubleToFloat(0.3431),doubleToFloat(0.8311),doubleToFloat(0.3514),doubleToFloat(0.8453),doubleToFloat(0.368),doubleToFloat(0.869),doubleToFloat(0.352),doubleToFloat(0.8609),doubleToFloat(0.352),doubleToFloat(0.8606),doubleToFloat(0.3472),doubleToFloat(0.8677),doubleToFloat(0.3591),doubleToFloat(0.8766),doubleToFloat(0.3419),doubleToFloat(0.8568),doubleToFloat(0.3419),doubleToFloat(0.8634),doubleToFloat(0.5046),doubleToFloat(0.84),doubleToFloat(0.5046),doubleToFloat(0.873),doubleToFloat(0.3419),doubleToFloat(0.8564),doubleToFloat(0.539),doubleToFloat(0.8465),doubleToFloat(0.5488),doubleToFloat(0.873),doubleToFloat(0.3419),doubleToFloat(0.8451),doubleToFloat(0.3434),doubleToFloat(0.8311),doubleToFloat(0.3404),doubleToFloat(0.826),doubleToFloat(0.3431),doubleToFloat(0.8307),doubleToFloat(0.3419),doubleToFloat(0.8452),doubleToFloat(0.3813),doubleToFloat(0.8655),doubleToFloat(0.4224),doubleToFloat(0.8577),doubleToFloat(0.4291),doubleToFloat(0.8577),doubleToFloat(0.3684),doubleToFloat(0.8871),doubleToFloat(0.3756),doubleToFloat(0.8816),doubleToFloat(0.3831),doubleToFloat(0.8794),doubleToFloat(0.4229),doubleToFloat(0.872),doubleToFloat(0.4261),doubleToFloat(0.8727),doubleToFloat(0.4261),doubleToFloat(0.8727),doubleToFloat(0.4261),doubleToFloat(0.8727),doubleToFloat(0.4229),doubleToFloat(0.872),doubleToFloat(0.3831),doubleToFloat(0.8794),doubleToFloat(0.3756),doubleToFloat(0.8815),doubleToFloat(0.4291),doubleToFloat(0.8577),doubleToFloat(0.5498),doubleToFloat(0.8883),doubleToFloat(0.5046),doubleToFloat(0.8883),doubleToFloat(0.4666),doubleToFloat(0.8883),doubleToFloat(0.5445),doubleToFloat(0.8996),doubleToFloat(0.5046),doubleToFloat(0.8996),doubleToFloat(0.3624),doubleToFloat(0.829),doubleToFloat(0.3685),doubleToFloat(0.8453),doubleToFloat(0.3528),doubleToFloat(0.8194),doubleToFloat(0.368),doubleToFloat(0.8691),doubleToFloat(0.3396),doubleToFloat(0.8261),doubleToFloat(0.3472),doubleToFloat(0.8677),doubleToFloat(0.3591),doubleToFloat(0.8766),doubleToFloat(0.3419),doubleToFloat(0.8634),doubleToFloat(0.3419),doubleToFloat(0.8564),doubleToFloat(0.3419),doubleToFloat(0.8451),doubleToFloat(0.3434),doubleToFloat(0.8311),doubleToFloat(0.3404),doubleToFloat(0.826),doubleToFloat(0.3528),doubleToFloat(0.8194),doubleToFloat(0.3623),doubleToFloat(0.8291),doubleToFloat(0.3685),doubleToFloat(0.8453),doubleToFloat(0.368),doubleToFloat(0.869),doubleToFloat(0.3591),doubleToFloat(0.8766)], Java.type("float[]"))))))))
                  .addChild(new HAnimJoint("hanim_r_talocrural").setName("r_metatarsophalangeal_2").setDEF("hanim_r_metatarsophalangeal_2").setCenter(Java.to([doubleToFloat(-3.826),doubleToFloat(3.118),doubleToFloat(-0.2867)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(0)], Java.type("float[]"))).setLlimit(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(0)], Java.type("float[]")))
                    .addChild(new HAnimSegment("hanim_r_metatarsophalangeal_2").setName("r_tarsal_proximal_phalanx_2").setDEF("hanim_r_tarsal_proximal_phalanx_2")
                      .addChild(new Transform().setTranslation(Java.to([doubleToFloat(-3.826),doubleToFloat(3.118),doubleToFloat(-0.2867)], Java.type("float[]")))
                        .addChild(new Shape()
                          .setAppearance(new Appearance()
                            .setMaterial(new Material().setDiffuseColor(Java.to([doubleToFloat(0.588),doubleToFloat(0.588),doubleToFloat(0.588)], Java.type("float[]"))))
                            .setTexture(new ImageTexture().setUSE("NoTextureAtlas")))
                          .setGeometry(new IndexedFaceSet().setCoordIndex(Java.to([36,33,0,-1,1,0,33,-1,33,35,1,-1,34,2,1,-1,1,35,34,-1,5,4,42,-1,42,39,5,-1,25,19,18,-1,18,31,25,-1,32,20,19,-1,19,25,32,-1,36,0,26,-1,26,41,36,-1,22,25,31,-1,31,21,22,-1,23,32,25,-1,25,22,23,-1,41,26,5,-1,5,39,41,-1,7,1,2,-1,2,6,7,-1,8,0,1,-1,1,7,8,-1,9,3,4,-1,4,10,9,-1,10,4,5,-1,5,11,10,-1,6,2,24,-1,24,27,6,-1,28,26,0,-1,0,8,28,-1,27,24,3,-1,3,9,27,-1,11,5,26,-1,26,28,11,-1,13,7,6,-1,6,12,13,-1,12,6,27,-1,27,29,12,-1,14,8,7,-1,7,13,14,-1,30,28,8,-1,8,14,30,-1,15,9,10,-1,10,16,15,-1,29,27,9,-1,9,15,29,-1,17,11,28,-1,28,30,17,-1,16,10,11,-1,11,17,16,-1,19,13,12,-1,12,18,19,-1,18,12,29,-1,29,31,18,-1,20,14,13,-1,13,19,20,-1,32,30,14,-1,14,20,32,-1,21,15,16,-1,16,22,21,-1,31,29,15,-1,15,21,31,-1,23,17,30,-1,30,32,23,-1,22,16,17,-1,17,23,22,-1,37,40,24,-1,24,2,37,-1,40,38,3,-1,3,24,40,-1,38,42,4,-1,4,3,38,-1,34,37,2,-1,44,43,52,-1,52,51,50,-1,50,49,48,-1,48,47,46,-1,50,48,46,-1,52,50,46,-1,44,52,46,-1,44,46,45,-1,35,43,44,-1,44,34,35,-1,34,44,45,-1,45,37,34,-1,37,45,46,-1,46,40,37,-1,40,46,47,-1,47,38,40,-1,38,47,48,-1,48,42,38,-1,42,48,49,-1,49,39,42,-1,39,49,50,-1,50,41,39,-1,41,50,51,-1,51,36,41,-1,36,51,52,-1,52,33,36,-1,33,52,43,-1,43,35,33,-1], Java.type("int[]"))).setCreaseAngle(1.57).setTexCoordIndex(Java.to([2,4,3,-1,5,3,4,-1,4,6,5,-1,8,7,5,-1,5,6,8,-1,1,0,10,-1,10,9,1,-1,16,13,12,-1,12,17,16,-1,24,23,13,-1,13,16,24,-1,2,3,26,-1,26,25,2,-1,27,16,17,-1,17,28,27,-1,29,24,16,-1,16,27,29,-1,25,26,31,-1,31,30,25,-1,32,5,7,-1,7,33,32,-1,34,3,5,-1,5,32,34,-1,14,11,0,-1,0,15,14,-1,15,0,1,-1,1,18,15,-1,33,7,37,-1,37,38,33,-1,39,26,3,-1,3,34,39,-1,38,37,41,-1,41,42,38,-1,43,31,26,-1,26,39,43,-1,44,32,33,-1,33,45,44,-1,45,33,38,-1,38,48,45,-1,49,34,32,-1,32,44,49,-1,50,39,34,-1,34,49,50,-1,19,14,15,-1,15,20,19,-1,48,38,42,-1,42,51,48,-1,52,43,39,-1,39,50,52,-1,20,15,18,-1,18,21,20,-1,13,44,45,-1,45,12,13,-1,12,45,48,-1,48,17,12,-1,23,49,44,-1,44,13,23,-1,24,50,49,-1,49,23,24,-1,22,19,20,-1,20,35,22,-1,17,48,51,-1,51,28,17,-1,29,52,50,-1,50,24,29,-1,35,20,21,-1,21,36,35,-1,53,54,37,-1,37,7,53,-1,54,55,41,-1,41,37,54,-1,40,10,0,-1,0,11,40,-1,8,53,7,-1,56,65,64,-1,64,63,62,-1,62,61,60,-1,60,59,58,-1,62,60,58,-1,64,62,58,-1,56,64,58,-1,56,58,57,-1,6,65,56,-1,56,8,6,-1,8,56,57,-1,57,53,8,-1,53,57,58,-1,58,54,53,-1,54,58,59,-1,59,55,54,-1,55,59,60,-1,60,66,55,-1,10,47,46,-1,46,9,10,-1,30,61,62,-1,62,25,30,-1,25,62,63,-1,63,2,25,-1,2,63,64,-1,64,4,2,-1,4,64,65,-1,65,6,4,-1], Java.type("int[]")))
                            .setCoord(new Coordinate().setPoint(Java.to([doubleToFloat(1.696),doubleToFloat(-0.8024),doubleToFloat(0.901),doubleToFloat(0.1851),doubleToFloat(-0.1712),doubleToFloat(1.313),doubleToFloat(-1.433),doubleToFloat(-0.8024),doubleToFloat(0.8928),doubleToFloat(-1.585),doubleToFloat(-3.095),doubleToFloat(0.8819),doubleToFloat(0.1851),doubleToFloat(-3.095),doubleToFloat(0.8819),doubleToFloat(1.646),doubleToFloat(-3.095),doubleToFloat(0.8819),doubleToFloat(-1.846),doubleToFloat(-1.229),doubleToFloat(2.182),doubleToFloat(0.2812),doubleToFloat(-0.6275),doubleToFloat(2.435),doubleToFloat(1.968),doubleToFloat(-1.229),doubleToFloat(2.184),doubleToFloat(-2.007),doubleToFloat(-3.095),doubleToFloat(2.178),doubleToFloat(0.1851),doubleToFloat(-3.095),doubleToFloat(2.178),doubleToFloat(2.112),doubleToFloat(-3.095),doubleToFloat(2.178),doubleToFloat(-1.931),doubleToFloat(-1.633),doubleToFloat(3.572),doubleToFloat(0.2858),doubleToFloat(-1.142),doubleToFloat(3.845),doubleToFloat(2.059),doubleToFloat(-1.633),doubleToFloat(3.562),doubleToFloat(-2.148),doubleToFloat(-3.095),doubleToFloat(3.628),doubleToFloat(0.1851),doubleToFloat(-3.095),doubleToFloat(3.628),doubleToFloat(2.25),doubleToFloat(-3.095),doubleToFloat(3.628),doubleToFloat(-1.486),doubleToFloat(-2.129),doubleToFloat(4.51),doubleToFloat(0.2858),doubleToFloat(-1.597),doubleToFloat(4.893),doubleToFloat(1.797),doubleToFloat(-2.129),doubleToFloat(4.446),doubleToFloat(-1.781),doubleToFloat(-3.095),doubleToFloat(4.687),doubleToFloat(0.2858),doubleToFloat(-3.095),doubleToFloat(5.256),doubleToFloat(1.925),doubleToFloat(-3.095),doubleToFloat(4.687),doubleToFloat(-1.772),doubleToFloat(-2.631),doubleToFloat(0.8819),doubleToFloat(0.2858),doubleToFloat(-2.631),doubleToFloat(5.412),doubleToFloat(1.857),doubleToFloat(-2.631),doubleToFloat(0.8819),doubleToFloat(-2.223),doubleToFloat(-2.631),doubleToFloat(2.178),doubleToFloat(2.293),doubleToFloat(-2.631),doubleToFloat(2.178),doubleToFloat(-2.341),doubleToFloat(-2.631),doubleToFloat(3.628),doubleToFloat(2.394),doubleToFloat(-2.631),doubleToFloat(3.628),doubleToFloat(-1.84),doubleToFloat(-2.631),doubleToFloat(4.756),doubleToFloat(2.017),doubleToFloat(-2.631),doubleToFloat(4.756),doubleToFloat(1.52),doubleToFloat(-0.0134),doubleToFloat(0.0048),doubleToFloat(-1.206),doubleToFloat(-0.0134),doubleToFloat(0.0061),doubleToFloat(0.1851),doubleToFloat(0.3576),doubleToFloat(0.6662),doubleToFloat(1.796),doubleToFloat(-0.9332),doubleToFloat(-0.1518),doubleToFloat(-1.592),doubleToFloat(-0.9332),doubleToFloat(-0.1559),doubleToFloat(-1.541),doubleToFloat(-3.095),doubleToFloat(-0.1518),doubleToFloat(1.639),doubleToFloat(-3.095),doubleToFloat(-0.1518),doubleToFloat(-1.708),doubleToFloat(-2.631),doubleToFloat(-0.1518),doubleToFloat(1.82),doubleToFloat(-2.631),doubleToFloat(-0.1518),doubleToFloat(0.1851),doubleToFloat(-3.095),doubleToFloat(-0.1518),doubleToFloat(0.1828),doubleToFloat(0.0846),doubleToFloat(-0.6939),doubleToFloat(-0.8905),doubleToFloat(-0.1781),doubleToFloat(-1.341),doubleToFloat(-1.175),doubleToFloat(-0.8458),doubleToFloat(-1.468),doubleToFloat(-1.281),doubleToFloat(-2.321),doubleToFloat(-1.412),doubleToFloat(-1.245),doubleToFloat(-2.492),doubleToFloat(-1.394),doubleToFloat(0.1856),doubleToFloat(-2.492),doubleToFloat(-1.394),doubleToFloat(1.352),doubleToFloat(-2.492),doubleToFloat(-1.394),doubleToFloat(1.398),doubleToFloat(-2.321),doubleToFloat(-1.412),doubleToFloat(1.375),doubleToFloat(-0.8458),doubleToFloat(-1.468),doubleToFloat(1.178),doubleToFloat(-0.1781),doubleToFloat(-1.341)], Java.type("float[]"))))
                            .setTexCoord(new TextureCoordinate().setPoint(Java.to([doubleToFloat(0.5046),doubleToFloat(0.9061),doubleToFloat(0.4664),doubleToFloat(0.9061),doubleToFloat(0.3813),doubleToFloat(0.8655),doubleToFloat(0.3794),doubleToFloat(0.8893),doubleToFloat(0.368),doubleToFloat(0.869),doubleToFloat(0.3703),doubleToFloat(0.8986),doubleToFloat(0.3591),doubleToFloat(0.8766),doubleToFloat(0.3794),doubleToFloat(0.8891),doubleToFloat(0.368),doubleToFloat(0.8691),doubleToFloat(0.4666),doubleToFloat(0.8883),doubleToFloat(0.5046),doubleToFloat(0.8883),doubleToFloat(0.5509),doubleToFloat(0.9061),doubleToFloat(0.3967),doubleToFloat(0.963),doubleToFloat(0.3877),doubleToFloat(0.9702),doubleToFloat(0.562),doubleToFloat(0.9285),doubleToFloat(0.5046),doubleToFloat(0.9285),doubleToFloat(0.4059),doubleToFloat(0.9781),doubleToFloat(0.4144),doubleToFloat(0.966),doubleToFloat(0.4542),doubleToFloat(0.9285),doubleToFloat(0.5657),doubleToFloat(0.9535),doubleToFloat(0.5046),doubleToFloat(0.9535),doubleToFloat(0.4506),doubleToFloat(0.9535),doubleToFloat(0.5561),doubleToFloat(0.9717),doubleToFloat(0.397),doubleToFloat(0.9616),doubleToFloat(0.4144),doubleToFloat(0.966),doubleToFloat(0.4224),doubleToFloat(0.8577),doubleToFloat(0.4263),doubleToFloat(0.8811),doubleToFloat(0.4134),doubleToFloat(0.9791),doubleToFloat(0.4208),doubleToFloat(0.9685),doubleToFloat(0.4208),doubleToFloat(0.9685),doubleToFloat(0.4291),doubleToFloat(0.8577),doubleToFloat(0.4329),doubleToFloat(0.8811),doubleToFloat(0.3769),doubleToFloat(0.9239),doubleToFloat(0.3855),doubleToFloat(0.9182),doubleToFloat(0.3855),doubleToFloat(0.9183),doubleToFloat(0.502),doubleToFloat(0.9815),doubleToFloat(0.4591),doubleToFloat(0.9717),doubleToFloat(0.4263),doubleToFloat(0.8811),doubleToFloat(0.4263),doubleToFloat(0.9104),doubleToFloat(0.4263),doubleToFloat(0.9104),doubleToFloat(0.5498),doubleToFloat(0.8883),doubleToFloat(0.4329),doubleToFloat(0.8811),doubleToFloat(0.4329),doubleToFloat(0.9104),doubleToFloat(0.4329),doubleToFloat(0.9104),doubleToFloat(0.3843),doubleToFloat(0.9558),doubleToFloat(0.3913),doubleToFloat(0.9496),doubleToFloat(0.4741),doubleToFloat(0.8664),doubleToFloat(0.5046),doubleToFloat(0.8664),doubleToFloat(0.4263),doubleToFloat(0.9431),doubleToFloat(0.3913),doubleToFloat(0.9494),doubleToFloat(0.4263),doubleToFloat(0.9431),doubleToFloat(0.4329),doubleToFloat(0.9431),doubleToFloat(0.4329),doubleToFloat(0.9431),doubleToFloat(0.3813),doubleToFloat(0.8654),doubleToFloat(0.4224),doubleToFloat(0.8577),doubleToFloat(0.4291),doubleToFloat(0.8577),doubleToFloat(0.3704),doubleToFloat(0.8386),doubleToFloat(0.38),doubleToFloat(0.8357),doubleToFloat(0.4179),doubleToFloat(0.8293),doubleToFloat(0.4204),doubleToFloat(0.8297),doubleToFloat(0.4204),doubleToFloat(0.8297),doubleToFloat(0.4204),doubleToFloat(0.8297),doubleToFloat(0.4179),doubleToFloat(0.8293),doubleToFloat(0.38),doubleToFloat(0.8357),doubleToFloat(0.3704),doubleToFloat(0.8386),doubleToFloat(0.3666),doubleToFloat(0.8532),doubleToFloat(0.4291),doubleToFloat(0.8577)], Java.type("float[]"))))))))))))
            .addChild(new HAnimJoint("hanim_humanoid_root").setName("sacroiliac").setDEF("hanim_sacroiliac").setCenter(Java.to([doubleToFloat(0),doubleToFloat(32.91),doubleToFloat(-1.57)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(0)], Java.type("float[]"))).setLlimit(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(0)], Java.type("float[]")))
              .addChild(new HAnimSegment("hanim_sacroiliac").setName("pelvis").setDEF("hanim_pelvis")
                .addChild(new Transform().setTranslation(Java.to([doubleToFloat(0),doubleToFloat(32.91),doubleToFloat(-1.57)], Java.type("float[]")))
                  .addChild(new Shape()
                    .setAppearance(new Appearance()
                      .setMaterial(new Material().setDiffuseColor(Java.to([doubleToFloat(0.588),doubleToFloat(0.588),doubleToFloat(0.588)], Java.type("float[]"))))
                      .setTexture(new ImageTexture().setUSE("NoTextureAtlas")))
                    .setGeometry(new IndexedFaceSet().setCoordIndex(Java.to([17,0,6,-1,6,8,17,-1,33,34,32,-1,32,16,33,-1,26,4,2,-1,2,25,26,-1,18,5,3,-1,3,16,18,-1,22,23,6,-1,6,0,22,-1,19,8,6,-1,6,1,19,-1,20,35,73,-1,73,2,20,-1,24,75,76,-1,76,3,24,-1,17,9,4,-1,4,0,17,-1,21,27,5,-1,5,1,21,-1,18,16,32,-1,32,10,18,-1,22,0,4,-1,4,26,22,-1,19,1,5,-1,5,18,19,-1,9,20,2,-1,2,4,9,-1,27,24,3,-1,3,5,27,-1,23,21,1,-1,1,6,23,-1,81,35,20,-1,20,29,81,-1,12,17,8,-1,8,11,12,-1,13,9,17,-1,17,12,13,-1,20,9,13,-1,13,29,20,-1,14,10,30,-1,15,18,10,-1,10,14,15,-1,31,19,18,-1,18,15,31,-1,11,8,19,-1,19,31,11,-1,90,25,2,-1,2,73,90,-1,16,3,76,-1,76,33,16,-1,91,30,10,-1,10,28,91,-1,30,91,81,-1,81,7,30,-1,29,7,81,-1,29,13,7,-1,28,10,32,-1,32,34,28,-1,23,22,37,-1,37,36,23,-1,22,26,38,-1,38,37,22,-1,26,25,39,-1,39,38,26,-1,25,90,40,-1,40,39,25,-1,75,24,42,-1,42,41,75,-1,24,27,43,-1,43,42,24,-1,27,21,44,-1,44,43,27,-1,21,23,36,-1,36,44,21,-1,36,37,45,-1,37,38,45,-1,38,39,45,-1,39,40,45,-1,41,42,45,-1,42,43,45,-1,43,44,45,-1,44,36,45,-1,30,7,47,-1,47,46,30,-1,7,13,48,-1,48,47,7,-1,13,12,49,-1,49,48,13,-1,12,11,50,-1,50,49,12,-1,11,31,51,-1,51,50,11,-1,31,15,52,-1,52,51,31,-1,15,14,53,-1,53,52,15,-1,14,30,46,-1,46,53,14,-1,46,47,54,-1,47,48,54,-1,48,49,54,-1,49,50,54,-1,50,51,54,-1,51,52,54,-1,52,53,54,-1,53,46,54,-1,55,58,57,-1,57,56,55,-1,33,59,60,-1,60,34,33,-1,62,61,64,-1,64,63,62,-1,65,59,67,-1,67,66,65,-1,68,56,57,-1,57,69,68,-1,71,70,57,-1,57,58,71,-1,72,64,73,-1,73,35,72,-1,74,67,76,-1,76,75,74,-1,55,56,63,-1,63,77,55,-1,78,70,66,-1,66,79,78,-1,65,80,60,-1,60,59,65,-1,68,62,63,-1,63,56,68,-1,71,65,66,-1,66,70,71,-1,77,63,64,-1,64,72,77,-1,79,66,67,-1,67,74,79,-1,69,57,70,-1,70,78,69,-1,81,82,72,-1,72,35,81,-1,83,84,58,-1,58,55,83,-1,85,83,55,-1,55,77,85,-1,72,82,85,-1,85,77,72,-1,86,87,80,-1,88,86,80,-1,80,65,88,-1,89,88,65,-1,65,71,89,-1,84,89,71,-1,71,58,84,-1,90,73,64,-1,64,61,90,-1,59,33,76,-1,76,67,59,-1,91,28,80,-1,80,87,91,-1,87,92,81,-1,81,91,87,-1,82,81,92,-1,82,92,85,-1,28,34,60,-1,60,80,28,-1,69,94,93,-1,93,68,69,-1,68,93,95,-1,95,62,68,-1,62,95,96,-1,96,61,62,-1,61,96,40,-1,40,90,61,-1,75,41,97,-1,97,74,75,-1,74,97,98,-1,98,79,74,-1,79,98,99,-1,99,78,79,-1,78,99,94,-1,94,69,78,-1,94,45,93,-1,93,45,95,-1,95,45,96,-1,96,45,40,-1,41,45,97,-1,97,45,98,-1,98,45,99,-1,99,45,94,-1,87,101,100,-1,100,92,87,-1,92,100,102,-1,102,85,92,-1,85,102,103,-1,103,83,85,-1,83,103,104,-1,104,84,83,-1,84,104,105,-1,105,89,84,-1,89,105,106,-1,106,88,89,-1,88,106,107,-1,107,86,88,-1,86,107,101,-1,101,87,86,-1,101,108,100,-1,100,108,102,-1,102,108,103,-1,103,108,104,-1,104,108,105,-1,105,108,106,-1,106,108,107,-1,107,108,101,-1], Java.type("int[]"))).setCreaseAngle(1.57).setTexCoordIndex(Java.to([0,1,2,-1,2,3,0,-1,5,44,43,-1,43,4,5,-1,9,10,11,-1,11,8,9,-1,12,13,14,-1,14,4,12,-1,15,16,2,-1,2,1,15,-1,18,3,2,-1,2,17,18,-1,19,20,21,-1,21,11,19,-1,22,23,24,-1,24,14,22,-1,0,25,10,-1,10,1,0,-1,26,27,13,-1,13,17,26,-1,12,4,43,-1,43,7,12,-1,15,1,10,-1,10,9,15,-1,18,17,13,-1,13,12,18,-1,25,19,11,-1,11,10,25,-1,27,22,14,-1,14,13,27,-1,16,26,17,-1,17,2,16,-1,30,20,19,-1,19,31,30,-1,32,0,3,-1,3,33,32,-1,34,25,0,-1,0,32,34,-1,19,25,34,-1,34,31,19,-1,35,7,29,-1,36,12,7,-1,7,35,36,-1,37,18,12,-1,12,36,37,-1,33,3,18,-1,18,37,33,-1,39,8,11,-1,11,21,39,-1,4,14,24,-1,24,5,4,-1,38,29,7,-1,7,6,38,-1,29,38,30,-1,30,28,29,-1,31,28,30,-1,41,40,42,-1,6,7,43,-1,43,44,6,-1,16,15,46,-1,46,45,16,-1,15,9,47,-1,47,46,15,-1,9,8,48,-1,48,47,9,-1,8,39,49,-1,49,48,8,-1,23,22,51,-1,51,50,23,-1,22,27,52,-1,52,51,22,-1,27,26,53,-1,53,52,27,-1,26,16,45,-1,45,53,26,-1,45,46,54,-1,46,47,54,-1,47,48,54,-1,48,49,54,-1,50,51,54,-1,51,52,54,-1,52,53,54,-1,53,45,54,-1,29,28,56,-1,56,55,29,-1,42,40,57,-1,57,56,42,-1,34,32,58,-1,58,57,34,-1,32,33,59,-1,59,58,32,-1,33,37,60,-1,60,59,33,-1,37,36,61,-1,61,60,37,-1,36,35,62,-1,62,61,36,-1,35,29,55,-1,55,62,35,-1,55,56,63,-1,56,57,63,-1,57,58,63,-1,58,59,63,-1,59,60,63,-1,60,61,63,-1,61,62,63,-1,62,55,63,-1,64,67,66,-1,66,65,64,-1,69,68,71,-1,71,70,69,-1,73,72,75,-1,75,74,73,-1,76,68,78,-1,78,77,76,-1,79,65,66,-1,66,80,79,-1,82,81,66,-1,66,67,82,-1,83,75,85,-1,85,84,83,-1,86,78,88,-1,88,87,86,-1,64,65,74,-1,74,89,64,-1,90,81,77,-1,77,91,90,-1,76,92,71,-1,71,68,76,-1,79,73,74,-1,74,65,79,-1,82,76,77,-1,77,81,82,-1,89,74,75,-1,75,83,89,-1,91,77,78,-1,78,86,91,-1,80,66,81,-1,81,90,80,-1,93,94,83,-1,83,84,93,-1,95,96,67,-1,67,64,95,-1,97,95,64,-1,64,89,97,-1,83,94,97,-1,97,89,83,-1,98,99,92,-1,100,98,92,-1,92,76,100,-1,101,100,76,-1,76,82,101,-1,96,101,82,-1,82,67,96,-1,102,85,75,-1,75,72,102,-1,68,69,88,-1,88,78,68,-1,103,104,92,-1,92,99,103,-1,99,105,93,-1,93,103,99,-1,94,93,105,-1,106,108,107,-1,104,70,71,-1,71,92,104,-1,80,110,109,-1,109,79,80,-1,79,109,111,-1,111,73,79,-1,73,111,112,-1,112,72,73,-1,72,112,113,-1,113,102,72,-1,87,115,114,-1,114,86,87,-1,86,114,116,-1,116,91,86,-1,91,116,117,-1,117,90,91,-1,90,117,110,-1,110,80,90,-1,110,118,109,-1,109,118,111,-1,111,118,112,-1,112,118,113,-1,115,118,114,-1,114,118,116,-1,116,118,117,-1,117,118,110,-1,99,120,119,-1,119,105,99,-1,108,119,121,-1,121,107,108,-1,97,121,122,-1,122,95,97,-1,95,122,123,-1,123,96,95,-1,96,123,124,-1,124,101,96,-1,101,124,125,-1,125,100,101,-1,100,125,126,-1,126,98,100,-1,98,126,120,-1,120,99,98,-1,120,127,119,-1,119,127,121,-1,121,127,122,-1,122,127,123,-1,123,127,124,-1,124,127,125,-1,125,127,126,-1,126,127,120,-1], Java.type("int[]")))
                      .setCoord(new Coordinate().setPoint(Java.to([doubleToFloat(5.212),doubleToFloat(4.698),doubleToFloat(-2.625),doubleToFloat(4.968),doubleToFloat(5.032),doubleToFloat(3.07),doubleToFloat(1.016),doubleToFloat(3.867),doubleToFloat(-4.34),doubleToFloat(1.414),doubleToFloat(4.761),doubleToFloat(4.266),doubleToFloat(3.286),doubleToFloat(4.268),doubleToFloat(-3.787),doubleToFloat(3.252),doubleToFloat(4.915),doubleToFloat(3.882),doubleToFloat(6.124),doubleToFloat(4.989),doubleToFloat(0.2487),doubleToFloat(1.788),doubleToFloat(0.2033),doubleToFloat(-2.461),doubleToFloat(6.602),doubleToFloat(3.814),doubleToFloat(0.2487),doubleToFloat(3.411),doubleToFloat(2.56),doubleToFloat(-3.752),doubleToFloat(1.257),doubleToFloat(0.7206),doubleToFloat(2.619),doubleToFloat(6.722),doubleToFloat(1.679),doubleToFloat(0.2487),doubleToFloat(5.664),doubleToFloat(1.414),doubleToFloat(-2.456),doubleToFloat(3.431),doubleToFloat(0.8837),doubleToFloat(-3.397),doubleToFloat(1.644),doubleToFloat(0.3036),doubleToFloat(2.623),doubleToFloat(3.78),doubleToFloat(1.051),doubleToFloat(3.623),doubleToFloat(1.586),doubleToFloat(3.057),doubleToFloat(4.017),doubleToFloat(5.47),doubleToFloat(3.114),doubleToFloat(-2.5),doubleToFloat(3.595),doubleToFloat(3.243),doubleToFloat(3.846),doubleToFloat(5.468),doubleToFloat(3.614),doubleToFloat(2.996),doubleToFloat(1.243),doubleToFloat(2.27),doubleToFloat(-4.133),doubleToFloat(4.376),doubleToFloat(6.066),doubleToFloat(2.741),doubleToFloat(4.779),doubleToFloat(5.968),doubleToFloat(-2.335),doubleToFloat(5.552),doubleToFloat(5.964),doubleToFloat(0.2487),doubleToFloat(1.179),doubleToFloat(6.089),doubleToFloat(3.825),doubleToFloat(0.7451),doubleToFloat(5.522),doubleToFloat(-4.031),doubleToFloat(2.93),doubleToFloat(5.756),doubleToFloat(-3.387),doubleToFloat(2.869),doubleToFloat(6.128),doubleToFloat(3.512),doubleToFloat(0),doubleToFloat(1.166),doubleToFloat(2.697),doubleToFloat(1.475),doubleToFloat(0.789),doubleToFloat(-3.371),doubleToFloat(0.8571),doubleToFloat(-0.4369),doubleToFloat(0.2487),doubleToFloat(5.705),doubleToFloat(1.611),doubleToFloat(2.778),doubleToFloat(1.421),doubleToFloat(2.148),doubleToFloat(3.585),doubleToFloat(0),doubleToFloat(2.915),doubleToFloat(4.073),doubleToFloat(0),doubleToFloat(2.15),doubleToFloat(3.754),doubleToFloat(0),doubleToFloat(2.312),doubleToFloat(-3.745),doubleToFloat(4.526),doubleToFloat(7.154),doubleToFloat(0.1312),doubleToFloat(3.936),doubleToFloat(7.188),doubleToFloat(-1.89),doubleToFloat(2.568),doubleToFloat(6.989),doubleToFloat(-2.721),doubleToFloat(0.6541),doubleToFloat(6.759),doubleToFloat(-3.283),doubleToFloat(0),doubleToFloat(6.735),doubleToFloat(-3.224),doubleToFloat(0),doubleToFloat(7.189),doubleToFloat(3.068),doubleToFloat(1.03),doubleToFloat(7.24),doubleToFloat(2.98),doubleToFloat(2.505),doubleToFloat(7.28),doubleToFloat(2.699),doubleToFloat(3.611),doubleToFloat(7.229),doubleToFloat(2.119),doubleToFloat(0),doubleToFloat(8.165),doubleToFloat(-0.0491),doubleToFloat(1.567),doubleToFloat(-0.6144),doubleToFloat(0.2735),doubleToFloat(2.327),doubleToFloat(-0.4803),doubleToFloat(-2.027),doubleToFloat(3.513),doubleToFloat(-0.2713),doubleToFloat(-2.719),doubleToFloat(5.231),doubleToFloat(0.0316),doubleToFloat(-1.991),doubleToFloat(6.112),doubleToFloat(0.187),doubleToFloat(0.2797),doubleToFloat(5.272),doubleToFloat(0.0389),doubleToFloat(2.373),doubleToFloat(3.839),doubleToFloat(-0.2137),doubleToFloat(3.009),doubleToFloat(2.18),doubleToFloat(-0.5063),doubleToFloat(2.22),doubleToFloat(4.1),doubleToFloat(-1.264),doubleToFloat(0.1736),doubleToFloat(-5.47),doubleToFloat(3.114),doubleToFloat(-2.5),doubleToFloat(-5.212),doubleToFloat(4.698),doubleToFloat(-2.625),doubleToFloat(-6.124),doubleToFloat(4.989),doubleToFloat(0.2487),doubleToFloat(-6.602),doubleToFloat(3.814),doubleToFloat(0.2487),doubleToFloat(-1.586),doubleToFloat(3.057),doubleToFloat(4.017),doubleToFloat(-1.421),doubleToFloat(2.148),doubleToFloat(3.585),doubleToFloat(-0.7451),doubleToFloat(5.522),doubleToFloat(-4.031),doubleToFloat(-2.93),doubleToFloat(5.756),doubleToFloat(-3.387),doubleToFloat(-3.286),doubleToFloat(4.268),doubleToFloat(-3.787),doubleToFloat(-1.016),doubleToFloat(3.867),doubleToFloat(-4.34),doubleToFloat(-3.595),doubleToFloat(3.243),doubleToFloat(3.846),doubleToFloat(-3.252),doubleToFloat(4.915),doubleToFloat(3.882),doubleToFloat(-1.414),doubleToFloat(4.761),doubleToFloat(4.266),doubleToFloat(-4.779),doubleToFloat(5.968),doubleToFloat(-2.335),doubleToFloat(-5.552),doubleToFloat(5.964),doubleToFloat(0.2487),doubleToFloat(-4.968),doubleToFloat(5.032),doubleToFloat(3.07),doubleToFloat(-5.468),doubleToFloat(3.614),doubleToFloat(2.996),doubleToFloat(-1.243),doubleToFloat(2.27),doubleToFloat(-4.133),doubleToFloat(0),doubleToFloat(3.839),doubleToFloat(-3.995),doubleToFloat(-1.179),doubleToFloat(6.089),doubleToFloat(3.825),doubleToFloat(0),doubleToFloat(6.039),doubleToFloat(3.923),doubleToFloat(0),doubleToFloat(4.691),doubleToFloat(4.34),doubleToFloat(-3.411),doubleToFloat(2.56),doubleToFloat(-3.752),doubleToFloat(-4.376),doubleToFloat(6.066),doubleToFloat(2.741),doubleToFloat(-2.869),doubleToFloat(6.128),doubleToFloat(3.512),doubleToFloat(-1.257),doubleToFloat(0.7206),doubleToFloat(2.619),doubleToFloat(0),doubleToFloat(0.7395),doubleToFloat(-2.939),doubleToFloat(-1.475),doubleToFloat(0.789),doubleToFloat(-3.371),doubleToFloat(-5.664),doubleToFloat(1.414),doubleToFloat(-2.456),doubleToFloat(-6.722),doubleToFloat(1.679),doubleToFloat(0.2487),doubleToFloat(-3.431),doubleToFloat(0.8837),doubleToFloat(-3.397),doubleToFloat(-1.644),doubleToFloat(0.3036),doubleToFloat(2.623),doubleToFloat(-0.8571),doubleToFloat(-0.4369),doubleToFloat(0.2487),doubleToFloat(-3.78),doubleToFloat(1.051),doubleToFloat(3.623),doubleToFloat(-5.705),doubleToFloat(1.611),doubleToFloat(2.778),doubleToFloat(0),doubleToFloat(5.498),doubleToFloat(-3.963),doubleToFloat(0),doubleToFloat(-0.0013),doubleToFloat(0.2487),doubleToFloat(-1.788),doubleToFloat(0.2033),doubleToFloat(-2.461),doubleToFloat(-3.936),doubleToFloat(7.188),doubleToFloat(-1.89),doubleToFloat(-4.526),doubleToFloat(7.154),doubleToFloat(0.1312),doubleToFloat(-2.568),doubleToFloat(6.989),doubleToFloat(-2.721),doubleToFloat(-0.6541),doubleToFloat(6.759),doubleToFloat(-3.283),doubleToFloat(-1.03),doubleToFloat(7.24),doubleToFloat(2.98),doubleToFloat(-2.505),doubleToFloat(7.28),doubleToFloat(2.699),doubleToFloat(-3.611),doubleToFloat(7.229),doubleToFloat(2.119),doubleToFloat(-2.327),doubleToFloat(-0.4803),doubleToFloat(-2.027),doubleToFloat(-1.567),doubleToFloat(-0.6144),doubleToFloat(0.2735),doubleToFloat(-3.513),doubleToFloat(-0.2713),doubleToFloat(-2.719),doubleToFloat(-5.231),doubleToFloat(0.0316),doubleToFloat(-1.991),doubleToFloat(-6.112),doubleToFloat(0.187),doubleToFloat(0.2797),doubleToFloat(-5.272),doubleToFloat(0.0389),doubleToFloat(2.373),doubleToFloat(-3.839),doubleToFloat(-0.2137),doubleToFloat(3.009),doubleToFloat(-2.18),doubleToFloat(-0.5063),doubleToFloat(2.22),doubleToFloat(-4.1),doubleToFloat(-1.264),doubleToFloat(0.1736)], Java.type("float[]"))))
                      .setTexCoord(new TextureCoordinate().setPoint(Java.to([doubleToFloat(0.8787),doubleToFloat(0.5482),doubleToFloat(0.8879),doubleToFloat(0.5725),doubleToFloat(0.8253),doubleToFloat(0.5851),doubleToFloat(0.8261),doubleToFloat(0.5676),doubleToFloat(0.7471),doubleToFloat(0.4942),doubleToFloat(0.7327),doubleToFloat(0.4737),doubleToFloat(0.7752),doubleToFloat(0.4415),doubleToFloat(0.7864),doubleToFloat(0.4566),doubleToFloat(0.9667),doubleToFloat(0.5468),doubleToFloat(0.9322),doubleToFloat(0.5756),doubleToFloat(0.919),doubleToFloat(0.55),doubleToFloat(0.9483),doubleToFloat(0.5193),doubleToFloat(0.7595),doubleToFloat(0.5178),doubleToFloat(0.7459),doubleToFloat(0.5473),doubleToFloat(0.7237),doubleToFloat(0.5237),doubleToFloat(0.8882),doubleToFloat(0.5972),doubleToFloat(0.8277),doubleToFloat(0.6032),doubleToFloat(0.7744),doubleToFloat(0.5696),doubleToFloat(0.7846),doubleToFloat(0.5515),doubleToFloat(0.923),doubleToFloat(0.4984),doubleToFloat(0.9378),doubleToFloat(0.4748),doubleToFloat(0.9617),doubleToFloat(0.5071),doubleToFloat(0.706),doubleToFloat(0.5449),doubleToFloat(0.691),doubleToFloat(0.5316),doubleToFloat(0.7069),doubleToFloat(0.5075),doubleToFloat(0.9018),doubleToFloat(0.528),doubleToFloat(0.7676),doubleToFloat(0.5885),doubleToFloat(0.7308),doubleToFloat(0.5664),doubleToFloat(0.8725),doubleToFloat(0.4621),doubleToFloat(0.836),doubleToFloat(0.4464),doubleToFloat(0.8759),doubleToFloat(0.4302),doubleToFloat(0.887),doubleToFloat(0.4797),doubleToFloat(0.8684),doubleToFloat(0.519),doubleToFloat(0.8283),doubleToFloat(0.5351),doubleToFloat(0.8815),doubleToFloat(0.5033),doubleToFloat(0.8027),doubleToFloat(0.4614),doubleToFloat(0.7871),doubleToFloat(0.4954),doubleToFloat(0.8005),doubleToFloat(0.5251),doubleToFloat(0.8295),doubleToFloat(0.4283),doubleToFloat(0.9776),doubleToFloat(0.5387),doubleToFloat(0.8283),doubleToFloat(0.3651),doubleToFloat(0.836),doubleToFloat(0.3623),doubleToFloat(0.8429),doubleToFloat(0.368),doubleToFloat(0.7667),doubleToFloat(0.4754),doubleToFloat(0.754),doubleToFloat(0.4576),doubleToFloat(0.8277),doubleToFloat(0.6032),doubleToFloat(0.8882),doubleToFloat(0.5972),doubleToFloat(0.9322),doubleToFloat(0.5756),doubleToFloat(0.9667),doubleToFloat(0.5468),doubleToFloat(0.9776),doubleToFloat(0.5387),doubleToFloat(0.691),doubleToFloat(0.5316),doubleToFloat(0.706),doubleToFloat(0.5449),doubleToFloat(0.7308),doubleToFloat(0.5664),doubleToFloat(0.7676),doubleToFloat(0.5885),doubleToFloat(0.8317),doubleToFloat(0.5697),doubleToFloat(0.836),doubleToFloat(0.4464),doubleToFloat(0.8725),doubleToFloat(0.4621),doubleToFloat(0.8283),doubleToFloat(0.3651),doubleToFloat(0.8684),doubleToFloat(0.519),doubleToFloat(0.8283),doubleToFloat(0.5351),doubleToFloat(0.8005),doubleToFloat(0.5251),doubleToFloat(0.7871),doubleToFloat(0.4954),doubleToFloat(0.8027),doubleToFloat(0.4614),doubleToFloat(0.828),doubleToFloat(0.4762),doubleToFloat(0.8787),doubleToFloat(0.5482),doubleToFloat(0.8879),doubleToFloat(0.5725),doubleToFloat(0.8253),doubleToFloat(0.5851),doubleToFloat(0.8261),doubleToFloat(0.5676),doubleToFloat(0.7471),doubleToFloat(0.4942),doubleToFloat(0.7327),doubleToFloat(0.4737),doubleToFloat(0.754),doubleToFloat(0.4576),doubleToFloat(0.7667),doubleToFloat(0.4754),doubleToFloat(0.9667),doubleToFloat(0.5468),doubleToFloat(0.9322),doubleToFloat(0.5756),doubleToFloat(0.919),doubleToFloat(0.55),doubleToFloat(0.9483),doubleToFloat(0.5193),doubleToFloat(0.7595),doubleToFloat(0.5178),doubleToFloat(0.7459),doubleToFloat(0.5473),doubleToFloat(0.7237),doubleToFloat(0.5237),doubleToFloat(0.8882),doubleToFloat(0.5972),doubleToFloat(0.8277),doubleToFloat(0.6032),doubleToFloat(0.7744),doubleToFloat(0.5696),doubleToFloat(0.7846),doubleToFloat(0.5515),doubleToFloat(0.923),doubleToFloat(0.4984),doubleToFloat(0.9378),doubleToFloat(0.4748),doubleToFloat(0.9617),doubleToFloat(0.5071),doubleToFloat(0.706),doubleToFloat(0.5449),doubleToFloat(0.691),doubleToFloat(0.5316),doubleToFloat(0.7069),doubleToFloat(0.5075),doubleToFloat(0.9018),doubleToFloat(0.528),doubleToFloat(0.7676),doubleToFloat(0.5885),doubleToFloat(0.7308),doubleToFloat(0.5664),doubleToFloat(0.7864),doubleToFloat(0.4566),doubleToFloat(0.8759),doubleToFloat(0.4302),doubleToFloat(0.887),doubleToFloat(0.4797),doubleToFloat(0.8684),doubleToFloat(0.519),doubleToFloat(0.8283),doubleToFloat(0.5351),doubleToFloat(0.8815),doubleToFloat(0.5033),doubleToFloat(0.8027),doubleToFloat(0.4614),doubleToFloat(0.836),doubleToFloat(0.4464),doubleToFloat(0.7871),doubleToFloat(0.4954),doubleToFloat(0.8005),doubleToFloat(0.5251),doubleToFloat(0.9776),doubleToFloat(0.5387),doubleToFloat(0.8295),doubleToFloat(0.4283),doubleToFloat(0.7752),doubleToFloat(0.4415),doubleToFloat(0.8725),doubleToFloat(0.4621),doubleToFloat(0.836),doubleToFloat(0.3623),doubleToFloat(0.8283),doubleToFloat(0.3651),doubleToFloat(0.8429),doubleToFloat(0.368),doubleToFloat(0.8882),doubleToFloat(0.5972),doubleToFloat(0.8277),doubleToFloat(0.6032),doubleToFloat(0.9322),doubleToFloat(0.5756),doubleToFloat(0.9667),doubleToFloat(0.5468),doubleToFloat(0.9776),doubleToFloat(0.5387),doubleToFloat(0.706),doubleToFloat(0.5449),doubleToFloat(0.691),doubleToFloat(0.5316),doubleToFloat(0.7308),doubleToFloat(0.5664),doubleToFloat(0.7676),doubleToFloat(0.5885),doubleToFloat(0.8317),doubleToFloat(0.5697),doubleToFloat(0.8725),doubleToFloat(0.4621),doubleToFloat(0.836),doubleToFloat(0.4464),doubleToFloat(0.8283),doubleToFloat(0.3651),doubleToFloat(0.8684),doubleToFloat(0.519),doubleToFloat(0.8283),doubleToFloat(0.5351),doubleToFloat(0.8005),doubleToFloat(0.5251),doubleToFloat(0.7871),doubleToFloat(0.4954),doubleToFloat(0.8027),doubleToFloat(0.4614),doubleToFloat(0.828),doubleToFloat(0.4762)], Java.type("float[]"))))))))
              .addChild(new HAnimJoint("hanim_sacroiliac").setName("l_shoulder").setDEF("hanim_l_shoulder").setCenter(Java.to([doubleToFloat(7.266),doubleToFloat(54.049999),doubleToFloat(-1.79)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(0)], Java.type("float[]"))).setLlimit(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(0)], Java.type("float[]")))
                .addChild(new HAnimSegment("hanim_l_shoulder").setName("l_upperarm").setDEF("hanim_l_upperarm")
                  .addChild(new Transform().setTranslation(Java.to([doubleToFloat(7.266),doubleToFloat(54.049999),doubleToFloat(-1.79)], Java.type("float[]")))
                    .addChild(new Shape()
                      .setAppearance(new Appearance()
                        .setMaterial(new Material().setDiffuseColor(Java.to([doubleToFloat(0.588),doubleToFloat(0.588),doubleToFloat(0.588)], Java.type("float[]"))))
                        .setTexture(new ImageTexture().setUSE("NoTextureAtlas")))
                      .setGeometry(new IndexedFaceSet().setCoordIndex(Java.to([8,0,1,-1,1,9,8,-1,10,2,0,-1,0,8,10,-1,3,2,10,-1,10,11,3,-1,4,3,11,-1,11,12,4,-1,13,5,4,-1,4,12,13,-1,14,6,5,-1,5,13,14,-1,7,6,14,-1,14,15,7,-1,1,7,15,-1,15,9,1,-1,8,9,17,-1,17,16,8,-1,10,8,16,-1,16,18,10,-1,19,11,10,-1,10,18,19,-1,20,12,11,-1,11,19,20,-1,21,13,12,-1,12,20,21,-1,22,14,13,-1,13,21,22,-1,15,14,22,-1,22,23,15,-1,9,15,23,-1,23,17,9,-1,24,25,26,-1,26,27,24,-1,25,28,29,-1,29,26,25,-1,30,31,29,-1,29,28,30,-1,32,33,31,-1,31,30,32,-1,32,34,35,-1,35,33,32,-1,36,24,27,-1,27,37,36,-1,38,39,35,-1,35,34,38,-1,37,39,38,-1,38,36,37,-1,27,26,40,-1,40,41,27,-1,26,29,42,-1,42,40,26,-1,29,31,43,-1,43,42,29,-1,31,33,44,-1,44,43,31,-1,33,35,45,-1,45,44,33,-1,35,39,46,-1,46,45,35,-1,37,27,41,-1,41,47,37,-1,39,37,47,-1,47,46,39,-1,28,25,48,-1,25,24,48,-1,24,36,48,-1,36,38,48,-1,38,34,48,-1,34,32,48,-1,32,30,48,-1,30,28,48,-1,40,49,50,-1,50,41,40,-1,42,51,49,-1,49,40,42,-1,43,52,51,-1,51,42,43,-1,44,53,52,-1,52,43,44,-1,45,54,53,-1,53,44,45,-1,46,55,54,-1,54,45,46,-1,41,50,56,-1,56,47,41,-1,47,56,55,-1,55,46,47,-1,1,0,61,-1,61,57,1,-1,62,2,3,-1,3,58,62,-1,58,3,4,-1,4,59,58,-1,59,4,5,-1,5,60,59,-1,60,5,6,-1,6,63,60,-1,7,1,57,-1,57,64,7,-1,0,2,62,-1,62,61,0,-1,6,7,64,-1,64,63,6,-1,57,61,66,-1,66,65,57,-1,61,62,67,-1,67,66,61,-1,62,58,68,-1,68,67,62,-1,58,59,69,-1,69,68,58,-1,59,60,70,-1,70,69,59,-1,60,63,71,-1,71,70,60,-1,63,64,72,-1,72,71,63,-1,64,57,65,-1,65,72,64,-1,65,66,73,-1,66,67,73,-1,67,68,73,-1,68,69,73,-1,69,70,73,-1,70,71,73,-1,71,72,73,-1,72,65,73,-1], Java.type("int[]"))).setCreaseAngle(1.57).setTexCoordIndex(Java.to([9,0,1,-1,1,10,9,-1,11,2,0,-1,0,9,11,-1,3,2,11,-1,11,12,3,-1,4,3,12,-1,12,13,4,-1,14,5,4,-1,4,13,14,-1,15,6,5,-1,5,14,15,-1,8,7,17,-1,17,16,8,-1,1,8,16,-1,16,10,1,-1,9,10,19,-1,19,18,9,-1,11,9,18,-1,18,20,11,-1,21,12,11,-1,11,20,21,-1,22,13,12,-1,12,21,22,-1,23,14,13,-1,13,22,23,-1,24,15,14,-1,14,23,24,-1,16,17,26,-1,26,25,16,-1,10,16,25,-1,25,19,10,-1,27,28,29,-1,29,30,27,-1,28,31,32,-1,32,29,28,-1,33,34,32,-1,32,31,33,-1,35,36,34,-1,34,33,35,-1,35,37,38,-1,38,36,35,-1,39,27,30,-1,30,40,39,-1,41,42,38,-1,38,37,41,-1,40,43,44,-1,44,39,40,-1,30,29,45,-1,45,46,30,-1,29,32,47,-1,47,45,29,-1,32,34,48,-1,48,47,32,-1,34,36,49,-1,49,48,34,-1,36,38,50,-1,50,49,36,-1,38,42,51,-1,51,50,38,-1,40,30,46,-1,46,52,40,-1,43,40,52,-1,52,53,43,-1,31,28,54,-1,28,27,54,-1,27,39,54,-1,39,44,54,-1,41,37,54,-1,37,35,54,-1,35,33,54,-1,33,31,54,-1,45,56,55,-1,55,46,45,-1,47,57,56,-1,56,45,47,-1,48,58,57,-1,57,47,48,-1,49,59,58,-1,58,48,49,-1,50,60,59,-1,59,49,50,-1,51,61,60,-1,60,50,51,-1,46,55,62,-1,62,52,46,-1,52,62,63,-1,63,53,52,-1,64,65,77,-1,77,73,64,-1,78,66,67,-1,67,74,78,-1,74,67,68,-1,68,75,74,-1,75,68,69,-1,69,76,75,-1,76,69,70,-1,70,80,76,-1,71,64,73,-1,73,81,71,-1,65,66,78,-1,78,77,65,-1,72,71,81,-1,81,79,72,-1,73,77,83,-1,83,82,73,-1,77,78,84,-1,84,83,77,-1,78,74,85,-1,85,84,78,-1,74,75,86,-1,86,85,74,-1,75,76,87,-1,87,86,75,-1,76,80,88,-1,88,87,76,-1,79,81,89,-1,89,88,79,-1,81,73,82,-1,82,89,81,-1,82,83,90,-1,83,84,90,-1,84,85,90,-1,85,86,90,-1,86,87,90,-1,87,88,90,-1,88,89,90,-1,89,82,90,-1], Java.type("int[]")))
                        .setCoord(new Coordinate().setPoint(Java.to([doubleToFloat(1.368),doubleToFloat(-9.721),doubleToFloat(-1.075),doubleToFloat(0.5554),doubleToFloat(-9.627),doubleToFloat(-1.323),doubleToFloat(1.697),doubleToFloat(-9.897),doubleToFloat(0.0871),doubleToFloat(1.37),doubleToFloat(-9.961),doubleToFloat(0.9966),doubleToFloat(0.5722),doubleToFloat(-10.03),doubleToFloat(1.401),doubleToFloat(-0.1728),doubleToFloat(-10.12),doubleToFloat(1.029),doubleToFloat(-0.5888),doubleToFloat(-10.15),doubleToFloat(0.0951),doubleToFloat(-0.1549),doubleToFloat(-9.857),doubleToFloat(-1.083),doubleToFloat(1.515),doubleToFloat(-5.201),doubleToFloat(-1.218),doubleToFloat(0.6263),doubleToFloat(-5.266),doubleToFloat(-1.527),doubleToFloat(1.964),doubleToFloat(-5.133),doubleToFloat(0.0302),doubleToFloat(1.424),doubleToFloat(-5.144),doubleToFloat(1.327),doubleToFloat(0.5103),doubleToFloat(-5.244),doubleToFloat(1.701),doubleToFloat(-0.3415),doubleToFloat(-5.296),doubleToFloat(1.393),doubleToFloat(-0.9295),doubleToFloat(-5.321),doubleToFloat(0.1721),doubleToFloat(-0.2188),doubleToFloat(-5.361),doubleToFloat(-1.227),doubleToFloat(1.425),doubleToFloat(-0.1998),doubleToFloat(-1.296),doubleToFloat(0.5195),doubleToFloat(-0.6168),doubleToFloat(-1.758),doubleToFloat(1.89),doubleToFloat(-0.0318),doubleToFloat(-0.0615),doubleToFloat(1.445),doubleToFloat(-0.2217),doubleToFloat(1.407),doubleToFloat(0.4413),doubleToFloat(-0.6502),doubleToFloat(1.913),doubleToFloat(-0.3607),doubleToFloat(-0.9925),doubleToFloat(1.358),doubleToFloat(-1.068),doubleToFloat(-1.294),doubleToFloat(0.1351),doubleToFloat(-0.4203),doubleToFloat(-1.018),doubleToFloat(-1.326),doubleToFloat(-0.0087),doubleToFloat(0.9247),doubleToFloat(-1.888),doubleToFloat(0.8381),doubleToFloat(1.677),doubleToFloat(-1.7),doubleToFloat(1.274),doubleToFloat(0.682),doubleToFloat(-1.606),doubleToFloat(0.0986),doubleToFloat(0.1637),doubleToFloat(-2.066),doubleToFloat(1.254),doubleToFloat(1.865),doubleToFloat(-0.0092),doubleToFloat(1.904),doubleToFloat(0.7808),doubleToFloat(-0.0329),doubleToFloat(0.8112),doubleToFloat(1.565),doubleToFloat(1.759),doubleToFloat(1.261),doubleToFloat(0.6935),doubleToFloat(1.832),doubleToFloat(-0.2175),doubleToFloat(1.07),doubleToFloat(1.96),doubleToFloat(0.055),doubleToFloat(0.2851),doubleToFloat(2.17),doubleToFloat(-0.9228),doubleToFloat(0.622),doubleToFloat(1.646),doubleToFloat(-1.001),doubleToFloat(-0.0973),doubleToFloat(1.703),doubleToFloat(-1.019),doubleToFloat(0.6054),doubleToFloat(-1.572),doubleToFloat(-0.9724),doubleToFloat(-0.2436),doubleToFloat(-1.642),doubleToFloat(-1.322),doubleToFloat(0.4084),doubleToFloat(-0.0629),doubleToFloat(-1.46),doubleToFloat(-0.5337),doubleToFloat(-0.0223),doubleToFloat(1.482),doubleToFloat(-1.046),doubleToFloat(-1.674),doubleToFloat(0.3106),doubleToFloat(-1.259),doubleToFloat(-2.163),doubleToFloat(2.16),doubleToFloat(-0.9553),doubleToFloat(-0.0259),doubleToFloat(1.486),doubleToFloat(-1.078),doubleToFloat(1.804),doubleToFloat(0.2797),doubleToFloat(-1.333),doubleToFloat(2.23),doubleToFloat(-0.9142),doubleToFloat(-1.685),doubleToFloat(1.672),doubleToFloat(-1.394),doubleToFloat(-1.825),doubleToFloat(-0.0013),doubleToFloat(-0.8917),doubleToFloat(-1.602),doubleToFloat(-1.736),doubleToFloat(-0.466),doubleToFloat(1.569),doubleToFloat(-0.0085),doubleToFloat(1.676),doubleToFloat(-3.535),doubleToFloat(-1.681),doubleToFloat(0.4959),doubleToFloat(-3.63),doubleToFloat(-2.197),doubleToFloat(2.36),doubleToFloat(-3.499),doubleToFloat(-0.0084),doubleToFloat(1.688),doubleToFloat(-3.559),doubleToFloat(1.804),doubleToFloat(0.4978),doubleToFloat(-3.666),doubleToFloat(2.23),doubleToFloat(-0.7557),doubleToFloat(-3.808),doubleToFloat(1.672),doubleToFloat(-1.233),doubleToFloat(-3.898),doubleToFloat(0.0128),doubleToFloat(-0.6796),doubleToFloat(-3.767),doubleToFloat(-1.736),doubleToFloat(0.5376),doubleToFloat(-10.76),doubleToFloat(-1.254),doubleToFloat(1.335),doubleToFloat(-10.61),doubleToFloat(0.9861),doubleToFloat(0.5611),doubleToFloat(-10.68),doubleToFloat(1.304),doubleToFloat(-0.1707),doubleToFloat(-10.77),doubleToFloat(0.995),doubleToFloat(1.276),doubleToFloat(-10.65),doubleToFloat(-1.021),doubleToFloat(1.765),doubleToFloat(-10.6),doubleToFloat(0.1259),doubleToFloat(-0.6302),doubleToFloat(-10.87),doubleToFloat(0.1389),doubleToFloat(-0.0997),doubleToFloat(-10.79),doubleToFloat(-1.063),doubleToFloat(0.6361),doubleToFloat(-11.54),doubleToFloat(-0.8631),doubleToFloat(1.142),doubleToFloat(-11.46),doubleToFloat(-0.7039),doubleToFloat(1.516),doubleToFloat(-11.43),doubleToFloat(0.1719),doubleToFloat(1.205),doubleToFloat(-11.43),doubleToFloat(0.792),doubleToFloat(0.6643),doubleToFloat(-11.48),doubleToFloat(1.014),doubleToFloat(0.1567),doubleToFloat(-11.54),doubleToFloat(0.7997),doubleToFloat(-0.1747),doubleToFloat(-11.62),doubleToFloat(0.1807),doubleToFloat(0.2316),doubleToFloat(-11.55),doubleToFloat(-0.7427),doubleToFloat(0.6986),doubleToFloat(-11.76),doubleToFloat(0.0849)], Java.type("float[]"))))
                        .setTexCoord(new TextureCoordinate().setPoint(Java.to([doubleToFloat(0.6228),doubleToFloat(0.0712),doubleToFloat(0.6294),doubleToFloat(0.0658),doubleToFloat(0.6103),doubleToFloat(0.0743),doubleToFloat(0.5995),doubleToFloat(0.0746),doubleToFloat(0.5896),doubleToFloat(0.0727),doubleToFloat(0.5805),doubleToFloat(0.0665),doubleToFloat(0.5699),doubleToFloat(0.0593),doubleToFloat(0.6451),doubleToFloat(0.0476),doubleToFloat(0.636),doubleToFloat(0.0584),doubleToFloat(0.6367),doubleToFloat(0.133),doubleToFloat(0.6484),doubleToFloat(0.1281),doubleToFloat(0.6193),doubleToFloat(0.1388),doubleToFloat(0.6011),doubleToFloat(0.1395),doubleToFloat(0.5876),doubleToFloat(0.137),doubleToFloat(0.573),doubleToFloat(0.1337),doubleToFloat(0.5541),doubleToFloat(0.1297),doubleToFloat(0.6614),doubleToFloat(0.1198),doubleToFloat(0.6799),doubleToFloat(0.1111),doubleToFloat(0.6551),doubleToFloat(0.2133),doubleToFloat(0.6704),doubleToFloat(0.1973),doubleToFloat(0.6305),doubleToFloat(0.2194),doubleToFloat(0.5996),doubleToFloat(0.2186),doubleToFloat(0.5801),doubleToFloat(0.21),doubleToFloat(0.5697),doubleToFloat(0.2048),doubleToFloat(0.5466),doubleToFloat(0.1979),doubleToFloat(0.6876),doubleToFloat(0.1846),doubleToFloat(0.7073),doubleToFloat(0.1738),doubleToFloat(0.4207),doubleToFloat(0.1763),doubleToFloat(0.4282),doubleToFloat(0.1674),doubleToFloat(0.4485),doubleToFloat(0.1712),doubleToFloat(0.4385),doubleToFloat(0.1896),doubleToFloat(0.4305),doubleToFloat(0.1519),doubleToFloat(0.4504),doubleToFloat(0.1509),doubleToFloat(0.431),doubleToFloat(0.1243),doubleToFloat(0.4437),doubleToFloat(0.1205),doubleToFloat(0.4234),doubleToFloat(0.1092),doubleToFloat(0.4341),doubleToFloat(0.1033),doubleToFloat(0.408),doubleToFloat(0.1043),doubleToFloat(0.4182),doubleToFloat(0.0866),doubleToFloat(0.4054),doubleToFloat(0.1873),doubleToFloat(0.4126),doubleToFloat(0.2016),doubleToFloat(0.3918),doubleToFloat(0.1029),doubleToFloat(0.4004),doubleToFloat(0.0777),doubleToFloat(0.3835),doubleToFloat(0.2094),doubleToFloat(0.3826),doubleToFloat(0.1833),doubleToFloat(0.4688),doubleToFloat(0.181),doubleToFloat(0.4508),doubleToFloat(0.2023),doubleToFloat(0.4777),doubleToFloat(0.1525),doubleToFloat(0.4696),doubleToFloat(0.1144),doubleToFloat(0.4553),doubleToFloat(0.0896),doubleToFloat(0.4387),doubleToFloat(0.0714),doubleToFloat(0.4187),doubleToFloat(0.0548),doubleToFloat(0.4258),doubleToFloat(0.2203),doubleToFloat(0.3963),doubleToFloat(0.2357),doubleToFloat(0.4009),doubleToFloat(0.1445),doubleToFloat(0.4778),doubleToFloat(0.2309),doubleToFloat(0.5052),doubleToFloat(0.199),doubleToFloat(0.519),doubleToFloat(0.1542),doubleToFloat(0.5073),doubleToFloat(0.1007),doubleToFloat(0.4866),doubleToFloat(0.0666),doubleToFloat(0.4662),doubleToFloat(0.0468),doubleToFloat(0.4451),doubleToFloat(0.0281),doubleToFloat(0.4475),doubleToFloat(0.2511),doubleToFloat(0.4157),doubleToFloat(0.268),doubleToFloat(0.0457),doubleToFloat(0.5477),doubleToFloat(0.0471),doubleToFloat(0.5348),doubleToFloat(0.0517),doubleToFloat(0.5187),doubleToFloat(0.0571),doubleToFloat(0.5017),doubleToFloat(0.0625),doubleToFloat(0.4884),doubleToFloat(0.0657),doubleToFloat(0.4747),doubleToFloat(0.0673),doubleToFloat(0.4552),doubleToFloat(0.0409),doubleToFloat(0.557),doubleToFloat(0.0292),doubleToFloat(0.5765),doubleToFloat(0.0457),doubleToFloat(0.5477),doubleToFloat(0.0571),doubleToFloat(0.5017),doubleToFloat(0.0625),doubleToFloat(0.4884),doubleToFloat(0.0657),doubleToFloat(0.4747),doubleToFloat(0.0471),doubleToFloat(0.5348),doubleToFloat(0.0517),doubleToFloat(0.5187),doubleToFloat(0.0292),doubleToFloat(0.5765),doubleToFloat(0.0673),doubleToFloat(0.4552),doubleToFloat(0.0409),doubleToFloat(0.557),doubleToFloat(0.0457),doubleToFloat(0.5477),doubleToFloat(0.0471),doubleToFloat(0.5348),doubleToFloat(0.0517),doubleToFloat(0.5187),doubleToFloat(0.0571),doubleToFloat(0.5017),doubleToFloat(0.0625),doubleToFloat(0.4884),doubleToFloat(0.0657),doubleToFloat(0.4747),doubleToFloat(0.0673),doubleToFloat(0.4552),doubleToFloat(0.0409),doubleToFloat(0.557),doubleToFloat(0.0548),doubleToFloat(0.5098)], Java.type("float[]"))))))))
                .addChild(new HAnimJoint("hanim_l_shoulder").setName("l_elbow").setDEF("hanim_l_elbow").setCenter(Java.to([doubleToFloat(7.834),doubleToFloat(43.389999),doubleToFloat(-1.651)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(0)], Java.type("float[]"))).setLlimit(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(0)], Java.type("float[]")))
                  .addChild(new HAnimSegment("hanim_l_elbow").setName("l_forearm").setDEF("hanim_l_forearm")
                    .addChild(new Transform().setTranslation(Java.to([doubleToFloat(7.834),doubleToFloat(43.389999),doubleToFloat(-1.651)], Java.type("float[]")))
                      .addChild(new Shape()
                        .setAppearance(new Appearance()
                          .setMaterial(new Material().setDiffuseColor(Java.to([doubleToFloat(0.588),doubleToFloat(0.588),doubleToFloat(0.588)], Java.type("float[]"))))
                          .setTexture(new ImageTexture().setUSE("NoTextureAtlas")))
                        .setGeometry(new IndexedFaceSet().setCoordIndex(Java.to([0,12,11,-1,11,4,0,-1,12,13,5,-1,5,11,12,-1,13,1,8,-1,8,5,13,-1,1,2,9,-1,9,8,1,-1,2,3,10,-1,10,9,2,-1,3,14,6,-1,6,10,3,-1,15,0,4,-1,4,7,15,-1,14,15,7,-1,7,6,14,-1,4,11,23,-1,23,16,4,-1,11,5,17,-1,17,23,11,-1,5,8,20,-1,20,17,5,-1,10,6,18,-1,18,22,10,-1,7,4,16,-1,16,19,7,-1,8,9,21,-1,21,20,8,-1,9,10,22,-1,22,21,9,-1,6,7,19,-1,19,18,6,-1,16,23,24,-1,23,17,24,-1,17,20,24,-1,20,21,24,-1,21,22,24,-1,22,18,24,-1,18,19,24,-1,19,16,24,-1,12,0,25,-1,25,29,12,-1,13,30,26,-1,26,1,13,-1,1,26,27,-1,27,2,1,-1,2,27,28,-1,28,3,2,-1,3,28,31,-1,31,14,3,-1,0,15,32,-1,32,25,0,-1,13,12,29,-1,29,30,13,-1,15,14,31,-1,31,32,15,-1,29,25,34,-1,34,33,29,-1,25,32,35,-1,35,34,25,-1,32,31,36,-1,36,35,32,-1,31,28,37,-1,37,36,31,-1,28,27,38,-1,38,37,28,-1,27,26,39,-1,39,38,27,-1,26,30,40,-1,40,39,26,-1,30,29,33,-1,33,40,30,-1,33,34,41,-1,34,35,41,-1,35,36,41,-1,36,37,41,-1,37,38,41,-1,38,39,41,-1,39,40,41,-1,40,33,41,-1], Java.type("int[]"))).setCreaseAngle(1.57).setTexCoordIndex(Java.to([1,0,8,-1,8,9,1,-1,0,2,10,-1,10,8,0,-1,2,3,11,-1,11,10,2,-1,3,4,12,-1,12,11,3,-1,4,5,13,-1,13,12,4,-1,5,6,14,-1,14,13,5,-1,7,1,9,-1,9,15,7,-1,25,7,15,-1,15,26,25,-1,9,8,16,-1,16,17,9,-1,8,10,18,-1,18,16,8,-1,10,11,19,-1,19,18,10,-1,13,14,20,-1,20,21,13,-1,15,9,17,-1,17,22,15,-1,11,12,23,-1,23,19,11,-1,12,13,21,-1,21,23,12,-1,26,15,22,-1,22,27,26,-1,17,16,24,-1,16,18,24,-1,18,19,24,-1,19,23,24,-1,23,21,24,-1,21,20,24,-1,27,22,24,-1,22,17,24,-1,0,1,28,-1,28,32,0,-1,2,33,29,-1,29,3,2,-1,3,29,30,-1,30,4,3,-1,4,30,31,-1,31,5,4,-1,5,31,35,-1,35,6,5,-1,1,7,36,-1,36,28,1,-1,2,0,32,-1,32,33,2,-1,7,25,34,-1,34,36,7,-1,32,28,38,-1,38,37,32,-1,28,36,39,-1,39,38,28,-1,36,34,40,-1,40,39,36,-1,35,31,41,-1,41,40,35,-1,31,30,42,-1,42,41,31,-1,30,29,43,-1,43,42,30,-1,29,33,44,-1,44,43,29,-1,33,32,37,-1,37,44,33,-1,37,38,45,-1,38,39,45,-1,39,40,45,-1,40,41,45,-1,41,42,45,-1,42,43,45,-1,43,44,45,-1,44,37,45,-1], Java.type("int[]")))
                          .setCoord(new Coordinate().setPoint(Java.to([doubleToFloat(-0.0407),doubleToFloat(-0.8376),doubleToFloat(-1.221),doubleToFloat(0.7331),doubleToFloat(-0.5933),doubleToFloat(0.8017),doubleToFloat(-0.0176),doubleToFloat(-0.6645),doubleToFloat(1.182),doubleToFloat(-0.7221),doubleToFloat(-0.7616),doubleToFloat(0.9014),doubleToFloat(-0.0602),doubleToFloat(-7.36),doubleToFloat(-0.7594),doubleToFloat(0.7233),doubleToFloat(-7.36),doubleToFloat(0.0564),doubleToFloat(-0.7878),doubleToFloat(-7.36),doubleToFloat(0.0568),doubleToFloat(-0.5288),doubleToFloat(-7.365),doubleToFloat(-0.5335),doubleToFloat(0.4165),doubleToFloat(-7.365),doubleToFloat(0.6592),doubleToFloat(-0.0602),doubleToFloat(-7.36),doubleToFloat(0.9907),doubleToFloat(-0.5288),doubleToFloat(-7.365),doubleToFloat(0.6609),doubleToFloat(0.4165),doubleToFloat(-7.365),doubleToFloat(-0.4678),doubleToFloat(0.6188),doubleToFloat(-0.6937),doubleToFloat(-0.9942),doubleToFloat(1.126),doubleToFloat(-0.5903),doubleToFloat(0.0001),doubleToFloat(-1.1),doubleToFloat(-0.8178),doubleToFloat(0.0254),doubleToFloat(-0.5969),doubleToFloat(-0.8537),doubleToFloat(-1.073),doubleToFloat(-0.0602),doubleToFloat(-7.92),doubleToFloat(-0.6297),doubleToFloat(0.5422),doubleToFloat(-7.92),doubleToFloat(0.0623),doubleToFloat(-0.6846),doubleToFloat(-7.92),doubleToFloat(0.0627),doubleToFloat(-0.4317),doubleToFloat(-7.915),doubleToFloat(-0.4625),doubleToFloat(0.3194),doubleToFloat(-7.915),doubleToFloat(0.6006),doubleToFloat(-0.0602),doubleToFloat(-7.92),doubleToFloat(0.8486),doubleToFloat(-0.4317),doubleToFloat(-7.915),doubleToFloat(0.6022),doubleToFloat(0.3194),doubleToFloat(-7.915),doubleToFloat(-0.398),doubleToFloat(-0.0602),doubleToFloat(-8.182),doubleToFloat(0.065),doubleToFloat(-0.0299),doubleToFloat(-0.0952),doubleToFloat(-1.393),doubleToFloat(0.7675),doubleToFloat(0.0555),doubleToFloat(0.847),doubleToFloat(-0.0065),doubleToFloat(-0.0143),doubleToFloat(1.165),doubleToFloat(-0.7382),doubleToFloat(-0.1075),doubleToFloat(0.8559),doubleToFloat(0.7086),doubleToFloat(0.015),doubleToFloat(-1.16),doubleToFloat(1.198),doubleToFloat(0.0615),doubleToFloat(-0.0132),doubleToFloat(-1.198),doubleToFloat(-0.2053),doubleToFloat(-0.0002),doubleToFloat(-0.6672),doubleToFloat(-0.1246),doubleToFloat(-1.202),doubleToFloat(0.4447),doubleToFloat(0.8519),doubleToFloat(-0.9853),doubleToFloat(-0.1246),doubleToFloat(0.7619),doubleToFloat(-1.165),doubleToFloat(-0.5954),doubleToFloat(0.7485),doubleToFloat(-1.024),doubleToFloat(-1.032),doubleToFloat(0.6748),doubleToFloat(-0.0338),doubleToFloat(-0.6669),doubleToFloat(0.7576),doubleToFloat(0.6468),doubleToFloat(-0.0988),doubleToFloat(0.8314),doubleToFloat(0.8871),doubleToFloat(0.5047),doubleToFloat(0.8844),doubleToFloat(0.639),doubleToFloat(0.8466),doubleToFloat(0.8853),doubleToFloat(-0.0438),doubleToFloat(-0.1526),doubleToFloat(1.367),doubleToFloat(-0.1493)], Java.type("float[]"))))
                          .setTexCoord(new TextureCoordinate().setPoint(Java.to([doubleToFloat(0.0471),doubleToFloat(0.5348),doubleToFloat(0.0457),doubleToFloat(0.5477),doubleToFloat(0.0517),doubleToFloat(0.5187),doubleToFloat(0.0571),doubleToFloat(0.5017),doubleToFloat(0.0625),doubleToFloat(0.4884),doubleToFloat(0.0657),doubleToFloat(0.4747),doubleToFloat(0.0673),doubleToFloat(0.4552),doubleToFloat(0.0409),doubleToFloat(0.557),doubleToFloat(0.1806),doubleToFloat(0.5707),doubleToFloat(0.1797),doubleToFloat(0.5783),doubleToFloat(0.1804),doubleToFloat(0.5567),doubleToFloat(0.1838),doubleToFloat(0.5503),doubleToFloat(0.1875),doubleToFloat(0.5412),doubleToFloat(0.1933),doubleToFloat(0.5295),doubleToFloat(0.2007),doubleToFloat(0.5198),doubleToFloat(0.175),doubleToFloat(0.5862),doubleToFloat(0.19),doubleToFloat(0.5703),doubleToFloat(0.1907),doubleToFloat(0.5757),doubleToFloat(0.1892),doubleToFloat(0.5587),doubleToFloat(0.1918),doubleToFloat(0.5533),doubleToFloat(0.2114),doubleToFloat(0.539),doubleToFloat(0.2025),doubleToFloat(0.5422),doubleToFloat(0.1895),doubleToFloat(0.5821),doubleToFloat(0.1949),doubleToFloat(0.5468),doubleToFloat(0.2041),doubleToFloat(0.5636),doubleToFloat(0.0292),doubleToFloat(0.5765),doubleToFloat(0.1758),doubleToFloat(0.5987),doubleToFloat(0.1959),doubleToFloat(0.5888),doubleToFloat(0.0457),doubleToFloat(0.5477),doubleToFloat(0.0571),doubleToFloat(0.5017),doubleToFloat(0.0625),doubleToFloat(0.4884),doubleToFloat(0.0657),doubleToFloat(0.4747),doubleToFloat(0.0471),doubleToFloat(0.5348),doubleToFloat(0.0517),doubleToFloat(0.5187),doubleToFloat(0.0292),doubleToFloat(0.5765),doubleToFloat(0.0673),doubleToFloat(0.4552),doubleToFloat(0.0409),doubleToFloat(0.557),doubleToFloat(0.0471),doubleToFloat(0.5348),doubleToFloat(0.0457),doubleToFloat(0.5477),doubleToFloat(0.0409),doubleToFloat(0.557),doubleToFloat(0.0292),doubleToFloat(0.5765),doubleToFloat(0.0657),doubleToFloat(0.4747),doubleToFloat(0.0625),doubleToFloat(0.4884),doubleToFloat(0.0571),doubleToFloat(0.5017),doubleToFloat(0.0517),doubleToFloat(0.5187),doubleToFloat(0.05),doubleToFloat(0.5249)], Java.type("float[]"))))))))
                  .addChild(new HAnimJoint("hanim_l_elbow").setName("l_radiocarpal").setDEF("hanim_l_radiocarpal").setCenter(Java.to([doubleToFloat(7.738),doubleToFloat(35.43),doubleToFloat(-1.558)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(0)], Java.type("float[]"))).setLlimit(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(0)], Java.type("float[]")))
                    .addChild(new HAnimSegment("hanim_l_radiocarpal").setName("l_carpal").setDEF("hanim_l_carpal")
                      .addChild(new Transform().setTranslation(Java.to([doubleToFloat(7.738),doubleToFloat(35.43),doubleToFloat(-1.558)], Java.type("float[]")))
                        .addChild(new Shape()
                          .setAppearance(new Appearance()
                            .setMaterial(new Material().setDiffuseColor(Java.to([doubleToFloat(0.588),doubleToFloat(0.588),doubleToFloat(0.588)], Java.type("float[]"))))
                            .setTexture(new ImageTexture().setUSE("NoTextureAtlas")))
                          .setGeometry(new IndexedFaceSet().setCoordIndex(Java.to([14,17,18,-1,18,13,14,-1,12,19,20,-1,20,11,12,-1,4,8,6,-1,6,0,4,-1,21,22,9,-1,9,10,21,-1,16,18,17,-1,17,15,16,-1,2,6,8,-1,8,5,2,-1,13,20,19,-1,19,14,13,-1,3,5,8,-1,8,7,3,-1,15,22,21,-1,21,16,15,-1,8,4,1,-1,1,7,8,-1,2,5,17,-1,17,14,2,-1,18,32,28,-1,28,13,18,-1,12,0,6,-1,6,19,12,-1,20,35,24,-1,24,11,20,-1,26,36,21,-1,21,10,26,-1,22,7,1,-1,1,9,22,-1,30,32,18,-1,18,16,30,-1,17,5,3,-1,3,15,17,-1,28,35,20,-1,20,13,28,-1,19,6,2,-1,2,14,19,-1,3,7,22,-1,22,15,3,-1,21,36,30,-1,30,16,21,-1,28,32,33,-1,33,27,28,-1,24,35,34,-1,34,23,24,-1,26,25,37,-1,37,36,26,-1,30,29,33,-1,33,32,30,-1,31,23,34,-1,34,38,31,-1,29,37,38,-1,38,33,29,-1,28,27,34,-1,34,35,28,-1,29,30,36,-1,36,37,29,-1,27,33,38,-1,38,34,27,-1,31,38,37,-1,37,25,31,-1,40,42,9,-1,9,1,40,-1,4,0,39,-1,39,41,4,-1,11,24,47,-1,47,53,11,-1,1,4,41,-1,41,40,1,-1,10,9,42,-1,42,43,10,-1,26,10,43,-1,43,62,26,-1,0,12,64,-1,64,39,0,-1,25,56,50,-1,50,31,25,-1,25,26,62,-1,62,56,25,-1,24,23,44,-1,44,47,24,-1,31,50,44,-1,44,23,31,-1,44,45,47,-1,47,45,51,-1,51,53,47,-1,45,46,52,-1,52,51,45,-1,48,54,52,-1,52,46,48,-1,49,55,54,-1,54,48,49,-1,49,50,55,-1,42,40,58,-1,58,60,42,-1,41,39,57,-1,57,59,41,-1,40,41,59,-1,59,58,40,-1,43,42,60,-1,60,61,43,-1,64,65,57,-1,57,39,64,-1,62,63,55,-1,55,56,62,-1,66,67,60,-1,60,58,66,-1,67,68,61,-1,61,60,67,-1,75,63,61,-1,61,68,75,-1,69,70,54,-1,54,55,69,-1,71,52,54,-1,54,70,71,-1,71,72,51,-1,51,52,71,-1,76,65,51,-1,51,72,76,-1,73,74,59,-1,59,57,73,-1,74,66,58,-1,58,59,74,-1,62,43,61,-1,61,63,62,-1,69,55,63,-1,63,75,69,-1,50,56,55,-1,53,51,65,-1,65,64,53,-1,73,57,65,-1,65,76,73,-1,12,11,53,-1,53,64,12,-1,67,66,77,-1,66,74,77,-1,74,73,77,-1,73,76,77,-1,76,72,77,-1,72,71,77,-1,71,70,77,-1,70,69,77,-1,69,75,77,-1,75,68,77,-1,68,67,77,-1,81,82,83,-1,83,80,81,-1,46,45,79,-1,79,78,46,-1,45,44,80,-1,80,79,45,-1,44,50,81,-1,81,80,44,-1,50,49,82,-1,82,81,50,-1,49,48,83,-1,83,82,49,-1,48,46,78,-1,78,83,48,-1,83,78,79,-1,79,80,83,-1], Java.type("int[]"))).setCreaseAngle(1.57).setTexCoordIndex(Java.to([1,2,3,-1,3,0,1,-1,5,6,7,-1,7,4,5,-1,9,10,11,-1,11,8,9,-1,14,15,12,-1,12,13,14,-1,17,82,81,-1,81,16,17,-1,19,11,10,-1,10,18,19,-1,0,7,6,-1,6,1,0,-1,21,85,84,-1,84,20,21,-1,16,15,14,-1,14,17,16,-1,84,83,22,-1,22,20,84,-1,19,18,2,-1,2,1,19,-1,3,23,24,-1,24,0,3,-1,5,8,11,-1,11,6,5,-1,7,25,26,-1,26,4,7,-1,27,28,14,-1,14,13,27,-1,15,20,22,-1,22,12,15,-1,29,86,82,-1,82,17,29,-1,81,85,21,-1,21,16,81,-1,24,25,7,-1,7,0,24,-1,6,11,19,-1,19,1,6,-1,21,20,15,-1,15,16,21,-1,14,28,29,-1,29,17,14,-1,24,23,31,-1,31,30,24,-1,26,25,33,-1,33,32,26,-1,27,34,35,-1,35,28,27,-1,29,36,87,-1,87,86,29,-1,37,32,33,-1,33,39,37,-1,36,35,38,-1,38,87,36,-1,24,30,33,-1,33,25,24,-1,36,29,28,-1,28,35,36,-1,30,31,39,-1,39,33,30,-1,88,38,35,-1,35,34,88,-1,40,41,12,-1,12,22,40,-1,9,8,42,-1,42,43,9,-1,4,26,44,-1,44,47,4,-1,22,83,89,-1,89,40,22,-1,13,12,41,-1,41,45,13,-1,27,13,45,-1,45,46,27,-1,8,5,50,-1,50,42,8,-1,34,48,49,-1,49,88,34,-1,34,27,46,-1,46,48,34,-1,26,32,51,-1,51,44,26,-1,37,52,51,-1,51,32,37,-1,51,55,44,-1,44,55,61,-1,61,47,44,-1,55,56,63,-1,63,61,55,-1,53,57,91,-1,91,90,53,-1,54,58,57,-1,57,53,54,-1,54,49,58,-1,41,40,59,-1,59,60,41,-1,43,42,72,-1,72,73,43,-1,40,89,92,-1,92,59,40,-1,45,41,60,-1,60,62,45,-1,50,74,72,-1,72,42,50,-1,46,64,58,-1,58,48,46,-1,65,66,60,-1,60,59,65,-1,66,67,62,-1,62,60,66,-1,68,64,62,-1,62,67,68,-1,69,70,57,-1,57,58,69,-1,71,91,57,-1,57,70,71,-1,75,76,61,-1,61,63,75,-1,77,74,61,-1,61,76,77,-1,78,79,73,-1,73,72,78,-1,93,65,59,-1,59,92,93,-1,46,45,62,-1,62,64,46,-1,69,58,64,-1,64,68,69,-1,49,48,58,-1,47,61,74,-1,74,50,47,-1,78,72,74,-1,74,77,78,-1,5,4,47,-1,47,50,5,-1,66,65,94,-1,65,93,94,-1,79,78,80,-1,78,77,80,-1,77,76,80,-1,76,75,80,-1,71,70,94,-1,70,69,94,-1,69,68,94,-1,68,67,94,-1,67,66,94,-1,98,99,100,-1,100,97,98,-1,56,55,102,-1,102,101,56,-1,55,51,103,-1,103,102,55,-1,51,52,104,-1,104,103,51,-1,49,54,99,-1,99,98,49,-1,54,53,100,-1,100,99,54,-1,53,90,95,-1,95,100,53,-1,100,95,96,-1,96,97,100,-1], Java.type("int[]")))
                            .setCoord(new Coordinate().setPoint(Java.to([doubleToFloat(-0.4043),doubleToFloat(-3.207),doubleToFloat(-1.378),doubleToFloat(0.4128),doubleToFloat(-2.968),doubleToFloat(-1.473),doubleToFloat(-0.2797),doubleToFloat(-4.439),doubleToFloat(-1.289),doubleToFloat(0.1832),doubleToFloat(-4.593),doubleToFloat(-1.405),doubleToFloat(-0.0421),doubleToFloat(-3.004),doubleToFloat(-1.559),doubleToFloat(-0.1308),doubleToFloat(-4.617),doubleToFloat(-1.397),doubleToFloat(-0.3408),doubleToFloat(-3.913),doubleToFloat(-1.358),doubleToFloat(0.3758),doubleToFloat(-4.16),doubleToFloat(-1.523),doubleToFloat(0.0124),doubleToFloat(-4.066),doubleToFloat(-1.559),doubleToFloat(0.8293),doubleToFloat(-3.133),doubleToFloat(-0.7949),doubleToFloat(1.016),doubleToFloat(-3.286),doubleToFloat(-0.1119),doubleToFloat(-0.2604),doubleToFloat(-3.534),doubleToFloat(-0.1595),doubleToFloat(-0.3253),doubleToFloat(-3.393),doubleToFloat(-0.837),doubleToFloat(-0.0163),doubleToFloat(-5.016),doubleToFloat(-0.2094),doubleToFloat(-0.09),doubleToFloat(-4.738),doubleToFloat(-0.8515),doubleToFloat(0.5302),doubleToFloat(-5.003),doubleToFloat(-0.7804),doubleToFloat(0.5697),doubleToFloat(-5.193),doubleToFloat(-0.1607),doubleToFloat(0.2221),doubleToFloat(-5.027),doubleToFloat(-0.7658),doubleToFloat(0.2882),doubleToFloat(-5.238),doubleToFloat(-0.1569),doubleToFloat(-0.1799),doubleToFloat(-4.254),doubleToFloat(-0.8409),doubleToFloat(-0.0702),doubleToFloat(-4.437),doubleToFloat(-0.2076),doubleToFloat(0.8565),doubleToFloat(-4.796),doubleToFloat(-0.1534),doubleToFloat(0.7574),doubleToFloat(-4.564),doubleToFloat(-0.8292),doubleToFloat(-0.2845),doubleToFloat(-3.357),doubleToFloat(1.304),doubleToFloat(-0.1969),doubleToFloat(-3.468),doubleToFloat(0.5586),doubleToFloat(0.633),doubleToFloat(-3.3),doubleToFloat(1.52),doubleToFloat(0.8956),doubleToFloat(-3.358),doubleToFloat(0.7774),doubleToFloat(-0.4199),doubleToFloat(-4.856),doubleToFloat(1.144),doubleToFloat(-0.1634),doubleToFloat(-5.048),doubleToFloat(0.4861),doubleToFloat(0.1131),doubleToFloat(-4.963),doubleToFloat(1.294),doubleToFloat(0.3684),doubleToFloat(-5.183),doubleToFloat(0.552),doubleToFloat(0.196),doubleToFloat(-3.265),doubleToFloat(1.588),doubleToFloat(0.1067),doubleToFloat(-5.202),doubleToFloat(0.5371),doubleToFloat(-0.2033),doubleToFloat(-4.982),doubleToFloat(1.286),doubleToFloat(-0.3224),doubleToFloat(-4.461),doubleToFloat(1.197),doubleToFloat(-0.1814),doubleToFloat(-4.515),doubleToFloat(0.5129),doubleToFloat(0.6181),doubleToFloat(-4.745),doubleToFloat(0.6589),doubleToFloat(0.3549),doubleToFloat(-4.593),doubleToFloat(1.367),doubleToFloat(-0.0071),doubleToFloat(-4.49),doubleToFloat(1.429),doubleToFloat(-0.511),doubleToFloat(-1.809),doubleToFloat(-1.269),doubleToFloat(0.5069),doubleToFloat(-1.863),doubleToFloat(-1.291),doubleToFloat(-0.1385),doubleToFloat(-1.88),doubleToFloat(-1.433),doubleToFloat(0.8834),doubleToFloat(-2.065),doubleToFloat(-0.6619),doubleToFloat(1.084),doubleToFloat(-2.041),doubleToFloat(-0.022),doubleToFloat(-0.4454),doubleToFloat(-2.04),doubleToFloat(1.241),doubleToFloat(-0.8595),doubleToFloat(-1.439),doubleToFloat(0.8284),doubleToFloat(-0.9394),doubleToFloat(-1.167),doubleToFloat(1.129),doubleToFloat(-0.4703),doubleToFloat(-2.492),doubleToFloat(0.5589),doubleToFloat(-0.5852),doubleToFloat(-1.133),doubleToFloat(1.494),doubleToFloat(-0.2387),doubleToFloat(-1.35),doubleToFloat(1.691),doubleToFloat(0.0662),doubleToFloat(-1.692),doubleToFloat(1.461),doubleToFloat(-0.7589),doubleToFloat(-0.6824),doubleToFloat(0.1014),doubleToFloat(-0.7016),doubleToFloat(-0.5391),doubleToFloat(0.6842),doubleToFloat(-0.5615),doubleToFloat(-2.528),doubleToFloat(-0.1514),doubleToFloat(-0.2145),doubleToFloat(-0.417),doubleToFloat(1.097),doubleToFloat(0.2343),doubleToFloat(-0.6792),doubleToFloat(1.151),doubleToFloat(0.5466),doubleToFloat(-1.944),doubleToFloat(1.397),doubleToFloat(-0.6186),doubleToFloat(-0.782),doubleToFloat(-1.082),doubleToFloat(0.4937),doubleToFloat(-0.8981),doubleToFloat(-1.119),doubleToFloat(-0.1599),doubleToFloat(-0.9475),doubleToFloat(-1.256),doubleToFloat(0.7682),doubleToFloat(-0.9026),doubleToFloat(-0.6282),doubleToFloat(0.8526),doubleToFloat(-0.8017),doubleToFloat(-0.0674),doubleToFloat(0.9273),doubleToFloat(-2.063),doubleToFloat(0.7753),doubleToFloat(0.7028),doubleToFloat(-0.7443),doubleToFloat(0.6125),doubleToFloat(-0.5058),doubleToFloat(-2.279),doubleToFloat(-0.8314),doubleToFloat(-0.6034),doubleToFloat(-0.7674),doubleToFloat(-0.6877),doubleToFloat(0.1927),doubleToFloat(0.058),doubleToFloat(-0.616),doubleToFloat(0.5424),doubleToFloat(0.058),doubleToFloat(-0.3011),doubleToFloat(0.6496),doubleToFloat(0.058),doubleToFloat(-0.083),doubleToFloat(0.3722),doubleToFloat(0.058),doubleToFloat(0.5801),doubleToFloat(-0.0857),doubleToFloat(0.058),doubleToFloat(0.6207),doubleToFloat(-0.5588),doubleToFloat(0.058),doubleToFloat(0.2743),doubleToFloat(-0.535),doubleToFloat(0.058),doubleToFloat(-0.0465),doubleToFloat(-0.4787),doubleToFloat(0.058),doubleToFloat(-0.6034),doubleToFloat(-0.1506),doubleToFloat(0.058),doubleToFloat(-0.6883),doubleToFloat(0.5294),doubleToFloat(0.058),doubleToFloat(0.2886),doubleToFloat(-0.416),doubleToFloat(0.058),doubleToFloat(-0.386),doubleToFloat(0.0434),doubleToFloat(0.3889),doubleToFloat(-0.0832),doubleToFloat(-1.548),doubleToFloat(-2.417),doubleToFloat(1.676),doubleToFloat(-1.411),doubleToFloat(-2.58),doubleToFloat(1.542),doubleToFloat(-1.135),doubleToFloat(-2.619),doubleToFloat(1.525),doubleToFloat(-0.8304),doubleToFloat(-2.413),doubleToFloat(1.71),doubleToFloat(-0.9952),doubleToFloat(-2.239),doubleToFloat(1.903),doubleToFloat(-1.34),doubleToFloat(-2.312),doubleToFloat(1.813)], Java.type("float[]"))))
                            .setTexCoord(new TextureCoordinate().setPoint(Java.to([doubleToFloat(0.2854),doubleToFloat(0.417),doubleToFloat(0.2772),doubleToFloat(0.41),doubleToFloat(0.2831),doubleToFloat(0.408),doubleToFloat(0.2903),doubleToFloat(0.4146),doubleToFloat(0.265),doubleToFloat(0.4285),doubleToFloat(0.2586),doubleToFloat(0.4199),doubleToFloat(0.2705),doubleToFloat(0.4138),doubleToFloat(0.2773),doubleToFloat(0.4212),doubleToFloat(0.2523),doubleToFloat(0.4135),doubleToFloat(0.2473),doubleToFloat(0.4093),doubleToFloat(0.2624),doubleToFloat(0.4028),doubleToFloat(0.2621),doubleToFloat(0.4091),doubleToFloat(0.1715),doubleToFloat(0.4268),doubleToFloat(0.1606),doubleToFloat(0.427),doubleToFloat(0.1557),doubleToFloat(0.4048),doubleToFloat(0.1661),doubleToFloat(0.4058),doubleToFloat(0.1642),doubleToFloat(0.3989),doubleToFloat(0.1542),doubleToFloat(0.3981),doubleToFloat(0.2716),doubleToFloat(0.4031),doubleToFloat(0.2696),doubleToFloat(0.4063),doubleToFloat(0.1787),doubleToFloat(0.4088),doubleToFloat(0.1762),doubleToFloat(0.4019),doubleToFloat(0.1834),doubleToFloat(0.4266),doubleToFloat(0.2945),doubleToFloat(0.4248),doubleToFloat(0.2904),doubleToFloat(0.4267),doubleToFloat(0.2831),doubleToFloat(0.4307),doubleToFloat(0.2689),doubleToFloat(0.439),doubleToFloat(0.147),doubleToFloat(0.4291),doubleToFloat(0.1436),doubleToFloat(0.4079),doubleToFloat(0.1429),doubleToFloat(0.4003),doubleToFloat(0.2923),doubleToFloat(0.4372),doubleToFloat(0.2958),doubleToFloat(0.4382),doubleToFloat(0.2727),doubleToFloat(0.4496),doubleToFloat(0.2874),doubleToFloat(0.4405),doubleToFloat(0.1356),doubleToFloat(0.4327),doubleToFloat(0.133),doubleToFloat(0.4126),doubleToFloat(0.1318),doubleToFloat(0.4062),doubleToFloat(0.2758),doubleToFloat(0.4563),doubleToFloat(0.1279),doubleToFloat(0.4134),doubleToFloat(0.2905),doubleToFloat(0.4451),doubleToFloat(0.1841),doubleToFloat(0.4441),doubleToFloat(0.173),doubleToFloat(0.4428),doubleToFloat(0.2336),doubleToFloat(0.4239),doubleToFloat(0.232),doubleToFloat(0.4181),doubleToFloat(0.2553),doubleToFloat(0.4468),doubleToFloat(0.1634),doubleToFloat(0.4452),doubleToFloat(0.1514),doubleToFloat(0.4479),doubleToFloat(0.2509),doubleToFloat(0.4359),doubleToFloat(0.1412),doubleToFloat(0.4529),doubleToFloat(0.1367),doubleToFloat(0.4599),doubleToFloat(0.2432),doubleToFloat(0.4272),doubleToFloat(0.2531),doubleToFloat(0.4616),doubleToFloat(0.2586),doubleToFloat(0.4664),doubleToFloat(0.1365),doubleToFloat(0.476),doubleToFloat(0.1366),doubleToFloat(0.4681),doubleToFloat(0.241),doubleToFloat(0.4558),doubleToFloat(0.2368),doubleToFloat(0.4586),doubleToFloat(0.1496),doubleToFloat(0.4794),doubleToFloat(0.1502),doubleToFloat(0.4711),doubleToFloat(0.1836),doubleToFloat(0.4592),doubleToFloat(0.1761),doubleToFloat(0.4601),doubleToFloat(0.2253),doubleToFloat(0.4494),doubleToFloat(0.1684),doubleToFloat(0.463),doubleToFloat(0.2261),doubleToFloat(0.4579),doubleToFloat(0.1588),doubleToFloat(0.4664),doubleToFloat(0.1796),doubleToFloat(0.4752),doubleToFloat(0.1737),doubleToFloat(0.474),doubleToFloat(0.1709),doubleToFloat(0.4735),doubleToFloat(0.1663),doubleToFloat(0.4756),doubleToFloat(0.162),doubleToFloat(0.4762),doubleToFloat(0.1602),doubleToFloat(0.4819),doubleToFloat(0.1617),doubleToFloat(0.4895),doubleToFloat(0.2206),doubleToFloat(0.4327),doubleToFloat(0.2187),doubleToFloat(0.4259),doubleToFloat(0.2227),doubleToFloat(0.4378),doubleToFloat(0.2131),doubleToFloat(0.456),doubleToFloat(0.2115),doubleToFloat(0.4515),doubleToFloat(0.2119),doubleToFloat(0.4457),doubleToFloat(0.2094),doubleToFloat(0.4437),doubleToFloat(0.2061),doubleToFloat(0.4411),doubleToFloat(0.2017),doubleToFloat(0.4524),doubleToFloat(0.1652),doubleToFloat(0.3951),doubleToFloat(0.1534),doubleToFloat(0.3946),doubleToFloat(0.1894),doubleToFloat(0.4248),doubleToFloat(0.1835),doubleToFloat(0.4079),doubleToFloat(0.1786),doubleToFloat(0.3986),doubleToFloat(0.1411),doubleToFloat(0.3973),doubleToFloat(0.1285),doubleToFloat(0.4039),doubleToFloat(0.1298),doubleToFloat(0.4342),doubleToFloat(0.193),doubleToFloat(0.4435),doubleToFloat(0.1346),doubleToFloat(0.4831),doubleToFloat(0.1474),doubleToFloat(0.4881),doubleToFloat(0.1921),doubleToFloat(0.4603),doubleToFloat(0.1832),doubleToFloat(0.4783),doubleToFloat(0.1721),doubleToFloat(0.4818),doubleToFloat(0.1111),doubleToFloat(0.4765),doubleToFloat(0.1087),doubleToFloat(0.4729),doubleToFloat(0.1098),doubleToFloat(0.4688),doubleToFloat(0.1162),doubleToFloat(0.467),doubleToFloat(0.1174),doubleToFloat(0.4712),doubleToFloat(0.114),doubleToFloat(0.4745),doubleToFloat(0.2355),doubleToFloat(0.48),doubleToFloat(0.239),doubleToFloat(0.4794),doubleToFloat(0.241),doubleToFloat(0.4768),doubleToFloat(0.2455),doubleToFloat(0.4762)], Java.type("float[]")))))))))))
              .addChild(new HAnimJoint("hanim_sacroiliac").setName("r_shoulder").setDEF("hanim_r_shoulder").setCenter(Java.to([doubleToFloat(-7.266),doubleToFloat(54.049999),doubleToFloat(-1.79)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(0)], Java.type("float[]"))).setLlimit(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(0)], Java.type("float[]")))
                .addChild(new HAnimSegment("hanim_r_shoulder").setName("r_upperarm").setDEF("hanim_r_upperarm")
                  .addChild(new Transform().setTranslation(Java.to([doubleToFloat(-7.266),doubleToFloat(54.049999),doubleToFloat(-1.79)], Java.type("float[]")))
                    .addChild(new Shape()
                      .setAppearance(new Appearance()
                        .setMaterial(new Material().setDiffuseColor(Java.to([doubleToFloat(0.588),doubleToFloat(0.588),doubleToFloat(0.588)], Java.type("float[]"))))
                        .setTexture(new ImageTexture().setUSE("NoTextureAtlas")))
                      .setGeometry(new IndexedFaceSet().setCoordIndex(Java.to([8,9,1,-1,1,0,8,-1,10,8,0,-1,0,2,10,-1,3,11,10,-1,10,2,3,-1,4,12,11,-1,11,3,4,-1,13,12,4,-1,4,5,13,-1,14,13,5,-1,5,6,14,-1,7,15,14,-1,14,6,7,-1,1,9,15,-1,15,7,1,-1,8,16,17,-1,17,9,8,-1,10,18,16,-1,16,8,10,-1,19,18,10,-1,10,11,19,-1,20,19,11,-1,11,12,20,-1,21,20,12,-1,12,13,21,-1,22,21,13,-1,13,14,22,-1,15,23,22,-1,22,14,15,-1,9,17,23,-1,23,15,9,-1,24,27,26,-1,26,25,24,-1,25,26,29,-1,29,28,25,-1,30,28,29,-1,29,31,30,-1,32,30,31,-1,31,33,32,-1,32,33,35,-1,35,34,32,-1,36,37,27,-1,27,24,36,-1,38,34,35,-1,35,39,38,-1,37,36,38,-1,38,39,37,-1,27,41,40,-1,40,26,27,-1,26,40,42,-1,42,29,26,-1,29,42,43,-1,43,31,29,-1,31,43,44,-1,44,33,31,-1,33,44,45,-1,45,35,33,-1,35,45,46,-1,46,39,35,-1,37,47,41,-1,41,27,37,-1,39,46,47,-1,47,37,39,-1,28,48,25,-1,25,48,24,-1,24,48,36,-1,36,48,38,-1,38,48,34,-1,34,48,32,-1,32,48,30,-1,30,48,28,-1,40,41,50,-1,50,49,40,-1,42,40,49,-1,49,51,42,-1,43,42,51,-1,51,52,43,-1,44,43,52,-1,52,53,44,-1,45,44,53,-1,53,54,45,-1,46,45,54,-1,54,55,46,-1,41,47,56,-1,56,50,41,-1,47,46,55,-1,55,56,47,-1,1,57,61,-1,61,0,1,-1,62,58,3,-1,3,2,62,-1,58,59,4,-1,4,3,58,-1,59,60,5,-1,5,4,59,-1,60,63,6,-1,6,5,60,-1,7,64,57,-1,57,1,7,-1,0,61,62,-1,62,2,0,-1,6,63,64,-1,64,7,6,-1,57,65,66,-1,66,61,57,-1,61,66,67,-1,67,62,61,-1,62,67,68,-1,68,58,62,-1,58,68,69,-1,69,59,58,-1,59,69,70,-1,70,60,59,-1,60,70,71,-1,71,63,60,-1,63,71,72,-1,72,64,63,-1,64,72,65,-1,65,57,64,-1,65,73,66,-1,66,73,67,-1,67,73,68,-1,68,73,69,-1,69,73,70,-1,70,73,71,-1,71,73,72,-1,72,73,65,-1], Java.type("int[]"))).setCreaseAngle(1.57).setTexCoordIndex(Java.to([9,10,1,-1,1,0,9,-1,11,9,0,-1,0,2,11,-1,3,12,11,-1,11,2,3,-1,4,13,12,-1,12,3,4,-1,14,13,4,-1,4,5,14,-1,15,14,5,-1,5,6,15,-1,8,16,17,-1,17,7,8,-1,1,10,16,-1,16,8,1,-1,9,18,19,-1,19,10,9,-1,11,20,18,-1,18,9,11,-1,21,20,11,-1,11,12,21,-1,22,21,12,-1,12,13,22,-1,23,22,13,-1,13,14,23,-1,24,23,14,-1,14,15,24,-1,16,25,26,-1,26,17,16,-1,10,19,25,-1,25,16,10,-1,27,30,29,-1,29,28,27,-1,28,29,32,-1,32,31,28,-1,33,31,32,-1,32,34,33,-1,35,33,34,-1,34,36,35,-1,35,36,38,-1,38,37,35,-1,39,40,30,-1,30,27,39,-1,41,37,38,-1,38,42,41,-1,40,39,44,-1,44,43,40,-1,30,46,45,-1,45,29,30,-1,29,45,47,-1,47,32,29,-1,32,47,48,-1,48,34,32,-1,34,48,49,-1,49,36,34,-1,36,49,50,-1,50,38,36,-1,38,50,51,-1,51,42,38,-1,40,52,46,-1,46,30,40,-1,43,53,52,-1,52,40,43,-1,31,54,28,-1,28,54,27,-1,27,54,39,-1,39,54,44,-1,41,54,37,-1,37,54,35,-1,35,54,33,-1,33,54,31,-1,45,46,55,-1,55,56,45,-1,47,45,56,-1,56,57,47,-1,48,47,57,-1,57,58,48,-1,49,48,58,-1,58,59,49,-1,50,49,59,-1,59,60,50,-1,51,50,60,-1,60,61,51,-1,46,52,62,-1,62,55,46,-1,52,53,63,-1,63,62,52,-1,64,73,77,-1,77,65,64,-1,78,74,67,-1,67,66,78,-1,74,75,68,-1,68,67,74,-1,75,76,69,-1,69,68,75,-1,76,80,70,-1,70,69,76,-1,71,81,73,-1,73,64,71,-1,65,77,78,-1,78,66,65,-1,72,79,81,-1,81,71,72,-1,73,82,83,-1,83,77,73,-1,77,83,84,-1,84,78,77,-1,78,84,85,-1,85,74,78,-1,74,85,86,-1,86,75,74,-1,75,86,87,-1,87,76,75,-1,76,87,88,-1,88,80,76,-1,79,88,89,-1,89,81,79,-1,81,89,82,-1,82,73,81,-1,82,90,83,-1,83,90,84,-1,84,90,85,-1,85,90,86,-1,86,90,87,-1,87,90,88,-1,88,90,89,-1,89,90,82,-1], Java.type("int[]")))
                        .setCoord(new Coordinate().setPoint(Java.to([doubleToFloat(-1.368),doubleToFloat(-9.721),doubleToFloat(-1.075),doubleToFloat(-0.5554),doubleToFloat(-9.627),doubleToFloat(-1.323),doubleToFloat(-1.697),doubleToFloat(-9.897),doubleToFloat(0.0871),doubleToFloat(-1.37),doubleToFloat(-9.961),doubleToFloat(0.9966),doubleToFloat(-0.5722),doubleToFloat(-10.03),doubleToFloat(1.401),doubleToFloat(0.1728),doubleToFloat(-10.12),doubleToFloat(1.029),doubleToFloat(0.5888),doubleToFloat(-10.15),doubleToFloat(0.0951),doubleToFloat(0.1549),doubleToFloat(-9.857),doubleToFloat(-1.083),doubleToFloat(-1.515),doubleToFloat(-5.201),doubleToFloat(-1.218),doubleToFloat(-0.6263),doubleToFloat(-5.266),doubleToFloat(-1.527),doubleToFloat(-1.964),doubleToFloat(-5.133),doubleToFloat(0.0302),doubleToFloat(-1.424),doubleToFloat(-5.144),doubleToFloat(1.327),doubleToFloat(-0.5103),doubleToFloat(-5.244),doubleToFloat(1.701),doubleToFloat(0.3415),doubleToFloat(-5.296),doubleToFloat(1.393),doubleToFloat(0.9295),doubleToFloat(-5.321),doubleToFloat(0.1721),doubleToFloat(0.2188),doubleToFloat(-5.361),doubleToFloat(-1.227),doubleToFloat(-1.425),doubleToFloat(-0.1998),doubleToFloat(-1.296),doubleToFloat(-0.5195),doubleToFloat(-0.6168),doubleToFloat(-1.758),doubleToFloat(-1.89),doubleToFloat(-0.0318),doubleToFloat(-0.0615),doubleToFloat(-1.445),doubleToFloat(-0.2217),doubleToFloat(1.407),doubleToFloat(-0.4413),doubleToFloat(-0.6502),doubleToFloat(1.913),doubleToFloat(0.3607),doubleToFloat(-0.9925),doubleToFloat(1.358),doubleToFloat(1.068),doubleToFloat(-1.294),doubleToFloat(0.1351),doubleToFloat(0.4203),doubleToFloat(-1.018),doubleToFloat(-1.326),doubleToFloat(0.0087),doubleToFloat(0.9247),doubleToFloat(-1.888),doubleToFloat(-0.8381),doubleToFloat(1.677),doubleToFloat(-1.7),doubleToFloat(-1.274),doubleToFloat(0.682),doubleToFloat(-1.606),doubleToFloat(-0.0986),doubleToFloat(0.1637),doubleToFloat(-2.066),doubleToFloat(-1.254),doubleToFloat(1.865),doubleToFloat(-0.0092),doubleToFloat(-1.904),doubleToFloat(0.7808),doubleToFloat(-0.0329),doubleToFloat(-0.8112),doubleToFloat(1.565),doubleToFloat(1.759),doubleToFloat(-1.261),doubleToFloat(0.6935),doubleToFloat(1.832),doubleToFloat(0.2175),doubleToFloat(1.07),doubleToFloat(1.96),doubleToFloat(-0.055),doubleToFloat(0.2851),doubleToFloat(2.17),doubleToFloat(0.9228),doubleToFloat(0.622),doubleToFloat(1.646),doubleToFloat(1.001),doubleToFloat(-0.0973),doubleToFloat(1.703),doubleToFloat(1.019),doubleToFloat(0.6054),doubleToFloat(-1.572),doubleToFloat(0.9724),doubleToFloat(-0.2436),doubleToFloat(-1.642),doubleToFloat(1.322),doubleToFloat(0.4084),doubleToFloat(-0.0629),doubleToFloat(1.46),doubleToFloat(-0.5337),doubleToFloat(-0.0223),doubleToFloat(-1.482),doubleToFloat(-1.046),doubleToFloat(-1.674),doubleToFloat(-0.3106),doubleToFloat(-1.259),doubleToFloat(-2.163),doubleToFloat(-2.16),doubleToFloat(-0.9553),doubleToFloat(-0.0259),doubleToFloat(-1.486),doubleToFloat(-1.078),doubleToFloat(1.804),doubleToFloat(-0.2797),doubleToFloat(-1.333),doubleToFloat(2.23),doubleToFloat(0.9142),doubleToFloat(-1.685),doubleToFloat(1.672),doubleToFloat(1.394),doubleToFloat(-1.825),doubleToFloat(-0.0013),doubleToFloat(0.8917),doubleToFloat(-1.602),doubleToFloat(-1.736),doubleToFloat(0.466),doubleToFloat(1.569),doubleToFloat(-0.0085),doubleToFloat(-1.676),doubleToFloat(-3.535),doubleToFloat(-1.681),doubleToFloat(-0.4959),doubleToFloat(-3.63),doubleToFloat(-2.197),doubleToFloat(-2.36),doubleToFloat(-3.499),doubleToFloat(-0.0084),doubleToFloat(-1.688),doubleToFloat(-3.559),doubleToFloat(1.804),doubleToFloat(-0.4978),doubleToFloat(-3.666),doubleToFloat(2.23),doubleToFloat(0.7557),doubleToFloat(-3.808),doubleToFloat(1.672),doubleToFloat(1.233),doubleToFloat(-3.898),doubleToFloat(0.0128),doubleToFloat(0.6796),doubleToFloat(-3.767),doubleToFloat(-1.736),doubleToFloat(-0.5376),doubleToFloat(-10.76),doubleToFloat(-1.254),doubleToFloat(-1.335),doubleToFloat(-10.61),doubleToFloat(0.9861),doubleToFloat(-0.5611),doubleToFloat(-10.68),doubleToFloat(1.304),doubleToFloat(0.1707),doubleToFloat(-10.77),doubleToFloat(0.995),doubleToFloat(-1.276),doubleToFloat(-10.65),doubleToFloat(-1.021),doubleToFloat(-1.765),doubleToFloat(-10.6),doubleToFloat(0.1259),doubleToFloat(0.6302),doubleToFloat(-10.87),doubleToFloat(0.1389),doubleToFloat(0.0997),doubleToFloat(-10.79),doubleToFloat(-1.063),doubleToFloat(-0.6361),doubleToFloat(-11.54),doubleToFloat(-0.8631),doubleToFloat(-1.142),doubleToFloat(-11.46),doubleToFloat(-0.7039),doubleToFloat(-1.516),doubleToFloat(-11.43),doubleToFloat(0.1719),doubleToFloat(-1.205),doubleToFloat(-11.43),doubleToFloat(0.792),doubleToFloat(-0.6643),doubleToFloat(-11.48),doubleToFloat(1.014),doubleToFloat(-0.1567),doubleToFloat(-11.54),doubleToFloat(0.7997),doubleToFloat(0.1747),doubleToFloat(-11.62),doubleToFloat(0.1807),doubleToFloat(-0.2316),doubleToFloat(-11.55),doubleToFloat(-0.7427),doubleToFloat(-0.6986),doubleToFloat(-11.76),doubleToFloat(0.0849)], Java.type("float[]"))))
                        .setTexCoord(new TextureCoordinate().setPoint(Java.to([doubleToFloat(0.6228),doubleToFloat(0.0712),doubleToFloat(0.6294),doubleToFloat(0.0658),doubleToFloat(0.6103),doubleToFloat(0.0743),doubleToFloat(0.5995),doubleToFloat(0.0746),doubleToFloat(0.5896),doubleToFloat(0.0727),doubleToFloat(0.5805),doubleToFloat(0.0665),doubleToFloat(0.5699),doubleToFloat(0.0593),doubleToFloat(0.6451),doubleToFloat(0.0476),doubleToFloat(0.636),doubleToFloat(0.0584),doubleToFloat(0.6367),doubleToFloat(0.133),doubleToFloat(0.6484),doubleToFloat(0.1281),doubleToFloat(0.6193),doubleToFloat(0.1388),doubleToFloat(0.6011),doubleToFloat(0.1395),doubleToFloat(0.5876),doubleToFloat(0.137),doubleToFloat(0.573),doubleToFloat(0.1337),doubleToFloat(0.5541),doubleToFloat(0.1297),doubleToFloat(0.6614),doubleToFloat(0.1198),doubleToFloat(0.6799),doubleToFloat(0.1111),doubleToFloat(0.6551),doubleToFloat(0.2133),doubleToFloat(0.6704),doubleToFloat(0.1973),doubleToFloat(0.6305),doubleToFloat(0.2194),doubleToFloat(0.5996),doubleToFloat(0.2186),doubleToFloat(0.5801),doubleToFloat(0.21),doubleToFloat(0.5697),doubleToFloat(0.2048),doubleToFloat(0.5466),doubleToFloat(0.1979),doubleToFloat(0.6876),doubleToFloat(0.1846),doubleToFloat(0.7073),doubleToFloat(0.1738),doubleToFloat(0.4207),doubleToFloat(0.1763),doubleToFloat(0.4282),doubleToFloat(0.1674),doubleToFloat(0.4485),doubleToFloat(0.1712),doubleToFloat(0.4385),doubleToFloat(0.1896),doubleToFloat(0.4305),doubleToFloat(0.1519),doubleToFloat(0.4504),doubleToFloat(0.1509),doubleToFloat(0.431),doubleToFloat(0.1243),doubleToFloat(0.4437),doubleToFloat(0.1205),doubleToFloat(0.4234),doubleToFloat(0.1092),doubleToFloat(0.4341),doubleToFloat(0.1033),doubleToFloat(0.408),doubleToFloat(0.1043),doubleToFloat(0.4182),doubleToFloat(0.0866),doubleToFloat(0.4054),doubleToFloat(0.1873),doubleToFloat(0.4126),doubleToFloat(0.2016),doubleToFloat(0.3918),doubleToFloat(0.1029),doubleToFloat(0.4004),doubleToFloat(0.0777),doubleToFloat(0.3835),doubleToFloat(0.2094),doubleToFloat(0.3826),doubleToFloat(0.1833),doubleToFloat(0.4688),doubleToFloat(0.181),doubleToFloat(0.4508),doubleToFloat(0.2023),doubleToFloat(0.4777),doubleToFloat(0.1525),doubleToFloat(0.4696),doubleToFloat(0.1144),doubleToFloat(0.4553),doubleToFloat(0.0896),doubleToFloat(0.4387),doubleToFloat(0.0714),doubleToFloat(0.4187),doubleToFloat(0.0548),doubleToFloat(0.4258),doubleToFloat(0.2203),doubleToFloat(0.3963),doubleToFloat(0.2357),doubleToFloat(0.4009),doubleToFloat(0.1445),doubleToFloat(0.4778),doubleToFloat(0.2309),doubleToFloat(0.5052),doubleToFloat(0.199),doubleToFloat(0.519),doubleToFloat(0.1542),doubleToFloat(0.5073),doubleToFloat(0.1007),doubleToFloat(0.4866),doubleToFloat(0.0666),doubleToFloat(0.4662),doubleToFloat(0.0468),doubleToFloat(0.4451),doubleToFloat(0.0281),doubleToFloat(0.4475),doubleToFloat(0.2511),doubleToFloat(0.4157),doubleToFloat(0.268),doubleToFloat(0.0457),doubleToFloat(0.5477),doubleToFloat(0.0471),doubleToFloat(0.5348),doubleToFloat(0.0517),doubleToFloat(0.5187),doubleToFloat(0.0571),doubleToFloat(0.5017),doubleToFloat(0.0625),doubleToFloat(0.4884),doubleToFloat(0.0657),doubleToFloat(0.4747),doubleToFloat(0.0673),doubleToFloat(0.4552),doubleToFloat(0.0409),doubleToFloat(0.557),doubleToFloat(0.0292),doubleToFloat(0.5765),doubleToFloat(0.0457),doubleToFloat(0.5477),doubleToFloat(0.0571),doubleToFloat(0.5017),doubleToFloat(0.0625),doubleToFloat(0.4884),doubleToFloat(0.0657),doubleToFloat(0.4747),doubleToFloat(0.0471),doubleToFloat(0.5348),doubleToFloat(0.0517),doubleToFloat(0.5187),doubleToFloat(0.0292),doubleToFloat(0.5765),doubleToFloat(0.0673),doubleToFloat(0.4552),doubleToFloat(0.0409),doubleToFloat(0.557),doubleToFloat(0.0457),doubleToFloat(0.5477),doubleToFloat(0.0471),doubleToFloat(0.5348),doubleToFloat(0.0517),doubleToFloat(0.5187),doubleToFloat(0.0571),doubleToFloat(0.5017),doubleToFloat(0.0625),doubleToFloat(0.4884),doubleToFloat(0.0657),doubleToFloat(0.4747),doubleToFloat(0.0673),doubleToFloat(0.4552),doubleToFloat(0.0409),doubleToFloat(0.557),doubleToFloat(0.0548),doubleToFloat(0.5098)], Java.type("float[]"))))))))
                .addChild(new HAnimJoint("hanim_r_shoulder").setName("r_elbow").setDEF("hanim_r_elbow").setCenter(Java.to([doubleToFloat(-7.834),doubleToFloat(43.389999),doubleToFloat(-1.651)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(0)], Java.type("float[]"))).setLlimit(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(0)], Java.type("float[]")))
                  .addChild(new HAnimSegment("hanim_r_elbow").setName("r_forearm").setDEF("hanim_r_forearm")
                    .addChild(new Transform().setTranslation(Java.to([doubleToFloat(-7.834),doubleToFloat(43.389999),doubleToFloat(-1.651)], Java.type("float[]")))
                      .addChild(new Shape()
                        .setAppearance(new Appearance()
                          .setMaterial(new Material().setDiffuseColor(Java.to([doubleToFloat(0.588),doubleToFloat(0.588),doubleToFloat(0.588)], Java.type("float[]"))))
                          .setTexture(new ImageTexture().setUSE("NoTextureAtlas")))
                        .setGeometry(new IndexedFaceSet().setCoordIndex(Java.to([0,4,11,-1,11,12,0,-1,12,11,5,-1,5,13,12,-1,13,5,8,-1,8,1,13,-1,1,8,9,-1,9,2,1,-1,2,9,10,-1,10,3,2,-1,3,10,6,-1,6,14,3,-1,15,7,4,-1,4,0,15,-1,14,6,7,-1,7,15,14,-1,4,16,23,-1,23,11,4,-1,11,23,17,-1,17,5,11,-1,5,17,20,-1,20,8,5,-1,10,22,18,-1,18,6,10,-1,7,19,16,-1,16,4,7,-1,8,20,21,-1,21,9,8,-1,9,21,22,-1,22,10,9,-1,6,18,19,-1,19,7,6,-1,16,24,23,-1,23,24,17,-1,17,24,20,-1,20,24,21,-1,21,24,22,-1,22,24,18,-1,18,24,19,-1,19,24,16,-1,12,29,25,-1,25,0,12,-1,13,1,26,-1,26,30,13,-1,1,2,27,-1,27,26,1,-1,2,3,28,-1,28,27,2,-1,3,14,31,-1,31,28,3,-1,0,25,32,-1,32,15,0,-1,13,30,29,-1,29,12,13,-1,15,32,31,-1,31,14,15,-1,29,33,34,-1,34,25,29,-1,25,34,35,-1,35,32,25,-1,32,35,36,-1,36,31,32,-1,31,36,37,-1,37,28,31,-1,28,37,38,-1,38,27,28,-1,27,38,39,-1,39,26,27,-1,26,39,40,-1,40,30,26,-1,30,40,33,-1,33,29,30,-1,33,41,34,-1,34,41,35,-1,35,41,36,-1,36,41,37,-1,37,41,38,-1,38,41,39,-1,39,41,40,-1,40,41,33,-1], Java.type("int[]"))).setCreaseAngle(1.57).setTexCoordIndex(Java.to([1,9,8,-1,8,0,1,-1,0,8,10,-1,10,2,0,-1,2,10,11,-1,11,3,2,-1,3,11,12,-1,12,4,3,-1,4,12,13,-1,13,5,4,-1,5,13,14,-1,14,6,5,-1,7,15,9,-1,9,1,7,-1,25,26,15,-1,15,7,25,-1,9,17,16,-1,16,8,9,-1,8,16,18,-1,18,10,8,-1,10,18,19,-1,19,11,10,-1,13,21,20,-1,20,14,13,-1,15,22,17,-1,17,9,15,-1,11,19,23,-1,23,12,11,-1,12,23,21,-1,21,13,12,-1,26,27,22,-1,22,15,26,-1,17,24,16,-1,16,24,18,-1,18,24,19,-1,19,24,23,-1,23,24,21,-1,21,24,20,-1,27,24,22,-1,22,24,17,-1,0,32,28,-1,28,1,0,-1,2,3,29,-1,29,33,2,-1,3,4,30,-1,30,29,3,-1,4,5,31,-1,31,30,4,-1,5,6,35,-1,35,31,5,-1,1,28,36,-1,36,7,1,-1,2,33,32,-1,32,0,2,-1,7,36,34,-1,34,25,7,-1,32,37,38,-1,38,28,32,-1,28,38,39,-1,39,36,28,-1,36,39,40,-1,40,34,36,-1,35,40,41,-1,41,31,35,-1,31,41,42,-1,42,30,31,-1,30,42,43,-1,43,29,30,-1,29,43,44,-1,44,33,29,-1,33,44,37,-1,37,32,33,-1,37,45,38,-1,38,45,39,-1,39,45,40,-1,40,45,41,-1,41,45,42,-1,42,45,43,-1,43,45,44,-1,44,45,37,-1], Java.type("int[]")))
                          .setCoord(new Coordinate().setPoint(Java.to([doubleToFloat(0.0407),doubleToFloat(-0.8376),doubleToFloat(-1.221),doubleToFloat(-0.7331),doubleToFloat(-0.5933),doubleToFloat(0.8017),doubleToFloat(0.0176),doubleToFloat(-0.6645),doubleToFloat(1.182),doubleToFloat(0.7221),doubleToFloat(-0.7616),doubleToFloat(0.9014),doubleToFloat(0.0602),doubleToFloat(-7.36),doubleToFloat(-0.7594),doubleToFloat(-0.7233),doubleToFloat(-7.36),doubleToFloat(0.0564),doubleToFloat(0.7878),doubleToFloat(-7.36),doubleToFloat(0.0568),doubleToFloat(0.5288),doubleToFloat(-7.365),doubleToFloat(-0.5335),doubleToFloat(-0.4165),doubleToFloat(-7.365),doubleToFloat(0.6592),doubleToFloat(0.0602),doubleToFloat(-7.36),doubleToFloat(0.9907),doubleToFloat(0.5288),doubleToFloat(-7.365),doubleToFloat(0.6609),doubleToFloat(-0.4165),doubleToFloat(-7.365),doubleToFloat(-0.4678),doubleToFloat(-0.6188),doubleToFloat(-0.6937),doubleToFloat(-0.9942),doubleToFloat(-1.126),doubleToFloat(-0.5903),doubleToFloat(0.0001),doubleToFloat(1.1),doubleToFloat(-0.8178),doubleToFloat(0.0254),doubleToFloat(0.5969),doubleToFloat(-0.8537),doubleToFloat(-1.073),doubleToFloat(0.0602),doubleToFloat(-7.92),doubleToFloat(-0.6297),doubleToFloat(-0.5422),doubleToFloat(-7.92),doubleToFloat(0.0623),doubleToFloat(0.6846),doubleToFloat(-7.92),doubleToFloat(0.0627),doubleToFloat(0.4317),doubleToFloat(-7.915),doubleToFloat(-0.4625),doubleToFloat(-0.3194),doubleToFloat(-7.915),doubleToFloat(0.6006),doubleToFloat(0.0602),doubleToFloat(-7.92),doubleToFloat(0.8486),doubleToFloat(0.4317),doubleToFloat(-7.915),doubleToFloat(0.6022),doubleToFloat(-0.3194),doubleToFloat(-7.915),doubleToFloat(-0.398),doubleToFloat(0.0602),doubleToFloat(-8.182),doubleToFloat(0.065),doubleToFloat(0.0299),doubleToFloat(-0.0952),doubleToFloat(-1.393),doubleToFloat(-0.7675),doubleToFloat(0.0555),doubleToFloat(0.847),doubleToFloat(0.0065),doubleToFloat(-0.0143),doubleToFloat(1.165),doubleToFloat(0.7382),doubleToFloat(-0.1075),doubleToFloat(0.8559),doubleToFloat(-0.7086),doubleToFloat(0.015),doubleToFloat(-1.16),doubleToFloat(-1.198),doubleToFloat(0.0615),doubleToFloat(-0.0132),doubleToFloat(1.198),doubleToFloat(-0.2053),doubleToFloat(-0.0002),doubleToFloat(0.6672),doubleToFloat(-0.1246),doubleToFloat(-1.202),doubleToFloat(-0.4447),doubleToFloat(0.8519),doubleToFloat(-0.9853),doubleToFloat(0.1246),doubleToFloat(0.7619),doubleToFloat(-1.165),doubleToFloat(0.5954),doubleToFloat(0.7485),doubleToFloat(-1.024),doubleToFloat(1.032),doubleToFloat(0.6748),doubleToFloat(-0.0338),doubleToFloat(0.6669),doubleToFloat(0.7576),doubleToFloat(0.6468),doubleToFloat(0.0988),doubleToFloat(0.8314),doubleToFloat(0.8871),doubleToFloat(-0.5047),doubleToFloat(0.8844),doubleToFloat(0.639),doubleToFloat(-0.8466),doubleToFloat(0.8853),doubleToFloat(-0.0438),doubleToFloat(0.1526),doubleToFloat(1.367),doubleToFloat(-0.1493)], Java.type("float[]"))))
                          .setTexCoord(new TextureCoordinate().setPoint(Java.to([doubleToFloat(0.0471),doubleToFloat(0.5348),doubleToFloat(0.0457),doubleToFloat(0.5477),doubleToFloat(0.0517),doubleToFloat(0.5187),doubleToFloat(0.0571),doubleToFloat(0.5017),doubleToFloat(0.0625),doubleToFloat(0.4884),doubleToFloat(0.0657),doubleToFloat(0.4747),doubleToFloat(0.0673),doubleToFloat(0.4552),doubleToFloat(0.0409),doubleToFloat(0.557),doubleToFloat(0.1806),doubleToFloat(0.5707),doubleToFloat(0.1797),doubleToFloat(0.5783),doubleToFloat(0.1804),doubleToFloat(0.5567),doubleToFloat(0.1838),doubleToFloat(0.5503),doubleToFloat(0.1875),doubleToFloat(0.5412),doubleToFloat(0.1933),doubleToFloat(0.5295),doubleToFloat(0.2007),doubleToFloat(0.5198),doubleToFloat(0.175),doubleToFloat(0.5862),doubleToFloat(0.19),doubleToFloat(0.5703),doubleToFloat(0.1907),doubleToFloat(0.5757),doubleToFloat(0.1892),doubleToFloat(0.5587),doubleToFloat(0.1918),doubleToFloat(0.5533),doubleToFloat(0.2114),doubleToFloat(0.539),doubleToFloat(0.2025),doubleToFloat(0.5422),doubleToFloat(0.1895),doubleToFloat(0.5821),doubleToFloat(0.1949),doubleToFloat(0.5468),doubleToFloat(0.2041),doubleToFloat(0.5636),doubleToFloat(0.0292),doubleToFloat(0.5765),doubleToFloat(0.1758),doubleToFloat(0.5987),doubleToFloat(0.1959),doubleToFloat(0.5888),doubleToFloat(0.0457),doubleToFloat(0.5477),doubleToFloat(0.0571),doubleToFloat(0.5017),doubleToFloat(0.0625),doubleToFloat(0.4884),doubleToFloat(0.0657),doubleToFloat(0.4747),doubleToFloat(0.0471),doubleToFloat(0.5348),doubleToFloat(0.0517),doubleToFloat(0.5187),doubleToFloat(0.0292),doubleToFloat(0.5765),doubleToFloat(0.0673),doubleToFloat(0.4552),doubleToFloat(0.0409),doubleToFloat(0.557),doubleToFloat(0.0471),doubleToFloat(0.5348),doubleToFloat(0.0457),doubleToFloat(0.5477),doubleToFloat(0.0409),doubleToFloat(0.557),doubleToFloat(0.0292),doubleToFloat(0.5765),doubleToFloat(0.0657),doubleToFloat(0.4747),doubleToFloat(0.0625),doubleToFloat(0.4884),doubleToFloat(0.0571),doubleToFloat(0.5017),doubleToFloat(0.0517),doubleToFloat(0.5187),doubleToFloat(0.05),doubleToFloat(0.5249)], Java.type("float[]"))))))))
                  .addChild(new HAnimJoint("hanim_r_elbow").setName("r_radiocarpal").setDEF("hanim_r_radiocarpal").setCenter(Java.to([doubleToFloat(-7.738),doubleToFloat(35.43),doubleToFloat(-1.558)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(0)], Java.type("float[]"))).setLlimit(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(0)], Java.type("float[]")))
                    .addChild(new HAnimSegment("hanim_r_radiocarpal").setName("r_carpal").setDEF("hanim_r_carpal")
                      .addChild(new Transform().setTranslation(Java.to([doubleToFloat(-7.738),doubleToFloat(35.43),doubleToFloat(-1.558)], Java.type("float[]")))
                        .addChild(new Shape()
                          .setAppearance(new Appearance()
                            .setMaterial(new Material().setDiffuseColor(Java.to([doubleToFloat(0.588),doubleToFloat(0.588),doubleToFloat(0.588)], Java.type("float[]"))))
                            .setTexture(new ImageTexture().setUSE("NoTextureAtlas")))
                          .setGeometry(new IndexedFaceSet().setCoordIndex(Java.to([14,13,18,-1,18,17,14,-1,12,11,20,-1,20,19,12,-1,4,0,6,-1,6,8,4,-1,21,10,9,-1,9,22,21,-1,16,15,17,-1,17,18,16,-1,2,5,8,-1,8,6,2,-1,13,14,19,-1,19,20,13,-1,3,7,8,-1,8,5,3,-1,15,16,21,-1,21,22,15,-1,8,7,1,-1,1,4,8,-1,2,14,17,-1,17,5,2,-1,18,13,28,-1,28,32,18,-1,12,19,6,-1,6,0,12,-1,20,11,24,-1,24,35,20,-1,26,10,21,-1,21,36,26,-1,22,9,1,-1,1,7,22,-1,30,16,18,-1,18,32,30,-1,17,15,3,-1,3,5,17,-1,28,13,20,-1,20,35,28,-1,19,14,2,-1,2,6,19,-1,3,15,22,-1,22,7,3,-1,21,16,30,-1,30,36,21,-1,28,27,33,-1,33,32,28,-1,24,23,34,-1,34,35,24,-1,26,36,37,-1,37,25,26,-1,30,32,33,-1,33,29,30,-1,31,38,34,-1,34,23,31,-1,29,33,38,-1,38,37,29,-1,28,35,34,-1,34,27,28,-1,29,37,36,-1,36,30,29,-1,27,34,38,-1,38,33,27,-1,31,25,37,-1,37,38,31,-1,40,1,9,-1,9,42,40,-1,4,41,39,-1,39,0,4,-1,11,53,47,-1,47,24,11,-1,1,40,41,-1,41,4,1,-1,10,43,42,-1,42,9,10,-1,26,62,43,-1,43,10,26,-1,0,39,64,-1,64,12,0,-1,25,31,50,-1,50,56,25,-1,25,56,62,-1,62,26,25,-1,24,47,44,-1,44,23,24,-1,31,23,44,-1,44,50,31,-1,44,47,45,-1,47,53,51,-1,51,45,47,-1,45,51,52,-1,52,46,45,-1,48,46,52,-1,52,54,48,-1,49,48,54,-1,54,55,49,-1,49,55,50,-1,42,60,58,-1,58,40,42,-1,41,59,57,-1,57,39,41,-1,40,58,59,-1,59,41,40,-1,43,61,60,-1,60,42,43,-1,64,39,57,-1,57,65,64,-1,62,56,55,-1,55,63,62,-1,66,58,60,-1,60,67,66,-1,67,60,61,-1,61,68,67,-1,75,68,61,-1,61,63,75,-1,69,55,54,-1,54,70,69,-1,71,70,54,-1,54,52,71,-1,71,52,51,-1,51,72,71,-1,76,72,51,-1,51,65,76,-1,73,57,59,-1,59,74,73,-1,74,59,58,-1,58,66,74,-1,62,63,61,-1,61,43,62,-1,69,75,63,-1,63,55,69,-1,50,55,56,-1,53,64,65,-1,65,51,53,-1,73,76,65,-1,65,57,73,-1,12,64,53,-1,53,11,12,-1,67,77,66,-1,66,77,74,-1,74,77,73,-1,73,77,76,-1,76,77,72,-1,72,77,71,-1,71,77,70,-1,70,77,69,-1,69,77,75,-1,75,77,68,-1,68,77,67,-1,81,80,83,-1,83,82,81,-1,46,78,79,-1,79,45,46,-1,45,79,80,-1,80,44,45,-1,44,80,81,-1,81,50,44,-1,50,81,82,-1,82,49,50,-1,49,82,83,-1,83,48,49,-1,48,83,78,-1,78,46,48,-1,83,80,79,-1,79,78,83,-1], Java.type("int[]"))).setCreaseAngle(1.57).setTexCoordIndex(Java.to([1,0,3,-1,3,2,1,-1,5,4,7,-1,7,6,5,-1,9,8,11,-1,11,10,9,-1,14,13,12,-1,12,15,14,-1,17,16,81,-1,81,82,17,-1,19,18,10,-1,10,11,19,-1,0,1,6,-1,6,7,0,-1,21,20,84,-1,84,85,21,-1,16,17,14,-1,14,15,16,-1,84,20,22,-1,22,83,84,-1,19,1,2,-1,2,18,19,-1,3,0,24,-1,24,23,3,-1,5,6,11,-1,11,8,5,-1,7,4,26,-1,26,25,7,-1,27,13,14,-1,14,28,27,-1,15,12,22,-1,22,20,15,-1,29,17,82,-1,82,86,29,-1,81,16,21,-1,21,85,81,-1,24,0,7,-1,7,25,24,-1,6,1,19,-1,19,11,6,-1,21,16,15,-1,15,20,21,-1,14,17,29,-1,29,28,14,-1,24,30,31,-1,31,23,24,-1,26,32,33,-1,33,25,26,-1,27,28,35,-1,35,34,27,-1,29,86,87,-1,87,36,29,-1,37,39,33,-1,33,32,37,-1,36,87,38,-1,38,35,36,-1,24,25,33,-1,33,30,24,-1,36,35,28,-1,28,29,36,-1,30,33,39,-1,39,31,30,-1,88,34,35,-1,35,38,88,-1,40,22,12,-1,12,41,40,-1,9,43,42,-1,42,8,9,-1,4,47,44,-1,44,26,4,-1,22,40,89,-1,89,83,22,-1,13,45,41,-1,41,12,13,-1,27,46,45,-1,45,13,27,-1,8,42,50,-1,50,5,8,-1,34,88,49,-1,49,48,34,-1,34,48,46,-1,46,27,34,-1,26,44,51,-1,51,32,26,-1,37,32,51,-1,51,52,37,-1,51,44,55,-1,44,47,61,-1,61,55,44,-1,55,61,63,-1,63,56,55,-1,53,90,91,-1,91,57,53,-1,54,53,57,-1,57,58,54,-1,54,58,49,-1,41,60,59,-1,59,40,41,-1,43,73,72,-1,72,42,43,-1,40,59,92,-1,92,89,40,-1,45,62,60,-1,60,41,45,-1,50,42,72,-1,72,74,50,-1,46,48,58,-1,58,64,46,-1,65,59,60,-1,60,66,65,-1,66,60,62,-1,62,67,66,-1,68,67,62,-1,62,64,68,-1,69,58,57,-1,57,70,69,-1,71,70,57,-1,57,91,71,-1,75,63,61,-1,61,76,75,-1,77,76,61,-1,61,74,77,-1,78,72,73,-1,73,79,78,-1,93,92,59,-1,59,65,93,-1,46,64,62,-1,62,45,46,-1,69,68,64,-1,64,58,69,-1,49,58,48,-1,47,50,74,-1,74,61,47,-1,78,77,74,-1,74,72,78,-1,5,50,47,-1,47,4,5,-1,66,94,65,-1,65,94,93,-1,79,80,78,-1,78,80,77,-1,77,80,76,-1,76,80,75,-1,71,94,70,-1,70,94,69,-1,69,94,68,-1,68,94,67,-1,67,94,66,-1,98,97,100,-1,100,99,98,-1,56,101,102,-1,102,55,56,-1,55,102,103,-1,103,51,55,-1,51,103,104,-1,104,52,51,-1,49,98,99,-1,99,54,49,-1,54,99,100,-1,100,53,54,-1,53,100,95,-1,95,90,53,-1,100,97,96,-1,96,95,100,-1], Java.type("int[]")))
                            .setCoord(new Coordinate().setPoint(Java.to([doubleToFloat(0.4043),doubleToFloat(-3.207),doubleToFloat(-1.378),doubleToFloat(-0.4128),doubleToFloat(-2.968),doubleToFloat(-1.473),doubleToFloat(0.2797),doubleToFloat(-4.439),doubleToFloat(-1.289),doubleToFloat(-0.1832),doubleToFloat(-4.593),doubleToFloat(-1.405),doubleToFloat(0.0421),doubleToFloat(-3.004),doubleToFloat(-1.559),doubleToFloat(0.1308),doubleToFloat(-4.617),doubleToFloat(-1.397),doubleToFloat(0.3408),doubleToFloat(-3.913),doubleToFloat(-1.358),doubleToFloat(-0.3758),doubleToFloat(-4.16),doubleToFloat(-1.523),doubleToFloat(-0.0124),doubleToFloat(-4.066),doubleToFloat(-1.559),doubleToFloat(-0.8293),doubleToFloat(-3.133),doubleToFloat(-0.7949),doubleToFloat(-1.016),doubleToFloat(-3.286),doubleToFloat(-0.1119),doubleToFloat(0.2604),doubleToFloat(-3.534),doubleToFloat(-0.1595),doubleToFloat(0.3253),doubleToFloat(-3.393),doubleToFloat(-0.837),doubleToFloat(0.0163),doubleToFloat(-5.016),doubleToFloat(-0.2094),doubleToFloat(0.09),doubleToFloat(-4.738),doubleToFloat(-0.8515),doubleToFloat(-0.5302),doubleToFloat(-5.003),doubleToFloat(-0.7804),doubleToFloat(-0.5697),doubleToFloat(-5.193),doubleToFloat(-0.1607),doubleToFloat(-0.2221),doubleToFloat(-5.027),doubleToFloat(-0.7658),doubleToFloat(-0.2882),doubleToFloat(-5.238),doubleToFloat(-0.1569),doubleToFloat(0.1799),doubleToFloat(-4.254),doubleToFloat(-0.8409),doubleToFloat(0.0702),doubleToFloat(-4.437),doubleToFloat(-0.2076),doubleToFloat(-0.8565),doubleToFloat(-4.796),doubleToFloat(-0.1534),doubleToFloat(-0.7574),doubleToFloat(-4.564),doubleToFloat(-0.8292),doubleToFloat(0.2845),doubleToFloat(-3.357),doubleToFloat(1.304),doubleToFloat(0.1969),doubleToFloat(-3.468),doubleToFloat(0.5586),doubleToFloat(-0.633),doubleToFloat(-3.3),doubleToFloat(1.52),doubleToFloat(-0.8956),doubleToFloat(-3.358),doubleToFloat(0.7774),doubleToFloat(0.4199),doubleToFloat(-4.856),doubleToFloat(1.144),doubleToFloat(0.1634),doubleToFloat(-5.048),doubleToFloat(0.4861),doubleToFloat(-0.1131),doubleToFloat(-4.963),doubleToFloat(1.294),doubleToFloat(-0.3684),doubleToFloat(-5.183),doubleToFloat(0.552),doubleToFloat(-0.196),doubleToFloat(-3.265),doubleToFloat(1.588),doubleToFloat(-0.1067),doubleToFloat(-5.202),doubleToFloat(0.5371),doubleToFloat(0.2033),doubleToFloat(-4.982),doubleToFloat(1.286),doubleToFloat(0.3224),doubleToFloat(-4.461),doubleToFloat(1.197),doubleToFloat(0.1814),doubleToFloat(-4.515),doubleToFloat(0.5129),doubleToFloat(-0.6181),doubleToFloat(-4.745),doubleToFloat(0.6589),doubleToFloat(-0.3549),doubleToFloat(-4.593),doubleToFloat(1.367),doubleToFloat(0.0071),doubleToFloat(-4.49),doubleToFloat(1.429),doubleToFloat(0.511),doubleToFloat(-1.809),doubleToFloat(-1.269),doubleToFloat(-0.5069),doubleToFloat(-1.863),doubleToFloat(-1.291),doubleToFloat(0.1385),doubleToFloat(-1.88),doubleToFloat(-1.433),doubleToFloat(-0.8834),doubleToFloat(-2.065),doubleToFloat(-0.6619),doubleToFloat(-1.084),doubleToFloat(-2.041),doubleToFloat(-0.022),doubleToFloat(0.4454),doubleToFloat(-2.04),doubleToFloat(1.241),doubleToFloat(0.8595),doubleToFloat(-1.439),doubleToFloat(0.8284),doubleToFloat(0.9394),doubleToFloat(-1.167),doubleToFloat(1.129),doubleToFloat(0.4703),doubleToFloat(-2.492),doubleToFloat(0.5589),doubleToFloat(0.5852),doubleToFloat(-1.133),doubleToFloat(1.494),doubleToFloat(0.2387),doubleToFloat(-1.35),doubleToFloat(1.691),doubleToFloat(-0.0662),doubleToFloat(-1.692),doubleToFloat(1.461),doubleToFloat(0.7589),doubleToFloat(-0.6824),doubleToFloat(0.1014),doubleToFloat(0.7016),doubleToFloat(-0.5391),doubleToFloat(0.6842),doubleToFloat(0.5615),doubleToFloat(-2.528),doubleToFloat(-0.1514),doubleToFloat(0.2145),doubleToFloat(-0.417),doubleToFloat(1.097),doubleToFloat(-0.2343),doubleToFloat(-0.6792),doubleToFloat(1.151),doubleToFloat(-0.5466),doubleToFloat(-1.944),doubleToFloat(1.397),doubleToFloat(0.6186),doubleToFloat(-0.782),doubleToFloat(-1.082),doubleToFloat(-0.4937),doubleToFloat(-0.8981),doubleToFloat(-1.119),doubleToFloat(0.1599),doubleToFloat(-0.9475),doubleToFloat(-1.256),doubleToFloat(-0.7682),doubleToFloat(-0.9026),doubleToFloat(-0.6282),doubleToFloat(-0.8526),doubleToFloat(-0.8017),doubleToFloat(-0.0674),doubleToFloat(-0.9273),doubleToFloat(-2.063),doubleToFloat(0.7753),doubleToFloat(-0.7028),doubleToFloat(-0.7443),doubleToFloat(0.6125),doubleToFloat(0.5058),doubleToFloat(-2.279),doubleToFloat(-0.8314),doubleToFloat(0.6034),doubleToFloat(-0.7674),doubleToFloat(-0.6877),doubleToFloat(-0.1927),doubleToFloat(0.058),doubleToFloat(-0.616),doubleToFloat(-0.5424),doubleToFloat(0.058),doubleToFloat(-0.3011),doubleToFloat(-0.6496),doubleToFloat(0.058),doubleToFloat(-0.083),doubleToFloat(-0.3722),doubleToFloat(0.058),doubleToFloat(0.5801),doubleToFloat(0.0857),doubleToFloat(0.058),doubleToFloat(0.6207),doubleToFloat(0.5588),doubleToFloat(0.058),doubleToFloat(0.2743),doubleToFloat(0.535),doubleToFloat(0.058),doubleToFloat(-0.0465),doubleToFloat(0.4787),doubleToFloat(0.058),doubleToFloat(-0.6034),doubleToFloat(0.1506),doubleToFloat(0.058),doubleToFloat(-0.6883),doubleToFloat(-0.5294),doubleToFloat(0.058),doubleToFloat(0.2886),doubleToFloat(0.416),doubleToFloat(0.058),doubleToFloat(-0.386),doubleToFloat(-0.0434),doubleToFloat(0.3889),doubleToFloat(-0.0832),doubleToFloat(1.548),doubleToFloat(-2.417),doubleToFloat(1.676),doubleToFloat(1.411),doubleToFloat(-2.58),doubleToFloat(1.542),doubleToFloat(1.135),doubleToFloat(-2.619),doubleToFloat(1.525),doubleToFloat(0.8304),doubleToFloat(-2.413),doubleToFloat(1.71),doubleToFloat(0.9952),doubleToFloat(-2.239),doubleToFloat(1.903),doubleToFloat(1.34),doubleToFloat(-2.312),doubleToFloat(1.813)], Java.type("float[]"))))
                            .setTexCoord(new TextureCoordinate().setPoint(Java.to([doubleToFloat(0.2854),doubleToFloat(0.417),doubleToFloat(0.2772),doubleToFloat(0.41),doubleToFloat(0.2831),doubleToFloat(0.408),doubleToFloat(0.2903),doubleToFloat(0.4146),doubleToFloat(0.265),doubleToFloat(0.4285),doubleToFloat(0.2586),doubleToFloat(0.4199),doubleToFloat(0.2705),doubleToFloat(0.4138),doubleToFloat(0.2773),doubleToFloat(0.4212),doubleToFloat(0.2523),doubleToFloat(0.4135),doubleToFloat(0.2473),doubleToFloat(0.4093),doubleToFloat(0.2624),doubleToFloat(0.4028),doubleToFloat(0.2621),doubleToFloat(0.4091),doubleToFloat(0.1715),doubleToFloat(0.4268),doubleToFloat(0.1606),doubleToFloat(0.427),doubleToFloat(0.1557),doubleToFloat(0.4048),doubleToFloat(0.1661),doubleToFloat(0.4058),doubleToFloat(0.1642),doubleToFloat(0.3989),doubleToFloat(0.1542),doubleToFloat(0.3981),doubleToFloat(0.2716),doubleToFloat(0.4031),doubleToFloat(0.2696),doubleToFloat(0.4063),doubleToFloat(0.1787),doubleToFloat(0.4088),doubleToFloat(0.1762),doubleToFloat(0.4019),doubleToFloat(0.1834),doubleToFloat(0.4266),doubleToFloat(0.2945),doubleToFloat(0.4248),doubleToFloat(0.2904),doubleToFloat(0.4267),doubleToFloat(0.2831),doubleToFloat(0.4307),doubleToFloat(0.2689),doubleToFloat(0.439),doubleToFloat(0.147),doubleToFloat(0.4291),doubleToFloat(0.1436),doubleToFloat(0.4079),doubleToFloat(0.1429),doubleToFloat(0.4003),doubleToFloat(0.2923),doubleToFloat(0.4372),doubleToFloat(0.2958),doubleToFloat(0.4382),doubleToFloat(0.2727),doubleToFloat(0.4496),doubleToFloat(0.2874),doubleToFloat(0.4405),doubleToFloat(0.1356),doubleToFloat(0.4327),doubleToFloat(0.133),doubleToFloat(0.4126),doubleToFloat(0.1318),doubleToFloat(0.4062),doubleToFloat(0.2758),doubleToFloat(0.4563),doubleToFloat(0.1279),doubleToFloat(0.4134),doubleToFloat(0.2905),doubleToFloat(0.4451),doubleToFloat(0.1841),doubleToFloat(0.4441),doubleToFloat(0.173),doubleToFloat(0.4428),doubleToFloat(0.2336),doubleToFloat(0.4239),doubleToFloat(0.232),doubleToFloat(0.4181),doubleToFloat(0.2553),doubleToFloat(0.4468),doubleToFloat(0.1634),doubleToFloat(0.4452),doubleToFloat(0.1514),doubleToFloat(0.4479),doubleToFloat(0.2509),doubleToFloat(0.4359),doubleToFloat(0.1412),doubleToFloat(0.4529),doubleToFloat(0.1367),doubleToFloat(0.4599),doubleToFloat(0.2432),doubleToFloat(0.4272),doubleToFloat(0.2531),doubleToFloat(0.4616),doubleToFloat(0.2586),doubleToFloat(0.4664),doubleToFloat(0.1365),doubleToFloat(0.476),doubleToFloat(0.1366),doubleToFloat(0.4681),doubleToFloat(0.241),doubleToFloat(0.4558),doubleToFloat(0.2368),doubleToFloat(0.4586),doubleToFloat(0.1496),doubleToFloat(0.4794),doubleToFloat(0.1502),doubleToFloat(0.4711),doubleToFloat(0.1836),doubleToFloat(0.4592),doubleToFloat(0.1761),doubleToFloat(0.4601),doubleToFloat(0.2253),doubleToFloat(0.4494),doubleToFloat(0.1684),doubleToFloat(0.463),doubleToFloat(0.2261),doubleToFloat(0.4579),doubleToFloat(0.1588),doubleToFloat(0.4664),doubleToFloat(0.1796),doubleToFloat(0.4752),doubleToFloat(0.1737),doubleToFloat(0.474),doubleToFloat(0.1709),doubleToFloat(0.4735),doubleToFloat(0.1663),doubleToFloat(0.4756),doubleToFloat(0.162),doubleToFloat(0.4762),doubleToFloat(0.1602),doubleToFloat(0.4819),doubleToFloat(0.1617),doubleToFloat(0.4895),doubleToFloat(0.2206),doubleToFloat(0.4327),doubleToFloat(0.2187),doubleToFloat(0.4259),doubleToFloat(0.2227),doubleToFloat(0.4378),doubleToFloat(0.2131),doubleToFloat(0.456),doubleToFloat(0.2115),doubleToFloat(0.4515),doubleToFloat(0.2119),doubleToFloat(0.4457),doubleToFloat(0.2094),doubleToFloat(0.4437),doubleToFloat(0.2061),doubleToFloat(0.4411),doubleToFloat(0.2017),doubleToFloat(0.4524),doubleToFloat(0.1652),doubleToFloat(0.3951),doubleToFloat(0.1534),doubleToFloat(0.3946),doubleToFloat(0.1894),doubleToFloat(0.4248),doubleToFloat(0.1835),doubleToFloat(0.4079),doubleToFloat(0.1786),doubleToFloat(0.3986),doubleToFloat(0.1411),doubleToFloat(0.3973),doubleToFloat(0.1285),doubleToFloat(0.4039),doubleToFloat(0.1298),doubleToFloat(0.4342),doubleToFloat(0.193),doubleToFloat(0.4435),doubleToFloat(0.1346),doubleToFloat(0.4831),doubleToFloat(0.1474),doubleToFloat(0.4881),doubleToFloat(0.1921),doubleToFloat(0.4603),doubleToFloat(0.1832),doubleToFloat(0.4783),doubleToFloat(0.1721),doubleToFloat(0.4818),doubleToFloat(0.1111),doubleToFloat(0.4765),doubleToFloat(0.1087),doubleToFloat(0.4729),doubleToFloat(0.1098),doubleToFloat(0.4688),doubleToFloat(0.1162),doubleToFloat(0.467),doubleToFloat(0.1174),doubleToFloat(0.4712),doubleToFloat(0.114),doubleToFloat(0.4745),doubleToFloat(0.2355),doubleToFloat(0.48),doubleToFloat(0.239),doubleToFloat(0.4794),doubleToFloat(0.241),doubleToFloat(0.4768),doubleToFloat(0.2455),doubleToFloat(0.4762)], Java.type("float[]")))))))))))
              .addChild(new HAnimJoint("hanim_sacroiliac").setName("vl5").setDEF("hanim_vl5").setCenter(Java.to([doubleToFloat(0),doubleToFloat(37.060001),doubleToFloat(-1.409)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(0)], Java.type("float[]"))).setLlimit(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(0)], Java.type("float[]")))
                .addChild(new HAnimSegment("hanim_vl5").setName("l5").setDEF("hanim_l5")
                  .addChild(new Transform().setTranslation(Java.to([doubleToFloat(0),doubleToFloat(37.060001),doubleToFloat(-1.409)], Java.type("float[]")))
                    .addChild(new Shape()
                      .setAppearance(new Appearance()
                        .setMaterial(new Material().setDiffuseColor(Java.to([doubleToFloat(0.588),doubleToFloat(0.588),doubleToFloat(0.588)], Java.type("float[]"))))
                        .setTexture(new ImageTexture().setUSE("NoTextureAtlas")))
                      .setGeometry(new IndexedFaceSet().setCoordIndex(Java.to([28,6,7,-1,7,29,28,-1,49,50,5,-1,5,0,49,-1,33,34,19,-1,19,18,33,-1,6,25,23,-1,23,37,6,-1,7,35,36,-1,36,4,7,-1,6,37,38,-1,32,17,19,-1,19,34,32,-1,28,27,25,-1,25,6,28,-1,30,29,7,-1,7,4,30,-1,16,8,51,-1,51,52,16,-1,49,53,10,-1,10,9,49,-1,51,157,158,-1,158,13,51,-1,54,52,11,-1,11,12,54,-1,55,50,15,-1,15,14,55,-1,19,5,3,-1,3,18,19,-1,17,0,5,-1,5,19,17,-1,18,3,75,-1,75,95,18,-1,4,26,31,-1,31,30,4,-1,22,20,17,-1,17,32,22,-1,21,0,17,-1,17,20,21,-1,54,53,21,-1,21,1,54,-1,47,1,21,-1,21,20,47,-1,23,33,76,-1,76,173,23,-1,25,34,33,-1,33,23,25,-1,62,26,4,-1,4,66,62,-1,27,32,34,-1,34,25,27,-1,24,2,178,-1,178,179,24,-1,18,95,76,-1,76,33,18,-1,36,35,118,-1,118,119,36,-1,46,36,119,-1,119,120,46,-1,122,38,37,-1,37,121,122,-1,118,35,38,-1,38,122,118,-1,67,68,41,-1,41,40,67,-1,42,69,263,-1,263,77,42,-1,39,70,71,-1,71,45,39,-1,44,43,72,-1,72,73,44,-1,39,41,68,-1,68,70,39,-1,40,44,73,-1,73,67,40,-1,45,71,69,-1,69,42,45,-1,36,66,4,-1,38,35,7,-1,7,6,38,-1,9,15,50,-1,50,49,9,-1,13,11,52,-1,52,51,13,-1,0,21,53,-1,53,49,0,-1,8,78,157,-1,157,51,8,-1,1,16,52,-1,52,54,1,-1,55,3,5,-1,5,50,55,-1,12,10,53,-1,53,54,12,-1,55,14,97,-1,97,201,55,-1,28,29,56,-1,29,30,56,-1,30,31,56,-1,31,48,56,-1,48,22,56,-1,22,32,56,-1,32,27,56,-1,27,28,56,-1,37,23,173,-1,173,96,37,-1,3,55,201,-1,201,75,3,-1,2,46,204,-1,204,178,2,-1,46,120,124,-1,124,204,46,-1,97,14,257,-1,257,259,97,-1,31,26,57,-1,57,48,31,-1,24,179,74,-1,74,58,24,-1,207,60,58,-1,58,74,207,-1,16,64,59,-1,59,8,16,-1,58,63,62,-1,62,24,58,-1,59,99,78,-1,78,8,59,-1,57,63,65,-1,65,61,57,-1,99,59,60,-1,60,207,99,-1,20,22,61,-1,61,47,20,-1,61,22,48,-1,48,57,61,-1,65,64,47,-1,47,61,65,-1,63,57,26,-1,26,62,63,-1,63,58,60,-1,60,65,63,-1,65,60,59,-1,59,64,65,-1,16,1,47,-1,47,64,16,-1,46,2,66,-1,66,36,46,-1,2,24,62,-1,62,66,2,-1,9,10,253,-1,253,252,9,-1,13,158,192,-1,192,254,13,-1,255,12,11,-1,11,256,255,-1,14,15,258,-1,258,257,14,-1,10,12,255,-1,255,253,10,-1,15,9,252,-1,252,258,15,-1,256,11,13,-1,13,254,256,-1,43,100,98,-1,98,72,43,-1,80,81,82,-1,82,79,80,-1,84,90,89,-1,89,83,84,-1,86,87,79,-1,79,85,86,-1,90,84,101,-1,101,225,90,-1,82,85,79,-1,89,81,80,-1,80,83,89,-1,85,91,86,-1,92,86,93,-1,93,94,92,-1,88,93,86,-1,86,91,88,-1,251,94,93,-1,93,88,251,-1,102,103,107,-1,107,111,102,-1,103,104,108,-1,108,107,103,-1,104,238,239,-1,239,108,104,-1,106,110,109,-1,109,105,106,-1,102,111,110,-1,110,106,102,-1,112,116,111,-1,111,107,112,-1,113,112,107,-1,107,108,113,-1,114,248,249,-1,249,109,114,-1,114,109,110,-1,110,115,114,-1,115,110,111,-1,111,116,115,-1,119,118,116,-1,116,112,119,-1,120,119,112,-1,112,113,120,-1,115,122,121,-1,121,114,115,-1,116,118,122,-1,122,115,116,-1,105,109,249,-1,249,117,105,-1,123,113,108,-1,108,239,123,-1,120,113,123,-1,123,124,120,-1,121,125,248,-1,248,114,121,-1,121,37,96,-1,96,125,121,-1,85,82,91,-1,126,129,128,-1,128,127,126,-1,131,130,133,-1,133,132,131,-1,134,137,136,-1,136,135,134,-1,127,138,140,-1,140,139,127,-1,128,141,143,-1,143,142,128,-1,127,144,138,-1,145,135,136,-1,136,146,145,-1,126,127,139,-1,139,147,126,-1,148,141,128,-1,128,129,148,-1,149,152,151,-1,151,150,149,-1,131,153,155,-1,155,154,131,-1,151,156,158,-1,158,157,151,-1,160,159,161,-1,161,152,160,-1,163,162,164,-1,164,132,163,-1,136,137,165,-1,165,133,136,-1,146,136,133,-1,133,130,146,-1,137,95,75,-1,75,165,137,-1,141,148,167,-1,167,166,141,-1,168,145,146,-1,146,169,168,-1,170,169,146,-1,146,130,170,-1,160,171,170,-1,170,154,160,-1,172,169,170,-1,170,171,172,-1,140,173,76,-1,76,134,140,-1,139,140,134,-1,134,135,139,-1,175,174,141,-1,141,166,175,-1,147,139,135,-1,135,145,147,-1,176,179,178,-1,178,177,176,-1,137,134,76,-1,76,95,137,-1,143,180,181,-1,181,142,143,-1,183,182,180,-1,180,143,183,-1,184,185,138,-1,138,144,184,-1,181,184,144,-1,144,142,181,-1,187,186,189,-1,189,188,187,-1,190,77,263,-1,263,191,190,-1,193,196,195,-1,195,194,193,-1,197,200,199,-1,199,198,197,-1,193,194,188,-1,188,189,193,-1,186,187,200,-1,200,197,186,-1,196,190,191,-1,191,195,196,-1,143,141,174,-1,144,127,128,-1,128,142,144,-1,153,131,132,-1,132,164,153,-1,156,151,152,-1,152,161,156,-1,130,131,154,-1,154,170,130,-1,150,151,157,-1,157,78,150,-1,171,160,152,-1,152,149,171,-1,163,132,133,-1,133,165,163,-1,159,160,154,-1,154,155,159,-1,163,201,97,-1,97,162,163,-1,126,202,129,-1,129,202,148,-1,148,202,167,-1,167,202,203,-1,203,202,168,-1,168,202,145,-1,145,202,147,-1,147,202,126,-1,138,96,173,-1,173,140,138,-1,165,75,201,-1,201,163,165,-1,177,178,204,-1,204,183,177,-1,183,204,124,-1,124,182,183,-1,97,259,266,-1,266,162,97,-1,167,203,205,-1,205,166,167,-1,176,206,74,-1,74,179,176,-1,207,74,206,-1,206,208,207,-1,149,150,210,-1,210,209,149,-1,206,176,175,-1,175,211,206,-1,210,150,78,-1,78,99,210,-1,205,213,212,-1,212,211,205,-1,99,207,208,-1,208,210,99,-1,169,172,213,-1,213,168,169,-1,213,205,203,-1,203,168,213,-1,212,213,172,-1,172,209,212,-1,211,175,166,-1,166,205,211,-1,211,212,208,-1,208,206,211,-1,212,209,210,-1,210,208,212,-1,149,209,172,-1,172,171,149,-1,183,143,174,-1,174,177,183,-1,177,174,175,-1,175,176,177,-1,153,260,261,-1,261,155,153,-1,156,262,192,-1,192,158,156,-1,264,265,161,-1,161,159,264,-1,162,266,267,-1,267,164,162,-1,155,261,264,-1,264,159,155,-1,164,267,260,-1,260,153,164,-1,265,262,156,-1,156,161,265,-1,198,199,98,-1,98,100,198,-1,215,214,217,-1,217,216,215,-1,219,218,221,-1,221,220,219,-1,223,222,214,-1,214,224,223,-1,220,225,101,-1,101,219,220,-1,217,214,222,-1,221,218,215,-1,215,216,221,-1,222,223,226,-1,229,228,227,-1,227,223,229,-1,230,226,223,-1,223,227,230,-1,231,230,227,-1,227,228,231,-1,232,235,234,-1,234,233,232,-1,233,234,237,-1,237,236,233,-1,236,237,239,-1,239,238,236,-1,241,240,243,-1,243,242,241,-1,232,241,242,-1,242,235,232,-1,244,234,235,-1,235,245,244,-1,246,237,234,-1,234,244,246,-1,247,243,249,-1,249,248,247,-1,247,250,242,-1,242,243,247,-1,250,245,235,-1,235,242,250,-1,180,244,245,-1,245,181,180,-1,182,246,244,-1,244,180,182,-1,250,247,185,-1,185,184,250,-1,245,250,184,-1,184,181,245,-1,240,117,249,-1,249,243,240,-1,123,239,237,-1,237,246,123,-1,182,124,123,-1,123,246,182,-1,185,247,248,-1,248,125,185,-1,185,125,96,-1,96,138,185,-1,222,226,217,-1,67,73,72,-1,67,72,98,-1,98,199,200,-1,200,187,188,-1,98,200,188,-1,67,98,188,-1,188,194,195,-1,195,191,263,-1,188,195,263,-1,67,188,263,-1,263,69,71,-1,67,263,71,-1,67,71,70,-1,67,70,68,-1,259,257,269,-1,269,268,259,-1,257,258,270,-1,270,269,257,-1,258,252,271,-1,271,270,258,-1,252,253,272,-1,272,271,252,-1,253,255,273,-1,273,272,253,-1,255,256,274,-1,274,273,255,-1,256,254,275,-1,275,274,256,-1,254,192,276,-1,276,275,254,-1,192,262,277,-1,277,276,192,-1,262,265,278,-1,278,277,262,-1,265,264,279,-1,279,278,265,-1,264,261,280,-1,280,279,264,-1,261,260,281,-1,281,280,261,-1,260,267,282,-1,282,281,260,-1,267,266,283,-1,283,282,267,-1,266,259,268,-1,268,283,266,-1,268,269,284,-1,269,270,284,-1,270,271,284,-1,271,272,284,-1,272,273,284,-1,273,274,284,-1,274,275,284,-1,275,276,284,-1,276,277,284,-1,277,278,284,-1,278,279,284,-1,279,280,284,-1,280,281,284,-1,281,282,284,-1,282,283,284,-1,283,268,284,-1], Java.type("int[]"))).setCreaseAngle(1.57).setTexCoordIndex(Java.to([0,1,2,-1,2,3,0,-1,5,6,7,-1,7,4,5,-1,8,9,10,-1,10,11,8,-1,1,13,14,-1,14,12,1,-1,2,18,19,-1,19,17,2,-1,1,12,20,-1,21,22,10,-1,10,9,21,-1,0,23,13,-1,13,1,0,-1,24,3,2,-1,2,17,24,-1,25,26,27,-1,27,28,25,-1,5,31,32,-1,32,30,5,-1,27,34,35,-1,35,33,27,-1,37,28,38,-1,38,36,37,-1,40,6,41,-1,41,39,40,-1,10,7,43,-1,43,11,10,-1,22,4,7,-1,7,10,22,-1,11,43,44,-1,44,45,11,-1,17,15,46,-1,46,24,17,-1,48,49,22,-1,22,21,48,-1,50,4,22,-1,22,49,50,-1,37,31,50,-1,50,47,37,-1,52,47,50,-1,50,49,52,-1,14,8,53,-1,53,54,14,-1,13,9,8,-1,8,14,13,-1,86,15,17,-1,17,90,86,-1,23,21,9,-1,9,13,23,-1,16,55,56,-1,56,29,16,-1,11,45,53,-1,53,8,11,-1,19,18,58,-1,58,57,19,-1,60,19,57,-1,57,59,60,-1,61,20,12,-1,12,62,61,-1,58,18,20,-1,20,61,58,-1,91,92,64,-1,64,63,91,-1,65,93,98,-1,98,66,65,-1,67,94,95,-1,95,68,67,-1,69,70,96,-1,96,97,69,-1,67,64,92,-1,92,94,67,-1,63,69,97,-1,97,91,63,-1,68,95,93,-1,93,65,68,-1,19,90,17,-1,20,18,2,-1,2,1,20,-1,30,41,6,-1,6,5,30,-1,33,38,28,-1,28,27,33,-1,4,50,31,-1,31,5,4,-1,26,42,34,-1,34,27,26,-1,47,25,28,-1,28,37,47,-1,40,43,7,-1,7,6,40,-1,36,32,31,-1,31,37,36,-1,40,39,72,-1,72,73,40,-1,0,3,74,-1,3,24,74,-1,24,46,74,-1,46,51,74,-1,51,48,74,-1,48,21,74,-1,21,23,74,-1,23,0,74,-1,12,14,54,-1,54,71,12,-1,43,40,73,-1,73,44,43,-1,55,60,75,-1,75,56,55,-1,60,59,76,-1,76,75,60,-1,72,39,96,-1,96,99,72,-1,46,15,78,-1,78,51,46,-1,16,29,79,-1,79,81,16,-1,83,84,81,-1,81,79,83,-1,25,88,82,-1,82,26,25,-1,81,87,86,-1,86,16,81,-1,82,80,42,-1,42,26,82,-1,78,87,89,-1,89,85,78,-1,80,82,84,-1,84,83,80,-1,49,48,85,-1,85,52,49,-1,85,48,51,-1,51,78,85,-1,89,88,52,-1,52,85,89,-1,87,78,15,-1,15,86,87,-1,87,81,84,-1,84,89,87,-1,89,84,82,-1,82,88,89,-1,25,47,52,-1,52,88,25,-1,60,55,90,-1,90,19,60,-1,55,16,86,-1,86,90,55,-1,30,32,92,-1,92,91,30,-1,33,35,98,-1,98,93,33,-1,94,36,38,-1,38,95,94,-1,39,41,97,-1,97,96,39,-1,32,36,94,-1,94,92,32,-1,41,30,91,-1,91,97,41,-1,95,38,33,-1,33,93,95,-1,70,77,99,-1,99,96,70,-1,101,102,103,-1,103,100,101,-1,105,106,107,-1,107,104,105,-1,109,110,100,-1,100,108,109,-1,106,105,111,-1,111,112,106,-1,103,108,100,-1,107,102,101,-1,101,104,107,-1,147,149,150,-1,116,148,114,-1,114,115,116,-1,117,114,148,-1,148,113,117,-1,118,115,114,-1,114,117,118,-1,119,120,121,-1,121,122,119,-1,120,123,124,-1,124,121,120,-1,123,125,126,-1,126,124,123,-1,128,129,130,-1,130,127,128,-1,119,122,129,-1,129,128,119,-1,131,132,122,-1,122,121,131,-1,133,131,121,-1,121,124,133,-1,134,135,136,-1,136,130,134,-1,134,130,129,-1,129,137,134,-1,137,129,122,-1,122,132,137,-1,138,139,132,-1,132,131,138,-1,140,138,131,-1,131,133,140,-1,137,141,142,-1,142,134,137,-1,132,139,141,-1,141,137,132,-1,127,130,136,-1,136,143,127,-1,144,133,124,-1,124,126,144,-1,140,133,144,-1,144,145,140,-1,142,151,135,-1,135,134,142,-1,62,12,71,-1,71,152,62,-1,147,146,149,-1,153,156,155,-1,155,154,153,-1,158,157,160,-1,160,159,158,-1,161,164,163,-1,163,162,161,-1,154,165,167,-1,167,166,154,-1,155,168,170,-1,170,169,155,-1,154,171,165,-1,172,162,163,-1,163,173,172,-1,153,154,166,-1,166,174,153,-1,175,168,155,-1,155,156,175,-1,176,179,178,-1,178,177,176,-1,158,180,182,-1,182,181,158,-1,178,183,185,-1,185,184,178,-1,187,186,188,-1,188,179,187,-1,190,189,191,-1,191,159,190,-1,163,164,192,-1,192,160,163,-1,173,163,160,-1,160,157,173,-1,164,194,193,-1,193,192,164,-1,168,175,196,-1,196,195,168,-1,197,172,173,-1,173,198,197,-1,199,198,173,-1,173,157,199,-1,187,200,199,-1,199,181,187,-1,201,198,199,-1,199,200,201,-1,167,203,202,-1,202,161,167,-1,166,167,161,-1,161,162,166,-1,205,204,168,-1,168,195,205,-1,174,166,162,-1,162,172,174,-1,206,209,208,-1,208,207,206,-1,164,161,202,-1,202,194,164,-1,170,210,211,-1,211,169,170,-1,213,212,210,-1,210,170,213,-1,214,215,165,-1,165,171,214,-1,211,214,171,-1,171,169,211,-1,217,216,219,-1,219,218,217,-1,220,223,222,-1,222,221,220,-1,224,227,226,-1,226,225,224,-1,228,231,230,-1,230,229,228,-1,224,225,218,-1,218,219,224,-1,216,217,231,-1,231,228,216,-1,227,220,221,-1,221,226,227,-1,170,168,204,-1,171,154,155,-1,155,169,171,-1,180,158,159,-1,159,191,180,-1,183,178,179,-1,179,188,183,-1,157,158,181,-1,181,199,157,-1,177,178,184,-1,184,232,177,-1,200,187,179,-1,179,176,200,-1,190,159,160,-1,160,192,190,-1,186,187,181,-1,181,182,186,-1,190,234,233,-1,233,189,190,-1,153,235,156,-1,156,235,175,-1,175,235,196,-1,196,235,236,-1,236,235,197,-1,197,235,172,-1,172,235,174,-1,174,235,153,-1,165,237,203,-1,203,167,165,-1,192,193,234,-1,234,190,192,-1,207,208,238,-1,238,213,207,-1,213,238,239,-1,239,212,213,-1,233,240,230,-1,230,189,233,-1,196,236,241,-1,241,195,196,-1,206,243,242,-1,242,209,206,-1,244,242,243,-1,243,245,244,-1,176,177,247,-1,247,246,176,-1,243,206,205,-1,205,248,243,-1,247,177,232,-1,232,249,247,-1,241,251,250,-1,250,248,241,-1,249,244,245,-1,245,247,249,-1,198,201,251,-1,251,197,198,-1,251,241,236,-1,236,197,251,-1,250,251,201,-1,201,246,250,-1,248,205,195,-1,195,241,248,-1,248,250,245,-1,245,243,248,-1,250,246,247,-1,247,245,250,-1,176,246,201,-1,201,200,176,-1,213,170,204,-1,204,207,213,-1,207,204,205,-1,205,206,207,-1,180,217,218,-1,218,182,180,-1,183,221,222,-1,222,185,183,-1,225,226,188,-1,188,186,225,-1,189,230,231,-1,231,191,189,-1,182,218,225,-1,225,186,182,-1,191,231,217,-1,217,180,191,-1,226,221,183,-1,183,188,226,-1,229,230,240,-1,240,252,229,-1,254,253,256,-1,256,255,254,-1,258,257,260,-1,260,259,258,-1,262,261,253,-1,253,263,262,-1,259,265,264,-1,264,258,259,-1,256,253,261,-1,260,257,254,-1,254,255,260,-1,266,268,267,-1,272,271,270,-1,270,269,272,-1,274,273,269,-1,269,270,274,-1,275,274,270,-1,270,271,275,-1,276,279,278,-1,278,277,276,-1,277,278,281,-1,281,280,277,-1,280,281,283,-1,283,282,280,-1,285,284,287,-1,287,286,285,-1,276,285,286,-1,286,279,276,-1,288,278,279,-1,279,289,288,-1,290,281,278,-1,278,288,290,-1,291,287,293,-1,293,292,291,-1,291,294,286,-1,286,287,291,-1,294,289,279,-1,279,286,294,-1,295,288,289,-1,289,296,295,-1,297,290,288,-1,288,295,297,-1,294,291,299,-1,299,298,294,-1,289,294,298,-1,298,296,289,-1,284,300,293,-1,293,287,284,-1,301,283,281,-1,281,290,301,-1,297,302,301,-1,301,290,297,-1,299,291,292,-1,292,303,299,-1,215,304,237,-1,237,165,215,-1,266,267,305,-1,91,97,96,-1,91,96,99,-1,99,230,231,-1,231,217,218,-1,99,231,218,-1,91,99,218,-1,218,225,226,-1,226,221,222,-1,218,226,222,-1,91,218,222,-1,222,93,95,-1,91,222,95,-1,91,95,94,-1,91,94,92,-1,99,96,307,-1,307,306,99,-1,96,97,308,-1,308,307,96,-1,97,91,309,-1,309,308,97,-1,91,92,310,-1,310,309,91,-1,92,94,311,-1,311,310,92,-1,94,95,312,-1,312,311,94,-1,95,93,313,-1,313,312,95,-1,93,98,314,-1,314,313,93,-1,222,221,315,-1,315,314,222,-1,221,226,316,-1,316,315,221,-1,226,225,317,-1,317,316,226,-1,225,218,318,-1,318,317,225,-1,218,217,319,-1,319,318,218,-1,217,231,320,-1,320,319,217,-1,231,230,321,-1,321,320,231,-1,230,240,306,-1,306,321,230,-1,306,307,322,-1,307,308,322,-1,308,309,322,-1,309,310,322,-1,310,311,322,-1,311,312,322,-1,312,313,322,-1,313,314,322,-1,314,315,322,-1,315,316,322,-1,316,317,322,-1,317,318,322,-1,318,319,322,-1,319,320,322,-1,320,321,322,-1,321,306,322,-1], Java.type("int[]")))
                        .setCoord(new Coordinate().setPoint(Java.to([doubleToFloat(5.653),doubleToFloat(10.76),doubleToFloat(-2.032),doubleToFloat(4.491),doubleToFloat(10.66),doubleToFloat(2.208),doubleToFloat(0.6339),doubleToFloat(17.89),doubleToFloat(2.418),doubleToFloat(1.861),doubleToFloat(10.99),doubleToFloat(-3.976),doubleToFloat(4.209),doubleToFloat(18.42),doubleToFloat(1.834),doubleToFloat(3.714),doubleToFloat(10.91),doubleToFloat(-3.568),doubleToFloat(4.446),doubleToFloat(19.43),doubleToFloat(-2.415),doubleToFloat(4.34),doubleToFloat(19.6),doubleToFloat(-0.3738),doubleToFloat(0.8673),doubleToFloat(10.77),doubleToFloat(3.572),doubleToFloat(5.675),doubleToFloat(4.808),doubleToFloat(-2.228),doubleToFloat(6.13),doubleToFloat(4.835),doubleToFloat(0.5932),doubleToFloat(3.162),doubleToFloat(5.049),doubleToFloat(3.686),doubleToFloat(5.076),doubleToFloat(4.964),doubleToFloat(2.775),doubleToFloat(1.35),doubleToFloat(5.142),doubleToFloat(4.077),doubleToFloat(1.552),doubleToFloat(4.551),doubleToFloat(-4.356),doubleToFloat(3.698),doubleToFloat(4.669),doubleToFloat(-3.801),doubleToFloat(2.548),doubleToFloat(10.62),doubleToFloat(3.241),doubleToFloat(5.918),doubleToFloat(12.87),doubleToFloat(-2.169),doubleToFloat(1.992),doubleToFloat(12.62),doubleToFloat(-3.965),doubleToFloat(3.889),doubleToFloat(12.68),doubleToFloat(-3.569),doubleToFloat(5.76),doubleToFloat(12.83),doubleToFloat(0.4019),doubleToFloat(5.779),doubleToFloat(10.76),doubleToFloat(0.7375),doubleToFloat(6.441),doubleToFloat(14.67),doubleToFloat(0.1005),doubleToFloat(2.287),doubleToFloat(17.92),doubleToFloat(-3.528),doubleToFloat(0.4984),doubleToFloat(15.89),doubleToFloat(3.124),doubleToFloat(4.385),doubleToFloat(17.53),doubleToFloat(-3.184),doubleToFloat(4.646),doubleToFloat(16.39),doubleToFloat(2.492),doubleToFloat(7.103),doubleToFloat(16.97),doubleToFloat(-2.548),doubleToFloat(8.124),doubleToFloat(18.67),doubleToFloat(-2.069),doubleToFloat(8.525),doubleToFloat(18.87),doubleToFloat(-0.3882),doubleToFloat(8.059),doubleToFloat(18.55),doubleToFloat(1.388),doubleToFloat(6.734),doubleToFloat(16.65),doubleToFloat(1.984),doubleToFloat(6.553),doubleToFloat(15.02),doubleToFloat(-2.428),doubleToFloat(2.138),doubleToFloat(15.7),doubleToFloat(-3.957),doubleToFloat(4.244),doubleToFloat(15.45),doubleToFloat(-3.486),doubleToFloat(2.81),doubleToFloat(19.85),doubleToFloat(-0.3558),doubleToFloat(2.373),doubleToFloat(19.43),doubleToFloat(0.6618),doubleToFloat(2.128),doubleToFloat(19.72),doubleToFloat(-2.573),doubleToFloat(2.44),doubleToFloat(20.03),doubleToFloat(-1.69),doubleToFloat(5.741),doubleToFloat(-0.6607),doubleToFloat(3.145),doubleToFloat(6.162),doubleToFloat(-0.8553),doubleToFloat(-2.552),doubleToFloat(6.956),doubleToFloat(-0.7272),doubleToFloat(0.4152),doubleToFloat(1.697),doubleToFloat(-0.5528),doubleToFloat(4.404),doubleToFloat(1.722),doubleToFloat(-1.261),doubleToFloat(-4.654),doubleToFloat(4.412),doubleToFloat(-1.136),doubleToFloat(-3.878),doubleToFloat(3.713),doubleToFloat(-0.568),doubleToFloat(3.977),doubleToFloat(0.6293),doubleToFloat(19.04),doubleToFloat(1.436),doubleToFloat(4.477),doubleToFloat(12.22),doubleToFloat(2.138),doubleToFloat(6.379),doubleToFloat(15.01),doubleToFloat(1.598),doubleToFloat(5.61),doubleToFloat(7.967),doubleToFloat(-1.958),doubleToFloat(3.698),doubleToFloat(7.844),doubleToFloat(-3.672),doubleToFloat(1.069),doubleToFloat(8.059),doubleToFloat(3.819),doubleToFloat(2.817),doubleToFloat(7.944),doubleToFloat(3.406),doubleToFloat(5.868),doubleToFloat(7.953),doubleToFloat(0.7283),doubleToFloat(4.818),doubleToFloat(7.923),doubleToFloat(2.475),doubleToFloat(1.715),doubleToFloat(7.893),doubleToFloat(-4.053),doubleToFloat(6.324),doubleToFloat(17.2),doubleToFloat(-0.1978),doubleToFloat(4.792),doubleToFloat(14.12),doubleToFloat(2.395),doubleToFloat(0.5769),doubleToFloat(14.05),doubleToFloat(3.467),doubleToFloat(0.7572),doubleToFloat(12.18),doubleToFloat(3.449),doubleToFloat(0.5876),doubleToFloat(13.45),doubleToFloat(3.455),doubleToFloat(4.774),doubleToFloat(13.46),doubleToFloat(2.283),doubleToFloat(2.486),doubleToFloat(16.04),doubleToFloat(3.085),doubleToFloat(2.663),doubleToFloat(13.83),doubleToFloat(3.223),doubleToFloat(2.514),doubleToFloat(12.11),doubleToFloat(3.253),doubleToFloat(2.659),doubleToFloat(13.25),doubleToFloat(3.176),doubleToFloat(2.437),doubleToFloat(18.14),doubleToFloat(2.21),doubleToFloat(5.848),doubleToFloat(2.503),doubleToFloat(-2.421),doubleToFloat(6.474),doubleToFloat(2.515),doubleToFloat(0.4493),doubleToFloat(1.504),doubleToFloat(2.746),doubleToFloat(4.241),doubleToFloat(5.35),doubleToFloat(2.64),doubleToFloat(2.941),doubleToFloat(3.441),doubleToFloat(2.753),doubleToFloat(3.83),doubleToFloat(1.556),doubleToFloat(2.087),doubleToFloat(-4.665),doubleToFloat(3.933),doubleToFloat(2.34),doubleToFloat(-3.983),doubleToFloat(0),doubleToFloat(14.17),doubleToFloat(3.432),doubleToFloat(0),doubleToFloat(10.92),doubleToFloat(-3.965),doubleToFloat(0),doubleToFloat(15.84),doubleToFloat(-3.866),doubleToFloat(0),doubleToFloat(-0.6334),doubleToFloat(4.547),doubleToFloat(0),doubleToFloat(10.84),doubleToFloat(3.675),doubleToFloat(4.434),doubleToFloat(18.54),doubleToFloat(1.834),doubleToFloat(4.34),doubleToFloat(19.62),doubleToFloat(-0.3738),doubleToFloat(2.219),doubleToFloat(20.24),doubleToFloat(-0.3649),doubleToFloat(2.272),doubleToFloat(19.54),doubleToFloat(0.6133),doubleToFloat(3.612),doubleToFloat(19.85),doubleToFloat(-2.135),doubleToFloat(2.128),doubleToFloat(19.76),doubleToFloat(-2.694),doubleToFloat(2.437),doubleToFloat(18.16),doubleToFloat(2.21),doubleToFloat(2.365),doubleToFloat(17.38),doubleToFloat(2.77),doubleToFloat(4.646),doubleToFloat(16.8),doubleToFloat(2.683),doubleToFloat(0.7229),doubleToFloat(16.72),doubleToFloat(3.156),doubleToFloat(1.81),doubleToFloat(20.42),doubleToFloat(-1.343),doubleToFloat(1.234),doubleToFloat(20.51),doubleToFloat(-1.9),doubleToFloat(1.714),doubleToFloat(18.23),doubleToFloat(2.252),doubleToFloat(2.901),doubleToFloat(16.67),doubleToFloat(2.925),doubleToFloat(1.182),doubleToFloat(16.43),doubleToFloat(3.061),doubleToFloat(1.451),doubleToFloat(16.08),doubleToFloat(3.136),doubleToFloat(0),doubleToFloat(12.56),doubleToFloat(-3.823),doubleToFloat(0),doubleToFloat(19.77),doubleToFloat(-2.637),doubleToFloat(0),doubleToFloat(4.518),doubleToFloat(-4.39),doubleToFloat(0),doubleToFloat(2.061),doubleToFloat(-4.658),doubleToFloat(0),doubleToFloat(12.46),doubleToFloat(3.505),doubleToFloat(0),doubleToFloat(-1.276),doubleToFloat(-4.613),doubleToFloat(0),doubleToFloat(19.67),doubleToFloat(-2.898),doubleToFloat(2.029),doubleToFloat(23.12),doubleToFloat(0.2404),doubleToFloat(1.481),doubleToFloat(22.84),doubleToFloat(1.295),doubleToFloat(0.7848),doubleToFloat(22.6),doubleToFloat(2.112),doubleToFloat(0.928),doubleToFloat(23.45),doubleToFloat(-1.684),doubleToFloat(1.568),doubleToFloat(23.32),doubleToFloat(-0.8373),doubleToFloat(1.204),doubleToFloat(22.03),doubleToFloat(0.9589),doubleToFloat(0.5753),doubleToFloat(21.9),doubleToFloat(1.543),doubleToFloat(0.9464),doubleToFloat(22.43),doubleToFloat(-1.559),doubleToFloat(1.456),doubleToFloat(22.35),doubleToFloat(-0.8756),doubleToFloat(1.661),doubleToFloat(22.21),doubleToFloat(0.0384),doubleToFloat(1.129),doubleToFloat(20.89),doubleToFloat(0.5567),doubleToFloat(0.5268),doubleToFloat(20.79),doubleToFloat(1.133),doubleToFloat(0.9102),doubleToFloat(21.28),doubleToFloat(-1.569),doubleToFloat(1.35),doubleToFloat(21.2),doubleToFloat(-1.042),doubleToFloat(1.553),doubleToFloat(21.06),doubleToFloat(-0.231),doubleToFloat(0),doubleToFloat(23.44),doubleToFloat(-1.96),doubleToFloat(1.685),doubleToFloat(20.48),doubleToFloat(-0.3138),doubleToFloat(1.243),doubleToFloat(20.31),doubleToFloat(0.4307),doubleToFloat(0.5932),doubleToFloat(20.18),doubleToFloat(0.9903),doubleToFloat(0.8927),doubleToFloat(20.71),doubleToFloat(-1.683),doubleToFloat(1.399),doubleToFloat(20.62),doubleToFloat(-1.113),doubleToFloat(0),doubleToFloat(20.77),doubleToFloat(1.266),doubleToFloat(0),doubleToFloat(20.16),doubleToFloat(1.165),doubleToFloat(0),doubleToFloat(20.71),doubleToFloat(-1.877),doubleToFloat(-8.124),doubleToFloat(18.67),doubleToFloat(-2.069),doubleToFloat(-4.446),doubleToFloat(19.43),doubleToFloat(-2.415),doubleToFloat(-4.34),doubleToFloat(19.6),doubleToFloat(-0.3738),doubleToFloat(-8.525),doubleToFloat(18.87),doubleToFloat(-0.3882),doubleToFloat(-5.653),doubleToFloat(10.76),doubleToFloat(-2.032),doubleToFloat(-5.61),doubleToFloat(7.967),doubleToFloat(-1.958),doubleToFloat(-3.698),doubleToFloat(7.844),doubleToFloat(-3.672),doubleToFloat(-3.714),doubleToFloat(10.91),doubleToFloat(-3.568),doubleToFloat(-2.138),doubleToFloat(15.7),doubleToFloat(-3.957),doubleToFloat(-4.244),doubleToFloat(15.45),doubleToFloat(-3.486),doubleToFloat(-3.889),doubleToFloat(12.68),doubleToFloat(-3.569),doubleToFloat(-1.992),doubleToFloat(12.62),doubleToFloat(-3.965),doubleToFloat(-2.128),doubleToFloat(19.72),doubleToFloat(-2.573),doubleToFloat(-4.385),doubleToFloat(17.53),doubleToFloat(-3.184),doubleToFloat(-2.287),doubleToFloat(17.92),doubleToFloat(-3.528),doubleToFloat(-4.209),doubleToFloat(18.42),doubleToFloat(1.834),doubleToFloat(-2.81),doubleToFloat(19.85),doubleToFloat(-0.3558),doubleToFloat(-2.373),doubleToFloat(19.43),doubleToFloat(0.6618),doubleToFloat(-2.44),doubleToFloat(20.03),doubleToFloat(-1.69),doubleToFloat(-6.553),doubleToFloat(15.02),doubleToFloat(-2.428),doubleToFloat(-5.918),doubleToFloat(12.87),doubleToFloat(-2.169),doubleToFloat(-7.103),doubleToFloat(16.97),doubleToFloat(-2.548),doubleToFloat(-8.059),doubleToFloat(18.55),doubleToFloat(1.388),doubleToFloat(-2.548),doubleToFloat(10.62),doubleToFloat(3.241),doubleToFloat(-0.8673),doubleToFloat(10.77),doubleToFloat(3.572),doubleToFloat(-1.069),doubleToFloat(8.059),doubleToFloat(3.819),doubleToFloat(-2.817),doubleToFloat(7.944),doubleToFloat(3.406),doubleToFloat(-5.675),doubleToFloat(4.808),doubleToFloat(-2.228),doubleToFloat(-5.868),doubleToFloat(7.953),doubleToFloat(0.7283),doubleToFloat(-6.13),doubleToFloat(4.835),doubleToFloat(0.5932),doubleToFloat(-1.35),doubleToFloat(5.142),doubleToFloat(4.077),doubleToFloat(0),doubleToFloat(8.057),doubleToFloat(4.002),doubleToFloat(0),doubleToFloat(5.254),doubleToFloat(4.196),doubleToFloat(-5.076),doubleToFloat(4.964),doubleToFloat(2.775),doubleToFloat(-4.818),doubleToFloat(7.923),doubleToFloat(2.475),doubleToFloat(-3.162),doubleToFloat(5.049),doubleToFloat(3.686),doubleToFloat(-1.552),doubleToFloat(4.551),doubleToFloat(-4.356),doubleToFloat(-1.715),doubleToFloat(7.893),doubleToFloat(-4.053),doubleToFloat(-3.698),doubleToFloat(4.669),doubleToFloat(-3.801),doubleToFloat(-1.861),doubleToFloat(10.99),doubleToFloat(-3.976),doubleToFloat(-4.646),doubleToFloat(16.39),doubleToFloat(2.492),doubleToFloat(-6.734),doubleToFloat(16.65),doubleToFloat(1.984),doubleToFloat(-6.441),doubleToFloat(14.67),doubleToFloat(0.1005),doubleToFloat(-5.76),doubleToFloat(12.83),doubleToFloat(0.4019),doubleToFloat(-5.779),doubleToFloat(10.76),doubleToFloat(0.7375),doubleToFloat(-4.491),doubleToFloat(10.66),doubleToFloat(2.208),doubleToFloat(-4.477),doubleToFloat(12.22),doubleToFloat(2.138),doubleToFloat(0),doubleToFloat(17.91),doubleToFloat(-3.504),doubleToFloat(-2.437),doubleToFloat(18.14),doubleToFloat(2.21),doubleToFloat(-2.486),doubleToFloat(16.04),doubleToFloat(3.085),doubleToFloat(-0.4984),doubleToFloat(15.89),doubleToFloat(3.124),doubleToFloat(-0.6339),doubleToFloat(17.89),doubleToFloat(2.418),doubleToFloat(0),doubleToFloat(17.83),doubleToFloat(2.45),doubleToFloat(0),doubleToFloat(15.77),doubleToFloat(3.074),doubleToFloat(-1.243),doubleToFloat(20.31),doubleToFloat(0.4307),doubleToFloat(-1.685),doubleToFloat(20.48),doubleToFloat(-0.3138),doubleToFloat(-0.5932),doubleToFloat(20.18),doubleToFloat(0.9903),doubleToFloat(-0.6293),doubleToFloat(19.04),doubleToFloat(1.436),doubleToFloat(-1.399),doubleToFloat(20.62),doubleToFloat(-1.113),doubleToFloat(-0.8927),doubleToFloat(20.71),doubleToFloat(-1.683),doubleToFloat(-6.162),doubleToFloat(-0.8553),doubleToFloat(-2.552),doubleToFloat(-5.848),doubleToFloat(2.503),doubleToFloat(-2.421),doubleToFloat(-6.474),doubleToFloat(2.515),doubleToFloat(0.4493),doubleToFloat(-6.956),doubleToFloat(-0.7272),doubleToFloat(0.4152),doubleToFloat(-1.697),doubleToFloat(-0.5528),doubleToFloat(4.404),doubleToFloat(-1.504),doubleToFloat(2.746),doubleToFloat(4.241),doubleToFloat(0),doubleToFloat(2.754),doubleToFloat(4.383),doubleToFloat(-5.741),doubleToFloat(-0.6607),doubleToFloat(3.145),doubleToFloat(-5.35),doubleToFloat(2.64),doubleToFloat(2.941),doubleToFloat(-3.441),doubleToFloat(2.753),doubleToFloat(3.83),doubleToFloat(-3.713),doubleToFloat(-0.568),doubleToFloat(3.977),doubleToFloat(-4.412),doubleToFloat(-1.136),doubleToFloat(-3.878),doubleToFloat(-1.722),doubleToFloat(-1.261),doubleToFloat(-4.654),doubleToFloat(-1.556),doubleToFloat(2.087),doubleToFloat(-4.665),doubleToFloat(-3.933),doubleToFloat(2.34),doubleToFloat(-3.983),doubleToFloat(0),doubleToFloat(7.846),doubleToFloat(-4.05),doubleToFloat(-6.324),doubleToFloat(17.2),doubleToFloat(-0.1978),doubleToFloat(-6.379),doubleToFloat(15.01),doubleToFloat(1.598),doubleToFloat(0),doubleToFloat(18.98),doubleToFloat(1.513),doubleToFloat(-4.792),doubleToFloat(14.12),doubleToFloat(2.395),doubleToFloat(-0.5769),doubleToFloat(14.05),doubleToFloat(3.467),doubleToFloat(0),doubleToFloat(13.64),doubleToFloat(3.442),doubleToFloat(-0.5876),doubleToFloat(13.45),doubleToFloat(3.455),doubleToFloat(-2.514),doubleToFloat(12.11),doubleToFloat(3.253),doubleToFloat(-0.7572),doubleToFloat(12.18),doubleToFloat(3.449),doubleToFloat(-2.663),doubleToFloat(13.83),doubleToFloat(3.223),doubleToFloat(-2.659),doubleToFloat(13.25),doubleToFloat(3.176),doubleToFloat(-4.774),doubleToFloat(13.46),doubleToFloat(2.283),doubleToFloat(-4.434),doubleToFloat(18.54),doubleToFloat(1.834),doubleToFloat(-4.34),doubleToFloat(19.62),doubleToFloat(-0.3738),doubleToFloat(-2.219),doubleToFloat(20.24),doubleToFloat(-0.3649),doubleToFloat(-2.272),doubleToFloat(19.54),doubleToFloat(0.6133),doubleToFloat(-3.612),doubleToFloat(19.85),doubleToFloat(-2.135),doubleToFloat(-2.128),doubleToFloat(19.76),doubleToFloat(-2.694),doubleToFloat(-1.234),doubleToFloat(20.51),doubleToFloat(-1.9),doubleToFloat(-1.81),doubleToFloat(20.42),doubleToFloat(-1.343),doubleToFloat(-2.437),doubleToFloat(18.16),doubleToFloat(2.21),doubleToFloat(-2.365),doubleToFloat(17.38),doubleToFloat(2.77),doubleToFloat(-4.646),doubleToFloat(16.8),doubleToFloat(2.683),doubleToFloat(0),doubleToFloat(20.51),doubleToFloat(-2.142),doubleToFloat(-1.714),doubleToFloat(18.23),doubleToFloat(2.252),doubleToFloat(-1.182),doubleToFloat(16.43),doubleToFloat(3.061),doubleToFloat(-1.451),doubleToFloat(16.08),doubleToFloat(3.136),doubleToFloat(-2.901),doubleToFloat(16.67),doubleToFloat(2.925),doubleToFloat(-0.7229),doubleToFloat(16.72),doubleToFloat(3.156),doubleToFloat(0),doubleToFloat(15.68),doubleToFloat(3.187),doubleToFloat(-2.029),doubleToFloat(23.12),doubleToFloat(0.2404),doubleToFloat(-1.481),doubleToFloat(22.84),doubleToFloat(1.295),doubleToFloat(-1.204),doubleToFloat(22.03),doubleToFloat(0.9589),doubleToFloat(-1.661),doubleToFloat(22.21),doubleToFloat(0.0384),doubleToFloat(-0.7848),doubleToFloat(22.6),doubleToFloat(2.112),doubleToFloat(-0.5753),doubleToFloat(21.9),doubleToFloat(1.543),doubleToFloat(0),doubleToFloat(22.44),doubleToFloat(2.495),doubleToFloat(0),doubleToFloat(21.79),doubleToFloat(1.701),doubleToFloat(-0.928),doubleToFloat(23.45),doubleToFloat(-1.684),doubleToFloat(-1.568),doubleToFloat(23.32),doubleToFloat(-0.8373),doubleToFloat(-1.456),doubleToFloat(22.35),doubleToFloat(-0.8756),doubleToFloat(-0.9464),doubleToFloat(22.43),doubleToFloat(-1.559),doubleToFloat(-1.129),doubleToFloat(20.89),doubleToFloat(0.5567),doubleToFloat(-1.553),doubleToFloat(21.06),doubleToFloat(-0.231),doubleToFloat(-0.5268),doubleToFloat(20.79),doubleToFloat(1.133),doubleToFloat(-0.9102),doubleToFloat(21.28),doubleToFloat(-1.569),doubleToFloat(0),doubleToFloat(21.29),doubleToFloat(-1.754),doubleToFloat(0),doubleToFloat(22.44),doubleToFloat(-1.745),doubleToFloat(-1.35),doubleToFloat(21.2),doubleToFloat(-1.042),doubleToFloat(0),doubleToFloat(15.68),doubleToFloat(3.187),doubleToFloat(5.848),doubleToFloat(2.503),doubleToFloat(-2.421),doubleToFloat(6.474),doubleToFloat(2.515),doubleToFloat(0.4493),doubleToFloat(1.504),doubleToFloat(2.746),doubleToFloat(4.241),doubleToFloat(5.35),doubleToFloat(2.64),doubleToFloat(2.941),doubleToFloat(3.441),doubleToFloat(2.753),doubleToFloat(3.83),doubleToFloat(1.556),doubleToFloat(2.087),doubleToFloat(-4.665),doubleToFloat(3.933),doubleToFloat(2.34),doubleToFloat(-3.983),doubleToFloat(0),doubleToFloat(2.061),doubleToFloat(-4.658),doubleToFloat(-5.848),doubleToFloat(2.503),doubleToFloat(-2.421),doubleToFloat(-6.474),doubleToFloat(2.515),doubleToFloat(0.4493),doubleToFloat(-1.504),doubleToFloat(2.746),doubleToFloat(4.241),doubleToFloat(0),doubleToFloat(2.754),doubleToFloat(4.383),doubleToFloat(-5.35),doubleToFloat(2.64),doubleToFloat(2.941),doubleToFloat(-3.441),doubleToFloat(2.753),doubleToFloat(3.83),doubleToFloat(-1.556),doubleToFloat(2.087),doubleToFloat(-4.665),doubleToFloat(-3.933),doubleToFloat(2.34),doubleToFloat(-3.983),doubleToFloat(0),doubleToFloat(-0.6295),doubleToFloat(-3.092),doubleToFloat(1.368),doubleToFloat(-0.6301),doubleToFloat(-3.099),doubleToFloat(3.3),doubleToFloat(-0.5819),doubleToFloat(-2.548),doubleToFloat(4.648),doubleToFloat(-0.4862),doubleToFloat(-1.454),doubleToFloat(5.082),doubleToFloat(-0.3126),doubleToFloat(0.5295),doubleToFloat(4.341),doubleToFloat(-0.1694),doubleToFloat(2.167),doubleToFloat(3.016),doubleToFloat(-0.1157),doubleToFloat(2.781),doubleToFloat(1.303),doubleToFloat(-0.084),doubleToFloat(3.142),doubleToFloat(0),doubleToFloat(-0.0733),doubleToFloat(3.266),doubleToFloat(-1.303),doubleToFloat(-0.084),doubleToFloat(3.142),doubleToFloat(-3.016),doubleToFloat(-0.1157),doubleToFloat(2.781),doubleToFloat(-4.341),doubleToFloat(-0.1694),doubleToFloat(2.167),doubleToFloat(-5.082),doubleToFloat(-0.3126),doubleToFloat(0.5295),doubleToFloat(-4.648),doubleToFloat(-0.4862),doubleToFloat(-1.454),doubleToFloat(-3.3),doubleToFloat(-0.5819),doubleToFloat(-2.548),doubleToFloat(-1.368),doubleToFloat(-0.6301),doubleToFloat(-3.099),doubleToFloat(0),doubleToFloat(-1.967),doubleToFloat(0.2489)], Java.type("float[]"))))
                        .setTexCoord(new TextureCoordinate().setPoint(Java.to([doubleToFloat(0.56),doubleToFloat(0.5116),doubleToFloat(0.573),doubleToFloat(0.5408),doubleToFloat(0.5399),doubleToFloat(0.5517),doubleToFloat(0.5436),doubleToFloat(0.5152),doubleToFloat(0.5622),doubleToFloat(0.4121),doubleToFloat(0.5626),doubleToFloat(0.3879),doubleToFloat(0.5993),doubleToFloat(0.388),doubleToFloat(0.5994),doubleToFloat(0.4167),doubleToFloat(0.6248),doubleToFloat(0.4956),doubleToFloat(0.598),doubleToFloat(0.4839),doubleToFloat(0.6002),doubleToFloat(0.4429),doubleToFloat(0.6282),doubleToFloat(0.447),doubleToFloat(0.5897),doubleToFloat(0.5625),doubleToFloat(0.5921),doubleToFloat(0.5147),doubleToFloat(0.6119),doubleToFloat(0.5309),doubleToFloat(0.4877),doubleToFloat(0.4977),doubleToFloat(0.4406),doubleToFloat(0.5142),doubleToFloat(0.4986),doubleToFloat(0.5308),doubleToFloat(0.5387),doubleToFloat(0.569),doubleToFloat(0.5135),doubleToFloat(0.5642),doubleToFloat(0.5682),doubleToFloat(0.5692),doubleToFloat(0.5643),doubleToFloat(0.4675),doubleToFloat(0.5643),doubleToFloat(0.4413),doubleToFloat(0.5666),doubleToFloat(0.4964),doubleToFloat(0.5145),doubleToFloat(0.5083),doubleToFloat(0.4607),doubleToFloat(0.4172),doubleToFloat(0.436),doubleToFloat(0.4251),doubleToFloat(0.4376),doubleToFloat(0.4008),doubleToFloat(0.4638),doubleToFloat(0.3935),doubleToFloat(0.4349),doubleToFloat(0.5153),doubleToFloat(0.5664),doubleToFloat(0.3605),doubleToFloat(0.5244),doubleToFloat(0.3867),doubleToFloat(0.5254),doubleToFloat(0.3607),doubleToFloat(0.4345),doubleToFloat(0.3779),doubleToFloat(0.4202),doubleToFloat(0.4043),doubleToFloat(0.416),doubleToFloat(0.3839),doubleToFloat(0.4909),doubleToFloat(0.3645),doubleToFloat(0.4925),doubleToFloat(0.388),doubleToFloat(0.4614),doubleToFloat(0.3707),doubleToFloat(0.6351),doubleToFloat(0.362),doubleToFloat(0.63),doubleToFloat(0.3916),doubleToFloat(0.6019),doubleToFloat(0.3607),doubleToFloat(0.4234),doubleToFloat(0.4281),doubleToFloat(0.6273),doubleToFloat(0.4211),doubleToFloat(0.6565),doubleToFloat(0.4217),doubleToFloat(0.6573),doubleToFloat(0.449),doubleToFloat(0.502),doubleToFloat(0.4938),doubleToFloat(0.4952),doubleToFloat(0.4104),doubleToFloat(0.5322),doubleToFloat(0.4596),doubleToFloat(0.5274),doubleToFloat(0.4378),doubleToFloat(0.5241),doubleToFloat(0.41),doubleToFloat(0.5109),doubleToFloat(0.4681),doubleToFloat(0.4969),doubleToFloat(0.4322),doubleToFloat(0.6534),doubleToFloat(0.5052),doubleToFloat(0.6395),doubleToFloat(0.5454),doubleToFloat(0.4631),doubleToFloat(0.5469),doubleToFloat(0.4523),doubleToFloat(0.549),doubleToFloat(0.5137),doubleToFloat(0.5853),doubleToFloat(0.5385),doubleToFloat(0.5849),doubleToFloat(0.4943),doubleToFloat(0.5849),doubleToFloat(0.484),doubleToFloat(0.568),doubleToFloat(0.5638),doubleToFloat(0.5904),doubleToFloat(0.5819),doubleToFloat(0.5996),doubleToFloat(0.5719),doubleToFloat(0.286),doubleToFloat(0.5285),doubleToFloat(0.2874),doubleToFloat(0.4191),doubleToFloat(0.3039),doubleToFloat(0.3943),doubleToFloat(0.3092),doubleToFloat(0.4837),doubleToFloat(0.2899),doubleToFloat(0.4494),doubleToFloat(0.2968),doubleToFloat(0.6132),doubleToFloat(0.2849),doubleToFloat(0.6468),doubleToFloat(0.2871),doubleToFloat(0.6147),doubleToFloat(0.5799),doubleToFloat(0.6581),doubleToFloat(0.3639),doubleToFloat(0.6561),doubleToFloat(0.3928),doubleToFloat(0.5393),doubleToFloat(0.4885),doubleToFloat(0.4718),doubleToFloat(0.5711),doubleToFloat(0.4841),doubleToFloat(0.5879),doubleToFloat(0.6694),doubleToFloat(0.2902),doubleToFloat(0.4941),doubleToFloat(0.4596),doubleToFloat(0.4281),doubleToFloat(0.4861),doubleToFloat(0.4263),doubleToFloat(0.4532),doubleToFloat(0.435),doubleToFloat(0.4824),doubleToFloat(0.4368),doubleToFloat(0.4479),doubleToFloat(0.4269),doubleToFloat(0.4739),doubleToFloat(0.4351),doubleToFloat(0.4698),doubleToFloat(0.5),doubleToFloat(0.4482),doubleToFloat(0.4646),doubleToFloat(0.5047),doubleToFloat(0.4628),doubleToFloat(0.4687),doubleToFloat(0.4629),doubleToFloat(0.4403),doubleToFloat(0.465),doubleToFloat(0.4578),doubleToFloat(0.4835),doubleToFloat(0.5385),doubleToFloat(0.5707),doubleToFloat(0.3239),doubleToFloat(0.528),doubleToFloat(0.324),doubleToFloat(0.4253),doubleToFloat(0.3406),doubleToFloat(0.4851),doubleToFloat(0.3279),doubleToFloat(0.4539),doubleToFloat(0.3342),doubleToFloat(0.6412),doubleToFloat(0.3242),doubleToFloat(0.608),doubleToFloat(0.3242),doubleToFloat(0.4044),doubleToFloat(0.3461),doubleToFloat(0.6638),doubleToFloat(0.327),doubleToFloat(0.2156),doubleToFloat(0.1571),doubleToFloat(0.2141),doubleToFloat(0.2527),doubleToFloat(0.1481),doubleToFloat(0.2614),doubleToFloat(0.1498),doubleToFloat(0.2193),doubleToFloat(0.1966),doubleToFloat(0.328),doubleToFloat(0.1443),doubleToFloat(0.3601),doubleToFloat(0.0873),doubleToFloat(0.3274),doubleToFloat(0.1175),doubleToFloat(0.3103),doubleToFloat(0.1465),doubleToFloat(0.1381),doubleToFloat(0.1418),doubleToFloat(0.0997),doubleToFloat(0.2242),doubleToFloat(0.0824),doubleToFloat(0.0657),doubleToFloat(0.3853),doubleToFloat(0.0546),doubleToFloat(0.3394),doubleToFloat(0.1411),doubleToFloat(0.0969),doubleToFloat(0.2007),doubleToFloat(0.1535),doubleToFloat(0.218),doubleToFloat(0.1509),doubleToFloat(0.2215),doubleToFloat(0.0884),doubleToFloat(0.1819),doubleToFloat(0.1635),doubleToFloat(0.2136),doubleToFloat(0.2112),doubleToFloat(0.1459),doubleToFloat(0.6846),doubleToFloat(0.1322),doubleToFloat(0.6817),doubleToFloat(0.1345),doubleToFloat(0.6643),doubleToFloat(0.1468),doubleToFloat(0.6665),doubleToFloat(0.1092),doubleToFloat(0.6744),doubleToFloat(0.1199),doubleToFloat(0.6584),doubleToFloat(0.0954),doubleToFloat(0.6632),doubleToFloat(0.1082),doubleToFloat(0.6532),doubleToFloat(0.1804),doubleToFloat(0.6847),doubleToFloat(0.1594),doubleToFloat(0.6867),doubleToFloat(0.1596),doubleToFloat(0.6667),doubleToFloat(0.1738),doubleToFloat(0.667),doubleToFloat(0.1395),doubleToFloat(0.6458),doubleToFloat(0.1506),doubleToFloat(0.6487),doubleToFloat(0.1279),doubleToFloat(0.6419),doubleToFloat(0.1746),doubleToFloat(0.6514),doubleToFloat(0.1808),doubleToFloat(0.6512),doubleToFloat(0.1813),doubleToFloat(0.6659),doubleToFloat(0.1625),doubleToFloat(0.6517),doubleToFloat(0.1421),doubleToFloat(0.6314),doubleToFloat(0.1526),doubleToFloat(0.6337),doubleToFloat(0.1306),doubleToFloat(0.6274),doubleToFloat(0.1633),doubleToFloat(0.6341),doubleToFloat(0.175),doubleToFloat(0.6318),doubleToFloat(0.1912),doubleToFloat(0.681),doubleToFloat(0.1185),doubleToFloat(0.6385),doubleToFloat(0.1208),doubleToFloat(0.6244),doubleToFloat(0.1791),doubleToFloat(0.2083),doubleToFloat(0.1877),doubleToFloat(0.1273),doubleToFloat(0.1868),doubleToFloat(0.0936),doubleToFloat(0.1595),doubleToFloat(0.1234),doubleToFloat(0.1914),doubleToFloat(0.0904),doubleToFloat(0.1837),doubleToFloat(0.6369),doubleToFloat(0.5924),doubleToFloat(0.6058),doubleToFloat(0.56),doubleToFloat(0.5116),doubleToFloat(0.573),doubleToFloat(0.5408),doubleToFloat(0.5399),doubleToFloat(0.5517),doubleToFloat(0.5436),doubleToFloat(0.5152),doubleToFloat(0.5622),doubleToFloat(0.4121),doubleToFloat(0.5626),doubleToFloat(0.3879),doubleToFloat(0.5993),doubleToFloat(0.388),doubleToFloat(0.5994),doubleToFloat(0.4167),doubleToFloat(0.6248),doubleToFloat(0.4956),doubleToFloat(0.598),doubleToFloat(0.4839),doubleToFloat(0.6002),doubleToFloat(0.4429),doubleToFloat(0.6282),doubleToFloat(0.447),doubleToFloat(0.5897),doubleToFloat(0.5625),doubleToFloat(0.5921),doubleToFloat(0.5147),doubleToFloat(0.6119),doubleToFloat(0.5309),doubleToFloat(0.4986),doubleToFloat(0.5308),doubleToFloat(0.5387),doubleToFloat(0.569),doubleToFloat(0.5135),doubleToFloat(0.5642),doubleToFloat(0.5682),doubleToFloat(0.5692),doubleToFloat(0.5643),doubleToFloat(0.4675),doubleToFloat(0.5643),doubleToFloat(0.4413),doubleToFloat(0.5666),doubleToFloat(0.4964),doubleToFloat(0.5145),doubleToFloat(0.5083),doubleToFloat(0.4607),doubleToFloat(0.4172),doubleToFloat(0.436),doubleToFloat(0.4251),doubleToFloat(0.4376),doubleToFloat(0.4008),doubleToFloat(0.4638),doubleToFloat(0.3935),doubleToFloat(0.5664),doubleToFloat(0.3605),doubleToFloat(0.5244),doubleToFloat(0.3867),doubleToFloat(0.5254),doubleToFloat(0.3607),doubleToFloat(0.4345),doubleToFloat(0.3779),doubleToFloat(0.4202),doubleToFloat(0.4043),doubleToFloat(0.416),doubleToFloat(0.3839),doubleToFloat(0.4909),doubleToFloat(0.3645),doubleToFloat(0.4925),doubleToFloat(0.388),doubleToFloat(0.4614),doubleToFloat(0.3707),doubleToFloat(0.6351),doubleToFloat(0.362),doubleToFloat(0.63),doubleToFloat(0.3916),doubleToFloat(0.6019),doubleToFloat(0.3607),doubleToFloat(0.6273),doubleToFloat(0.4211),doubleToFloat(0.6565),doubleToFloat(0.4217),doubleToFloat(0.6573),doubleToFloat(0.449),doubleToFloat(0.4877),doubleToFloat(0.4977),doubleToFloat(0.502),doubleToFloat(0.4938),doubleToFloat(0.5322),doubleToFloat(0.4596),doubleToFloat(0.5274),doubleToFloat(0.4378),doubleToFloat(0.5241),doubleToFloat(0.41),doubleToFloat(0.4952),doubleToFloat(0.4104),doubleToFloat(0.4969),doubleToFloat(0.4322),doubleToFloat(0.6534),doubleToFloat(0.5052),doubleToFloat(0.6395),doubleToFloat(0.5454),doubleToFloat(0.4835),doubleToFloat(0.5385),doubleToFloat(0.4646),doubleToFloat(0.5047),doubleToFloat(0.4406),doubleToFloat(0.5142),doubleToFloat(0.4631),doubleToFloat(0.5469),doubleToFloat(0.4523),doubleToFloat(0.549),doubleToFloat(0.4349),doubleToFloat(0.5153),doubleToFloat(0.5137),doubleToFloat(0.5853),doubleToFloat(0.5385),doubleToFloat(0.5849),doubleToFloat(0.4943),doubleToFloat(0.5849),doubleToFloat(0.484),doubleToFloat(0.568),doubleToFloat(0.5638),doubleToFloat(0.5904),doubleToFloat(0.5819),doubleToFloat(0.5996),doubleToFloat(0.5719),doubleToFloat(0.286),doubleToFloat(0.5707),doubleToFloat(0.3239),doubleToFloat(0.528),doubleToFloat(0.324),doubleToFloat(0.5285),doubleToFloat(0.2874),doubleToFloat(0.4191),doubleToFloat(0.3039),doubleToFloat(0.4253),doubleToFloat(0.3406),doubleToFloat(0.4044),doubleToFloat(0.3461),doubleToFloat(0.3943),doubleToFloat(0.3092),doubleToFloat(0.4837),doubleToFloat(0.2899),doubleToFloat(0.4851),doubleToFloat(0.3279),doubleToFloat(0.4539),doubleToFloat(0.3342),doubleToFloat(0.4494),doubleToFloat(0.2968),doubleToFloat(0.6132),doubleToFloat(0.2849),doubleToFloat(0.6468),doubleToFloat(0.2871),doubleToFloat(0.6412),doubleToFloat(0.3242),doubleToFloat(0.608),doubleToFloat(0.3242),doubleToFloat(0.4234),doubleToFloat(0.4281),doubleToFloat(0.6581),doubleToFloat(0.3639),doubleToFloat(0.6561),doubleToFloat(0.3928),doubleToFloat(0.5393),doubleToFloat(0.4885),doubleToFloat(0.5109),doubleToFloat(0.4681),doubleToFloat(0.6147),doubleToFloat(0.5799),doubleToFloat(0.4718),doubleToFloat(0.5711),doubleToFloat(0.4841),doubleToFloat(0.5879),doubleToFloat(0.6638),doubleToFloat(0.327),doubleToFloat(0.4941),doubleToFloat(0.4596),doubleToFloat(0.4281),doubleToFloat(0.4861),doubleToFloat(0.435),doubleToFloat(0.4824),doubleToFloat(0.4269),doubleToFloat(0.4739),doubleToFloat(0.4351),doubleToFloat(0.4698),doubleToFloat(0.4629),doubleToFloat(0.4403),doubleToFloat(0.4368),doubleToFloat(0.4479),doubleToFloat(0.4628),doubleToFloat(0.4687),doubleToFloat(0.4263),doubleToFloat(0.4532),doubleToFloat(0.465),doubleToFloat(0.4578),doubleToFloat(0.5),doubleToFloat(0.4482),doubleToFloat(0.6694),doubleToFloat(0.2902),doubleToFloat(0.2156),doubleToFloat(0.1571),doubleToFloat(0.2141),doubleToFloat(0.2527),doubleToFloat(0.1481),doubleToFloat(0.2614),doubleToFloat(0.1498),doubleToFloat(0.2193),doubleToFloat(0.1966),doubleToFloat(0.328),doubleToFloat(0.1443),doubleToFloat(0.3601),doubleToFloat(0.0873),doubleToFloat(0.3274),doubleToFloat(0.1175),doubleToFloat(0.3103),doubleToFloat(0.1465),doubleToFloat(0.1381),doubleToFloat(0.1418),doubleToFloat(0.0997),doubleToFloat(0.2242),doubleToFloat(0.0824),doubleToFloat(0.0657),doubleToFloat(0.3853),doubleToFloat(0.0546),doubleToFloat(0.3394),doubleToFloat(0.1877),doubleToFloat(0.1273),doubleToFloat(0.1595),doubleToFloat(0.1234),doubleToFloat(0.1914),doubleToFloat(0.0904),doubleToFloat(0.1868),doubleToFloat(0.0936),doubleToFloat(0.2007),doubleToFloat(0.1535),doubleToFloat(0.218),doubleToFloat(0.1509),doubleToFloat(0.2215),doubleToFloat(0.0884),doubleToFloat(0.1411),doubleToFloat(0.0969),doubleToFloat(0.1819),doubleToFloat(0.1635),doubleToFloat(0.2136),doubleToFloat(0.2112),doubleToFloat(0.1459),doubleToFloat(0.6846),doubleToFloat(0.1322),doubleToFloat(0.6817),doubleToFloat(0.1345),doubleToFloat(0.6643),doubleToFloat(0.1468),doubleToFloat(0.6665),doubleToFloat(0.1092),doubleToFloat(0.6744),doubleToFloat(0.1199),doubleToFloat(0.6584),doubleToFloat(0.0954),doubleToFloat(0.6632),doubleToFloat(0.1082),doubleToFloat(0.6532),doubleToFloat(0.1804),doubleToFloat(0.6847),doubleToFloat(0.1594),doubleToFloat(0.6867),doubleToFloat(0.1596),doubleToFloat(0.6667),doubleToFloat(0.1738),doubleToFloat(0.667),doubleToFloat(0.1395),doubleToFloat(0.6458),doubleToFloat(0.1506),doubleToFloat(0.6487),doubleToFloat(0.1279),doubleToFloat(0.6419),doubleToFloat(0.1746),doubleToFloat(0.6514),doubleToFloat(0.1808),doubleToFloat(0.6512),doubleToFloat(0.1813),doubleToFloat(0.6659),doubleToFloat(0.1625),doubleToFloat(0.6517),doubleToFloat(0.1421),doubleToFloat(0.6314),doubleToFloat(0.1526),doubleToFloat(0.6337),doubleToFloat(0.1306),doubleToFloat(0.6274),doubleToFloat(0.1633),doubleToFloat(0.6341),doubleToFloat(0.175),doubleToFloat(0.6318),doubleToFloat(0.1912),doubleToFloat(0.681),doubleToFloat(0.1185),doubleToFloat(0.6385),doubleToFloat(0.1208),doubleToFloat(0.6244),doubleToFloat(0.1837),doubleToFloat(0.6369),doubleToFloat(0.5924),doubleToFloat(0.6058),doubleToFloat(0.1791),doubleToFloat(0.2083),doubleToFloat(0.6638),doubleToFloat(0.327),doubleToFloat(0.6412),doubleToFloat(0.3242),doubleToFloat(0.608),doubleToFloat(0.3242),doubleToFloat(0.5707),doubleToFloat(0.3239),doubleToFloat(0.528),doubleToFloat(0.324),doubleToFloat(0.4851),doubleToFloat(0.3279),doubleToFloat(0.4539),doubleToFloat(0.3342),doubleToFloat(0.4253),doubleToFloat(0.3406),doubleToFloat(0.4044),doubleToFloat(0.3461),doubleToFloat(0.4253),doubleToFloat(0.3406),doubleToFloat(0.4539),doubleToFloat(0.3342),doubleToFloat(0.4851),doubleToFloat(0.3279),doubleToFloat(0.528),doubleToFloat(0.324),doubleToFloat(0.5707),doubleToFloat(0.3239),doubleToFloat(0.608),doubleToFloat(0.3242),doubleToFloat(0.6412),doubleToFloat(0.3242),doubleToFloat(0.5308),doubleToFloat(0.3294)], Java.type("float[]"))))))))
                .addChild(new HAnimJoint("hanim_vl5").setName("skullbase").setDEF("hanim_skullbase").setCenter(Java.to([doubleToFloat(0),doubleToFloat(37.060001),doubleToFloat(-1.409)], Java.type("float[]"))).setUlimit(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(0)], Java.type("float[]"))).setLlimit(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(0)], Java.type("float[]")))
                  .addChild(new HAnimSegment("hanim_skullbase").setName("skull").setDEF("hanim_skull")
                    .addChild(new Transform().setTranslation(Java.to([doubleToFloat(0),doubleToFloat(37.060001),doubleToFloat(-1.409)], Java.type("float[]")))
                      .addChild(new Shape()
                        .setAppearance(new Appearance()
                          .setMaterial(new Material().setDiffuseColor(Java.to([doubleToFloat(0.588),doubleToFloat(0.588),doubleToFloat(0.588)], Java.type("float[]"))))
                          .setTexture(new ImageTexture().setUSE("NoTextureAtlas")))
                        .setGeometry(new IndexedFaceSet().setCoordIndex(Java.to([59,60,20,-1,20,9,59,-1,8,7,19,-1,19,17,8,-1,11,18,19,-1,19,7,11,-1,16,67,10,-1,26,28,18,-1,18,11,26,-1,25,61,62,-1,62,6,25,-1,15,69,65,-1,65,9,15,-1,8,36,14,-1,14,7,8,-1,7,14,13,-1,13,11,7,-1,49,50,52,-1,52,51,49,-1,20,28,26,-1,26,9,20,-1,31,29,35,-1,35,0,31,-1,32,5,35,-1,35,29,32,-1,30,70,111,-1,111,5,30,-1,15,9,26,-1,26,27,15,-1,63,114,69,-1,69,15,63,-1,2,1,64,-1,64,37,2,-1,64,62,13,-1,13,14,64,-1,65,119,59,-1,59,9,65,-1,28,20,30,-1,30,34,28,-1,17,31,33,-1,33,16,17,-1,16,33,21,-1,21,23,16,-1,23,21,22,-1,22,24,23,-1,24,22,126,-1,126,71,24,-1,66,127,56,-1,56,0,66,-1,55,33,31,-1,31,303,55,-1,3,63,61,-1,61,25,3,-1,11,13,27,-1,27,26,11,-1,35,131,66,-1,66,0,35,-1,5,111,131,-1,131,35,5,-1,31,17,19,-1,19,29,31,-1,29,19,18,-1,18,32,29,-1,32,18,28,-1,28,34,32,-1,22,21,58,-1,58,57,22,-1,33,55,58,-1,58,21,33,-1,4,2,37,-1,37,38,4,-1,10,40,45,-1,45,39,10,-1,10,12,41,-1,41,40,10,-1,12,38,42,-1,42,41,12,-1,38,37,43,-1,37,36,44,-1,44,43,37,-1,36,8,39,-1,39,44,36,-1,45,40,41,-1,41,46,45,-1,46,41,42,-1,42,47,46,-1,12,10,67,-1,67,48,12,-1,38,12,48,-1,48,4,38,-1,47,49,51,-1,51,46,47,-1,47,43,50,-1,50,49,47,-1,43,44,52,-1,52,50,43,-1,44,39,53,-1,53,52,44,-1,39,45,54,-1,54,53,39,-1,45,46,51,-1,51,54,45,-1,5,32,34,-1,34,30,5,-1,10,8,17,-1,17,16,10,-1,73,74,60,-1,60,59,73,-1,72,60,74,-1,74,75,72,-1,61,27,13,-1,13,62,61,-1,3,151,114,-1,114,63,3,-1,1,6,62,-1,62,64,1,-1,15,27,61,-1,61,63,15,-1,14,36,37,-1,37,64,14,-1,22,57,152,-1,152,126,22,-1,153,20,60,-1,60,72,153,-1,30,20,153,-1,153,70,30,-1,51,52,53,-1,53,54,51,-1,43,47,42,-1,42,38,43,-1,39,8,10,-1,16,23,68,-1,68,67,16,-1,73,76,75,-1,75,74,73,-1,119,76,73,-1,73,59,119,-1,78,77,80,-1,80,79,78,-1,81,84,83,-1,83,82,81,-1,85,82,83,-1,83,86,85,-1,87,89,88,-1,90,85,86,-1,86,91,90,-1,93,92,95,-1,95,94,93,-1,96,77,65,-1,65,69,96,-1,81,82,98,-1,98,97,81,-1,82,85,99,-1,99,98,82,-1,101,100,103,-1,103,102,101,-1,80,77,90,-1,90,91,80,-1,104,107,106,-1,106,105,104,-1,108,105,106,-1,106,109,108,-1,110,109,111,-1,111,70,110,-1,96,112,90,-1,90,77,96,-1,113,96,69,-1,69,114,113,-1,116,115,118,-1,118,117,116,-1,118,98,99,-1,99,95,118,-1,65,77,78,-1,78,119,65,-1,91,120,110,-1,110,80,91,-1,84,87,121,-1,121,104,84,-1,87,123,122,-1,122,121,87,-1,123,125,124,-1,124,122,123,-1,125,71,126,-1,126,124,125,-1,66,107,128,-1,128,127,66,-1,104,304,128,-1,128,107,104,-1,130,93,94,-1,94,113,130,-1,85,90,112,-1,112,99,85,-1,106,107,66,-1,66,131,106,-1,109,106,131,-1,131,111,109,-1,104,105,83,-1,83,84,104,-1,105,108,86,-1,86,83,105,-1,108,120,91,-1,91,86,108,-1,124,133,132,-1,132,122,124,-1,121,122,132,-1,132,129,121,-1,135,134,115,-1,115,116,135,-1,89,138,137,-1,137,136,89,-1,89,136,140,-1,140,139,89,-1,139,140,141,-1,141,134,139,-1,134,142,115,-1,115,142,143,-1,143,97,115,-1,97,143,138,-1,138,81,97,-1,137,144,140,-1,140,136,137,-1,144,145,141,-1,141,140,144,-1,139,146,88,-1,88,89,139,-1,134,135,146,-1,146,139,134,-1,145,144,100,-1,100,101,145,-1,145,101,102,-1,102,142,145,-1,142,102,103,-1,103,143,142,-1,143,103,147,-1,147,138,143,-1,138,147,148,-1,148,137,138,-1,137,148,100,-1,100,144,137,-1,109,110,120,-1,120,108,109,-1,89,87,84,-1,84,81,89,-1,149,78,79,-1,79,150,149,-1,72,75,150,-1,150,79,72,-1,94,95,99,-1,99,112,94,-1,130,113,114,-1,114,151,130,-1,117,118,95,-1,95,92,117,-1,96,113,94,-1,94,112,96,-1,98,118,115,-1,115,97,98,-1,124,126,152,-1,152,133,124,-1,153,72,79,-1,79,80,153,-1,110,70,153,-1,153,80,110,-1,100,148,147,-1,147,103,100,-1,142,134,141,-1,141,145,142,-1,138,89,81,-1,87,88,154,-1,154,123,87,-1,149,150,75,-1,75,76,149,-1,119,78,149,-1,149,76,119,-1,191,192,168,-1,168,158,191,-1,197,198,291,-1,291,279,197,-1,165,166,159,-1,158,165,159,-1,158,159,191,-1,160,185,184,-1,184,159,160,-1,160,279,291,-1,291,185,160,-1,279,160,207,-1,207,280,279,-1,162,163,169,-1,230,203,282,-1,282,294,230,-1,279,280,199,-1,199,197,279,-1,281,282,203,-1,203,204,281,-1,281,204,233,-1,233,295,281,-1,166,207,160,-1,160,159,166,-1,156,193,192,-1,192,157,156,-1,161,188,190,-1,190,168,161,-1,170,164,162,-1,210,209,164,-1,164,170,210,-1,171,172,274,-1,274,275,171,-1,176,276,286,-1,286,175,176,-1,287,195,254,-1,254,200,287,-1,172,171,157,-1,157,155,172,-1,171,177,156,-1,156,157,171,-1,181,173,274,-1,274,277,181,-1,289,182,278,-1,198,262,292,-1,292,291,198,-1,184,180,172,-1,172,155,184,-1,185,183,180,-1,180,184,185,-1,178,174,205,-1,205,201,178,-1,177,171,275,-1,275,276,177,-1,177,176,196,-1,196,156,177,-1,182,181,277,-1,277,278,182,-1,176,175,293,-1,293,196,176,-1,174,283,264,-1,264,205,174,-1,285,178,201,-1,201,202,285,-1,264,283,288,-1,288,206,264,-1,289,265,266,-1,266,290,289,-1,206,288,290,-1,290,266,206,-1,158,168,190,-1,190,189,158,-1,188,167,187,-1,187,190,188,-1,190,187,186,-1,186,189,190,-1,155,157,192,-1,192,191,155,-1,193,161,168,-1,168,192,193,-1,159,184,155,-1,155,191,159,-1,185,291,292,-1,292,183,185,-1,156,196,194,-1,194,193,156,-1,285,202,254,-1,254,195,285,-1,179,194,196,-1,196,293,179,-1,289,292,262,-1,262,265,289,-1,210,211,207,-1,207,166,210,-1,162,169,208,-1,208,170,162,-1,281,295,211,-1,211,208,281,-1,169,282,281,-1,281,208,169,-1,282,169,163,-1,163,294,282,-1,166,165,209,-1,209,210,166,-1,199,280,295,-1,295,233,199,-1,210,170,208,-1,208,211,210,-1,280,207,211,-1,211,295,280,-1,213,212,215,-1,215,214,213,-1,197,216,217,-1,217,198,197,-1,212,213,220,-1,220,219,218,-1,212,220,218,-1,221,220,223,-1,223,222,221,-1,221,222,217,-1,217,216,221,-1,216,224,225,-1,225,221,216,-1,226,228,227,-1,230,229,231,-1,231,203,230,-1,216,197,199,-1,199,224,216,-1,232,204,203,-1,203,231,232,-1,232,234,233,-1,233,204,232,-1,219,220,221,-1,221,225,219,-1,236,235,214,-1,214,237,236,-1,296,215,239,-1,239,238,296,-1,240,226,241,-1,242,240,241,-1,241,243,242,-1,244,247,246,-1,246,245,244,-1,251,250,249,-1,249,248,251,-1,252,200,254,-1,254,253,252,-1,245,255,235,-1,235,244,245,-1,244,235,236,-1,236,250,244,-1,256,245,246,-1,246,257,256,-1,260,259,258,-1,258,261,260,-1,198,217,261,-1,261,262,198,-1,223,255,245,-1,245,256,223,-1,222,223,256,-1,256,260,222,-1,251,201,205,-1,205,247,251,-1,247,244,250,-1,250,251,247,-1,250,236,263,-1,263,249,250,-1,257,259,260,-1,260,256,257,-1,249,263,253,-1,253,248,249,-1,247,205,264,-1,264,246,247,-1,248,202,201,-1,201,251,248,-1,264,206,257,-1,257,246,264,-1,258,259,266,-1,266,265,258,-1,206,266,259,-1,259,257,206,-1,212,267,239,-1,239,215,212,-1,238,239,269,-1,269,268,238,-1,239,267,270,-1,270,269,239,-1,255,213,214,-1,214,235,255,-1,237,214,215,-1,215,296,237,-1,220,213,255,-1,255,223,220,-1,222,260,261,-1,261,217,222,-1,236,237,271,-1,271,263,236,-1,248,253,254,-1,254,202,248,-1,252,253,263,-1,263,271,252,-1,258,265,262,-1,262,261,258,-1,242,219,225,-1,225,272,242,-1,226,240,273,-1,273,228,226,-1,232,273,272,-1,272,234,232,-1,228,273,232,-1,232,231,228,-1,231,229,227,-1,227,228,231,-1,219,242,243,-1,243,218,219,-1,199,233,234,-1,234,224,199,-1,242,272,273,-1,273,240,242,-1,224,234,272,-1,272,225,224,-1,173,284,275,-1,275,274,173,-1,275,284,286,-1,286,276,275,-1,176,177,276,-1,277,180,183,-1,183,278,277,-1,172,180,277,-1,277,274,172,-1,278,183,292,-1,292,289,278,-1,173,283,174,-1,174,284,173,-1,286,178,285,-1,285,175,286,-1,287,179,293,-1,293,195,287,-1,181,288,283,-1,283,173,181,-1,178,286,284,-1,284,174,178,-1,182,290,288,-1,288,181,182,-1,195,293,175,-1,175,285,195,-1,289,290,182,-1,299,271,237,-1,237,296,299,-1,200,252,298,-1,298,297,200,-1,252,271,301,-1,301,298,252,-1,200,297,300,-1,300,287,200,-1,300,179,287,-1,271,299,301,-1,55,303,302,-1,56,127,302,-1,127,128,302,-1,128,304,302,-1,129,132,302,-1,132,133,302,-1,133,152,302,-1,152,57,302,-1,57,58,302,-1,58,55,302,-1,56,303,31,-1,31,0,56,-1,303,56,302,-1,104,121,129,-1,129,304,104,-1,304,129,302,-1], Java.type("int[]"))).setCreaseAngle(1.57).setTexCoordIndex(Java.to([1,2,3,-1,3,0,1,-1,4,5,6,-1,6,7,4,-1,8,9,6,-1,6,5,8,-1,10,11,12,-1,13,14,9,-1,9,8,13,-1,16,17,18,-1,18,15,16,-1,19,20,21,-1,21,0,19,-1,4,22,23,-1,23,5,4,-1,5,23,24,-1,24,8,5,-1,26,27,28,-1,28,25,26,-1,3,14,13,-1,13,0,3,-1,29,30,31,-1,31,32,29,-1,33,34,31,-1,31,30,33,-1,35,36,37,-1,37,34,35,-1,19,0,13,-1,13,38,19,-1,39,40,20,-1,20,19,39,-1,42,43,44,-1,44,41,42,-1,44,18,24,-1,24,23,44,-1,21,45,1,-1,1,0,21,-1,14,3,35,-1,35,46,14,-1,7,29,47,-1,47,10,7,-1,10,47,48,-1,48,49,10,-1,49,48,50,-1,50,51,49,-1,51,50,52,-1,52,53,51,-1,54,83,55,-1,55,32,54,-1,56,47,29,-1,29,328,56,-1,57,39,17,-1,17,16,57,-1,8,24,38,-1,38,13,8,-1,31,58,54,-1,54,32,31,-1,34,37,58,-1,58,31,34,-1,29,7,6,-1,6,30,29,-1,30,6,9,-1,9,33,30,-1,33,9,14,-1,14,46,33,-1,50,48,59,-1,59,60,50,-1,47,56,59,-1,59,48,47,-1,62,42,41,-1,41,61,62,-1,79,63,64,-1,64,65,79,-1,79,66,67,-1,67,63,79,-1,66,80,68,-1,68,67,66,-1,80,41,69,-1,41,22,70,-1,70,69,41,-1,22,4,65,-1,65,70,22,-1,64,63,67,-1,67,71,64,-1,71,67,68,-1,68,72,71,-1,81,12,11,-1,11,73,81,-1,61,81,73,-1,73,62,61,-1,72,26,25,-1,25,71,72,-1,72,69,27,-1,27,26,72,-1,69,70,28,-1,28,27,69,-1,70,65,74,-1,74,28,70,-1,65,64,75,-1,75,74,65,-1,64,71,25,-1,25,75,64,-1,34,33,46,-1,46,35,34,-1,12,4,7,-1,7,10,12,-1,86,87,2,-1,2,1,86,-1,76,2,87,-1,87,88,76,-1,17,38,24,-1,24,18,17,-1,57,77,40,-1,40,39,57,-1,43,15,18,-1,18,44,43,-1,19,38,17,-1,17,39,19,-1,23,22,41,-1,41,44,23,-1,50,60,82,-1,82,52,50,-1,78,3,2,-1,2,76,78,-1,35,3,78,-1,78,36,35,-1,25,28,74,-1,74,75,25,-1,69,72,68,-1,68,80,69,-1,65,4,79,-1,10,49,84,-1,84,85,10,-1,86,89,88,-1,88,87,86,-1,45,89,86,-1,86,1,45,-1,91,90,93,-1,93,92,91,-1,94,97,96,-1,96,95,94,-1,98,95,96,-1,96,99,98,-1,100,102,101,-1,103,98,99,-1,99,104,103,-1,106,105,108,-1,108,107,106,-1,109,90,111,-1,111,110,109,-1,94,95,113,-1,113,112,94,-1,95,98,114,-1,114,113,95,-1,116,115,118,-1,118,117,116,-1,93,90,103,-1,103,104,93,-1,119,122,121,-1,121,120,119,-1,123,120,121,-1,121,124,123,-1,125,124,127,-1,127,126,125,-1,109,128,103,-1,103,90,109,-1,129,109,110,-1,110,130,129,-1,132,131,134,-1,134,133,132,-1,134,113,114,-1,114,108,134,-1,111,90,91,-1,91,135,111,-1,104,136,125,-1,125,93,104,-1,97,100,137,-1,137,119,97,-1,100,139,138,-1,138,137,100,-1,139,141,140,-1,140,138,139,-1,141,143,142,-1,142,140,141,-1,144,122,146,-1,146,145,144,-1,119,329,146,-1,146,122,119,-1,148,106,107,-1,107,129,148,-1,98,103,128,-1,128,114,98,-1,121,122,144,-1,144,149,121,-1,124,121,149,-1,149,127,124,-1,119,120,96,-1,96,97,119,-1,120,123,99,-1,99,96,120,-1,123,136,104,-1,104,99,123,-1,140,151,150,-1,150,138,140,-1,137,138,150,-1,150,147,137,-1,153,152,131,-1,131,132,153,-1,154,157,156,-1,156,155,154,-1,154,155,159,-1,159,158,154,-1,158,159,161,-1,161,160,158,-1,160,162,131,-1,131,162,163,-1,163,112,131,-1,112,163,157,-1,157,94,112,-1,156,164,159,-1,159,155,156,-1,164,165,161,-1,161,159,164,-1,167,166,101,-1,101,102,167,-1,152,153,166,-1,166,167,152,-1,165,164,115,-1,115,116,165,-1,165,116,117,-1,117,162,165,-1,162,117,118,-1,118,163,162,-1,163,118,168,-1,168,157,163,-1,157,168,169,-1,169,156,157,-1,156,169,115,-1,115,164,156,-1,124,125,136,-1,136,123,124,-1,102,100,97,-1,97,94,102,-1,170,91,92,-1,92,171,170,-1,173,172,171,-1,171,92,173,-1,107,108,114,-1,114,128,107,-1,148,129,130,-1,130,174,148,-1,133,134,108,-1,108,105,133,-1,109,129,107,-1,107,128,109,-1,113,134,131,-1,131,112,113,-1,140,142,175,-1,175,151,140,-1,176,173,92,-1,92,93,176,-1,125,126,176,-1,176,93,125,-1,115,169,168,-1,168,118,115,-1,162,160,161,-1,161,165,162,-1,157,154,94,-1,100,178,177,-1,177,139,100,-1,170,171,172,-1,172,179,170,-1,135,91,170,-1,170,179,135,-1,181,182,183,-1,183,180,181,-1,185,186,187,-1,187,184,185,-1,188,189,190,-1,180,188,190,-1,180,190,181,-1,191,192,193,-1,193,190,191,-1,191,184,187,-1,187,192,191,-1,184,191,195,-1,195,194,184,-1,196,197,198,-1,200,201,202,-1,202,199,200,-1,184,194,203,-1,203,185,184,-1,205,202,201,-1,201,204,205,-1,205,204,206,-1,206,207,205,-1,189,195,191,-1,191,190,189,-1,209,210,182,-1,182,208,209,-1,211,212,213,-1,213,183,211,-1,214,215,196,-1,216,217,215,-1,215,214,216,-1,218,219,220,-1,220,221,218,-1,223,224,225,-1,225,222,223,-1,226,227,228,-1,228,229,226,-1,219,218,208,-1,208,230,219,-1,218,231,209,-1,209,208,218,-1,233,234,220,-1,220,232,233,-1,235,236,237,-1,186,238,239,-1,239,187,186,-1,193,240,219,-1,219,230,193,-1,192,241,240,-1,240,193,192,-1,242,243,244,-1,244,245,242,-1,231,218,221,-1,221,224,231,-1,231,223,246,-1,246,209,231,-1,236,233,232,-1,232,237,236,-1,223,222,247,-1,247,246,223,-1,243,248,249,-1,249,244,243,-1,251,242,245,-1,245,250,251,-1,249,248,252,-1,252,253,249,-1,235,255,256,-1,256,254,235,-1,253,252,254,-1,254,256,253,-1,180,183,213,-1,213,257,180,-1,212,258,259,-1,259,213,212,-1,213,259,260,-1,260,257,213,-1,230,208,182,-1,182,181,230,-1,210,211,183,-1,183,182,210,-1,190,193,230,-1,230,181,190,-1,192,187,239,-1,239,241,192,-1,209,246,261,-1,261,210,209,-1,251,250,228,-1,228,227,251,-1,262,261,246,-1,246,247,262,-1,235,239,238,-1,238,255,235,-1,216,263,195,-1,195,189,216,-1,196,198,264,-1,264,214,196,-1,205,207,263,-1,263,264,205,-1,198,202,205,-1,205,264,198,-1,202,198,197,-1,197,199,202,-1,189,188,217,-1,217,216,189,-1,203,194,207,-1,207,206,203,-1,216,214,264,-1,264,263,216,-1,194,195,263,-1,263,207,194,-1,268,265,266,-1,266,267,268,-1,185,269,270,-1,270,186,185,-1,265,268,271,-1,271,272,273,-1,265,271,273,-1,276,271,274,-1,274,275,276,-1,276,275,270,-1,270,269,276,-1,269,277,278,-1,278,276,269,-1,279,280,281,-1,200,282,283,-1,283,201,200,-1,269,185,203,-1,203,277,269,-1,284,204,201,-1,201,283,284,-1,284,285,206,-1,206,204,284,-1,272,271,276,-1,276,278,272,-1,288,286,267,-1,267,287,288,-1,291,266,289,-1,289,290,291,-1,292,279,293,-1,294,292,293,-1,293,295,294,-1,296,297,298,-1,298,299,296,-1,301,302,303,-1,303,300,301,-1,304,229,228,-1,228,305,304,-1,299,306,286,-1,286,296,299,-1,296,286,288,-1,288,302,296,-1,307,299,298,-1,298,308,307,-1,311,312,309,-1,309,310,311,-1,186,270,310,-1,310,238,186,-1,274,306,299,-1,299,307,274,-1,275,274,307,-1,307,311,275,-1,301,245,244,-1,244,297,301,-1,297,296,302,-1,302,301,297,-1,302,288,313,-1,313,303,302,-1,308,312,311,-1,311,307,308,-1,303,313,305,-1,305,300,303,-1,297,244,249,-1,249,298,297,-1,300,250,245,-1,245,301,300,-1,249,253,308,-1,308,298,249,-1,309,312,256,-1,256,255,309,-1,253,256,312,-1,312,308,253,-1,265,314,289,-1,289,266,265,-1,290,289,315,-1,315,316,290,-1,289,314,317,-1,317,315,289,-1,306,268,267,-1,267,286,306,-1,287,267,266,-1,266,291,287,-1,271,268,306,-1,306,274,271,-1,275,311,310,-1,310,270,275,-1,288,287,318,-1,318,313,288,-1,300,305,228,-1,228,250,300,-1,304,305,313,-1,313,318,304,-1,309,255,238,-1,238,310,309,-1,294,272,278,-1,278,319,294,-1,279,292,320,-1,320,280,279,-1,284,320,319,-1,319,285,284,-1,280,320,284,-1,284,283,280,-1,283,282,281,-1,281,280,283,-1,272,294,295,-1,295,273,272,-1,203,206,285,-1,285,277,203,-1,294,319,320,-1,320,292,294,-1,277,285,319,-1,319,278,277,-1,234,321,221,-1,221,220,234,-1,221,321,225,-1,225,224,221,-1,223,231,224,-1,232,240,241,-1,241,237,232,-1,219,240,232,-1,232,220,219,-1,237,241,239,-1,239,235,237,-1,234,248,243,-1,243,321,234,-1,225,242,251,-1,251,222,225,-1,226,262,247,-1,247,227,226,-1,233,252,248,-1,248,234,233,-1,242,225,321,-1,321,243,242,-1,236,254,252,-1,252,233,236,-1,227,247,222,-1,222,251,227,-1,235,254,236,-1,322,318,287,-1,287,291,322,-1,229,304,323,-1,323,324,229,-1,304,318,326,-1,326,323,304,-1,229,324,325,-1,325,226,229,-1,325,262,226,-1,318,322,326,-1,56,328,327,-1,55,83,327,-1,145,146,327,-1,146,329,327,-1,147,150,327,-1,150,151,327,-1,151,175,327,-1,82,60,327,-1,60,59,327,-1,59,56,327,-1,55,328,29,-1,29,32,55,-1,328,55,327,-1,119,137,147,-1,147,329,119,-1,329,147,327,-1], Java.type("int[]")))
                          .setCoord(new Coordinate().setPoint(Java.to([doubleToFloat(1.623),doubleToFloat(22.09),doubleToFloat(2.029),doubleToFloat(5.015),doubleToFloat(29.52),doubleToFloat(3.006),doubleToFloat(5.109),doubleToFloat(28.22),doubleToFloat(0.6911),doubleToFloat(1.112),doubleToFloat(29.69),doubleToFloat(6.122),doubleToFloat(5.072),doubleToFloat(27.79),doubleToFloat(-1.319),doubleToFloat(1.273),doubleToFloat(22.48),doubleToFloat(4.761),doubleToFloat(4.251),doubleToFloat(29.69),doubleToFloat(5.056),doubleToFloat(4.235),doubleToFloat(24.9),doubleToFloat(2.987),doubleToFloat(4.373),doubleToFloat(24.86),doubleToFloat(0.717),doubleToFloat(0.9649),doubleToFloat(25.33),doubleToFloat(5.707),doubleToFloat(4.422),doubleToFloat(24.97),doubleToFloat(0.3467),doubleToFloat(3.561),doubleToFloat(25.22),doubleToFloat(4.672),doubleToFloat(4.87),doubleToFloat(26.15),doubleToFloat(-0.0502),doubleToFloat(3.903),doubleToFloat(26.58),doubleToFloat(4.779),doubleToFloat(4.669),doubleToFloat(26.33),doubleToFloat(3.012),doubleToFloat(1.056),doubleToFloat(26.53),doubleToFloat(5.611),doubleToFloat(3.564),doubleToFloat(23.84),doubleToFloat(-1.026),doubleToFloat(3.803),doubleToFloat(23.83),doubleToFloat(0.9251),doubleToFloat(3.072),doubleToFloat(24.1),doubleToFloat(4.704),doubleToFloat(3.605),doubleToFloat(23.73),doubleToFloat(3.158),doubleToFloat(0.8434),doubleToFloat(24.54),doubleToFloat(5.673),doubleToFloat(1.952),doubleToFloat(22.8),doubleToFloat(-1.826),doubleToFloat(0.9968),doubleToFloat(22.92),doubleToFloat(-2.856),doubleToFloat(2.923),doubleToFloat(23.79),doubleToFloat(-2.466),doubleToFloat(1.427),doubleToFloat(23.87),doubleToFloat(-3.926),doubleToFloat(2.768),doubleToFloat(29.73),doubleToFloat(5.536),doubleToFloat(2.121),doubleToFloat(25.27),doubleToFloat(5.252),doubleToFloat(2.518),doubleToFloat(26.58),doubleToFloat(5.18),doubleToFloat(2.102),doubleToFloat(24.35),doubleToFloat(5.226),doubleToFloat(2.586),doubleToFloat(22.69),doubleToFloat(3.568),doubleToFloat(1.016),doubleToFloat(23.21),doubleToFloat(5.426),doubleToFloat(2.772),doubleToFloat(22.76),doubleToFloat(1.477),doubleToFloat(2.295),doubleToFloat(23.13),doubleToFloat(4.761),doubleToFloat(2.482),doubleToFloat(22.73),doubleToFloat(-0.6433),doubleToFloat(1.729),doubleToFloat(23.43),doubleToFloat(5.128),doubleToFloat(1.562),doubleToFloat(22.07),doubleToFloat(3.909),doubleToFloat(4.839),doubleToFloat(26.1),doubleToFloat(0.3411),doubleToFloat(4.989),doubleToFloat(27.32),doubleToFloat(0.5255),doubleToFloat(5.018),doubleToFloat(27.31),doubleToFloat(0.1283),doubleToFloat(4.494),doubleToFloat(24.88),doubleToFloat(0.661),doubleToFloat(4.747),doubleToFloat(25.11),doubleToFloat(-0.1465),doubleToFloat(5.466),doubleToFloat(26.45),doubleToFloat(-0.8798),doubleToFloat(5.395),doubleToFloat(27.24),doubleToFloat(-0.5072),doubleToFloat(5.11),doubleToFloat(27.31),doubleToFloat(0.4876),doubleToFloat(4.985),doubleToFloat(26.09),doubleToFloat(0.2699),doubleToFloat(4.888),doubleToFloat(25.11),doubleToFloat(0.0159),doubleToFloat(5.627),doubleToFloat(26.46),doubleToFloat(-0.7007),doubleToFloat(5.514),doubleToFloat(27.26),doubleToFloat(-0.2882),doubleToFloat(4.632),doubleToFloat(26.29),doubleToFloat(-1.383),doubleToFloat(5.483),doubleToFloat(27.16),doubleToFloat(-0.2554),doubleToFloat(5.154),doubleToFloat(27.23),doubleToFloat(0.3866),doubleToFloat(5.586),doubleToFloat(26.5),doubleToFloat(-0.6194),doubleToFloat(5.031),doubleToFloat(26.09),doubleToFloat(0.1835),doubleToFloat(4.6),doubleToFloat(25),doubleToFloat(0.5204),doubleToFloat(4.86),doubleToFloat(25.19),doubleToFloat(0.067),doubleToFloat(1.668),doubleToFloat(22.14),doubleToFloat(-0.3496),doubleToFloat(1.235),doubleToFloat(21.83),doubleToFloat(1.136),doubleToFloat(0.5246),doubleToFloat(22.16),doubleToFloat(-1.496),doubleToFloat(1.27),doubleToFloat(22.17),doubleToFloat(-1.148),doubleToFloat(0.5368),doubleToFloat(25.09),doubleToFloat(6.203),doubleToFloat(0.504),doubleToFloat(24.71),doubleToFloat(6.278),doubleToFloat(2.643),doubleToFloat(27.68),doubleToFloat(5.358),doubleToFloat(4.077),doubleToFloat(27.57),doubleToFloat(4.918),doubleToFloat(1.083),doubleToFloat(27.74),doubleToFloat(5.851),doubleToFloat(4.842),doubleToFloat(27.37),doubleToFloat(3.009),doubleToFloat(-0.0101),doubleToFloat(25.5),doubleToFloat(6.055),doubleToFloat(-0.0101),doubleToFloat(21.57),doubleToFloat(2.52),doubleToFloat(3.783),doubleToFloat(24.98),doubleToFloat(-1.4),doubleToFloat(2.928),doubleToFloat(25),doubleToFloat(-3.258),doubleToFloat(-0.0101),doubleToFloat(26.48),doubleToFloat(5.947),doubleToFloat(-0.0101),doubleToFloat(23.05),doubleToFloat(5.536),doubleToFloat(-0.0101),doubleToFloat(23.9),doubleToFloat(-4.302),doubleToFloat(-0.0101),doubleToFloat(24.52),doubleToFloat(6.368),doubleToFloat(0.21),doubleToFloat(24.92),doubleToFloat(6.362),doubleToFloat(0.1922),doubleToFloat(24.83),doubleToFloat(6.403),doubleToFloat(-0.0101),doubleToFloat(24.73),doubleToFloat(6.448),doubleToFloat(-0.0101),doubleToFloat(24.98),doubleToFloat(6.449),doubleToFloat(-0.985),doubleToFloat(25.33),doubleToFloat(5.707),doubleToFloat(-0.557),doubleToFloat(25.09),doubleToFloat(6.203),doubleToFloat(-0.5242),doubleToFloat(24.71),doubleToFloat(6.278),doubleToFloat(-0.8636),doubleToFloat(24.54),doubleToFloat(5.673),doubleToFloat(-4.393),doubleToFloat(24.86),doubleToFloat(0.717),doubleToFloat(-4.255),doubleToFloat(24.9),doubleToFloat(2.987),doubleToFloat(-3.625),doubleToFloat(23.73),doubleToFloat(3.158),doubleToFloat(-3.823),doubleToFloat(23.83),doubleToFloat(0.9251),doubleToFloat(-3.581),doubleToFloat(25.22),doubleToFloat(4.672),doubleToFloat(-3.092),doubleToFloat(24.1),doubleToFloat(4.704),doubleToFloat(-3.584),doubleToFloat(23.84),doubleToFloat(-1.026),doubleToFloat(-3.803),doubleToFloat(24.98),doubleToFloat(-1.4),doubleToFloat(-4.442),doubleToFloat(24.97),doubleToFloat(0.3467),doubleToFloat(-2.141),doubleToFloat(25.27),doubleToFloat(5.252),doubleToFloat(-2.122),doubleToFloat(24.35),doubleToFloat(5.226),doubleToFloat(-4.271),doubleToFloat(29.69),doubleToFloat(5.056),doubleToFloat(-2.789),doubleToFloat(29.73),doubleToFloat(5.536),doubleToFloat(-2.663),doubleToFloat(27.68),doubleToFloat(5.358),doubleToFloat(-4.097),doubleToFloat(27.57),doubleToFloat(4.918),doubleToFloat(-1.076),doubleToFloat(26.53),doubleToFloat(5.611),doubleToFloat(-4.86),doubleToFloat(26.1),doubleToFloat(0.3411),doubleToFloat(-4.689),doubleToFloat(26.33),doubleToFloat(3.012),doubleToFloat(-3.923),doubleToFloat(26.58),doubleToFloat(4.779),doubleToFloat(-5.606),doubleToFloat(26.5),doubleToFloat(-0.6194),doubleToFloat(-5.503),doubleToFloat(27.16),doubleToFloat(-0.2554),doubleToFloat(-5.175),doubleToFloat(27.23),doubleToFloat(0.3866),doubleToFloat(-5.051),doubleToFloat(26.09),doubleToFloat(0.1835),doubleToFloat(-2.792),doubleToFloat(22.76),doubleToFloat(1.477),doubleToFloat(-2.606),doubleToFloat(22.69),doubleToFloat(3.568),doubleToFloat(-1.582),doubleToFloat(22.07),doubleToFloat(3.909),doubleToFloat(-1.643),doubleToFloat(22.09),doubleToFloat(2.029),doubleToFloat(-2.315),doubleToFloat(23.13),doubleToFloat(4.761),doubleToFloat(-1.293),doubleToFloat(22.48),doubleToFloat(4.761),doubleToFloat(-1.036),doubleToFloat(23.21),doubleToFloat(5.426),doubleToFloat(-0.0101),doubleToFloat(22.1),doubleToFloat(4.882),doubleToFloat(-2.538),doubleToFloat(26.58),doubleToFloat(5.18),doubleToFloat(-1.104),doubleToFloat(27.74),doubleToFloat(5.851),doubleToFloat(-0.0101),doubleToFloat(27.78),doubleToFloat(6.148),doubleToFloat(-5.01),doubleToFloat(27.32),doubleToFloat(0.5255),doubleToFloat(-5.13),doubleToFloat(28.22),doubleToFloat(0.6911),doubleToFloat(-5.036),doubleToFloat(29.52),doubleToFloat(3.006),doubleToFloat(-4.862),doubleToFloat(27.37),doubleToFloat(3.009),doubleToFloat(-0.0101),doubleToFloat(25.15),doubleToFloat(6.376),doubleToFloat(-1.749),doubleToFloat(23.43),doubleToFloat(5.128),doubleToFloat(-2.502),doubleToFloat(22.73),doubleToFloat(-0.6433),doubleToFloat(-1.972),doubleToFloat(22.8),doubleToFloat(-1.826),doubleToFloat(-2.943),doubleToFloat(23.79),doubleToFloat(-2.466),doubleToFloat(-1.017),doubleToFloat(22.92),doubleToFloat(-2.856),doubleToFloat(-1.447),doubleToFloat(23.87),doubleToFloat(-3.926),doubleToFloat(-0.0101),doubleToFloat(22.94),doubleToFloat(-3),doubleToFloat(-0.0101),doubleToFloat(21.55),doubleToFloat(1.64),doubleToFloat(-1.255),doubleToFloat(21.83),doubleToFloat(1.136),doubleToFloat(-1.688),doubleToFloat(22.14),doubleToFloat(-0.3496),doubleToFloat(-1.132),doubleToFloat(29.69),doubleToFloat(6.122),doubleToFloat(-0.0101),doubleToFloat(21.57),doubleToFloat(4.209),doubleToFloat(-1.291),doubleToFloat(22.17),doubleToFloat(-1.148),doubleToFloat(-0.5447),doubleToFloat(22.16),doubleToFloat(-1.496),doubleToFloat(-5.039),doubleToFloat(27.31),doubleToFloat(0.1283),doubleToFloat(-5.092),doubleToFloat(27.79),doubleToFloat(-1.319),doubleToFloat(-4.767),doubleToFloat(25.11),doubleToFloat(-0.1465),doubleToFloat(-4.908),doubleToFloat(25.11),doubleToFloat(0.0159),doubleToFloat(-4.514),doubleToFloat(24.88),doubleToFloat(0.661),doubleToFloat(-4.89),doubleToFloat(26.15),doubleToFloat(-0.0502),doubleToFloat(-5.486),doubleToFloat(26.45),doubleToFloat(-0.8798),doubleToFloat(-5.415),doubleToFloat(27.24),doubleToFloat(-0.5072),doubleToFloat(-5.13),doubleToFloat(27.31),doubleToFloat(0.4876),doubleToFloat(-5.006),doubleToFloat(26.09),doubleToFloat(0.2699),doubleToFloat(-5.647),doubleToFloat(26.46),doubleToFloat(-0.7007),doubleToFloat(-5.534),doubleToFloat(27.26),doubleToFloat(-0.2882),doubleToFloat(-4.653),doubleToFloat(26.29),doubleToFloat(-1.383),doubleToFloat(-4.62),doubleToFloat(25),doubleToFloat(0.5204),doubleToFloat(-4.88),doubleToFloat(25.19),doubleToFloat(0.067),doubleToFloat(-0.2302),doubleToFloat(24.92),doubleToFloat(6.362),doubleToFloat(-0.2123),doubleToFloat(24.83),doubleToFloat(6.403),doubleToFloat(-0.0101),doubleToFloat(29.69),doubleToFloat(6.359),doubleToFloat(-0.0101),doubleToFloat(22.15),doubleToFloat(-1.574),doubleToFloat(-0.0101),doubleToFloat(24.2),doubleToFloat(5.82),doubleToFloat(-2.948),doubleToFloat(25),doubleToFloat(-3.258),doubleToFloat(5.516),doubleToFloat(30.37),doubleToFloat(0.6831),doubleToFloat(4.539),doubleToFloat(29.93),doubleToFloat(4.875),doubleToFloat(5.311),doubleToFloat(30.27),doubleToFloat(2.774),doubleToFloat(5.344),doubleToFloat(27.36),doubleToFloat(0.5552),doubleToFloat(5.222),doubleToFloat(28.56),doubleToFloat(-1.915),doubleToFloat(4.247),doubleToFloat(28.36),doubleToFloat(-3.86),doubleToFloat(4.6),doubleToFloat(27.18),doubleToFloat(4.046),doubleToFloat(3.574),doubleToFloat(23.89),doubleToFloat(-1.388),doubleToFloat(2.383),doubleToFloat(23.28),doubleToFloat(-2.613),doubleToFloat(4.613),doubleToFloat(24.99),doubleToFloat(-0.5099),doubleToFloat(5.17),doubleToFloat(27.33),doubleToFloat(-0.5034),doubleToFloat(4.993),doubleToFloat(27.34),doubleToFloat(-1.884),doubleToFloat(4.203),doubleToFloat(25.29),doubleToFloat(3.582),doubleToFloat(5.087),doubleToFloat(27.31),doubleToFloat(2.682),doubleToFloat(2.841),doubleToFloat(23.73),doubleToFloat(-2.894),doubleToFloat(4.393),doubleToFloat(24.91),doubleToFloat(-1.749),doubleToFloat(4.849),doubleToFloat(31.99),doubleToFloat(3.134),doubleToFloat(5.161),doubleToFloat(32.16),doubleToFloat(0.8294),doubleToFloat(2.791),doubleToFloat(34.02),doubleToFloat(0.8196),doubleToFloat(1.464),doubleToFloat(34.35),doubleToFloat(3.513),doubleToFloat(2.351),doubleToFloat(31.33),doubleToFloat(6.193),doubleToFloat(3.094),doubleToFloat(31.14),doubleToFloat(5.932),doubleToFloat(3.938),doubleToFloat(31.49),doubleToFloat(5.059),doubleToFloat(1.404),doubleToFloat(33.01),doubleToFloat(5.174),doubleToFloat(2.409),doubleToFloat(28.81),doubleToFloat(6.369),doubleToFloat(4.8),doubleToFloat(32.03),doubleToFloat(-1.731),doubleToFloat(2.635),doubleToFloat(33.78),doubleToFloat(-1.675),doubleToFloat(2.394),doubleToFloat(33.51),doubleToFloat(-3.163),doubleToFloat(3.822),doubleToFloat(31.73),doubleToFloat(-3.543),doubleToFloat(5.164),doubleToFloat(30.22),doubleToFloat(-1.892),doubleToFloat(4.229),doubleToFloat(29.91),doubleToFloat(-3.799),doubleToFloat(4.542),doubleToFloat(25.11),doubleToFloat(0.8889),doubleToFloat(4.429),doubleToFloat(25.17),doubleToFloat(2.797),doubleToFloat(4.407),doubleToFloat(26.06),doubleToFloat(3.808),doubleToFloat(4.946),doubleToFloat(26.11),doubleToFloat(0.4174),doubleToFloat(4.807),doubleToFloat(26.12),doubleToFloat(2.721),doubleToFloat(5.647),doubleToFloat(28.72),doubleToFloat(0.6137),doubleToFloat(5.284),doubleToFloat(28.6),doubleToFloat(2.678),doubleToFloat(4.577),doubleToFloat(28.34),doubleToFloat(4.527),doubleToFloat(3.311),doubleToFloat(28.38),doubleToFloat(5.864),doubleToFloat(1.443),doubleToFloat(29.58),doubleToFloat(6.321),doubleToFloat(3.275),doubleToFloat(29.75),doubleToFloat(5.907),doubleToFloat(-0.0101),doubleToFloat(28.05),doubleToFloat(-5.405),doubleToFloat(-0.0101),doubleToFloat(29.32),doubleToFloat(-5.437),doubleToFloat(-0.0101),doubleToFloat(26.87),doubleToFloat(-5.289),doubleToFloat(-0.3707),doubleToFloat(28.29),doubleToFloat(6.662),doubleToFloat(-0.1268),doubleToFloat(33.41),doubleToFloat(5.286),doubleToFloat(-0.0101),doubleToFloat(31.91),doubleToFloat(6.45),doubleToFloat(-0.0101),doubleToFloat(23.55),doubleToFloat(-4.273),doubleToFloat(-0.0101),doubleToFloat(24.63),doubleToFloat(-4.778),doubleToFloat(-0.1769),doubleToFloat(34.53),doubleToFloat(3.563),doubleToFloat(-0.1769),doubleToFloat(34.86),doubleToFloat(-1.633),doubleToFloat(4.174),doubleToFloat(27.13),doubleToFloat(-3.784),doubleToFloat(3.455),doubleToFloat(24.8),doubleToFloat(-3.209),doubleToFloat(5.038),doubleToFloat(26.17),doubleToFloat(-0.7534),doubleToFloat(4.812),doubleToFloat(26.13),doubleToFloat(-1.88),doubleToFloat(3.969),doubleToFloat(25.97),doubleToFloat(-3.602),doubleToFloat(-5.36),doubleToFloat(27.36),doubleToFloat(0.5552),doubleToFloat(-5.561),doubleToFloat(28.45),doubleToFloat(0.6137),doubleToFloat(-5.298),doubleToFloat(28.3),doubleToFloat(2.678),doubleToFloat(-5.118),doubleToFloat(26.93),doubleToFloat(2.682),doubleToFloat(-2.386),doubleToFloat(28.23),doubleToFloat(-5.093),doubleToFloat(-2.368),doubleToFloat(29.55),doubleToFloat(-5.089),doubleToFloat(-5.185),doubleToFloat(27.32),doubleToFloat(-0.5111),doubleToFloat(-4.973),doubleToFloat(27.34),doubleToFloat(-1.884),doubleToFloat(-5.214),doubleToFloat(28.66),doubleToFloat(-1.915),doubleToFloat(-4.13),doubleToFloat(28.36),doubleToFloat(-3.86),doubleToFloat(-4.024),doubleToFloat(29.91),doubleToFloat(-3.799),doubleToFloat(-5.086),doubleToFloat(30.22),doubleToFloat(-1.892),doubleToFloat(-2.245),doubleToFloat(26.99),doubleToFloat(-5.032),doubleToFloat(-4.018),doubleToFloat(27.13),doubleToFloat(-3.784),doubleToFloat(-3.606),doubleToFloat(23.83),doubleToFloat(-1.382),doubleToFloat(-2.333),doubleToFloat(23.29),doubleToFloat(-2.587),doubleToFloat(-2.837),doubleToFloat(23.71),doubleToFloat(-2.876),doubleToFloat(-1.082),doubleToFloat(22.96),doubleToFloat(-3.131),doubleToFloat(-0.0101),doubleToFloat(22.82),doubleToFloat(-3.394),doubleToFloat(-1.491),doubleToFloat(23.62),doubleToFloat(-3.963),doubleToFloat(-1.884),doubleToFloat(24.69),doubleToFloat(-4.487),doubleToFloat(-0.0101),doubleToFloat(25.81),doubleToFloat(-5.092),doubleToFloat(-2.109),doubleToFloat(25.89),doubleToFloat(-4.824),doubleToFloat(-5.277),doubleToFloat(30.27),doubleToFloat(2.774),doubleToFloat(-4.627),doubleToFloat(29.87),doubleToFloat(4.79),doubleToFloat(-4.737),doubleToFloat(28.17),doubleToFloat(4.527),doubleToFloat(-4.397),doubleToFloat(25.93),doubleToFloat(3.808),doubleToFloat(-4.779),doubleToFloat(26.12),doubleToFloat(2.721),doubleToFloat(-4.217),doubleToFloat(24.91),doubleToFloat(-1.749),doubleToFloat(-4.529),doubleToFloat(25),doubleToFloat(-0.5137),doubleToFloat(-4.737),doubleToFloat(26.13),doubleToFloat(-1.88),doubleToFloat(-4.976),doubleToFloat(26.17),doubleToFloat(-0.7378),doubleToFloat(-4.836),doubleToFloat(31.99),doubleToFloat(3.134),doubleToFloat(-5.053),doubleToFloat(32.14),doubleToFloat(0.8294),doubleToFloat(-3.097),doubleToFloat(34.16),doubleToFloat(0.8225),doubleToFloat(-2.825),doubleToFloat(33.72),doubleToFloat(3.473),doubleToFloat(-1.85),doubleToFloat(31.55),doubleToFloat(6.22),doubleToFloat(-3.344),doubleToFloat(30.61),doubleToFloat(5.836),doubleToFloat(-4.088),doubleToFloat(31.66),doubleToFloat(5.059),doubleToFloat(-2.457),doubleToFloat(32.89),doubleToFloat(5.124),doubleToFloat(-2.081),doubleToFloat(28.02),doubleToFloat(6.395),doubleToFloat(-1.777),doubleToFloat(29.12),doubleToFloat(6.307),doubleToFloat(-0.0922),doubleToFloat(29.35),doubleToFloat(6.558),doubleToFloat(-5.469),doubleToFloat(30.37),doubleToFloat(0.6831),doubleToFloat(-4.787),doubleToFloat(32.02),doubleToFloat(-1.731),doubleToFloat(-2.907),doubleToFloat(33.93),doubleToFloat(-1.674),doubleToFloat(-1.723),doubleToFloat(32.49),doubleToFloat(-4.134),doubleToFloat(-2.514),doubleToFloat(33.49),doubleToFloat(-3.152),doubleToFloat(-3.823),doubleToFloat(31.73),doubleToFloat(-3.458),doubleToFloat(-2.216),doubleToFloat(31.22),doubleToFloat(-4.749),doubleToFloat(-0.0101),doubleToFloat(31.09),doubleToFloat(-5.081),doubleToFloat(-3.651),doubleToFloat(29.21),doubleToFloat(5.81),doubleToFloat(-0.1769),doubleToFloat(35.19),doubleToFloat(0.8138),doubleToFloat(-0.0101),doubleToFloat(32.9),doubleToFloat(-4.328),doubleToFloat(-0.1769),doubleToFloat(33.92),doubleToFloat(-3.144),doubleToFloat(-5.071),doubleToFloat(26.11),doubleToFloat(0.4072),doubleToFloat(-4.185),doubleToFloat(25.29),doubleToFloat(3.582),doubleToFloat(-4.397),doubleToFloat(25.17),doubleToFloat(2.797),doubleToFloat(-4.572),doubleToFloat(25.11),doubleToFloat(0.8889),doubleToFloat(-3.803),doubleToFloat(27.89),doubleToFloat(5.767),doubleToFloat(-3.783),doubleToFloat(25.97),doubleToFloat(-3.602),doubleToFloat(-3.382),doubleToFloat(24.8),doubleToFloat(-3.209),doubleToFloat(3.6),doubleToFloat(33.78),doubleToFloat(0.8244),doubleToFloat(3.541),doubleToFloat(33.27),doubleToFloat(3.322),doubleToFloat(3.403),doubleToFloat(32.21),doubleToFloat(5.114),doubleToFloat(3.679),doubleToFloat(33.35),doubleToFloat(-1.696),doubleToFloat(3.134),doubleToFloat(32.81),doubleToFloat(-3.295),doubleToFloat(2.258),doubleToFloat(28.22),doubleToFloat(-5.108),doubleToFloat(2.116),doubleToFloat(26.99),doubleToFloat(-5.044),doubleToFloat(1.756),doubleToFloat(24.7),doubleToFloat(-4.5),doubleToFloat(1.364),doubleToFloat(23.63),doubleToFloat(-3.979),doubleToFloat(1.591),doubleToFloat(34.94),doubleToFloat(0.8191),doubleToFloat(2.669),doubleToFloat(33.44),doubleToFloat(3.499),doubleToFloat(1.412),doubleToFloat(31.71),doubleToFloat(6.233),doubleToFloat(2.431),doubleToFloat(32.51),doubleToFloat(5.164),doubleToFloat(1.304),doubleToFloat(28.59),doubleToFloat(6.409),doubleToFloat(1.565),doubleToFloat(34.71),doubleToFloat(-1.672),doubleToFloat(1.797),doubleToFloat(32.62),doubleToFloat(-4.173),doubleToFloat(1.761),doubleToFloat(33.82),doubleToFloat(-3.151),doubleToFloat(2.24),doubleToFloat(29.54),doubleToFloat(-5.105),doubleToFloat(1.95),doubleToFloat(31.21),doubleToFloat(-4.797),doubleToFloat(2.379),doubleToFloat(29.86),doubleToFloat(6.286),doubleToFloat(0.9559),doubleToFloat(22.94),doubleToFloat(-3.157),doubleToFloat(1.98),doubleToFloat(25.88),doubleToFloat(-4.838),doubleToFloat(-4.542),doubleToFloat(26.5),doubleToFloat(4.046),doubleToFloat(-0.6666),doubleToFloat(27.47),doubleToFloat(6.58),doubleToFloat(-2.319),doubleToFloat(27.18),doubleToFloat(6.112),doubleToFloat(-4.033),doubleToFloat(26.73),doubleToFloat(5.067),doubleToFloat(1.049),doubleToFloat(28.09),doubleToFloat(6.438),doubleToFloat(-3.509),doubleToFloat(26.84),doubleToFloat(5.333),doubleToFloat(-0.0101),doubleToFloat(21.56),doubleToFloat(-0.026),doubleToFloat(1.492),doubleToFloat(22.02),doubleToFloat(0.5296),doubleToFloat(-1.449),doubleToFloat(22.02),doubleToFloat(0.5296)], Java.type("float[]"))))
                          .setTexCoord(new TextureCoordinate().setPoint(Java.to([doubleToFloat(0.0536),doubleToFloat(0.8577),doubleToFloat(0.0288),doubleToFloat(0.846),doubleToFloat(0.0262),doubleToFloat(0.8372),doubleToFloat(0.0448),doubleToFloat(0.8348),doubleToFloat(0.2245),doubleToFloat(0.8377),doubleToFloat(0.167),doubleToFloat(0.8528),doubleToFloat(0.1574),doubleToFloat(0.8233),doubleToFloat(0.205),doubleToFloat(0.8102),doubleToFloat(0.1196),doubleToFloat(0.8678),doubleToFloat(0.1082),doubleToFloat(0.8311),doubleToFloat(0.2435),doubleToFloat(0.7908),doubleToFloat(0.2708),doubleToFloat(0.8206),doubleToFloat(0.2333),doubleToFloat(0.8379),doubleToFloat(0.0887),doubleToFloat(0.8612),doubleToFloat(0.0763),doubleToFloat(0.8332),doubleToFloat(0.1274),doubleToFloat(0.9833),doubleToFloat(0.0941),doubleToFloat(0.966),doubleToFloat(0.0924),doubleToFloat(0.9154),doubleToFloat(0.1246),doubleToFloat(0.9182),doubleToFloat(0.052),doubleToFloat(0.8807),doubleToFloat(0.0273),doubleToFloat(0.8724),doubleToFloat(0.0238),doubleToFloat(0.8503),doubleToFloat(0.2416),doubleToFloat(0.8686),doubleToFloat(0.1763),doubleToFloat(0.8915),doubleToFloat(0.1235),doubleToFloat(0.8917),doubleToFloat(0.2746),doubleToFloat(0.8771),doubleToFloat(0.266),doubleToFloat(0.8948),doubleToFloat(0.2471),doubleToFloat(0.8988),doubleToFloat(0.248),doubleToFloat(0.8687),doubleToFloat(0.1711),doubleToFloat(0.7658),doubleToFloat(0.1207),doubleToFloat(0.7851),doubleToFloat(0.0837),doubleToFloat(0.7601),doubleToFloat(0.1249),doubleToFloat(0.7468),doubleToFloat(0.0877),doubleToFloat(0.7965),doubleToFloat(0.0646),doubleToFloat(0.775),doubleToFloat(0.0465),doubleToFloat(0.8002),doubleToFloat(0.0275),doubleToFloat(0.7888),doubleToFloat(0.0404),doubleToFloat(0.7615),doubleToFloat(0.093),doubleToFloat(0.8873),doubleToFloat(0.0485),doubleToFloat(0.9118),doubleToFloat(0.0246),doubleToFloat(0.9054),doubleToFloat(0.2416),doubleToFloat(0.9006),doubleToFloat(0.2393),doubleToFloat(0.9253),doubleToFloat(0.1861),doubleToFloat(0.9714),doubleToFloat(0.1805),doubleToFloat(0.918),doubleToFloat(0.0165),doubleToFloat(0.8443),doubleToFloat(0.0645),doubleToFloat(0.8092),doubleToFloat(0.1989),doubleToFloat(0.7507),doubleToFloat(0.23),doubleToFloat(0.7286),doubleToFloat(0.2616),doubleToFloat(0.7472),doubleToFloat(0.2378),doubleToFloat(0.7088),doubleToFloat(0.2725),doubleToFloat(0.7129),doubleToFloat(0.2373),doubleToFloat(0.6899),doubleToFloat(0.2744),doubleToFloat(0.6852),doubleToFloat(0.08),doubleToFloat(0.7302),doubleToFloat(0.1581),doubleToFloat(0.7331),doubleToFloat(0.1771),doubleToFloat(0.7321),doubleToFloat(0.0456),doubleToFloat(0.9611),doubleToFloat(0.0505),doubleToFloat(0.7396),doubleToFloat(0.1952),doubleToFloat(0.7242),doubleToFloat(0.2051),doubleToFloat(0.7057),doubleToFloat(0.2505),doubleToFloat(0.8975),doubleToFloat(0.2774),doubleToFloat(0.8972),doubleToFloat(0.2493),doubleToFloat(0.8401),doubleToFloat(0.2481),doubleToFloat(0.8425),doubleToFloat(0.2276),doubleToFloat(0.8388),doubleToFloat(0.2505),doubleToFloat(0.8671),doubleToFloat(0.2782),doubleToFloat(0.873),doubleToFloat(0.2701),doubleToFloat(0.8941),doubleToFloat(0.2443),doubleToFloat(0.9011),doubleToFloat(0.2454),doubleToFloat(0.8689),doubleToFloat(0.2769),doubleToFloat(0.8759),doubleToFloat(0.2673),doubleToFloat(0.8972),doubleToFloat(0.2825),doubleToFloat(0.8559),doubleToFloat(0.2325),doubleToFloat(0.8414),doubleToFloat(0.2466),doubleToFloat(0.8448),doubleToFloat(0.0158),doubleToFloat(0.829),doubleToFloat(0.0225),doubleToFloat(0.953),doubleToFloat(0.0225),doubleToFloat(0.8162),doubleToFloat(0.2333),doubleToFloat(0.8379),doubleToFloat(0.2505),doubleToFloat(0.8975),doubleToFloat(0.2505),doubleToFloat(0.8671),doubleToFloat(0.207),doubleToFloat(0.6951),doubleToFloat(0.1044),doubleToFloat(0.7212),doubleToFloat(0.2616),doubleToFloat(0.7472),doubleToFloat(0.2435),doubleToFloat(0.7908),doubleToFloat(0.0209),doubleToFloat(0.8424),doubleToFloat(0.0195),doubleToFloat(0.8379),doubleToFloat(0.0143),doubleToFloat(0.8338),doubleToFloat(0.0147),doubleToFloat(0.8416),doubleToFloat(0.0536),doubleToFloat(0.8577),doubleToFloat(0.0288),doubleToFloat(0.846),doubleToFloat(0.0262),doubleToFloat(0.8372),doubleToFloat(0.0448),doubleToFloat(0.8348),doubleToFloat(0.2245),doubleToFloat(0.8377),doubleToFloat(0.167),doubleToFloat(0.8528),doubleToFloat(0.1574),doubleToFloat(0.8233),doubleToFloat(0.205),doubleToFloat(0.8102),doubleToFloat(0.1196),doubleToFloat(0.8678),doubleToFloat(0.1082),doubleToFloat(0.8311),doubleToFloat(0.2435),doubleToFloat(0.7908),doubleToFloat(0.2708),doubleToFloat(0.8206),doubleToFloat(0.2333),doubleToFloat(0.8379),doubleToFloat(0.0887),doubleToFloat(0.8612),doubleToFloat(0.0763),doubleToFloat(0.8332),doubleToFloat(0.1274),doubleToFloat(0.9833),doubleToFloat(0.0941),doubleToFloat(0.966),doubleToFloat(0.0924),doubleToFloat(0.9154),doubleToFloat(0.1246),doubleToFloat(0.9182),doubleToFloat(0.052),doubleToFloat(0.8807),doubleToFloat(0.0273),doubleToFloat(0.8724),doubleToFloat(0.0238),doubleToFloat(0.8503),doubleToFloat(0.2416),doubleToFloat(0.8686),doubleToFloat(0.1763),doubleToFloat(0.8915),doubleToFloat(0.1235),doubleToFloat(0.8917),doubleToFloat(0.2746),doubleToFloat(0.8771),doubleToFloat(0.266),doubleToFloat(0.8948),doubleToFloat(0.2471),doubleToFloat(0.8988),doubleToFloat(0.248),doubleToFloat(0.8687),doubleToFloat(0.1711),doubleToFloat(0.7658),doubleToFloat(0.1207),doubleToFloat(0.7851),doubleToFloat(0.0837),doubleToFloat(0.7601),doubleToFloat(0.1249),doubleToFloat(0.7468),doubleToFloat(0.0877),doubleToFloat(0.7965),doubleToFloat(0.0646),doubleToFloat(0.775),doubleToFloat(0.0465),doubleToFloat(0.8002),doubleToFloat(0.0275),doubleToFloat(0.7888),doubleToFloat(0.0404),doubleToFloat(0.7615),doubleToFloat(0.093),doubleToFloat(0.8873),doubleToFloat(0.0485),doubleToFloat(0.9118),doubleToFloat(0.0246),doubleToFloat(0.9054),doubleToFloat(0.2416),doubleToFloat(0.9006),doubleToFloat(0.2393),doubleToFloat(0.9253),doubleToFloat(0.1861),doubleToFloat(0.9714),doubleToFloat(0.1805),doubleToFloat(0.918),doubleToFloat(0.0165),doubleToFloat(0.8443),doubleToFloat(0.0645),doubleToFloat(0.8092),doubleToFloat(0.1989),doubleToFloat(0.7507),doubleToFloat(0.23),doubleToFloat(0.7286),doubleToFloat(0.2616),doubleToFloat(0.7472),doubleToFloat(0.2378),doubleToFloat(0.7088),doubleToFloat(0.2725),doubleToFloat(0.7129),doubleToFloat(0.2373),doubleToFloat(0.6899),doubleToFloat(0.2744),doubleToFloat(0.6852),doubleToFloat(0.08),doubleToFloat(0.7302),doubleToFloat(0.1044),doubleToFloat(0.7212),doubleToFloat(0.1581),doubleToFloat(0.7331),doubleToFloat(0.1771),doubleToFloat(0.7321),doubleToFloat(0.0456),doubleToFloat(0.9611),doubleToFloat(0.0505),doubleToFloat(0.7396),doubleToFloat(0.1952),doubleToFloat(0.7242),doubleToFloat(0.2051),doubleToFloat(0.7057),doubleToFloat(0.2505),doubleToFloat(0.8975),doubleToFloat(0.2774),doubleToFloat(0.8972),doubleToFloat(0.2333),doubleToFloat(0.8379),doubleToFloat(0.2493),doubleToFloat(0.8401),doubleToFloat(0.2481),doubleToFloat(0.8425),doubleToFloat(0.2276),doubleToFloat(0.8388),doubleToFloat(0.2505),doubleToFloat(0.8671),doubleToFloat(0.2782),doubleToFloat(0.873),doubleToFloat(0.2505),doubleToFloat(0.8975),doubleToFloat(0.2701),doubleToFloat(0.8941),doubleToFloat(0.2443),doubleToFloat(0.9011),doubleToFloat(0.2454),doubleToFloat(0.8689),doubleToFloat(0.2769),doubleToFloat(0.8759),doubleToFloat(0.2673),doubleToFloat(0.8972),doubleToFloat(0.2825),doubleToFloat(0.8559),doubleToFloat(0.2505),doubleToFloat(0.8671),doubleToFloat(0.2325),doubleToFloat(0.8414),doubleToFloat(0.2466),doubleToFloat(0.8448),doubleToFloat(0.0209),doubleToFloat(0.8424),doubleToFloat(0.0195),doubleToFloat(0.8379),doubleToFloat(0.0143),doubleToFloat(0.8338),doubleToFloat(0.0158),doubleToFloat(0.829),doubleToFloat(0.0225),doubleToFloat(0.953),doubleToFloat(0.207),doubleToFloat(0.6951),doubleToFloat(0.0225),doubleToFloat(0.8162),doubleToFloat(0.2616),doubleToFloat(0.7472),doubleToFloat(0.2435),doubleToFloat(0.7908),doubleToFloat(0.0147),doubleToFloat(0.8416),doubleToFloat(0.9438),doubleToFloat(0.8319),doubleToFloat(0.927),doubleToFloat(0.8245),doubleToFloat(0.9266),doubleToFloat(0.7875),doubleToFloat(0.9423),doubleToFloat(0.7929),doubleToFloat(0.8424),doubleToFloat(0.9101),doubleToFloat(0.8091),doubleToFloat(0.9169),doubleToFloat(0.8093),doubleToFloat(0.9063),doubleToFloat(0.8409),doubleToFloat(0.9004),doubleToFloat(0.9356),doubleToFloat(0.8612),doubleToFloat(0.908),doubleToFloat(0.882),doubleToFloat(0.9008),doubleToFloat(0.8665),doubleToFloat(0.8754),doubleToFloat(0.8912),doubleToFloat(0.8695),doubleToFloat(0.8792),doubleToFloat(0.8919),doubleToFloat(0.8527),doubleToFloat(0.8412),doubleToFloat(0.9203),doubleToFloat(0.8755),doubleToFloat(0.9025),doubleToFloat(0.8963),doubleToFloat(0.9437),doubleToFloat(0.8613),doubleToFloat(0.9615),doubleToFloat(0.8659),doubleToFloat(0.9533),doubleToFloat(0.8331),doubleToFloat(0.9741),doubleToFloat(0.807),doubleToFloat(0.976),doubleToFloat(0.8076),doubleToFloat(0.9613),doubleToFloat(0.8341),doubleToFloat(0.9589),doubleToFloat(0.8088),doubleToFloat(0.9264),doubleToFloat(0.808),doubleToFloat(0.9475),doubleToFloat(0.8373),doubleToFloat(0.9436),doubleToFloat(0.8085),doubleToFloat(0.9352),doubleToFloat(0.8396),doubleToFloat(0.9302),doubleToFloat(0.9071),doubleToFloat(0.7827),doubleToFloat(0.8989),doubleToFloat(0.7452),doubleToFloat(0.9238),doubleToFloat(0.7472),doubleToFloat(0.947),doubleToFloat(0.7669),doubleToFloat(0.9662),doubleToFloat(0.7755),doubleToFloat(0.9599),doubleToFloat(0.7941),doubleToFloat(0.9006),doubleToFloat(0.9215),doubleToFloat(0.9195),doubleToFloat(0.9211),doubleToFloat(0.9057),doubleToFloat(0.9014),doubleToFloat(0.9267),doubleToFloat(0.8964),doubleToFloat(0.8856),doubleToFloat(0.7768),doubleToFloat(0.8873),doubleToFloat(0.8083),doubleToFloat(0.8623),doubleToFloat(0.8054),doubleToFloat(0.8634),doubleToFloat(0.7738),doubleToFloat(0.8488),doubleToFloat(0.7239),doubleToFloat(0.8675),doubleToFloat(0.7307),doubleToFloat(0.8668),doubleToFloat(0.7471),doubleToFloat(0.8479),doubleToFloat(0.7428),doubleToFloat(0.8287),doubleToFloat(0.6872),doubleToFloat(0.8324),doubleToFloat(0.6989),doubleToFloat(0.8031),doubleToFloat(0.6976),doubleToFloat(0.796),doubleToFloat(0.6869),doubleToFloat(0.9068),doubleToFloat(0.8159),doubleToFloat(0.8772),doubleToFloat(0.747),doubleToFloat(0.8618),doubleToFloat(0.8384),doubleToFloat(0.8488),doubleToFloat(0.8381),doubleToFloat(0.8518),doubleToFloat(0.8048),doubleToFloat(0.833),doubleToFloat(0.8723),doubleToFloat(0.8411),doubleToFloat(0.856),doubleToFloat(0.8496),doubleToFloat(0.859),doubleToFloat(0.8101),doubleToFloat(0.8874),doubleToFloat(0.8354),doubleToFloat(0.8862),doubleToFloat(0.8788),doubleToFloat(0.842),doubleToFloat(0.8586),doubleToFloat(0.8649),doubleToFloat(0.8337),doubleToFloat(0.7451),doubleToFloat(0.8338),doubleToFloat(0.7706),doubleToFloat(0.8192),doubleToFloat(0.7714),doubleToFloat(0.816),doubleToFloat(0.7486),doubleToFloat(0.8799),doubleToFloat(0.7203),doubleToFloat(0.8535),doubleToFloat(0.7074),doubleToFloat(0.8375),doubleToFloat(0.8047),doubleToFloat(0.822),doubleToFloat(0.8046),doubleToFloat(0.8119),doubleToFloat(0.7284),doubleToFloat(0.8325),doubleToFloat(0.7256),doubleToFloat(0.8352),doubleToFloat(0.8351),doubleToFloat(0.8203),doubleToFloat(0.8322),doubleToFloat(0.8369),doubleToFloat(0.8548),doubleToFloat(0.8127),doubleToFloat(0.8657),doubleToFloat(0.8169),doubleToFloat(0.85),doubleToFloat(0.96),doubleToFloat(0.8269),doubleToFloat(0.9756),doubleToFloat(0.7799),doubleToFloat(0.9751),doubleToFloat(0.7927),doubleToFloat(0.9765),doubleToFloat(0.821),doubleToFloat(0.8925),doubleToFloat(0.708),doubleToFloat(0.8544),doubleToFloat(0.694),doubleToFloat(0.8741),doubleToFloat(0.9157),doubleToFloat(0.8712),doubleToFloat(0.9336),doubleToFloat(0.6816),doubleToFloat(0.8228),doubleToFloat(0.6802),doubleToFloat(0.7774),doubleToFloat(0.6964),doubleToFloat(0.7811),doubleToFloat(0.6943),doubleToFloat(0.8209),doubleToFloat(0.7754),doubleToFloat(0.9062),doubleToFloat(0.7779),doubleToFloat(0.8956),doubleToFloat(0.7195),doubleToFloat(0.8586),doubleToFloat(0.7132),doubleToFloat(0.8722),doubleToFloat(0.6891),doubleToFloat(0.8467),doubleToFloat(0.73),doubleToFloat(0.8494),doubleToFloat(0.7511),doubleToFloat(0.8758),doubleToFloat(0.7442),doubleToFloat(0.8876),doubleToFloat(0.7757),doubleToFloat(0.917),doubleToFloat(0.7433),doubleToFloat(0.8987),doubleToFloat(0.7205),doubleToFloat(0.9386),doubleToFloat(0.7502),doubleToFloat(0.9498),doubleToFloat(0.7557),doubleToFloat(0.9597),doubleToFloat(0.7797),doubleToFloat(0.972),doubleToFloat(0.7791),doubleToFloat(0.9577),doubleToFloat(0.7771),doubleToFloat(0.9416),doubleToFloat(0.7765),doubleToFloat(0.9273),doubleToFloat(0.719),doubleToFloat(0.7825),doubleToFloat(0.7082),doubleToFloat(0.746),doubleToFloat(0.7283),doubleToFloat(0.7505),doubleToFloat(0.6717),doubleToFloat(0.7738),doubleToFloat(0.6714),doubleToFloat(0.7525),doubleToFloat(0.6837),doubleToFloat(0.7426),doubleToFloat(0.7173),doubleToFloat(0.9162),doubleToFloat(0.6985),doubleToFloat(0.9148),doubleToFloat(0.7142),doubleToFloat(0.8936),doubleToFloat(0.6914),doubleToFloat(0.8676),doubleToFloat(0.7446),doubleToFloat(0.7799),doubleToFloat(0.7821),doubleToFloat(0.7747),doubleToFloat(0.7812),doubleToFloat(0.8039),doubleToFloat(0.7417),doubleToFloat(0.8072),doubleToFloat(0.7851),doubleToFloat(0.7321),doubleToFloat(0.7826),doubleToFloat(0.7525),doubleToFloat(0.7524),doubleToFloat(0.7537),doubleToFloat(0.7602),doubleToFloat(0.7317),doubleToFloat(0.7624),doubleToFloat(0.695),doubleToFloat(0.7728),doubleToFloat(0.7041),doubleToFloat(0.7163),doubleToFloat(0.8134),doubleToFloat(0.7485),doubleToFloat(0.8375),doubleToFloat(0.7829),doubleToFloat(0.8299),doubleToFloat(0.7913),doubleToFloat(0.8647),doubleToFloat(0.7847),doubleToFloat(0.8799),doubleToFloat(0.7627),doubleToFloat(0.8611),doubleToFloat(0.7854),doubleToFloat(0.8472),doubleToFloat(0.7441),doubleToFloat(0.7223),doubleToFloat(0.6629),doubleToFloat(0.8067),doubleToFloat(0.6577),doubleToFloat(0.7685),doubleToFloat(0.6604),doubleToFloat(0.7543),doubleToFloat(0.6488),doubleToFloat(0.7959),doubleToFloat(0.7279),doubleToFloat(0.7164),doubleToFloat(0.744),doubleToFloat(0.912),doubleToFloat(0.7461),doubleToFloat(0.93),doubleToFloat(0.8494),doubleToFloat(0.7675),doubleToFloat(0.7088),doubleToFloat(0.7116),doubleToFloat(0.7523),doubleToFloat(0.6878),doubleToFloat(0.7877),doubleToFloat(0.678),doubleToFloat(0.8225),doubleToFloat(0.6784),doubleToFloat(0.728),doubleToFloat(0.7011),doubleToFloat(0.1783),doubleToFloat(0.7207),doubleToFloat(0.1694),doubleToFloat(0.7325),doubleToFloat(0.1666),doubleToFloat(0.7326)], Java.type("float[]"))))))))))))
          .addJoints(new HAnimJoint("hanim_No").setContainerFieldOverride("joints").setUSE("hanim_humanoid_root"))
          .addJoints(new HAnimJoint("hanim_No").setContainerFieldOverride("joints").setUSE("hanim_sacroiliac"))
          .addJoints(new HAnimJoint("hanim_No").setContainerFieldOverride("joints").setUSE("hanim_skullbase"))
          .addJoints(new HAnimJoint("hanim_No").setContainerFieldOverride("joints").setUSE("hanim_vl5"))
          .addJoints(new HAnimJoint("hanim_No").setContainerFieldOverride("joints").setUSE("hanim_l_elbow"))
          .addJoints(new HAnimJoint("hanim_No").setContainerFieldOverride("joints").setUSE("hanim_r_elbow"))
          .addJoints(new HAnimJoint("hanim_No").setContainerFieldOverride("joints").setUSE("hanim_l_hip"))
          .addJoints(new HAnimJoint("hanim_No").setContainerFieldOverride("joints").setUSE("hanim_r_hip"))
          .addJoints(new HAnimJoint("hanim_No").setContainerFieldOverride("joints").setUSE("hanim_l_knee"))
          .addJoints(new HAnimJoint("hanim_No").setContainerFieldOverride("joints").setUSE("hanim_r_knee"))
          .addJoints(new HAnimJoint("hanim_No").setContainerFieldOverride("joints").setUSE("hanim_l_metatarsophalangeal_2"))
          .addJoints(new HAnimJoint("hanim_No").setContainerFieldOverride("joints").setUSE("hanim_r_metatarsophalangeal_2"))
          .addJoints(new HAnimJoint("hanim_No").setContainerFieldOverride("joints").setUSE("hanim_l_radiocarpal"))
          .addJoints(new HAnimJoint("hanim_No").setContainerFieldOverride("joints").setUSE("hanim_r_radiocarpal"))
          .addJoints(new HAnimJoint("hanim_No").setContainerFieldOverride("joints").setUSE("hanim_l_shoulder"))
          .addJoints(new HAnimJoint("hanim_No").setContainerFieldOverride("joints").setUSE("hanim_r_shoulder"))
          .addJoints(new HAnimJoint("hanim_No").setContainerFieldOverride("joints").setUSE("hanim_l_talocrural"))
          .addJoints(new HAnimJoint("hanim_No").setContainerFieldOverride("joints").setUSE("hanim_r_talocrural"))
          .addSegments(new HAnimSegment("hanim_No").setContainerFieldOverride("segments").setUSE("hanim_l5"))
          .addSegments(new HAnimSegment("hanim_No").setContainerFieldOverride("segments").setUSE("hanim_pelvis"))
          .addSegments(new HAnimSegment("hanim_No").setContainerFieldOverride("segments").setUSE("hanim_sacrum"))
          .addSegments(new HAnimSegment("hanim_No").setContainerFieldOverride("segments").setUSE("hanim_skull"))
          .addSegments(new HAnimSegment("hanim_No").setContainerFieldOverride("segments").setUSE("hanim_l_calf"))
          .addSegments(new HAnimSegment("hanim_No").setContainerFieldOverride("segments").setUSE("hanim_r_calf"))
          .addSegments(new HAnimSegment("hanim_No").setContainerFieldOverride("segments").setUSE("hanim_l_carpal"))
          .addSegments(new HAnimSegment("hanim_No").setContainerFieldOverride("segments").setUSE("hanim_r_carpal"))
          .addSegments(new HAnimSegment("hanim_No").setContainerFieldOverride("segments").setUSE("hanim_l_forearm"))
          .addSegments(new HAnimSegment("hanim_No").setContainerFieldOverride("segments").setUSE("hanim_r_forearm"))
          .addSegments(new HAnimSegment("hanim_No").setContainerFieldOverride("segments").setUSE("hanim_l_talus"))
          .addSegments(new HAnimSegment("hanim_No").setContainerFieldOverride("segments").setUSE("hanim_r_talus"))
          .addSegments(new HAnimSegment("hanim_No").setContainerFieldOverride("segments").setUSE("hanim_l_tarsal_proximal_phalanx_2"))
          .addSegments(new HAnimSegment("hanim_No").setContainerFieldOverride("segments").setUSE("hanim_r_tarsal_proximal_phalanx_2"))
          .addSegments(new HAnimSegment("hanim_No").setContainerFieldOverride("segments").setUSE("hanim_l_thigh"))
          .addSegments(new HAnimSegment("hanim_No").setContainerFieldOverride("segments").setUSE("hanim_r_thigh"))
          .addSegments(new HAnimSegment("hanim_No").setContainerFieldOverride("segments").setUSE("hanim_l_upperarm"))
          .addSegments(new HAnimSegment("hanim_No").setContainerFieldOverride("segments").setUSE("hanim_r_upperarm"))))      ;
    X3D0.toFileX3D("../data/KoreanCharacter07No.new.graal.x3d");
    X3D0.toFileJSON("../data/KoreanCharacter07No.new.graal.json");
