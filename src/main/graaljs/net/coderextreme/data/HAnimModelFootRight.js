CommentsBlock = Java.type("org.web3d.x3d.jsail.Core.CommentsBlock")
AcousticProperties = Java.type('org.web3d.x3d.jsail.Shape.AcousticProperties')
Analyser = Java.type('org.web3d.x3d.jsail.Sound.Analyser')
Anchor = Java.type('org.web3d.x3d.jsail.Networking.Anchor')
Appearance = Java.type('org.web3d.x3d.jsail.Shape.Appearance')
Arc2D = Java.type('org.web3d.x3d.jsail.Geometry2D.Arc2D')
ArcClose2D = Java.type('org.web3d.x3d.jsail.Geometry2D.ArcClose2D')
AudioClip = Java.type('org.web3d.x3d.jsail.Sound.AudioClip')
AudioDestination = Java.type('org.web3d.x3d.jsail.Sound.AudioDestination')
Background = Java.type('org.web3d.x3d.jsail.EnvironmentalEffects.Background')
BallJoint = Java.type('org.web3d.x3d.jsail.RigidBodyPhysics.BallJoint')
Billboard = Java.type('org.web3d.x3d.jsail.Navigation.Billboard')
BiquadFilter = Java.type('org.web3d.x3d.jsail.Sound.BiquadFilter')
BlendedVolumeStyle = Java.type('org.web3d.x3d.jsail.VolumeRendering.BlendedVolumeStyle')
BooleanFilter = Java.type('org.web3d.x3d.jsail.EventUtilities.BooleanFilter')
BooleanSequencer = Java.type('org.web3d.x3d.jsail.EventUtilities.BooleanSequencer')
BooleanToggle = Java.type('org.web3d.x3d.jsail.EventUtilities.BooleanToggle')
BooleanTrigger = Java.type('org.web3d.x3d.jsail.EventUtilities.BooleanTrigger')
BoundaryEnhancementVolumeStyle = Java.type('org.web3d.x3d.jsail.VolumeRendering.BoundaryEnhancementVolumeStyle')
BoundedPhysicsModel = Java.type('org.web3d.x3d.jsail.ParticleSystems.BoundedPhysicsModel')
Box = Java.type('org.web3d.x3d.jsail.Geometry3D.Box')
BufferAudioSource = Java.type('org.web3d.x3d.jsail.Sound.BufferAudioSource')
CADAssembly = Java.type('org.web3d.x3d.jsail.CADGeometry.CADAssembly')
CADFace = Java.type('org.web3d.x3d.jsail.CADGeometry.CADFace')
CADLayer = Java.type('org.web3d.x3d.jsail.CADGeometry.CADLayer')
CADPart = Java.type('org.web3d.x3d.jsail.CADGeometry.CADPart')
CartoonVolumeStyle = Java.type('org.web3d.x3d.jsail.VolumeRendering.CartoonVolumeStyle')
ChannelMerger = Java.type('org.web3d.x3d.jsail.Sound.ChannelMerger')
ChannelSelector = Java.type('org.web3d.x3d.jsail.Sound.ChannelSelector')
ChannelSplitter = Java.type('org.web3d.x3d.jsail.Sound.ChannelSplitter')
Circle2D = Java.type('org.web3d.x3d.jsail.Geometry2D.Circle2D')
ClipPlane = Java.type('org.web3d.x3d.jsail.Rendering.ClipPlane')
CollidableOffset = Java.type('org.web3d.x3d.jsail.RigidBodyPhysics.CollidableOffset')
CollidableShape = Java.type('org.web3d.x3d.jsail.RigidBodyPhysics.CollidableShape')
Collision = Java.type('org.web3d.x3d.jsail.Navigation.Collision')
CollisionCollection = Java.type('org.web3d.x3d.jsail.RigidBodyPhysics.CollisionCollection')
CollisionSensor = Java.type('org.web3d.x3d.jsail.RigidBodyPhysics.CollisionSensor')
CollisionSpace = Java.type('org.web3d.x3d.jsail.RigidBodyPhysics.CollisionSpace')
Color = Java.type('org.web3d.x3d.jsail.Rendering.Color')
ColorChaser = Java.type('org.web3d.x3d.jsail.Followers.ColorChaser')
ColorDamper = Java.type('org.web3d.x3d.jsail.Followers.ColorDamper')
ColorInterpolator = Java.type('org.web3d.x3d.jsail.Interpolation.ColorInterpolator')
ColorRGBA = Java.type('org.web3d.x3d.jsail.Rendering.ColorRGBA')
ComposedCubeMapTexture = Java.type('org.web3d.x3d.jsail.CubeMapTexturing.ComposedCubeMapTexture')
ComposedShader = Java.type('org.web3d.x3d.jsail.Shaders.ComposedShader')
ComposedTexture3D = Java.type('org.web3d.x3d.jsail.Texturing3D.ComposedTexture3D')
ComposedVolumeStyle = Java.type('org.web3d.x3d.jsail.VolumeRendering.ComposedVolumeStyle')
Cone = Java.type('org.web3d.x3d.jsail.Geometry3D.Cone')
ConeEmitter = Java.type('org.web3d.x3d.jsail.ParticleSystems.ConeEmitter')
Contact = Java.type('org.web3d.x3d.jsail.RigidBodyPhysics.Contact')
Contour2D = Java.type('org.web3d.x3d.jsail.NURBS.Contour2D')
ContourPolyline2D = Java.type('org.web3d.x3d.jsail.NURBS.ContourPolyline2D')
Convolver = Java.type('org.web3d.x3d.jsail.Sound.Convolver')
Coordinate = Java.type('org.web3d.x3d.jsail.Rendering.Coordinate')
CoordinateChaser = Java.type('org.web3d.x3d.jsail.Followers.CoordinateChaser')
CoordinateDamper = Java.type('org.web3d.x3d.jsail.Followers.CoordinateDamper')
CoordinateDouble = Java.type('org.web3d.x3d.jsail.Rendering.CoordinateDouble')
CoordinateInterpolator = Java.type('org.web3d.x3d.jsail.Interpolation.CoordinateInterpolator')
CoordinateInterpolator2D = Java.type('org.web3d.x3d.jsail.Interpolation.CoordinateInterpolator2D')
Cylinder = Java.type('org.web3d.x3d.jsail.Geometry3D.Cylinder')
CylinderSensor = Java.type('org.web3d.x3d.jsail.PointingDeviceSensor.CylinderSensor')
Delay = Java.type('org.web3d.x3d.jsail.Sound.Delay')
DirectionalLight = Java.type('org.web3d.x3d.jsail.Lighting.DirectionalLight')
DISEntityManager = Java.type('org.web3d.x3d.jsail.DIS.DISEntityManager')
DISEntityTypeMapping = Java.type('org.web3d.x3d.jsail.DIS.DISEntityTypeMapping')
Disk2D = Java.type('org.web3d.x3d.jsail.Geometry2D.Disk2D')
DoubleAxisHingeJoint = Java.type('org.web3d.x3d.jsail.RigidBodyPhysics.DoubleAxisHingeJoint')
DynamicsCompressor = Java.type('org.web3d.x3d.jsail.Sound.DynamicsCompressor')
EaseInEaseOut = Java.type('org.web3d.x3d.jsail.Interpolation.EaseInEaseOut')
EdgeEnhancementVolumeStyle = Java.type('org.web3d.x3d.jsail.VolumeRendering.EdgeEnhancementVolumeStyle')
ElevationGrid = Java.type('org.web3d.x3d.jsail.Geometry3D.ElevationGrid')
EspduTransform = Java.type('org.web3d.x3d.jsail.DIS.EspduTransform')
ExplosionEmitter = Java.type('org.web3d.x3d.jsail.ParticleSystems.ExplosionEmitter')
Extrusion = Java.type('org.web3d.x3d.jsail.Geometry3D.Extrusion')
FillProperties = Java.type('org.web3d.x3d.jsail.Shape.FillProperties')
FloatVertexAttribute = Java.type('org.web3d.x3d.jsail.Shaders.FloatVertexAttribute')
Fog = Java.type('org.web3d.x3d.jsail.EnvironmentalEffects.Fog')
FogCoordinate = Java.type('org.web3d.x3d.jsail.EnvironmentalEffects.FogCoordinate')
FontStyle = Java.type('org.web3d.x3d.jsail.Text.FontStyle')
ForcePhysicsModel = Java.type('org.web3d.x3d.jsail.ParticleSystems.ForcePhysicsModel')
Gain = Java.type('org.web3d.x3d.jsail.Sound.Gain')
GeneratedCubeMapTexture = Java.type('org.web3d.x3d.jsail.CubeMapTexturing.GeneratedCubeMapTexture')
GeoCoordinate = Java.type('org.web3d.x3d.jsail.Geospatial.GeoCoordinate')
GeoElevationGrid = Java.type('org.web3d.x3d.jsail.Geospatial.GeoElevationGrid')
GeoLocation = Java.type('org.web3d.x3d.jsail.Geospatial.GeoLocation')
GeoLOD = Java.type('org.web3d.x3d.jsail.Geospatial.GeoLOD')
GeoMetadata = Java.type('org.web3d.x3d.jsail.Geospatial.GeoMetadata')
GeoOrigin = Java.type('org.web3d.x3d.jsail.Geospatial.GeoOrigin')
GeoPositionInterpolator = Java.type('org.web3d.x3d.jsail.Geospatial.GeoPositionInterpolator')
GeoProximitySensor = Java.type('org.web3d.x3d.jsail.Geospatial.GeoProximitySensor')
GeoTouchSensor = Java.type('org.web3d.x3d.jsail.Geospatial.GeoTouchSensor')
GeoTransform = Java.type('org.web3d.x3d.jsail.Geospatial.GeoTransform')
GeoViewpoint = Java.type('org.web3d.x3d.jsail.Geospatial.GeoViewpoint')
Group = Java.type('org.web3d.x3d.jsail.Grouping.Group')
HAnimDisplacer = Java.type('org.web3d.x3d.jsail.HAnim.HAnimDisplacer')
HAnimHumanoid = Java.type('org.web3d.x3d.jsail.HAnim.HAnimHumanoid')
HAnimJoint = Java.type('org.web3d.x3d.jsail.HAnim.HAnimJoint')
HAnimMotion = Java.type('org.web3d.x3d.jsail.HAnim.HAnimMotion')
HAnimSegment = Java.type('org.web3d.x3d.jsail.HAnim.HAnimSegment')
HAnimSite = Java.type('org.web3d.x3d.jsail.HAnim.HAnimSite')
ImageCubeMapTexture = Java.type('org.web3d.x3d.jsail.CubeMapTexturing.ImageCubeMapTexture')
ImageTexture = Java.type('org.web3d.x3d.jsail.Texturing.ImageTexture')
ImageTexture3D = Java.type('org.web3d.x3d.jsail.Texturing3D.ImageTexture3D')
IndexedFaceSet = Java.type('org.web3d.x3d.jsail.Geometry3D.IndexedFaceSet')
IndexedLineSet = Java.type('org.web3d.x3d.jsail.Rendering.IndexedLineSet')
IndexedQuadSet = Java.type('org.web3d.x3d.jsail.CADGeometry.IndexedQuadSet')
IndexedTriangleFanSet = Java.type('org.web3d.x3d.jsail.Rendering.IndexedTriangleFanSet')
IndexedTriangleSet = Java.type('org.web3d.x3d.jsail.Rendering.IndexedTriangleSet')
IndexedTriangleStripSet = Java.type('org.web3d.x3d.jsail.Rendering.IndexedTriangleStripSet')
Inline = Java.type('org.web3d.x3d.jsail.Networking.Inline')
IntegerSequencer = Java.type('org.web3d.x3d.jsail.EventUtilities.IntegerSequencer')
IntegerTrigger = Java.type('org.web3d.x3d.jsail.EventUtilities.IntegerTrigger')
IsoSurfaceVolumeData = Java.type('org.web3d.x3d.jsail.VolumeRendering.IsoSurfaceVolumeData')
KeySensor = Java.type('org.web3d.x3d.jsail.KeyDeviceSensor.KeySensor')
Layer = Java.type('org.web3d.x3d.jsail.Layering.Layer')
LayerSet = Java.type('org.web3d.x3d.jsail.Layering.LayerSet')
Layout = Java.type('org.web3d.x3d.jsail.Layout.Layout')
LayoutGroup = Java.type('org.web3d.x3d.jsail.Layout.LayoutGroup')
LayoutLayer = Java.type('org.web3d.x3d.jsail.Layout.LayoutLayer')
LinePickSensor = Java.type('org.web3d.x3d.jsail.Picking.LinePickSensor')
LineProperties = Java.type('org.web3d.x3d.jsail.Shape.LineProperties')
LineSet = Java.type('org.web3d.x3d.jsail.Rendering.LineSet')
ListenerPointSource = Java.type('org.web3d.x3d.jsail.Sound.ListenerPointSource')
LoadSensor = Java.type('org.web3d.x3d.jsail.Networking.LoadSensor')
LocalFog = Java.type('org.web3d.x3d.jsail.EnvironmentalEffects.LocalFog')
LOD = Java.type('org.web3d.x3d.jsail.Navigation.LOD')
Material = Java.type('org.web3d.x3d.jsail.Shape.Material')
Matrix3VertexAttribute = Java.type('org.web3d.x3d.jsail.Shaders.Matrix3VertexAttribute')
Matrix4VertexAttribute = Java.type('org.web3d.x3d.jsail.Shaders.Matrix4VertexAttribute')
MetadataBoolean = Java.type('org.web3d.x3d.jsail.Core.MetadataBoolean')
MetadataDouble = Java.type('org.web3d.x3d.jsail.Core.MetadataDouble')
MetadataFloat = Java.type('org.web3d.x3d.jsail.Core.MetadataFloat')
MetadataInteger = Java.type('org.web3d.x3d.jsail.Core.MetadataInteger')
MetadataSet = Java.type('org.web3d.x3d.jsail.Core.MetadataSet')
MetadataString = Java.type('org.web3d.x3d.jsail.Core.MetadataString')
MicrophoneSource = Java.type('org.web3d.x3d.jsail.Sound.MicrophoneSource')
MotorJoint = Java.type('org.web3d.x3d.jsail.RigidBodyPhysics.MotorJoint')
MovieTexture = Java.type('org.web3d.x3d.jsail.Texturing.MovieTexture')
MultiTexture = Java.type('org.web3d.x3d.jsail.Texturing.MultiTexture')
MultiTextureCoordinate = Java.type('org.web3d.x3d.jsail.Texturing.MultiTextureCoordinate')
MultiTextureTransform = Java.type('org.web3d.x3d.jsail.Texturing.MultiTextureTransform')
NavigationInfo = Java.type('org.web3d.x3d.jsail.Navigation.NavigationInfo')
Normal = Java.type('org.web3d.x3d.jsail.Rendering.Normal')
NormalInterpolator = Java.type('org.web3d.x3d.jsail.Interpolation.NormalInterpolator')
NurbsCurve = Java.type('org.web3d.x3d.jsail.NURBS.NurbsCurve')
NurbsCurve2D = Java.type('org.web3d.x3d.jsail.NURBS.NurbsCurve2D')
NurbsOrientationInterpolator = Java.type('org.web3d.x3d.jsail.NURBS.NurbsOrientationInterpolator')
NurbsPatchSurface = Java.type('org.web3d.x3d.jsail.NURBS.NurbsPatchSurface')
NurbsPositionInterpolator = Java.type('org.web3d.x3d.jsail.NURBS.NurbsPositionInterpolator')
NurbsSet = Java.type('org.web3d.x3d.jsail.NURBS.NurbsSet')
NurbsSurfaceInterpolator = Java.type('org.web3d.x3d.jsail.NURBS.NurbsSurfaceInterpolator')
NurbsSweptSurface = Java.type('org.web3d.x3d.jsail.NURBS.NurbsSweptSurface')
NurbsSwungSurface = Java.type('org.web3d.x3d.jsail.NURBS.NurbsSwungSurface')
NurbsTextureCoordinate = Java.type('org.web3d.x3d.jsail.NURBS.NurbsTextureCoordinate')
NurbsTrimmedSurface = Java.type('org.web3d.x3d.jsail.NURBS.NurbsTrimmedSurface')
OpacityMapVolumeStyle = Java.type('org.web3d.x3d.jsail.VolumeRendering.OpacityMapVolumeStyle')
OrientationChaser = Java.type('org.web3d.x3d.jsail.Followers.OrientationChaser')
OrientationDamper = Java.type('org.web3d.x3d.jsail.Followers.OrientationDamper')
OrientationInterpolator = Java.type('org.web3d.x3d.jsail.Interpolation.OrientationInterpolator')
OrthoViewpoint = Java.type('org.web3d.x3d.jsail.Navigation.OrthoViewpoint')
OscillatorSource = Java.type('org.web3d.x3d.jsail.Sound.OscillatorSource')
PackagedShader = Java.type('org.web3d.x3d.jsail.Shaders.PackagedShader')
ParticleSystem = Java.type('org.web3d.x3d.jsail.ParticleSystems.ParticleSystem')
PeriodicWave = Java.type('org.web3d.x3d.jsail.Sound.PeriodicWave')
PhysicalMaterial = Java.type('org.web3d.x3d.jsail.Shape.PhysicalMaterial')
PickableGroup = Java.type('org.web3d.x3d.jsail.Picking.PickableGroup')
PixelTexture = Java.type('org.web3d.x3d.jsail.Texturing.PixelTexture')
PixelTexture3D = Java.type('org.web3d.x3d.jsail.Texturing3D.PixelTexture3D')
PlaneSensor = Java.type('org.web3d.x3d.jsail.PointingDeviceSensor.PlaneSensor')
PointEmitter = Java.type('org.web3d.x3d.jsail.ParticleSystems.PointEmitter')
PointLight = Java.type('org.web3d.x3d.jsail.Lighting.PointLight')
PointPickSensor = Java.type('org.web3d.x3d.jsail.Picking.PointPickSensor')
PointProperties = Java.type('org.web3d.x3d.jsail.Shape.PointProperties')
PointSet = Java.type('org.web3d.x3d.jsail.Rendering.PointSet')
Polyline2D = Java.type('org.web3d.x3d.jsail.Geometry2D.Polyline2D')
PolylineEmitter = Java.type('org.web3d.x3d.jsail.ParticleSystems.PolylineEmitter')
Polypoint2D = Java.type('org.web3d.x3d.jsail.Geometry2D.Polypoint2D')
PositionChaser = Java.type('org.web3d.x3d.jsail.Followers.PositionChaser')
PositionChaser2D = Java.type('org.web3d.x3d.jsail.Followers.PositionChaser2D')
PositionDamper = Java.type('org.web3d.x3d.jsail.Followers.PositionDamper')
PositionDamper2D = Java.type('org.web3d.x3d.jsail.Followers.PositionDamper2D')
PositionInterpolator = Java.type('org.web3d.x3d.jsail.Interpolation.PositionInterpolator')
PositionInterpolator2D = Java.type('org.web3d.x3d.jsail.Interpolation.PositionInterpolator2D')
PrimitivePickSensor = Java.type('org.web3d.x3d.jsail.Picking.PrimitivePickSensor')
ProgramShader = Java.type('org.web3d.x3d.jsail.Shaders.ProgramShader')
ProjectionVolumeStyle = Java.type('org.web3d.x3d.jsail.VolumeRendering.ProjectionVolumeStyle')
ProtoInstance = Java.type('org.web3d.x3d.jsail.Core.ProtoInstance')
ProximitySensor = Java.type('org.web3d.x3d.jsail.EnvironmentalSensor.ProximitySensor')
QuadSet = Java.type('org.web3d.x3d.jsail.CADGeometry.QuadSet')
ReceiverPdu = Java.type('org.web3d.x3d.jsail.DIS.ReceiverPdu')
Rectangle2D = Java.type('org.web3d.x3d.jsail.Geometry2D.Rectangle2D')
RigidBody = Java.type('org.web3d.x3d.jsail.RigidBodyPhysics.RigidBody')
RigidBodyCollection = Java.type('org.web3d.x3d.jsail.RigidBodyPhysics.RigidBodyCollection')
ScalarChaser = Java.type('org.web3d.x3d.jsail.Followers.ScalarChaser')
ScalarDamper = Java.type('org.web3d.x3d.jsail.Followers.ScalarDamper')
ScalarInterpolator = Java.type('org.web3d.x3d.jsail.Interpolation.ScalarInterpolator')
ScreenFontStyle = Java.type('org.web3d.x3d.jsail.Layout.ScreenFontStyle')
ScreenGroup = Java.type('org.web3d.x3d.jsail.Layout.ScreenGroup')
Script = Java.type('org.web3d.x3d.jsail.Scripting.Script')
SegmentedVolumeData = Java.type('org.web3d.x3d.jsail.VolumeRendering.SegmentedVolumeData')
ShadedVolumeStyle = Java.type('org.web3d.x3d.jsail.VolumeRendering.ShadedVolumeStyle')
ShaderPart = Java.type('org.web3d.x3d.jsail.Shaders.ShaderPart')
ShaderProgram = Java.type('org.web3d.x3d.jsail.Shaders.ShaderProgram')
Shape = Java.type('org.web3d.x3d.jsail.Shape.Shape')
SignalPdu = Java.type('org.web3d.x3d.jsail.DIS.SignalPdu')
SilhouetteEnhancementVolumeStyle = Java.type('org.web3d.x3d.jsail.VolumeRendering.SilhouetteEnhancementVolumeStyle')
SingleAxisHingeJoint = Java.type('org.web3d.x3d.jsail.RigidBodyPhysics.SingleAxisHingeJoint')
SliderJoint = Java.type('org.web3d.x3d.jsail.RigidBodyPhysics.SliderJoint')
Sound = Java.type('org.web3d.x3d.jsail.Sound.Sound')
SpatialSound = Java.type('org.web3d.x3d.jsail.Sound.SpatialSound')
Sphere = Java.type('org.web3d.x3d.jsail.Geometry3D.Sphere')
SphereSensor = Java.type('org.web3d.x3d.jsail.PointingDeviceSensor.SphereSensor')
SplinePositionInterpolator = Java.type('org.web3d.x3d.jsail.Interpolation.SplinePositionInterpolator')
SplinePositionInterpolator2D = Java.type('org.web3d.x3d.jsail.Interpolation.SplinePositionInterpolator2D')
SplineScalarInterpolator = Java.type('org.web3d.x3d.jsail.Interpolation.SplineScalarInterpolator')
SpotLight = Java.type('org.web3d.x3d.jsail.Lighting.SpotLight')
SquadOrientationInterpolator = Java.type('org.web3d.x3d.jsail.Interpolation.SquadOrientationInterpolator')
StaticGroup = Java.type('org.web3d.x3d.jsail.Grouping.StaticGroup')
StreamAudioDestination = Java.type('org.web3d.x3d.jsail.Sound.StreamAudioDestination')
StreamAudioSource = Java.type('org.web3d.x3d.jsail.Sound.StreamAudioSource')
StringSensor = Java.type('org.web3d.x3d.jsail.KeyDeviceSensor.StringSensor')
SurfaceEmitter = Java.type('org.web3d.x3d.jsail.ParticleSystems.SurfaceEmitter')
Switch = Java.type('org.web3d.x3d.jsail.Grouping.Switch')
TexCoordChaser2D = Java.type('org.web3d.x3d.jsail.Followers.TexCoordChaser2D')
TexCoordDamper2D = Java.type('org.web3d.x3d.jsail.Followers.TexCoordDamper2D')
Text = Java.type('org.web3d.x3d.jsail.Text.Text')
TextureBackground = Java.type('org.web3d.x3d.jsail.EnvironmentalEffects.TextureBackground')
TextureCoordinate = Java.type('org.web3d.x3d.jsail.Texturing.TextureCoordinate')
TextureCoordinate3D = Java.type('org.web3d.x3d.jsail.Texturing3D.TextureCoordinate3D')
TextureCoordinate4D = Java.type('org.web3d.x3d.jsail.Texturing3D.TextureCoordinate4D')
TextureCoordinateGenerator = Java.type('org.web3d.x3d.jsail.Texturing.TextureCoordinateGenerator')
TextureProjector = Java.type('org.web3d.x3d.jsail.TextureProjection.TextureProjector')
TextureProjectorParallel = Java.type('org.web3d.x3d.jsail.TextureProjection.TextureProjectorParallel')
TextureProperties = Java.type('org.web3d.x3d.jsail.Texturing.TextureProperties')
TextureTransform = Java.type('org.web3d.x3d.jsail.Texturing.TextureTransform')
TextureTransform3D = Java.type('org.web3d.x3d.jsail.Texturing3D.TextureTransform3D')
TextureTransformMatrix3D = Java.type('org.web3d.x3d.jsail.Texturing3D.TextureTransformMatrix3D')
TimeSensor = Java.type('org.web3d.x3d.jsail.Time.TimeSensor')
TimeTrigger = Java.type('org.web3d.x3d.jsail.EventUtilities.TimeTrigger')
ToneMappedVolumeStyle = Java.type('org.web3d.x3d.jsail.VolumeRendering.ToneMappedVolumeStyle')
TouchSensor = Java.type('org.web3d.x3d.jsail.PointingDeviceSensor.TouchSensor')
Transform = Java.type('org.web3d.x3d.jsail.Grouping.Transform')
TransformSensor = Java.type('org.web3d.x3d.jsail.EnvironmentalSensor.TransformSensor')
TransmitterPdu = Java.type('org.web3d.x3d.jsail.DIS.TransmitterPdu')
TriangleFanSet = Java.type('org.web3d.x3d.jsail.Rendering.TriangleFanSet')
TriangleSet = Java.type('org.web3d.x3d.jsail.Rendering.TriangleSet')
TriangleSet2D = Java.type('org.web3d.x3d.jsail.Geometry2D.TriangleSet2D')
TriangleStripSet = Java.type('org.web3d.x3d.jsail.Rendering.TriangleStripSet')
TwoSidedMaterial = Java.type('org.web3d.x3d.jsail.Shape.TwoSidedMaterial')
UniversalJoint = Java.type('org.web3d.x3d.jsail.RigidBodyPhysics.UniversalJoint')
UnlitMaterial = Java.type('org.web3d.x3d.jsail.Shape.UnlitMaterial')
Viewpoint = Java.type('org.web3d.x3d.jsail.Navigation.Viewpoint')
ViewpointGroup = Java.type('org.web3d.x3d.jsail.Navigation.ViewpointGroup')
Viewport = Java.type('org.web3d.x3d.jsail.Layering.Viewport')
VisibilitySensor = Java.type('org.web3d.x3d.jsail.EnvironmentalSensor.VisibilitySensor')
VolumeData = Java.type('org.web3d.x3d.jsail.VolumeRendering.VolumeData')
VolumeEmitter = Java.type('org.web3d.x3d.jsail.ParticleSystems.VolumeEmitter')
VolumePickSensor = Java.type('org.web3d.x3d.jsail.Picking.VolumePickSensor')
WaveShaper = Java.type('org.web3d.x3d.jsail.Sound.WaveShaper')
WindPhysicsModel = Java.type('org.web3d.x3d.jsail.ParticleSystems.WindPhysicsModel')
WorldInfo = Java.type('org.web3d.x3d.jsail.Core.WorldInfo')
component = Java.type('org.web3d.x3d.jsail.Core.component')
connect = Java.type('org.web3d.x3d.jsail.Core.connect')
EXPORT = Java.type('org.web3d.x3d.jsail.Networking.EXPORT')
ExternProtoDeclare = Java.type('org.web3d.x3d.jsail.Core.ExternProtoDeclare')
field = Java.type('org.web3d.x3d.jsail.Core.field')
fieldValue = Java.type('org.web3d.x3d.jsail.Core.fieldValue')
head = Java.type('org.web3d.x3d.jsail.Core.head')
IMPORT = Java.type('org.web3d.x3d.jsail.Networking.IMPORT')
IS = Java.type('org.web3d.x3d.jsail.Core.IS')
meta = Java.type('org.web3d.x3d.jsail.Core.meta')
ProtoBody = Java.type('org.web3d.x3d.jsail.Core.ProtoBody')
ProtoDeclare = Java.type('org.web3d.x3d.jsail.Core.ProtoDeclare')
ProtoInterface = Java.type('org.web3d.x3d.jsail.Core.ProtoInterface')
ROUTE = Java.type('org.web3d.x3d.jsail.Core.ROUTE')
Scene = Java.type('org.web3d.x3d.jsail.Core.Scene')
unit = Java.type('org.web3d.x3d.jsail.Core.unit')
X3D = Java.type('org.web3d.x3d.jsail.Core.X3D')
SFBool = Java.type('org.web3d.x3d.jsail.fields.SFBool')
MFBool = Java.type('org.web3d.x3d.jsail.fields.MFBool')
SFColor = Java.type('org.web3d.x3d.jsail.fields.SFColor')
MFColor = Java.type('org.web3d.x3d.jsail.fields.MFColor')
SFColorRGBA = Java.type('org.web3d.x3d.jsail.fields.SFColorRGBA')
MFColorRGBA = Java.type('org.web3d.x3d.jsail.fields.MFColorRGBA')
SFDouble = Java.type('org.web3d.x3d.jsail.fields.SFDouble')
MFDouble = Java.type('org.web3d.x3d.jsail.fields.MFDouble')
SFFloat = Java.type('org.web3d.x3d.jsail.fields.SFFloat')
MFFloat = Java.type('org.web3d.x3d.jsail.fields.MFFloat')
SFImage = Java.type('org.web3d.x3d.jsail.fields.SFImage')
MFImage = Java.type('org.web3d.x3d.jsail.fields.MFImage')
SFInt32 = Java.type('org.web3d.x3d.jsail.fields.SFInt32')
MFInt32 = Java.type('org.web3d.x3d.jsail.fields.MFInt32')
SFMatrix3d = Java.type('org.web3d.x3d.jsail.fields.SFMatrix3d')
MFMatrix3d = Java.type('org.web3d.x3d.jsail.fields.MFMatrix3d')
SFMatrix3f = Java.type('org.web3d.x3d.jsail.fields.SFMatrix3f')
MFMatrix3f = Java.type('org.web3d.x3d.jsail.fields.MFMatrix3f')
SFMatrix4d = Java.type('org.web3d.x3d.jsail.fields.SFMatrix4d')
MFMatrix4d = Java.type('org.web3d.x3d.jsail.fields.MFMatrix4d')
SFMatrix4f = Java.type('org.web3d.x3d.jsail.fields.SFMatrix4f')
MFMatrix4f = Java.type('org.web3d.x3d.jsail.fields.MFMatrix4f')
SFNode = Java.type('org.web3d.x3d.jsail.fields.SFNode')
MFNode = Java.type('org.web3d.x3d.jsail.fields.MFNode')
SFRotation = Java.type('org.web3d.x3d.jsail.fields.SFRotation')
MFRotation = Java.type('org.web3d.x3d.jsail.fields.MFRotation')
SFString = Java.type('org.web3d.x3d.jsail.fields.SFString')
MFString = Java.type('org.web3d.x3d.jsail.fields.MFString')
SFTime = Java.type('org.web3d.x3d.jsail.fields.SFTime')
MFTime = Java.type('org.web3d.x3d.jsail.fields.MFTime')
SFVec2d = Java.type('org.web3d.x3d.jsail.fields.SFVec2d')
MFVec2d = Java.type('org.web3d.x3d.jsail.fields.MFVec2d')
SFVec2f = Java.type('org.web3d.x3d.jsail.fields.SFVec2f')
MFVec2f = Java.type('org.web3d.x3d.jsail.fields.MFVec2f')
SFVec3d = Java.type('org.web3d.x3d.jsail.fields.SFVec3d')
MFVec3d = Java.type('org.web3d.x3d.jsail.fields.MFVec3d')
SFVec3f = Java.type('org.web3d.x3d.jsail.fields.SFVec3f')
MFVec3f = Java.type('org.web3d.x3d.jsail.fields.MFVec3f')
SFVec4d = Java.type('org.web3d.x3d.jsail.fields.SFVec4d')
MFVec4d = Java.type('org.web3d.x3d.jsail.fields.MFVec4d')
SFVec4f = Java.type('org.web3d.x3d.jsail.fields.SFVec4f')
MFVec4f = Java.type('org.web3d.x3d.jsail.fields.MFVec4f')
var ConfigurationProperties = Packages.org.web3d.x3d.jsail.ConfigurationProperties;
ConfigurationProperties.showDefaultAttributes = false;
ConfigurationProperties.xsltEngine = ConfigurationProperties.XSLT_ENGINE_NATIVE_JAVA;
ConfigurationProperties.deleteIntermediateFiles = false;
ConfigurationProperties.setStripTrailingZeroes(true);
ConfigurationProperties.setStripDefaultAttributes(true);
function doubleToFloat(d) {
    if (Float32Array)
	return new Float32Array(d);
}
      var X3D0 =  new X3D().setProfile("Immersive").setVersion("4.0")
      .setHead(new head()
        .addComponent(new component().setName("HAnim").setLevel(1))
        .addMeta(new meta().setName("title").setContent("HAnimModelFootRight.x3d"))
        .addMeta(new meta().setName("description").setContent("Right foot, using high-fidelity definitions for HAnim version 2.0"))
        .addMeta(new meta().setName("creator").setContent("Kwan-Hee YOO, Don Brutzman and Joe Williams"))
        .addMeta(new meta().setName("created").setContent("26 January 2015"))
        .addMeta(new meta().setName("modified").setContent("23 December 2021"))
        .addMeta(new meta().setName("warning").setContent("not yet to scale"))
        .addMeta(new meta().setName("TODO").setContent("Update all values to match HAnim2 A.7 Level of articulation four LOA-4"))
        .addMeta(new meta().setName("TODO").setContent("Add links to figures"))
        .addMeta(new meta().setName("TODO").setContent("Add Viewpoints to enable inspection"))
        .addMeta(new meta().setName("info").setContent("TODO describe how to compute and apply offsets for center values whenever attaching this appendage to a body"))
        .addMeta(new meta().setName("warning").setContent("TODO will X3D HAnim component add a new level to support LOA-4 functionality?"))
        .addMeta(new meta().setName("reference").setContent("https://www.web3d.org/working-groups/humanoid-animation-HAnim"))
        .addMeta(new meta().setName("reference").setContent("https://www.web3d.org/documents/specifications/19774/V2.0"))
        .addMeta(new meta().setName("reference").setContent("https://www.web3d.org/documents/specifications/19774/V2.0/Architecture/concepts.html#TheFeet"))
        .addMeta(new meta().setName("reference").setContent("https://www.web3d.org/documents/specifications/19774/V2.0/Architecture/concepts.html#f-FootJoints"))
        .addMeta(new meta().setName("reference").setContent("https://www.web3d.org/documents/specifications/19774/V2.0/Architecture/concepts.html#Hierarchy4"))
        .addMeta(new meta().setName("reference").setContent("https://www.web3d.org/specifications/X3Dv4Draft/ISO-IEC19775-1v4-WD2/Part01/components/hanim.html"))
        .addMeta(new meta().setName("subject").setContent("X3D HAnim humanoid animation"))
        .addMeta(new meta().setName("TODO").setContent("Integrate and confirm Segment/Joint names, Viewpoints."))
        .addMeta(new meta().setName("identifier").setContent("https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Characters/HAnimModelFootRight.x3d"))
        .addMeta(new meta().setName("generator").setContent("X3D-Edit 3.3, https://savage.nps.edu/X3D-Edit"))
        .addMeta(new meta().setName("license").setContent("../license.html")))
      .setScene(new Scene()
        .addChild(new WorldInfo().setTitle("HAnimModelFootRight.x3d"))
        .addChild(new HAnimHumanoid().setName("Foot_Right").setDEF("hanim_Foot_Right").setLoa(4).setVersion("2.0")
          .addComments(new CommentsBlock("original HAnimHumanoid info='\"authorName=Kwan-Hee YOO, Don Brutzman and Joe Williams\"'"))
          .setMetadata(new MetadataSet().setName("HAnimHumanoid.info").setReference("https://www.web3d.org/documents/specifications/19774/V2.0/Architecture/ObjectInterfaces.html#Humanoid")
            .addValue(new MetadataString().setName("authorName").setValue(Java.to(["Kwan-Hee YOO, Don Brutzman and Joe Williams"], Java.type("java.lang.String[]")))))
          .addSkeleton(new HAnimJoint("hanim_Foot_Right").setName("humanoid_root").setDEF("hanim_humanoid_root").setUlimit(Java.to(doubleToFloat([0,0,0]), Java.type("float[]"))).setLlimit(Java.to(doubleToFloat([0,0,0]), Java.type("float[]"))).setContainerFieldOverride("skeleton")
            .addComments(new CommentsBlock("Might consider putting a HAnimSegment here, but that doesn't help with re-use of this foot model"))
            .addChild(new HAnimJoint("hanim_humanoid_root").setName("r_talocrural").setDEF("hanim_r_talocrural").setDescription("connection joint of foot to leg above").setUlimit(Java.to(doubleToFloat([0,0,0]), Java.type("float[]"))).setLlimit(Java.to(doubleToFloat([0,0,0]), Java.type("float[]")))
              .addChild(new HAnimSegment("hanim_r_talocrural").setName("r_talus").setDEF("hanim_r_talus")
                .addChild(new Transform()
                  .addChild(new Shape().setDEF("HAnimJointShape")
                    .setGeometry(new Sphere().setRadius(0.025))
                    .setAppearance(new Appearance().setDEF("HAnimJointAppearance")
                      .setMaterial(new Material().setDiffuseColor(Java.to(doubleToFloat([0,0,1]), Java.type("float[]")))))))
                .addChild(new Shape()
                  .setAppearance(new Appearance()
                    .setMaterial(new Material().setEmissiveColor(Java.to(doubleToFloat([1,1,1]), Java.type("float[]")))))
                  .setGeometry(new IndexedLineSet().setDEF("TCtoTCN").setCoordIndex(Java.to([0,1], Java.type("int[]")))
                    .setCoord(new Coordinate().setPoint(Java.to(doubleToFloat([0,0,0,0,-0.3,0]), Java.type("float[]"))))))
                .addChild(new Shape()
                  .setAppearance(new Appearance()
                    .setMaterial(new Material().setEmissiveColor(Java.to(doubleToFloat([1,1,1]), Java.type("float[]")))))
                  .setGeometry(new IndexedLineSet().setDEF("TCtoCC").setCoordIndex(Java.to([0,1], Java.type("int[]")))
                    .setCoord(new Coordinate().setPoint(Java.to(doubleToFloat([0,0,0,-0.2,0.3,0]), Java.type("float[]")))))))
              .addComments(new CommentsBlock("TCN"))
              .addChild(new HAnimJoint("hanim_r_talocrural").setName("r_talocalcaneonavicular").setDEF("hanim_r_talocalcaneonavicular").setCenter(Java.to(doubleToFloat([0,-0.3,0]), Java.type("float[]"))).setUlimit(Java.to(doubleToFloat([0,0,0]), Java.type("float[]"))).setLlimit(Java.to(doubleToFloat([0,0,0]), Java.type("float[]")))
                .addChild(new HAnimSegment("hanim_r_talocalcaneonavicular").setName("r_navicular").setDEF("hanim_r_navicular")
                  .addChild(new Transform().setTranslation(Java.to(doubleToFloat([0,-0.3,0]), Java.type("float[]")))
                    .addChild(new Shape().setUSE("HAnimJointShape")))
                  .addChild(new Shape()
                    .setAppearance(new Appearance()
                      .setMaterial(new Material().setEmissiveColor(Java.to(doubleToFloat([1,1,1]), Java.type("float[]")))))
                    .setGeometry(new IndexedLineSet().setDEF("TCNtoCN1").setCoordIndex(Java.to([0,1], Java.type("int[]")))
                      .setCoord(new Coordinate().setPoint(Java.to(doubleToFloat([0,-0.3,0,0.1,-0.45,0]), Java.type("float[]"))))))
                  .addChild(new Shape()
                    .setAppearance(new Appearance()
                      .setMaterial(new Material().setEmissiveColor(Java.to(doubleToFloat([1,1,1]), Java.type("float[]")))))
                    .setGeometry(new IndexedLineSet().setDEF("TCNtoCN2").setCoordIndex(Java.to([0,1], Java.type("int[]")))
                      .setCoord(new Coordinate().setPoint(Java.to(doubleToFloat([0,-0.3,0,0,-0.45,0]), Java.type("float[]"))))))
                  .addChild(new Shape()
                    .setAppearance(new Appearance()
                      .setMaterial(new Material().setEmissiveColor(Java.to(doubleToFloat([1,1,1]), Java.type("float[]")))))
                    .setGeometry(new IndexedLineSet().setDEF("TCNtoCN3").setCoordIndex(Java.to([0,1], Java.type("int[]")))
                      .setCoord(new Coordinate().setPoint(Java.to(doubleToFloat([0,-0.3,0,-0.1,-0.4,0]), Java.type("float[]")))))))
                .addComments(new CommentsBlock("CN1"))
                .addChild(new HAnimJoint("hanim_r_talocalcaneonavicular").setName("r_cuneonavicular_1").setDEF("hanim_r_cuneonavicular_1").setCenter(Java.to(doubleToFloat([0.1,-0.45,0]), Java.type("float[]"))).setUlimit(Java.to(doubleToFloat([0,0,0]), Java.type("float[]"))).setLlimit(Java.to(doubleToFloat([0,0,0]), Java.type("float[]")))
                  .addChild(new HAnimSegment("hanim_r_cuneonavicular_1").setName("r_cuneiform_1").setDEF("hanim_r_cuneiform_1")
                    .addChild(new Transform().setTranslation(Java.to(doubleToFloat([0.1,-0.45,0]), Java.type("float[]")))
                      .addChild(new Shape().setUSE("HAnimJointShape")))
                    .addChild(new Shape()
                      .setAppearance(new Appearance()
                        .setMaterial(new Material().setEmissiveColor(Java.to(doubleToFloat([1,1,1]), Java.type("float[]")))))
                      .setGeometry(new IndexedLineSet().setDEF("CN1toTMT1").setCoordIndex(Java.to([0,1], Java.type("int[]")))
                        .setCoord(new Coordinate().setPoint(Java.to(doubleToFloat([0.1,-0.45,0,0.1,-0.6,0]), Java.type("float[]")))))))
                  .addChild(new HAnimJoint("hanim_r_cuneonavicular_1").setName("r_tarsometatarsal_1").setDEF("hanim_r_tarsometatarsal_1").setCenter(Java.to(doubleToFloat([0.1,-0.6,0]), Java.type("float[]"))).setUlimit(Java.to(doubleToFloat([0,0,0]), Java.type("float[]"))).setLlimit(Java.to(doubleToFloat([0,0,0]), Java.type("float[]")))
                    .addChild(new HAnimSegment("hanim_r_tarsometatarsal_1").setName("r_metatarsal_1").setDEF("hanim_r_metatarsal_1")
                      .addChild(new Transform().setTranslation(Java.to(doubleToFloat([0.1,-0.6,0]), Java.type("float[]")))
                        .addChild(new Shape().setUSE("HAnimJointShape")))
                      .addChild(new Shape()
                        .setAppearance(new Appearance()
                          .setMaterial(new Material().setEmissiveColor(Java.to(doubleToFloat([1,1,1]), Java.type("float[]")))))
                        .setGeometry(new IndexedLineSet().setDEF("TMT1toMTP1").setCoordIndex(Java.to([0,1], Java.type("int[]")))
                          .setCoord(new Coordinate().setPoint(Java.to(doubleToFloat([0.1,-0.6,0,0.1,-0.9,0]), Java.type("float[]")))))))
                    .addChild(new HAnimJoint("hanim_r_tarsometatarsal_1").setName("r_metatarsophalangeal_1").setDEF("hanim_r_metatarsophalangeal_1").setCenter(Java.to(doubleToFloat([0.1,-0.9,0]), Java.type("float[]"))).setUlimit(Java.to(doubleToFloat([0,0,0]), Java.type("float[]"))).setLlimit(Java.to(doubleToFloat([0,0,0]), Java.type("float[]")))
                      .addChild(new HAnimSegment("hanim_r_metatarsophalangeal_1").setName("r_tarsal_proximal_phalanx_1").setDEF("hanim_r_tarsal_proximal_phalanx_1")
                        .addChild(new Transform().setTranslation(Java.to(doubleToFloat([0.1,-0.9,0]), Java.type("float[]")))
                          .addChild(new Shape().setUSE("HAnimJointShape")))
                        .addChild(new Shape()
                          .setAppearance(new Appearance()
                            .setMaterial(new Material().setEmissiveColor(Java.to(doubleToFloat([1,1,1]), Java.type("float[]")))))
                          .setGeometry(new IndexedLineSet().setDEF("MTP1toIP1").setCoordIndex(Java.to([0,1], Java.type("int[]")))
                            .setCoord(new Coordinate().setPoint(Java.to(doubleToFloat([0.1,-0.9,0,0.1,-1.05,0]), Java.type("float[]")))))))
                      .addChild(new HAnimJoint("hanim_r_metatarsophalangeal_1").setName("r_tarsal_interphalangeal_1").setDEF("hanim_r_tarsal_interphalangeal_1").setCenter(Java.to(doubleToFloat([0.1,-1.05,0]), Java.type("float[]"))).setUlimit(Java.to(doubleToFloat([0,0,0]), Java.type("float[]"))).setLlimit(Java.to(doubleToFloat([0,0,0]), Java.type("float[]")))
                        .addChild(new HAnimSegment("hanim_r_tarsal_interphalangeal_1").setName("r_tarsal_distal_phalanx_1").setDEF("hanim_r_tarsal_distal_phalanx_1")
                          .addChild(new Transform().setTranslation(Java.to(doubleToFloat([0.1,-1.05,0]), Java.type("float[]")))
                            .addChild(new Shape().setUSE("HAnimJointShape")))
                          .addChild(new Shape()
                            .setAppearance(new Appearance()
                              .setMaterial(new Material().setEmissiveColor(Java.to(doubleToFloat([1,1,1]), Java.type("float[]")))))
                            .setGeometry(new IndexedLineSet().setDEF("tiptoe_r_interphalangeal_").setCoordIndex(Java.to([0,1], Java.type("int[]")))
                              .setCoord(new Coordinate().setPoint(Java.to(doubleToFloat([0.1,-1.05,0,0.1,-1.1,0]), Java.type("float[]")))))))))))
                .addComments(new CommentsBlock("CN2"))
                .addChild(new HAnimJoint("hanim_r_talocalcaneonavicular").setName("r_cuneonavicular_2").setDEF("hanim_r_cuneonavicular_2").setCenter(Java.to(doubleToFloat([0,-0.45,0]), Java.type("float[]"))).setUlimit(Java.to(doubleToFloat([0,0,0]), Java.type("float[]"))).setLlimit(Java.to(doubleToFloat([0,0,0]), Java.type("float[]")))
                  .addChild(new HAnimSegment("hanim_r_cuneonavicular_2").setName("r_cuneiform_2").setDEF("hanim_r_cuneiform_2")
                    .addChild(new Transform().setTranslation(Java.to(doubleToFloat([0,-0.45,0]), Java.type("float[]")))
                      .addChild(new Shape().setUSE("HAnimJointShape")))
                    .addChild(new Shape()
                      .setAppearance(new Appearance()
                        .setMaterial(new Material().setEmissiveColor(Java.to(doubleToFloat([1,1,1]), Java.type("float[]")))))
                      .setGeometry(new IndexedLineSet().setDEF("CN2toTMT2").setCoordIndex(Java.to([0,1], Java.type("int[]")))
                        .setCoord(new Coordinate().setPoint(Java.to(doubleToFloat([0,-0.45,0,-0.05,-0.6,0]), Java.type("float[]")))))))
                  .addChild(new HAnimJoint("hanim_r_cuneonavicular_2").setName("r_tarsometatarsal_2").setDEF("hanim_r_tarsometatarsal_2").setCenter(Java.to(doubleToFloat([-0.05,-0.6,0]), Java.type("float[]"))).setUlimit(Java.to(doubleToFloat([0,0,0]), Java.type("float[]"))).setLlimit(Java.to(doubleToFloat([0,0,0]), Java.type("float[]")))
                    .addChild(new HAnimSegment("hanim_r_tarsometatarsal_2").setName("r_metatarsal_2").setDEF("hanim_r_metatarsal_2")
                      .addChild(new Transform().setTranslation(Java.to(doubleToFloat([-0.05,-0.6,0]), Java.type("float[]")))
                        .addChild(new Shape().setUSE("HAnimJointShape")))
                      .addChild(new Shape()
                        .setAppearance(new Appearance()
                          .setMaterial(new Material().setEmissiveColor(Java.to(doubleToFloat([1,1,1]), Java.type("float[]")))))
                        .setGeometry(new IndexedLineSet().setDEF("TMT2toMTP2").setCoordIndex(Java.to([0,1], Java.type("int[]")))
                          .setCoord(new Coordinate().setPoint(Java.to(doubleToFloat([-0.05,-0.6,0,-0.05,-0.9,0]), Java.type("float[]")))))))
                    .addChild(new HAnimJoint("hanim_r_tarsometatarsal_2").setName("r_metatarsophalangeal_2").setDEF("hanim_r_metatarsophalangeal_2").setCenter(Java.to(doubleToFloat([-0.05,-0.9,0]), Java.type("float[]"))).setUlimit(Java.to(doubleToFloat([0,0,0]), Java.type("float[]"))).setLlimit(Java.to(doubleToFloat([0,0,0]), Java.type("float[]")))
                      .addChild(new HAnimSegment("hanim_r_metatarsophalangeal_2").setName("r_tarsal_proximal_phalanx_2").setDEF("hanim_r_tarsal_proximal_phalanx_2")
                        .addChild(new Transform().setTranslation(Java.to(doubleToFloat([-0.05,-0.9,0]), Java.type("float[]")))
                          .addChild(new Shape().setUSE("HAnimJointShape")))
                        .addChild(new Shape()
                          .setAppearance(new Appearance()
                            .setMaterial(new Material().setEmissiveColor(Java.to(doubleToFloat([1,1,1]), Java.type("float[]")))))
                          .setGeometry(new IndexedLineSet().setDEF("MTP2toPIP2").setCoordIndex(Java.to([0,1], Java.type("int[]")))
                            .setCoord(new Coordinate().setPoint(Java.to(doubleToFloat([-0.05,-0.9,0,-0.05,-1.05,0]), Java.type("float[]")))))))
                      .addChild(new HAnimJoint("hanim_r_metatarsophalangeal_2").setName("r_tarsal_proximal_interphalangeal_2").setDEF("hanim_r_tarsal_proximal_interphalangeal_2").setCenter(Java.to(doubleToFloat([-0.05,-1.05,0]), Java.type("float[]"))).setUlimit(Java.to(doubleToFloat([0,0,0]), Java.type("float[]"))).setLlimit(Java.to(doubleToFloat([0,0,0]), Java.type("float[]")))
                        .addChild(new HAnimSegment("hanim_r_tarsal_proximal_interphalangeal_2").setName("r_tarsal_middle_phalanx_2").setDEF("hanim_r_tarsal_middle_phalanx_2")
                          .addChild(new Transform().setTranslation(Java.to(doubleToFloat([-0.05,-1.05,0]), Java.type("float[]")))
                            .addChild(new Shape().setUSE("HAnimJointShape")))
                          .addChild(new Shape()
                            .setAppearance(new Appearance()
                              .setMaterial(new Material().setEmissiveColor(Java.to(doubleToFloat([1,1,1]), Java.type("float[]")))))
                            .setGeometry(new IndexedLineSet().setDEF("PIP2toDIP2").setCoordIndex(Java.to([0,1], Java.type("int[]")))
                              .setCoord(new Coordinate().setPoint(Java.to(doubleToFloat([-0.05,-1.05,0,-0.05,-1.12,0]), Java.type("float[]")))))))
                        .addChild(new HAnimJoint("hanim_r_tarsal_proximal_interphalangeal_2").setName("r_tarsal_distal_interphalangeal_2").setDEF("hanim_r_tarsal_distal_interphalangeal_2").setCenter(Java.to(doubleToFloat([-0.05,-1.12,0]), Java.type("float[]"))).setUlimit(Java.to(doubleToFloat([0,0,0]), Java.type("float[]"))).setLlimit(Java.to(doubleToFloat([0,0,0]), Java.type("float[]")))
                          .addChild(new HAnimSegment("hanim_r_tarsal_distal_interphalangeal_2").setName("r_tarsal_distal_phalanx_2").setDEF("hanim_r_tarsal_distal_phalanx_2")
                            .addChild(new Transform().setTranslation(Java.to(doubleToFloat([-0.05,-1.12,0]), Java.type("float[]")))
                              .addChild(new Shape().setUSE("HAnimJointShape")))
                            .addChild(new Shape()
                              .setAppearance(new Appearance()
                                .setMaterial(new Material().setEmissiveColor(Java.to(doubleToFloat([1,1,1]), Java.type("float[]")))))
                              .setGeometry(new IndexedLineSet().setDEF("tiptoe_r_tarsal_distal_interphalangeal_2").setCoordIndex(Java.to([0,1], Java.type("int[]")))
                                .setCoord(new Coordinate().setPoint(Java.to(doubleToFloat([-0.05,-1.12,0,-0.05,-1.16,0]), Java.type("float[]"))))))))))))
                .addComments(new CommentsBlock("CN3"))
                .addChild(new HAnimJoint("hanim_r_talocalcaneonavicular").setName("r_cuneonavicular_3").setDEF("hanim_r_cuneonavicular_3").setCenter(Java.to(doubleToFloat([-0.1,-0.4,0]), Java.type("float[]"))).setUlimit(Java.to(doubleToFloat([0,0,0]), Java.type("float[]"))).setLlimit(Java.to(doubleToFloat([0,0,0]), Java.type("float[]")))
                  .addChild(new HAnimSegment("hanim_r_cuneonavicular_3").setName("r_cuneiform_3").setDEF("hanim_r_cuneiform_3")
                    .addChild(new Transform().setTranslation(Java.to(doubleToFloat([-0.1,-0.4,0]), Java.type("float[]")))
                      .addChild(new Shape().setUSE("HAnimJointShape")))
                    .addChild(new Shape()
                      .setAppearance(new Appearance()
                        .setMaterial(new Material().setEmissiveColor(Java.to(doubleToFloat([1,1,1]), Java.type("float[]")))))
                      .setGeometry(new IndexedLineSet().setDEF("CN3toTMT3").setCoordIndex(Java.to([0,1], Java.type("int[]")))
                        .setCoord(new Coordinate().setPoint(Java.to(doubleToFloat([-0.1,-0.4,0,-0.15,-0.6,0]), Java.type("float[]")))))))
                  .addChild(new HAnimJoint("hanim_r_cuneonavicular_3").setName("r_tarsometatarsal_3").setDEF("hanim_r_tarsometatarsal_3").setCenter(Java.to(doubleToFloat([-0.15,-0.6,0]), Java.type("float[]"))).setUlimit(Java.to(doubleToFloat([0,0,0]), Java.type("float[]"))).setLlimit(Java.to(doubleToFloat([0,0,0]), Java.type("float[]")))
                    .addChild(new HAnimSegment("hanim_r_tarsometatarsal_3").setName("r_metatarsal_3").setDEF("hanim_r_metatarsal_3")
                      .addChild(new Transform().setTranslation(Java.to(doubleToFloat([-0.15,-0.6,0]), Java.type("float[]")))
                        .addChild(new Shape().setUSE("HAnimJointShape")))
                      .addChild(new Shape()
                        .setAppearance(new Appearance()
                          .setMaterial(new Material().setEmissiveColor(Java.to(doubleToFloat([1,1,1]), Java.type("float[]")))))
                        .setGeometry(new IndexedLineSet().setDEF("TMT3toMTP3").setCoordIndex(Java.to([0,1], Java.type("int[]")))
                          .setCoord(new Coordinate().setPoint(Java.to(doubleToFloat([-0.15,-0.6,0,-0.15,-0.9,0]), Java.type("float[]")))))))
                    .addChild(new HAnimJoint("hanim_r_tarsometatarsal_3").setName("r_metatarsophalangeal_3").setDEF("hanim_r_metatarsophalangeal_3").setCenter(Java.to(doubleToFloat([-0.15,-0.9,0]), Java.type("float[]"))).setUlimit(Java.to(doubleToFloat([0,0,0]), Java.type("float[]"))).setLlimit(Java.to(doubleToFloat([0,0,0]), Java.type("float[]")))
                      .addChild(new HAnimSegment("hanim_r_metatarsophalangeal_3").setName("r_tarsal_proximal_phalanx_3").setDEF("hanim_r_tarsal_proximal_phalanx_3")
                        .addChild(new Transform().setTranslation(Java.to(doubleToFloat([-0.15,-0.9,0]), Java.type("float[]")))
                          .addChild(new Shape().setUSE("HAnimJointShape")))
                        .addChild(new Shape()
                          .setAppearance(new Appearance()
                            .setMaterial(new Material().setEmissiveColor(Java.to(doubleToFloat([1,1,1]), Java.type("float[]")))))
                          .setGeometry(new IndexedLineSet().setDEF("MTP3toPIP3").setCoordIndex(Java.to([0,1], Java.type("int[]")))
                            .setCoord(new Coordinate().setPoint(Java.to(doubleToFloat([-0.15,-0.9,0,-0.15,-1.05,0]), Java.type("float[]")))))))
                      .addChild(new HAnimJoint("hanim_r_metatarsophalangeal_3").setName("r_tarsal_proximal_interphalangeal_3").setDEF("hanim_r_tarsal_proximal_interphalangeal_3").setCenter(Java.to(doubleToFloat([-0.15,-1.05,0]), Java.type("float[]"))).setUlimit(Java.to(doubleToFloat([0,0,0]), Java.type("float[]"))).setLlimit(Java.to(doubleToFloat([0,0,0]), Java.type("float[]")))
                        .addChild(new HAnimSegment("hanim_r_tarsal_proximal_interphalangeal_3").setName("r_tarsal_middle_phalanx_3").setDEF("hanim_r_tarsal_middle_phalanx_3")
                          .addChild(new Transform().setTranslation(Java.to(doubleToFloat([-0.15,-1.05,0]), Java.type("float[]")))
                            .addChild(new Shape().setUSE("HAnimJointShape")))
                          .addChild(new Shape()
                            .setAppearance(new Appearance()
                              .setMaterial(new Material().setEmissiveColor(Java.to(doubleToFloat([1,1,1]), Java.type("float[]")))))
                            .setGeometry(new IndexedLineSet().setDEF("PIP3toDIP3").setCoordIndex(Java.to([0,1], Java.type("int[]")))
                              .setCoord(new Coordinate().setPoint(Java.to(doubleToFloat([-0.15,-1.05,0,-0.15,-1.13,0]), Java.type("float[]")))))))
                        .addChild(new HAnimJoint("hanim_r_tarsal_proximal_interphalangeal_3").setName("r_tarsal_distal_interphalangeal_3").setDEF("hanim_r_tarsal_distal_interphalangeal_3").setCenter(Java.to(doubleToFloat([-0.15,-1.13,0]), Java.type("float[]"))).setUlimit(Java.to(doubleToFloat([0,0,0]), Java.type("float[]"))).setLlimit(Java.to(doubleToFloat([0,0,0]), Java.type("float[]")))
                          .addChild(new HAnimSegment("hanim_r_tarsal_distal_interphalangeal_3").setName("r_tarsal_distal_phalanx_3").setDEF("hanim_r_tarsal_distal_phalanx_3")
                            .addChild(new Transform().setTranslation(Java.to(doubleToFloat([-0.15,-1.13,0]), Java.type("float[]")))
                              .addChild(new Shape().setUSE("HAnimJointShape")))
                            .addChild(new Shape()
                              .setAppearance(new Appearance()
                                .setMaterial(new Material().setEmissiveColor(Java.to(doubleToFloat([1,1,1]), Java.type("float[]")))))
                              .setGeometry(new IndexedLineSet().setDEF("tiptoe_r_tarsal_distal_interphalangeal_3").setCoordIndex(Java.to([0,1], Java.type("int[]")))
                                .setCoord(new Coordinate().setPoint(Java.to(doubleToFloat([-0.15,-1.13,0,-0.15,-1.16,0]), Java.type("float[]")))))))))))))
              .addComments(new CommentsBlock("CC"))
              .addChild(new HAnimJoint("hanim_r_talocrural").setName("r_calcaneocuboid").setDEF("hanim_r_calcaneocuboid").setCenter(Java.to(doubleToFloat([-0.2,0.3,0]), Java.type("float[]"))).setUlimit(Java.to(doubleToFloat([0,0,0]), Java.type("float[]"))).setLlimit(Java.to(doubleToFloat([0,0,0]), Java.type("float[]")))
                .addChild(new HAnimSegment("hanim_r_calcaneocuboid").setName("r_calcaneus").setDEF("hanim_r_calcaneus")
                  .addChild(new Transform().setTranslation(Java.to(doubleToFloat([-0.2,0.3,0]), Java.type("float[]")))
                    .addChild(new Shape().setUSE("HAnimJointShape")))
                  .addChild(new Shape()
                    .setAppearance(new Appearance()
                      .setMaterial(new Material().setEmissiveColor(Java.to(doubleToFloat([1,1,1]), Java.type("float[]")))))
                    .setGeometry(new IndexedLineSet().setDEF("CCtoTT").setCoordIndex(Java.to([0,1], Java.type("int[]")))
                      .setCoord(new Coordinate().setPoint(Java.to(doubleToFloat([-0.2,0.3,0,-0.21,-0.3,0]), Java.type("float[]")))))))
                .addComments(new CommentsBlock("TT"))
                .addChild(new HAnimJoint("hanim_r_calcaneocuboid").setName("r_transversetarsal").setDEF("hanim_r_transversetarsal").setCenter(Java.to(doubleToFloat([-0.21,-0.3,0]), Java.type("float[]"))).setUlimit(Java.to(doubleToFloat([0,0,0]), Java.type("float[]"))).setLlimit(Java.to(doubleToFloat([0,0,0]), Java.type("float[]")))
                  .addChild(new HAnimSegment("hanim_r_transversetarsal").setName("r_cuboid").setDEF("hanim_r_cuboid")
                    .addChild(new Transform().setTranslation(Java.to(doubleToFloat([-0.21,-0.3,0]), Java.type("float[]")))
                      .addChild(new Shape().setUSE("HAnimJointShape")))
                    .addChild(new Shape()
                      .setAppearance(new Appearance()
                        .setMaterial(new Material().setEmissiveColor(Java.to(doubleToFloat([1,1,1]), Java.type("float[]")))))
                      .setGeometry(new IndexedLineSet().setDEF("TTtoTMT4").setCoordIndex(Java.to([0,1], Java.type("int[]")))
                        .setCoord(new Coordinate().setPoint(Java.to(doubleToFloat([-0.21,-0.3,0,-0.25,-0.58,0]), Java.type("float[]"))))))
                    .addChild(new Shape()
                      .setAppearance(new Appearance()
                        .setMaterial(new Material().setEmissiveColor(Java.to(doubleToFloat([1,1,1]), Java.type("float[]")))))
                      .setGeometry(new IndexedLineSet().setDEF("TTtoTMT5").setCoordIndex(Java.to([0,1], Java.type("int[]")))
                        .setCoord(new Coordinate().setPoint(Java.to(doubleToFloat([-0.21,-0.3,0,-0.33,-0.52,0]), Java.type("float[]")))))))
                  .addComments(new CommentsBlock("TMT4"))
                  .addChild(new HAnimJoint("hanim_r_transversetarsal").setName("r_tarsometatarsal_4").setDEF("hanim_r_tarsometatarsal_4").setCenter(Java.to(doubleToFloat([-0.25,-0.58,0]), Java.type("float[]"))).setUlimit(Java.to(doubleToFloat([0,0,0]), Java.type("float[]"))).setLlimit(Java.to(doubleToFloat([0,0,0]), Java.type("float[]")))
                    .addChild(new HAnimSegment("hanim_r_tarsometatarsal_4").setName("r_metatarsal_4").setDEF("hanim_r_metatarsal_4")
                      .addChild(new Transform().setTranslation(Java.to(doubleToFloat([-0.25,-0.58,0]), Java.type("float[]")))
                        .addChild(new Shape().setUSE("HAnimJointShape")))
                      .addChild(new Shape()
                        .setAppearance(new Appearance()
                          .setMaterial(new Material().setEmissiveColor(Java.to(doubleToFloat([1,1,1]), Java.type("float[]")))))
                        .setGeometry(new IndexedLineSet().setDEF("TMT4toMTP4").setCoordIndex(Java.to([0,1], Java.type("int[]")))
                          .setCoord(new Coordinate().setPoint(Java.to(doubleToFloat([-0.25,-0.58,0,-0.25,-0.87,0]), Java.type("float[]")))))))
                    .addChild(new HAnimJoint("hanim_r_tarsometatarsal_4").setName("r_metatarsophalangeal_4").setDEF("hanim_r_metatarsophalangeal_4").setCenter(Java.to(doubleToFloat([-0.25,-0.87,0]), Java.type("float[]"))).setUlimit(Java.to(doubleToFloat([0,0,0]), Java.type("float[]"))).setLlimit(Java.to(doubleToFloat([0,0,0]), Java.type("float[]")))
                      .addChild(new HAnimSegment("hanim_r_metatarsophalangeal_4").setName("r_tarsal_proximal_phalanx_4").setDEF("hanim_r_tarsal_proximal_phalanx_4")
                        .addChild(new Transform().setTranslation(Java.to(doubleToFloat([-0.25,-0.87,0]), Java.type("float[]")))
                          .addChild(new Shape().setUSE("HAnimJointShape")))
                        .addChild(new Shape()
                          .setAppearance(new Appearance()
                            .setMaterial(new Material().setEmissiveColor(Java.to(doubleToFloat([1,1,1]), Java.type("float[]")))))
                          .setGeometry(new IndexedLineSet().setDEF("MTP4toPIP4").setCoordIndex(Java.to([0,1], Java.type("int[]")))
                            .setCoord(new Coordinate().setPoint(Java.to(doubleToFloat([-0.25,-0.87,0,-0.25,-1,0]), Java.type("float[]")))))))
                      .addChild(new HAnimJoint("hanim_r_metatarsophalangeal_4").setName("r_tarsal_proximal_interphalangeal_4").setDEF("hanim_r_tarsal_proximal_interphalangeal_4").setCenter(Java.to(doubleToFloat([-0.25,-1,0]), Java.type("float[]"))).setUlimit(Java.to(doubleToFloat([0,0,0]), Java.type("float[]"))).setLlimit(Java.to(doubleToFloat([0,0,0]), Java.type("float[]")))
                        .addChild(new HAnimSegment("hanim_r_tarsal_proximal_interphalangeal_4").setName("r_tarsal_middle_phalanx_4").setDEF("hanim_r_tarsal_middle_phalanx_4")
                          .addChild(new Transform().setTranslation(Java.to(doubleToFloat([-0.25,-1,0]), Java.type("float[]")))
                            .addChild(new Shape().setUSE("HAnimJointShape")))
                          .addChild(new Shape()
                            .setAppearance(new Appearance()
                              .setMaterial(new Material().setEmissiveColor(Java.to(doubleToFloat([1,1,1]), Java.type("float[]")))))
                            .setGeometry(new IndexedLineSet().setDEF("PIP4toDIP4").setCoordIndex(Java.to([0,1], Java.type("int[]")))
                              .setCoord(new Coordinate().setPoint(Java.to(doubleToFloat([-0.25,-1,0,-0.25,-1.1,0]), Java.type("float[]")))))))
                        .addChild(new HAnimJoint("hanim_r_tarsal_proximal_interphalangeal_4").setName("r_tarsal_distal_interphalangeal_4").setDEF("hanim_r_tarsal_distal_interphalangeal_4").setCenter(Java.to(doubleToFloat([-0.25,-1.1,0]), Java.type("float[]"))).setUlimit(Java.to(doubleToFloat([0,0,0]), Java.type("float[]"))).setLlimit(Java.to(doubleToFloat([0,0,0]), Java.type("float[]")))
                          .addChild(new HAnimSegment("hanim_r_tarsal_distal_interphalangeal_4").setName("r_tarsal_distal_phalanx_4").setDEF("hanim_r_tarsal_distal_phalanx_4")
                            .addChild(new Transform().setTranslation(Java.to(doubleToFloat([-0.25,-1.1,0]), Java.type("float[]")))
                              .addChild(new Shape().setUSE("HAnimJointShape")))
                            .addChild(new Shape()
                              .setAppearance(new Appearance()
                                .setMaterial(new Material().setEmissiveColor(Java.to(doubleToFloat([1,1,1]), Java.type("float[]")))))
                              .setGeometry(new IndexedLineSet().setDEF("tiptoe_r_tarsal_distal_interphalangeal_4").setCoordIndex(Java.to([0,1], Java.type("int[]")))
                                .setCoord(new Coordinate().setPoint(Java.to(doubleToFloat([-0.25,-1.1,0,-0.25,-1.15,0]), Java.type("float[]")))))))))))
                  .addComments(new CommentsBlock("TMT5"))
                  .addChild(new HAnimJoint("hanim_r_transversetarsal").setName("r_tarsometatarsal_5").setDEF("hanim_r_tarsometatarsal_5").setCenter(Java.to(doubleToFloat([-0.33,-0.52,0]), Java.type("float[]"))).setUlimit(Java.to(doubleToFloat([0,0,0]), Java.type("float[]"))).setLlimit(Java.to(doubleToFloat([0,0,0]), Java.type("float[]")))
                    .addChild(new HAnimSegment("hanim_r_tarsometatarsal_5").setName("r_metatarsal_5").setDEF("hanim_r_metatarsal_5")
                      .addChild(new Transform().setTranslation(Java.to(doubleToFloat([-0.33,-0.52,0]), Java.type("float[]")))
                        .addChild(new Shape().setUSE("HAnimJointShape")))
                      .addChild(new Shape()
                        .setAppearance(new Appearance()
                          .setMaterial(new Material().setEmissiveColor(Java.to(doubleToFloat([1,1,1]), Java.type("float[]")))))
                        .setGeometry(new IndexedLineSet().setDEF("TMT5toMTP5").setCoordIndex(Java.to([0,1], Java.type("int[]")))
                          .setCoord(new Coordinate().setPoint(Java.to(doubleToFloat([-0.33,-0.52,0,-0.34,-0.8,0]), Java.type("float[]")))))))
                    .addChild(new HAnimJoint("hanim_r_tarsometatarsal_5").setName("r_metatarsophalangeal_5").setDEF("hanim_r_metatarsophalangeal_5").setCenter(Java.to(doubleToFloat([-0.34,-0.8,0]), Java.type("float[]"))).setUlimit(Java.to(doubleToFloat([0,0,0]), Java.type("float[]"))).setLlimit(Java.to(doubleToFloat([0,0,0]), Java.type("float[]")))
                      .addChild(new HAnimSegment("hanim_r_metatarsophalangeal_5").setName("r_tarsal_proximal_phalanx_5").setDEF("hanim_r_tarsal_proximal_phalanx_5")
                        .addChild(new Transform().setTranslation(Java.to(doubleToFloat([-0.34,-0.8,0]), Java.type("float[]")))
                          .addChild(new Shape().setUSE("HAnimJointShape")))
                        .addChild(new Shape()
                          .setAppearance(new Appearance()
                            .setMaterial(new Material().setEmissiveColor(Java.to(doubleToFloat([1,1,1]), Java.type("float[]")))))
                          .setGeometry(new IndexedLineSet().setDEF("MTP5toPIP5").setCoordIndex(Java.to([0,1], Java.type("int[]")))
                            .setCoord(new Coordinate().setPoint(Java.to(doubleToFloat([-0.34,-0.8,0,-0.34,-0.95,0]), Java.type("float[]")))))))
                      .addChild(new HAnimJoint("hanim_r_metatarsophalangeal_5").setName("r_tarsal_proximal_interphalangeal_5").setDEF("hanim_r_tarsal_proximal_interphalangeal_5").setCenter(Java.to(doubleToFloat([-0.34,-0.95,0]), Java.type("float[]"))).setUlimit(Java.to(doubleToFloat([0,0,0]), Java.type("float[]"))).setLlimit(Java.to(doubleToFloat([0,0,0]), Java.type("float[]")))
                        .addChild(new HAnimSegment("hanim_r_tarsal_proximal_interphalangeal_5").setName("r_tarsal_middle_phalanx_5").setDEF("hanim_r_tarsal_middle_phalanx_5")
                          .addChild(new Transform().setTranslation(Java.to(doubleToFloat([-0.34,-0.95,0]), Java.type("float[]")))
                            .addChild(new Shape().setUSE("HAnimJointShape")))
                          .addChild(new Shape()
                            .setAppearance(new Appearance()
                              .setMaterial(new Material().setEmissiveColor(Java.to(doubleToFloat([1,1,1]), Java.type("float[]")))))
                            .setGeometry(new IndexedLineSet().setDEF("PIP5toDIP5").setCoordIndex(Java.to([0,1], Java.type("int[]")))
                              .setCoord(new Coordinate().setPoint(Java.to(doubleToFloat([-0.34,-0.95,0,-0.34,-1.05,0]), Java.type("float[]")))))))
                        .addChild(new HAnimJoint("hanim_r_tarsal_proximal_interphalangeal_5").setName("r_tarsal_distal_interphalangeal_5").setDEF("hanim_r_tarsal_distal_interphalangeal_5").setCenter(Java.to(doubleToFloat([-0.34,-1.05,0]), Java.type("float[]"))).setUlimit(Java.to(doubleToFloat([0,0,0]), Java.type("float[]"))).setLlimit(Java.to(doubleToFloat([0,0,0]), Java.type("float[]")))
                          .addChild(new HAnimSegment("hanim_r_tarsal_distal_interphalangeal_5").setName("r_tarsal_distal_phalanx_5").setDEF("hanim_r_tarsal_distal_phalanx_5")
                            .addChild(new Transform().setTranslation(Java.to(doubleToFloat([-0.34,-1.05,0]), Java.type("float[]")))
                              .addChild(new Shape().setUSE("HAnimJointShape")))
                            .addChild(new Shape()
                              .setAppearance(new Appearance()
                                .setMaterial(new Material().setEmissiveColor(Java.to(doubleToFloat([1,1,1]), Java.type("float[]")))))
                              .setGeometry(new IndexedLineSet().setDEF("tiptoe_r_tarsal_distal_interphalangeal_5").setCoordIndex(Java.to([0,1], Java.type("int[]")))
                                .setCoord(new Coordinate().setPoint(Java.to(doubleToFloat([-0.34,-1.05,0,-0.34,-1.08,0]), Java.type("float[]")))))))))))))))
          .addJoints(new HAnimJoint("hanim_Foot_Right").setContainerFieldOverride("joints").setUSE("hanim_humanoid_root"))
          .addJoints(new HAnimJoint("hanim_Foot_Right").setContainerFieldOverride("joints").setUSE("hanim_r_calcaneocuboid"))
          .addJoints(new HAnimJoint("hanim_Foot_Right").setContainerFieldOverride("joints").setUSE("hanim_r_cuneonavicular_1"))
          .addJoints(new HAnimJoint("hanim_Foot_Right").setContainerFieldOverride("joints").setUSE("hanim_r_cuneonavicular_2"))
          .addJoints(new HAnimJoint("hanim_Foot_Right").setContainerFieldOverride("joints").setUSE("hanim_r_cuneonavicular_3"))
          .addJoints(new HAnimJoint("hanim_Foot_Right").setContainerFieldOverride("joints").setUSE("hanim_r_metatarsophalangeal_1"))
          .addJoints(new HAnimJoint("hanim_Foot_Right").setContainerFieldOverride("joints").setUSE("hanim_r_metatarsophalangeal_2"))
          .addJoints(new HAnimJoint("hanim_Foot_Right").setContainerFieldOverride("joints").setUSE("hanim_r_metatarsophalangeal_3"))
          .addJoints(new HAnimJoint("hanim_Foot_Right").setContainerFieldOverride("joints").setUSE("hanim_r_metatarsophalangeal_4"))
          .addJoints(new HAnimJoint("hanim_Foot_Right").setContainerFieldOverride("joints").setUSE("hanim_r_metatarsophalangeal_5"))
          .addJoints(new HAnimJoint("hanim_Foot_Right").setContainerFieldOverride("joints").setUSE("hanim_r_talocalcaneonavicular"))
          .addJoints(new HAnimJoint("hanim_Foot_Right").setContainerFieldOverride("joints").setUSE("hanim_r_talocrural"))
          .addJoints(new HAnimJoint("hanim_Foot_Right").setContainerFieldOverride("joints").setUSE("hanim_r_tarsal_distal_interphalangeal_2"))
          .addJoints(new HAnimJoint("hanim_Foot_Right").setContainerFieldOverride("joints").setUSE("hanim_r_tarsal_distal_interphalangeal_3"))
          .addJoints(new HAnimJoint("hanim_Foot_Right").setContainerFieldOverride("joints").setUSE("hanim_r_tarsal_distal_interphalangeal_4"))
          .addJoints(new HAnimJoint("hanim_Foot_Right").setContainerFieldOverride("joints").setUSE("hanim_r_tarsal_distal_interphalangeal_5"))
          .addJoints(new HAnimJoint("hanim_Foot_Right").setContainerFieldOverride("joints").setUSE("hanim_r_tarsal_interphalangeal_1"))
          .addJoints(new HAnimJoint("hanim_Foot_Right").setContainerFieldOverride("joints").setUSE("hanim_r_tarsal_proximal_interphalangeal_2"))
          .addJoints(new HAnimJoint("hanim_Foot_Right").setContainerFieldOverride("joints").setUSE("hanim_r_tarsal_proximal_interphalangeal_3"))
          .addJoints(new HAnimJoint("hanim_Foot_Right").setContainerFieldOverride("joints").setUSE("hanim_r_tarsal_proximal_interphalangeal_4"))
          .addJoints(new HAnimJoint("hanim_Foot_Right").setContainerFieldOverride("joints").setUSE("hanim_r_tarsal_proximal_interphalangeal_5"))
          .addJoints(new HAnimJoint("hanim_Foot_Right").setContainerFieldOverride("joints").setUSE("hanim_r_tarsometatarsal_1"))
          .addJoints(new HAnimJoint("hanim_Foot_Right").setContainerFieldOverride("joints").setUSE("hanim_r_tarsometatarsal_2"))
          .addJoints(new HAnimJoint("hanim_Foot_Right").setContainerFieldOverride("joints").setUSE("hanim_r_tarsometatarsal_3"))
          .addJoints(new HAnimJoint("hanim_Foot_Right").setContainerFieldOverride("joints").setUSE("hanim_r_tarsometatarsal_4"))
          .addJoints(new HAnimJoint("hanim_Foot_Right").setContainerFieldOverride("joints").setUSE("hanim_r_tarsometatarsal_5"))
          .addJoints(new HAnimJoint("hanim_Foot_Right").setContainerFieldOverride("joints").setUSE("hanim_r_transversetarsal"))
          .addSegments(new HAnimSegment("hanim_Foot_Right").setContainerFieldOverride("segments").setUSE("hanim_r_calcaneus"))
          .addSegments(new HAnimSegment("hanim_Foot_Right").setContainerFieldOverride("segments").setUSE("hanim_r_cuboid"))
          .addSegments(new HAnimSegment("hanim_Foot_Right").setContainerFieldOverride("segments").setUSE("hanim_r_cuneiform_1"))
          .addSegments(new HAnimSegment("hanim_Foot_Right").setContainerFieldOverride("segments").setUSE("hanim_r_cuneiform_2"))
          .addSegments(new HAnimSegment("hanim_Foot_Right").setContainerFieldOverride("segments").setUSE("hanim_r_cuneiform_3"))
          .addSegments(new HAnimSegment("hanim_Foot_Right").setContainerFieldOverride("segments").setUSE("hanim_r_metatarsal_1"))
          .addSegments(new HAnimSegment("hanim_Foot_Right").setContainerFieldOverride("segments").setUSE("hanim_r_metatarsal_2"))
          .addSegments(new HAnimSegment("hanim_Foot_Right").setContainerFieldOverride("segments").setUSE("hanim_r_metatarsal_3"))
          .addSegments(new HAnimSegment("hanim_Foot_Right").setContainerFieldOverride("segments").setUSE("hanim_r_metatarsal_4"))
          .addSegments(new HAnimSegment("hanim_Foot_Right").setContainerFieldOverride("segments").setUSE("hanim_r_metatarsal_5"))
          .addSegments(new HAnimSegment("hanim_Foot_Right").setContainerFieldOverride("segments").setUSE("hanim_r_navicular"))
          .addSegments(new HAnimSegment("hanim_Foot_Right").setContainerFieldOverride("segments").setUSE("hanim_r_talus"))
          .addSegments(new HAnimSegment("hanim_Foot_Right").setContainerFieldOverride("segments").setUSE("hanim_r_tarsal_distal_phalanx_1"))
          .addSegments(new HAnimSegment("hanim_Foot_Right").setContainerFieldOverride("segments").setUSE("hanim_r_tarsal_distal_phalanx_2"))
          .addSegments(new HAnimSegment("hanim_Foot_Right").setContainerFieldOverride("segments").setUSE("hanim_r_tarsal_distal_phalanx_3"))
          .addSegments(new HAnimSegment("hanim_Foot_Right").setContainerFieldOverride("segments").setUSE("hanim_r_tarsal_distal_phalanx_4"))
          .addSegments(new HAnimSegment("hanim_Foot_Right").setContainerFieldOverride("segments").setUSE("hanim_r_tarsal_distal_phalanx_5"))
          .addSegments(new HAnimSegment("hanim_Foot_Right").setContainerFieldOverride("segments").setUSE("hanim_r_tarsal_middle_phalanx_2"))
          .addSegments(new HAnimSegment("hanim_Foot_Right").setContainerFieldOverride("segments").setUSE("hanim_r_tarsal_middle_phalanx_3"))
          .addSegments(new HAnimSegment("hanim_Foot_Right").setContainerFieldOverride("segments").setUSE("hanim_r_tarsal_middle_phalanx_4"))
          .addSegments(new HAnimSegment("hanim_Foot_Right").setContainerFieldOverride("segments").setUSE("hanim_r_tarsal_middle_phalanx_5"))
          .addSegments(new HAnimSegment("hanim_Foot_Right").setContainerFieldOverride("segments").setUSE("hanim_r_tarsal_proximal_phalanx_1"))
          .addSegments(new HAnimSegment("hanim_Foot_Right").setContainerFieldOverride("segments").setUSE("hanim_r_tarsal_proximal_phalanx_2"))
          .addSegments(new HAnimSegment("hanim_Foot_Right").setContainerFieldOverride("segments").setUSE("hanim_r_tarsal_proximal_phalanx_3"))
          .addSegments(new HAnimSegment("hanim_Foot_Right").setContainerFieldOverride("segments").setUSE("hanim_r_tarsal_proximal_phalanx_4"))
          .addSegments(new HAnimSegment("hanim_Foot_Right").setContainerFieldOverride("segments").setUSE("hanim_r_tarsal_proximal_phalanx_5"))))      ;
    X3D0.toFileX3D("../data/HAnimModelFootRight.new.graal.x3d");
    X3D0.toFileJSON("../data/HAnimModelFootRight.new.graal.json");
