load('X3Dautoclass.js');
var ConfigurationProperties = Packages.org.web3d.x3d.jsail.ConfigurationProperties;
ConfigurationProperties.showDefaultAttributes = false;
ConfigurationProperties.xsltEngine = ConfigurationProperties.XSLT_ENGINE_NATIVE_JAVA;
ConfigurationProperties.deleteIntermediateFiles = false;
ConfigurationProperties.setStripTrailingZeroes(true);
function doubleToFloat(d) {
    if (Float32Array)
	return new Float32Array([d])[0];
}
      var X3D0 =  new X3D().setProfile("Immersive").setVersion("3.3")
      .setHead(new head()
        .addMeta(new meta().setName("title").setContent("LOA1_RunAnimation.x3d"))
        .addMeta(new meta().setName("description").setContent("Humanoid animation prototype reusable by any Humanoid."))
        .addMeta(new meta().setName("creator").setContent("Cindy Ballreich cindy@ballreich.net 3Name3D"))
        .addMeta(new meta().setName("rights").setContent("1997 3Name3D / Yglesias, Wallock, Divekar, Inc., all rights reserved."))
        .addMeta(new meta().setName("translator").setContent("Ozan APAYDIN"))
        .addMeta(new meta().setName("translated").setContent("30 October 2001"))
        .addMeta(new meta().setName("modified").setContent("23 May 2020"))
        .addMeta(new meta().setName("reference").setContent("http://www.ballreich.net/vrml/HAnim/nancy_HAnim.wrl"))
        .addMeta(new meta().setName("reference").setContent("http://www.HAnim.org"))
        .addMeta(new meta().setName("reference").setContent("http://HAnim.org/Models"))
        .addMeta(new meta().setName("reference").setContent("http://HAnim.org/Nodes"))
        .addMeta(new meta().setName("subject").setContent("Nancy Run Animation HAnim 2001"))
        .addMeta(new meta().setName("identifier").setContent("https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Prototypes/LOA1_RunAnimation.x3d"))
        .addMeta(new meta().setName("generator").setContent("X3D-Edit 3.3, https://savage.nps.edu/X3D-Edit"))
        .addMeta(new meta().setName("license").setContent("../license.html")))
      .setScene(new Scene()
        .addChild(new WorldInfo().setTitle("LOA1_RunAnimation.x3d"))
        .addChild(new ProtoDeclare().setName("LOA1_RunAnimation")
          .setProtoInterface(new ProtoInterface()
            .addField(new field().setType(field.TYPE_SFTIME).setName("cycleInterval").setAccessType(field.ACCESSTYPE_INPUTOUTPUT).setValue("1"))
            .addField(new field().setType(field.TYPE_SFBOOL).setName("enabled").setAccessType(field.ACCESSTYPE_INPUTOUTPUT).setValue("true"))
            .addField(new field().setType(field.TYPE_SFBOOL).setName("loop").setAccessType(field.ACCESSTYPE_INPUTOUTPUT).setValue("true"))
            .addField(new field().setType(field.TYPE_SFTIME).setName("startTime").setAccessType(field.ACCESSTYPE_INPUTOUTPUT).setValue("0"))
            .addField(new field().setType(field.TYPE_SFTIME).setName("stopTime").setAccessType(field.ACCESSTYPE_INPUTOUTPUT).setValue("-1"))
            .addField(new field().setType(field.TYPE_SFFLOAT).setName("fraction_changed").setAccessType(field.ACCESSTYPE_OUTPUTONLY))
            .addField(new field().setType(field.TYPE_SFBOOL).setName("isActive").setAccessType(field.ACCESSTYPE_OUTPUTONLY))
            .addField(new field().setType(field.TYPE_SFVEC3F).setName("HumanoidRoot_translation_changed").setAccessType(field.ACCESSTYPE_OUTPUTONLY))
            .addField(new field().setType(field.TYPE_SFROTATION).setName("HumanoidRoot_rotation_changed").setAccessType(field.ACCESSTYPE_OUTPUTONLY))
            .addField(new field().setType(field.TYPE_SFROTATION).setName("lower_body_rotation_changed").setAccessType(field.ACCESSTYPE_OUTPUTONLY))
            .addField(new field().setType(field.TYPE_SFROTATION).setName("l_hip_rotation_changed").setAccessType(field.ACCESSTYPE_OUTPUTONLY))
            .addField(new field().setType(field.TYPE_SFROTATION).setName("l_knee_rotation_changed").setAccessType(field.ACCESSTYPE_OUTPUTONLY))
            .addField(new field().setType(field.TYPE_SFROTATION).setName("l_ankle_rotation_changed").setAccessType(field.ACCESSTYPE_OUTPUTONLY))
            .addField(new field().setType(field.TYPE_SFROTATION).setName("l_midtarsal_rotation_changed").setAccessType(field.ACCESSTYPE_OUTPUTONLY))
            .addField(new field().setType(field.TYPE_SFROTATION).setName("r_hip_rotation_changed").setAccessType(field.ACCESSTYPE_OUTPUTONLY))
            .addField(new field().setType(field.TYPE_SFROTATION).setName("r_knee_rotation_changed").setAccessType(field.ACCESSTYPE_OUTPUTONLY))
            .addField(new field().setType(field.TYPE_SFROTATION).setName("r_ankle_rotation_changed").setAccessType(field.ACCESSTYPE_OUTPUTONLY))
            .addField(new field().setType(field.TYPE_SFROTATION).setName("r_midtarsal_rotation_changed").setAccessType(field.ACCESSTYPE_OUTPUTONLY))
            .addField(new field().setType(field.TYPE_SFROTATION).setName("vl5_rotation_changed").setAccessType(field.ACCESSTYPE_OUTPUTONLY))
            .addField(new field().setType(field.TYPE_SFROTATION).setName("skullbase_rotation_changed").setAccessType(field.ACCESSTYPE_OUTPUTONLY))
            .addField(new field().setType(field.TYPE_SFROTATION).setName("l_shoulder_rotation_changed").setAccessType(field.ACCESSTYPE_OUTPUTONLY))
            .addField(new field().setType(field.TYPE_SFROTATION).setName("l_elbow_rotation_changed").setAccessType(field.ACCESSTYPE_OUTPUTONLY))
            .addField(new field().setType(field.TYPE_SFROTATION).setName("l_wrist_rotation_changed").setAccessType(field.ACCESSTYPE_OUTPUTONLY))
            .addField(new field().setType(field.TYPE_SFROTATION).setName("r_shoulder_rotation_changed").setAccessType(field.ACCESSTYPE_OUTPUTONLY))
            .addField(new field().setType(field.TYPE_SFROTATION).setName("r_elbow_rotation_changed").setAccessType(field.ACCESSTYPE_OUTPUTONLY))
            .addField(new field().setType(field.TYPE_SFROTATION).setName("r_wrist_rotation_changed").setAccessType(field.ACCESSTYPE_OUTPUTONLY)))
          .setProtoBody(new ProtoBody()
            .addChild(new Group()
              .addChild(new TimeSensor().setDEF("TIMER")
                .setIS(new IS()
                  .addConnect(new connect().setNodeField("cycleInterval").setProtoField("cycleInterval"))
                  .addConnect(new connect().setNodeField("enabled").setProtoField("enabled"))
                  .addConnect(new connect().setNodeField("loop").setProtoField("loop"))
                  .addConnect(new connect().setNodeField("startTime").setProtoField("startTime"))
                  .addConnect(new connect().setNodeField("stopTime").setProtoField("stopTime"))
                  .addConnect(new connect().setNodeField("fraction_changed").setProtoField("fraction_changed"))
                  .addConnect(new connect().setNodeField("isActive").setProtoField("isActive"))))
              .addChild(new PositionInterpolator().setDEF("HUMANOIDROOT_POSITION_ANIMATOR").setKey(Java.to([doubleToFloat(0),doubleToFloat(0.2182),doubleToFloat(0.2909),doubleToFloat(0.3091),doubleToFloat(0.7091),doubleToFloat(0.8),doubleToFloat(0.8182),doubleToFloat(1)], Java.type("float[]"))).setKeyValue(Java.to([doubleToFloat(0),doubleToFloat(-0.0351),doubleToFloat(0),doubleToFloat(0),doubleToFloat(-0.0351),doubleToFloat(0),doubleToFloat(0),doubleToFloat(-0.04087),doubleToFloat(0),doubleToFloat(0),doubleToFloat(-0.04886),doubleToFloat(0),doubleToFloat(0),doubleToFloat(-0.04051),doubleToFloat(0),doubleToFloat(0),doubleToFloat(-0.03666),doubleToFloat(0),doubleToFloat(0),doubleToFloat(-0.03666),doubleToFloat(0),doubleToFloat(0),doubleToFloat(-0.0351),doubleToFloat(0)], Java.type("float[]")))
                .setIS(new IS()
                  .addConnect(new connect().setNodeField("value_changed").setProtoField("HumanoidRoot_translation_changed"))))
              .addChild(new OrientationInterpolator().setDEF("HUMANOIDROOT_ANIMATOR").setKey(Java.to([doubleToFloat(0),doubleToFloat(1)], Java.type("float[]"))).setKeyValue(Java.to([doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0)], Java.type("float[]")))
                .setIS(new IS()
                  .addConnect(new connect().setNodeField("value_changed").setProtoField("HumanoidRoot_rotation_changed"))))
              .addChild(new OrientationInterpolator().setDEF("SACROILIAC_ANIMATOR").setKey(Java.to([doubleToFloat(0),doubleToFloat(1)], Java.type("float[]"))).setKeyValue(Java.to([doubleToFloat(0.9969),doubleToFloat(-0.05444),doubleToFloat(0.05596),doubleToFloat(0.07687),doubleToFloat(0.9969),doubleToFloat(-0.05444),doubleToFloat(0.05596),doubleToFloat(0.07687)], Java.type("float[]")))
                .setIS(new IS()
                  .addConnect(new connect().setNodeField("value_changed").setProtoField("lower_body_rotation_changed"))))
              .addChild(new OrientationInterpolator().setDEF("L_HIP_ANIMATOR").setKey(Java.to([doubleToFloat(0),doubleToFloat(0.2182),doubleToFloat(0.4909),doubleToFloat(0.7455),doubleToFloat(1)], Java.type("float[]"))).setKeyValue(Java.to([doubleToFloat(-0.9986),doubleToFloat(0.03354),doubleToFloat(0.04001),doubleToFloat(1.212),doubleToFloat(-0.9889),doubleToFloat(0.1328),doubleToFloat(0.06696),doubleToFloat(0.4025),doubleToFloat(0.9894),doubleToFloat(0.1453),doubleToFloat(0.009351),doubleToFloat(0.4114),doubleToFloat(-0.9963),doubleToFloat(0.07032),doubleToFloat(0.05003),doubleToFloat(0.7035),doubleToFloat(-0.9986),doubleToFloat(0.03354),doubleToFloat(0.04001),doubleToFloat(1.212)], Java.type("float[]")))
                .setIS(new IS()
                  .addConnect(new connect().setNodeField("value_changed").setProtoField("l_hip_rotation_changed"))))
              .addChild(new OrientationInterpolator().setDEF("L_KNEE_ANIMATOR").setKey(Java.to([doubleToFloat(0),doubleToFloat(0.2182),doubleToFloat(0.4909),doubleToFloat(0.7455),doubleToFloat(1)], Java.type("float[]"))).setKeyValue(Java.to([doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1.108),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.4265),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.7052),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(2.179),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1.108)], Java.type("float[]")))
                .setIS(new IS()
                  .addConnect(new connect().setNodeField("value_changed").setProtoField("l_knee_rotation_changed"))))
              .addChild(new OrientationInterpolator().setDEF("L_ANKLE_ANIMATOR").setKey(Java.to([doubleToFloat(0),doubleToFloat(0.2182),doubleToFloat(0.3091),doubleToFloat(0.4909),doubleToFloat(1)], Java.type("float[]"))).setKeyValue(Java.to([doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.03543),doubleToFloat(-1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.1037),doubleToFloat(-1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.4328),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.1929),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.03543)], Java.type("float[]")))
                .setIS(new IS()
                  .addConnect(new connect().setNodeField("value_changed").setProtoField("l_ankle_rotation_changed"))))
              .addChild(new OrientationInterpolator().setDEF("L_MIDTARSAL_ANIMATOR").setKey(Java.to([doubleToFloat(0),doubleToFloat(0.5),doubleToFloat(1)], Java.type("float[]"))).setKeyValue(Java.to([doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(-0.2),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0)], Java.type("float[]")))
                .setIS(new IS()
                  .addConnect(new connect().setNodeField("value_changed").setProtoField("l_midtarsal_rotation_changed"))))
              .addChild(new OrientationInterpolator().setDEF("R_HIP_ANIMATOR").setKey(Java.to([doubleToFloat(0),doubleToFloat(0.2182),doubleToFloat(0.4909),doubleToFloat(0.7455),doubleToFloat(1)], Java.type("float[]"))).setKeyValue(Java.to([doubleToFloat(0.9999),doubleToFloat(0.00293),doubleToFloat(-0.00989),doubleToFloat(0.402),doubleToFloat(-1),doubleToFloat(0.004977),doubleToFloat(-0.00497),doubleToFloat(0.5943),doubleToFloat(-1),doubleToFloat(0.003265),doubleToFloat(-0.001752),doubleToFloat(1.178),doubleToFloat(-0.9999),doubleToFloat(0.00815),doubleToFloat(-0.01093),doubleToFloat(0.3031),doubleToFloat(0.9999),doubleToFloat(0.00293),doubleToFloat(-0.00989),doubleToFloat(0.402)], Java.type("float[]")))
                .setIS(new IS()
                  .addConnect(new connect().setNodeField("value_changed").setProtoField("r_hip_rotation_changed"))))
              .addChild(new OrientationInterpolator().setDEF("R_KNEE_ANIMATOR").setKey(Java.to([doubleToFloat(0),doubleToFloat(0.03636),doubleToFloat(0.2182),doubleToFloat(0.4909),doubleToFloat(0.7455),doubleToFloat(1)], Java.type("float[]"))).setKeyValue(Java.to([doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.7004),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1.011),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1.892),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1.188),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.3964),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.7004)], Java.type("float[]")))
                .setIS(new IS()
                  .addConnect(new connect().setNodeField("value_changed").setProtoField("r_knee_rotation_changed"))))
              .addChild(new OrientationInterpolator().setDEF("R_ANKLE_ANIMATOR").setKey(Java.to([doubleToFloat(0),doubleToFloat(0.4909),doubleToFloat(0.7091),doubleToFloat(0.8),doubleToFloat(0.8182),doubleToFloat(1)], Java.type("float[]"))).setKeyValue(Java.to([doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.2323),doubleToFloat(-1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.07843),doubleToFloat(-1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.09676),doubleToFloat(-1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.3274),doubleToFloat(-1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.3278),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.2323)], Java.type("float[]")))
                .setIS(new IS()
                  .addConnect(new connect().setNodeField("value_changed").setProtoField("r_ankle_rotation_changed"))))
              .addChild(new OrientationInterpolator().setDEF("R_MIDTARSAL_ANIMATOR").setKey(Java.to([doubleToFloat(0),doubleToFloat(0.5),doubleToFloat(1)], Java.type("float[]"))).setKeyValue(Java.to([doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(-0.2),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(-0.2)], Java.type("float[]")))
                .setIS(new IS()
                  .addConnect(new connect().setNodeField("value_changed").setProtoField("r_midtarsal_rotation_changed"))))
              .addChild(new OrientationInterpolator().setDEF("VL5_ANIMATOR").setKey(Java.to([doubleToFloat(0),doubleToFloat(0.2545),doubleToFloat(0.4909),doubleToFloat(0.7636),doubleToFloat(1)], Java.type("float[]"))).setKeyValue(Java.to([doubleToFloat(0.7651),doubleToFloat(0.6382),doubleToFloat(0.08586),doubleToFloat(0.2712),doubleToFloat(0.9999),doubleToFloat(0.002845),doubleToFloat(-0.01547),doubleToFloat(0.3756),doubleToFloat(0.7459),doubleToFloat(-0.6505),doubleToFloat(-0.1432),doubleToFloat(0.2416),doubleToFloat(0.9984),doubleToFloat(0.05536),doubleToFloat(-0.01154),doubleToFloat(0.3488),doubleToFloat(0.7651),doubleToFloat(0.6382),doubleToFloat(0.08586),doubleToFloat(0.2712)], Java.type("float[]")))
                .setIS(new IS()
                  .addConnect(new connect().setNodeField("value_changed").setProtoField("vl5_rotation_changed"))))
              .addChild(new OrientationInterpolator().setDEF("SKULLBASE_ANIMATOR").setKey(Java.to([doubleToFloat(0),doubleToFloat(0.4909),doubleToFloat(1)], Java.type("float[]"))).setKeyValue(Java.to([doubleToFloat(0.6517),doubleToFloat(-0.7559),doubleToFloat(0.06211),doubleToFloat(0.2508),doubleToFloat(0.6467),doubleToFloat(0.7527),doubleToFloat(-0.1238),doubleToFloat(0.2344),doubleToFloat(0.6517),doubleToFloat(-0.7559),doubleToFloat(0.06211),doubleToFloat(0.2508)], Java.type("float[]")))
                .setIS(new IS()
                  .addConnect(new connect().setNodeField("value_changed").setProtoField("skullbase_rotation_changed"))))
              .addChild(new OrientationInterpolator().setDEF("L_SHOULDER_ANIMATOR").setKey(Java.to([doubleToFloat(0),doubleToFloat(0.2182),doubleToFloat(0.4909),doubleToFloat(0.7455),doubleToFloat(1)], Java.type("float[]"))).setKeyValue(Java.to([doubleToFloat(0.9907),doubleToFloat(-0.07264),doubleToFloat(0.115),doubleToFloat(1.135),doubleToFloat(0.9291),doubleToFloat(-0.1222),doubleToFloat(0.349),doubleToFloat(0.1695),doubleToFloat(-0.9892),doubleToFloat(0.1364),doubleToFloat(-0.05394),doubleToFloat(0.5112),doubleToFloat(0.9942),doubleToFloat(-0.0002052),doubleToFloat(0.1073),doubleToFloat(0.4975),doubleToFloat(0.9907),doubleToFloat(-0.07264),doubleToFloat(0.115),doubleToFloat(1.135)], Java.type("float[]")))
                .setIS(new IS()
                  .addConnect(new connect().setNodeField("value_changed").setProtoField("l_shoulder_rotation_changed"))))
              .addChild(new OrientationInterpolator().setDEF("L_ELBOW_ANIMATOR").setKey(Java.to([doubleToFloat(0),doubleToFloat(0.2182),doubleToFloat(0.4909),doubleToFloat(0.7455),doubleToFloat(1)], Java.type("float[]"))).setKeyValue(Java.to([doubleToFloat(0.9985),doubleToFloat(0.03887),doubleToFloat(0.03802),doubleToFloat(4.689),doubleToFloat(-0.965),doubleToFloat(-0.1889),doubleToFloat(-0.1821),doubleToFloat(1.415),doubleToFloat(0.9758),doubleToFloat(0.1563),doubleToFloat(0.1529),doubleToFloat(4.666),doubleToFloat(-0.9956),doubleToFloat(-0.0936),doubleToFloat(0.009826),doubleToFloat(1.126),doubleToFloat(0.9985),doubleToFloat(0.03887),doubleToFloat(0.03802),doubleToFloat(4.689)], Java.type("float[]")))
                .setIS(new IS()
                  .addConnect(new connect().setNodeField("value_changed").setProtoField("l_elbow_rotation_changed"))))
              .addChild(new OrientationInterpolator().setDEF("L_WRIST_ANIMATOR").setKey(Java.to([doubleToFloat(0),doubleToFloat(1)], Java.type("float[]"))).setKeyValue(Java.to([doubleToFloat(-0.0240995),doubleToFloat(-0.999682),doubleToFloat(0.00741506),doubleToFloat(0.120409),doubleToFloat(-0.0240995),doubleToFloat(-0.999682),doubleToFloat(0.00741506),doubleToFloat(0.120409)], Java.type("float[]")))
                .setIS(new IS()
                  .addConnect(new connect().setNodeField("value_changed").setProtoField("l_wrist_rotation_changed"))))
              .addChild(new OrientationInterpolator().setDEF("R_SHOULDER_ANIMATOR").setKey(Java.to([doubleToFloat(0),doubleToFloat(0.2182),doubleToFloat(0.4909),doubleToFloat(0.7455),doubleToFloat(1)], Java.type("float[]"))).setKeyValue(Java.to([doubleToFloat(-1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.6979),doubleToFloat(0.9094),doubleToFloat(0.2062),doubleToFloat(-0.3613),doubleToFloat(0.4157),doubleToFloat(0.9637),doubleToFloat(0.1537),doubleToFloat(-0.2185),doubleToFloat(1.353),doubleToFloat(0.4864),doubleToFloat(0.08841),doubleToFloat(-0.8693),doubleToFloat(0.1716),doubleToFloat(-1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.6979)], Java.type("float[]")))
                .setIS(new IS()
                  .addConnect(new connect().setNodeField("value_changed").setProtoField("r_shoulder_rotation_changed"))))
              .addChild(new OrientationInterpolator().setDEF("R_ELBOW_ANIMATOR").setKey(Java.to([doubleToFloat(0),doubleToFloat(0.2182),doubleToFloat(0.4909),doubleToFloat(0.7455),doubleToFloat(1)], Java.type("float[]"))).setKeyValue(Java.to([doubleToFloat(0.9353),doubleToFloat(-0.2978),doubleToFloat(-0.191),doubleToFloat(4.222),doubleToFloat(-0.9362),doubleToFloat(0.2924),doubleToFloat(-0.1952),doubleToFloat(1.05),doubleToFloat(0.9941),doubleToFloat(-0.09719),doubleToFloat(-0.04725),doubleToFloat(4.512),doubleToFloat(-0.9594),doubleToFloat(0.2653),doubleToFloat(0.09579),doubleToFloat(1.525),doubleToFloat(0.9353),doubleToFloat(-0.2978),doubleToFloat(-0.191),doubleToFloat(4.222)], Java.type("float[]")))
                .setIS(new IS()
                  .addConnect(new connect().setNodeField("value_changed").setProtoField("r_elbow_rotation_changed"))))
              .addChild(new OrientationInterpolator().setDEF("R_WRIST_ANIMATOR").setKey(Java.to([doubleToFloat(0),doubleToFloat(1)], Java.type("float[]"))).setKeyValue(Java.to([doubleToFloat(-0.917742),doubleToFloat(-0.237244),doubleToFloat(-0.318536),doubleToFloat(0.214273),doubleToFloat(-0.917742),doubleToFloat(-0.237244),doubleToFloat(-0.318536),doubleToFloat(0.214273)], Java.type("float[]")))
                .setIS(new IS()
                  .addConnect(new connect().setNodeField("value_changed").setProtoField("r_wrist_rotation_changed")))))
            .addChild(new ROUTE().setFromField("fraction_changed").setFromNode("TIMER").setToField("set_fraction").setToNode("HUMANOIDROOT_POSITION_ANIMATOR"))
            .addChild(new ROUTE().setFromField("fraction_changed").setFromNode("TIMER").setToField("set_fraction").setToNode("HUMANOIDROOT_ANIMATOR"))
            .addChild(new ROUTE().setFromField("fraction_changed").setFromNode("TIMER").setToField("set_fraction").setToNode("SACROILIAC_ANIMATOR"))
            .addChild(new ROUTE().setFromField("fraction_changed").setFromNode("TIMER").setToField("set_fraction").setToNode("L_HIP_ANIMATOR"))
            .addChild(new ROUTE().setFromField("fraction_changed").setFromNode("TIMER").setToField("set_fraction").setToNode("L_KNEE_ANIMATOR"))
            .addChild(new ROUTE().setFromField("fraction_changed").setFromNode("TIMER").setToField("set_fraction").setToNode("L_ANKLE_ANIMATOR"))
            .addChild(new ROUTE().setFromField("fraction_changed").setFromNode("TIMER").setToField("set_fraction").setToNode("L_MIDTARSAL_ANIMATOR"))
            .addChild(new ROUTE().setFromField("fraction_changed").setFromNode("TIMER").setToField("set_fraction").setToNode("R_HIP_ANIMATOR"))
            .addChild(new ROUTE().setFromField("fraction_changed").setFromNode("TIMER").setToField("set_fraction").setToNode("R_KNEE_ANIMATOR"))
            .addChild(new ROUTE().setFromField("fraction_changed").setFromNode("TIMER").setToField("set_fraction").setToNode("R_ANKLE_ANIMATOR"))
            .addChild(new ROUTE().setFromField("fraction_changed").setFromNode("TIMER").setToField("set_fraction").setToNode("R_MIDTARSAL_ANIMATOR"))
            .addChild(new ROUTE().setFromField("fraction_changed").setFromNode("TIMER").setToField("set_fraction").setToNode("VL5_ANIMATOR"))
            .addChild(new ROUTE().setFromField("fraction_changed").setFromNode("TIMER").setToField("set_fraction").setToNode("SKULLBASE_ANIMATOR"))
            .addChild(new ROUTE().setFromField("fraction_changed").setFromNode("TIMER").setToField("set_fraction").setToNode("L_SHOULDER_ANIMATOR"))
            .addChild(new ROUTE().setFromField("fraction_changed").setFromNode("TIMER").setToField("set_fraction").setToNode("L_ELBOW_ANIMATOR"))
            .addChild(new ROUTE().setFromField("fraction_changed").setFromNode("TIMER").setToField("set_fraction").setToNode("L_WRIST_ANIMATOR"))
            .addChild(new ROUTE().setFromField("fraction_changed").setFromNode("TIMER").setToField("set_fraction").setToNode("R_SHOULDER_ANIMATOR"))
            .addChild(new ROUTE().setFromField("fraction_changed").setFromNode("TIMER").setToField("set_fraction").setToNode("R_ELBOW_ANIMATOR"))
            .addChild(new ROUTE().setFromField("fraction_changed").setFromNode("TIMER").setToField("set_fraction").setToNode("R_WRIST_ANIMATOR"))))
        .addComments(new CommentsBlock("======================================"))
        .addComments(new CommentsBlock("Point to example use in case someone inspects this file"))
        .addChild(new Anchor().setDescription("InterchangableActorsViaDynamicRouting").setParameter(Java.to(["target=_blank"], Java.type("java.lang.String[]"))).setUrl(Java.to(["InterchangableActorsViaDynamicRouting.x3d","https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Prototypes/InterchangableActorsViaDynamicRouting.x3d","InterchangableActorsViaDynamicRouting.wrl","https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Prototypes/InterchangableActorsViaDynamicRouting.wrl"], Java.type("java.lang.String[]")))
          .addChild(new Shape()
            .setGeometry(new Text().setString(Java.to(["LOA1_RunAnimation.x3d","defines a prototype","for animating a humanoid.","","Click this text to see","InterchangableActorsViaDynamicRouting example."], Java.type("java.lang.String[]")))
              .setFontStyle(new FontStyle().setJustify(Java.to(["MIDDLE","MIDDLE"], Java.type("java.lang.String[]"))).setSize(0.8)))
            .setAppearance(new Appearance()
              .setMaterial(new Material().setDiffuseColor(Java.to([doubleToFloat(1),doubleToFloat(1),doubleToFloat(0.2)], Java.type("float[]"))))))))      ;
    X3D0.toFileX3D("../data/LOA1_RunAnimation.new.graal.x3d");
    X3D0.toFileJSON("../data/LOA1_RunAnimation.new.graal.json");
