CommentsBlock = Java.type("org.web3d.x3d.jsail.Core.CommentsBlock")
AcousticProperties = Java.type('org.web3d.x3d.jsail.Shape.AcousticProperties')
Analyser = Java.type('org.web3d.x3d.jsail.Sound.Analyser')
Anchor = Java.type('org.web3d.x3d.jsail.Networking.Anchor')
Appearance = Java.type('org.web3d.x3d.jsail.Shape.Appearance')
Arc2D = Java.type('org.web3d.x3d.jsail.Geometry2D.Arc2D')
ArcClose2D = Java.type('org.web3d.x3d.jsail.Geometry2D.ArcClose2D')
AudioClip = Java.type('org.web3d.x3d.jsail.Sound.AudioClip')
AudioDestination = Java.type('org.web3d.x3d.jsail.Sound.AudioDestination')
Background = Java.type('org.web3d.x3d.jsail.EnvironmentalEffects.Background')
BallJoint = Java.type('org.web3d.x3d.jsail.RigidBodyPhysics.BallJoint')
Billboard = Java.type('org.web3d.x3d.jsail.Navigation.Billboard')
BiquadFilter = Java.type('org.web3d.x3d.jsail.Sound.BiquadFilter')
BlendedVolumeStyle = Java.type('org.web3d.x3d.jsail.VolumeRendering.BlendedVolumeStyle')
BooleanFilter = Java.type('org.web3d.x3d.jsail.EventUtilities.BooleanFilter')
BooleanSequencer = Java.type('org.web3d.x3d.jsail.EventUtilities.BooleanSequencer')
BooleanToggle = Java.type('org.web3d.x3d.jsail.EventUtilities.BooleanToggle')
BooleanTrigger = Java.type('org.web3d.x3d.jsail.EventUtilities.BooleanTrigger')
BoundaryEnhancementVolumeStyle = Java.type('org.web3d.x3d.jsail.VolumeRendering.BoundaryEnhancementVolumeStyle')
BoundedPhysicsModel = Java.type('org.web3d.x3d.jsail.ParticleSystems.BoundedPhysicsModel')
Box = Java.type('org.web3d.x3d.jsail.Geometry3D.Box')
BufferAudioSource = Java.type('org.web3d.x3d.jsail.Sound.BufferAudioSource')
CADAssembly = Java.type('org.web3d.x3d.jsail.CADGeometry.CADAssembly')
CADFace = Java.type('org.web3d.x3d.jsail.CADGeometry.CADFace')
CADLayer = Java.type('org.web3d.x3d.jsail.CADGeometry.CADLayer')
CADPart = Java.type('org.web3d.x3d.jsail.CADGeometry.CADPart')
CartoonVolumeStyle = Java.type('org.web3d.x3d.jsail.VolumeRendering.CartoonVolumeStyle')
ChannelMerger = Java.type('org.web3d.x3d.jsail.Sound.ChannelMerger')
ChannelSelector = Java.type('org.web3d.x3d.jsail.Sound.ChannelSelector')
ChannelSplitter = Java.type('org.web3d.x3d.jsail.Sound.ChannelSplitter')
Circle2D = Java.type('org.web3d.x3d.jsail.Geometry2D.Circle2D')
ClipPlane = Java.type('org.web3d.x3d.jsail.Rendering.ClipPlane')
CollidableOffset = Java.type('org.web3d.x3d.jsail.RigidBodyPhysics.CollidableOffset')
CollidableShape = Java.type('org.web3d.x3d.jsail.RigidBodyPhysics.CollidableShape')
Collision = Java.type('org.web3d.x3d.jsail.Navigation.Collision')
CollisionCollection = Java.type('org.web3d.x3d.jsail.RigidBodyPhysics.CollisionCollection')
CollisionSensor = Java.type('org.web3d.x3d.jsail.RigidBodyPhysics.CollisionSensor')
CollisionSpace = Java.type('org.web3d.x3d.jsail.RigidBodyPhysics.CollisionSpace')
Color = Java.type('org.web3d.x3d.jsail.Rendering.Color')
ColorChaser = Java.type('org.web3d.x3d.jsail.Followers.ColorChaser')
ColorDamper = Java.type('org.web3d.x3d.jsail.Followers.ColorDamper')
ColorInterpolator = Java.type('org.web3d.x3d.jsail.Interpolation.ColorInterpolator')
ColorRGBA = Java.type('org.web3d.x3d.jsail.Rendering.ColorRGBA')
ComposedCubeMapTexture = Java.type('org.web3d.x3d.jsail.CubeMapTexturing.ComposedCubeMapTexture')
ComposedShader = Java.type('org.web3d.x3d.jsail.Shaders.ComposedShader')
ComposedTexture3D = Java.type('org.web3d.x3d.jsail.Texturing3D.ComposedTexture3D')
ComposedVolumeStyle = Java.type('org.web3d.x3d.jsail.VolumeRendering.ComposedVolumeStyle')
Cone = Java.type('org.web3d.x3d.jsail.Geometry3D.Cone')
ConeEmitter = Java.type('org.web3d.x3d.jsail.ParticleSystems.ConeEmitter')
Contact = Java.type('org.web3d.x3d.jsail.RigidBodyPhysics.Contact')
Contour2D = Java.type('org.web3d.x3d.jsail.NURBS.Contour2D')
ContourPolyline2D = Java.type('org.web3d.x3d.jsail.NURBS.ContourPolyline2D')
Convolver = Java.type('org.web3d.x3d.jsail.Sound.Convolver')
Coordinate = Java.type('org.web3d.x3d.jsail.Rendering.Coordinate')
CoordinateChaser = Java.type('org.web3d.x3d.jsail.Followers.CoordinateChaser')
CoordinateDamper = Java.type('org.web3d.x3d.jsail.Followers.CoordinateDamper')
CoordinateDouble = Java.type('org.web3d.x3d.jsail.Rendering.CoordinateDouble')
CoordinateInterpolator = Java.type('org.web3d.x3d.jsail.Interpolation.CoordinateInterpolator')
CoordinateInterpolator2D = Java.type('org.web3d.x3d.jsail.Interpolation.CoordinateInterpolator2D')
Cylinder = Java.type('org.web3d.x3d.jsail.Geometry3D.Cylinder')
CylinderSensor = Java.type('org.web3d.x3d.jsail.PointingDeviceSensor.CylinderSensor')
Delay = Java.type('org.web3d.x3d.jsail.Sound.Delay')
DirectionalLight = Java.type('org.web3d.x3d.jsail.Lighting.DirectionalLight')
DISEntityManager = Java.type('org.web3d.x3d.jsail.DIS.DISEntityManager')
DISEntityTypeMapping = Java.type('org.web3d.x3d.jsail.DIS.DISEntityTypeMapping')
Disk2D = Java.type('org.web3d.x3d.jsail.Geometry2D.Disk2D')
DoubleAxisHingeJoint = Java.type('org.web3d.x3d.jsail.RigidBodyPhysics.DoubleAxisHingeJoint')
DynamicsCompressor = Java.type('org.web3d.x3d.jsail.Sound.DynamicsCompressor')
EaseInEaseOut = Java.type('org.web3d.x3d.jsail.Interpolation.EaseInEaseOut')
EdgeEnhancementVolumeStyle = Java.type('org.web3d.x3d.jsail.VolumeRendering.EdgeEnhancementVolumeStyle')
ElevationGrid = Java.type('org.web3d.x3d.jsail.Geometry3D.ElevationGrid')
EspduTransform = Java.type('org.web3d.x3d.jsail.DIS.EspduTransform')
ExplosionEmitter = Java.type('org.web3d.x3d.jsail.ParticleSystems.ExplosionEmitter')
Extrusion = Java.type('org.web3d.x3d.jsail.Geometry3D.Extrusion')
FillProperties = Java.type('org.web3d.x3d.jsail.Shape.FillProperties')
FloatVertexAttribute = Java.type('org.web3d.x3d.jsail.Shaders.FloatVertexAttribute')
Fog = Java.type('org.web3d.x3d.jsail.EnvironmentalEffects.Fog')
FogCoordinate = Java.type('org.web3d.x3d.jsail.EnvironmentalEffects.FogCoordinate')
FontStyle = Java.type('org.web3d.x3d.jsail.Text.FontStyle')
ForcePhysicsModel = Java.type('org.web3d.x3d.jsail.ParticleSystems.ForcePhysicsModel')
Gain = Java.type('org.web3d.x3d.jsail.Sound.Gain')
GeneratedCubeMapTexture = Java.type('org.web3d.x3d.jsail.CubeMapTexturing.GeneratedCubeMapTexture')
GeoCoordinate = Java.type('org.web3d.x3d.jsail.Geospatial.GeoCoordinate')
GeoElevationGrid = Java.type('org.web3d.x3d.jsail.Geospatial.GeoElevationGrid')
GeoLocation = Java.type('org.web3d.x3d.jsail.Geospatial.GeoLocation')
GeoLOD = Java.type('org.web3d.x3d.jsail.Geospatial.GeoLOD')
GeoMetadata = Java.type('org.web3d.x3d.jsail.Geospatial.GeoMetadata')
GeoOrigin = Java.type('org.web3d.x3d.jsail.Geospatial.GeoOrigin')
GeoPositionInterpolator = Java.type('org.web3d.x3d.jsail.Geospatial.GeoPositionInterpolator')
GeoProximitySensor = Java.type('org.web3d.x3d.jsail.Geospatial.GeoProximitySensor')
GeoTouchSensor = Java.type('org.web3d.x3d.jsail.Geospatial.GeoTouchSensor')
GeoTransform = Java.type('org.web3d.x3d.jsail.Geospatial.GeoTransform')
GeoViewpoint = Java.type('org.web3d.x3d.jsail.Geospatial.GeoViewpoint')
Group = Java.type('org.web3d.x3d.jsail.Grouping.Group')
HAnimDisplacer = Java.type('org.web3d.x3d.jsail.HAnim.HAnimDisplacer')
HAnimHumanoid = Java.type('org.web3d.x3d.jsail.HAnim.HAnimHumanoid')
HAnimJoint = Java.type('org.web3d.x3d.jsail.HAnim.HAnimJoint')
HAnimMotion = Java.type('org.web3d.x3d.jsail.HAnim.HAnimMotion')
HAnimSegment = Java.type('org.web3d.x3d.jsail.HAnim.HAnimSegment')
HAnimSite = Java.type('org.web3d.x3d.jsail.HAnim.HAnimSite')
ImageCubeMapTexture = Java.type('org.web3d.x3d.jsail.CubeMapTexturing.ImageCubeMapTexture')
ImageTexture = Java.type('org.web3d.x3d.jsail.Texturing.ImageTexture')
ImageTexture3D = Java.type('org.web3d.x3d.jsail.Texturing3D.ImageTexture3D')
IndexedFaceSet = Java.type('org.web3d.x3d.jsail.Geometry3D.IndexedFaceSet')
IndexedLineSet = Java.type('org.web3d.x3d.jsail.Rendering.IndexedLineSet')
IndexedQuadSet = Java.type('org.web3d.x3d.jsail.CADGeometry.IndexedQuadSet')
IndexedTriangleFanSet = Java.type('org.web3d.x3d.jsail.Rendering.IndexedTriangleFanSet')
IndexedTriangleSet = Java.type('org.web3d.x3d.jsail.Rendering.IndexedTriangleSet')
IndexedTriangleStripSet = Java.type('org.web3d.x3d.jsail.Rendering.IndexedTriangleStripSet')
Inline = Java.type('org.web3d.x3d.jsail.Networking.Inline')
IntegerSequencer = Java.type('org.web3d.x3d.jsail.EventUtilities.IntegerSequencer')
IntegerTrigger = Java.type('org.web3d.x3d.jsail.EventUtilities.IntegerTrigger')
IsoSurfaceVolumeData = Java.type('org.web3d.x3d.jsail.VolumeRendering.IsoSurfaceVolumeData')
KeySensor = Java.type('org.web3d.x3d.jsail.KeyDeviceSensor.KeySensor')
Layer = Java.type('org.web3d.x3d.jsail.Layering.Layer')
LayerSet = Java.type('org.web3d.x3d.jsail.Layering.LayerSet')
Layout = Java.type('org.web3d.x3d.jsail.Layout.Layout')
LayoutGroup = Java.type('org.web3d.x3d.jsail.Layout.LayoutGroup')
LayoutLayer = Java.type('org.web3d.x3d.jsail.Layout.LayoutLayer')
LinePickSensor = Java.type('org.web3d.x3d.jsail.Picking.LinePickSensor')
LineProperties = Java.type('org.web3d.x3d.jsail.Shape.LineProperties')
LineSet = Java.type('org.web3d.x3d.jsail.Rendering.LineSet')
ListenerPointSource = Java.type('org.web3d.x3d.jsail.Sound.ListenerPointSource')
LoadSensor = Java.type('org.web3d.x3d.jsail.Networking.LoadSensor')
LocalFog = Java.type('org.web3d.x3d.jsail.EnvironmentalEffects.LocalFog')
LOD = Java.type('org.web3d.x3d.jsail.Navigation.LOD')
Material = Java.type('org.web3d.x3d.jsail.Shape.Material')
Matrix3VertexAttribute = Java.type('org.web3d.x3d.jsail.Shaders.Matrix3VertexAttribute')
Matrix4VertexAttribute = Java.type('org.web3d.x3d.jsail.Shaders.Matrix4VertexAttribute')
MetadataBoolean = Java.type('org.web3d.x3d.jsail.Core.MetadataBoolean')
MetadataDouble = Java.type('org.web3d.x3d.jsail.Core.MetadataDouble')
MetadataFloat = Java.type('org.web3d.x3d.jsail.Core.MetadataFloat')
MetadataInteger = Java.type('org.web3d.x3d.jsail.Core.MetadataInteger')
MetadataSet = Java.type('org.web3d.x3d.jsail.Core.MetadataSet')
MetadataString = Java.type('org.web3d.x3d.jsail.Core.MetadataString')
MicrophoneSource = Java.type('org.web3d.x3d.jsail.Sound.MicrophoneSource')
MotorJoint = Java.type('org.web3d.x3d.jsail.RigidBodyPhysics.MotorJoint')
MovieTexture = Java.type('org.web3d.x3d.jsail.Texturing.MovieTexture')
MultiTexture = Java.type('org.web3d.x3d.jsail.Texturing.MultiTexture')
MultiTextureCoordinate = Java.type('org.web3d.x3d.jsail.Texturing.MultiTextureCoordinate')
MultiTextureTransform = Java.type('org.web3d.x3d.jsail.Texturing.MultiTextureTransform')
NavigationInfo = Java.type('org.web3d.x3d.jsail.Navigation.NavigationInfo')
Normal = Java.type('org.web3d.x3d.jsail.Rendering.Normal')
NormalInterpolator = Java.type('org.web3d.x3d.jsail.Interpolation.NormalInterpolator')
NurbsCurve = Java.type('org.web3d.x3d.jsail.NURBS.NurbsCurve')
NurbsCurve2D = Java.type('org.web3d.x3d.jsail.NURBS.NurbsCurve2D')
NurbsOrientationInterpolator = Java.type('org.web3d.x3d.jsail.NURBS.NurbsOrientationInterpolator')
NurbsPatchSurface = Java.type('org.web3d.x3d.jsail.NURBS.NurbsPatchSurface')
NurbsPositionInterpolator = Java.type('org.web3d.x3d.jsail.NURBS.NurbsPositionInterpolator')
NurbsSet = Java.type('org.web3d.x3d.jsail.NURBS.NurbsSet')
NurbsSurfaceInterpolator = Java.type('org.web3d.x3d.jsail.NURBS.NurbsSurfaceInterpolator')
NurbsSweptSurface = Java.type('org.web3d.x3d.jsail.NURBS.NurbsSweptSurface')
NurbsSwungSurface = Java.type('org.web3d.x3d.jsail.NURBS.NurbsSwungSurface')
NurbsTextureCoordinate = Java.type('org.web3d.x3d.jsail.NURBS.NurbsTextureCoordinate')
NurbsTrimmedSurface = Java.type('org.web3d.x3d.jsail.NURBS.NurbsTrimmedSurface')
OpacityMapVolumeStyle = Java.type('org.web3d.x3d.jsail.VolumeRendering.OpacityMapVolumeStyle')
OrientationChaser = Java.type('org.web3d.x3d.jsail.Followers.OrientationChaser')
OrientationDamper = Java.type('org.web3d.x3d.jsail.Followers.OrientationDamper')
OrientationInterpolator = Java.type('org.web3d.x3d.jsail.Interpolation.OrientationInterpolator')
OrthoViewpoint = Java.type('org.web3d.x3d.jsail.Navigation.OrthoViewpoint')
OscillatorSource = Java.type('org.web3d.x3d.jsail.Sound.OscillatorSource')
PackagedShader = Java.type('org.web3d.x3d.jsail.Shaders.PackagedShader')
ParticleSystem = Java.type('org.web3d.x3d.jsail.ParticleSystems.ParticleSystem')
PeriodicWave = Java.type('org.web3d.x3d.jsail.Sound.PeriodicWave')
PhysicalMaterial = Java.type('org.web3d.x3d.jsail.Shape.PhysicalMaterial')
PickableGroup = Java.type('org.web3d.x3d.jsail.Picking.PickableGroup')
PixelTexture = Java.type('org.web3d.x3d.jsail.Texturing.PixelTexture')
PixelTexture3D = Java.type('org.web3d.x3d.jsail.Texturing3D.PixelTexture3D')
PlaneSensor = Java.type('org.web3d.x3d.jsail.PointingDeviceSensor.PlaneSensor')
PointEmitter = Java.type('org.web3d.x3d.jsail.ParticleSystems.PointEmitter')
PointLight = Java.type('org.web3d.x3d.jsail.Lighting.PointLight')
PointPickSensor = Java.type('org.web3d.x3d.jsail.Picking.PointPickSensor')
PointProperties = Java.type('org.web3d.x3d.jsail.Shape.PointProperties')
PointSet = Java.type('org.web3d.x3d.jsail.Rendering.PointSet')
Polyline2D = Java.type('org.web3d.x3d.jsail.Geometry2D.Polyline2D')
PolylineEmitter = Java.type('org.web3d.x3d.jsail.ParticleSystems.PolylineEmitter')
Polypoint2D = Java.type('org.web3d.x3d.jsail.Geometry2D.Polypoint2D')
PositionChaser = Java.type('org.web3d.x3d.jsail.Followers.PositionChaser')
PositionChaser2D = Java.type('org.web3d.x3d.jsail.Followers.PositionChaser2D')
PositionDamper = Java.type('org.web3d.x3d.jsail.Followers.PositionDamper')
PositionDamper2D = Java.type('org.web3d.x3d.jsail.Followers.PositionDamper2D')
PositionInterpolator = Java.type('org.web3d.x3d.jsail.Interpolation.PositionInterpolator')
PositionInterpolator2D = Java.type('org.web3d.x3d.jsail.Interpolation.PositionInterpolator2D')
PrimitivePickSensor = Java.type('org.web3d.x3d.jsail.Picking.PrimitivePickSensor')
ProgramShader = Java.type('org.web3d.x3d.jsail.Shaders.ProgramShader')
ProjectionVolumeStyle = Java.type('org.web3d.x3d.jsail.VolumeRendering.ProjectionVolumeStyle')
ProtoInstance = Java.type('org.web3d.x3d.jsail.Core.ProtoInstance')
ProximitySensor = Java.type('org.web3d.x3d.jsail.EnvironmentalSensor.ProximitySensor')
QuadSet = Java.type('org.web3d.x3d.jsail.CADGeometry.QuadSet')
ReceiverPdu = Java.type('org.web3d.x3d.jsail.DIS.ReceiverPdu')
Rectangle2D = Java.type('org.web3d.x3d.jsail.Geometry2D.Rectangle2D')
RigidBody = Java.type('org.web3d.x3d.jsail.RigidBodyPhysics.RigidBody')
RigidBodyCollection = Java.type('org.web3d.x3d.jsail.RigidBodyPhysics.RigidBodyCollection')
ScalarChaser = Java.type('org.web3d.x3d.jsail.Followers.ScalarChaser')
ScalarDamper = Java.type('org.web3d.x3d.jsail.Followers.ScalarDamper')
ScalarInterpolator = Java.type('org.web3d.x3d.jsail.Interpolation.ScalarInterpolator')
ScreenFontStyle = Java.type('org.web3d.x3d.jsail.Layout.ScreenFontStyle')
ScreenGroup = Java.type('org.web3d.x3d.jsail.Layout.ScreenGroup')
Script = Java.type('org.web3d.x3d.jsail.Scripting.Script')
SegmentedVolumeData = Java.type('org.web3d.x3d.jsail.VolumeRendering.SegmentedVolumeData')
ShadedVolumeStyle = Java.type('org.web3d.x3d.jsail.VolumeRendering.ShadedVolumeStyle')
ShaderPart = Java.type('org.web3d.x3d.jsail.Shaders.ShaderPart')
ShaderProgram = Java.type('org.web3d.x3d.jsail.Shaders.ShaderProgram')
Shape = Java.type('org.web3d.x3d.jsail.Shape.Shape')
SignalPdu = Java.type('org.web3d.x3d.jsail.DIS.SignalPdu')
SilhouetteEnhancementVolumeStyle = Java.type('org.web3d.x3d.jsail.VolumeRendering.SilhouetteEnhancementVolumeStyle')
SingleAxisHingeJoint = Java.type('org.web3d.x3d.jsail.RigidBodyPhysics.SingleAxisHingeJoint')
SliderJoint = Java.type('org.web3d.x3d.jsail.RigidBodyPhysics.SliderJoint')
Sound = Java.type('org.web3d.x3d.jsail.Sound.Sound')
SpatialSound = Java.type('org.web3d.x3d.jsail.Sound.SpatialSound')
Sphere = Java.type('org.web3d.x3d.jsail.Geometry3D.Sphere')
SphereSensor = Java.type('org.web3d.x3d.jsail.PointingDeviceSensor.SphereSensor')
SplinePositionInterpolator = Java.type('org.web3d.x3d.jsail.Interpolation.SplinePositionInterpolator')
SplinePositionInterpolator2D = Java.type('org.web3d.x3d.jsail.Interpolation.SplinePositionInterpolator2D')
SplineScalarInterpolator = Java.type('org.web3d.x3d.jsail.Interpolation.SplineScalarInterpolator')
SpotLight = Java.type('org.web3d.x3d.jsail.Lighting.SpotLight')
SquadOrientationInterpolator = Java.type('org.web3d.x3d.jsail.Interpolation.SquadOrientationInterpolator')
StaticGroup = Java.type('org.web3d.x3d.jsail.Grouping.StaticGroup')
StreamAudioDestination = Java.type('org.web3d.x3d.jsail.Sound.StreamAudioDestination')
StreamAudioSource = Java.type('org.web3d.x3d.jsail.Sound.StreamAudioSource')
StringSensor = Java.type('org.web3d.x3d.jsail.KeyDeviceSensor.StringSensor')
SurfaceEmitter = Java.type('org.web3d.x3d.jsail.ParticleSystems.SurfaceEmitter')
Switch = Java.type('org.web3d.x3d.jsail.Grouping.Switch')
TexCoordChaser2D = Java.type('org.web3d.x3d.jsail.Followers.TexCoordChaser2D')
TexCoordDamper2D = Java.type('org.web3d.x3d.jsail.Followers.TexCoordDamper2D')
Text = Java.type('org.web3d.x3d.jsail.Text.Text')
TextureBackground = Java.type('org.web3d.x3d.jsail.EnvironmentalEffects.TextureBackground')
TextureCoordinate = Java.type('org.web3d.x3d.jsail.Texturing.TextureCoordinate')
TextureCoordinate3D = Java.type('org.web3d.x3d.jsail.Texturing3D.TextureCoordinate3D')
TextureCoordinate4D = Java.type('org.web3d.x3d.jsail.Texturing3D.TextureCoordinate4D')
TextureCoordinateGenerator = Java.type('org.web3d.x3d.jsail.Texturing.TextureCoordinateGenerator')
TextureProjector = Java.type('org.web3d.x3d.jsail.TextureProjection.TextureProjector')
TextureProjectorParallel = Java.type('org.web3d.x3d.jsail.TextureProjection.TextureProjectorParallel')
TextureProperties = Java.type('org.web3d.x3d.jsail.Texturing.TextureProperties')
TextureTransform = Java.type('org.web3d.x3d.jsail.Texturing.TextureTransform')
TextureTransform3D = Java.type('org.web3d.x3d.jsail.Texturing3D.TextureTransform3D')
TextureTransformMatrix3D = Java.type('org.web3d.x3d.jsail.Texturing3D.TextureTransformMatrix3D')
TimeSensor = Java.type('org.web3d.x3d.jsail.Time.TimeSensor')
TimeTrigger = Java.type('org.web3d.x3d.jsail.EventUtilities.TimeTrigger')
ToneMappedVolumeStyle = Java.type('org.web3d.x3d.jsail.VolumeRendering.ToneMappedVolumeStyle')
TouchSensor = Java.type('org.web3d.x3d.jsail.PointingDeviceSensor.TouchSensor')
Transform = Java.type('org.web3d.x3d.jsail.Grouping.Transform')
TransformSensor = Java.type('org.web3d.x3d.jsail.EnvironmentalSensor.TransformSensor')
TransmitterPdu = Java.type('org.web3d.x3d.jsail.DIS.TransmitterPdu')
TriangleFanSet = Java.type('org.web3d.x3d.jsail.Rendering.TriangleFanSet')
TriangleSet = Java.type('org.web3d.x3d.jsail.Rendering.TriangleSet')
TriangleSet2D = Java.type('org.web3d.x3d.jsail.Geometry2D.TriangleSet2D')
TriangleStripSet = Java.type('org.web3d.x3d.jsail.Rendering.TriangleStripSet')
TwoSidedMaterial = Java.type('org.web3d.x3d.jsail.Shape.TwoSidedMaterial')
UniversalJoint = Java.type('org.web3d.x3d.jsail.RigidBodyPhysics.UniversalJoint')
UnlitMaterial = Java.type('org.web3d.x3d.jsail.Shape.UnlitMaterial')
Viewpoint = Java.type('org.web3d.x3d.jsail.Navigation.Viewpoint')
ViewpointGroup = Java.type('org.web3d.x3d.jsail.Navigation.ViewpointGroup')
Viewport = Java.type('org.web3d.x3d.jsail.Layering.Viewport')
VisibilitySensor = Java.type('org.web3d.x3d.jsail.EnvironmentalSensor.VisibilitySensor')
VolumeData = Java.type('org.web3d.x3d.jsail.VolumeRendering.VolumeData')
VolumeEmitter = Java.type('org.web3d.x3d.jsail.ParticleSystems.VolumeEmitter')
VolumePickSensor = Java.type('org.web3d.x3d.jsail.Picking.VolumePickSensor')
WaveShaper = Java.type('org.web3d.x3d.jsail.Sound.WaveShaper')
WindPhysicsModel = Java.type('org.web3d.x3d.jsail.ParticleSystems.WindPhysicsModel')
WorldInfo = Java.type('org.web3d.x3d.jsail.Core.WorldInfo')
component = Java.type('org.web3d.x3d.jsail.Core.component')
connect = Java.type('org.web3d.x3d.jsail.Core.connect')
EXPORT = Java.type('org.web3d.x3d.jsail.Networking.EXPORT')
ExternProtoDeclare = Java.type('org.web3d.x3d.jsail.Core.ExternProtoDeclare')
field = Java.type('org.web3d.x3d.jsail.Core.field')
fieldValue = Java.type('org.web3d.x3d.jsail.Core.fieldValue')
head = Java.type('org.web3d.x3d.jsail.Core.head')
IMPORT = Java.type('org.web3d.x3d.jsail.Networking.IMPORT')
IS = Java.type('org.web3d.x3d.jsail.Core.IS')
meta = Java.type('org.web3d.x3d.jsail.Core.meta')
ProtoBody = Java.type('org.web3d.x3d.jsail.Core.ProtoBody')
ProtoDeclare = Java.type('org.web3d.x3d.jsail.Core.ProtoDeclare')
ProtoInterface = Java.type('org.web3d.x3d.jsail.Core.ProtoInterface')
ROUTE = Java.type('org.web3d.x3d.jsail.Core.ROUTE')
Scene = Java.type('org.web3d.x3d.jsail.Core.Scene')
unit = Java.type('org.web3d.x3d.jsail.Core.unit')
X3D = Java.type('org.web3d.x3d.jsail.Core.X3D')
SFBool = Java.type('org.web3d.x3d.jsail.fields.SFBool')
MFBool = Java.type('org.web3d.x3d.jsail.fields.MFBool')
SFColor = Java.type('org.web3d.x3d.jsail.fields.SFColor')
MFColor = Java.type('org.web3d.x3d.jsail.fields.MFColor')
SFColorRGBA = Java.type('org.web3d.x3d.jsail.fields.SFColorRGBA')
MFColorRGBA = Java.type('org.web3d.x3d.jsail.fields.MFColorRGBA')
SFDouble = Java.type('org.web3d.x3d.jsail.fields.SFDouble')
MFDouble = Java.type('org.web3d.x3d.jsail.fields.MFDouble')
SFFloat = Java.type('org.web3d.x3d.jsail.fields.SFFloat')
MFFloat = Java.type('org.web3d.x3d.jsail.fields.MFFloat')
SFImage = Java.type('org.web3d.x3d.jsail.fields.SFImage')
MFImage = Java.type('org.web3d.x3d.jsail.fields.MFImage')
SFInt32 = Java.type('org.web3d.x3d.jsail.fields.SFInt32')
MFInt32 = Java.type('org.web3d.x3d.jsail.fields.MFInt32')
SFMatrix3d = Java.type('org.web3d.x3d.jsail.fields.SFMatrix3d')
MFMatrix3d = Java.type('org.web3d.x3d.jsail.fields.MFMatrix3d')
SFMatrix3f = Java.type('org.web3d.x3d.jsail.fields.SFMatrix3f')
MFMatrix3f = Java.type('org.web3d.x3d.jsail.fields.MFMatrix3f')
SFMatrix4d = Java.type('org.web3d.x3d.jsail.fields.SFMatrix4d')
MFMatrix4d = Java.type('org.web3d.x3d.jsail.fields.MFMatrix4d')
SFMatrix4f = Java.type('org.web3d.x3d.jsail.fields.SFMatrix4f')
MFMatrix4f = Java.type('org.web3d.x3d.jsail.fields.MFMatrix4f')
SFNode = Java.type('org.web3d.x3d.jsail.fields.SFNode')
MFNode = Java.type('org.web3d.x3d.jsail.fields.MFNode')
SFRotation = Java.type('org.web3d.x3d.jsail.fields.SFRotation')
MFRotation = Java.type('org.web3d.x3d.jsail.fields.MFRotation')
SFString = Java.type('org.web3d.x3d.jsail.fields.SFString')
MFString = Java.type('org.web3d.x3d.jsail.fields.MFString')
SFTime = Java.type('org.web3d.x3d.jsail.fields.SFTime')
MFTime = Java.type('org.web3d.x3d.jsail.fields.MFTime')
SFVec2d = Java.type('org.web3d.x3d.jsail.fields.SFVec2d')
MFVec2d = Java.type('org.web3d.x3d.jsail.fields.MFVec2d')
SFVec2f = Java.type('org.web3d.x3d.jsail.fields.SFVec2f')
MFVec2f = Java.type('org.web3d.x3d.jsail.fields.MFVec2f')
SFVec3d = Java.type('org.web3d.x3d.jsail.fields.SFVec3d')
MFVec3d = Java.type('org.web3d.x3d.jsail.fields.MFVec3d')
SFVec3f = Java.type('org.web3d.x3d.jsail.fields.SFVec3f')
MFVec3f = Java.type('org.web3d.x3d.jsail.fields.MFVec3f')
SFVec4d = Java.type('org.web3d.x3d.jsail.fields.SFVec4d')
MFVec4d = Java.type('org.web3d.x3d.jsail.fields.MFVec4d')
SFVec4f = Java.type('org.web3d.x3d.jsail.fields.SFVec4f')
MFVec4f = Java.type('org.web3d.x3d.jsail.fields.MFVec4f')
var ConfigurationProperties = Packages.org.web3d.x3d.jsail.ConfigurationProperties;
ConfigurationProperties.showDefaultAttributes = false;
ConfigurationProperties.xsltEngine = ConfigurationProperties.XSLT_ENGINE_NATIVE_JAVA;
ConfigurationProperties.deleteIntermediateFiles = false;
ConfigurationProperties.setStripTrailingZeroes(true);
ConfigurationProperties.setStripDefaultAttributes(true);
function doubleToFloat(d) {
    if (Float32Array)
	return new Float32Array([d])[0];
}
      var X3D0 =  new X3D().setProfile("Interchange").setVersion("3.3")
      .setHead(new head()
        .addMeta(new meta().setName("title").setContent("Marine.x3d"))
        .addMeta(new meta().setName("description").setContent("Marine model"))
        .addMeta(new meta().setName("creator").setContent("Pat Sullivan"))
        .addMeta(new meta().setName("created").setContent("25 November 2006"))
        .addMeta(new meta().setName("modified").setContent("9 May 2020"))
        .addMeta(new meta().setName("warning").setContent("Not HAnim compliant"))
        .addMeta(new meta().setName("identifier").setContent("https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Polygonal/Marine.x3d"))
        .addMeta(new meta().setName("generator").setContent("X3D-Edit 3.3, https://savage.nps.edu/X3D-Edit"))
        .addMeta(new meta().setName("license").setContent("../license.html"))
        .addMeta(new meta().setName("Vizthumbnail").setContent("Thumb_marine_x3d21897981139112986.jpg")))
      .setScene(new Scene()
        .addChild(new WorldInfo().setInfo(Java.to(["This Web3D World was created with Vizx3D, a Web3D authoring tool","www.vizx3d.com"], Java.type("java.lang.String[]"))).setTitle("marine"))
        .addChild(new Transform().setDEF("dad_GROUND")
          .addChild(new Group().setDEF("GROUND")
            .addChild(new Transform().setDEF("dad_Import_Base")
              .addChild(new Group().setDEF("Import_Base")
                .addChild(new NavigationInfo().setDEF("NavInfo1").setAvatarSize(Java.to([doubleToFloat(0.25),doubleToFloat(1.6),doubleToFloat(0.75)], Java.type("float[]"))))
                .addChild(new Transform().setDEF("dad_Transform5").setRotation(Java.to([doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1.569)], Java.type("float[]")))
                  .addChild(new Group().setDEF("Transform5")
                    .addChild(new Transform().setDEF("dad_Cover_FACES01_FACES").setRotation(Java.to([doubleToFloat(0),doubleToFloat(-0.716),doubleToFloat(0.698),doubleToFloat(3.141)], Java.type("float[]"))).setScale(Java.to([doubleToFloat(0.1097),doubleToFloat(0.09537),doubleToFloat(0.09537)], Java.type("float[]"))).setScaleOrientation(Java.to([doubleToFloat(0.577),doubleToFloat(-0.577),doubleToFloat(0.577),doubleToFloat(2.094)], Java.type("float[]"))).setTranslation(Java.to([doubleToFloat(-0.189),doubleToFloat(1.74359),doubleToFloat(-0.02274)], Java.type("float[]")))
                      .addChild(new Shape().setDEF("Cover_FACES01_FACES")
                        .setAppearance(new Appearance()
                          .setTexture(new ImageTexture().setDEF("marine_camo").setUrl(Java.to(["marine_camo.jpg","https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Polygonal/marine_camo.jpg"], Java.type("java.lang.String[]"))))
                          .setMaterial(new Material().setDEF("material0_mat").setAmbientIntensity(1).setDiffuseColor(Java.to([doubleToFloat(0.1255),doubleToFloat(0.1843),doubleToFloat(0.09804)], Java.type("float[]"))).setShininess(0.056)))
                        .setGeometry(new IndexedFaceSet().setCcw(false).setCoordIndex(Java.to([0,1,2,-1,0,3,1,-1,4,3,0,-1,5,3,4,-1,5,4,6,-1,7,5,6,-1,8,5,7,-1,9,8,7,-1,10,8,9,-1,11,10,9,-1,12,10,11,-1,13,10,12,-1,12,14,13,-1,14,15,13,-1,14,16,15,-1,16,17,15,-1,17,18,15,-1,17,19,18,-1,19,20,18,-1,19,21,20,-1,21,22,20,-1,22,23,20,-1,22,24,23,-1,23,24,25,-1,24,26,25,-1,26,27,25,-1,25,27,28,-1,27,29,28,-1,28,29,30,-1,29,31,30,-1,30,31,32,-1,30,32,33,-1,34,33,32,-1,34,35,33,-1,36,35,34,-1,37,35,36,-1,37,38,35,-1,39,38,37,-1,39,1,38,-1,2,1,39,-1,6,4,40,-1,40,4,41,-1,41,4,0,-1,41,0,2,-1,42,11,9,-1,42,9,40,-1,9,7,40,-1,7,6,40,-1,43,16,14,-1,42,43,14,-1,42,14,12,-1,12,11,42,-1,44,21,19,-1,44,19,45,-1,43,45,19,-1,43,19,17,-1,43,17,16,-1,24,46,26,-1,46,24,44,-1,44,24,22,-1,44,22,21,-1,29,47,31,-1,46,47,29,-1,46,29,27,-1,46,27,26,-1,48,36,34,-1,47,48,34,-1,47,34,32,-1,31,47,32,-1,41,2,39,-1,41,39,49,-1,48,49,39,-1,48,39,37,-1,48,37,36,-1,49,44,45,-1,44,47,46,-1,49,47,44,-1,49,48,47,-1,40,41,42,-1,42,45,43,-1,42,41,45,-1,41,49,45,-1,50,51,52,-1,52,51,53,-1,53,51,54,-1,53,55,56,-1,53,54,55,-1,57,56,58,-1,56,55,58,-1,59,60,61,-1,60,57,61,-1,57,58,61,-1,51,62,54,-1,51,63,62,-1,54,64,55,-1,54,62,64,-1,58,55,65,-1,55,64,65,-1,61,58,66,-1,58,65,66,-1,63,67,62,-1,63,68,67,-1,62,69,64,-1,62,67,69,-1,65,64,70,-1,64,69,70,-1,66,65,71,-1,65,70,71,-1,50,35,72,-1,50,72,51,-1,20,61,73,-1,59,61,20,-1,73,66,74,-1,61,66,73,-1,74,71,75,-1,66,71,74,-1,75,70,76,-1,75,71,70,-1,76,69,77,-1,76,70,69,-1,77,67,78,-1,77,69,67,-1,78,68,79,-1,78,67,68,-1,63,80,79,-1,63,79,68,-1,51,72,80,-1,51,80,63,-1,35,81,72,-1,35,30,81,-1,30,82,81,-1,30,83,82,-1,83,84,82,-1,25,84,83,-1,25,73,84,-1,20,73,25,-1,72,85,80,-1,72,81,85,-1,81,86,85,-1,81,82,86,-1,82,87,86,-1,84,87,82,-1,84,74,87,-1,73,74,84,-1,80,78,79,-1,80,85,78,-1,85,77,78,-1,85,86,77,-1,86,76,77,-1,87,76,86,-1,87,75,76,-1,74,75,87,-1], Java.type("int[]"))).setCreaseAngle(1.571).setTexCoordIndex(Java.to([0,1,2,-1,0,3,1,-1,4,3,0,-1,5,3,4,-1,5,4,6,-1,7,5,6,-1,8,5,7,-1,9,8,7,-1,10,8,9,-1,11,10,9,-1,12,10,11,-1,13,10,12,-1,12,14,13,-1,14,15,13,-1,14,16,15,-1,16,17,15,-1,17,18,15,-1,17,19,18,-1,19,20,18,-1,19,21,20,-1,21,22,20,-1,22,23,20,-1,22,24,23,-1,23,24,25,-1,24,26,25,-1,26,27,25,-1,25,27,28,-1,27,29,28,-1,30,31,32,-1,31,33,32,-1,32,33,34,-1,32,34,35,-1,36,35,34,-1,36,37,35,-1,38,37,36,-1,39,37,38,-1,39,40,37,-1,41,40,39,-1,41,1,40,-1,2,1,41,-1,6,4,42,-1,42,4,43,-1,43,4,0,-1,43,0,2,-1,44,11,9,-1,44,9,42,-1,9,7,42,-1,7,6,42,-1,45,16,14,-1,44,45,14,-1,44,14,12,-1,12,11,44,-1,46,21,19,-1,46,19,47,-1,45,47,19,-1,45,19,17,-1,45,17,16,-1,24,48,26,-1,48,24,46,-1,46,24,22,-1,46,22,21,-1,29,49,50,-1,48,49,29,-1,48,29,27,-1,48,27,26,-1,51,38,36,-1,52,51,36,-1,52,36,34,-1,33,52,34,-1,43,2,41,-1,43,41,53,-1,51,53,41,-1,51,41,39,-1,51,39,38,-1,54,55,56,-1,55,57,58,-1,54,57,55,-1,54,59,57,-1,60,61,62,-1,62,56,63,-1,62,61,56,-1,61,54,56,-1,64,65,66,-1,66,65,67,-1,67,65,68,-1,67,69,70,-1,67,68,69,-1,71,70,72,-1,70,69,72,-1,73,74,75,-1,74,71,75,-1,71,72,75,-1,65,76,68,-1,65,77,76,-1,68,78,69,-1,68,76,78,-1,72,69,79,-1,69,78,79,-1,75,72,80,-1,72,79,80,-1,77,81,76,-1,77,82,81,-1,76,83,78,-1,76,81,83,-1,79,78,84,-1,78,83,84,-1,80,79,85,-1,79,84,85,-1,64,86,87,-1,64,87,65,-1,88,75,89,-1,73,75,88,-1,89,80,90,-1,75,80,89,-1,90,85,91,-1,80,85,90,-1,91,84,84,-1,91,85,84,-1,84,83,83,-1,84,84,83,-1,83,81,81,-1,83,83,81,-1,81,82,92,-1,81,81,82,-1,77,77,92,-1,77,92,82,-1,65,87,77,-1,65,77,77,-1,86,93,87,-1,86,94,93,-1,94,95,93,-1,94,96,95,-1,96,72,95,-1,71,72,96,-1,71,89,72,-1,88,89,71,-1,87,97,77,-1,87,93,97,-1,93,98,97,-1,93,95,98,-1,95,79,98,-1,72,79,95,-1,72,90,79,-1,89,90,72,-1,77,81,92,-1,77,97,81,-1,97,83,81,-1,97,98,83,-1,98,84,83,-1,79,84,98,-1,79,91,84,-1,90,91,79,-1], Java.type("int[]")))
                          .setCoord(new Coordinate().setPoint(Java.to([doubleToFloat(-2.59542),doubleToFloat(0.40672),doubleToFloat(-0.04385),doubleToFloat(-2.59542),doubleToFloat(0.16804),doubleToFloat(0.17484),doubleToFloat(-2.63381),doubleToFloat(0.17914),doubleToFloat(-0.04198),doubleToFloat(-2.58518),doubleToFloat(0.45433),doubleToFloat(0.17346),doubleToFloat(-2.363),doubleToFloat(0.67522),doubleToFloat(-0.0505),doubleToFloat(-2.18486),doubleToFloat(0.6614),doubleToFloat(0.16294),doubleToFloat(-2.20099),doubleToFloat(0.71668),doubleToFloat(-0.0546),doubleToFloat(-2.03998),doubleToFloat(0.71438),doubleToFloat(-0.05846),doubleToFloat(-1.87694),doubleToFloat(0.75892),doubleToFloat(0.15511),doubleToFloat(-1.71799),doubleToFloat(0.71003),doubleToFloat(-0.06624),doubleToFloat(-1.56083),doubleToFloat(0.65321),doubleToFloat(0.14789),doubleToFloat(-1.55699),doubleToFloat(0.70798),doubleToFloat(-0.07013),doubleToFloat(-1.36733),doubleToFloat(0.60406),doubleToFloat(-0.0743),doubleToFloat(-1.17076),doubleToFloat(0.44818),doubleToFloat(0.1397),doubleToFloat(-1.14337),doubleToFloat(0.32942),doubleToFloat(-0.07863),doubleToFloat(-1.1623),doubleToFloat(0.14874),doubleToFloat(0.14024),doubleToFloat(-1.13876),doubleToFloat(0.15915),doubleToFloat(-0.07807),doubleToFloat(-1.16998),doubleToFloat(-0.03248),doubleToFloat(-0.07656),doubleToFloat(-1.17971),doubleToFloat(-0.21654),doubleToFloat(0.14211),doubleToFloat(-1.1751),doubleToFloat(-0.41644),doubleToFloat(-0.07489),doubleToFloat(-1.24754),doubleToFloat(-0.59306),doubleToFloat(0.14526),doubleToFloat(-1.17767),doubleToFloat(-0.60867),doubleToFloat(-0.07407),doubleToFloat(-1.22936),doubleToFloat(-0.74356),doubleToFloat(-0.07228),doubleToFloat(-1.40188),doubleToFloat(-1.01667),doubleToFloat(0.15066),doubleToFloat(-1.46254),doubleToFloat(-1.01206),doubleToFloat(-0.06558),doubleToFloat(-1.60793),doubleToFloat(-1.11598),doubleToFloat(0.15603),doubleToFloat(-1.60588),doubleToFloat(-1.14592),doubleToFloat(-0.06158),doubleToFloat(-1.75459),doubleToFloat(-1.14413),doubleToFloat(-0.058),doubleToFloat(-1.89204),doubleToFloat(-1.18637),doubleToFloat(0.1632),doubleToFloat(-2.05253),doubleToFloat(-1.14004),doubleToFloat(-0.05081),doubleToFloat(-2.18461),doubleToFloat(-1.1083),doubleToFloat(0.16996),doubleToFloat(-2.20124),doubleToFloat(-1.13799),doubleToFloat(-0.04722),doubleToFloat(-2.34074),doubleToFloat(-1.00029),doubleToFloat(-0.04438),doubleToFloat(-2.39526),doubleToFloat(-0.99952),doubleToFloat(0.17461),doubleToFloat(-2.56726),doubleToFloat(-0.72564),doubleToFloat(-0.04003),doubleToFloat(-2.55958),doubleToFloat(-0.57181),doubleToFloat(0.17692),doubleToFloat(-2.61589),doubleToFloat(-0.58922),doubleToFloat(-0.03939),doubleToFloat(-2.61334),doubleToFloat(-0.39725),doubleToFloat(-0.04021),doubleToFloat(-2.5903),doubleToFloat(-0.21096),doubleToFloat(0.17618),doubleToFloat(-2.60822),doubleToFloat(-0.01325),doubleToFloat(-0.04185),doubleToFloat(-2.23631),doubleToFloat(0.78554),doubleToFloat(-0.42412),doubleToFloat(-2.73363),doubleToFloat(0.15821),doubleToFloat(-0.40953),doubleToFloat(-1.54369),doubleToFloat(0.77607),doubleToFloat(-0.44076),doubleToFloat(-1.06222),doubleToFloat(0.13584),doubleToFloat(-0.44997),doubleToFloat(-1.07528),doubleToFloat(-0.75841),doubleToFloat(-0.48555),doubleToFloat(-1.06581),doubleToFloat(-0.1299),doubleToFloat(-0.44895),doubleToFloat(-1.57542),doubleToFloat(-1.38294),doubleToFloat(-0.53419),doubleToFloat(-2.26804),doubleToFloat(-1.37373),doubleToFloat(-0.51755),doubleToFloat(-2.74643),doubleToFloat(-0.73614),doubleToFloat(-0.44537),doubleToFloat(-2.73875),doubleToFloat(-0.1075),doubleToFloat(-0.40851),doubleToFloat(-2.56215),doubleToFloat(-0.57386),doubleToFloat(0.16514),doubleToFloat(-2.50353),doubleToFloat(-1.21043),doubleToFloat(0.26184),doubleToFloat(-2.39551),doubleToFloat(-0.99952),doubleToFloat(0.16619),doubleToFloat(-2.18512),doubleToFloat(-1.1106),doubleToFloat(0.15818),doubleToFloat(-2.20636),doubleToFloat(-1.38115),doubleToFloat(0.23807),doubleToFloat(-1.89256),doubleToFloat(-1.43055),doubleToFloat(0.2243),doubleToFloat(-1.8923),doubleToFloat(-1.18867),doubleToFloat(0.15143),doubleToFloat(-1.60818),doubleToFloat(-1.11802),doubleToFloat(0.14426),doubleToFloat(-1.58899),doubleToFloat(-1.38909),doubleToFloat(0.22314),doubleToFloat(-1.2478),doubleToFloat(-0.5951),doubleToFloat(0.13348),doubleToFloat(-1.4024),doubleToFloat(-1.01692),doubleToFloat(0.13653),doubleToFloat(-1.29515),doubleToFloat(-1.23602),doubleToFloat(0.23349),doubleToFloat(-2.16208),doubleToFloat(-1.55085),doubleToFloat(0.2813),doubleToFloat(-2.39219),doubleToFloat(-1.50043),doubleToFloat(0.31841),doubleToFloat(-1.89332),doubleToFloat(-1.57799),doubleToFloat(0.2598),doubleToFloat(-1.63532),doubleToFloat(-1.55776),doubleToFloat(0.2685),doubleToFloat(-1.41033),doubleToFloat(-1.52295),doubleToFloat(0.29538),doubleToFloat(-2.12446),doubleToFloat(-1.70955),doubleToFloat(0.31969),doubleToFloat(-2.24833),doubleToFloat(-1.6604),doubleToFloat(0.32481),doubleToFloat(-1.89435),doubleToFloat(-1.74743),doubleToFloat(0.29921),doubleToFloat(-1.67448),doubleToFloat(-1.71544),doubleToFloat(0.30868),doubleToFloat(-1.54906),doubleToFloat(-1.66962),doubleToFloat(0.30792),doubleToFloat(-2.50302),doubleToFloat(-1.20736),doubleToFloat(0.27362),doubleToFloat(-1.29464),doubleToFloat(-1.23295),doubleToFloat(0.24505),doubleToFloat(-1.40982),doubleToFloat(-1.51988),doubleToFloat(0.30689),doubleToFloat(-1.54855),doubleToFloat(-1.66655),doubleToFloat(0.31944),doubleToFloat(-1.67396),doubleToFloat(-1.71236),doubleToFloat(0.32046),doubleToFloat(-1.89383),doubleToFloat(-1.74435),doubleToFloat(0.31099),doubleToFloat(-2.12395),doubleToFloat(-1.70647),doubleToFloat(0.33121),doubleToFloat(-2.24808),doubleToFloat(-1.65733),doubleToFloat(0.33633),doubleToFloat(-2.39193),doubleToFloat(-1.49736),doubleToFloat(0.32993),doubleToFloat(-2.20585),doubleToFloat(-1.37808),doubleToFloat(0.24966),doubleToFloat(-1.8923),doubleToFloat(-1.42748),doubleToFloat(0.23589),doubleToFloat(-1.89179),doubleToFloat(-1.18637),doubleToFloat(0.1632),doubleToFloat(-1.58873),doubleToFloat(-1.38602),doubleToFloat(0.23474),doubleToFloat(-2.16157),doubleToFloat(-1.54778),doubleToFloat(0.29282),doubleToFloat(-1.89282),doubleToFloat(-1.57491),doubleToFloat(0.27131),doubleToFloat(-1.6348),doubleToFloat(-1.5547),doubleToFloat(0.28028)], Java.type("float[]"))))
                          .setTexCoord(new TextureCoordinate().setPoint(Java.to([doubleToFloat(0.19),doubleToFloat(0.768),doubleToFloat(0.209),doubleToFloat(0.759),doubleToFloat(0.19),doubleToFloat(0.758),doubleToFloat(0.209),doubleToFloat(0.769),doubleToFloat(0.19),doubleToFloat(0.78),doubleToFloat(0.209),doubleToFloat(0.786),doubleToFloat(0.19),doubleToFloat(0.786),doubleToFloat(0.19),doubleToFloat(0.791),doubleToFloat(0.209),doubleToFloat(0.796),doubleToFloat(0.19),doubleToFloat(0.801),doubleToFloat(0.208),doubleToFloat(0.807),doubleToFloat(0.19),doubleToFloat(0.806),doubleToFloat(0.19),doubleToFloat(0.814),doubleToFloat(0.208),doubleToFloat(0.823),doubleToFloat(0.189),doubleToFloat(0.827),doubleToFloat(0.208),doubleToFloat(0.834),doubleToFloat(0.189),doubleToFloat(0.834),doubleToFloat(0.189),doubleToFloat(0.843),doubleToFloat(0.208),doubleToFloat(0.856),doubleToFloat(0.189),doubleToFloat(0.871),doubleToFloat(0.207),doubleToFloat(0.885),doubleToFloat(0.189),doubleToFloat(0.883),doubleToFloat(0.188),doubleToFloat(0.892),doubleToFloat(0.207),doubleToFloat(0.908),doubleToFloat(0.188),doubleToFloat(0.91),doubleToFloat(0.207),doubleToFloat(0.918),doubleToFloat(0.188),doubleToFloat(0.917),doubleToFloat(0.188),doubleToFloat(0.923),doubleToFloat(0.207),doubleToFloat(0.929),doubleToFloat(0.188),doubleToFloat(0.935),doubleToFloat(0.21),doubleToFloat(0.663),doubleToFloat(0.192),doubleToFloat(0.669),doubleToFloat(0.21),doubleToFloat(0.675),doubleToFloat(0.192),doubleToFloat(0.675),doubleToFloat(0.191),doubleToFloat(0.682),doubleToFloat(0.21),doubleToFloat(0.685),doubleToFloat(0.191),doubleToFloat(0.7),doubleToFloat(0.21),doubleToFloat(0.709),doubleToFloat(0.191),doubleToFloat(0.709),doubleToFloat(0.191),doubleToFloat(0.722),doubleToFloat(0.209),doubleToFloat(0.736),doubleToFloat(0.191),doubleToFloat(0.749),doubleToFloat(0.16),doubleToFloat(0.786),doubleToFloat(0.161),doubleToFloat(0.755),doubleToFloat(0.16),doubleToFloat(0.806),doubleToFloat(0.159),doubleToFloat(0.837),doubleToFloat(0.153),doubleToFloat(0.888),doubleToFloat(0.159),doubleToFloat(0.851),doubleToFloat(0.147),doubleToFloat(0.918),doubleToFloat(0.147),doubleToFloat(0.939),doubleToFloat(0.188),doubleToFloat(0.94),doubleToFloat(0.156),doubleToFloat(0.704),doubleToFloat(0.151),doubleToFloat(0.673),doubleToFloat(0.161),doubleToFloat(0.741),doubleToFloat(0.348),doubleToFloat(0.217),doubleToFloat(0.436),doubleToFloat(0.24),doubleToFloat(0.436),doubleToFloat(0.217),doubleToFloat(0.374),doubleToFloat(0.263),doubleToFloat(0.41),doubleToFloat(0.263),doubleToFloat(0.348),doubleToFloat(0.24),doubleToFloat(0.374),doubleToFloat(0.184),doubleToFloat(0.348),doubleToFloat(0.207),doubleToFloat(0.41),doubleToFloat(0.184),doubleToFloat(0.436),doubleToFloat(0.207),doubleToFloat(0.356),doubleToFloat(0.234),doubleToFloat(0.36),doubleToFloat(0.253),doubleToFloat(0.365),doubleToFloat(0.249),doubleToFloat(0.377),doubleToFloat(0.253),doubleToFloat(0.376),doubleToFloat(0.259),doubleToFloat(0.392),doubleToFloat(0.261),doubleToFloat(0.392),doubleToFloat(0.256),doubleToFloat(0.407),doubleToFloat(0.253),doubleToFloat(0.408),doubleToFloat(0.259),doubleToFloat(0.426),doubleToFloat(0.234),doubleToFloat(0.418),doubleToFloat(0.25),doubleToFloat(0.424),doubleToFloat(0.254),doubleToFloat(0.378),doubleToFloat(0.266),doubleToFloat(0.366),doubleToFloat(0.264),doubleToFloat(0.392),doubleToFloat(0.267),doubleToFloat(0.406),doubleToFloat(0.266),doubleToFloat(0.418),doubleToFloat(0.264),doubleToFloat(0.38),doubleToFloat(0.272),doubleToFloat(0.374),doubleToFloat(0.27),doubleToFloat(0.392),doubleToFloat(0.273),doubleToFloat(0.404),doubleToFloat(0.272),doubleToFloat(0.411),doubleToFloat(0.27),doubleToFloat(0.356),doubleToFloat(0.234),doubleToFloat(0.36),doubleToFloat(0.253),doubleToFloat(0.426),doubleToFloat(0.234),doubleToFloat(0.424),doubleToFloat(0.254),doubleToFloat(0.418),doubleToFloat(0.264),doubleToFloat(0.411),doubleToFloat(0.27),doubleToFloat(0.374),doubleToFloat(0.27),doubleToFloat(0.376),doubleToFloat(0.259),doubleToFloat(0.377),doubleToFloat(0.253),doubleToFloat(0.392),doubleToFloat(0.261),doubleToFloat(0.392),doubleToFloat(0.256),doubleToFloat(0.378),doubleToFloat(0.266),doubleToFloat(0.392),doubleToFloat(0.266)], Java.type("float[]")))))))
                    .addChild(new Transform().setDEF("dad_HEAD_FACES01_FACES").setRotation(Java.to([doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1.571)], Java.type("float[]"))).setScale(Java.to([doubleToFloat(0.4132),doubleToFloat(0.4132),doubleToFloat(0.4132)], Java.type("float[]"))).setTranslation(Java.to([doubleToFloat(-0.02468),doubleToFloat(1.03432),doubleToFloat(-0.09053)], Java.type("float[]")))
                      .addChild(new Shape().setDEF("HEAD_FACES01_FACES")
                        .setAppearance(new Appearance()
                          .setTexture(new ImageTexture().setUSE("marine_camo"))
                          .setMaterial(new Material().setDEF("material2_mat").setAmbientIntensity(1).setDiffuseColor(Java.to([doubleToFloat(0.1255),doubleToFloat(0.1843),doubleToFloat(0.09804)], Java.type("float[]"))).setShininess(0.056)))
                        .setGeometry(new IndexedFaceSet().setCcw(false).setCoordIndex(Java.to([0,1,2,-1,3,4,1,-1,5,3,6,-1,0,7,8,-1,9,10,11,-1,12,13,14,-1,8,15,16,-1,17,18,19,-1,20,21,22,-1,23,24,25,-1,26,27,28,-1,5,4,3,-1,29,3,30,-1,31,32,33,-1,15,34,16,-1,12,35,36,-1,37,23,38,-1,17,39,18,-1,33,40,41,-1,17,42,39,-1,43,9,25,-1,14,37,38,-1,24,43,25,-1,44,45,39,-1,44,39,46,-1,20,47,21,-1,48,49,47,-1,30,0,50,-1,46,31,10,-1,10,31,11,-1,51,52,25,-1,15,53,34,-1,54,13,36,-1,52,35,55,-1,23,25,55,-1,23,55,38,-1,25,52,55,-1,42,56,57,-1,21,47,42,-1,9,51,25,-1,58,11,33,-1,21,17,19,-1,18,39,45,-1,48,47,20,-1,42,47,49,-1,22,21,19,-1,17,21,42,-1,42,57,31,-1,48,29,49,-1,6,3,59,-1,49,60,56,-1,55,35,38,-1,38,35,12,-1,43,61,9,-1,39,42,46,-1,61,10,9,-1,49,29,60,-1,30,3,0,-1,62,63,50,-1,63,30,50,-1,30,63,64,-1,65,66,60,-1,30,64,60,-1,66,65,57,-1,66,56,60,-1,66,57,56,-1,57,64,62,-1,42,49,56,-1,31,33,11,-1,32,40,33,-1,67,36,26,-1,35,26,36,-1,35,68,26,-1,69,70,71,-1,54,36,67,-1,40,50,72,-1,3,1,0,-1,73,7,74,-1,0,2,7,-1,51,9,75,-1,58,76,11,-1,52,77,78,-1,58,33,79,-1,75,9,11,-1,78,58,79,-1,80,81,28,-1,26,8,16,-1,73,15,8,-1,7,73,8,-1,82,44,61,-1,44,46,61,-1,42,31,46,-1,62,50,40,-1,40,83,41,-1,72,0,8,-1,50,0,72,-1,68,8,26,-1,83,8,68,-1,77,84,78,-1,84,58,78,-1,73,53,15,-1,52,78,79,-1,35,79,41,-1,85,74,86,-1,87,88,89,-1,87,5,6,-1,88,90,85,-1,91,92,93,-1,94,95,14,-1,90,96,97,-1,19,18,98,-1,20,22,99,-1,100,24,23,-1,101,102,96,-1,103,5,87,-1,104,105,106,-1,107,108,109,-1,97,96,34,-1,110,13,54,-1,95,23,37,-1,98,18,111,-1,108,112,109,-1,98,111,113,-1,100,114,24,-1,95,37,14,-1,114,115,24,-1,111,45,44,-1,116,111,44,-1,117,20,99,-1,118,48,117,-1,105,119,88,-1,116,92,120,-1,92,91,120,-1,121,100,122,-1,97,34,53,-1,110,94,13,-1,122,123,124,-1,123,100,23,-1,95,123,23,-1,100,123,122,-1,113,120,125,-1,99,113,117,-1,93,100,121,-1,108,91,126,-1,22,19,99,-1,18,45,111,-1,117,48,20,-1,113,118,117,-1,99,19,98,-1,98,113,99,-1,113,125,127,-1,106,59,48,-1,87,6,59,-1,118,127,104,-1,123,95,124,-1,94,14,13,-1,114,82,115,-1,111,116,113,-1,93,128,114,-1,106,105,87,-1,105,88,87,-1,125,129,130,-1,131,119,105,-1,130,131,105,-1,130,104,132,-1,130,105,104,-1,132,125,130,-1,104,127,133,-1,133,127,125,-1,130,129,131,-1,113,127,118,-1,120,91,108,-1,125,109,129,-1,101,134,135,-1,112,124,136,-1,124,110,101,-1,96,137,34,-1,138,139,70,-1,134,69,135,-1,109,140,119,-1,87,89,103,-1,85,73,74,-1,88,86,89,-1,141,91,93,-1,126,91,142,-1,143,121,122,-1,112,108,144,-1,91,141,142,-1,135,81,80,-1,101,96,90,-1,73,90,97,-1,85,90,73,-1,116,44,128,-1,116,128,92,-1,113,116,120,-1,120,108,107,-1,136,124,101,-1,140,90,88,-1,119,140,88,-1,109,145,140,-1,145,90,140,-1,142,141,146,-1,126,142,146,-1,73,97,53,-1,112,144,124,-1,144,122,124,-1,106,87,59,-1,59,29,48,-1,60,29,30,-1,59,3,29,-1,118,104,106,-1,118,106,48,-1,135,69,81,-1,81,69,28,-1,147,70,139,-1,71,26,28,-1,110,54,148,-1,101,110,148,-1,147,139,67,-1,148,54,139,-1,101,148,138,-1,138,148,139,-1,139,54,67,-1,26,147,67,-1,69,71,28,-1,134,70,69,-1,138,70,134,-1,101,138,134,-1,26,71,147,-1,147,71,70,-1,135,80,102,-1,80,28,27,-1,144,126,149,-1,108,126,144,-1,144,149,122,-1,52,79,35,-1,79,33,41,-1,128,82,114,-1,93,114,100,-1,115,82,43,-1,24,115,43,-1,128,44,82,-1,92,128,93,-1,61,46,10,-1,82,61,43,-1,101,135,102,-1,137,150,27,-1,27,150,80,-1,137,27,16,-1,27,26,16,-1,150,102,80,-1,102,150,137,-1,96,102,137,-1,34,137,16,-1,129,119,131,-1,129,109,119,-1,64,63,62,-1,57,62,40,-1,88,85,86,-1,74,7,2,-1,126,146,149,-1,149,143,122,-1,84,76,58,-1,151,75,84,-1,133,125,132,-1,132,104,133,-1,65,64,57,-1,60,64,65,-1,141,121,152,-1,121,141,93,-1,75,76,84,-1,75,11,76,-1,146,141,152,-1,149,146,143,-1,51,75,151,-1,51,77,52,-1,146,152,143,-1,143,152,121,-1,51,151,77,-1,151,84,77,-1,120,107,125,-1,125,107,109,-1,57,40,32,-1,31,57,32,-1,112,136,145,-1,109,112,145,-1,145,136,90,-1,136,101,90,-1,83,72,8,-1,40,72,83,-1,41,83,68,-1,35,41,68,-1,95,94,124,-1,124,94,110,-1,12,14,38,-1,13,12,36,-1], Java.type("int[]"))).setCreaseAngle(2.094).setTexCoordIndex(Java.to([0,1,2,-1,3,4,5,-1,6,3,7,-1,0,8,9,-1,10,11,12,-1,13,14,15,-1,9,16,17,-1,18,19,20,-1,21,22,23,-1,24,25,26,-1,27,28,29,-1,6,4,3,-1,30,3,31,-1,32,33,34,-1,16,35,17,-1,13,36,37,-1,38,24,39,-1,18,40,19,-1,34,41,42,-1,18,43,40,-1,44,10,26,-1,15,38,39,-1,25,44,26,-1,45,46,40,-1,45,40,47,-1,21,48,22,-1,49,50,48,-1,31,51,52,-1,47,32,11,-1,11,32,12,-1,53,54,26,-1,16,55,35,-1,56,14,37,-1,54,36,57,-1,24,26,57,-1,24,57,39,-1,26,54,57,-1,58,59,60,-1,22,48,58,-1,10,53,26,-1,61,12,34,-1,22,18,20,-1,19,40,46,-1,49,48,21,-1,58,48,50,-1,23,22,20,-1,18,22,58,-1,43,62,32,-1,49,30,50,-1,7,3,63,-1,50,64,59,-1,57,36,39,-1,39,36,13,-1,44,65,10,-1,40,43,47,-1,65,11,10,-1,50,30,64,-1,31,3,51,-1,66,67,68,-1,69,31,52,-1,31,69,70,-1,71,72,64,-1,31,70,64,-1,73,74,75,-1,72,59,64,-1,72,60,59,-1,75,76,66,-1,58,50,59,-1,32,34,12,-1,33,41,34,-1,77,37,27,-1,36,27,37,-1,36,78,27,-1,79,80,81,-1,56,37,77,-1,41,82,83,-1,3,5,51,-1,84,8,85,-1,0,2,8,-1,53,10,86,-1,61,87,12,-1,54,88,89,-1,61,34,90,-1,86,10,12,-1,89,61,90,-1,91,92,29,-1,27,9,17,-1,84,16,9,-1,8,84,9,-1,93,45,65,-1,45,47,65,-1,43,32,47,-1,94,82,41,-1,41,95,42,-1,83,0,9,-1,52,51,96,-1,78,9,27,-1,95,9,78,-1,88,97,89,-1,97,61,89,-1,84,55,16,-1,54,89,90,-1,36,90,42,-1,98,85,99,-1,100,101,102,-1,100,6,7,-1,103,104,98,-1,105,106,107,-1,108,109,15,-1,104,110,111,-1,20,19,112,-1,21,23,113,-1,114,25,24,-1,115,116,110,-1,117,6,100,-1,118,119,120,-1,121,122,123,-1,111,110,35,-1,124,14,56,-1,109,24,38,-1,112,19,125,-1,122,126,123,-1,112,125,127,-1,114,128,25,-1,109,38,15,-1,128,129,25,-1,125,46,45,-1,130,125,45,-1,131,21,113,-1,132,49,131,-1,119,133,101,-1,130,106,134,-1,106,105,134,-1,135,114,136,-1,111,35,55,-1,124,108,14,-1,136,137,138,-1,137,114,24,-1,109,137,24,-1,114,137,136,-1,127,134,139,-1,113,140,131,-1,107,114,135,-1,122,105,141,-1,23,20,113,-1,19,46,125,-1,131,49,21,-1,140,132,131,-1,113,20,112,-1,112,140,113,-1,140,142,143,-1,120,63,49,-1,100,7,63,-1,132,143,118,-1,137,109,138,-1,108,15,14,-1,128,93,129,-1,125,130,127,-1,107,144,128,-1,120,119,100,-1,119,101,100,-1,145,146,147,-1,148,133,119,-1,149,148,119,-1,149,118,150,-1,149,119,118,-1,151,145,147,-1,118,143,152,-1,152,143,142,-1,147,146,153,-1,140,143,132,-1,134,105,122,-1,139,123,154,-1,115,155,156,-1,126,138,157,-1,138,124,115,-1,110,158,35,-1,159,160,80,-1,155,79,156,-1,123,161,162,-1,100,102,117,-1,98,84,85,-1,103,99,163,-1,164,105,107,-1,141,105,165,-1,166,135,136,-1,126,122,167,-1,105,164,165,-1,156,92,91,-1,115,110,104,-1,84,104,111,-1,98,104,84,-1,130,45,144,-1,130,144,106,-1,127,130,134,-1,134,122,121,-1,157,138,115,-1,161,104,103,-1,133,168,101,-1,123,169,161,-1,169,104,161,-1,165,164,170,-1,141,165,170,-1,84,111,55,-1,126,167,138,-1,167,136,138,-1,120,100,63,-1,63,30,49,-1,64,30,31,-1,63,3,30,-1,132,118,120,-1,132,120,49,-1,156,79,92,-1,92,79,29,-1,171,80,160,-1,81,27,29,-1,124,56,172,-1,115,124,172,-1,171,160,77,-1,172,56,160,-1,115,172,159,-1,159,172,160,-1,160,56,77,-1,27,171,77,-1,79,81,29,-1,155,80,79,-1,159,80,155,-1,115,159,155,-1,27,81,171,-1,171,81,80,-1,156,91,116,-1,91,29,28,-1,167,141,173,-1,122,141,167,-1,167,173,136,-1,54,90,36,-1,90,34,42,-1,144,93,128,-1,107,128,114,-1,129,93,44,-1,25,129,44,-1,144,45,93,-1,106,144,107,-1,65,47,11,-1,93,65,44,-1,115,156,116,-1,158,174,28,-1,28,174,91,-1,158,28,17,-1,28,27,17,-1,174,116,91,-1,116,174,158,-1,110,116,158,-1,35,158,17,-1,146,175,153,-1,154,123,162,-1,76,67,66,-1,62,94,41,-1,103,98,99,-1,85,8,2,-1,141,170,173,-1,173,166,136,-1,97,87,61,-1,176,86,97,-1,177,145,151,-1,150,118,152,-1,74,76,75,-1,64,70,71,-1,164,135,178,-1,135,164,107,-1,86,87,97,-1,86,12,87,-1,170,164,178,-1,173,170,166,-1,53,86,176,-1,53,88,54,-1,170,178,166,-1,166,178,135,-1,53,176,88,-1,176,97,88,-1,134,121,139,-1,139,121,123,-1,62,41,33,-1,32,62,33,-1,126,157,169,-1,123,126,169,-1,169,157,104,-1,157,115,104,-1,95,83,9,-1,41,83,95,-1,42,95,78,-1,36,42,78,-1,109,108,138,-1,138,108,124,-1,13,15,39,-1,14,13,37,-1], Java.type("int[]")))
                          .setCoord(new Coordinate().setPoint(Java.to([doubleToFloat(0.15404),doubleToFloat(0.19995),doubleToFloat(-1.40674),doubleToFloat(0.16097),doubleToFloat(0.14052),doubleToFloat(-1.28005),doubleToFloat(0.12273),doubleToFloat(0.25954),doubleToFloat(-1.16717),doubleToFloat(0.13489),doubleToFloat(0.06934),doubleToFloat(-1.46382),doubleToFloat(0.12368),doubleToFloat(0.00615),doubleToFloat(-1.34404),doubleToFloat(0.0101),doubleToFloat(-0.01015),doubleToFloat(-1.35325),doubleToFloat(0.02131),doubleToFloat(0.01768),doubleToFloat(-1.41596),doubleToFloat(0.12452),doubleToFloat(0.26773),doubleToFloat(-1.3576),doubleToFloat(0.12626),doubleToFloat(0.34401),doubleToFloat(-1.34788),doubleToFloat(0.07779),doubleToFloat(0.43308),doubleToFloat(-1.61612),doubleToFloat(0.15176),doubleToFloat(0.40493),doubleToFloat(-1.6412),doubleToFloat(0.15107),doubleToFloat(0.41107),doubleToFloat(-1.61254),doubleToFloat(0.0665),doubleToFloat(0.43257),doubleToFloat(-1.47509),doubleToFloat(0.03614),doubleToFloat(0.451),doubleToFloat(-1.46971),doubleToFloat(0.03686),doubleToFloat(0.47736),doubleToFloat(-1.482),doubleToFloat(0.06742),doubleToFloat(0.39699),doubleToFloat(-1.30948),doubleToFloat(0.08518),doubleToFloat(0.419),doubleToFloat(-1.33354),doubleToFloat(0.15045),doubleToFloat(0.19793),doubleToFloat(-1.80015),doubleToFloat(0.04362),doubleToFloat(0.34503),doubleToFloat(-1.79683),doubleToFloat(0.04269),doubleToFloat(0.21406),doubleToFloat(-1.83087),doubleToFloat(0.03819),doubleToFloat(0.02254),doubleToFloat(-1.76458),doubleToFloat(0.14372),doubleToFloat(0.10594),doubleToFloat(-1.79145),doubleToFloat(0.04067),doubleToFloat(0.10251),doubleToFloat(-1.81423),doubleToFloat(0.03821),doubleToFloat(0.46149),doubleToFloat(-1.5401),doubleToFloat(0.03911),doubleToFloat(0.42847),doubleToFloat(-1.58925),doubleToFloat(0.06),doubleToFloat(0.42335),doubleToFloat(-1.58361),doubleToFloat(0.11467),doubleToFloat(0.40646),doubleToFloat(-1.41289),doubleToFloat(0.05677),doubleToFloat(0.43231),doubleToFloat(-1.38703),doubleToFloat(0.08319),doubleToFloat(0.43769),doubleToFloat(-1.40342),doubleToFloat(0.17797),doubleToFloat(0.05119),doubleToFloat(-1.54215),doubleToFloat(0.18493),doubleToFloat(0.16722),doubleToFloat(-1.49812),doubleToFloat(0.17717),doubleToFloat(0.3696),doubleToFloat(-1.63301),doubleToFloat(0.18396),doubleToFloat(0.32123),doubleToFloat(-1.58208),doubleToFloat(0.16763),doubleToFloat(0.36704),doubleToFloat(-1.57108),doubleToFloat(0.03207),doubleToFloat(0.43385),doubleToFloat(-1.32996),doubleToFloat(0.09015),doubleToFloat(0.41824),doubleToFloat(-1.49224),doubleToFloat(0.08083),doubleToFloat(0.43718),doubleToFloat(-1.44591),doubleToFloat(0.03765),doubleToFloat(0.48504),doubleToFloat(-1.50682),doubleToFloat(0.07136),doubleToFloat(0.47327),doubleToFloat(-1.49966),doubleToFloat(0.14654),doubleToFloat(0.37012),doubleToFloat(-1.73616),doubleToFloat(0.19711),doubleToFloat(0.31253),doubleToFloat(-1.55059),doubleToFloat(0.16417),doubleToFloat(0.37907),doubleToFloat(-1.49557),doubleToFloat(0.19883),doubleToFloat(0.19855),doubleToFloat(-1.71748),doubleToFloat(0.05882),doubleToFloat(0.43487),doubleToFloat(-1.61408),doubleToFloat(0.04164),doubleToFloat(0.42156),doubleToFloat(-1.68548),doubleToFloat(0.04303),doubleToFloat(0.4016),doubleToFloat(-1.7464),doubleToFloat(0.15432),doubleToFloat(0.38752),doubleToFloat(-1.67038),doubleToFloat(0.19693),doubleToFloat(0.06015),doubleToFloat(-1.69573),doubleToFloat(0.03407),doubleToFloat(-0.02782),doubleToFloat(-1.64018),doubleToFloat(0.19376),doubleToFloat(0.04274),doubleToFloat(-1.63839),doubleToFloat(0.19007),doubleToFloat(0.20423),doubleToFloat(-1.4866),doubleToFloat(0.06929),doubleToFloat(0.39802),doubleToFloat(-1.58848),doubleToFloat(0.08516),doubleToFloat(0.41593),doubleToFloat(-1.54318),doubleToFloat(0.03095),doubleToFloat(0.40006),doubleToFloat(-1.30539),doubleToFloat(0.03571),doubleToFloat(0.45791),doubleToFloat(-1.44975),doubleToFloat(0.06983),doubleToFloat(0.4487),doubleToFloat(-1.53139),doubleToFloat(0.19612),doubleToFloat(0.18019),doubleToFloat(-1.61509),doubleToFloat(0.18918),doubleToFloat(0.203),doubleToFloat(-1.60384),doubleToFloat(0.14526),doubleToFloat(0.38599),doubleToFloat(-1.58643),doubleToFloat(0.03156),doubleToFloat(-0.01581),doubleToFloat(-1.5424),doubleToFloat(0.1966),doubleToFloat(0.14585),doubleToFloat(-1.59692),doubleToFloat(0.06681),doubleToFloat(0.4359),doubleToFloat(-1.64326),doubleToFloat(0.19729),doubleToFloat(0.20354),doubleToFloat(-1.55162),doubleToFloat(0.21035),doubleToFloat(0.16082),doubleToFloat(-1.49505),doubleToFloat(0.23579),doubleToFloat(0.12675),doubleToFloat(-1.58285),doubleToFloat(0.22737),doubleToFloat(0.13939),doubleToFloat(-1.6174),doubleToFloat(0.21255),doubleToFloat(0.17817),doubleToFloat(-1.63046),doubleToFloat(0.07625),doubleToFloat(0.43718),doubleToFloat(-1.43362),doubleToFloat(0.15549),doubleToFloat(0.37293),doubleToFloat(-1.46997),doubleToFloat(0.03453),doubleToFloat(0.45279),doubleToFloat(-1.41238),doubleToFloat(0.03473),doubleToFloat(0.44281),doubleToFloat(-1.42236),doubleToFloat(0.08677),doubleToFloat(0.43539),doubleToFloat(-1.41596),doubleToFloat(0.17687),doubleToFloat(0.24874),doubleToFloat(-1.42185),doubleToFloat(0.03304),doubleToFloat(0.31739),doubleToFloat(-1.31102),doubleToFloat(0.04779),doubleToFloat(0.29205),doubleToFloat(-1.15207),doubleToFloat(0.09248),doubleToFloat(0.39827),doubleToFloat(-1.60435),doubleToFloat(0.12718),doubleToFloat(0.40365),doubleToFloat(-1.59846),doubleToFloat(0.08633),doubleToFloat(0.39725),doubleToFloat(-1.57619),doubleToFloat(0.12782),doubleToFloat(0.39366),doubleToFloat(-1.57389),doubleToFloat(0.14602),doubleToFloat(0.39034),doubleToFloat(-1.54164),doubleToFloat(0.03391),doubleToFloat(0.44255),doubleToFloat(-1.39242),doubleToFloat(0.03427),doubleToFloat(0.45023),doubleToFloat(-1.4047),doubleToFloat(0.04075),doubleToFloat(0.43871),doubleToFloat(-1.64402),doubleToFloat(0.16445),doubleToFloat(0.34606),doubleToFloat(-1.47688),doubleToFloat(0.1095),doubleToFloat(0.408),doubleToFloat(-1.58848),doubleToFloat(-0.06028),doubleToFloat(0.27311),doubleToFloat(-1.3594),doubleToFloat(-0.03281),doubleToFloat(0.27311),doubleToFloat(-1.15821),doubleToFloat(-0.08019),doubleToFloat(0.07561),doubleToFloat(-1.46587),doubleToFloat(-0.09235),doubleToFloat(0.22163),doubleToFloat(-1.40905),doubleToFloat(-0.10346),doubleToFloat(0.16338),doubleToFloat(-1.26495),doubleToFloat(-0.06348),doubleToFloat(0.34657),doubleToFloat(-1.35325),doubleToFloat(-0.07185),doubleToFloat(0.4144),doubleToFloat(-1.61868),doubleToFloat(-0.07116),doubleToFloat(0.408),doubleToFloat(-1.64735),doubleToFloat(0.0021),doubleToFloat(0.43411),doubleToFloat(-1.61817),doubleToFloat(0.00536),doubleToFloat(0.43308),doubleToFloat(-1.47688),doubleToFloat(0.00328),doubleToFloat(0.47429),doubleToFloat(-1.50145),doubleToFloat(-0.02115),doubleToFloat(0.42054),doubleToFloat(-1.33662),doubleToFloat(-0.00534),doubleToFloat(0.39802),doubleToFloat(-1.31153),doubleToFloat(-0.06678),doubleToFloat(0.21546),doubleToFloat(-1.80604),doubleToFloat(-0.06335),doubleToFloat(0.10886),doubleToFloat(-1.79708),doubleToFloat(0.01782),doubleToFloat(0.42387),doubleToFloat(-1.58489),doubleToFloat(-0.04658),doubleToFloat(0.40876),doubleToFloat(-1.41724),doubleToFloat(0.01052),doubleToFloat(0.43308),doubleToFloat(-1.38806),doubleToFloat(-0.09721),doubleToFloat(0.02524),doubleToFloat(-1.33124),doubleToFloat(-0.12562),doubleToFloat(0.1504),doubleToFloat(-1.60588),doubleToFloat(-0.11879),doubleToFloat(0.17152),doubleToFloat(-1.50631),doubleToFloat(-0.1127),doubleToFloat(0.05529),doubleToFloat(-1.55034),doubleToFloat(-0.11019),doubleToFloat(0.31688),doubleToFloat(-1.59258),doubleToFloat(-0.09189),doubleToFloat(0.37088),doubleToFloat(-1.57824),doubleToFloat(-0.12399),doubleToFloat(0.31713),doubleToFloat(-1.55929),doubleToFloat(-0.01),doubleToFloat(0.43846),doubleToFloat(-1.44847),doubleToFloat(-0.06171),doubleToFloat(0.37293),doubleToFloat(-1.7418),doubleToFloat(-0.09225),doubleToFloat(0.38266),doubleToFloat(-1.50248),doubleToFloat(-0.11956),doubleToFloat(0.21754),doubleToFloat(-1.72593),doubleToFloat(0.02097),doubleToFloat(0.43539),doubleToFloat(-1.61509),doubleToFloat(0.03985),doubleToFloat(0.43641),doubleToFloat(-1.61228),doubleToFloat(-0.07259),doubleToFloat(0.39059),doubleToFloat(-1.67653),doubleToFloat(-0.12296),doubleToFloat(0.06466),doubleToFloat(-1.70443),doubleToFloat(-0.12342),doubleToFloat(0.04722),doubleToFloat(-1.64709),doubleToFloat(-0.12337),doubleToFloat(0.22312),doubleToFloat(-1.4925),doubleToFloat(-0.09796),doubleToFloat(0.37344),doubleToFloat(-1.64069),doubleToFloat(0.00809),doubleToFloat(0.39878),doubleToFloat(-1.59027),doubleToFloat(-0.00972),doubleToFloat(0.41747),doubleToFloat(-1.54573),doubleToFloat(0.00585),doubleToFloat(0.44946),doubleToFloat(-1.53319),doubleToFloat(-0.01743),doubleToFloat(0.41977),doubleToFloat(-1.4953),doubleToFloat(-0.11603),doubleToFloat(0.22179),doubleToFloat(-1.61203),doubleToFloat(-0.06819),doubleToFloat(0.3888),doubleToFloat(-1.59232),doubleToFloat(-0.12007),doubleToFloat(0.18465),doubleToFloat(-1.6238),doubleToFloat(0.01463),doubleToFloat(0.43667),doubleToFloat(-1.64479),doubleToFloat(-0.12701),doubleToFloat(0.22258),doubleToFloat(-1.55929),doubleToFloat(-0.16607),doubleToFloat(0.13241),doubleToFloat(-1.59385),doubleToFloat(-0.14449),doubleToFloat(0.16584),doubleToFloat(-1.50478),doubleToFloat(-0.15598),doubleToFloat(0.14206),doubleToFloat(-1.62482),doubleToFloat(-0.13881),doubleToFloat(0.18314),doubleToFloat(-1.64018),doubleToFloat(-0.01504),doubleToFloat(0.43667),doubleToFloat(-1.41878),doubleToFloat(-0.01496),doubleToFloat(0.43922),doubleToFloat(-1.40623),doubleToFloat(-0.08554),doubleToFloat(0.37677),doubleToFloat(-1.47867),doubleToFloat(0.03297),doubleToFloat(0.44306),doubleToFloat(-1.3576),doubleToFloat(-0.00506),doubleToFloat(0.42975),doubleToFloat(-1.42722),doubleToFloat(0.03519),doubleToFloat(0.45535),doubleToFloat(-1.43234),doubleToFloat(-0.11262),doubleToFloat(0.25281),doubleToFloat(-1.42978),doubleToFloat(-0.01825),doubleToFloat(0.39981),doubleToFloat(-1.60665),doubleToFloat(-0.04902),doubleToFloat(0.40621),doubleToFloat(-1.60332),doubleToFloat(-0.01087),doubleToFloat(0.39853),doubleToFloat(-1.57747),doubleToFloat(-0.07128),doubleToFloat(0.39341),doubleToFloat(-1.54752),doubleToFloat(-0.09453),doubleToFloat(0.34938),doubleToFloat(-1.48379),doubleToFloat(-0.03159),doubleToFloat(0.4103),doubleToFloat(-1.59359),doubleToFloat(0.07436),doubleToFloat(0.42847),doubleToFloat(-1.42518),doubleToFloat(-0.00771),doubleToFloat(0.43846),doubleToFloat(-1.43592),doubleToFloat(-0.05127),doubleToFloat(0.39622),doubleToFloat(-1.57875),doubleToFloat(0.03363),doubleToFloat(0.43257),doubleToFloat(-1.38755),doubleToFloat(0.08434),doubleToFloat(0.39776),doubleToFloat(-1.58899),doubleToFloat(-0.00917),doubleToFloat(0.39904),doubleToFloat(-1.59334)], Java.type("float[]"))))
                          .setTexCoord(new TextureCoordinate().setPoint(Java.to([doubleToFloat(0.951),doubleToFloat(0.192),doubleToFloat(0.94),doubleToFloat(0.112),doubleToFloat(0.846),doubleToFloat(0.103),doubleToFloat(0.886),doubleToFloat(0.652),doubleToFloat(0.829),doubleToFloat(0.691),doubleToFloat(0.91),doubleToFloat(0.703),doubleToFloat(0.761),doubleToFloat(0.696),doubleToFloat(0.758),doubleToFloat(0.679),doubleToFloat(0.868),doubleToFloat(0.153),doubleToFloat(0.843),doubleToFloat(0.182),doubleToFloat(0.777),doubleToFloat(0.388),doubleToFloat(0.83),doubleToFloat(0.416),doubleToFloat(0.828),doubleToFloat(0.387),doubleToFloat(0.78),doubleToFloat(0.279),doubleToFloat(0.752),doubleToFloat(0.286),doubleToFloat(0.752),doubleToFloat(0.295),doubleToFloat(0.781),doubleToFloat(0.173),doubleToFloat(0.79),doubleToFloat(0.195),doubleToFloat(0.846),doubleToFloat(0.535),doubleToFloat(0.754),doubleToFloat(0.517),doubleToFloat(0.755),doubleToFloat(0.529),doubleToFloat(0.755),doubleToFloat(0.571),doubleToFloat(0.874),doubleToFloat(0.565),doubleToFloat(0.754),doubleToFloat(0.549),doubleToFloat(0.752),doubleToFloat(0.334),doubleToFloat(0.752),doubleToFloat(0.361),doubleToFloat(0.767),doubleToFloat(0.359),doubleToFloat(0.811),doubleToFloat(0.248),doubleToFloat(0.768),doubleToFloat(0.223),doubleToFloat(0.784),doubleToFloat(0.237),doubleToFloat(0.941),doubleToFloat(0.608),doubleToFloat(0.978),doubleToFloat(0.605),doubleToFloat(0.872),doubleToFloat(0.414),doubleToFloat(0.883),doubleToFloat(0.386),doubleToFloat(0.856),doubleToFloat(0.356),doubleToFloat(0.752),doubleToFloat(0.195),doubleToFloat(0.79),doubleToFloat(0.303),doubleToFloat(0.782),doubleToFloat(0.271),doubleToFloat(0.752),doubleToFloat(0.311),doubleToFloat(0.771),doubleToFloat(0.307),doubleToFloat(0.821),doubleToFloat(0.517),doubleToFloat(0.901),doubleToFloat(0.354),doubleToFloat(0.849),doubleToFloat(0.307),doubleToFloat(0.884),doubleToFloat(0.53),doubleToFloat(0.765),doubleToFloat(0.387),doubleToFloat(0.752),doubleToFloat(0.441),doubleToFloat(0.753),doubleToFloat(0.507),doubleToFloat(0.841),doubleToFloat(0.455),doubleToFloat(0.883),doubleToFloat(0.575),doubleToFloat(0.753),doubleToFloat(0.593),doubleToFloat(0.891),doubleToFloat(0.587),doubleToFloat(0.95),doubleToFloat(0.678),doubleToFloat(0.989),doubleToFloat(0.631),doubleToFloat(0.777),doubleToFloat(0.37),doubleToFloat(0.786),doubleToFloat(0.333),doubleToFloat(0.752),doubleToFloat(0.17),doubleToFloat(0.752),doubleToFloat(0.269),doubleToFloat(0.772),doubleToFloat(0.33),doubleToFloat(0.9),doubleToFloat(0.547),doubleToFloat(0.965),doubleToFloat(0.57),doubleToFloat(0.974),doubleToFloat(0.565),doubleToFloat(0.834),doubleToFloat(0.363),doubleToFloat(0.941),doubleToFloat(0.382),doubleToFloat(0.758),doubleToFloat(0.635),doubleToFloat(0.959),doubleToFloat(0.584),doubleToFloat(0.77),doubleToFloat(0.417),doubleToFloat(0.598),doubleToFloat(0.064),doubleToFloat(0.556),doubleToFloat(0.032),doubleToFloat(0.551),doubleToFloat(0.063),doubleToFloat(0.998),doubleToFloat(0.604),doubleToFloat(0.997),doubleToFloat(0.595),doubleToFloat(0.997),doubleToFloat(0.587),doubleToFloat(0.995),doubleToFloat(0.576),doubleToFloat(0.637),doubleToFloat(0.049),doubleToFloat(0.632),doubleToFloat(0.021),doubleToFloat(0.629),doubleToFloat(0.07),doubleToFloat(0.61),doubleToFloat(0.013),doubleToFloat(0.779),doubleToFloat(0.257),doubleToFloat(0.847),doubleToFloat(0.286),doubleToFloat(0.752),doubleToFloat(0.244),doubleToFloat(0.752),doubleToFloat(0.248),doubleToFloat(0.786),doubleToFloat(0.245),doubleToFloat(0.967),doubleToFloat(0.298),doubleToFloat(0.925),doubleToFloat(0.237),doubleToFloat(0.753),doubleToFloat(0.145),doubleToFloat(0.744),doubleToFloat(0.083),doubleToFloat(0.794),doubleToFloat(0.382),doubleToFloat(0.816),doubleToFloat(0.369),doubleToFloat(0.79),doubleToFloat(0.361),doubleToFloat(0.821),doubleToFloat(0.355),doubleToFloat(0.834),doubleToFloat(0.333),doubleToFloat(0.752),doubleToFloat(0.229),doubleToFloat(0.752),doubleToFloat(0.238),doubleToFloat(0.752),doubleToFloat(0.416),doubleToFloat(0.955),doubleToFloat(0.364),doubleToFloat(0.866),doubleToFloat(0.291),doubleToFloat(0.988),doubleToFloat(0.657),doubleToFloat(0.804),doubleToFloat(0.363),doubleToFloat(0.626),doubleToFloat(0.159),doubleToFloat(0.66),doubleToFloat(0.093),doubleToFloat(0.611),doubleToFloat(0.647),doubleToFloat(0.561),doubleToFloat(0.661),doubleToFloat(0.631),doubleToFloat(0.701),doubleToFloat(0.555),doubleToFloat(0.195),doubleToFloat(0.668),doubleToFloat(0.183),doubleToFloat(0.677),doubleToFloat(0.387),doubleToFloat(0.675),doubleToFloat(0.42),doubleToFloat(0.727),doubleToFloat(0.388),doubleToFloat(0.724),doubleToFloat(0.279),doubleToFloat(0.733),doubleToFloat(0.307),doubleToFloat(0.715),doubleToFloat(0.195),doubleToFloat(0.723),doubleToFloat(0.173),doubleToFloat(0.639),doubleToFloat(0.524),doubleToFloat(0.646),doubleToFloat(0.551),doubleToFloat(0.737),doubleToFloat(0.359),doubleToFloat(0.694),doubleToFloat(0.249),doubleToFloat(0.737),doubleToFloat(0.223),doubleToFloat(0.694),doubleToFloat(0.696),doubleToFloat(0.572),doubleToFloat(0.585),doubleToFloat(0.53),doubleToFloat(0.603),doubleToFloat(0.606),doubleToFloat(0.617),doubleToFloat(0.623),doubleToFloat(0.386),doubleToFloat(0.649),doubleToFloat(0.356),doubleToFloat(0.619),doubleToFloat(0.363),doubleToFloat(0.723),doubleToFloat(0.27),doubleToFloat(0.677),doubleToFloat(0.501),doubleToFloat(0.655),doubleToFloat(0.307),doubleToFloat(0.603),doubleToFloat(0.509),doubleToFloat(0.74),doubleToFloat(0.387),doubleToFloat(0.752),doubleToFloat(0.387),doubleToFloat(0.667),doubleToFloat(0.434),doubleToFloat(0.653),doubleToFloat(0.577),doubleToFloat(0.642),doubleToFloat(0.599),doubleToFloat(0.518),doubleToFloat(0.634),doubleToFloat(0.646),doubleToFloat(0.417),doubleToFloat(0.728),doubleToFloat(0.37),doubleToFloat(0.718),doubleToFloat(0.333),doubleToFloat(0.732),doubleToFloat(0.33),doubleToFloat(0.714),doubleToFloat(0.303),doubleToFloat(0.591),doubleToFloat(0.424),doubleToFloat(0.59),doubleToFloat(0.546),doubleToFloat(0.67),doubleToFloat(0.363),doubleToFloat(0.552),doubleToFloat(0.534),doubleToFloat(0.564),doubleToFloat(0.57),doubleToFloat(0.735),doubleToFloat(0.417),doubleToFloat(0.629),doubleToFloat(0.069),doubleToFloat(0.598),doubleToFloat(0.064),doubleToFloat(0.61),doubleToFloat(0.013),doubleToFloat(0.507),doubleToFloat(0.605),doubleToFloat(0.502),doubleToFloat(0.592),doubleToFloat(0.504),doubleToFloat(0.576),doubleToFloat(0.632),doubleToFloat(0.021),doubleToFloat(0.53),doubleToFloat(0.574),doubleToFloat(0.556),doubleToFloat(0.032),doubleToFloat(0.536),doubleToFloat(0.362),doubleToFloat(0.72),doubleToFloat(0.245),doubleToFloat(0.721),doubleToFloat(0.237),doubleToFloat(0.657),doubleToFloat(0.288),doubleToFloat(0.752),doubleToFloat(0.209),doubleToFloat(0.725),doubleToFloat(0.249),doubleToFloat(0.752),doubleToFloat(0.257),doubleToFloat(0.56),doubleToFloat(0.238),doubleToFloat(0.536),doubleToFloat(0.296),doubleToFloat(0.555),doubleToFloat(0.117),doubleToFloat(0.707),doubleToFloat(0.381),doubleToFloat(0.688),doubleToFloat(0.369),doubleToFloat(0.713),doubleToFloat(0.36),doubleToFloat(0.671),doubleToFloat(0.333),doubleToFloat(0.53),doubleToFloat(0.661),doubleToFloat(0.638),doubleToFloat(0.291),doubleToFloat(0.701),doubleToFloat(0.364),doubleToFloat(0.779),doubleToFloat(0.249),doubleToFloat(0.725),doubleToFloat(0.257),doubleToFloat(0.684),doubleToFloat(0.355),doubleToFloat(0.752),doubleToFloat(0.223),doubleToFloat(0.551),doubleToFloat(0.063),doubleToFloat(0.789),doubleToFloat(0.37),doubleToFloat(0.637),doubleToFloat(0.049),doubleToFloat(0.714),doubleToFloat(0.371)], Java.type("float[]")))))))
                    .addChild(new Transform().setDEF("dad_BODY_FACES01_FACES").setRotation(Java.to([doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1.571)], Java.type("float[]"))).setScale(Java.to([doubleToFloat(0.4132),doubleToFloat(0.4132),doubleToFloat(0.4132)], Java.type("float[]"))).setTranslation(Java.to([doubleToFloat(-0.02585),doubleToFloat(1.03714),doubleToFloat(-0.09053)], Java.type("float[]")))
                      .addChild(new Shape().setDEF("BODY_FACES01_FACES")
                        .setAppearance(new Appearance()
                          .setTexture(new ImageTexture().setUSE("marine_camo"))
                          .setMaterial(new Material().setDEF("material1_mat").setAmbientIntensity(1).setDiffuseColor(Java.to([doubleToFloat(0.1255),doubleToFloat(0.1843),doubleToFloat(0.09804)], Java.type("float[]"))).setShininess(0.056)))
                        .setGeometry(new IndexedFaceSet().setCcw(false).setCoordIndex(Java.to([0,1,2,-1,3,4,5,-1,6,3,7,-1,8,9,10,-1,11,12,13,-1,14,10,15,-1,11,16,17,-1,18,9,8,-1,19,20,21,-1,22,6,7,-1,22,23,6,-1,3,24,25,-1,24,26,27,-1,28,17,29,-1,25,24,30,-1,19,23,22,-1,19,21,23,-1,3,31,7,-1,3,25,31,-1,14,32,25,-1,25,33,34,-1,7,35,36,-1,7,31,35,-1,15,0,2,-1,9,0,15,-1,31,25,35,-1,35,34,37,-1,36,38,39,-1,36,35,40,-1,39,41,18,-1,7,36,39,-1,25,32,33,-1,15,2,33,-1,35,25,34,-1,34,33,42,-1,18,0,9,-1,18,41,0,-1,40,35,37,-1,40,43,44,-1,43,45,44,-1,46,47,48,-1,49,48,47,-1,43,40,37,-1,50,43,51,-1,2,46,52,-1,46,48,53,-1,51,42,33,-1,54,52,53,-1,39,55,41,-1,45,49,44,-1,50,56,45,-1,50,57,56,-1,53,48,58,-1,48,59,58,-1,60,54,53,-1,60,53,58,-1,57,50,54,-1,57,54,60,-1,49,59,48,-1,61,59,49,-1,45,61,49,-1,56,61,45,-1,11,13,16,-1,17,28,62,-1,28,29,24,-1,28,24,27,-1,11,17,62,-1,10,9,15,-1,19,63,20,-1,12,20,13,-1,21,20,12,-1,19,8,63,-1,7,39,64,-1,22,7,64,-1,26,4,65,-1,6,23,4,-1,3,5,24,-1,27,26,65,-1,54,51,52,-1,2,52,33,-1,51,33,52,-1,50,51,54,-1,43,37,51,-1,43,50,45,-1,52,46,53,-1,2,1,46,-1,44,55,39,-1,55,66,1,-1,44,49,55,-1,39,38,44,-1,41,55,1,-1,41,1,0,-1,66,47,1,-1,1,47,46,-1,49,47,66,-1,49,66,55,-1,30,14,25,-1,17,16,29,-1,19,18,8,-1,20,63,67,-1,20,67,13,-1,13,67,14,-1,67,63,10,-1,67,10,14,-1,19,22,18,-1,8,10,63,-1,37,34,42,-1,37,42,51,-1,38,40,44,-1,36,40,38,-1,32,15,33,-1,14,15,32,-1,22,64,18,-1,39,18,64,-1,4,23,65,-1,6,4,3,-1,24,5,26,-1,26,5,4,-1,29,14,30,-1,24,29,30,-1,29,16,14,-1,13,14,16,-1,68,69,70,-1,71,72,73,-1,74,75,73,-1,76,77,78,-1,79,80,81,-1,82,83,76,-1,81,84,85,-1,77,86,78,-1,87,88,89,-1,90,75,74,-1,90,74,91,-1,92,73,93,-1,92,94,95,-1,96,84,97,-1,98,92,93,-1,88,90,91,-1,88,91,89,-1,73,75,99,-1,93,73,99,-1,82,93,100,-1,101,93,102,-1,75,103,104,-1,75,104,99,-1,83,69,68,-1,77,83,68,-1,93,99,104,-1,102,104,105,-1,103,106,107,-1,103,108,104,-1,109,106,86,-1,75,106,103,-1,100,93,101,-1,83,101,69,-1,102,93,104,-1,101,102,110,-1,68,86,77,-1,68,109,86,-1,105,104,108,-1,108,111,112,-1,112,111,113,-1,114,115,116,-1,116,117,114,-1,105,108,112,-1,118,112,119,-1,69,120,115,-1,115,121,116,-1,101,110,118,-1,121,120,122,-1,123,106,109,-1,117,113,111,-1,119,113,124,-1,119,124,125,-1,116,121,126,-1,116,126,127,-1,121,122,128,-1,121,128,126,-1,122,119,125,-1,122,125,128,-1,116,127,117,-1,127,129,117,-1,117,129,113,-1,129,124,113,-1,81,85,79,-1,130,97,84,-1,96,97,92,-1,92,97,94,-1,81,130,84,-1,76,83,77,-1,131,88,87,-1,80,79,87,-1,87,89,80,-1,131,78,88,-1,75,132,106,-1,90,132,75,-1,95,133,72,-1,72,91,74,-1,92,71,73,-1,95,94,133,-1,120,118,122,-1,69,101,120,-1,120,101,118,-1,118,119,122,-1,118,105,112,-1,112,113,119,-1,115,120,121,-1,69,115,70,-1,123,111,106,-1,70,134,123,-1,117,111,123,-1,106,111,107,-1,70,123,109,-1,70,109,68,-1,114,134,70,-1,70,115,114,-1,114,117,134,-1,134,117,123,-1,98,93,82,-1,84,96,85,-1,78,86,88,-1,135,131,87,-1,135,87,79,-1,79,82,135,-1,135,76,131,-1,135,82,76,-1,88,86,90,-1,76,78,131,-1,110,102,105,-1,110,105,118,-1,107,111,108,-1,103,107,108,-1,100,101,83,-1,82,100,83,-1,86,132,90,-1,86,106,132,-1,72,133,91,-1,72,74,73,-1,92,95,71,-1,72,71,95,-1,96,98,82,-1,96,92,98,-1,96,82,85,-1,79,85,82,-1,136,137,138,-1,139,140,141,-1,136,138,142,-1,143,139,141,-1,144,145,146,-1,145,139,146,-1,147,148,149,-1,148,150,151,-1,145,152,139,-1,153,154,140,-1,155,156,157,-1,144,155,158,-1,159,156,143,-1,157,156,159,-1,159,143,160,-1,159,160,161,-1,141,140,162,-1,140,154,162,-1,163,164,152,-1,161,160,164,-1,165,153,140,-1,145,163,152,-1,160,166,167,-1,166,141,167,-1,160,168,164,-1,149,169,153,-1,153,170,147,-1,171,172,173,-1,169,172,171,-1,150,174,171,-1,160,167,175,-1,176,139,137,-1,139,138,137,-1,138,139,143,-1,142,138,143,-1,177,136,178,-1,176,137,136,-1,143,179,142,-1,178,179,143,-1,170,148,147,-1,148,151,149,-1,174,169,171,-1,173,150,171,-1,180,167,150,-1,180,150,148,-1,150,167,174,-1,167,141,162,-1,147,149,153,-1,149,173,172,-1,152,153,165,-1,149,172,169,-1,149,151,173,-1,151,150,173,-1,176,177,155,-1,176,136,177,-1,136,142,179,-1,155,177,178,-1,136,179,178,-1,156,178,143,-1,155,178,156,-1,146,155,144,-1,146,139,176,-1,146,176,155,-1,155,157,158,-1,163,181,164,-1,152,164,168,-1,161,164,181,-1,160,175,168,-1,167,162,174,-1,162,154,174,-1,154,169,174,-1,153,169,154,-1,166,143,141,-1,160,143,166,-1,152,165,139,-1,165,140,139,-1,175,180,148,-1,167,180,175,-1,152,168,170,-1,175,148,168,-1,170,168,148,-1,152,170,153,-1,182,183,184,-1,185,186,187,-1,182,188,183,-1,189,186,185,-1,190,191,192,-1,190,192,185,-1,193,194,195,-1,195,196,197,-1,190,185,198,-1,199,187,200,-1,201,202,203,-1,204,202,191,-1,205,189,201,-1,203,205,201,-1,205,206,189,-1,205,207,206,-1,186,208,187,-1,187,208,200,-1,209,198,210,-1,207,210,206,-1,211,187,199,-1,190,198,209,-1,206,212,213,-1,213,212,186,-1,206,210,214,-1,194,199,215,-1,199,193,216,-1,217,218,219,-1,215,217,219,-1,197,217,220,-1,206,221,212,-1,222,184,185,-1,185,184,183,-1,183,189,185,-1,188,189,183,-1,223,182,224,-1,182,184,222,-1,189,188,225,-1,223,189,225,-1,216,193,195,-1,195,194,196,-1,220,217,215,-1,197,218,217,-1,226,197,212,-1,226,195,197,-1,197,220,212,-1,212,208,186,-1,193,199,194,-1,218,194,219,-1,198,211,199,-1,194,215,219,-1,218,196,194,-1,197,196,218,-1,224,222,202,-1,182,222,224,-1,182,225,188,-1,223,224,202,-1,225,182,223,-1,201,189,223,-1,223,202,201,-1,202,192,191,-1,192,222,185,-1,202,222,192,-1,203,202,204,-1,209,210,227,-1,198,214,210,-1,207,227,210,-1,206,214,221,-1,212,220,208,-1,208,220,200,-1,200,220,215,-1,199,200,215,-1,213,186,189,-1,206,213,189,-1,198,185,211,-1,211,185,187,-1,221,195,226,-1,212,221,226,-1,198,216,214,-1,221,214,195,-1,216,195,214,-1,198,199,216,-1,228,229,230,-1,231,232,233,-1,234,235,232,-1,230,236,237,-1,230,237,234,-1,235,238,239,-1,231,233,240,-1,230,229,241,-1,236,241,242,-1,243,244,245,-1,246,247,248,-1,247,249,250,-1,236,242,251,-1,252,253,254,-1,255,256,257,-1,255,258,259,-1,260,261,262,-1,258,229,259,-1,241,229,258,-1,263,264,244,-1,247,264,249,-1,265,244,264,-1,266,238,267,-1,232,268,233,-1,233,269,240,-1,268,270,271,-1,271,270,272,-1,258,263,273,-1,258,233,274,-1,263,243,273,-1,258,274,263,-1,244,265,250,-1,242,243,275,-1,256,260,262,-1,276,269,255,-1,233,258,269,-1,228,276,229,-1,277,240,269,-1,125,124,277,-1,239,238,278,-1,236,251,238,-1,279,280,281,-1,281,282,264,-1,283,284,285,-1,278,238,266,-1,286,278,266,-1,286,266,282,-1,282,266,264,-1,274,281,264,-1,280,287,281,-1,287,282,281,-1,287,286,282,-1,286,287,283,-1,280,283,287,-1,288,278,286,-1,288,286,285,-1,270,288,289,-1,270,289,272,-1,288,290,278,-1,270,290,288,-1,239,270,268,-1,284,289,288,-1,264,267,249,-1,248,247,250,-1,242,275,291,-1,250,249,245,-1,237,236,238,-1,251,242,291,-1,238,251,267,-1,251,291,267,-1,233,268,274,-1,271,274,268,-1,270,239,290,-1,271,279,274,-1,279,281,274,-1,277,269,276,-1,292,257,261,-1,292,261,260,-1,256,262,253,-1,261,293,254,-1,262,254,253,-1,257,252,293,-1,261,257,293,-1,265,248,250,-1,246,248,265,-1,284,283,280,-1,283,285,286,-1,288,285,284,-1,280,279,271,-1,272,280,271,-1,272,289,284,-1,272,284,280,-1,244,250,245,-1,263,244,243,-1,245,291,275,-1,275,243,245,-1,264,247,246,-1,246,265,264,-1,249,267,291,-1,249,291,245,-1,241,258,273,-1,242,273,243,-1,274,264,263,-1,266,267,264,-1,261,254,262,-1,252,254,293,-1,277,276,228,-1,234,232,231,-1,229,260,259,-1,259,256,255,-1,255,257,292,-1,269,258,255,-1,259,260,256,-1,292,260,229,-1,276,292,229,-1,276,255,292,-1,290,239,278,-1,237,238,235,-1,241,273,242,-1,230,241,236,-1,234,237,235,-1,235,239,232,-1,232,239,268,-1,257,256,252,-1,256,253,252,-1,127,231,129,-1,230,128,228,-1,126,230,234,-1,228,125,277,-1,126,128,230,-1,128,125,228,-1,127,234,231,-1,231,240,129,-1,129,240,124,-1,126,234,127,-1,124,240,277,-1,294,295,296,-1,297,298,299,-1,300,298,301,-1,302,295,303,-1,295,300,303,-1,301,304,305,-1,306,297,299,-1,296,295,307,-1,307,302,308,-1,309,310,311,-1,312,313,314,-1,313,315,316,-1,302,317,308,-1,318,319,320,-1,321,322,323,-1,323,324,325,-1,326,327,328,-1,324,296,325,-1,296,307,325,-1,329,310,330,-1,313,316,330,-1,331,330,310,-1,332,333,305,-1,334,298,297,-1,335,297,306,-1,336,334,337,-1,338,336,337,-1,325,339,329,-1,325,340,297,-1,329,339,311,-1,325,329,340,-1,315,331,310,-1,311,308,341,-1,327,322,328,-1,342,323,335,-1,297,335,325,-1,294,296,342,-1,343,335,306,-1,57,343,56,-1,304,344,305,-1,302,305,317,-1,345,346,347,-1,345,330,348,-1,349,350,351,-1,344,332,305,-1,352,332,344,-1,352,348,332,-1,348,330,332,-1,345,340,330,-1,346,345,353,-1,353,345,348,-1,353,348,352,-1,353,352,349,-1,346,353,349,-1,354,352,344,-1,354,350,352,-1,355,354,336,-1,355,336,338,-1,354,344,356,-1,336,354,356,-1,336,304,334,-1,351,354,355,-1,316,333,330,-1,312,315,313,-1,341,308,357,-1,315,309,316,-1,303,305,302,-1,357,308,317,-1,305,333,317,-1,317,333,357,-1,297,340,334,-1,337,334,340,-1,336,356,304,-1,337,340,347,-1,347,340,345,-1,343,342,335,-1,358,326,321,-1,326,358,327,-1,320,328,322,-1,326,319,359,-1,319,328,320,-1,321,359,318,-1,326,359,321,-1,331,315,312,-1,314,331,312,-1,351,346,349,-1,349,352,350,-1,350,354,351,-1,346,337,347,-1,338,337,346,-1,351,355,338,-1,338,346,351,-1,315,310,309,-1,310,329,311,-1,309,341,357,-1,309,311,341,-1,313,330,314,-1,314,330,331,-1,316,357,333,-1,316,309,357,-1,307,339,325,-1,311,339,308,-1,329,330,340,-1,332,330,333,-1,319,326,328,-1,318,359,319,-1,343,294,342,-1,300,299,298,-1,327,296,324,-1,323,322,324,-1,321,323,358,-1,335,323,325,-1,327,324,322,-1,358,296,327,-1,358,342,296,-1,342,358,323,-1,356,344,304,-1,303,301,305,-1,339,307,308,-1,307,295,302,-1,300,301,303,-1,298,304,301,-1,334,304,298,-1,321,318,322,-1,322,318,320,-1,61,299,59,-1,294,60,295,-1,58,300,295,-1,343,57,294,-1,60,58,295,-1,57,60,294,-1,59,299,300,-1,306,299,61,-1,56,306,61,-1,58,59,300,-1,56,343,306,-1,360,361,362,-1,363,364,365,-1,366,363,365,-1,367,363,366,-1,368,367,369,-1,367,368,363,-1,364,370,365,-1,366,371,367,-1,366,372,371,-1,373,374,375,-1,367,371,373,-1,375,374,376,-1,377,372,366,-1,365,377,366,-1,378,379,360,-1,367,373,375,-1,380,381,373,-1,371,380,373,-1,371,372,380,-1,372,382,380,-1,383,376,384,-1,376,385,384,-1,386,384,387,-1,386,383,384,-1,373,388,374,-1,373,381,388,-1,376,388,385,-1,376,374,388,-1,372,389,382,-1,377,389,372,-1,389,386,387,-1,377,386,389,-1,380,390,381,-1,380,391,390,-1,380,392,391,-1,382,392,380,-1,384,393,394,-1,384,385,393,-1,395,384,394,-1,387,384,395,-1,389,387,395,-1,389,395,396,-1,389,392,382,-1,389,396,392,-1,381,390,388,-1,390,397,388,-1,385,388,393,-1,388,397,393,-1,398,399,391,-1,391,399,390,-1,391,400,398,-1,378,401,402,-1,395,394,361,-1,394,393,361,-1,379,395,403,-1,395,361,403,-1,378,396,395,-1,379,403,360,-1,392,378,400,-1,378,360,401,-1,399,404,397,-1,399,397,390,-1,405,404,406,-1,393,397,405,-1,405,406,361,-1,392,400,391,-1,402,401,407,-1,408,409,410,-1,409,411,412,-1,360,413,411,-1,410,409,412,-1,414,412,415,-1,399,416,404,-1,417,418,419,-1,404,420,406,-1,404,416,420,-1,421,418,417,-1,422,423,399,-1,424,425,415,-1,406,420,362,-1,426,408,427,-1,398,402,407,-1,408,163,145,-1,410,163,408,-1,181,414,161,-1,428,414,181,-1,410,181,163,-1,410,428,181,-1,158,157,419,-1,158,419,418,-1,425,157,159,-1,425,419,157,-1,414,425,161,-1,425,159,161,-1,421,158,418,-1,421,144,158,-1,408,144,421,-1,408,145,144,-1,411,413,415,-1,429,360,411,-1,362,420,413,-1,430,425,424,-1,422,427,423,-1,399,423,416,-1,422,426,427,-1,398,422,399,-1,430,419,425,-1,417,419,430,-1,413,424,415,-1,360,362,413,-1,401,360,429,-1,401,429,407,-1,398,407,422,-1,409,408,426,-1,378,395,379,-1,396,378,392,-1,361,360,403,-1,361,406,362,-1,397,404,405,-1,393,405,361,-1,400,402,398,-1,400,378,402,-1,410,412,428,-1,414,428,412,-1,429,411,409,-1,429,409,426,-1,412,411,415,-1,425,414,415,-1,416,424,420,-1,420,424,413,-1,423,430,416,-1,416,430,424,-1,407,429,426,-1,422,407,426,-1,427,417,423,-1,427,408,421,-1,427,421,417,-1,417,430,423,-1,431,432,433,-1,363,368,434,-1,363,434,435,-1,436,437,438,-1,437,434,368,-1,439,436,438,-1,440,363,435,-1,364,363,440,-1,441,432,442,-1,438,437,368,-1,443,444,437,-1,437,444,434,-1,435,434,444,-1,435,444,445,-1,446,447,439,-1,439,447,448,-1,447,449,450,-1,447,446,449,-1,451,437,436,-1,451,443,437,-1,439,448,451,-1,439,451,436,-1,435,445,452,-1,440,435,452,-1,450,449,452,-1,449,440,452,-1,453,444,443,-1,453,454,444,-1,444,454,455,-1,445,444,455,-1,447,456,457,-1,447,457,448,-1,447,458,456,-1,447,450,458,-1,458,450,452,-1,458,452,459,-1,452,445,455,-1,452,455,459,-1,451,453,443,-1,451,460,453,-1,448,457,451,-1,451,457,460,-1,461,462,454,-1,453,461,454,-1,454,462,463,-1,441,464,465,-1,431,456,458,-1,456,431,457,-1,466,458,442,-1,431,458,466,-1,458,459,441,-1,466,442,432,-1,455,463,441,-1,432,441,465,-1,460,467,461,-1,460,461,453,-1,468,469,467,-1,457,468,460,-1,431,469,468,-1,455,454,463,-1,465,464,470,-1,471,472,473,-1,474,473,475,-1,476,432,474,-1,472,475,473,-1,477,478,475,-1,479,461,467,-1,480,481,482,-1,467,469,483,-1,467,483,479,-1,482,481,484,-1,485,486,461,-1,478,487,488,-1,433,483,469,-1,489,490,471,-1,462,470,464,-1,190,209,471,-1,472,471,209,-1,207,477,227,-1,477,491,227,-1,227,472,209,-1,227,491,472,-1,204,480,203,-1,480,204,481,-1,487,205,203,-1,487,203,480,-1,477,207,487,-1,487,207,205,-1,204,484,481,-1,204,191,484,-1,471,484,191,-1,190,471,191,-1,476,474,478,-1,474,432,492,-1,433,476,483,-1,488,487,493,-1,485,490,486,-1,479,485,461,-1,486,490,489,-1,461,486,462,-1,493,487,480,-1,493,480,482,-1,476,478,488,-1,476,433,432,-1,432,465,492,-1,465,470,492,-1,462,486,470,-1,473,489,471,-1,458,441,442,-1,459,455,441,-1,431,466,432,-1,431,433,469,-1,460,468,467,-1,457,431,468,-1,463,462,464,-1,441,463,464,-1,472,491,475,-1,477,475,491,-1,474,492,473,-1,492,489,473,-1,478,474,475,-1,487,478,477,-1,479,483,488,-1,483,476,488,-1,479,493,485,-1,479,488,493,-1,470,489,492,-1,486,489,470,-1,485,482,490,-1,490,484,471,-1,482,484,490,-1,493,482,485,-1,494,495,496,-1,497,498,499,-1,497,500,496,-1,501,499,498,-1,502,503,504,-1,505,494,496,-1,501,506,499,-1,495,497,496,-1,497,499,500,-1,507,508,509,-1,510,511,512,-1,513,514,12,-1,515,516,517,-1,516,518,519,-1,27,520,521,-1,27,65,522,-1,517,523,514,-1,524,525,526,-1,527,503,528,-1,529,526,530,-1,515,517,513,-1,531,513,532,-1,533,534,535,-1,11,62,536,-1,12,514,21,-1,537,538,539,-1,524,28,525,-1,534,540,541,-1,27,522,520,-1,532,12,11,-1,528,542,543,-1,28,544,525,-1,543,542,545,-1,527,528,543,-1,542,524,526,-1,528,503,536,-1,546,28,524,-1,526,525,530,-1,536,546,542,-1,542,546,524,-1,544,547,548,-1,28,27,549,-1,21,514,537,-1,545,542,550,-1,550,542,529,-1,542,526,529,-1,530,525,548,-1,551,544,521,-1,552,530,547,-1,530,548,547,-1,549,27,521,-1,553,547,554,-1,496,500,555,-1,496,555,556,-1,370,496,556,-1,369,557,499,-1,506,369,499,-1,555,558,376,-1,500,499,558,-1,559,560,494,-1,561,562,563,-1,561,559,564,-1,562,501,563,-1,565,502,566,-1,559,494,505,-1,562,506,501,-1,560,559,561,-1,561,564,562,-1,567,568,439,-1,569,570,571,-1,570,533,507,-1,572,573,574,-1,80,575,565,-1,576,516,515,-1,572,574,516,-1,94,577,133,-1,577,578,579,-1,577,569,578,-1,574,573,561,-1,580,581,582,-1,581,583,582,-1,575,531,565,-1,575,515,531,-1,584,585,586,-1,587,130,81,-1,80,588,575,-1,133,579,91,-1,589,580,97,-1,553,533,590,-1,94,584,577,-1,80,565,81,-1,591,527,543,-1,97,592,593,-1,594,543,545,-1,543,594,591,-1,594,581,580,-1,587,566,591,-1,589,97,130,-1,582,583,595,-1,594,589,587,-1,591,594,587,-1,595,596,592,-1,94,97,593,-1,89,91,579,-1,594,545,597,-1,594,598,581,-1,597,598,594,-1,581,598,583,-1,582,595,592,-1,583,552,596,-1,583,596,595,-1,592,596,599,-1,94,593,585,-1,559,568,567,-1,559,505,370,-1,568,370,364,-1,562,369,506,-1,600,369,562,-1,564,601,562,-1,562,601,600,-1,555,376,556,-1,369,367,557,-1,367,375,557,-1,558,375,376,-1,558,557,375,-1,564,567,601,-1,567,439,601,-1,438,368,600,-1,600,368,369,-1,499,557,558,-1,500,558,555,-1,601,438,600,-1,601,439,438,-1,565,531,502,-1,502,531,532,-1,575,576,515,-1,575,588,576,-1,531,515,513,-1,532,513,12,-1,536,532,11,-1,502,532,503,-1,566,527,591,-1,566,502,504,-1,370,505,496,-1,556,376,383,-1,386,556,383,-1,365,556,386,-1,568,446,439,-1,446,568,449,-1,449,364,440,-1,370,556,365,-1,568,559,370,-1,559,567,564,-1,568,364,449,-1,365,386,377,-1,566,504,527,-1,504,503,527,-1,528,536,542,-1,503,532,536,-1,565,566,587,-1,81,565,587,-1,587,589,130,-1,21,537,23,-1,65,23,537,-1,579,573,572,-1,602,561,573,-1,512,497,495,-1,539,538,603,-1,65,537,522,-1,94,585,584,-1,133,577,579,-1,89,579,588,-1,80,89,588,-1,523,519,538,-1,519,497,538,-1,513,517,514,-1,585,592,599,-1,525,544,548,-1,580,582,97,-1,594,580,589,-1,546,62,28,-1,536,62,546,-1,537,523,538,-1,522,537,539,-1,522,539,604,-1,509,508,604,-1,514,523,537,-1,518,498,519,-1,579,578,573,-1,588,579,572,-1,602,560,561,-1,588,572,576,-1,576,572,516,-1,516,523,517,-1,563,501,518,-1,602,510,494,-1,494,512,495,-1,560,602,494,-1,596,605,553,-1,547,553,605,-1,552,547,605,-1,552,605,596,-1,544,549,521,-1,28,549,544,-1,582,592,97,-1,593,592,585,-1,596,553,606,-1,547,551,554,-1,553,554,607,-1,608,590,533,-1,585,599,608,-1,551,521,534,-1,554,534,607,-1,541,604,535,-1,609,608,610,-1,585,608,586,-1,606,553,590,-1,608,606,590,-1,553,607,533,-1,533,607,534,-1,584,569,577,-1,586,609,569,-1,540,604,541,-1,520,522,604,-1,569,609,610,-1,578,569,571,-1,533,535,508,-1,507,533,508,-1,535,534,541,-1,604,508,535,-1,521,520,540,-1,534,521,540,-1,520,604,540,-1,586,608,609,-1,584,586,569,-1,610,533,570,-1,610,608,533,-1,569,610,570,-1,608,599,606,-1,599,596,606,-1,547,544,551,-1,554,551,534,-1,570,507,571,-1,578,611,573,-1,603,538,512,-1,509,539,603,-1,612,571,507,-1,611,602,573,-1,512,538,497,-1,511,509,603,-1,494,510,512,-1,612,507,510,-1,578,571,611,-1,611,612,602,-1,611,571,612,-1,602,612,510,-1,509,604,539,-1,511,603,512,-1,507,509,511,-1,510,507,511,-1,519,498,497,-1,518,501,498,-1,574,563,518,-1,574,561,563,-1,574,518,516,-1,516,519,523,-1], Java.type("int[]"))).setCreaseAngle(3.142).setTexCoordIndex(Java.to([0,1,2,-1,3,4,5,-1,6,3,7,-1,8,9,10,-1,11,12,13,-1,14,10,15,-1,11,16,17,-1,18,9,8,-1,19,20,21,-1,22,6,7,-1,22,23,6,-1,3,24,25,-1,24,26,27,-1,28,17,29,-1,25,24,30,-1,19,31,32,-1,19,21,31,-1,3,33,7,-1,3,25,33,-1,14,34,25,-1,25,35,36,-1,7,37,38,-1,7,33,37,-1,15,0,2,-1,9,0,15,-1,33,25,37,-1,37,36,39,-1,38,40,41,-1,38,37,42,-1,43,44,18,-1,7,38,41,-1,25,34,35,-1,15,2,35,-1,37,25,36,-1,36,35,45,-1,18,0,9,-1,18,44,0,-1,42,37,39,-1,42,46,47,-1,46,48,47,-1,49,50,51,-1,52,51,50,-1,46,42,39,-1,53,46,54,-1,2,49,55,-1,49,51,56,-1,54,45,35,-1,57,55,56,-1,43,58,44,-1,59,52,60,-1,53,61,48,-1,53,62,61,-1,56,51,63,-1,51,64,63,-1,65,57,56,-1,65,56,63,-1,62,53,57,-1,62,57,65,-1,52,64,51,-1,66,64,52,-1,59,66,52,-1,61,67,48,-1,11,13,16,-1,17,28,68,-1,28,29,24,-1,28,24,27,-1,11,17,68,-1,10,9,15,-1,19,69,20,-1,12,20,13,-1,21,20,12,-1,19,8,69,-1,7,41,70,-1,22,7,70,-1,26,4,71,-1,6,23,4,-1,3,5,24,-1,27,26,71,-1,57,54,55,-1,2,55,35,-1,54,35,55,-1,53,54,57,-1,46,39,54,-1,46,53,48,-1,55,49,56,-1,2,1,49,-1,60,58,43,-1,58,72,1,-1,60,52,58,-1,41,40,47,-1,44,58,1,-1,44,1,0,-1,72,50,1,-1,1,50,49,-1,52,50,72,-1,52,72,58,-1,30,14,25,-1,17,16,29,-1,19,18,8,-1,20,69,73,-1,20,73,13,-1,13,73,14,-1,73,69,10,-1,73,10,14,-1,19,32,18,-1,8,10,69,-1,39,36,45,-1,39,45,54,-1,40,42,47,-1,38,42,40,-1,34,15,35,-1,14,15,34,-1,32,74,18,-1,43,18,74,-1,4,23,71,-1,6,4,3,-1,24,5,26,-1,26,5,4,-1,29,14,30,-1,24,29,30,-1,29,16,14,-1,13,14,16,-1,75,76,77,-1,78,79,80,-1,81,82,80,-1,83,84,85,-1,86,87,88,-1,89,90,83,-1,88,91,92,-1,84,93,85,-1,94,95,96,-1,97,82,81,-1,97,81,98,-1,99,80,100,-1,99,101,102,-1,103,91,104,-1,105,99,100,-1,95,106,107,-1,95,107,96,-1,80,82,108,-1,100,80,108,-1,89,100,109,-1,110,100,111,-1,82,112,113,-1,82,113,108,-1,90,76,75,-1,84,90,75,-1,100,108,113,-1,111,113,114,-1,112,115,116,-1,112,117,113,-1,118,119,93,-1,82,115,112,-1,109,100,110,-1,90,110,76,-1,111,100,113,-1,110,111,120,-1,75,93,84,-1,75,118,93,-1,114,113,117,-1,117,121,122,-1,122,121,123,-1,124,125,126,-1,126,127,124,-1,114,117,122,-1,128,122,129,-1,76,130,125,-1,125,131,126,-1,110,120,128,-1,131,130,132,-1,133,119,118,-1,127,134,135,-1,129,123,136,-1,129,136,137,-1,126,131,138,-1,126,138,139,-1,131,132,140,-1,131,140,138,-1,132,129,137,-1,132,137,140,-1,126,139,127,-1,139,141,127,-1,127,141,134,-1,142,136,123,-1,88,92,86,-1,143,104,91,-1,103,104,99,-1,99,104,101,-1,88,143,91,-1,83,90,84,-1,144,95,94,-1,87,86,94,-1,94,96,87,-1,144,85,95,-1,82,145,115,-1,97,145,82,-1,102,146,79,-1,79,98,81,-1,99,78,80,-1,102,101,146,-1,130,128,132,-1,76,110,130,-1,130,110,128,-1,128,129,132,-1,128,114,122,-1,122,123,129,-1,125,130,131,-1,76,125,77,-1,133,135,119,-1,77,147,133,-1,127,135,133,-1,115,121,116,-1,77,133,118,-1,77,118,75,-1,124,147,77,-1,77,125,124,-1,124,127,147,-1,147,127,133,-1,105,100,89,-1,91,103,92,-1,85,93,95,-1,148,144,94,-1,148,94,86,-1,86,89,148,-1,148,83,144,-1,148,89,83,-1,95,93,106,-1,83,85,144,-1,120,111,114,-1,120,114,128,-1,116,121,117,-1,112,116,117,-1,109,110,90,-1,89,109,90,-1,93,149,106,-1,93,119,149,-1,79,146,98,-1,79,81,80,-1,99,102,78,-1,79,78,102,-1,103,105,89,-1,103,99,105,-1,103,89,92,-1,86,92,89,-1,150,151,152,-1,153,154,155,-1,150,152,156,-1,157,153,155,-1,158,159,160,-1,159,161,160,-1,162,163,164,-1,163,164,165,-1,159,166,161,-1,167,168,169,-1,170,171,172,-1,173,170,174,-1,159,160,161,-1,158,160,159,-1,159,161,166,-1,159,166,175,-1,155,154,176,-1,154,177,176,-1,178,179,180,-1,181,182,179,-1,183,167,169,-1,159,175,166,-1,166,183,167,-1,183,169,167,-1,182,184,179,-1,164,185,167,-1,167,186,162,-1,187,188,189,-1,190,188,187,-1,164,185,191,-1,166,167,186,-1,192,161,193,-1,161,194,193,-1,152,153,157,-1,156,152,157,-1,195,196,197,-1,198,199,196,-1,161,193,194,-1,192,193,161,-1,200,201,202,-1,163,165,164,-1,203,190,187,-1,204,164,191,-1,162,167,164,-1,162,164,163,-1,164,167,185,-1,167,169,168,-1,162,164,167,-1,164,204,191,-1,166,167,183,-1,164,191,185,-1,164,165,204,-1,165,164,204,-1,198,195,170,-1,198,196,195,-1,150,156,205,-1,170,195,197,-1,196,206,197,-1,160,192,161,-1,170,197,171,-1,207,170,173,-1,160,161,192,-1,207,198,170,-1,170,172,174,-1,178,208,179,-1,180,179,184,-1,181,179,208,-1,182,209,184,-1,167,168,185,-1,176,177,203,-1,177,190,203,-1,167,185,168,-1,183,161,169,-1,166,161,183,-1,166,183,161,-1,183,169,161,-1,209,210,201,-1,167,162,186,-1,180,184,200,-1,209,201,184,-1,200,184,201,-1,166,186,167,-1,150,152,151,-1,153,155,154,-1,150,156,152,-1,157,155,153,-1,159,158,160,-1,159,160,161,-1,162,164,211,-1,211,165,164,-1,159,161,166,-1,167,169,168,-1,171,170,172,-1,174,170,173,-1,159,161,160,-1,158,159,160,-1,159,166,161,-1,159,175,166,-1,155,176,154,-1,154,176,177,-1,178,180,179,-1,181,179,182,-1,183,169,167,-1,159,166,175,-1,166,167,183,-1,183,167,169,-1,182,179,184,-1,164,167,185,-1,167,162,186,-1,187,189,188,-1,190,187,188,-1,164,191,185,-1,166,186,167,-1,192,193,161,-1,161,193,194,-1,152,157,153,-1,156,157,152,-1,197,196,195,-1,196,199,198,-1,161,194,193,-1,192,161,193,-1,200,202,201,-1,211,164,165,-1,203,187,190,-1,164,204,191,-1,162,164,167,-1,162,211,164,-1,164,185,167,-1,167,168,169,-1,162,167,164,-1,204,164,191,-1,166,183,167,-1,164,185,191,-1,204,165,164,-1,164,165,204,-1,195,198,170,-1,196,198,195,-1,150,205,156,-1,197,195,170,-1,206,196,197,-1,160,161,192,-1,197,170,171,-1,170,207,173,-1,160,192,161,-1,170,198,207,-1,172,170,174,-1,178,179,208,-1,180,184,179,-1,181,208,179,-1,182,184,209,-1,167,185,168,-1,176,203,177,-1,177,203,190,-1,167,168,185,-1,183,169,161,-1,166,183,161,-1,166,161,183,-1,183,161,169,-1,209,201,210,-1,167,186,162,-1,180,200,184,-1,209,184,201,-1,200,201,184,-1,166,167,186,-1,212,213,214,-1,215,216,217,-1,218,219,216,-1,214,220,221,-1,214,221,218,-1,219,222,223,-1,215,217,224,-1,214,213,225,-1,220,225,226,-1,227,228,229,-1,230,231,232,-1,231,233,234,-1,220,226,235,-1,236,237,238,-1,239,240,241,-1,239,242,243,-1,244,245,246,-1,247,248,249,-1,225,213,250,-1,251,252,253,-1,231,254,233,-1,255,253,252,-1,256,222,257,-1,216,258,217,-1,259,260,261,-1,258,262,263,-1,263,262,264,-1,250,265,266,-1,267,259,268,-1,265,227,266,-1,267,268,251,-1,228,269,234,-1,226,227,270,-1,271,272,273,-1,274,275,276,-1,259,267,260,-1,277,278,279,-1,280,261,260,-1,281,282,280,-1,223,222,283,-1,220,235,222,-1,284,285,286,-1,287,288,254,-1,289,290,291,-1,283,222,256,-1,292,283,256,-1,292,256,288,-1,288,256,254,-1,268,286,252,-1,293,294,287,-1,294,288,287,-1,294,292,288,-1,292,294,289,-1,293,289,294,-1,295,283,292,-1,295,292,291,-1,262,295,296,-1,262,296,264,-1,295,297,283,-1,262,297,295,-1,223,262,258,-1,290,296,295,-1,254,257,233,-1,232,231,234,-1,226,270,298,-1,234,233,229,-1,221,220,222,-1,235,226,298,-1,222,235,257,-1,235,298,257,-1,259,299,268,-1,300,268,299,-1,262,223,297,-1,300,284,268,-1,284,286,268,-1,280,260,278,-1,301,302,245,-1,301,245,244,-1,271,273,303,-1,245,304,305,-1,246,305,306,-1,241,236,307,-1,245,302,304,-1,269,232,234,-1,308,309,255,-1,310,311,285,-1,289,291,292,-1,295,291,290,-1,285,284,300,-1,312,285,300,-1,264,296,290,-1,312,310,285,-1,228,234,229,-1,265,228,227,-1,229,298,270,-1,270,227,229,-1,254,231,230,-1,308,255,252,-1,233,257,298,-1,233,298,229,-1,225,250,266,-1,226,266,227,-1,268,252,251,-1,256,257,254,-1,245,305,246,-1,236,238,307,-1,280,278,277,-1,218,216,215,-1,248,272,249,-1,243,240,239,-1,276,302,301,-1,313,242,239,-1,249,272,271,-1,301,244,314,-1,274,301,314,-1,274,276,301,-1,297,223,283,-1,221,222,219,-1,225,266,226,-1,214,225,220,-1,218,221,219,-1,219,223,216,-1,216,223,258,-1,241,240,236,-1,240,237,236,-1,315,215,316,-1,214,317,212,-1,318,214,218,-1,212,319,320,-1,318,317,214,-1,317,319,212,-1,315,218,215,-1,215,224,316,-1,321,261,282,-1,318,218,315,-1,282,261,280,-1,212,214,213,-1,217,216,215,-1,218,216,219,-1,220,214,221,-1,214,218,221,-1,219,223,222,-1,224,217,215,-1,213,214,225,-1,225,220,226,-1,229,228,227,-1,232,231,230,-1,231,234,233,-1,220,235,226,-1,236,238,237,-1,241,240,239,-1,239,243,242,-1,245,244,246,-1,249,248,247,-1,213,225,250,-1,251,253,252,-1,231,233,254,-1,255,252,253,-1,256,257,222,-1,258,216,217,-1,260,259,261,-1,262,258,263,-1,264,262,263,-1,250,266,265,-1,267,268,259,-1,265,266,227,-1,267,251,268,-1,234,269,228,-1,227,226,270,-1,272,271,273,-1,274,276,275,-1,259,260,267,-1,277,279,278,-1,280,260,261,-1,281,280,282,-1,223,283,222,-1,220,222,235,-1,286,285,284,-1,287,254,288,-1,289,291,290,-1,283,256,222,-1,292,256,283,-1,292,288,256,-1,288,254,256,-1,286,268,252,-1,293,287,294,-1,294,287,288,-1,294,288,292,-1,294,292,289,-1,293,294,289,-1,295,292,283,-1,295,291,292,-1,296,295,262,-1,296,262,264,-1,295,283,297,-1,262,295,297,-1,262,223,258,-1,290,295,296,-1,233,257,254,-1,232,234,231,-1,270,226,298,-1,234,229,233,-1,221,222,220,-1,298,226,235,-1,222,257,235,-1,235,257,298,-1,259,268,299,-1,300,299,268,-1,262,297,223,-1,300,268,284,-1,284,268,286,-1,280,278,260,-1,301,245,302,-1,245,301,244,-1,303,273,271,-1,245,305,304,-1,305,246,306,-1,241,307,236,-1,245,304,302,-1,269,234,232,-1,308,255,309,-1,310,285,311,-1,289,292,291,-1,291,295,290,-1,285,300,284,-1,312,300,285,-1,290,296,264,-1,312,285,310,-1,234,228,229,-1,228,265,227,-1,229,270,298,-1,229,227,270,-1,231,254,230,-1,308,252,255,-1,233,298,257,-1,233,229,298,-1,225,266,250,-1,227,266,226,-1,251,252,268,-1,256,254,257,-1,305,245,246,-1,236,307,238,-1,280,277,278,-1,218,215,216,-1,272,248,249,-1,239,240,243,-1,302,276,301,-1,313,239,242,-1,272,249,271,-1,301,314,244,-1,301,274,314,-1,274,301,276,-1,297,283,223,-1,221,219,222,-1,266,225,226,-1,225,214,220,-1,218,219,221,-1,216,223,219,-1,258,223,216,-1,241,236,240,-1,240,236,237,-1,316,215,315,-1,212,317,214,-1,318,218,214,-1,320,319,212,-1,317,318,214,-1,319,317,212,-1,315,215,218,-1,224,215,316,-1,282,261,321,-1,318,315,218,-1,282,280,261,-1,322,323,324,-1,325,326,327,-1,328,325,327,-1,329,330,331,-1,332,329,333,-1,329,332,330,-1,326,334,327,-1,331,335,329,-1,331,336,335,-1,337,338,339,-1,329,335,337,-1,339,338,340,-1,341,342,328,-1,327,341,328,-1,343,344,322,-1,329,337,339,-1,345,346,337,-1,335,345,337,-1,335,336,345,-1,336,347,345,-1,348,340,349,-1,340,350,349,-1,351,349,352,-1,351,348,349,-1,337,353,338,-1,337,346,353,-1,340,353,350,-1,340,338,353,-1,342,354,355,-1,341,354,342,-1,354,351,352,-1,341,351,354,-1,345,356,346,-1,345,357,356,-1,345,358,357,-1,347,358,345,-1,349,359,360,-1,349,350,359,-1,361,349,360,-1,352,349,361,-1,354,352,361,-1,354,361,362,-1,354,363,355,-1,354,362,363,-1,346,356,353,-1,356,364,353,-1,350,353,359,-1,353,364,359,-1,365,366,357,-1,357,366,356,-1,357,367,365,-1,343,368,369,-1,361,360,323,-1,360,359,323,-1,344,361,370,-1,361,323,370,-1,343,362,361,-1,344,370,322,-1,363,343,371,-1,343,322,368,-1,366,372,364,-1,366,364,356,-1,373,372,374,-1,359,364,373,-1,373,374,323,-1,358,367,357,-1,369,368,375,-1,376,377,378,-1,377,379,380,-1,322,381,379,-1,378,377,380,-1,382,380,383,-1,366,384,372,-1,385,386,387,-1,372,388,374,-1,372,384,388,-1,389,386,385,-1,390,391,366,-1,392,393,383,-1,374,388,324,-1,394,395,396,-1,365,397,398,-1,376,399,400,-1,378,399,376,-1,401,382,402,-1,403,382,401,-1,378,401,399,-1,378,403,401,-1,404,405,387,-1,404,387,386,-1,393,405,406,-1,393,387,405,-1,382,393,402,-1,393,406,402,-1,389,404,386,-1,389,407,404,-1,395,407,389,-1,395,408,407,-1,379,381,383,-1,409,322,379,-1,324,388,381,-1,410,393,392,-1,390,396,391,-1,366,391,384,-1,390,394,396,-1,365,390,366,-1,410,387,393,-1,385,387,410,-1,381,392,383,-1,322,324,381,-1,368,322,409,-1,368,409,375,-1,365,398,390,-1,377,376,411,-1,343,361,344,-1,362,343,363,-1,323,322,370,-1,323,374,324,-1,364,372,373,-1,359,373,323,-1,367,397,365,-1,371,343,369,-1,378,380,403,-1,382,403,380,-1,409,379,377,-1,409,377,411,-1,380,379,383,-1,393,382,383,-1,384,392,388,-1,388,392,381,-1,391,410,384,-1,384,410,392,-1,375,409,411,-1,390,398,394,-1,396,385,391,-1,396,395,389,-1,396,389,385,-1,385,410,391,-1,412,413,414,-1,415,416,417,-1,415,417,418,-1,419,420,421,-1,420,417,416,-1,422,419,421,-1,423,424,425,-1,426,424,423,-1,427,413,428,-1,421,420,416,-1,429,430,420,-1,420,430,417,-1,418,417,430,-1,418,430,431,-1,432,433,422,-1,422,433,434,-1,433,435,436,-1,433,432,435,-1,437,420,419,-1,437,429,420,-1,422,434,437,-1,422,437,419,-1,425,438,439,-1,423,425,439,-1,436,435,439,-1,435,423,439,-1,440,430,429,-1,440,441,430,-1,430,441,442,-1,431,430,442,-1,433,443,444,-1,433,444,434,-1,433,445,443,-1,433,436,445,-1,445,436,439,-1,445,439,446,-1,439,438,447,-1,439,447,446,-1,437,440,429,-1,437,448,440,-1,434,444,437,-1,437,444,448,-1,449,450,441,-1,440,449,441,-1,441,450,451,-1,427,452,453,-1,412,443,445,-1,443,412,444,-1,454,445,428,-1,412,445,454,-1,445,446,427,-1,454,428,413,-1,447,455,427,-1,413,427,453,-1,448,456,449,-1,448,449,440,-1,457,458,456,-1,444,457,448,-1,412,458,457,-1,442,441,451,-1,453,452,459,-1,460,461,462,-1,463,462,464,-1,465,413,463,-1,461,464,462,-1,466,467,464,-1,468,449,456,-1,469,470,471,-1,456,458,472,-1,456,472,468,-1,471,470,473,-1,474,475,449,-1,467,476,477,-1,414,472,458,-1,478,479,480,-1,450,481,482,-1,483,484,460,-1,461,460,484,-1,485,466,486,-1,466,487,486,-1,486,461,484,-1,486,487,461,-1,488,469,489,-1,469,488,470,-1,490,491,489,-1,490,489,469,-1,466,485,490,-1,490,485,491,-1,488,473,470,-1,488,492,473,-1,480,473,492,-1,493,480,492,-1,465,463,467,-1,463,413,494,-1,414,465,472,-1,477,490,495,-1,474,479,475,-1,468,474,449,-1,475,479,478,-1,449,475,450,-1,495,490,469,-1,495,469,471,-1,465,467,477,-1,465,414,413,-1,413,453,494,-1,453,459,494,-1,450,475,481,-1,462,496,460,-1,445,427,428,-1,446,447,427,-1,412,454,413,-1,412,414,458,-1,448,457,456,-1,444,412,457,-1,451,450,482,-1,427,455,452,-1,461,487,464,-1,466,464,487,-1,463,494,462,-1,494,496,462,-1,467,463,464,-1,490,467,466,-1,468,472,477,-1,472,465,477,-1,468,495,474,-1,468,477,495,-1,459,496,494,-1,475,478,481,-1,474,471,479,-1,479,473,480,-1,471,473,479,-1,495,471,474,-1,497,498,499,-1,500,501,502,-1,503,504,499,-1,505,502,501,-1,506,507,508,-1,509,497,499,-1,505,510,502,-1,498,503,499,-1,500,502,511,-1,512,513,514,-1,515,516,517,-1,518,519,520,-1,521,522,523,-1,522,524,525,-1,526,527,528,-1,526,529,530,-1,523,531,519,-1,532,533,534,-1,535,507,536,-1,537,534,538,-1,521,523,518,-1,539,518,540,-1,541,542,543,-1,544,545,546,-1,520,519,547,-1,548,549,550,-1,532,551,533,-1,542,552,553,-1,526,530,527,-1,540,520,544,-1,536,554,555,-1,551,556,533,-1,555,554,557,-1,535,536,555,-1,554,558,559,-1,536,507,546,-1,560,551,532,-1,534,533,538,-1,546,561,554,-1,554,561,558,-1,556,562,563,-1,551,526,564,-1,547,519,565,-1,557,554,566,-1,566,554,567,-1,554,559,567,-1,538,533,563,-1,568,556,528,-1,569,538,562,-1,538,563,562,-1,564,526,528,-1,570,562,571,-1,499,504,572,-1,499,572,573,-1,574,499,573,-1,575,576,502,-1,510,575,502,-1,577,578,579,-1,511,502,578,-1,580,581,497,-1,582,583,584,-1,585,580,586,-1,583,505,584,-1,587,506,588,-1,580,497,509,-1,583,510,505,-1,581,580,585,-1,582,589,583,-1,590,591,592,-1,593,594,595,-1,594,541,512,-1,596,597,598,-1,599,600,587,-1,601,522,521,-1,596,598,522,-1,602,603,604,-1,603,605,606,-1,603,593,605,-1,598,597,582,-1,607,608,609,-1,608,610,609,-1,600,539,587,-1,600,521,539,-1,611,612,613,-1,614,615,616,-1,599,617,600,-1,604,606,618,-1,619,607,620,-1,570,541,621,-1,602,611,603,-1,599,587,616,-1,622,535,555,-1,620,623,624,-1,625,555,557,-1,555,625,622,-1,625,626,627,-1,614,588,622,-1,619,620,628,-1,609,610,629,-1,625,630,614,-1,622,625,614,-1,629,631,623,-1,602,620,624,-1,632,633,634,-1,625,557,635,-1,625,636,626,-1,635,636,625,-1,608,637,610,-1,609,629,623,-1,610,569,631,-1,610,631,629,-1,623,631,638,-1,602,624,612,-1,580,591,590,-1,580,509,574,-1,591,574,639,-1,583,575,510,-1,640,575,583,-1,589,641,583,-1,583,641,640,-1,572,642,573,-1,575,643,576,-1,643,644,576,-1,578,644,579,-1,578,576,644,-1,589,645,641,-1,645,646,641,-1,647,648,640,-1,640,648,575,-1,502,576,578,-1,511,578,577,-1,641,647,640,-1,641,646,647,-1,587,539,506,-1,506,539,540,-1,600,601,521,-1,600,617,601,-1,539,521,518,-1,540,518,520,-1,546,540,544,-1,506,540,507,-1,588,535,622,-1,588,506,508,-1,574,509,499,-1,573,642,649,-1,650,573,649,-1,651,573,650,-1,591,652,592,-1,652,591,653,-1,653,639,654,-1,574,573,651,-1,591,580,574,-1,580,590,586,-1,591,639,653,-1,651,650,655,-1,588,508,535,-1,508,507,535,-1,536,546,554,-1,507,540,546,-1,587,588,614,-1,616,587,614,-1,614,630,615,-1,547,565,656,-1,529,657,548,-1,634,597,596,-1,658,585,659,-1,517,503,498,-1,550,549,660,-1,529,548,530,-1,602,612,611,-1,604,603,606,-1,632,634,617,-1,599,632,617,-1,531,525,661,-1,525,500,661,-1,518,523,519,-1,612,623,638,-1,533,556,563,-1,607,609,620,-1,625,627,630,-1,560,662,551,-1,546,545,561,-1,565,531,661,-1,530,548,550,-1,530,550,663,-1,514,513,663,-1,519,531,565,-1,524,501,525,-1,606,605,659,-1,617,634,596,-1,658,581,585,-1,617,596,601,-1,601,596,522,-1,522,531,523,-1,584,505,524,-1,658,515,497,-1,497,517,498,-1,581,658,497,-1,631,664,570,-1,562,570,664,-1,569,562,664,-1,569,664,631,-1,556,564,528,-1,551,564,556,-1,609,623,620,-1,624,623,612,-1,631,570,665,-1,562,568,571,-1,570,571,666,-1,667,621,541,-1,612,638,667,-1,568,528,542,-1,571,542,666,-1,553,663,543,-1,668,667,669,-1,612,667,613,-1,665,570,621,-1,667,665,621,-1,570,666,541,-1,541,666,542,-1,611,593,603,-1,613,668,593,-1,552,663,553,-1,527,530,663,-1,593,668,669,-1,605,593,595,-1,541,543,513,-1,512,541,513,-1,543,542,553,-1,663,513,543,-1,528,527,552,-1,542,528,552,-1,527,663,552,-1,613,667,668,-1,611,613,593,-1,669,541,594,-1,669,667,541,-1,593,669,594,-1,667,638,665,-1,638,631,665,-1,562,556,568,-1,571,568,542,-1,594,512,595,-1,605,670,659,-1,660,549,517,-1,514,550,660,-1,671,595,512,-1,670,658,659,-1,517,549,503,-1,516,514,660,-1,497,515,517,-1,671,512,515,-1,605,595,670,-1,670,671,658,-1,670,595,671,-1,658,671,515,-1,514,663,550,-1,516,660,517,-1,512,514,516,-1,515,512,516,-1,525,501,500,-1,524,505,501,-1,598,584,524,-1,598,582,584,-1,598,524,522,-1,522,525,531,-1], Java.type("int[]")))
                          .setCoord(new Coordinate().setPoint(Java.to([doubleToFloat(0.65704),doubleToFloat(-0.10533),doubleToFloat(-0.64578),doubleToFloat(0.6573),doubleToFloat(-0.09875),doubleToFloat(-0.53137),doubleToFloat(0.69262),doubleToFloat(-0.04461),doubleToFloat(-0.6079),doubleToFloat(0.46405),doubleToFloat(0.1234),doubleToFloat(-0.9148),doubleToFloat(0.52676),doubleToFloat(0.13346),doubleToFloat(-0.99004),doubleToFloat(0.56055),doubleToFloat(0.14585),doubleToFloat(-1.0822),doubleToFloat(0.41312),doubleToFloat(0.01848),doubleToFloat(-0.99593),doubleToFloat(0.44102),doubleToFloat(0.01863),doubleToFloat(-0.79782),doubleToFloat(0.62915),doubleToFloat(-0.11846),doubleToFloat(-0.90891),doubleToFloat(0.63043),doubleToFloat(-0.07812),doubleToFloat(-0.76992),doubleToFloat(0.67983),doubleToFloat(-0.06998),doubleToFloat(-0.90994),doubleToFloat(0.48069),doubleToFloat(-0.07144),doubleToFloat(-1.22732),doubleToFloat(0.49067),doubleToFloat(-0.13328),doubleToFloat(-1.07912),doubleToFloat(0.66575),doubleToFloat(-0.06952),doubleToFloat(-1.11726),doubleToFloat(0.69442),doubleToFloat(0.04579),doubleToFloat(-1.00054),doubleToFloat(0.68239),doubleToFloat(0.00872),doubleToFloat(-0.76787),doubleToFloat(0.69518),doubleToFloat(0.04643),doubleToFloat(-1.0635),doubleToFloat(0.63631),doubleToFloat(0.0591),doubleToFloat(-1.20454),doubleToFloat(0.53444),doubleToFloat(-0.10871),doubleToFloat(-0.76199),doubleToFloat(0.50398),doubleToFloat(-0.15514),doubleToFloat(-1.04687),doubleToFloat(0.60585),doubleToFloat(-0.10617),doubleToFloat(-1.10164),doubleToFloat(0.45279),doubleToFloat(-0.07425),doubleToFloat(-0.92017),doubleToFloat(0.45074),doubleToFloat(-0.07047),doubleToFloat(-1.00771),doubleToFloat(0.47762),doubleToFloat(0.05457),doubleToFloat(-0.86898),doubleToFloat(0.62326),doubleToFloat(0.13156),doubleToFloat(-1.08808),doubleToFloat(0.58691),doubleToFloat(0.1427),doubleToFloat(-0.80064),doubleToFloat(0.55876),doubleToFloat(0.16166),doubleToFloat(-1.08296),doubleToFloat(0.5329),doubleToFloat(0.21145),doubleToFloat(-1.085),doubleToFloat(0.49093),doubleToFloat(0.18278),doubleToFloat(-1.22502),doubleToFloat(0.66268),doubleToFloat(0.09839),doubleToFloat(-1.08014),doubleToFloat(0.65602),doubleToFloat(0.09959),doubleToFloat(-1.02051),doubleToFloat(0.48171),doubleToFloat(0.11969),doubleToFloat(-0.79321),doubleToFloat(0.66396),doubleToFloat(0.05165),doubleToFloat(-0.78861),doubleToFloat(0.65167),doubleToFloat(0.06225),doubleToFloat(-0.60585),doubleToFloat(0.59536),doubleToFloat(0.09568),doubleToFloat(-0.64732),doubleToFloat(0.50654),doubleToFloat(0.08444),doubleToFloat(-0.63862),doubleToFloat(0.47506),doubleToFloat(0.00025),doubleToFloat(-0.64246),doubleToFloat(0.54314),doubleToFloat(0.11295),doubleToFloat(-0.59843),doubleToFloat(0.47608),doubleToFloat(-0.00945),doubleToFloat(-0.59715),doubleToFloat(0.49579),doubleToFloat(-0.06158),doubleToFloat(-0.59817),doubleToFloat(0.47173),doubleToFloat(0.0571),doubleToFloat(-0.59459),doubleToFloat(0.58845),doubleToFloat(-0.12662),doubleToFloat(-0.60176),doubleToFloat(0.60509),doubleToFloat(0.0947),doubleToFloat(-0.60201),doubleToFloat(0.45484),doubleToFloat(0.05076),doubleToFloat(-0.51831),doubleToFloat(0.49554),doubleToFloat(-0.057),doubleToFloat(-0.50142),doubleToFloat(0.47915),doubleToFloat(-0.03274),doubleToFloat(-0.40697),doubleToFloat(0.69774),doubleToFloat(-0.04259),doubleToFloat(-0.4981),doubleToFloat(0.68622),doubleToFloat(-0.07901),doubleToFloat(-0.494),doubleToFloat(0.68853),doubleToFloat(-0.02069),doubleToFloat(-0.39264),doubleToFloat(0.58051),doubleToFloat(-0.10095),doubleToFloat(-0.38419),doubleToFloat(0.4405),doubleToFloat(0.08109),doubleToFloat(-0.43334),doubleToFloat(0.5626),doubleToFloat(0.1321),doubleToFloat(-0.52548),doubleToFloat(0.65679),doubleToFloat(0.06537),doubleToFloat(-0.51217),doubleToFloat(0.64937),doubleToFloat(0.09373),doubleToFloat(-0.42003),doubleToFloat(0.54852),doubleToFloat(0.16143),doubleToFloat(-0.44153),doubleToFloat(0.59024),doubleToFloat(-0.12414),doubleToFloat(-0.49093),doubleToFloat(0.44153),doubleToFloat(0.10653),doubleToFloat(-0.07891),doubleToFloat(0.41337),doubleToFloat(0.18549),doubleToFloat(-0.10295),doubleToFloat(0.5649),doubleToFloat(0.19717),doubleToFloat(-0.0891),doubleToFloat(0.59306),doubleToFloat(0.11815),doubleToFloat(-0.06501),doubleToFloat(0.49554),doubleToFloat(0.24587),doubleToFloat(-0.1097),doubleToFloat(0.51089),doubleToFloat(0.05782),doubleToFloat(-0.05826),doubleToFloat(0.51013),doubleToFloat(0.06163),doubleToFloat(-1.26878),doubleToFloat(0.64348),doubleToFloat(-0.10917),doubleToFloat(-1.02179),doubleToFloat(0.49886),doubleToFloat(-0.08127),doubleToFloat(-0.78272),doubleToFloat(0.49605),doubleToFloat(0.1782),doubleToFloat(-0.92093),doubleToFloat(0.62991),doubleToFloat(-0.12179),doubleToFloat(-0.49042),doubleToFloat(0.67752),doubleToFloat(-0.0611),doubleToFloat(-1.07759),doubleToFloat(-0.6317),doubleToFloat(0.04561),doubleToFloat(-0.6271),doubleToFloat(-0.6678),doubleToFloat(0.10699),doubleToFloat(-0.58973),doubleToFloat(-0.64425),doubleToFloat(0.04326),doubleToFloat(-0.51192),doubleToFloat(-0.45151),doubleToFloat(0.33095),doubleToFloat(-1.02741),doubleToFloat(-0.31329),doubleToFloat(0.21206),doubleToFloat(-1.08629),doubleToFloat(-0.40441),doubleToFloat(0.28642),doubleToFloat(-0.85593),doubleToFloat(-0.34836),doubleToFloat(0.18608),doubleToFloat(-0.93911),doubleToFloat(-0.3975),doubleToFloat(0.17784),doubleToFloat(-0.74433),doubleToFloat(-0.61737),doubleToFloat(0.10361),doubleToFloat(-0.86693),doubleToFloat(-0.59126),doubleToFloat(0.08104),doubleToFloat(-0.74509),doubleToFloat(-0.55287),doubleToFloat(0.04804),doubleToFloat(-0.8613),doubleToFloat(-0.62044),doubleToFloat(0.13469),doubleToFloat(-1.07221),doubleToFloat(-0.47301),doubleToFloat(0.03507),doubleToFloat(-1.03253),doubleToFloat(-0.45637),doubleToFloat(0.0893),doubleToFloat(-1.18407),doubleToFloat(-0.63426),doubleToFloat(0.23405),doubleToFloat(-0.96522),doubleToFloat(-0.64041),doubleToFloat(0.16929),doubleToFloat(-0.74202),doubleToFloat(-0.57027),doubleToFloat(0.25532),doubleToFloat(-1.15514),doubleToFloat(-0.63324),doubleToFloat(0.24244),doubleToFloat(-1.02383),doubleToFloat(-0.49784),doubleToFloat(0.04664),doubleToFloat(-0.72974),doubleToFloat(-0.569),doubleToFloat(0.09266),doubleToFloat(-1.05148),doubleToFloat(-0.4382),doubleToFloat(0.02017),doubleToFloat(-1.01257),doubleToFloat(-0.40365),doubleToFloat(0.07343),doubleToFloat(-0.87845),doubleToFloat(-0.38701),doubleToFloat(0.0997),doubleToFloat(-0.96163),doubleToFloat(-0.37984),doubleToFloat(0.19604),doubleToFloat(-0.82803),doubleToFloat(-0.5393),doubleToFloat(0.32737),doubleToFloat(-1.03484),doubleToFloat(-0.53854),doubleToFloat(0.3028),doubleToFloat(-0.75405),doubleToFloat(-0.40083),doubleToFloat(0.38087),doubleToFloat(-1.03484),doubleToFloat(-0.44434),doubleToFloat(0.34503),doubleToFloat(-1.0287),doubleToFloat(-0.59101),doubleToFloat(0.29435),doubleToFloat(-1.03356),doubleToFloat(-0.38471),doubleToFloat(0.33633),doubleToFloat(-1.18176),doubleToFloat(-0.58845),doubleToFloat(0.28923),doubleToFloat(-0.97648),doubleToFloat(-0.43539),doubleToFloat(0.2772),doubleToFloat(-0.73742),doubleToFloat(-0.61865),doubleToFloat(0.21311),doubleToFloat(-0.75713),doubleToFloat(-0.62787),doubleToFloat(0.20594),doubleToFloat(-0.57463),doubleToFloat(-0.56439),doubleToFloat(0.24377),doubleToFloat(-0.60662),doubleToFloat(-0.44818),doubleToFloat(0.14387),doubleToFloat(-0.59638),doubleToFloat(-0.47711),doubleToFloat(0.22865),doubleToFloat(-0.58947),doubleToFloat(-0.51806),doubleToFloat(0.25404),doubleToFloat(-0.55159),doubleToFloat(-0.47685),doubleToFloat(0.07702),doubleToFloat(-0.55978),doubleToFloat(-0.45509),doubleToFloat(0.12959),doubleToFloat(-0.55261),doubleToFloat(-0.44895),doubleToFloat(0.19555),doubleToFloat(-0.54493),doubleToFloat(-0.56183),doubleToFloat(0.02859),doubleToFloat(-0.58615),doubleToFloat(-0.58),doubleToFloat(0.2383),doubleToFloat(-0.56311),doubleToFloat(-0.4853),doubleToFloat(0.07658),doubleToFloat(-0.46047),doubleToFloat(-0.44127),doubleToFloat(0.18191),doubleToFloat(-0.46917),doubleToFloat(-0.48427),doubleToFloat(0.08488),doubleToFloat(-0.36423),doubleToFloat(-0.67445),doubleToFloat(0.06373),doubleToFloat(-0.48914),doubleToFloat(-0.68443),doubleToFloat(0.1008),doubleToFloat(-0.48837),doubleToFloat(-0.69697),doubleToFloat(0.09842),doubleToFloat(-0.38752),doubleToFloat(-0.59101),doubleToFloat(0.01605),doubleToFloat(-0.37267),doubleToFloat(-0.54545),doubleToFloat(0.26722),doubleToFloat(-0.4812),doubleToFloat(-0.43308),doubleToFloat(0.2085),doubleToFloat(-0.3888),doubleToFloat(-0.63964),doubleToFloat(0.20733),doubleToFloat(-0.47455),doubleToFloat(-0.65218),doubleToFloat(0.21268),doubleToFloat(-0.37728),doubleToFloat(-0.53777),doubleToFloat(0.29256),doubleToFloat(-0.40237),doubleToFloat(-0.58154),doubleToFloat(0.01367),doubleToFloat(-0.47608),doubleToFloat(-0.45561),doubleToFloat(0.23057),doubleToFloat(-0.03727),doubleToFloat(-0.42566),doubleToFloat(0.30587),doubleToFloat(-0.05995),doubleToFloat(-0.57539),doubleToFloat(0.32455),doubleToFloat(-0.05383),doubleToFloat(-0.60637),doubleToFloat(0.248),doubleToFloat(-0.03246),doubleToFloat(-0.50705),doubleToFloat(0.36628),doubleToFloat(-0.07108),doubleToFloat(-0.52651),doubleToFloat(0.18506),doubleToFloat(-0.02117),doubleToFloat(-0.44639),doubleToFloat(0.22394),doubleToFloat(-1.22553),doubleToFloat(-0.59536),doubleToFloat(0.10131),doubleToFloat(-0.97085),doubleToFloat(-0.45944),doubleToFloat(0.0753),doubleToFloat(-0.74407),doubleToFloat(-0.36039),doubleToFloat(0.32507),doubleToFloat(-0.87922),doubleToFloat(-0.6207),doubleToFloat(0.018),doubleToFloat(-0.48248),doubleToFloat(-0.62735),doubleToFloat(0.14096),doubleToFloat(-1.03638),doubleToFloat(0.30126),doubleToFloat(-0.06353),doubleToFloat(2.50353),doubleToFloat(0.19143),doubleToFloat(-0.02746),doubleToFloat(2.50429),doubleToFloat(0.20771),doubleToFloat(0.15153),doubleToFloat(2.50686),doubleToFloat(0.21234),doubleToFloat(0.20236),doubleToFloat(2.45668),doubleToFloat(0.19829),doubleToFloat(0.35988),doubleToFloat(2.50942),doubleToFloat(0.50654),doubleToFloat(0.32993),doubleToFloat(2.50942),doubleToFloat(0.4318),doubleToFloat(0.12987),doubleToFloat(2.5066),doubleToFloat(0.46457),doubleToFloat(0.17843),doubleToFloat(2.45643),doubleToFloat(0.24152),doubleToFloat(-0.01882),doubleToFloat(2.18845),doubleToFloat(0.2224),doubleToFloat(0.13131),doubleToFloat(2.19843),doubleToFloat(0.18897),doubleToFloat(-0.0535),doubleToFloat(2.34304),doubleToFloat(0.2772),doubleToFloat(0.60944),doubleToFloat(2.38477),doubleToFloat(0.37779),doubleToFloat(0.62633),doubleToFloat(2.35942),doubleToFloat(0.28181),doubleToFloat(0.66012),doubleToFloat(2.41087),doubleToFloat(0.47813),doubleToFloat(0.6422),doubleToFloat(2.41087),doubleToFloat(0.38343),doubleToFloat(0.6893),doubleToFloat(2.41139),doubleToFloat(0.25427),doubleToFloat(0.35476),doubleToFloat(2.3067),doubleToFloat(0.19847),doubleToFloat(0.48786),doubleToFloat(2.43417),doubleToFloat(0.19842),doubleToFloat(0.48683),doubleToFloat(2.51095),doubleToFloat(0.2987),doubleToFloat(-0.08848),doubleToFloat(2.31361),doubleToFloat(0.41337),doubleToFloat(-0.07433),doubleToFloat(2.34151),doubleToFloat(0.39008),doubleToFloat(-0.03402),doubleToFloat(2.21353),doubleToFloat(0.30382),doubleToFloat(-0.04999),doubleToFloat(2.1864),doubleToFloat(0.42975),doubleToFloat(0.11075),doubleToFloat(2.22325),doubleToFloat(0.45049),doubleToFloat(0.3371),doubleToFloat(2.30644),doubleToFloat(0.41337),doubleToFloat(0.24014),doubleToFloat(2.22991),doubleToFloat(0.52932),doubleToFloat(0.45637),doubleToFloat(2.51095),doubleToFloat(0.26492),doubleToFloat(0.25494),doubleToFloat(2.20483),doubleToFloat(0.34068),doubleToFloat(0.37319),doubleToFloat(2.28162),doubleToFloat(0.19834),doubleToFloat(0.36039),doubleToFloat(2.43289),doubleToFloat(0.50654),doubleToFloat(0.3307),doubleToFloat(2.43289),doubleToFloat(0.52932),doubleToFloat(0.4574),doubleToFloat(2.43417),doubleToFloat(0.36141),doubleToFloat(0.52497),doubleToFloat(2.35814),doubleToFloat(0.24915),doubleToFloat(0.6102),doubleToFloat(2.51275),doubleToFloat(0.26799),doubleToFloat(0.50731),doubleToFloat(2.38349),doubleToFloat(0.47813),doubleToFloat(0.63938),doubleToFloat(2.4979),doubleToFloat(0.28181),doubleToFloat(0.6573),doubleToFloat(2.4979),doubleToFloat(0.38343),doubleToFloat(0.68853),doubleToFloat(2.48818),doubleToFloat(0.50142),doubleToFloat(0.58742),doubleToFloat(2.51248),doubleToFloat(0.46431),doubleToFloat(0.48965),doubleToFloat(2.38323),doubleToFloat(0.18908),doubleToFloat(-0.05352),doubleToFloat(2.45106),doubleToFloat(0.29896),doubleToFloat(-0.08994),doubleToFloat(2.44952),doubleToFloat(0.41337),doubleToFloat(-0.07454),doubleToFloat(2.45003),doubleToFloat(0.41568),doubleToFloat(-0.04812),doubleToFloat(2.50378),doubleToFloat(0.47352),doubleToFloat(0.59152),doubleToFloat(2.3845),doubleToFloat(0.33172),doubleToFloat(0.27439),doubleToFloat(2.20585),doubleToFloat(-0.17313),doubleToFloat(0.10141),doubleToFloat(2.50353),doubleToFloat(-0.07843),doubleToFloat(0.31355),doubleToFloat(2.50737),doubleToFloat(-0.06315),doubleToFloat(0.13694),doubleToFloat(2.50481),doubleToFloat(-0.0827),doubleToFloat(0.36449),doubleToFloat(2.4572),doubleToFloat(-0.376),doubleToFloat(0.4963),doubleToFloat(2.50942),doubleToFloat(-0.06778),doubleToFloat(0.52011),doubleToFloat(2.50993),doubleToFloat(-0.30254),doubleToFloat(0.29538),doubleToFloat(2.50686),doubleToFloat(-0.33505),doubleToFloat(0.34401),doubleToFloat(2.45668),doubleToFloat(-0.10515),doubleToFloat(0.30408),doubleToFloat(2.11115),doubleToFloat(-0.11219),doubleToFloat(0.14736),doubleToFloat(2.18665),doubleToFloat(-0.06007),doubleToFloat(0.11078),doubleToFloat(2.34176),doubleToFloat(-0.14505),doubleToFloat(0.77427),doubleToFloat(2.38502),doubleToFloat(-0.14938),doubleToFloat(0.82495),doubleToFloat(2.41139),doubleToFloat(-0.24536),doubleToFloat(0.79193),doubleToFloat(2.35968),doubleToFloat(-0.25079),doubleToFloat(0.8549),doubleToFloat(2.41164),doubleToFloat(-0.3458),doubleToFloat(0.80832),doubleToFloat(2.41087),doubleToFloat(-0.12363),doubleToFloat(0.5196),doubleToFloat(2.30772),doubleToFloat(-0.06704),doubleToFloat(0.65141),doubleToFloat(2.43468),doubleToFloat(-0.06709),doubleToFloat(0.65039),doubleToFloat(2.51147),doubleToFloat(-0.28437),doubleToFloat(0.09043),doubleToFloat(2.33946),doubleToFloat(-0.16978),doubleToFloat(0.07628),doubleToFloat(2.31105),doubleToFloat(-0.26082),doubleToFloat(0.13215),doubleToFloat(2.21123),doubleToFloat(-0.17441),doubleToFloat(0.10528),doubleToFloat(2.18307),doubleToFloat(-0.30024),doubleToFloat(0.27669),doubleToFloat(2.223),doubleToFloat(-0.31995),doubleToFloat(0.5027),doubleToFloat(2.30746),doubleToFloat(-0.2836),doubleToFloat(0.40595),doubleToFloat(2.23119),doubleToFloat(-0.39802),doubleToFloat(0.623),doubleToFloat(2.51095),doubleToFloat(-0.13481),doubleToFloat(0.42054),doubleToFloat(2.20611),doubleToFloat(-0.20996),doubleToFloat(0.53854),doubleToFloat(2.28263),doubleToFloat(-0.06775),doubleToFloat(0.52087),doubleToFloat(2.43339),doubleToFloat(-0.39802),doubleToFloat(0.62403),doubleToFloat(2.43417),doubleToFloat(-0.376),doubleToFloat(0.49707),doubleToFloat(2.43314),doubleToFloat(-0.22975),doubleToFloat(0.69032),doubleToFloat(2.3584),doubleToFloat(-0.11708),doubleToFloat(0.77504),doubleToFloat(2.513),doubleToFloat(-0.13643),doubleToFloat(0.6724),doubleToFloat(2.38374),doubleToFloat(-0.3458),doubleToFloat(0.80576),doubleToFloat(2.4979),doubleToFloat(-0.25084),doubleToFloat(0.85413),doubleToFloat(2.48843),doubleToFloat(-0.14943),doubleToFloat(0.82214),doubleToFloat(2.49841),doubleToFloat(-0.3696),doubleToFloat(0.7538),doubleToFloat(2.51275),doubleToFloat(-0.33275),doubleToFloat(0.65577),doubleToFloat(2.38349),doubleToFloat(-0.06074),doubleToFloat(0.11075),doubleToFloat(2.45131),doubleToFloat(-0.28514),doubleToFloat(0.09056),doubleToFloat(2.44952),doubleToFloat(-0.17065),doubleToFloat(0.07469),doubleToFloat(2.44901),doubleToFloat(-0.28744),doubleToFloat(0.11743),doubleToFloat(2.50378),doubleToFloat(-0.34145),doubleToFloat(0.75764),doubleToFloat(2.38477),doubleToFloat(-0.20164),doubleToFloat(0.44025),doubleToFloat(2.20738),doubleToFloat(-0.46661),doubleToFloat(0.35527),doubleToFloat(0.0417),doubleToFloat(-0.39981),doubleToFloat(0.43308),doubleToFloat(0.10689),doubleToFloat(-0.53419),doubleToFloat(0.37319),doubleToFloat(0.04333),doubleToFloat(-0.5562),doubleToFloat(0.24851),doubleToFloat(0.09248),doubleToFloat(-0.55953),doubleToFloat(0.3028),doubleToFloat(0.25197),doubleToFloat(-0.53342),doubleToFloat(0.25427),doubleToFloat(0.19215),doubleToFloat(-0.59485),doubleToFloat(0.30126),doubleToFloat(0.0817),doubleToFloat(-0.57053),doubleToFloat(0.33531),doubleToFloat(0.25022),doubleToFloat(-0.47659),doubleToFloat(0.48376),doubleToFloat(0.23569),doubleToFloat(-0.52599),doubleToFloat(0.43564),doubleToFloat(0.21493),doubleToFloat(-0.50142),doubleToFloat(0.44767),doubleToFloat(0.26594),doubleToFloat(-0.52446),doubleToFloat(0.34426),doubleToFloat(0.33812),doubleToFloat(-0.51576),doubleToFloat(0.21772),doubleToFloat(0.09696),doubleToFloat(-0.45279),doubleToFloat(0.4533),doubleToFloat(0.13233),doubleToFloat(-0.44178),doubleToFloat(0.50757),doubleToFloat(0.2749),doubleToFloat(-0.39008),doubleToFloat(0.49528),doubleToFloat(0.2987),doubleToFloat(-0.36474),doubleToFloat(0.47455),doubleToFloat(0.30587),doubleToFloat(-0.35373),doubleToFloat(0.47506),doubleToFloat(0.34631),doubleToFloat(-0.33914),doubleToFloat(0.40621),doubleToFloat(0.33249),doubleToFloat(-0.32583),doubleToFloat(0.41465),doubleToFloat(0.35118),doubleToFloat(-0.31585),doubleToFloat(0.41644),doubleToFloat(0.33556),doubleToFloat(-0.36986),doubleToFloat(0.45586),doubleToFloat(0.35834),doubleToFloat(-0.30971),doubleToFloat(0.43359),doubleToFloat(0.33914),doubleToFloat(-0.46405),doubleToFloat(0.48069),doubleToFloat(0.29179),doubleToFloat(-0.33351),doubleToFloat(0.45305),doubleToFloat(0.2062),doubleToFloat(-0.32993),doubleToFloat(0.48479),doubleToFloat(0.20239),doubleToFloat(-0.31355),doubleToFloat(0.47685),doubleToFloat(0.20554),doubleToFloat(-0.34862),doubleToFloat(0.40672),doubleToFloat(0.17485),doubleToFloat(-0.37831),doubleToFloat(0.44204),doubleToFloat(0.18385),doubleToFloat(-0.33556),doubleToFloat(0.41004),doubleToFloat(0.18969),doubleToFloat(-0.41824),doubleToFloat(0.41772),doubleToFloat(0.15744),doubleToFloat(-0.38727),doubleToFloat(0.4359),doubleToFloat(0.1695),doubleToFloat(-0.37549),doubleToFloat(0.44358),doubleToFloat(0.13781),doubleToFloat(-0.31944),doubleToFloat(0.44588),doubleToFloat(0.17226),doubleToFloat(-0.3499),doubleToFloat(0.46866),doubleToFloat(0.16801),doubleToFloat(-0.40134),doubleToFloat(0.45996),doubleToFloat(0.2598),doubleToFloat(-0.39341),doubleToFloat(0.44025),doubleToFloat(0.32763),doubleToFloat(-0.31688),doubleToFloat(0.43283),doubleToFloat(0.31585),doubleToFloat(-0.41081),doubleToFloat(0.4231),doubleToFloat(0.34759),doubleToFloat(-0.42182),doubleToFloat(0.45714),doubleToFloat(0.32276),doubleToFloat(-0.50168),doubleToFloat(0.31124),doubleToFloat(0.3202),doubleToFloat(-0.36935),doubleToFloat(0.36884),doubleToFloat(0.14549),doubleToFloat(-0.44102),doubleToFloat(0.2877),doubleToFloat(0.3586),doubleToFloat(-0.45151),doubleToFloat(0.29154),doubleToFloat(0.33889),doubleToFloat(-0.42694),doubleToFloat(0.26287),doubleToFloat(0.30971),doubleToFloat(-0.41542),doubleToFloat(0.49323),doubleToFloat(0.26184),doubleToFloat(-0.42515),doubleToFloat(0.43155),doubleToFloat(0.27797),doubleToFloat(-0.40058),doubleToFloat(0.50449),doubleToFloat(0.33095),doubleToFloat(-0.35501),doubleToFloat(0.39955),doubleToFloat(0.11377),doubleToFloat(-0.42566),doubleToFloat(0.32507),doubleToFloat(0.04771),doubleToFloat(-0.43078),doubleToFloat(0.39597),doubleToFloat(0.34529),doubleToFloat(-0.35706),doubleToFloat(0.37344),doubleToFloat(0.30792),doubleToFloat(-0.34478),doubleToFloat(0.34759),doubleToFloat(0.26543),doubleToFloat(-0.33914),doubleToFloat(0.38112),doubleToFloat(0.31201),doubleToFloat(-0.34298),doubleToFloat(0.36474),doubleToFloat(0.34478),doubleToFloat(-0.35655),doubleToFloat(0.30894),doubleToFloat(0.28283),doubleToFloat(-0.39034),doubleToFloat(0.27567),doubleToFloat(0.29922),doubleToFloat(-0.36986),doubleToFloat(0.29922),doubleToFloat(0.32583),doubleToFloat(-0.36525),doubleToFloat(0.34426),doubleToFloat(0.3499),doubleToFloat(-0.33403),doubleToFloat(0.33582),doubleToFloat(0.31048),doubleToFloat(-0.41619),doubleToFloat(0.29614),doubleToFloat(0.36397),doubleToFloat(-0.40544),doubleToFloat(0.2708),doubleToFloat(0.33479),doubleToFloat(-0.4748),doubleToFloat(0.33991),doubleToFloat(0.35885),doubleToFloat(-0.41644),doubleToFloat(0.4853),doubleToFloat(0.34298),doubleToFloat(-0.34298),doubleToFloat(0.41926),doubleToFloat(0.14244),doubleToFloat(-0.30126),doubleToFloat(0.46329),doubleToFloat(0.20635),doubleToFloat(0.44614),doubleToFloat(0.23937),doubleToFloat(0.00376),doubleToFloat(0.51243),doubleToFloat(0.25775),doubleToFloat(0.00632),doubleToFloat(0.38189),doubleToFloat(0.31355),doubleToFloat(0.08649),doubleToFloat(0.51371),doubleToFloat(0.12022),doubleToFloat(0.13817),doubleToFloat(0.54596),doubleToFloat(0.15603),doubleToFloat(0.19875),doubleToFloat(0.53393),doubleToFloat(0.12463),doubleToFloat(0.04354),doubleToFloat(0.57232),doubleToFloat(0.17925),doubleToFloat(0.03343),doubleToFloat(0.55825),doubleToFloat(0.1878),doubleToFloat(0.20144),doubleToFloat(0.46917),doubleToFloat(0.33863),doubleToFloat(0.21989),doubleToFloat(0.51499),doubleToFloat(0.29384),doubleToFloat(0.18736),doubleToFloat(0.51908),doubleToFloat(0.18222),doubleToFloat(0.29282),doubleToFloat(0.49477),doubleToFloat(0.29717),doubleToFloat(0.24147),doubleToFloat(0.49272),doubleToFloat(0.09435),doubleToFloat(0.04697),doubleToFloat(0.43692),doubleToFloat(0.32788),doubleToFloat(0.11275),doubleToFloat(0.4382),doubleToFloat(0.35604),doubleToFloat(0.26517),doubleToFloat(0.35425),doubleToFloat(0.31355),doubleToFloat(0.33633),doubleToFloat(0.36218),doubleToFloat(0.31995),doubleToFloat(0.29563),doubleToFloat(0.38778),doubleToFloat(0.34094),doubleToFloat(0.29026),doubleToFloat(0.31355),doubleToFloat(0.25877),doubleToFloat(0.31841),doubleToFloat(0.3243),doubleToFloat(0.25383),doubleToFloat(0.33249),doubleToFloat(0.33607),doubleToFloat(0.24841),doubleToFloat(0.31176),doubleToFloat(0.30843),doubleToFloat(0.27515),doubleToFloat(0.32532),doubleToFloat(0.37037),doubleToFloat(0.2923),doubleToFloat(0.3435),doubleToFloat(0.46073),doubleToFloat(0.32609),doubleToFloat(0.27541),doubleToFloat(0.32353),doubleToFloat(0.31713),doubleToFloat(0.19632),doubleToFloat(0.30434),doubleToFloat(0.34094),doubleToFloat(0.20129),doubleToFloat(0.32072),doubleToFloat(0.34887),doubleToFloat(0.19834),doubleToFloat(0.32251),doubleToFloat(0.27797),doubleToFloat(0.1718),doubleToFloat(0.36576),doubleToFloat(0.30945),doubleToFloat(0.16832),doubleToFloat(0.33403),doubleToFloat(0.27771),doubleToFloat(0.15455),doubleToFloat(0.37344),doubleToFloat(0.30613),doubleToFloat(0.1514),doubleToFloat(0.40211),doubleToFloat(0.29051),doubleToFloat(0.132),doubleToFloat(0.30664),doubleToFloat(0.31636),doubleToFloat(0.16279),doubleToFloat(0.35988),doubleToFloat(0.31918),doubleToFloat(0.12255),doubleToFloat(0.33761),doubleToFloat(0.33863),doubleToFloat(0.16031),doubleToFloat(0.39494),doubleToFloat(0.31278),doubleToFloat(0.24511),doubleToFloat(0.3911),doubleToFloat(0.28155),doubleToFloat(0.30869),doubleToFloat(0.31381),doubleToFloat(0.27823),doubleToFloat(0.30152),doubleToFloat(0.40902),doubleToFloat(0.26082),doubleToFloat(0.32404),doubleToFloat(0.41977),doubleToFloat(0.29819),doubleToFloat(0.30485),doubleToFloat(0.494),doubleToFloat(0.15329),doubleToFloat(0.2708),doubleToFloat(0.35092),doubleToFloat(0.24562),doubleToFloat(0.11411),doubleToFloat(0.43539),doubleToFloat(0.12475),doubleToFloat(0.3092),doubleToFloat(0.44434),doubleToFloat(0.13202),doubleToFloat(0.28974),doubleToFloat(0.41696),doubleToFloat(0.10955),doubleToFloat(0.25801),doubleToFloat(0.4103),doubleToFloat(0.34478),doubleToFloat(0.25179),doubleToFloat(0.419),doubleToFloat(0.28104),doubleToFloat(0.25596),doubleToFloat(0.40083),doubleToFloat(0.34401),doubleToFloat(0.32276),doubleToFloat(0.33633),doubleToFloat(0.28053),doubleToFloat(0.09012),doubleToFloat(0.40493),doubleToFloat(0.20907),doubleToFloat(0.00715),doubleToFloat(0.42796),doubleToFloat(0.23413),doubleToFloat(0.31585),doubleToFloat(0.33377),doubleToFloat(0.22734),doubleToFloat(0.28744),doubleToFloat(0.33479),doubleToFloat(0.20272),doubleToFloat(0.23533),doubleToFloat(0.35092),doubleToFloat(0.22015),doubleToFloat(0.28053),doubleToFloat(0.33914),doubleToFloat(0.20551),doubleToFloat(0.31611),doubleToFloat(0.34657),doubleToFloat(0.16138),doubleToFloat(0.24472),doubleToFloat(0.36244),doubleToFloat(0.14385),doubleToFloat(0.28411),doubleToFloat(0.3801),doubleToFloat(0.12473),doubleToFloat(0.25263),doubleToFloat(0.36116),doubleToFloat(0.18393),doubleToFloat(0.31611),doubleToFloat(0.32686),doubleToFloat(0.18324),doubleToFloat(0.27823),doubleToFloat(0.41107),doubleToFloat(0.13282),doubleToFloat(0.31765),doubleToFloat(0.39725),doubleToFloat(0.11321),doubleToFloat(0.28539),doubleToFloat(0.47071),doubleToFloat(0.17531),doubleToFloat(0.31585),doubleToFloat(0.41696),doubleToFloat(0.32276),doubleToFloat(0.33019),doubleToFloat(0.32686),doubleToFloat(0.29538),doubleToFloat(0.12519),doubleToFloat(0.29179),doubleToFloat(0.32788),doubleToFloat(0.20067),doubleToFloat(0.31432),doubleToFloat(0.46021),doubleToFloat(1.35479),doubleToFloat(0.44946),doubleToFloat(0.3952),doubleToFloat(1.22041),doubleToFloat(0.44204),doubleToFloat(0.40876),doubleToFloat(1.35044),doubleToFloat(0.06775),doubleToFloat(0.17257),doubleToFloat(0.35629),doubleToFloat(0.04292),doubleToFloat(0.48888),doubleToFloat(0.24874),doubleToFloat(0.09278),doubleToFloat(0.48581),doubleToFloat(0.25028),doubleToFloat(0.07794),doubleToFloat(0.17149),doubleToFloat(0.3545),doubleToFloat(0.09179),doubleToFloat(-0.10118),doubleToFloat(0.39008),doubleToFloat(0.04123),doubleToFloat(-0.09125),doubleToFloat(0.4144),doubleToFloat(0.06486),doubleToFloat(-0.14951),doubleToFloat(0.24306),doubleToFloat(0.06496),doubleToFloat(0.47301),doubleToFloat(0.10174),doubleToFloat(0.10364),doubleToFloat(-0.05559),doubleToFloat(0.44998),doubleToFloat(0.08303),doubleToFloat(0.19445),doubleToFloat(0.45817),doubleToFloat(0.24173),doubleToFloat(-0.06696),doubleToFloat(0.45279),doubleToFloat(0.41056),doubleToFloat(-0.00623),doubleToFloat(0.42054),doubleToFloat(0.39725),doubleToFloat(-0.06947),doubleToFloat(0.29435),doubleToFloat(0.47455),doubleToFloat(0.16399),doubleToFloat(0.32609),doubleToFloat(0.10832),doubleToFloat(0.4597),doubleToFloat(0.33019),doubleToFloat(0.17976),doubleToFloat(0.39648),doubleToFloat(1.21938),doubleToFloat(0.26364),doubleToFloat(0.4702),doubleToFloat(1.25266),doubleToFloat(0.14843),doubleToFloat(0.02093),doubleToFloat(0.7259),doubleToFloat(0.30075),doubleToFloat(-0.00436),doubleToFloat(0.72897),doubleToFloat(0.09294),doubleToFloat(0.22256),doubleToFloat(0.68213),doubleToFloat(0.41184),doubleToFloat(0.39392),doubleToFloat(0.30869),doubleToFloat(0.45791),doubleToFloat(0.42694),doubleToFloat(0.66549),doubleToFloat(0.49707),doubleToFloat(0.22312),doubleToFloat(0.68392),doubleToFloat(0.24321),doubleToFloat(0.45944),doubleToFloat(0.31662),doubleToFloat(0.3005),doubleToFloat(0.47839),doubleToFloat(0.66037),doubleToFloat(0.45817),doubleToFloat(0.02135),doubleToFloat(0.72743),doubleToFloat(0.14815),doubleToFloat(0.42668),doubleToFloat(0.66421),doubleToFloat(0.31457),doubleToFloat(0.08976),doubleToFloat(1.14132),doubleToFloat(0.18652),doubleToFloat(0.11557),doubleToFloat(1.13979),doubleToFloat(0.13561),doubleToFloat(0.31278),doubleToFloat(1.10984),doubleToFloat(0.494),doubleToFloat(0.30587),doubleToFloat(1.11265),doubleToFloat(0.44332),doubleToFloat(0.45125),doubleToFloat(1.09039),doubleToFloat(0.31534),doubleToFloat(0.5027),doubleToFloat(1.09166),doubleToFloat(0.18734),doubleToFloat(0.45407),doubleToFloat(1.09166),doubleToFloat(0.44255),doubleToFloat(0.11513),doubleToFloat(1.14158),doubleToFloat(0.18498),doubleToFloat(0.10574),doubleToFloat(1.32304),doubleToFloat(0.31304),doubleToFloat(0.08127),doubleToFloat(1.32407),doubleToFloat(0.14272),doubleToFloat(0.29461),doubleToFloat(1.20966),doubleToFloat(0.18618),doubleToFloat(0.40979),doubleToFloat(1.34941),doubleToFloat(0.13435),doubleToFloat(0.25724),doubleToFloat(1.33456),doubleToFloat(0.36551),doubleToFloat(0.47455),doubleToFloat(1.23448),doubleToFloat(0.44102),doubleToFloat(0.10912),doubleToFloat(1.33073),doubleToFloat(0.48581),doubleToFloat(0.29358),doubleToFloat(1.21222),doubleToFloat(0.49272),doubleToFloat(0.25749),doubleToFloat(1.33687),doubleToFloat(0.16072),doubleToFloat(0.19263),doubleToFloat(1.74001),doubleToFloat(0.22476),doubleToFloat(0.1558),doubleToFloat(2.13956),doubleToFloat(0.21045),doubleToFloat(0.3028),doubleToFloat(2.07275),doubleToFloat(0.24221),doubleToFloat(0.25749),doubleToFloat(2.11652),doubleToFloat(0.33812),doubleToFloat(0.41593),doubleToFloat(1.76202),doubleToFloat(0.33326),doubleToFloat(0.33147),doubleToFloat(2.07403),doubleToFloat(0.48325),doubleToFloat(0.37882),doubleToFloat(1.7592),doubleToFloat(0.40876),doubleToFloat(0.25412),doubleToFloat(2.11652),doubleToFloat(0.45612),doubleToFloat(0.29998),doubleToFloat(2.07301),doubleToFloat(0.48171),doubleToFloat(-0.00199),doubleToFloat(1.72311),doubleToFloat(0.33198),doubleToFloat(-0.04587),doubleToFloat(2.10705),doubleToFloat(0.33428),doubleToFloat(-0.0431),doubleToFloat(2.15338),doubleToFloat(0.408),doubleToFloat(-0.0077),doubleToFloat(2.15696),doubleToFloat(0.51345),doubleToFloat(0.19102),doubleToFloat(1.74154),doubleToFloat(0.24099),doubleToFloat(-0.00696),doubleToFloat(2.15645),doubleToFloat(0.19087),doubleToFloat(-0.00066),doubleToFloat(1.72183),doubleToFloat(0.33607),doubleToFloat(-0.03773),doubleToFloat(1.71902),doubleToFloat(0.48146),doubleToFloat(0.14523),doubleToFloat(2.09425),doubleToFloat(0.42617),doubleToFloat(0.1503),doubleToFloat(2.13981),doubleToFloat(0.18434),doubleToFloat(0.14961),doubleToFloat(2.09374),doubleToFloat(0.20925),doubleToFloat(-0.01563),doubleToFloat(2.10961),doubleToFloat(0.32532),doubleToFloat(0.27541),doubleToFloat(2.11729),doubleToFloat(0.19245),doubleToFloat(0.3801),doubleToFloat(1.75792),doubleToFloat(0.45509),doubleToFloat(-0.01676),doubleToFloat(2.11063),doubleToFloat(-0.31892),doubleToFloat(0.58461),doubleToFloat(1.20812),doubleToFloat(-0.18347),doubleToFloat(0.67343),doubleToFloat(1.32561),doubleToFloat(-0.3115),doubleToFloat(0.62428),doubleToFloat(1.3315),doubleToFloat(0.02562),doubleToFloat(-0.00814),doubleToFloat(0.52088),doubleToFloat(0.04889),doubleToFloat(0.23003),doubleToFloat(0.48811),doubleToFloat(-0.28027),doubleToFloat(0.04451),doubleToFloat(0.49707),doubleToFloat(-0.11278),doubleToFloat(-0.00993),doubleToFloat(0.53854),doubleToFloat(-0.26441),doubleToFloat(-0.04382),doubleToFloat(0.38061),doubleToFloat(-0.33914),doubleToFloat(0.1924),doubleToFloat(0.3801),doubleToFloat(0.0288),doubleToFloat(0.46866),doubleToFloat(0.32916),doubleToFloat(-0.04925),doubleToFloat(0.58384),doubleToFloat(1.20787),doubleToFloat(-0.13259),doubleToFloat(0.66242),doubleToFloat(1.22143),doubleToFloat(-0.17231),doubleToFloat(0.1031),doubleToFloat(0.80038),doubleToFloat(-0.01974),doubleToFloat(0.1267),doubleToFloat(0.79322),doubleToFloat(0.03673),doubleToFloat(0.31585),doubleToFloat(0.71361),doubleToFloat(-0.27746),doubleToFloat(0.41798),doubleToFloat(0.32097),doubleToFloat(-0.32711),doubleToFloat(0.51678),doubleToFloat(0.66037),doubleToFloat(-0.3673),doubleToFloat(0.31969),doubleToFloat(0.71515),doubleToFloat(-0.10929),doubleToFloat(0.48325),doubleToFloat(0.31278),doubleToFloat(-0.16945),doubleToFloat(0.56516),doubleToFloat(0.64629),doubleToFloat(-0.32942),doubleToFloat(0.1289),doubleToFloat(0.79398),doubleToFloat(-0.01734),doubleToFloat(0.51473),doubleToFloat(0.6596),doubleToFloat(-0.18519),doubleToFloat(0.27464),doubleToFloat(1.17485),doubleToFloat(-0.0571),doubleToFloat(0.29947),doubleToFloat(1.16973),doubleToFloat(-0.00566),doubleToFloat(0.4789),doubleToFloat(1.12059),doubleToFloat(-0.31227),doubleToFloat(0.60969),doubleToFloat(1.07016),doubleToFloat(-0.36397),doubleToFloat(0.47992),doubleToFloat(1.12212),doubleToFloat(-0.18416),doubleToFloat(0.65935),doubleToFloat(1.06018),doubleToFloat(-0.05639),doubleToFloat(0.60944),doubleToFloat(1.0699),doubleToFloat(-0.31304),doubleToFloat(0.29973),doubleToFloat(1.17178),doubleToFloat(-0.18301),doubleToFloat(0.2726),doubleToFloat(1.33124),doubleToFloat(-0.05511),doubleToFloat(0.29794),doubleToFloat(1.33175),doubleToFloat(-0.01283),doubleToFloat(0.48376),doubleToFloat(1.22092),doubleToFloat(-0.00438),doubleToFloat(0.44895),doubleToFloat(1.33994),doubleToFloat(-0.05557),doubleToFloat(0.623),doubleToFloat(1.33124),doubleToFloat(-0.23497),doubleToFloat(0.66293),doubleToFloat(1.22092),doubleToFloat(-0.31124),doubleToFloat(0.30178),doubleToFloat(1.33841),doubleToFloat(-0.35578),doubleToFloat(0.4853),doubleToFloat(1.22271),doubleToFloat(-0.36295),doubleToFloat(0.47429),doubleToFloat(1.34941),doubleToFloat(-0.03084),doubleToFloat(0.36884),doubleToFloat(1.74128),doubleToFloat(-0.09762),doubleToFloat(0.29742),doubleToFloat(2.1631),doubleToFloat(-0.11421),doubleToFloat(0.40185),doubleToFloat(2.14084),doubleToFloat(-0.08209),doubleToFloat(0.45433),doubleToFloat(2.09118),doubleToFloat(-0.2083),doubleToFloat(0.59152),doubleToFloat(1.76791),doubleToFloat(-0.19757),doubleToFloat(0.48555),doubleToFloat(2.0922),doubleToFloat(-0.35348),doubleToFloat(0.55441),doubleToFloat(1.76432),doubleToFloat(-0.27823),doubleToFloat(0.40544),doubleToFloat(2.14084),doubleToFloat(-0.31329),doubleToFloat(0.45637),doubleToFloat(2.09118),doubleToFloat(-0.35169),doubleToFloat(0.17449),doubleToFloat(1.7203),doubleToFloat(-0.27823),doubleToFloat(0.17461),doubleToFloat(2.18051),doubleToFloat(-0.19589),doubleToFloat(0.11047),doubleToFloat(2.19919),doubleToFloat(-0.19773),doubleToFloat(0.13282),doubleToFloat(2.09835),doubleToFloat(-0.38368),doubleToFloat(0.36704),doubleToFloat(1.74256),doubleToFloat(-0.11388),doubleToFloat(0.17318),doubleToFloat(2.20508),doubleToFloat(-0.20612),doubleToFloat(0.13893),doubleToFloat(1.71544),doubleToFloat(-0.06087),doubleToFloat(0.17602),doubleToFloat(1.71927),doubleToFloat(-0.29563),doubleToFloat(0.30306),doubleToFloat(2.16336),doubleToFloat(-0.33812),doubleToFloat(0.31124),doubleToFloat(2.11216),doubleToFloat(-0.05826),doubleToFloat(0.30766),doubleToFloat(2.11166),doubleToFloat(-0.08198),doubleToFloat(0.15882),doubleToFloat(2.1265),doubleToFloat(-0.19596),doubleToFloat(0.42591),doubleToFloat(2.1416),doubleToFloat(-0.06268),doubleToFloat(0.55594),doubleToFloat(1.7633),doubleToFloat(-0.31355),doubleToFloat(0.15844),doubleToFloat(2.12701),doubleToFloat(0.07848),doubleToFloat(0.48146),doubleToFloat(-0.20902),doubleToFloat(0.35655),doubleToFloat(0.41593),doubleToFloat(-0.21437),doubleToFloat(0.36167),doubleToFloat(0.41772),doubleToFloat(-0.09005),doubleToFloat(0.42387),doubleToFloat(0.15741),doubleToFloat(-0.20953),doubleToFloat(0.33403),doubleToFloat(-0.04745),doubleToFloat(-0.20822),doubleToFloat(0.34503),doubleToFloat(-0.04177),doubleToFloat(-0.08562),doubleToFloat(0.43052),doubleToFloat(0.16028),doubleToFloat(-0.08923),doubleToFloat(0.05375),doubleToFloat(-0.0807),doubleToFloat(-0.2008),doubleToFloat(-0.00717),doubleToFloat(-0.09929),doubleToFloat(-1.18022),doubleToFloat(0.16228),doubleToFloat(-0.07712),doubleToFloat(-1.2524),doubleToFloat(-0.00362),doubleToFloat(-0.06105),doubleToFloat(-1.24421),doubleToFloat(0.07167),doubleToFloat(0.45586),doubleToFloat(-0.10819),doubleToFloat(0.05792),doubleToFloat(-0.10028),doubleToFloat(-0.05887),doubleToFloat(0.11132),doubleToFloat(0.51985),doubleToFloat(-0.5928),doubleToFloat(0.26441),doubleToFloat(0.46354),doubleToFloat(-0.76404),doubleToFloat(0.23953),doubleToFloat(0.49426),doubleToFloat(-0.569),doubleToFloat(0.09637),doubleToFloat(0.51141),doubleToFloat(-0.49016),doubleToFloat(0.23082),doubleToFloat(0.4684),doubleToFloat(-0.51601),doubleToFloat(0.3737),doubleToFloat(0.42591),doubleToFloat(-0.40185),doubleToFloat(0.41235),doubleToFloat(-0.17254),doubleToFloat(-1.02153),doubleToFloat(0.42694),doubleToFloat(-0.09225),doubleToFloat(-0.84185),doubleToFloat(0.01265),doubleToFloat(-0.12788),doubleToFloat(-0.77146),doubleToFloat(0.04116),doubleToFloat(-0.10561),doubleToFloat(-0.51576),doubleToFloat(0.37754),doubleToFloat(-0.13312),doubleToFloat(-0.78809),doubleToFloat(0.0528),doubleToFloat(-0.06271),doubleToFloat(-0.28539),doubleToFloat(0.36013),doubleToFloat(-0.06506),doubleToFloat(-0.36167),doubleToFloat(0.45074),doubleToFloat(0.3586),doubleToFloat(-0.89176),doubleToFloat(0.4423),doubleToFloat(0.38624),doubleToFloat(-0.99363),doubleToFloat(0.47634),doubleToFloat(0.23784),doubleToFloat(-0.84185),doubleToFloat(0.38343),doubleToFloat(-0.08736),doubleToFloat(-0.51857),doubleToFloat(0.28079),doubleToFloat(0.08398),doubleToFloat(-1.26981),doubleToFloat(0.20579),doubleToFloat(0.22719),doubleToFloat(-1.18841),doubleToFloat(0.18621),doubleToFloat(0.14211),doubleToFloat(-1.28286),doubleToFloat(-0.00007),doubleToFloat(-0.02279),doubleToFloat(-1.3082),doubleToFloat(0.13379),doubleToFloat(-0.04625),doubleToFloat(-1.31485),doubleToFloat(0.16105),doubleToFloat(0.14554),doubleToFloat(-1.33047),doubleToFloat(0.13294),doubleToFloat(0.26594),doubleToFloat(-1.22041),doubleToFloat(-0.00474),doubleToFloat(-0.13576),doubleToFloat(-1.00131),doubleToFloat(0.35297),doubleToFloat(-0.1364),doubleToFloat(-1.17229),doubleToFloat(0.11787),doubleToFloat(0.50833),doubleToFloat(-0.77223),doubleToFloat(0.34273),doubleToFloat(0.47148),doubleToFloat(-0.86028),doubleToFloat(0.34222),doubleToFloat(0.46073),doubleToFloat(-0.80883),doubleToFloat(0.33735),doubleToFloat(-0.02995),doubleToFloat(-1.29899),doubleToFloat(0.47148),doubleToFloat(0.0633),doubleToFloat(-0.7648),doubleToFloat(0.41619),doubleToFloat(0.12386),doubleToFloat(-0.35297),doubleToFloat(0.40211),doubleToFloat(0.43027),doubleToFloat(-0.49016),doubleToFloat(0.40979),doubleToFloat(0.41465),doubleToFloat(-0.8636),doubleToFloat(0.38829),doubleToFloat(0.43359),doubleToFloat(-0.8293),doubleToFloat(0.13223),doubleToFloat(0.00589),doubleToFloat(-1.36579),doubleToFloat(0.00056),doubleToFloat(-0.0048),doubleToFloat(-1.3594),doubleToFloat(0.37037),doubleToFloat(0.27618),doubleToFloat(-1.18969),doubleToFloat(0.00112),doubleToFloat(0.01061),doubleToFloat(-1.40291),doubleToFloat(0.30024),doubleToFloat(0.05452),doubleToFloat(-1.29668),doubleToFloat(0.10087),doubleToFloat(0.35604),doubleToFloat(-1.13646),doubleToFloat(0.14032),doubleToFloat(0.29077),doubleToFloat(-1.15924),doubleToFloat(0.47608),doubleToFloat(0.27567),doubleToFloat(-1.15053),doubleToFloat(0.11354),doubleToFloat(0.01691),doubleToFloat(-1.39293),doubleToFloat(0.28693),doubleToFloat(0.43948),doubleToFloat(-0.99875),doubleToFloat(0.0623),doubleToFloat(0.30434),doubleToFloat(-1.20658),doubleToFloat(0.10016),doubleToFloat(0.45919),doubleToFloat(-0.98953),doubleToFloat(0.12693),doubleToFloat(0.46738),doubleToFloat(-1.00362),doubleToFloat(0.44281),doubleToFloat(0.16921),doubleToFloat(0.04026),doubleToFloat(0.38343),doubleToFloat(0.40672),doubleToFloat(0.15503),doubleToFloat(0.36986),doubleToFloat(-0.10712),doubleToFloat(0.13968),doubleToFloat(0.39315),doubleToFloat(-0.00747),doubleToFloat(0.08536),doubleToFloat(-0.21751),doubleToFloat(0.42566),doubleToFloat(-0.08605),doubleToFloat(-0.20589),doubleToFloat(0.42745),doubleToFloat(-0.21321),doubleToFloat(-0.29205),doubleToFloat(0.18537),doubleToFloat(-0.20733),doubleToFloat(-0.23402),doubleToFloat(-0.03102),doubleToFloat(-0.06248),doubleToFloat(-0.22417),doubleToFloat(-0.02519),doubleToFloat(-0.20203),doubleToFloat(-0.30638),doubleToFloat(0.17339),doubleToFloat(-0.07034),doubleToFloat(-0.35604),doubleToFloat(-0.01206),doubleToFloat(-1.13722),doubleToFloat(-0.16509),doubleToFloat(-0.01973),doubleToFloat(-1.23628),doubleToFloat(-0.32148),doubleToFloat(0.15898),doubleToFloat(0.10499),doubleToFloat(-0.25128),doubleToFloat(0.40493),doubleToFloat(0.17853),doubleToFloat(-0.18639),doubleToFloat(0.49272),doubleToFloat(-0.77376),doubleToFloat(-0.03839),doubleToFloat(0.5132),doubleToFloat(-0.7497),doubleToFloat(-0.03668),doubleToFloat(0.52216),doubleToFloat(-0.56516),doubleToFloat(-0.29205),doubleToFloat(-0.02186),doubleToFloat(-0.51294),doubleToFloat(-0.28667),doubleToFloat(0.17474),doubleToFloat(-0.35399),doubleToFloat(-0.25903),doubleToFloat(-0.01915),doubleToFloat(-0.36269),doubleToFloat(-0.40953),doubleToFloat(-0.02839),doubleToFloat(-0.98109),doubleToFloat(-0.33531),doubleToFloat(-0.0218),doubleToFloat(-0.75508),doubleToFloat(-0.31867),doubleToFloat(0.36602),doubleToFloat(-0.80422),doubleToFloat(-0.21749),doubleToFloat(0.48504),doubleToFloat(-0.49042),doubleToFloat(-0.36321),doubleToFloat(0.1859),doubleToFloat(-0.72743),doubleToFloat(-0.22291),doubleToFloat(0.17228),doubleToFloat(-1.24498),doubleToFloat(-0.11597),doubleToFloat(0.19509),doubleToFloat(-1.26802),doubleToFloat(-0.09639),doubleToFloat(0.28027),doubleToFloat(-1.17357),doubleToFloat(-0.01816),doubleToFloat(0.2923),doubleToFloat(-1.21298),doubleToFloat(-0.25473),doubleToFloat(0.48018),doubleToFloat(-0.8572),doubleToFloat(-0.24516),doubleToFloat(0.5068),doubleToFloat(-0.95984),doubleToFloat(-0.19476),doubleToFloat(0.51908),doubleToFloat(-0.83417),doubleToFloat(-0.31739),doubleToFloat(0.08488),doubleToFloat(-1.26674),doubleToFloat(-0.37651),doubleToFloat(0.03944),doubleToFloat(-0.80345),doubleToFloat(-0.25373),doubleToFloat(0.15168),doubleToFloat(-1.2693),doubleToFloat(0.10356),doubleToFloat(0.50808),doubleToFloat(-0.82291),doubleToFloat(-0.13392),doubleToFloat(0.00068),doubleToFloat(-1.3018),doubleToFloat(-0.23392),doubleToFloat(0.38215),doubleToFloat(-1.15975),doubleToFloat(-0.32967),doubleToFloat(0.41747),doubleToFloat(-1.11035),doubleToFloat(-0.11961),doubleToFloat(0.05004),doubleToFloat(-1.35325),doubleToFloat(-0.01078),doubleToFloat(0.31713),doubleToFloat(-1.15181),doubleToFloat(0.0505),doubleToFloat(0.365),doubleToFloat(-1.13389),doubleToFloat(-0.101),doubleToFloat(0.05454),doubleToFloat(-1.38244),doubleToFloat(-0.09581),doubleToFloat(0.19059),doubleToFloat(-1.31793),doubleToFloat(-0.08209),doubleToFloat(0.50398),doubleToFloat(-0.98058),doubleToFloat(-0.24255),doubleToFloat(-0.10333),doubleToFloat(0.23292),doubleToFloat(-0.26952),doubleToFloat(-0.01132),doubleToFloat(0.16714),doubleToFloat(-0.19297),doubleToFloat(0.47429),doubleToFloat(-0.40262),doubleToFloat(0.38803),doubleToFloat(0.42438),doubleToFloat(-0.43846),doubleToFloat(0.39392),doubleToFloat(0.39878),doubleToFloat(-0.80115),doubleToFloat(0.07256),doubleToFloat(0.33838),doubleToFloat(-1.11982),doubleToFloat(0.07658),doubleToFloat(0.47634),doubleToFloat(-1.00105),doubleToFloat(0.12875),doubleToFloat(0.50373),doubleToFloat(-0.82419),doubleToFloat(-0.1105),doubleToFloat(0.55082),doubleToFloat(-0.83801),doubleToFloat(-0.16612),doubleToFloat(0.5283),doubleToFloat(-0.80217),doubleToFloat(-0.11127),doubleToFloat(0.53854),doubleToFloat(-0.78682),doubleToFloat(-0.20612),doubleToFloat(0.47608),doubleToFloat(-0.43948),doubleToFloat(-0.04385),doubleToFloat(0.49298),doubleToFloat(-0.51576)], Java.type("float[]"))))
                          .setTexCoord(new TextureCoordinate().setPoint(Java.to([doubleToFloat(0.848),doubleToFloat(0.745),doubleToFloat(0.819),doubleToFloat(0.745),doubleToFloat(0.841),doubleToFloat(0.764),doubleToFloat(0.938),doubleToFloat(0.819),doubleToFloat(0.99),doubleToFloat(0.838),doubleToFloat(0.964),doubleToFloat(0.819),doubleToFloat(0.96),doubleToFloat(0.838),doubleToFloat(0.912),doubleToFloat(0.836),doubleToFloat(0.908),doubleToFloat(0.736),doubleToFloat(0.898),doubleToFloat(0.745),doubleToFloat(0.908),doubleToFloat(0.753),doubleToFloat(0.999),doubleToFloat(0.765),doubleToFloat(0.999),doubleToFloat(0.745),doubleToFloat(0.96),doubleToFloat(0.76),doubleToFloat(0.938),doubleToFloat(0.776),doubleToFloat(0.898),doubleToFloat(0.771),doubleToFloat(0.947),doubleToFloat(0.777),doubleToFloat(0.974),doubleToFloat(0.781),doubleToFloat(0.898),doubleToFloat(0.718),doubleToFloat(0.954),doubleToFloat(0.723),doubleToFloat(0.974),doubleToFloat(0.749),doubleToFloat(0.999),doubleToFloat(0.724),doubleToFloat(0.96),doubleToFloat(0.854),doubleToFloat(0.999),doubleToFloat(0.854),doubleToFloat(0.96),doubleToFloat(0.799),doubleToFloat(0.912),doubleToFloat(0.801),doubleToFloat(0.976),doubleToFloat(0.819),doubleToFloat(0.999),doubleToFloat(0.819),doubleToFloat(0.999),doubleToFloat(0.798),doubleToFloat(0.953),doubleToFloat(0.788),doubleToFloat(0.944),doubleToFloat(0.789),doubleToFloat(0.999),doubleToFloat(0.709),doubleToFloat(0.947),doubleToFloat(0.709),doubleToFloat(0.912),doubleToFloat(0.819),doubleToFloat(0.905),doubleToFloat(0.781),doubleToFloat(0.841),doubleToFloat(0.792),doubleToFloat(0.855),doubleToFloat(0.802),doubleToFloat(0.855),doubleToFloat(0.819),doubleToFloat(0.855),doubleToFloat(0.835),doubleToFloat(0.841),doubleToFloat(0.812),doubleToFloat(0.841),doubleToFloat(0.835),doubleToFloat(0.841),doubleToFloat(0.854),doubleToFloat(0.841),doubleToFloat(0.825),doubleToFloat(0.841),doubleToFloat(0.709),doubleToFloat(0.841),doubleToFloat(0.725),doubleToFloat(0.841),doubleToFloat(0.802),doubleToFloat(0.812),doubleToFloat(0.828),doubleToFloat(0.812),doubleToFloat(0.854),doubleToFloat(0.783),doubleToFloat(0.854),doubleToFloat(0.812),doubleToFloat(0.765),doubleToFloat(0.812),doubleToFloat(0.754),doubleToFloat(0.783),doubleToFloat(0.765),doubleToFloat(0.783),doubleToFloat(0.724),doubleToFloat(0.783),doubleToFloat(0.827),doubleToFloat(0.812),doubleToFloat(0.81),doubleToFloat(0.812),doubleToFloat(0.793),doubleToFloat(0.783),doubleToFloat(0.794),doubleToFloat(0.783),doubleToFloat(0.81),doubleToFloat(0.812),doubleToFloat(0.724),doubleToFloat(0.783),doubleToFloat(0.709),doubleToFloat(0.812),doubleToFloat(0.709),doubleToFloat(0.675),doubleToFloat(0.834),doubleToFloat(0.675),doubleToFloat(0.822),doubleToFloat(0.675),doubleToFloat(0.79),doubleToFloat(0.675),doubleToFloat(0.759),doubleToFloat(0.675),doubleToFloat(0.804),doubleToFloat(0.675),doubleToFloat(0.709),doubleToFloat(0.675),doubleToFloat(0.854),doubleToFloat(0.999),doubleToFloat(0.781),doubleToFloat(0.939),doubleToFloat(0.735),doubleToFloat(0.905),doubleToFloat(0.854),doubleToFloat(0.999),doubleToFloat(0.84),doubleToFloat(0.812),doubleToFloat(0.735),doubleToFloat(0.953),doubleToFloat(0.759),doubleToFloat(0.905),doubleToFloat(0.709),doubleToFloat(0.848),doubleToFloat(0.964),doubleToFloat(0.84),doubleToFloat(0.944),doubleToFloat(0.819),doubleToFloat(0.963),doubleToFloat(0.973),doubleToFloat(0.89),doubleToFloat(0.99),doubleToFloat(0.871),doubleToFloat(0.938),doubleToFloat(0.89),doubleToFloat(0.959),doubleToFloat(0.87),doubleToFloat(0.912),doubleToFloat(0.873),doubleToFloat(0.907),doubleToFloat(0.955),doubleToFloat(0.897),doubleToFloat(0.964),doubleToFloat(0.907),doubleToFloat(0.972),doubleToFloat(0.959),doubleToFloat(0.949),doubleToFloat(0.998),doubleToFloat(0.964),doubleToFloat(0.998),doubleToFloat(0.944),doubleToFloat(0.938),doubleToFloat(0.932),doubleToFloat(0.897),doubleToFloat(0.938),doubleToFloat(0.974),doubleToFloat(0.927),doubleToFloat(0.946),doubleToFloat(0.931),doubleToFloat(0.897),doubleToFloat(0.99),doubleToFloat(0.974),doubleToFloat(0.96),doubleToFloat(0.953),doubleToFloat(0.986),doubleToFloat(0.998),doubleToFloat(0.984),doubleToFloat(0.959),doubleToFloat(0.854),doubleToFloat(0.998),doubleToFloat(0.854),doubleToFloat(0.959),doubleToFloat(0.909),doubleToFloat(0.912),doubleToFloat(0.907),doubleToFloat(0.998),doubleToFloat(0.89),doubleToFloat(0.975),doubleToFloat(0.89),doubleToFloat(0.952),doubleToFloat(0.92),doubleToFloat(0.998),doubleToFloat(0.911),doubleToFloat(0.944),doubleToFloat(0.919),doubleToFloat(0.946),doubleToFloat(1),doubleToFloat(0.998),doubleToFloat(1),doubleToFloat(0.912),doubleToFloat(0.89),doubleToFloat(0.904),doubleToFloat(0.928),doubleToFloat(0.84),doubleToFloat(0.916),doubleToFloat(0.855),doubleToFloat(0.906),doubleToFloat(0.855),doubleToFloat(0.873),doubleToFloat(0.855),doubleToFloat(0.89),doubleToFloat(0.84),doubleToFloat(0.896),doubleToFloat(0.84),doubleToFloat(0.854),doubleToFloat(0.84),doubleToFloat(0.874),doubleToFloat(0.84),doubleToFloat(0.883),doubleToFloat(0.84),doubleToFloat(0.984),doubleToFloat(0.84),doubleToFloat(1),doubleToFloat(0.84),doubleToFloat(0.906),doubleToFloat(0.811),doubleToFloat(0.854),doubleToFloat(0.811),doubleToFloat(0.881),doubleToFloat(0.782),doubleToFloat(0.854),doubleToFloat(0.811),doubleToFloat(0.954),doubleToFloat(0.811),doubleToFloat(0.944),doubleToFloat(0.782),doubleToFloat(0.943),doubleToFloat(0.782),doubleToFloat(0.985),doubleToFloat(0.811),doubleToFloat(0.899),doubleToFloat(0.782),doubleToFloat(0.881),doubleToFloat(0.811),doubleToFloat(0.915),doubleToFloat(0.782),doubleToFloat(0.914),doubleToFloat(0.782),doubleToFloat(0.898),doubleToFloat(0.811),doubleToFloat(0.984),doubleToFloat(0.782),doubleToFloat(1),doubleToFloat(0.811),doubleToFloat(1),doubleToFloat(0.675),doubleToFloat(0.874),doubleToFloat(0.675),doubleToFloat(0.887),doubleToFloat(0.675),doubleToFloat(0.919),doubleToFloat(0.675),doubleToFloat(0.95),doubleToFloat(0.675),doubleToFloat(0.905),doubleToFloat(0.675),doubleToFloat(1),doubleToFloat(0.675),doubleToFloat(0.854),doubleToFloat(0.998),doubleToFloat(0.927),doubleToFloat(0.939),doubleToFloat(0.973),doubleToFloat(0.904),doubleToFloat(0.854),doubleToFloat(0.998),doubleToFloat(0.869),doubleToFloat(0.811),doubleToFloat(0.974),doubleToFloat(0.952),doubleToFloat(0.95),doubleToFloat(0.904),doubleToFloat(1),doubleToFloat(0.061),doubleToFloat(0.4),doubleToFloat(0.04),doubleToFloat(0.391),doubleToFloat(0.029),doubleToFloat(0.349),doubleToFloat(0.029),doubleToFloat(0.336),doubleToFloat(0.016),doubleToFloat(0.297),doubleToFloat(0.085),doubleToFloat(0.303),doubleToFloat(0.085),doubleToFloat(0.354),doubleToFloat(0.079),doubleToFloat(0.331),doubleToFloat(0.139),doubleToFloat(0.112),doubleToFloat(0.123),doubleToFloat(0.112),doubleToFloat(0.145),doubleToFloat(0.072),doubleToFloat(0.119),doubleToFloat(0.047),doubleToFloat(0.063),doubleToFloat(0.055),doubleToFloat(0.052),doubleToFloat(0.051),doubleToFloat(0.055),doubleToFloat(0.048),doubleToFloat(0.048),doubleToFloat(0.048),doubleToFloat(0.107),doubleToFloat(0.079),doubleToFloat(0.084),doubleToFloat(0.047),doubleToFloat(0.082),doubleToFloat(0.033),doubleToFloat(0.102),doubleToFloat(0.034),doubleToFloat(0.156),doubleToFloat(0.075),doubleToFloat(0.145),doubleToFloat(0.072),doubleToFloat(0.148),doubleToFloat(0.114),doubleToFloat(0.164),doubleToFloat(0.114),doubleToFloat(0.156),doubleToFloat(0.114),doubleToFloat(0.114),doubleToFloat(0.112),doubleToFloat(0.091),doubleToFloat(0.272),doubleToFloat(0.015),doubleToFloat(0.265),doubleToFloat(0.019),doubleToFloat(0.213),doubleToFloat(0.056),doubleToFloat(0.177),doubleToFloat(0.019),doubleToFloat(0.177),doubleToFloat(0.094),doubleToFloat(0.213),doubleToFloat(0.094),doubleToFloat(0.177),doubleToFloat(0.103),doubleToFloat(0.053),doubleToFloat(0.057),doubleToFloat(0.135),doubleToFloat(0.062),doubleToFloat(0.033),doubleToFloat(0.082),doubleToFloat(0.053),doubleToFloat(0.083),doubleToFloat(0.225),doubleToFloat(0.03),doubleToFloat(0.222),doubleToFloat(0.058),doubleToFloat(0.215),doubleToFloat(0.024),doubleToFloat(0.234),doubleToFloat(0.055),doubleToFloat(0.036),doubleToFloat(0.144),doubleToFloat(0.047),doubleToFloat(0.14),doubleToFloat(0.034),doubleToFloat(0.122),doubleToFloat(0.034),doubleToFloat(0.156),doubleToFloat(0.046),doubleToFloat(0.156),doubleToFloat(0.034),doubleToFloat(0.145),doubleToFloat(0.046),doubleToFloat(0.167),doubleToFloat(0.046),doubleToFloat(0.167),doubleToFloat(0.034),doubleToFloat(0.02),doubleToFloat(0.135),doubleToFloat(0.055),doubleToFloat(0.093),doubleToFloat(0.04),doubleToFloat(0.091),doubleToFloat(0.088),doubleToFloat(0.239),doubleToFloat(0.048),doubleToFloat(0.04),doubleToFloat(0.083),doubleToFloat(0.396),doubleToFloat(0.145),doubleToFloat(0.034),doubleToFloat(0.167),doubleToFloat(0.072),doubleToFloat(0.056),doubleToFloat(0.213),doubleToFloat(0.095),doubleToFloat(0.135),doubleToFloat(0.067),doubleToFloat(0.092),doubleToFloat(0.051),doubleToFloat(0.049),doubleToFloat(0.656),doubleToFloat(0.914),doubleToFloat(0.628),doubleToFloat(0.902),doubleToFloat(0.656),doubleToFloat(0.921),doubleToFloat(0.656),doubleToFloat(0.942),doubleToFloat(0.624),doubleToFloat(0.941),doubleToFloat(0.632),doubleToFloat(0.946),doubleToFloat(0.656),doubleToFloat(0.937),doubleToFloat(0.618),doubleToFloat(0.934),doubleToFloat(0.605),doubleToFloat(0.914),doubleToFloat(0.608),doubleToFloat(0.923),doubleToFloat(0.592),doubleToFloat(0.923),doubleToFloat(0.589),doubleToFloat(0.94),doubleToFloat(0.656),doubleToFloat(0.946),doubleToFloat(0.616),doubleToFloat(0.908),doubleToFloat(0.582),doubleToFloat(0.91),doubleToFloat(0.575),doubleToFloat(0.9),doubleToFloat(0.553),doubleToFloat(0.896),doubleToFloat(0.55),doubleToFloat(0.906),doubleToFloat(0.522),doubleToFloat(0.916),doubleToFloat(0.53),doubleToFloat(0.912),doubleToFloat(0.522),doubleToFloat(0.91),doubleToFloat(0.55),doubleToFloat(0.913),doubleToFloat(0.53),doubleToFloat(0.905),doubleToFloat(0.582),doubleToFloat(0.916),doubleToFloat(0.49),doubleToFloat(0.981),doubleToFloat(0.484),doubleToFloat(0.972),doubleToFloat(0.479),doubleToFloat(0.981),doubleToFloat(0.507),doubleToFloat(0.99),doubleToFloat(0.504),doubleToFloat(0.972),doubleToFloat(0.504),doubleToFloat(0.99),doubleToFloat(0.516),doubleToFloat(0.972),doubleToFloat(0.509),doubleToFloat(0.972),doubleToFloat(0.553),doubleToFloat(0.857),doubleToFloat(0.54),doubleToFloat(0.845),doubleToFloat(0.538),doubleToFloat(0.858),doubleToFloat(0.603),doubleToFloat(0.859),doubleToFloat(0.603),doubleToFloat(0.841),doubleToFloat(0.594),doubleToFloat(0.859),doubleToFloat(0.619),doubleToFloat(0.896),doubleToFloat(0.581),doubleToFloat(0.719),doubleToFloat(0.566),doubleToFloat(0.729),doubleToFloat(0.566),doubleToFloat(0.718),doubleToFloat(0.555),doubleToFloat(0.917),doubleToFloat(0.535),doubleToFloat(0.719),doubleToFloat(0.563),doubleToFloat(0.922),doubleToFloat(0.575),doubleToFloat(0.918),doubleToFloat(0.595),doubleToFloat(0.946),doubleToFloat(0.626),doubleToFloat(0.756),doubleToFloat(0.619),doubleToFloat(0.722),doubleToFloat(0.652),doubleToFloat(0.756),doubleToFloat(0.543),doubleToFloat(0.943),doubleToFloat(0.548),doubleToFloat(0.946),doubleToFloat(0.522),doubleToFloat(0.946),doubleToFloat(0.589),doubleToFloat(0.896),doubleToFloat(0.585),doubleToFloat(0.902),doubleToFloat(0.613),doubleToFloat(0.722),doubleToFloat(0.581),doubleToFloat(0.731),doubleToFloat(0.522),doubleToFloat(0.896),doubleToFloat(0.568),doubleToFloat(0.907),doubleToFloat(0.591),doubleToFloat(0.859),doubleToFloat(0.597),doubleToFloat(0.839),doubleToFloat(0.586),doubleToFloat(0.841),doubleToFloat(0.56),doubleToFloat(0.847),doubleToFloat(0.558),doubleToFloat(0.831),doubleToFloat(0.551),doubleToFloat(0.838),doubleToFloat(0.652),doubleToFloat(0.711),doubleToFloat(0.627),doubleToFloat(0.717),doubleToFloat(0.627),doubleToFloat(0.711),doubleToFloat(0.652),doubleToFloat(0.732),doubleToFloat(0.668),doubleToFloat(0.732),doubleToFloat(0.668),doubleToFloat(0.744),doubleToFloat(0.579),doubleToFloat(0.927),doubleToFloat(0.534),doubleToFloat(0.734),doubleToFloat(0.519),doubleToFloat(0.729),doubleToFloat(0.529),doubleToFloat(0.729),doubleToFloat(0.537),doubleToFloat(0.917),doubleToFloat(0.533),doubleToFloat(0.922),doubleToFloat(0.522),doubleToFloat(0.927),doubleToFloat(0.522),doubleToFloat(0.933),doubleToFloat(0.528),doubleToFloat(0.931),doubleToFloat(0.536),doubleToFloat(0.928),doubleToFloat(0.522),doubleToFloat(0.917),doubleToFloat(0.526),doubleToFloat(0.922),doubleToFloat(0.538),doubleToFloat(0.937),doubleToFloat(0.532),doubleToFloat(0.939),doubleToFloat(0.57),doubleToFloat(0.935),doubleToFloat(0.568),doubleToFloat(0.914),doubleToFloat(0.588),doubleToFloat(0.756),doubleToFloat(0.545),doubleToFloat(0.756),doubleToFloat(0.553),doubleToFloat(0.845),doubleToFloat(0.546),doubleToFloat(0.837),doubleToFloat(0.572),doubleToFloat(0.841),doubleToFloat(0.528),doubleToFloat(0.842),doubleToFloat(0.528),doubleToFloat(0.847),doubleToFloat(0.528),doubleToFloat(0.858),doubleToFloat(0.484),doubleToFloat(0.99),doubleToFloat(0.535),doubleToFloat(0.726),doubleToFloat(0.529),doubleToFloat(0.721),doubleToFloat(0.512),doubleToFloat(0.756),doubleToFloat(0.512),doubleToFloat(0.729),doubleToFloat(0.519),doubleToFloat(0.756),doubleToFloat(0.516),doubleToFloat(0.99),doubleToFloat(0.56),doubleToFloat(0.858),doubleToFloat(0.672),doubleToFloat(0.937),doubleToFloat(0.672),doubleToFloat(0.946),doubleToFloat(0.672),doubleToFloat(0.92),doubleToFloat(0.672),doubleToFloat(0.929),doubleToFloat(0.672),doubleToFloat(0.91),doubleToFloat(0.656),doubleToFloat(0.91),doubleToFloat(0.668),doubleToFloat(0.756),doubleToFloat(0.254),doubleToFloat(0.155),doubleToFloat(0.284),doubleToFloat(0.172),doubleToFloat(0.28),doubleToFloat(0.155),doubleToFloat(0.175),doubleToFloat(0.273),doubleToFloat(0.215),doubleToFloat(0.306),doubleToFloat(0.224),doubleToFloat(0.298),doubleToFloat(0.175),doubleToFloat(0.264),doubleToFloat(0.401),doubleToFloat(0.292),doubleToFloat(0.475),doubleToFloat(0.301),doubleToFloat(0.475),doubleToFloat(0.292),doubleToFloat(0.408),doubleToFloat(0.306),doubleToFloat(0.402),doubleToFloat(0.317),doubleToFloat(0.223),doubleToFloat(0.317),doubleToFloat(0.403),doubleToFloat(0.278),doubleToFloat(0.475),doubleToFloat(0.275),doubleToFloat(0.383),doubleToFloat(0.278),doubleToFloat(0.352),doubleToFloat(0.281),doubleToFloat(0.359),doubleToFloat(0.298),doubleToFloat(0.315),doubleToFloat(0.292),doubleToFloat(0.223),doubleToFloat(0.288),doubleToFloat(0.175),doubleToFloat(0.247),doubleToFloat(0.222),doubleToFloat(0.172),doubleToFloat(0.245),doubleToFloat(0.168),doubleToFloat(0.402),doubleToFloat(0.24),doubleToFloat(0.373),doubleToFloat(0.24),doubleToFloat(0.475),doubleToFloat(0.244),doubleToFloat(0.269),doubleToFloat(0.292),doubleToFloat(0.276),doubleToFloat(0.244),doubleToFloat(0.31),doubleToFloat(0.244),doubleToFloat(0.241),doubleToFloat(0.29),doubleToFloat(0.251),doubleToFloat(0.244),doubleToFloat(0.346),doubleToFloat(0.24),doubleToFloat(0.225),doubleToFloat(0.244),doubleToFloat(0.18),doubleToFloat(0.217),doubleToFloat(0.368),doubleToFloat(0.182),doubleToFloat(0.401),doubleToFloat(0.182),doubleToFloat(0.471),doubleToFloat(0.188),doubleToFloat(0.302),doubleToFloat(0.185),doubleToFloat(0.277),doubleToFloat(0.189),doubleToFloat(0.254),doubleToFloat(0.189),doubleToFloat(0.229),doubleToFloat(0.189),doubleToFloat(0.189),doubleToFloat(0.185),doubleToFloat(0.341),doubleToFloat(0.182),doubleToFloat(0.401),doubleToFloat(0.155),doubleToFloat(0.368),doubleToFloat(0.155),doubleToFloat(0.471),doubleToFloat(0.174),doubleToFloat(0.227),doubleToFloat(0.155),doubleToFloat(0.189),doubleToFloat(0.155),doubleToFloat(0.263),doubleToFloat(0.168),doubleToFloat(0.194),doubleToFloat(0.171),doubleToFloat(0.341),doubleToFloat(0.155),doubleToFloat(0.305),doubleToFloat(0.172),doubleToFloat(0.31),doubleToFloat(0.155),doubleToFloat(0.195),doubleToFloat(0.101),doubleToFloat(0.214),doubleToFloat(0.012),doubleToFloat(0.235),doubleToFloat(0.046),doubleToFloat(0.234),doubleToFloat(0.003),doubleToFloat(0.259),doubleToFloat(0.1),doubleToFloat(0.262),doubleToFloat(0.032),doubleToFloat(0.283),doubleToFloat(0.1),doubleToFloat(0.289),doubleToFloat(0.016),doubleToFloat(0.282),doubleToFloat(0.046),doubleToFloat(0.344),doubleToFloat(0.1),doubleToFloat(0.37),doubleToFloat(0.033),doubleToFloat(0.369),doubleToFloat(0.008),doubleToFloat(0.349),doubleToFloat(0.015),doubleToFloat(0.314),doubleToFloat(0.1),doubleToFloat(0.394),doubleToFloat(0.005),doubleToFloat(0.393),doubleToFloat(0.1),doubleToFloat(0.366),doubleToFloat(0.1),doubleToFloat(0.319),doubleToFloat(0.036),doubleToFloat(0.318),doubleToFloat(0.011),doubleToFloat(0.443),doubleToFloat(0.036),doubleToFloat(0.432),doubleToFloat(0.02),doubleToFloat(0.396),doubleToFloat(0.033),doubleToFloat(0.46),doubleToFloat(0.156),doubleToFloat(0.446),doubleToFloat(0.097),doubleToFloat(0.242),doubleToFloat(-0.001),doubleToFloat(0.217),doubleToFloat(-0.029),doubleToFloat(0.272),doubleToFloat(0.003),doubleToFloat(0.293),doubleToFloat(0.002),doubleToFloat(0.265),doubleToFloat(0.012),doubleToFloat(0.375),doubleToFloat(0.002),doubleToFloat(0.357),doubleToFloat(0.002),doubleToFloat(0.327),doubleToFloat(0.001),doubleToFloat(0.39),doubleToFloat(0.001),doubleToFloat(0.43),doubleToFloat(0.003),doubleToFloat(0.229),doubleToFloat(0.1),doubleToFloat(0.348),doubleToFloat(0.033),doubleToFloat(0.212),doubleToFloat(0.046),doubleToFloat(0.29),doubleToFloat(0.173),doubleToFloat(0.255),doubleToFloat(0.154),doubleToFloat(0.285),doubleToFloat(0.154),doubleToFloat(0.475),doubleToFloat(0.301),doubleToFloat(0.43),doubleToFloat(0.301),doubleToFloat(0.432),doubleToFloat(0.286),doubleToFloat(0.475),doubleToFloat(0.282),doubleToFloat(0.372),doubleToFloat(0.29),doubleToFloat(0.425),doubleToFloat(0.286),doubleToFloat(0.379),doubleToFloat(0.308),doubleToFloat(0.327),doubleToFloat(0.301),doubleToFloat(0.218),doubleToFloat(0.297),doubleToFloat(0.175),doubleToFloat(0.291),doubleToFloat(0.172),doubleToFloat(0.274),doubleToFloat(0.219),doubleToFloat(0.308),doubleToFloat(0.217),doubleToFloat(0.173),doubleToFloat(0.243),doubleToFloat(0.169),doubleToFloat(0.413),doubleToFloat(0.245),doubleToFloat(0.43),doubleToFloat(0.246),doubleToFloat(0.475),doubleToFloat(0.25),doubleToFloat(0.273),doubleToFloat(0.301),doubleToFloat(0.28),doubleToFloat(0.25),doubleToFloat(0.321),doubleToFloat(0.25),doubleToFloat(0.24),doubleToFloat(0.299),doubleToFloat(0.251),doubleToFloat(0.25),doubleToFloat(0.364),doubleToFloat(0.246),doubleToFloat(0.175),doubleToFloat(0.246),doubleToFloat(0.22),doubleToFloat(0.25),doubleToFloat(0.407),doubleToFloat(0.183),doubleToFloat(0.429),doubleToFloat(0.184),doubleToFloat(0.475),doubleToFloat(0.187),doubleToFloat(0.282),doubleToFloat(0.191),doubleToFloat(0.312),doubleToFloat(0.187),doubleToFloat(0.254),doubleToFloat(0.191),doubleToFloat(0.225),doubleToFloat(0.191),doubleToFloat(0.186),doubleToFloat(0.187),doubleToFloat(0.358),doubleToFloat(0.184),doubleToFloat(0.39),doubleToFloat(0.154),doubleToFloat(0.429),doubleToFloat(0.154),doubleToFloat(0.475),doubleToFloat(0.173),doubleToFloat(0.186),doubleToFloat(0.154),doubleToFloat(0.222),doubleToFloat(0.154),doubleToFloat(0.266),doubleToFloat(0.169),doubleToFloat(0.194),doubleToFloat(0.172),doubleToFloat(0.358),doubleToFloat(0.154),doubleToFloat(0.315),doubleToFloat(0.173),doubleToFloat(0.321),doubleToFloat(0.154),doubleToFloat(0.195),doubleToFloat(0.096),doubleToFloat(0.218),doubleToFloat(-0.003),doubleToFloat(0.231),doubleToFloat(0.007),doubleToFloat(0.232),doubleToFloat(0.038),doubleToFloat(0.261),doubleToFloat(0.096),doubleToFloat(0.266),doubleToFloat(0.035),doubleToFloat(0.289),doubleToFloat(0.096),doubleToFloat(0.288),doubleToFloat(0.003),doubleToFloat(0.295),doubleToFloat(0.023),doubleToFloat(0.362),doubleToFloat(0.096),doubleToFloat(0.366),doubleToFloat(0.011),doubleToFloat(0.39),doubleToFloat(0),doubleToFloat(0.392),doubleToFloat(0.033),doubleToFloat(0.327),doubleToFloat(0.096),doubleToFloat(0.425),doubleToFloat(0.001),doubleToFloat(0.389),doubleToFloat(0.096),doubleToFloat(0.42),doubleToFloat(0.096),doubleToFloat(0.33),doubleToFloat(0.015),doubleToFloat(0.331),doubleToFloat(0.037),doubleToFloat(0.435),doubleToFloat(0.043),doubleToFloat(0.422),doubleToFloat(0.033),doubleToFloat(0.435),doubleToFloat(0.032),doubleToFloat(0.445),doubleToFloat(0.096),doubleToFloat(0.461),doubleToFloat(0.154),doubleToFloat(0.207),doubleToFloat(0.001),doubleToFloat(0.25),doubleToFloat(0.002),doubleToFloat(0.3),doubleToFloat(0.001),doubleToFloat(0.275),doubleToFloat(0.002),doubleToFloat(0.265),doubleToFloat(0.004),doubleToFloat(0.398),doubleToFloat(0),doubleToFloat(0.377),doubleToFloat(0.001),doubleToFloat(0.331),doubleToFloat(0.016),doubleToFloat(0.341),doubleToFloat(0.001),doubleToFloat(0.42),doubleToFloat(0.001),doubleToFloat(0.443),doubleToFloat(0.005),doubleToFloat(0.225),doubleToFloat(0.096),doubleToFloat(0.366),doubleToFloat(0.033),doubleToFloat(0.209),doubleToFloat(0.04),doubleToFloat(0.361),doubleToFloat(0.745),doubleToFloat(0.418),doubleToFloat(0.745),doubleToFloat(0.419),doubleToFloat(0.724),doubleToFloat(0.268),doubleToFloat(0.488),doubleToFloat(0.3),doubleToFloat(0.486),doubleToFloat(0.299),doubleToFloat(0.464),doubleToFloat(0.462),doubleToFloat(0.751),doubleToFloat(0.461),doubleToFloat(0.719),doubleToFloat(0.361),doubleToFloat(0.485),doubleToFloat(0.361),doubleToFloat(0.587),doubleToFloat(0.335),doubleToFloat(0.596),doubleToFloat(0.361),doubleToFloat(0.596),doubleToFloat(0.361),doubleToFloat(0.724),doubleToFloat(0.361),doubleToFloat(0.464),doubleToFloat(0.27),doubleToFloat(0.466),doubleToFloat(0.361),doubleToFloat(0.793),doubleToFloat(0.39),doubleToFloat(0.832),doubleToFloat(0.386),doubleToFloat(0.789),doubleToFloat(0.361),doubleToFloat(0.776),doubleToFloat(0.388),doubleToFloat(0.78),doubleToFloat(0.416),doubleToFloat(0.762),doubleToFloat(0.302),doubleToFloat(0.566),doubleToFloat(0.292),doubleToFloat(0.55),doubleToFloat(0.292),doubleToFloat(0.572),doubleToFloat(0.361),doubleToFloat(0.536),doubleToFloat(0.361),doubleToFloat(0.506),doubleToFloat(0.303),doubleToFloat(0.536),doubleToFloat(0.361),doubleToFloat(0.493),doubleToFloat(0.299),doubleToFloat(0.493),doubleToFloat(0.451),doubleToFloat(0.881),doubleToFloat(0.428),doubleToFloat(0.851),doubleToFloat(0.423),doubleToFloat(0.868),doubleToFloat(0.459),doubleToFloat(0.855),doubleToFloat(0.449),doubleToFloat(0.843),doubleToFloat(0.297),doubleToFloat(0.506),doubleToFloat(0.429),doubleToFloat(0.99),doubleToFloat(0.402),doubleToFloat(0.932),doubleToFloat(0.405),doubleToFloat(0.957),doubleToFloat(0.361),doubleToFloat(0.609),doubleToFloat(0.34),doubleToFloat(0.609),doubleToFloat(0.393),doubleToFloat(0.957),doubleToFloat(0.39),doubleToFloat(0.939),doubleToFloat(0.361),doubleToFloat(0.566),doubleToFloat(0.308),doubleToFloat(0.585),doubleToFloat(0.361),doubleToFloat(0.834),doubleToFloat(0.401),doubleToFloat(0.847),doubleToFloat(0.402),doubleToFloat(0.839),doubleToFloat(0.277),doubleToFloat(0.603),doubleToFloat(0.233),doubleToFloat(0.61),doubleToFloat(0.293),doubleToFloat(0.618),doubleToFloat(0.288),doubleToFloat(0.558),doubleToFloat(0.471),doubleToFloat(0.825),doubleToFloat(0.467),doubleToFloat(0.763),doubleToFloat(0.418),doubleToFloat(0.776),doubleToFloat(0.458),doubleToFloat(0.932),doubleToFloat(0.416),doubleToFloat(0.847),doubleToFloat(0.411),doubleToFloat(0.841),doubleToFloat(0.347),doubleToFloat(0.62),doubleToFloat(0.361),doubleToFloat(0.616),doubleToFloat(0.425),doubleToFloat(0.901),doubleToFloat(0.361),doubleToFloat(0.626),doubleToFloat(0.303),doubleToFloat(0.63),doubleToFloat(0.338),doubleToFloat(0.633),doubleToFloat(0.434),doubleToFloat(0.99),doubleToFloat(0.297),doubleToFloat(0.63),doubleToFloat(0.367),doubleToFloat(0.894),doubleToFloat(0.388),doubleToFloat(0.921),doubleToFloat(0.443),doubleToFloat(0.893),doubleToFloat(0.265),doubleToFloat(0.543),doubleToFloat(0.352),doubleToFloat(0.629),doubleToFloat(0.347),doubleToFloat(0.633),doubleToFloat(0.398),doubleToFloat(0.87),doubleToFloat(0.361),doubleToFloat(0.936),doubleToFloat(0.361),doubleToFloat(0.87),doubleToFloat(0.365),doubleToFloat(0.872),doubleToFloat(0.46),doubleToFloat(0.698),doubleToFloat(0.423),doubleToFloat(0.677),doubleToFloat(0.361),doubleToFloat(0.686),doubleToFloat(0.361),doubleToFloat(0.42),doubleToFloat(0.308),doubleToFloat(0.427),doubleToFloat(0.274),doubleToFloat(0.441),doubleToFloat(0.292),doubleToFloat(0.432),doubleToFloat(0.273),doubleToFloat(0.407),doubleToFloat(0.303),doubleToFloat(0.724),doubleToFloat(0.306),doubleToFloat(0.748),doubleToFloat(0.456),doubleToFloat(0.488),doubleToFloat(0.422),doubleToFloat(0.464),doubleToFloat(0.422),doubleToFloat(0.486),doubleToFloat(0.264),doubleToFloat(0.75),doubleToFloat(0.263),doubleToFloat(0.723),doubleToFloat(0.422),doubleToFloat(0.587),doubleToFloat(0.387),doubleToFloat(0.596),doubleToFloat(0.454),doubleToFloat(0.468),doubleToFloat(0.266),doubleToFloat(0.693),doubleToFloat(0.296),doubleToFloat(0.678),doubleToFloat(0.267),doubleToFloat(0.654),doubleToFloat(0.305),doubleToFloat(0.837),doubleToFloat(0.332),doubleToFloat(0.832),doubleToFloat(0.337),doubleToFloat(0.789),doubleToFloat(0.421),doubleToFloat(0.509),doubleToFloat(0.452),doubleToFloat(0.494),doubleToFloat(0.422),doubleToFloat(0.493),doubleToFloat(0.431),doubleToFloat(0.577),doubleToFloat(0.436),doubleToFloat(0.566),doubleToFloat(0.422),doubleToFloat(0.536),doubleToFloat(0.272),doubleToFloat(0.881),doubleToFloat(0.272),doubleToFloat(0.832),doubleToFloat(0.263),doubleToFloat(0.856),doubleToFloat(0.305),doubleToFloat(0.776),doubleToFloat(0.246),doubleToFloat(0.829),doubleToFloat(0.297),doubleToFloat(0.99),doubleToFloat(0.318),doubleToFloat(0.958),doubleToFloat(0.324),doubleToFloat(0.932),doubleToFloat(0.332),doubleToFloat(0.939),doubleToFloat(0.295),doubleToFloat(0.851),doubleToFloat(0.299),doubleToFloat(0.868),doubleToFloat(0.306),doubleToFloat(0.847),doubleToFloat(0.428),doubleToFloat(0.618),doubleToFloat(0.492),doubleToFloat(0.603),doubleToFloat(0.453),doubleToFloat(0.601),doubleToFloat(0.432),doubleToFloat(0.564),doubleToFloat(0.241),doubleToFloat(0.842),doubleToFloat(0.293),doubleToFloat(0.99),doubleToFloat(0.268),doubleToFloat(0.932),doubleToFloat(0.356),doubleToFloat(0.843),doubleToFloat(0.381),doubleToFloat(0.609),doubleToFloat(0.297),doubleToFloat(0.901),doubleToFloat(0.28),doubleToFloat(0.894),doubleToFloat(0.374),doubleToFloat(0.62),doubleToFloat(0.383),doubleToFloat(0.633),doubleToFloat(0.418),doubleToFloat(0.63),doubleToFloat(0.263),doubleToFloat(0.958),doubleToFloat(0.337),doubleToFloat(0.921),doubleToFloat(0.424),doubleToFloat(0.63),doubleToFloat(0.355),doubleToFloat(0.894),doubleToFloat(0.438),doubleToFloat(0.572),doubleToFloat(0.456),doubleToFloat(0.572),doubleToFloat(0.444),doubleToFloat(0.564),doubleToFloat(0.369),doubleToFloat(0.629),doubleToFloat(0.374),doubleToFloat(0.633),doubleToFloat(0.329),doubleToFloat(0.958),doubleToFloat(0.324),doubleToFloat(0.87),doubleToFloat(0.359),doubleToFloat(0.661),doubleToFloat(0.414),doubleToFloat(0.427),doubleToFloat(0.43),doubleToFloat(0.432),doubleToFloat(0.454),doubleToFloat(0.643),doubleToFloat(0.355),doubleToFloat(0.4),doubleToFloat(0.302),doubleToFloat(0.403),doubleToFloat(0.456),doubleToFloat(0.44),doubleToFloat(0.453),doubleToFloat(0.404),doubleToFloat(0.419),doubleToFloat(0.403),doubleToFloat(0.366),doubleToFloat(0.4),doubleToFloat(0.434),doubleToFloat(0.635),doubleToFloat(0.4),doubleToFloat(0.634),doubleToFloat(0.363),doubleToFloat(0.661),doubleToFloat(0.289),doubleToFloat(0.634),doubleToFloat(0.322),doubleToFloat(0.634),doubleToFloat(0.353),doubleToFloat(0.634),doubleToFloat(0.368),doubleToFloat(0.634),doubleToFloat(0.263),doubleToFloat(0.557),doubleToFloat(0.469),doubleToFloat(0.845),doubleToFloat(0.306),doubleToFloat(0.761),doubleToFloat(0.259),doubleToFloat(0.772),doubleToFloat(0.417),doubleToFloat(0.768),doubleToFloat(0.273),doubleToFloat(0.496),doubleToFloat(0.462),doubleToFloat(0.957),doubleToFloat(0.417),doubleToFloat(0.837),doubleToFloat(0.361),doubleToFloat(0.892),doubleToFloat(0.357),doubleToFloat(0.872),doubleToFloat(0.366),doubleToFloat(0.843),doubleToFloat(0.322),doubleToFloat(0.847),doubleToFloat(0.311),doubleToFloat(0.842),doubleToFloat(0.321),doubleToFloat(0.839),doubleToFloat(0.305),doubleToFloat(0.768),doubleToFloat(0.334),doubleToFloat(0.781)], Java.type("float[]")))))))))))
            .addChild(new Viewpoint().setDEF("Viewpoint1").setDescription("Sailor Front").setOrientation(Java.to([doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1.571)], Java.type("float[]"))).setPosition(Java.to([doubleToFloat(2.293),doubleToFloat(1.66),doubleToFloat(0)], Java.type("float[]"))))
            .addChild(new Viewpoint().setDEF("Viewpoint2").setDescription("Sailor Back").setOrientation(Java.to([doubleToFloat(-0.185),doubleToFloat(-0.965),doubleToFloat(-0.185),doubleToFloat(1.605)], Java.type("float[]"))).setPosition(Java.to([doubleToFloat(-1.208),doubleToFloat(2),doubleToFloat(0)], Java.type("float[]")))))))      ;
    X3D0.toFileX3D("../data/Marine.new.graal.x3d");
    X3D0.toFileJSON("../data/Marine.new.graal.json");
