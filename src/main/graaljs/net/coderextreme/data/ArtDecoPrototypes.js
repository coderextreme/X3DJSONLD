CommentsBlock = Java.type("org.web3d.x3d.jsail.Core.CommentsBlock")
AcousticProperties = Java.type('org.web3d.x3d.jsail.Shape.AcousticProperties')
Analyser = Java.type('org.web3d.x3d.jsail.Sound.Analyser')
Anchor = Java.type('org.web3d.x3d.jsail.Networking.Anchor')
Appearance = Java.type('org.web3d.x3d.jsail.Shape.Appearance')
Arc2D = Java.type('org.web3d.x3d.jsail.Geometry2D.Arc2D')
ArcClose2D = Java.type('org.web3d.x3d.jsail.Geometry2D.ArcClose2D')
AudioClip = Java.type('org.web3d.x3d.jsail.Sound.AudioClip')
AudioDestination = Java.type('org.web3d.x3d.jsail.Sound.AudioDestination')
Background = Java.type('org.web3d.x3d.jsail.EnvironmentalEffects.Background')
BallJoint = Java.type('org.web3d.x3d.jsail.RigidBodyPhysics.BallJoint')
Billboard = Java.type('org.web3d.x3d.jsail.Navigation.Billboard')
BiquadFilter = Java.type('org.web3d.x3d.jsail.Sound.BiquadFilter')
BlendedVolumeStyle = Java.type('org.web3d.x3d.jsail.VolumeRendering.BlendedVolumeStyle')
BooleanFilter = Java.type('org.web3d.x3d.jsail.EventUtilities.BooleanFilter')
BooleanSequencer = Java.type('org.web3d.x3d.jsail.EventUtilities.BooleanSequencer')
BooleanToggle = Java.type('org.web3d.x3d.jsail.EventUtilities.BooleanToggle')
BooleanTrigger = Java.type('org.web3d.x3d.jsail.EventUtilities.BooleanTrigger')
BoundaryEnhancementVolumeStyle = Java.type('org.web3d.x3d.jsail.VolumeRendering.BoundaryEnhancementVolumeStyle')
BoundedPhysicsModel = Java.type('org.web3d.x3d.jsail.ParticleSystems.BoundedPhysicsModel')
Box = Java.type('org.web3d.x3d.jsail.Geometry3D.Box')
BufferAudioSource = Java.type('org.web3d.x3d.jsail.Sound.BufferAudioSource')
CADAssembly = Java.type('org.web3d.x3d.jsail.CADGeometry.CADAssembly')
CADFace = Java.type('org.web3d.x3d.jsail.CADGeometry.CADFace')
CADLayer = Java.type('org.web3d.x3d.jsail.CADGeometry.CADLayer')
CADPart = Java.type('org.web3d.x3d.jsail.CADGeometry.CADPart')
CartoonVolumeStyle = Java.type('org.web3d.x3d.jsail.VolumeRendering.CartoonVolumeStyle')
ChannelMerger = Java.type('org.web3d.x3d.jsail.Sound.ChannelMerger')
ChannelSelector = Java.type('org.web3d.x3d.jsail.Sound.ChannelSelector')
ChannelSplitter = Java.type('org.web3d.x3d.jsail.Sound.ChannelSplitter')
Circle2D = Java.type('org.web3d.x3d.jsail.Geometry2D.Circle2D')
ClipPlane = Java.type('org.web3d.x3d.jsail.Rendering.ClipPlane')
CollidableOffset = Java.type('org.web3d.x3d.jsail.RigidBodyPhysics.CollidableOffset')
CollidableShape = Java.type('org.web3d.x3d.jsail.RigidBodyPhysics.CollidableShape')
Collision = Java.type('org.web3d.x3d.jsail.Navigation.Collision')
CollisionCollection = Java.type('org.web3d.x3d.jsail.RigidBodyPhysics.CollisionCollection')
CollisionSensor = Java.type('org.web3d.x3d.jsail.RigidBodyPhysics.CollisionSensor')
CollisionSpace = Java.type('org.web3d.x3d.jsail.RigidBodyPhysics.CollisionSpace')
Color = Java.type('org.web3d.x3d.jsail.Rendering.Color')
ColorChaser = Java.type('org.web3d.x3d.jsail.Followers.ColorChaser')
ColorDamper = Java.type('org.web3d.x3d.jsail.Followers.ColorDamper')
ColorInterpolator = Java.type('org.web3d.x3d.jsail.Interpolation.ColorInterpolator')
ColorRGBA = Java.type('org.web3d.x3d.jsail.Rendering.ColorRGBA')
ComposedCubeMapTexture = Java.type('org.web3d.x3d.jsail.CubeMapTexturing.ComposedCubeMapTexture')
ComposedShader = Java.type('org.web3d.x3d.jsail.Shaders.ComposedShader')
ComposedTexture3D = Java.type('org.web3d.x3d.jsail.Texturing3D.ComposedTexture3D')
ComposedVolumeStyle = Java.type('org.web3d.x3d.jsail.VolumeRendering.ComposedVolumeStyle')
Cone = Java.type('org.web3d.x3d.jsail.Geometry3D.Cone')
ConeEmitter = Java.type('org.web3d.x3d.jsail.ParticleSystems.ConeEmitter')
Contact = Java.type('org.web3d.x3d.jsail.RigidBodyPhysics.Contact')
Contour2D = Java.type('org.web3d.x3d.jsail.NURBS.Contour2D')
ContourPolyline2D = Java.type('org.web3d.x3d.jsail.NURBS.ContourPolyline2D')
Convolver = Java.type('org.web3d.x3d.jsail.Sound.Convolver')
Coordinate = Java.type('org.web3d.x3d.jsail.Rendering.Coordinate')
CoordinateChaser = Java.type('org.web3d.x3d.jsail.Followers.CoordinateChaser')
CoordinateDamper = Java.type('org.web3d.x3d.jsail.Followers.CoordinateDamper')
CoordinateDouble = Java.type('org.web3d.x3d.jsail.Rendering.CoordinateDouble')
CoordinateInterpolator = Java.type('org.web3d.x3d.jsail.Interpolation.CoordinateInterpolator')
CoordinateInterpolator2D = Java.type('org.web3d.x3d.jsail.Interpolation.CoordinateInterpolator2D')
Cylinder = Java.type('org.web3d.x3d.jsail.Geometry3D.Cylinder')
CylinderSensor = Java.type('org.web3d.x3d.jsail.PointingDeviceSensor.CylinderSensor')
Delay = Java.type('org.web3d.x3d.jsail.Sound.Delay')
DirectionalLight = Java.type('org.web3d.x3d.jsail.Lighting.DirectionalLight')
DISEntityManager = Java.type('org.web3d.x3d.jsail.DIS.DISEntityManager')
DISEntityTypeMapping = Java.type('org.web3d.x3d.jsail.DIS.DISEntityTypeMapping')
Disk2D = Java.type('org.web3d.x3d.jsail.Geometry2D.Disk2D')
DoubleAxisHingeJoint = Java.type('org.web3d.x3d.jsail.RigidBodyPhysics.DoubleAxisHingeJoint')
DynamicsCompressor = Java.type('org.web3d.x3d.jsail.Sound.DynamicsCompressor')
EaseInEaseOut = Java.type('org.web3d.x3d.jsail.Interpolation.EaseInEaseOut')
EdgeEnhancementVolumeStyle = Java.type('org.web3d.x3d.jsail.VolumeRendering.EdgeEnhancementVolumeStyle')
ElevationGrid = Java.type('org.web3d.x3d.jsail.Geometry3D.ElevationGrid')
EspduTransform = Java.type('org.web3d.x3d.jsail.DIS.EspduTransform')
ExplosionEmitter = Java.type('org.web3d.x3d.jsail.ParticleSystems.ExplosionEmitter')
Extrusion = Java.type('org.web3d.x3d.jsail.Geometry3D.Extrusion')
FillProperties = Java.type('org.web3d.x3d.jsail.Shape.FillProperties')
FloatVertexAttribute = Java.type('org.web3d.x3d.jsail.Shaders.FloatVertexAttribute')
Fog = Java.type('org.web3d.x3d.jsail.EnvironmentalEffects.Fog')
FogCoordinate = Java.type('org.web3d.x3d.jsail.EnvironmentalEffects.FogCoordinate')
FontStyle = Java.type('org.web3d.x3d.jsail.Text.FontStyle')
ForcePhysicsModel = Java.type('org.web3d.x3d.jsail.ParticleSystems.ForcePhysicsModel')
Gain = Java.type('org.web3d.x3d.jsail.Sound.Gain')
GeneratedCubeMapTexture = Java.type('org.web3d.x3d.jsail.CubeMapTexturing.GeneratedCubeMapTexture')
GeoCoordinate = Java.type('org.web3d.x3d.jsail.Geospatial.GeoCoordinate')
GeoElevationGrid = Java.type('org.web3d.x3d.jsail.Geospatial.GeoElevationGrid')
GeoLocation = Java.type('org.web3d.x3d.jsail.Geospatial.GeoLocation')
GeoLOD = Java.type('org.web3d.x3d.jsail.Geospatial.GeoLOD')
GeoMetadata = Java.type('org.web3d.x3d.jsail.Geospatial.GeoMetadata')
GeoOrigin = Java.type('org.web3d.x3d.jsail.Geospatial.GeoOrigin')
GeoPositionInterpolator = Java.type('org.web3d.x3d.jsail.Geospatial.GeoPositionInterpolator')
GeoProximitySensor = Java.type('org.web3d.x3d.jsail.Geospatial.GeoProximitySensor')
GeoTouchSensor = Java.type('org.web3d.x3d.jsail.Geospatial.GeoTouchSensor')
GeoTransform = Java.type('org.web3d.x3d.jsail.Geospatial.GeoTransform')
GeoViewpoint = Java.type('org.web3d.x3d.jsail.Geospatial.GeoViewpoint')
Group = Java.type('org.web3d.x3d.jsail.Grouping.Group')
HAnimDisplacer = Java.type('org.web3d.x3d.jsail.HAnim.HAnimDisplacer')
HAnimHumanoid = Java.type('org.web3d.x3d.jsail.HAnim.HAnimHumanoid')
HAnimJoint = Java.type('org.web3d.x3d.jsail.HAnim.HAnimJoint')
HAnimMotion = Java.type('org.web3d.x3d.jsail.HAnim.HAnimMotion')
HAnimSegment = Java.type('org.web3d.x3d.jsail.HAnim.HAnimSegment')
HAnimSite = Java.type('org.web3d.x3d.jsail.HAnim.HAnimSite')
ImageCubeMapTexture = Java.type('org.web3d.x3d.jsail.CubeMapTexturing.ImageCubeMapTexture')
ImageTexture = Java.type('org.web3d.x3d.jsail.Texturing.ImageTexture')
ImageTexture3D = Java.type('org.web3d.x3d.jsail.Texturing3D.ImageTexture3D')
IndexedFaceSet = Java.type('org.web3d.x3d.jsail.Geometry3D.IndexedFaceSet')
IndexedLineSet = Java.type('org.web3d.x3d.jsail.Rendering.IndexedLineSet')
IndexedQuadSet = Java.type('org.web3d.x3d.jsail.CADGeometry.IndexedQuadSet')
IndexedTriangleFanSet = Java.type('org.web3d.x3d.jsail.Rendering.IndexedTriangleFanSet')
IndexedTriangleSet = Java.type('org.web3d.x3d.jsail.Rendering.IndexedTriangleSet')
IndexedTriangleStripSet = Java.type('org.web3d.x3d.jsail.Rendering.IndexedTriangleStripSet')
Inline = Java.type('org.web3d.x3d.jsail.Networking.Inline')
IntegerSequencer = Java.type('org.web3d.x3d.jsail.EventUtilities.IntegerSequencer')
IntegerTrigger = Java.type('org.web3d.x3d.jsail.EventUtilities.IntegerTrigger')
IsoSurfaceVolumeData = Java.type('org.web3d.x3d.jsail.VolumeRendering.IsoSurfaceVolumeData')
KeySensor = Java.type('org.web3d.x3d.jsail.KeyDeviceSensor.KeySensor')
Layer = Java.type('org.web3d.x3d.jsail.Layering.Layer')
LayerSet = Java.type('org.web3d.x3d.jsail.Layering.LayerSet')
Layout = Java.type('org.web3d.x3d.jsail.Layout.Layout')
LayoutGroup = Java.type('org.web3d.x3d.jsail.Layout.LayoutGroup')
LayoutLayer = Java.type('org.web3d.x3d.jsail.Layout.LayoutLayer')
LinePickSensor = Java.type('org.web3d.x3d.jsail.Picking.LinePickSensor')
LineProperties = Java.type('org.web3d.x3d.jsail.Shape.LineProperties')
LineSet = Java.type('org.web3d.x3d.jsail.Rendering.LineSet')
ListenerPointSource = Java.type('org.web3d.x3d.jsail.Sound.ListenerPointSource')
LoadSensor = Java.type('org.web3d.x3d.jsail.Networking.LoadSensor')
LocalFog = Java.type('org.web3d.x3d.jsail.EnvironmentalEffects.LocalFog')
LOD = Java.type('org.web3d.x3d.jsail.Navigation.LOD')
Material = Java.type('org.web3d.x3d.jsail.Shape.Material')
Matrix3VertexAttribute = Java.type('org.web3d.x3d.jsail.Shaders.Matrix3VertexAttribute')
Matrix4VertexAttribute = Java.type('org.web3d.x3d.jsail.Shaders.Matrix4VertexAttribute')
MetadataBoolean = Java.type('org.web3d.x3d.jsail.Core.MetadataBoolean')
MetadataDouble = Java.type('org.web3d.x3d.jsail.Core.MetadataDouble')
MetadataFloat = Java.type('org.web3d.x3d.jsail.Core.MetadataFloat')
MetadataInteger = Java.type('org.web3d.x3d.jsail.Core.MetadataInteger')
MetadataSet = Java.type('org.web3d.x3d.jsail.Core.MetadataSet')
MetadataString = Java.type('org.web3d.x3d.jsail.Core.MetadataString')
MicrophoneSource = Java.type('org.web3d.x3d.jsail.Sound.MicrophoneSource')
MotorJoint = Java.type('org.web3d.x3d.jsail.RigidBodyPhysics.MotorJoint')
MovieTexture = Java.type('org.web3d.x3d.jsail.Texturing.MovieTexture')
MultiTexture = Java.type('org.web3d.x3d.jsail.Texturing.MultiTexture')
MultiTextureCoordinate = Java.type('org.web3d.x3d.jsail.Texturing.MultiTextureCoordinate')
MultiTextureTransform = Java.type('org.web3d.x3d.jsail.Texturing.MultiTextureTransform')
NavigationInfo = Java.type('org.web3d.x3d.jsail.Navigation.NavigationInfo')
Normal = Java.type('org.web3d.x3d.jsail.Rendering.Normal')
NormalInterpolator = Java.type('org.web3d.x3d.jsail.Interpolation.NormalInterpolator')
NurbsCurve = Java.type('org.web3d.x3d.jsail.NURBS.NurbsCurve')
NurbsCurve2D = Java.type('org.web3d.x3d.jsail.NURBS.NurbsCurve2D')
NurbsOrientationInterpolator = Java.type('org.web3d.x3d.jsail.NURBS.NurbsOrientationInterpolator')
NurbsPatchSurface = Java.type('org.web3d.x3d.jsail.NURBS.NurbsPatchSurface')
NurbsPositionInterpolator = Java.type('org.web3d.x3d.jsail.NURBS.NurbsPositionInterpolator')
NurbsSet = Java.type('org.web3d.x3d.jsail.NURBS.NurbsSet')
NurbsSurfaceInterpolator = Java.type('org.web3d.x3d.jsail.NURBS.NurbsSurfaceInterpolator')
NurbsSweptSurface = Java.type('org.web3d.x3d.jsail.NURBS.NurbsSweptSurface')
NurbsSwungSurface = Java.type('org.web3d.x3d.jsail.NURBS.NurbsSwungSurface')
NurbsTextureCoordinate = Java.type('org.web3d.x3d.jsail.NURBS.NurbsTextureCoordinate')
NurbsTrimmedSurface = Java.type('org.web3d.x3d.jsail.NURBS.NurbsTrimmedSurface')
OpacityMapVolumeStyle = Java.type('org.web3d.x3d.jsail.VolumeRendering.OpacityMapVolumeStyle')
OrientationChaser = Java.type('org.web3d.x3d.jsail.Followers.OrientationChaser')
OrientationDamper = Java.type('org.web3d.x3d.jsail.Followers.OrientationDamper')
OrientationInterpolator = Java.type('org.web3d.x3d.jsail.Interpolation.OrientationInterpolator')
OrthoViewpoint = Java.type('org.web3d.x3d.jsail.Navigation.OrthoViewpoint')
OscillatorSource = Java.type('org.web3d.x3d.jsail.Sound.OscillatorSource')
PackagedShader = Java.type('org.web3d.x3d.jsail.Shaders.PackagedShader')
ParticleSystem = Java.type('org.web3d.x3d.jsail.ParticleSystems.ParticleSystem')
PeriodicWave = Java.type('org.web3d.x3d.jsail.Sound.PeriodicWave')
PhysicalMaterial = Java.type('org.web3d.x3d.jsail.Shape.PhysicalMaterial')
PickableGroup = Java.type('org.web3d.x3d.jsail.Picking.PickableGroup')
PixelTexture = Java.type('org.web3d.x3d.jsail.Texturing.PixelTexture')
PixelTexture3D = Java.type('org.web3d.x3d.jsail.Texturing3D.PixelTexture3D')
PlaneSensor = Java.type('org.web3d.x3d.jsail.PointingDeviceSensor.PlaneSensor')
PointEmitter = Java.type('org.web3d.x3d.jsail.ParticleSystems.PointEmitter')
PointLight = Java.type('org.web3d.x3d.jsail.Lighting.PointLight')
PointPickSensor = Java.type('org.web3d.x3d.jsail.Picking.PointPickSensor')
PointProperties = Java.type('org.web3d.x3d.jsail.Shape.PointProperties')
PointSet = Java.type('org.web3d.x3d.jsail.Rendering.PointSet')
Polyline2D = Java.type('org.web3d.x3d.jsail.Geometry2D.Polyline2D')
PolylineEmitter = Java.type('org.web3d.x3d.jsail.ParticleSystems.PolylineEmitter')
Polypoint2D = Java.type('org.web3d.x3d.jsail.Geometry2D.Polypoint2D')
PositionChaser = Java.type('org.web3d.x3d.jsail.Followers.PositionChaser')
PositionChaser2D = Java.type('org.web3d.x3d.jsail.Followers.PositionChaser2D')
PositionDamper = Java.type('org.web3d.x3d.jsail.Followers.PositionDamper')
PositionDamper2D = Java.type('org.web3d.x3d.jsail.Followers.PositionDamper2D')
PositionInterpolator = Java.type('org.web3d.x3d.jsail.Interpolation.PositionInterpolator')
PositionInterpolator2D = Java.type('org.web3d.x3d.jsail.Interpolation.PositionInterpolator2D')
PrimitivePickSensor = Java.type('org.web3d.x3d.jsail.Picking.PrimitivePickSensor')
ProgramShader = Java.type('org.web3d.x3d.jsail.Shaders.ProgramShader')
ProjectionVolumeStyle = Java.type('org.web3d.x3d.jsail.VolumeRendering.ProjectionVolumeStyle')
ProtoInstance = Java.type('org.web3d.x3d.jsail.Core.ProtoInstance')
ProximitySensor = Java.type('org.web3d.x3d.jsail.EnvironmentalSensor.ProximitySensor')
QuadSet = Java.type('org.web3d.x3d.jsail.CADGeometry.QuadSet')
ReceiverPdu = Java.type('org.web3d.x3d.jsail.DIS.ReceiverPdu')
Rectangle2D = Java.type('org.web3d.x3d.jsail.Geometry2D.Rectangle2D')
RigidBody = Java.type('org.web3d.x3d.jsail.RigidBodyPhysics.RigidBody')
RigidBodyCollection = Java.type('org.web3d.x3d.jsail.RigidBodyPhysics.RigidBodyCollection')
ScalarChaser = Java.type('org.web3d.x3d.jsail.Followers.ScalarChaser')
ScalarDamper = Java.type('org.web3d.x3d.jsail.Followers.ScalarDamper')
ScalarInterpolator = Java.type('org.web3d.x3d.jsail.Interpolation.ScalarInterpolator')
ScreenFontStyle = Java.type('org.web3d.x3d.jsail.Layout.ScreenFontStyle')
ScreenGroup = Java.type('org.web3d.x3d.jsail.Layout.ScreenGroup')
Script = Java.type('org.web3d.x3d.jsail.Scripting.Script')
SegmentedVolumeData = Java.type('org.web3d.x3d.jsail.VolumeRendering.SegmentedVolumeData')
ShadedVolumeStyle = Java.type('org.web3d.x3d.jsail.VolumeRendering.ShadedVolumeStyle')
ShaderPart = Java.type('org.web3d.x3d.jsail.Shaders.ShaderPart')
ShaderProgram = Java.type('org.web3d.x3d.jsail.Shaders.ShaderProgram')
Shape = Java.type('org.web3d.x3d.jsail.Shape.Shape')
SignalPdu = Java.type('org.web3d.x3d.jsail.DIS.SignalPdu')
SilhouetteEnhancementVolumeStyle = Java.type('org.web3d.x3d.jsail.VolumeRendering.SilhouetteEnhancementVolumeStyle')
SingleAxisHingeJoint = Java.type('org.web3d.x3d.jsail.RigidBodyPhysics.SingleAxisHingeJoint')
SliderJoint = Java.type('org.web3d.x3d.jsail.RigidBodyPhysics.SliderJoint')
Sound = Java.type('org.web3d.x3d.jsail.Sound.Sound')
SpatialSound = Java.type('org.web3d.x3d.jsail.Sound.SpatialSound')
Sphere = Java.type('org.web3d.x3d.jsail.Geometry3D.Sphere')
SphereSensor = Java.type('org.web3d.x3d.jsail.PointingDeviceSensor.SphereSensor')
SplinePositionInterpolator = Java.type('org.web3d.x3d.jsail.Interpolation.SplinePositionInterpolator')
SplinePositionInterpolator2D = Java.type('org.web3d.x3d.jsail.Interpolation.SplinePositionInterpolator2D')
SplineScalarInterpolator = Java.type('org.web3d.x3d.jsail.Interpolation.SplineScalarInterpolator')
SpotLight = Java.type('org.web3d.x3d.jsail.Lighting.SpotLight')
SquadOrientationInterpolator = Java.type('org.web3d.x3d.jsail.Interpolation.SquadOrientationInterpolator')
StaticGroup = Java.type('org.web3d.x3d.jsail.Grouping.StaticGroup')
StreamAudioDestination = Java.type('org.web3d.x3d.jsail.Sound.StreamAudioDestination')
StreamAudioSource = Java.type('org.web3d.x3d.jsail.Sound.StreamAudioSource')
StringSensor = Java.type('org.web3d.x3d.jsail.KeyDeviceSensor.StringSensor')
SurfaceEmitter = Java.type('org.web3d.x3d.jsail.ParticleSystems.SurfaceEmitter')
Switch = Java.type('org.web3d.x3d.jsail.Grouping.Switch')
TexCoordChaser2D = Java.type('org.web3d.x3d.jsail.Followers.TexCoordChaser2D')
TexCoordDamper2D = Java.type('org.web3d.x3d.jsail.Followers.TexCoordDamper2D')
Text = Java.type('org.web3d.x3d.jsail.Text.Text')
TextureBackground = Java.type('org.web3d.x3d.jsail.EnvironmentalEffects.TextureBackground')
TextureCoordinate = Java.type('org.web3d.x3d.jsail.Texturing.TextureCoordinate')
TextureCoordinate3D = Java.type('org.web3d.x3d.jsail.Texturing3D.TextureCoordinate3D')
TextureCoordinate4D = Java.type('org.web3d.x3d.jsail.Texturing3D.TextureCoordinate4D')
TextureCoordinateGenerator = Java.type('org.web3d.x3d.jsail.Texturing.TextureCoordinateGenerator')
TextureProjector = Java.type('org.web3d.x3d.jsail.TextureProjection.TextureProjector')
TextureProjectorParallel = Java.type('org.web3d.x3d.jsail.TextureProjection.TextureProjectorParallel')
TextureProperties = Java.type('org.web3d.x3d.jsail.Texturing.TextureProperties')
TextureTransform = Java.type('org.web3d.x3d.jsail.Texturing.TextureTransform')
TextureTransform3D = Java.type('org.web3d.x3d.jsail.Texturing3D.TextureTransform3D')
TextureTransformMatrix3D = Java.type('org.web3d.x3d.jsail.Texturing3D.TextureTransformMatrix3D')
TimeSensor = Java.type('org.web3d.x3d.jsail.Time.TimeSensor')
TimeTrigger = Java.type('org.web3d.x3d.jsail.EventUtilities.TimeTrigger')
ToneMappedVolumeStyle = Java.type('org.web3d.x3d.jsail.VolumeRendering.ToneMappedVolumeStyle')
TouchSensor = Java.type('org.web3d.x3d.jsail.PointingDeviceSensor.TouchSensor')
Transform = Java.type('org.web3d.x3d.jsail.Grouping.Transform')
TransformSensor = Java.type('org.web3d.x3d.jsail.EnvironmentalSensor.TransformSensor')
TransmitterPdu = Java.type('org.web3d.x3d.jsail.DIS.TransmitterPdu')
TriangleFanSet = Java.type('org.web3d.x3d.jsail.Rendering.TriangleFanSet')
TriangleSet = Java.type('org.web3d.x3d.jsail.Rendering.TriangleSet')
TriangleSet2D = Java.type('org.web3d.x3d.jsail.Geometry2D.TriangleSet2D')
TriangleStripSet = Java.type('org.web3d.x3d.jsail.Rendering.TriangleStripSet')
TwoSidedMaterial = Java.type('org.web3d.x3d.jsail.Shape.TwoSidedMaterial')
UniversalJoint = Java.type('org.web3d.x3d.jsail.RigidBodyPhysics.UniversalJoint')
UnlitMaterial = Java.type('org.web3d.x3d.jsail.Shape.UnlitMaterial')
Viewpoint = Java.type('org.web3d.x3d.jsail.Navigation.Viewpoint')
ViewpointGroup = Java.type('org.web3d.x3d.jsail.Navigation.ViewpointGroup')
Viewport = Java.type('org.web3d.x3d.jsail.Layering.Viewport')
VisibilitySensor = Java.type('org.web3d.x3d.jsail.EnvironmentalSensor.VisibilitySensor')
VolumeData = Java.type('org.web3d.x3d.jsail.VolumeRendering.VolumeData')
VolumeEmitter = Java.type('org.web3d.x3d.jsail.ParticleSystems.VolumeEmitter')
VolumePickSensor = Java.type('org.web3d.x3d.jsail.Picking.VolumePickSensor')
WaveShaper = Java.type('org.web3d.x3d.jsail.Sound.WaveShaper')
WindPhysicsModel = Java.type('org.web3d.x3d.jsail.ParticleSystems.WindPhysicsModel')
WorldInfo = Java.type('org.web3d.x3d.jsail.Core.WorldInfo')
component = Java.type('org.web3d.x3d.jsail.Core.component')
connect = Java.type('org.web3d.x3d.jsail.Core.connect')
EXPORT = Java.type('org.web3d.x3d.jsail.Networking.EXPORT')
ExternProtoDeclare = Java.type('org.web3d.x3d.jsail.Core.ExternProtoDeclare')
field = Java.type('org.web3d.x3d.jsail.Core.field')
fieldValue = Java.type('org.web3d.x3d.jsail.Core.fieldValue')
head = Java.type('org.web3d.x3d.jsail.Core.head')
IMPORT = Java.type('org.web3d.x3d.jsail.Networking.IMPORT')
IS = Java.type('org.web3d.x3d.jsail.Core.IS')
meta = Java.type('org.web3d.x3d.jsail.Core.meta')
ProtoBody = Java.type('org.web3d.x3d.jsail.Core.ProtoBody')
ProtoDeclare = Java.type('org.web3d.x3d.jsail.Core.ProtoDeclare')
ProtoInterface = Java.type('org.web3d.x3d.jsail.Core.ProtoInterface')
ROUTE = Java.type('org.web3d.x3d.jsail.Core.ROUTE')
Scene = Java.type('org.web3d.x3d.jsail.Core.Scene')
unit = Java.type('org.web3d.x3d.jsail.Core.unit')
X3D = Java.type('org.web3d.x3d.jsail.Core.X3D')
SFBool = Java.type('org.web3d.x3d.jsail.fields.SFBool')
MFBool = Java.type('org.web3d.x3d.jsail.fields.MFBool')
SFColor = Java.type('org.web3d.x3d.jsail.fields.SFColor')
MFColor = Java.type('org.web3d.x3d.jsail.fields.MFColor')
SFColorRGBA = Java.type('org.web3d.x3d.jsail.fields.SFColorRGBA')
MFColorRGBA = Java.type('org.web3d.x3d.jsail.fields.MFColorRGBA')
SFDouble = Java.type('org.web3d.x3d.jsail.fields.SFDouble')
MFDouble = Java.type('org.web3d.x3d.jsail.fields.MFDouble')
SFFloat = Java.type('org.web3d.x3d.jsail.fields.SFFloat')
MFFloat = Java.type('org.web3d.x3d.jsail.fields.MFFloat')
SFImage = Java.type('org.web3d.x3d.jsail.fields.SFImage')
MFImage = Java.type('org.web3d.x3d.jsail.fields.MFImage')
SFInt32 = Java.type('org.web3d.x3d.jsail.fields.SFInt32')
MFInt32 = Java.type('org.web3d.x3d.jsail.fields.MFInt32')
SFMatrix3d = Java.type('org.web3d.x3d.jsail.fields.SFMatrix3d')
MFMatrix3d = Java.type('org.web3d.x3d.jsail.fields.MFMatrix3d')
SFMatrix3f = Java.type('org.web3d.x3d.jsail.fields.SFMatrix3f')
MFMatrix3f = Java.type('org.web3d.x3d.jsail.fields.MFMatrix3f')
SFMatrix4d = Java.type('org.web3d.x3d.jsail.fields.SFMatrix4d')
MFMatrix4d = Java.type('org.web3d.x3d.jsail.fields.MFMatrix4d')
SFMatrix4f = Java.type('org.web3d.x3d.jsail.fields.SFMatrix4f')
MFMatrix4f = Java.type('org.web3d.x3d.jsail.fields.MFMatrix4f')
SFNode = Java.type('org.web3d.x3d.jsail.fields.SFNode')
MFNode = Java.type('org.web3d.x3d.jsail.fields.MFNode')
SFRotation = Java.type('org.web3d.x3d.jsail.fields.SFRotation')
MFRotation = Java.type('org.web3d.x3d.jsail.fields.MFRotation')
SFString = Java.type('org.web3d.x3d.jsail.fields.SFString')
MFString = Java.type('org.web3d.x3d.jsail.fields.MFString')
SFTime = Java.type('org.web3d.x3d.jsail.fields.SFTime')
MFTime = Java.type('org.web3d.x3d.jsail.fields.MFTime')
SFVec2d = Java.type('org.web3d.x3d.jsail.fields.SFVec2d')
MFVec2d = Java.type('org.web3d.x3d.jsail.fields.MFVec2d')
SFVec2f = Java.type('org.web3d.x3d.jsail.fields.SFVec2f')
MFVec2f = Java.type('org.web3d.x3d.jsail.fields.MFVec2f')
SFVec3d = Java.type('org.web3d.x3d.jsail.fields.SFVec3d')
MFVec3d = Java.type('org.web3d.x3d.jsail.fields.MFVec3d')
SFVec3f = Java.type('org.web3d.x3d.jsail.fields.SFVec3f')
MFVec3f = Java.type('org.web3d.x3d.jsail.fields.MFVec3f')
SFVec4d = Java.type('org.web3d.x3d.jsail.fields.SFVec4d')
MFVec4d = Java.type('org.web3d.x3d.jsail.fields.MFVec4d')
SFVec4f = Java.type('org.web3d.x3d.jsail.fields.SFVec4f')
MFVec4f = Java.type('org.web3d.x3d.jsail.fields.MFVec4f')
var ConfigurationProperties = Packages.org.web3d.x3d.jsail.ConfigurationProperties;
ConfigurationProperties.showDefaultAttributes = false;
ConfigurationProperties.xsltEngine = ConfigurationProperties.XSLT_ENGINE_NATIVE_JAVA;
ConfigurationProperties.deleteIntermediateFiles = false;
ConfigurationProperties.setStripTrailingZeroes(true);
ConfigurationProperties.setStripDefaultAttributes(true);
function doubleToFloat(d) {
    if (Float32Array)
	return new Float32Array(d);
}
      var X3D0 =  new X3D().setProfile("Immersive").setVersion("3.0")
      .setHead(new head()
        .addMeta(new meta().setName("title").setContent("ArtDecoPrototypes.x3d"))
        .addMeta(new meta().setName("description").setContent("Prototype declarations defining values for X3D/VRML materials, originally converted from SGI's Open Inventor material examples."))
        .addMeta(new meta().setName("creator").setContent("David Roussel"))
        .addMeta(new meta().setName("translator").setContent("James Harney, Don Brutzman NPS"))
        .addMeta(new meta().setName("created").setContent("7 April 2002"))
        .addMeta(new meta().setName("modified").setContent("20 October 2019"))
        .addMeta(new meta().setName("reference").setContent("http://vrmlstuff.free.fr/materials"))
        .addMeta(new meta().setName("subject").setContent("Universal Media Material Library"))
        .addMeta(new meta().setName("identifier").setContent("https://www.web3d.org/x3d/content/examples/Basic/UniversalMediaMaterials/ArtDecoPrototypes.x3d"))
        .addMeta(new meta().setName("generator").setContent("Vrml97ToX3dNist, http://ovrt.nist.gov/v2_x3d.html"))
        .addMeta(new meta().setName("license").setContent("../license.html")))
      .setScene(new Scene()
        .addChild(new WorldInfo().setTitle("ArtDecoPrototypes.x3d"))
        .addChild(new ProtoDeclare().setName("ArtDeco00").setAppinfo("UniversalMediaMaterials prototype").setDocumentation("https://www.web3d.org/x3d/content/examples/Basic/UniversalMediaMaterials")
          .setProtoBody(new ProtoBody()
            .addChild(new Material().setAmbientIntensity(0.25).setDiffuseColor(Java.to(doubleToFloat([0.282435,0.085159,0.134462]), Java.type("float[]"))).setShininess(0.127273).setSpecularColor(Java.to(doubleToFloat([0.276305,0.11431,0.139857]), Java.type("float[]"))))))
        .addChild(new ProtoDeclare().setName("ArtDeco01").setAppinfo("UniversalMediaMaterials prototype").setDocumentation("https://www.web3d.org/x3d/content/examples/Basic/UniversalMediaMaterials")
          .setProtoBody(new ProtoBody()
            .addChild(new Material().setAmbientIntensity(0.254777).setDiffuseColor(Java.to(doubleToFloat([0.685208,0.134679,0.332385]), Java.type("float[]"))).setShininess(0.071429).setSpecularColor(Java.to(doubleToFloat([0.122449,0.050035,0.050035]), Java.type("float[]"))))))
        .addChild(new ProtoDeclare().setName("ArtDeco02").setAppinfo("UniversalMediaMaterials prototype").setDocumentation("https://www.web3d.org/x3d/content/examples/Basic/UniversalMediaMaterials")
          .addComments(new CommentsBlock("computed conversion ambientIntensity=1.745282, normalized to 1.0"))
          .setProtoBody(new ProtoBody()
            .addChild(new Material().setAmbientIntensity(1).setDiffuseColor(Java.to(doubleToFloat([0.536861,0.0529,0.245479]), Java.type("float[]"))).setShininess(0.832432).setSpecularColor(Java.to(doubleToFloat([0.805292,0.765198,0.747416]), Java.type("float[]"))))))
        .addChild(new ProtoDeclare().setName("ArtDeco03").setAppinfo("UniversalMediaMaterials prototype").setDocumentation("https://www.web3d.org/x3d/content/examples/Basic/UniversalMediaMaterials")
          .setProtoBody(new ProtoBody()
            .addChild(new Material().setAmbientIntensity(0.248649).setDiffuseColor(Java.to(doubleToFloat([1,0.452381,0.40339]), Java.type("float[]"))).setShininess(0.902703).setSpecularColor(Java.to(doubleToFloat([0.686486,0.396903,0.419275]), Java.type("float[]"))))))
        .addChild(new ProtoDeclare().setName("ArtDeco04").setAppinfo("UniversalMediaMaterials prototype").setDocumentation("https://www.web3d.org/x3d/content/examples/Basic/UniversalMediaMaterials")
          .setProtoBody(new ProtoBody()
            .addChild(new Material().setAmbientIntensity(0.25).setDiffuseColor(Java.to(doubleToFloat([0.748016,0.298362,0.342624]), Java.type("float[]"))).setShininess(0.69697).setSpecularColor(Java.to(doubleToFloat([0.345455,0.345455,0.345455]), Java.type("float[]"))))))
        .addChild(new ProtoDeclare().setName("ArtDeco05").setAppinfo("UniversalMediaMaterials prototype").setDocumentation("https://www.web3d.org/x3d/content/examples/Basic/UniversalMediaMaterials")
          .setProtoBody(new ProtoBody()
            .addChild(new Material().setAmbientIntensity(0.24359).setDiffuseColor(Java.to(doubleToFloat([0.945455,0.318988,0.321717]), Java.type("float[]"))).setShininess(0.018182).setSpecularColor(Java.to(doubleToFloat([0.072727,0.021705,0.010732]), Java.type("float[]"))))))
        .addChild(new ProtoDeclare().setName("ArtDeco06").setAppinfo("UniversalMediaMaterials prototype").setDocumentation("https://www.web3d.org/x3d/content/examples/Basic/UniversalMediaMaterials")
          .setProtoBody(new ProtoBody()
            .addChild(new Material().setAmbientIntensity(0.25946).setDiffuseColor(Java.to(doubleToFloat([0.228655,0.195513,0.425484]), Java.type("float[]"))).setShininess(0.542553).setSpecularColor(Java.to(doubleToFloat([0.324504,0.404255,0.404255]), Java.type("float[]"))))))
        .addChild(new ProtoDeclare().setName("ArtDeco07").setAppinfo("UniversalMediaMaterials prototype").setDocumentation("https://www.web3d.org/x3d/content/examples/Basic/UniversalMediaMaterials")
          .setProtoBody(new ProtoBody()
            .addChild(new Material().setAmbientIntensity(0.333333).setDiffuseColor(Java.to(doubleToFloat([0.200348,0.100857,0.320833]), Java.type("float[]"))).setShininess(0.133333).setSpecularColor(Java.to(doubleToFloat([0.311358,0.387879,0.387879]), Java.type("float[]"))))))
        .addChild(new ProtoDeclare().setName("ArtDeco08").setAppinfo("UniversalMediaMaterials prototype").setDocumentation("https://www.web3d.org/x3d/content/examples/Basic/UniversalMediaMaterials")
          .setProtoBody(new ProtoBody()
            .addChild(new Material().setAmbientIntensity(0.242424).setDiffuseColor(Java.to(doubleToFloat([0.330519,0.3389,0.6]), Java.type("float[]"))).setShininess(0.787879).setSpecularColor(Java.to(doubleToFloat([0.290909,0.290909,0.290909]), Java.type("float[]"))))))
        .addChild(new ProtoDeclare().setName("ArtDeco09").setAppinfo("UniversalMediaMaterials prototype").setDocumentation("https://www.web3d.org/x3d/content/examples/Basic/UniversalMediaMaterials")
          .setProtoBody(new ProtoBody()
            .addChild(new Material().setAmbientIntensity(0.333333).setDiffuseColor(Java.to(doubleToFloat([0.237059,0.096273,0.215625]), Java.type("float[]"))).setShininess(0.133333).setSpecularColor(Java.to(doubleToFloat([0.311358,0.387879,0.387879]), Java.type("float[]"))))))
        .addChild(new ProtoDeclare().setName("ArtDeco10").setAppinfo("UniversalMediaMaterials prototype").setDocumentation("https://www.web3d.org/x3d/content/examples/Basic/UniversalMediaMaterials")
          .setProtoBody(new ProtoBody()
            .addChild(new Material().setAmbientIntensity(0.242425).setDiffuseColor(Java.to(doubleToFloat([0.304,0.09025,0.207364]), Java.type("float[]"))).setShininess(0.072727).setSpecularColor(Java.to(doubleToFloat([0.6665,0.579046,0.830303]), Java.type("float[]"))))))
        .addChild(new ProtoDeclare().setName("ArtDeco11").setAppinfo("UniversalMediaMaterials prototype").setDocumentation("https://www.web3d.org/x3d/content/examples/Basic/UniversalMediaMaterials")
          .setProtoBody(new ProtoBody()
            .addChild(new Material().setAmbientIntensity(0.258928).setDiffuseColor(Java.to(doubleToFloat([0.335631,0.207672,0.238304]), Java.type("float[]"))).setEmissiveColor(Java.to(doubleToFloat([0.010638,0.010638,0.010638]), Java.type("float[]"))).setShininess(0.021277).setSpecularColor(Java.to(doubleToFloat([0.198631,0.075403,0.138803]), Java.type("float[]"))))))
        .addChild(new ProtoDeclare().setName("ArtDeco12").setAppinfo("UniversalMediaMaterials prototype").setDocumentation("https://www.web3d.org/x3d/content/examples/Basic/UniversalMediaMaterials")
          .setProtoBody(new ProtoBody()
            .addChild(new Material().setAmbientIntensity(0.240838).setDiffuseColor(Java.to(doubleToFloat([0.876873,0.14715,0.00856]), Java.type("float[]"))).setShininess(0.076531).setSpecularColor(Java.to(doubleToFloat([0.193878,0.029416,0.029416]), Java.type("float[]"))))))
        .addChild(new ProtoDeclare().setName("ArtDeco13").setAppinfo("UniversalMediaMaterials prototype").setDocumentation("https://www.web3d.org/x3d/content/examples/Basic/UniversalMediaMaterials")
          .setProtoBody(new ProtoBody()
            .addChild(new Material().setAmbientIntensity(0.25).setDiffuseColor(Java.to(doubleToFloat([0.794445,0.249425,0]), Java.type("float[]"))).setShininess(0.551515).setSpecularColor(Java.to(doubleToFloat([0.62904,0.194211,0.033663]), Java.type("float[]"))))))
        .addChild(new ProtoDeclare().setName("ArtDeco14").setAppinfo("UniversalMediaMaterials prototype").setDocumentation("https://www.web3d.org/x3d/content/examples/Basic/UniversalMediaMaterials")
          .setProtoBody(new ProtoBody()
            .addChild(new Material().setAmbientIntensity(0.25).setDiffuseColor(Java.to(doubleToFloat([0.510609,0.17264,0.059872]), Java.type("float[]"))).setShininess(0.933333).setSpecularColor(Java.to(doubleToFloat([0.533333,0.533333,0.533333]), Java.type("float[]"))))))
        .addChild(new ProtoDeclare().setName("ArtDeco15").setAppinfo("UniversalMediaMaterials prototype").setDocumentation("https://www.web3d.org/x3d/content/examples/Basic/UniversalMediaMaterials")
          .setProtoBody(new ProtoBody()
            .addChild(new Material().setAmbientIntensity(0.255814).setDiffuseColor(Java.to(doubleToFloat([0.914894,0.444404,0.348914]), Java.type("float[]"))).setShininess(0.12766).setSpecularColor(Java.to(doubleToFloat([0.345745,0.143066,0]), Java.type("float[]"))))))
        .addChild(new ProtoDeclare().setName("ArtDeco16").setAppinfo("UniversalMediaMaterials prototype").setDocumentation("https://www.web3d.org/x3d/content/examples/Basic/UniversalMediaMaterials")
          .setProtoBody(new ProtoBody()
            .addChild(new Material().setAmbientIntensity(0.240838).setDiffuseColor(Java.to(doubleToFloat([0.876873,0.323147,0.199564]), Java.type("float[]"))).setShininess(0.80102).setSpecularColor(Java.to(doubleToFloat([0.816327,0.278677,0.278677]), Java.type("float[]"))))))
        .addChild(new ProtoDeclare().setName("ArtDeco17").setAppinfo("UniversalMediaMaterials prototype").setDocumentation("https://www.web3d.org/x3d/content/examples/Basic/UniversalMediaMaterials")
          .setProtoBody(new ProtoBody()
            .addChild(new Material().setAmbientIntensity(0.242424).setDiffuseColor(Java.to(doubleToFloat([0.515625,0.315496,0.252441]), Java.type("float[]"))).setShininess(0.933333).setSpecularColor(Java.to(doubleToFloat([0.533333,0.533333,0.533333]), Java.type("float[]"))))))
        .addChild(new ProtoDeclare().setName("ArtDeco18").setAppinfo("UniversalMediaMaterials prototype").setDocumentation("https://www.web3d.org/x3d/content/examples/Basic/UniversalMediaMaterials")
          .setProtoBody(new ProtoBody()
            .addChild(new Material().setAmbientIntensity(0.264706).setDiffuseColor(Java.to(doubleToFloat([0,0.346939,0.253624]), Java.type("float[]"))).setShininess(0.316327).setSpecularColor(Java.to(doubleToFloat([0,0.311074,0.357143]), Java.type("float[]"))))))
        .addChild(new ProtoDeclare().setName("ArtDeco19").setAppinfo("UniversalMediaMaterials prototype").setDocumentation("https://www.web3d.org/x3d/content/examples/Basic/UniversalMediaMaterials")
          .setProtoBody(new ProtoBody()
            .addChild(new Material().setAmbientIntensity(0.259259).setDiffuseColor(Java.to(doubleToFloat([0,0.251004,0.239248]), Java.type("float[]"))).setShininess(0.060606).setSpecularColor(Java.to(doubleToFloat([0.177935,0.249369,0.229278]), Java.type("float[]"))))))
        .addChild(new ProtoDeclare().setName("ArtDeco20").setAppinfo("UniversalMediaMaterials prototype").setDocumentation("https://www.web3d.org/x3d/content/examples/Basic/UniversalMediaMaterials")
          .setProtoBody(new ProtoBody()
            .addChild(new Material().setAmbientIntensity(0.24).setDiffuseColor(Java.to(doubleToFloat([0.228298,0.385771,0.186794]), Java.type("float[]"))).setShininess(0.393939).setSpecularColor(Java.to(doubleToFloat([0.200464,0.300145,0.293518]), Java.type("float[]"))))))
        .addChild(new ProtoDeclare().setName("ArtDeco21").setAppinfo("UniversalMediaMaterials prototype").setDocumentation("https://www.web3d.org/x3d/content/examples/Basic/UniversalMediaMaterials")
          .setProtoBody(new ProtoBody()
            .addChild(new Material().setAmbientIntensity(0.25).setDiffuseColor(Java.to(doubleToFloat([0.315389,0.544,0.258052]), Java.type("float[]"))).setShininess(0.509389).setSpecularColor(Java.to(doubleToFloat([0.456,0.456,0.456]), Java.type("float[]"))))))
        .addChild(new ProtoDeclare().setName("ArtDeco22").setAppinfo("UniversalMediaMaterials prototype").setDocumentation("https://www.web3d.org/x3d/content/examples/Basic/UniversalMediaMaterials")
          .setProtoBody(new ProtoBody()
            .addChild(new Material().setAmbientIntensity(0.246032).setDiffuseColor(Java.to(doubleToFloat([0.251104,0.312562,0.201724]), Java.type("float[]"))).setShininess(0.086735).setSpecularColor(Java.to(doubleToFloat([0.209184,0.113842,0.111328]), Java.type("float[]"))))))
        .addChild(new ProtoDeclare().setName("ArtDeco23").setAppinfo("UniversalMediaMaterials prototype").setDocumentation("https://www.web3d.org/x3d/content/examples/Basic/UniversalMediaMaterials")
          .setProtoBody(new ProtoBody()
            .addChild(new Material().setAmbientIntensity(0.242424).setDiffuseColor(Java.to(doubleToFloat([0.392348,0.456,0.417708]), Java.type("float[]"))).setShininess(0.933333).setSpecularColor(Java.to(doubleToFloat([0.533333,0.533333,0.533333]), Java.type("float[]"))))))
        .addChild(new ProtoDeclare().setName("ArtDeco24").setAppinfo("UniversalMediaMaterials prototype").setDocumentation("https://www.web3d.org/x3d/content/examples/Basic/UniversalMediaMaterials")
          .setProtoBody(new ProtoBody()
            .addChild(new Material().setAmbientIntensity(0.253968).setDiffuseColor(Java.to(doubleToFloat([1,0.854922,0]), Java.type("float[]"))).setShininess(1).setSpecularColor(Java.to(doubleToFloat([0.872449,0.247119,0.254214]), Java.type("float[]"))))))
        .addChild(new ProtoDeclare().setName("ArtDeco25").setAppinfo("UniversalMediaMaterials prototype").setDocumentation("https://www.web3d.org/x3d/content/examples/Basic/UniversalMediaMaterials")
          .setProtoBody(new ProtoBody()
            .addChild(new Material().setAmbientIntensity(0.25641).setDiffuseColor(Java.to(doubleToFloat([0.795918,0.505869,0.093315]), Java.type("float[]"))).setShininess(0.397959).setSpecularColor(Java.to(doubleToFloat([0.923469,0.428866,0.006369]), Java.type("float[]"))))))
        .addChild(new ProtoDeclare().setName("ArtDeco26").setAppinfo("UniversalMediaMaterials prototype").setDocumentation("https://www.web3d.org/x3d/content/examples/Basic/UniversalMediaMaterials")
          .addComments(new CommentsBlock("computed conversion ambientIntensity=2.226234, normalized to 1.0"))
          .setProtoBody(new ProtoBody()
            .addChild(new Material().setAmbientIntensity(1).setDiffuseColor(Java.to(doubleToFloat([0.331633,0.296582,0.279057]), Java.type("float[]"))).setShininess(0.096939).setSpecularColor(Java.to(doubleToFloat([0.311224,0.25183,0.133042]), Java.type("float[]"))))))
        .addChild(new ProtoDeclare().setName("ArtDeco27").setAppinfo("UniversalMediaMaterials prototype").setDocumentation("https://www.web3d.org/x3d/content/examples/Basic/UniversalMediaMaterials")
          .setProtoBody(new ProtoBody()
            .addChild(new Material().setAmbientIntensity(0.263158).setDiffuseColor(Java.to(doubleToFloat([0.345455,0.163262,0.122622]), Java.type("float[]"))).setShininess(0.048649).setSpecularColor(Java.to(doubleToFloat([0.212121,0.107475,0]), Java.type("float[]"))))))
        .addChild(new ProtoDeclare().setName("ArtDeco28").setAppinfo("UniversalMediaMaterials prototype").setDocumentation("https://www.web3d.org/x3d/content/examples/Basic/UniversalMediaMaterials")
          .setProtoBody(new ProtoBody()
            .addChild(new Material().setAmbientIntensity(0.240506).setDiffuseColor(Java.to(doubleToFloat([0.277281,0.104336,0.0799]), Java.type("float[]"))).setShininess(0.09697).setSpecularColor(Java.to(doubleToFloat([0.305587,0.141916,0.270572]), Java.type("float[]"))))))
        .addChild(new ProtoDeclare().setName("ArtDeco29").setAppinfo("UniversalMediaMaterials prototype").setDocumentation("https://www.web3d.org/x3d/content/examples/Basic/UniversalMediaMaterials")
          .setProtoBody(new ProtoBody()
            .addChild(new Material().setAmbientIntensity(0.215686).setDiffuseColor(Java.to(doubleToFloat([0.087034,0.025888,0]), Java.type("float[]"))).setShininess(0.045918).setSpecularColor(Java.to(doubleToFloat([0.224138,0.104091,0.104091]), Java.type("float[]"))))))
        .addChild(new ProtoDeclare().setName("ArtDeco30").setAppinfo("UniversalMediaMaterials prototype").setDocumentation("https://www.web3d.org/x3d/content/examples/Basic/UniversalMediaMaterials")
          .setProtoBody(new ProtoBody()
            .addChild(new Material().setAmbientIntensity(0).setDiffuseColor(Java.to(doubleToFloat([0,0,0]), Java.type("float[]"))).setShininess(0.081633).setSpecularColor(Java.to(doubleToFloat([0.293243,0.297387,0.290421]), Java.type("float[]"))))))
        .addChild(new ProtoDeclare().setName("ArtDeco31").setAppinfo("UniversalMediaMaterials prototype").setDocumentation("https://www.web3d.org/x3d/content/examples/Basic/UniversalMediaMaterials")
          .setProtoBody(new ProtoBody()
            .addChild(new Material().setAmbientIntensity(0.25641).setDiffuseColor(Java.to(doubleToFloat([0.236364,0.236364,0.236364]), Java.type("float[]"))).setShininess(0.054546).setSpecularColor(Java.to(doubleToFloat([0.29697,0.245839,0.295962]), Java.type("float[]"))))))
        .addChild(new ProtoDeclare().setName("ArtDeco32").setAppinfo("UniversalMediaMaterials prototype").setDocumentation("https://www.web3d.org/x3d/content/examples/Basic/UniversalMediaMaterials")
          .setProtoBody(new ProtoBody()
            .addChild(new Material().setAmbientIntensity(0.242424).setDiffuseColor(Java.to(doubleToFloat([0.38087,0.382957,0.417708]), Java.type("float[]"))).setShininess(0.933333).setSpecularColor(Java.to(doubleToFloat([0.533333,0.533333,0.533333]), Java.type("float[]"))))))
        .addChild(new ProtoDeclare().setName("ArtDeco33").setAppinfo("UniversalMediaMaterials prototype").setDocumentation("https://www.web3d.org/x3d/content/examples/Basic/UniversalMediaMaterials")
          .setProtoBody(new ProtoBody()
            .addChild(new Material().setAmbientIntensity(0.230089).setDiffuseColor(Java.to(doubleToFloat([0.610811,0.610811,0.610811]), Java.type("float[]"))).setShininess(0.897297).setSpecularColor(Java.to(doubleToFloat([0.767568,0.756757,0.764964]), Java.type("float[]"))))))
        .addChild(new ProtoDeclare().setName("ArtDeco34").setAppinfo("UniversalMediaMaterials prototype").setDocumentation("https://www.web3d.org/x3d/content/examples/Basic/UniversalMediaMaterials")
          .setProtoBody(new ProtoBody()
            .addChild(new Material().setAmbientIntensity(0.25).setShininess(0).setSpecularColor(Java.to(doubleToFloat([0.2,0.2,0.2]), Java.type("float[]"))))))
        .addChild(new Anchor().setDescription("ArtDecoPrototypeExample").setParameter(Java.to(["target=_blank"], Java.type("java.lang.String[]"))).setUrl(Java.to(["../data/ArtDecoExamples.json","../data/ArtDecoExamples.x3d","ArtDecoExamples.json","ArtDecoExamples.x3d"], Java.type("java.lang.String[]")))
          .addChild(new Shape()
            .setAppearance(new Appearance()
              .setMaterial(new Material().setDiffuseColor(Java.to(doubleToFloat([0.8,0.4,0]), Java.type("float[]")))))
            .setGeometry(new Text().setString(Java.to(["ArtDecoExamples.x3d","is a Materials Prototype declaration file.","","For an example scene using these node,","click this text and view","ArtDecoExamples.x3d"], Java.type("java.lang.String[]")))
              .setFontStyle(new FontStyle().setJustify(Java.to(["MIDDLE","MIDDLE"], Java.type("java.lang.String[]"))).setSize(0.8))))))      ;
    X3D0.toFileX3D("../data/ArtDecoPrototypes.new.graal.x3d");
    X3D0.toFileJSON("../data/ArtDecoPrototypes.new.graal.json");
