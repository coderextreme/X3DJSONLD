load('X3Dautoclass.js');
var ConfigurationProperties = Packages.org.web3d.x3d.jsail.ConfigurationProperties;
ConfigurationProperties.showDefaultAttributes = false;
ConfigurationProperties.xsltEngine = ConfigurationProperties.XSLT_ENGINE_NATIVE_JAVA;
ConfigurationProperties.deleteIntermediateFiles = false;
ConfigurationProperties.setStripTrailingZeroes(true);
function doubleToFloat(d) {
    if (Float32Array)
	return new Float32Array([d])[0];
}
      var X3D0 =  new X3D().setProfile("Interchange").setVersion("4.0")
      .setHead(new head()
        .addComponent(new component().setName("HAnim").setLevel(1))
        .addMeta(new meta().setName("title").setContent("MainStage.x3d"))
        .addMeta(new meta().setName("description").setContent("Main stage for HAnim scene Winter and Spring."))
        .addMeta(new meta().setName("creator").setContent("Joe Williams"))
        .addMeta(new meta().setName("translator").setContent("Joe Williams and Don Brutzman"))
        .addMeta(new meta().setName("created").setContent("25 May 2023"))
        .addMeta(new meta().setName("modified").setContent("27 May 2023"))
        .addMeta(new meta().setName("reference").setContent("originals/0MainStageScene0525.x3dv"))
        .addMeta(new meta().setName("identifier").setContent("https://www.web3d.org/x3d/content/examples/HumanoidAnimation/WinterAndSpring/MainStage.x3d"))
        .addMeta(new meta().setName("generator").setContent("X3D-Edit 4.0, https://savage.nps.edu/X3D-Edit"))
        .addMeta(new meta().setName("license").setContent("../license.html")))
      .setScene(new Scene()
        .addChild(new WorldInfo().setTitle("MainStage.x3d"))
        .addChild(new NavigationInfo().setHeadlight(false))
        .addChild(new DirectionalLight().setAmbientIntensity(1).setDirection(Java.to([doubleToFloat(-0.5),doubleToFloat(-0.5),doubleToFloat(-0.5)], Java.type("float[]"))).setGlobal(true))
        .addChild(new DirectionalLight().setAmbientIntensity(1).setDirection(Java.to([doubleToFloat(-1),doubleToFloat(-1),doubleToFloat(-1)], Java.type("float[]"))).setGlobal(true))
        .addChild(new DirectionalLight().setAmbientIntensity(1).setDirection(Java.to([doubleToFloat(1),doubleToFloat(1),doubleToFloat(-1)], Java.type("float[]"))).setGlobal(true).setIntensity(0.5))
        .addChild(new Viewpoint().setDEF("Scene_StageFrontViewFar").setDescription("hanim_Stage Front View").setOrientation(Java.to([doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(-0.449999988)], Java.type("float[]"))).setPosition(Java.to([doubleToFloat(0),doubleToFloat(4),doubleToFloat(10)], Java.type("float[]"))))
        .addChild(new Viewpoint().setDEF("Scene_InclinedView").setDescription("hanim_Inclined View").setOrientation(Java.to([doubleToFloat(-0.112999998),doubleToFloat(0.992999971),doubleToFloat(0.034699999),doubleToFloat(0.671000004)], Java.type("float[]"))).setPosition(Java.to([doubleToFloat(2.619999886),doubleToFloat(1.049999952),doubleToFloat(4.059999943)], Java.type("float[]"))))
        .addChild(new Viewpoint().setDEF("Scene_StageFrontView").setDescription("hanim_Stage Front View").setPosition(Java.to([doubleToFloat(0),doubleToFloat(1),doubleToFloat(5)], Java.type("float[]"))))
        .addChild(new Viewpoint().setDEF("Scene_FeetStageBottomView").setDescription("hanim_feet View").setOrientation(Java.to([doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1.570000052)], Java.type("float[]"))).setPosition(Java.to([doubleToFloat(0),doubleToFloat(-10),doubleToFloat(0)], Java.type("float[]"))))
        .addChild(new Viewpoint().setDEF("Scene_HeadTopView").setDescription("hanim_Head Top View").setOrientation(Java.to([doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(-1.570000052)], Java.type("float[]"))).setPosition(Java.to([doubleToFloat(0),doubleToFloat(15),doubleToFloat(0)], Java.type("float[]"))))
        .addChild(new Viewpoint().setDEF("Scene_TopFrontCloseView").setDescription("hanim_Head Top View").setOrientation(Java.to([doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(-1.100000024)], Java.type("float[]"))).setPosition(Java.to([doubleToFloat(0),doubleToFloat(8),doubleToFloat(3)], Java.type("float[]"))))
        .addChild(new Group().setDEF("HAnimStage")
          .addChild(new Transform().setDEF("cordsysfloor").setScale(Java.to([doubleToFloat(0.174999997),doubleToFloat(0.174999997),doubleToFloat(0.174999997)], Java.type("float[]")))
            .addChild(new Inline().setUrl(Java.to(["JointCoordinateAxes.x3dv"], Java.type("java.lang.String[]")))))
          .addChild(new Transform().setDEF("StageGeometry").setScale(Java.to([doubleToFloat(1),doubleToFloat(0.01),doubleToFloat(1)], Java.type("float[]"))).setTranslation(Java.to([doubleToFloat(0),doubleToFloat(-0.01),doubleToFloat(0)], Java.type("float[]")))
            .addChild(new Shape()
              .setAppearance(new Appearance()
                .setMaterial(new Material().setTransparency(0.6)))
              .setGeometry(new Box().setSize(Java.to([doubleToFloat(9),doubleToFloat(1),doubleToFloat(9)], Java.type("float[]")))))
            .addChild(new Transform().setDEF("Circle0")
              .addChild(new Shape()
                .setAppearance(new Appearance().setDEF("LineColor")
                  .setMaterial(new Material().setAmbientIntensity(1).setDiffuseColor(Java.to([doubleToFloat(0.699999988),doubleToFloat(0),doubleToFloat(0.899999976)], Java.type("float[]"))).setEmissiveColor(Java.to([doubleToFloat(0.449999988),doubleToFloat(0.449999988),doubleToFloat(1)], Java.type("float[]"))).setShininess(1).setSpecularColor(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(1)], Java.type("float[]")))))
                .setGeometry(new IndexedLineSet().setDEF("Orbit1").setCoordIndex(Java.to([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,-1], Java.type("int[]")))
                  .setCoord(new Coordinate().setPoint(Java.to([doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.995000005),doubleToFloat(0),doubleToFloat(-0.104999997),doubleToFloat(0.978999972),doubleToFloat(0),doubleToFloat(-0.208000004),doubleToFloat(0.950999975),doubleToFloat(0),doubleToFloat(-0.308999985),doubleToFloat(0.913999975),doubleToFloat(0),doubleToFloat(-0.407000005),doubleToFloat(0.865999997),doubleToFloat(0),doubleToFloat(-0.5),doubleToFloat(0.809000015),doubleToFloat(0),doubleToFloat(-0.588),doubleToFloat(0.742999971),doubleToFloat(0),doubleToFloat(-0.66900003),doubleToFloat(0.66900003),doubleToFloat(0),doubleToFloat(-0.742999971),doubleToFloat(0.588),doubleToFloat(0),doubleToFloat(-0.809000015),doubleToFloat(0.5),doubleToFloat(0),doubleToFloat(-0.865999997),doubleToFloat(0.407000005),doubleToFloat(0),doubleToFloat(-0.913999975),doubleToFloat(0.308999985),doubleToFloat(0),doubleToFloat(-0.950999975),doubleToFloat(0.208000004),doubleToFloat(0),doubleToFloat(-0.977999985),doubleToFloat(0.104999997),doubleToFloat(0),doubleToFloat(-0.995000005),doubleToFloat(0),doubleToFloat(0),doubleToFloat(-1),doubleToFloat(-0.104999997),doubleToFloat(0),doubleToFloat(-0.994521976),doubleToFloat(-0.208000004),doubleToFloat(0),doubleToFloat(-0.977999985),doubleToFloat(-0.308999985),doubleToFloat(0),doubleToFloat(-0.950999975),doubleToFloat(-0.407000005),doubleToFloat(0),doubleToFloat(-0.913999975),doubleToFloat(-0.5),doubleToFloat(0),doubleToFloat(-0.865999997),doubleToFloat(-0.588),doubleToFloat(0),doubleToFloat(-0.809000015),doubleToFloat(-0.66900003),doubleToFloat(0),doubleToFloat(-0.742999971),doubleToFloat(-0.742999971),doubleToFloat(0),doubleToFloat(-0.66900003),doubleToFloat(-0.809000015),doubleToFloat(0),doubleToFloat(-0.588),doubleToFloat(-0.865999997),doubleToFloat(0),doubleToFloat(-0.5),doubleToFloat(-0.913999975),doubleToFloat(0),doubleToFloat(-0.407000005),doubleToFloat(-0.950999975),doubleToFloat(0),doubleToFloat(-0.308999985),doubleToFloat(-0.977999985),doubleToFloat(0),doubleToFloat(-0.208000004),doubleToFloat(-0.995000005),doubleToFloat(0),doubleToFloat(-0.104999997),doubleToFloat(-1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(-0.995000005),doubleToFloat(0),doubleToFloat(0.104999997),doubleToFloat(-0.977999985),doubleToFloat(0),doubleToFloat(0.208000004),doubleToFloat(-0.950999975),doubleToFloat(0),doubleToFloat(0.308999985),doubleToFloat(-0.913999975),doubleToFloat(0),doubleToFloat(0.407000005),doubleToFloat(-0.865999997),doubleToFloat(0),doubleToFloat(0.5),doubleToFloat(-0.809000015),doubleToFloat(0),doubleToFloat(0.588),doubleToFloat(-0.742999971),doubleToFloat(0),doubleToFloat(0.66900003),doubleToFloat(-0.66900003),doubleToFloat(0),doubleToFloat(0.742999971),doubleToFloat(-0.588),doubleToFloat(0),doubleToFloat(0.809000015),doubleToFloat(-0.5),doubleToFloat(0),doubleToFloat(0.865999997),doubleToFloat(-0.407000005),doubleToFloat(0),doubleToFloat(0.913999975),doubleToFloat(-0.308999985),doubleToFloat(0),doubleToFloat(0.950999975),doubleToFloat(-0.208000004),doubleToFloat(0),doubleToFloat(0.977999985),doubleToFloat(-0.104999997),doubleToFloat(0),doubleToFloat(0.995000005),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0.104999997),doubleToFloat(0),doubleToFloat(0.995000005),doubleToFloat(0.208000004),doubleToFloat(0),doubleToFloat(0.977999985),doubleToFloat(0.308999985),doubleToFloat(0),doubleToFloat(0.950999975),doubleToFloat(0.407000005),doubleToFloat(0),doubleToFloat(0.913999975),doubleToFloat(0.5),doubleToFloat(0),doubleToFloat(0.865999997),doubleToFloat(0.588),doubleToFloat(0),doubleToFloat(0.809000015),doubleToFloat(0.66900003),doubleToFloat(0),doubleToFloat(0.742999971),doubleToFloat(0.742999971),doubleToFloat(0),doubleToFloat(0.66900003),doubleToFloat(0.809000015),doubleToFloat(0),doubleToFloat(0.588),doubleToFloat(0.865999997),doubleToFloat(0),doubleToFloat(0.5),doubleToFloat(0.913999975),doubleToFloat(0),doubleToFloat(0.407000005),doubleToFloat(0.950999975),doubleToFloat(0),doubleToFloat(0.308999985),doubleToFloat(0.977999985),doubleToFloat(0),doubleToFloat(0.208000004),doubleToFloat(0.995000005),doubleToFloat(0),doubleToFloat(0.104000002),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0)], Java.type("float[]")))))))
            .addChild(new Transform().setDEF("Circle1").setScale(Java.to([doubleToFloat(0.5),doubleToFloat(1),doubleToFloat(0.5)], Java.type("float[]")))
              .addChild(new Shape()
                .setAppearance(new Appearance().setUSE("LineColor"))
                .setGeometry(new IndexedLineSet().setUSE("Orbit1"))))
            .addChild(new Transform().setDEF("Circle2").setScale(Java.to([doubleToFloat(0.25),doubleToFloat(1),doubleToFloat(0.25)], Java.type("float[]")))
              .addChild(new Shape()
                .setAppearance(new Appearance().setUSE("LineColor"))
                .setGeometry(new IndexedLineSet().setUSE("Orbit1"))))
            .addChild(new Transform().setDEF("Circle3").setScale(Java.to([doubleToFloat(2),doubleToFloat(1),doubleToFloat(2)], Java.type("float[]")))
              .addChild(new Shape()
                .setAppearance(new Appearance().setUSE("LineColor"))
                .setGeometry(new IndexedLineSet().setUSE("Orbit1"))))
            .addChild(new Transform().setDEF("Circle4").setScale(Java.to([doubleToFloat(3),doubleToFloat(1),doubleToFloat(3)], Java.type("float[]")))
              .addChild(new Shape()
                .setAppearance(new Appearance().setUSE("LineColor"))
                .setGeometry(new IndexedLineSet().setUSE("Orbit1")))))))      ;
    X3D0.toFileX3D("../data/MainStage.new.graal.x3d");
    X3D0.toFileJSON("../data/MainStage.new.graal.json");
