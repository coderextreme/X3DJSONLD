load('X3Dautoclass.js');
var ConfigurationProperties = Packages.org.web3d.x3d.jsail.ConfigurationProperties;
ConfigurationProperties.showDefaultAttributes = false;
ConfigurationProperties.xsltEngine = ConfigurationProperties.XSLT_ENGINE_NATIVE_JAVA;
ConfigurationProperties.deleteIntermediateFiles = false;
ConfigurationProperties.setStripTrailingZeroes(true);
function doubleToFloat(d) {
    if (Float32Array)
	return new Float32Array([d])[0];
}
      var X3D0 =  new X3D().setProfile("Immersive").setVersion("3.3")
      .setHead(new head()
        .addMeta(new meta().setName("title").setContent("LOA1_SwimmingFlutterKickAnimation.x3d"))
        .addMeta(new meta().setName("description").setContent("Humanoid animation prototype reusable by any Humanoid."))
        .addMeta(new meta().setName("creator").setContent("Etsuko Lippi"))
        .addMeta(new meta().setName("created").setContent("13 December 2001"))
        .addMeta(new meta().setName("modified").setContent("23 May 2020"))
        .addMeta(new meta().setName("warning").setContent("not yet tested, need to compare with NancyDivingExample interpolators"))
        .addMeta(new meta().setName("reference").setContent("http://www.HAnim.org"))
        .addMeta(new meta().setName("reference").setContent("http://HAnim.org/Models"))
        .addMeta(new meta().setName("reference").setContent("http://HAnim.org/Nodes"))
        .addMeta(new meta().setName("subject").setContent("Swimming flutter kick Animation HAnim 2001"))
        .addMeta(new meta().setName("identifier").setContent("https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Prototypes/LOA1_SwimmingFlutterKickAnimation.x3d"))
        .addMeta(new meta().setName("generator").setContent("X3D-Edit 3.2, https://savage.nps.edu/X3D-Edit"))
        .addMeta(new meta().setName("license").setContent("../license.html")))
      .setScene(new Scene()
        .addChild(new WorldInfo().setTitle("LOA1_SwimmingFlutterKickAnimation.x3d"))
        .addChild(new ProtoDeclare().setName("LOA1_DivingAnimation")
          .setProtoInterface(new ProtoInterface()
            .addField(new field().setType(field.TYPE_SFTIME).setName("cycleInterval").setAccessType(field.ACCESSTYPE_INPUTOUTPUT).setValue("7"))
            .addField(new field().setType(field.TYPE_SFBOOL).setName("enabled").setAccessType(field.ACCESSTYPE_INPUTOUTPUT).setValue("true"))
            .addField(new field().setType(field.TYPE_SFBOOL).setName("loop").setAccessType(field.ACCESSTYPE_INPUTOUTPUT).setValue("true"))
            .addField(new field().setType(field.TYPE_SFTIME).setName("startTime").setAccessType(field.ACCESSTYPE_INPUTOUTPUT).setValue("0"))
            .addField(new field().setType(field.TYPE_SFTIME).setName("stopTime").setAccessType(field.ACCESSTYPE_INPUTOUTPUT).setValue("-1"))
            .addField(new field().setType(field.TYPE_SFFLOAT).setName("fraction_changed").setAccessType(field.ACCESSTYPE_OUTPUTONLY))
            .addField(new field().setType(field.TYPE_SFBOOL).setName("isActive").setAccessType(field.ACCESSTYPE_OUTPUTONLY))
            .addField(new field().setType(field.TYPE_SFVEC3F).setName("HumanoidRoot_translation_changed").setAccessType(field.ACCESSTYPE_OUTPUTONLY))
            .addField(new field().setType(field.TYPE_SFROTATION).setName("HumanoidRoot_rotation_changed").setAccessType(field.ACCESSTYPE_OUTPUTONLY))
            .addField(new field().setType(field.TYPE_SFROTATION).setName("lower_body_rotation_changed").setAccessType(field.ACCESSTYPE_OUTPUTONLY))
            .addField(new field().setType(field.TYPE_SFROTATION).setName("l_hip_rotation_changed").setAccessType(field.ACCESSTYPE_OUTPUTONLY))
            .addField(new field().setType(field.TYPE_SFROTATION).setName("l_knee_rotation_changed").setAccessType(field.ACCESSTYPE_OUTPUTONLY))
            .addField(new field().setType(field.TYPE_SFROTATION).setName("l_ankle_rotation_changed").setAccessType(field.ACCESSTYPE_OUTPUTONLY))
            .addField(new field().setType(field.TYPE_SFROTATION).setName("l_midtarsal_rotation_changed").setAccessType(field.ACCESSTYPE_OUTPUTONLY))
            .addField(new field().setType(field.TYPE_SFROTATION).setName("r_hip_rotation_changed").setAccessType(field.ACCESSTYPE_OUTPUTONLY))
            .addField(new field().setType(field.TYPE_SFROTATION).setName("r_knee_rotation_changed").setAccessType(field.ACCESSTYPE_OUTPUTONLY))
            .addField(new field().setType(field.TYPE_SFROTATION).setName("r_ankle_rotation_changed").setAccessType(field.ACCESSTYPE_OUTPUTONLY))
            .addField(new field().setType(field.TYPE_SFROTATION).setName("r_midtarsal_rotation_changed").setAccessType(field.ACCESSTYPE_OUTPUTONLY))
            .addField(new field().setType(field.TYPE_SFROTATION).setName("vl5_rotation_changed").setAccessType(field.ACCESSTYPE_OUTPUTONLY))
            .addField(new field().setType(field.TYPE_SFROTATION).setName("skullbase_rotation_changed").setAccessType(field.ACCESSTYPE_OUTPUTONLY))
            .addField(new field().setType(field.TYPE_SFROTATION).setName("l_shoulder_rotation_changed").setAccessType(field.ACCESSTYPE_OUTPUTONLY))
            .addField(new field().setType(field.TYPE_SFROTATION).setName("l_elbow_rotation_changed").setAccessType(field.ACCESSTYPE_OUTPUTONLY))
            .addField(new field().setType(field.TYPE_SFROTATION).setName("l_wrist_rotation_changed").setAccessType(field.ACCESSTYPE_OUTPUTONLY))
            .addField(new field().setType(field.TYPE_SFROTATION).setName("r_shoulder_rotation_changed").setAccessType(field.ACCESSTYPE_OUTPUTONLY))
            .addField(new field().setType(field.TYPE_SFROTATION).setName("r_elbow_rotation_changed").setAccessType(field.ACCESSTYPE_OUTPUTONLY))
            .addField(new field().setType(field.TYPE_SFROTATION).setName("r_wrist_rotation_changed").setAccessType(field.ACCESSTYPE_OUTPUTONLY)))
          .setProtoBody(new ProtoBody()
            .addChild(new Group()
              .addChild(new TimeSensor().setDEF("TIMER").setLoop(true)
                .setIS(new IS()
                  .addConnect(new connect().setNodeField("cycleInterval").setProtoField("cycleInterval"))
                  .addConnect(new connect().setNodeField("enabled").setProtoField("enabled"))
                  .addConnect(new connect().setNodeField("loop").setProtoField("loop"))
                  .addConnect(new connect().setNodeField("startTime").setProtoField("startTime"))
                  .addConnect(new connect().setNodeField("stopTime").setProtoField("stopTime"))
                  .addConnect(new connect().setNodeField("fraction_changed").setProtoField("fraction_changed"))
                  .addConnect(new connect().setNodeField("isActive").setProtoField("isActive"))))
              .addChild(new PositionInterpolator().setDEF("HUMANOIDROOT_POSITION_ANIMATOR").setKey(Java.to([doubleToFloat(0),doubleToFloat(0.04167),doubleToFloat(0.125),doubleToFloat(0.1667),doubleToFloat(0.2083),doubleToFloat(0.25),doubleToFloat(0.2917),doubleToFloat(0.375),doubleToFloat(0.4583),doubleToFloat(0.5),doubleToFloat(0.5417),doubleToFloat(0.5833),doubleToFloat(0.625),doubleToFloat(0.7083),doubleToFloat(0.75),doubleToFloat(0.7917),doubleToFloat(0.875),doubleToFloat(0.9167),doubleToFloat(1)], Java.type("float[]"))).setKeyValue(Java.to([doubleToFloat(0),doubleToFloat(-0.00928),doubleToFloat(0),doubleToFloat(0),doubleToFloat(-0.003858),doubleToFloat(0),doubleToFloat(0),doubleToFloat(-0.008847),doubleToFloat(0),doubleToFloat(0),doubleToFloat(-0.01486),doubleToFloat(0),doubleToFloat(0),doubleToFloat(-0.02641),doubleToFloat(0),doubleToFloat(0),doubleToFloat(-0.03934),doubleToFloat(0),doubleToFloat(0),doubleToFloat(-0.0502),doubleToFloat(0),doubleToFloat(0),doubleToFloat(-0.07469),doubleToFloat(0),doubleToFloat(0),doubleToFloat(-0.02732),doubleToFloat(0),doubleToFloat(0),doubleToFloat(-0.01608),doubleToFloat(0),doubleToFloat(0),doubleToFloat(-0.01129),doubleToFloat(0),doubleToFloat(0),doubleToFloat(-0.005819),doubleToFloat(0),doubleToFloat(0),doubleToFloat(-0.002004),doubleToFloat(0),doubleToFloat(0),doubleToFloat(-0.002579),doubleToFloat(0),doubleToFloat(0),doubleToFloat(-0.0143),doubleToFloat(0),doubleToFloat(0),doubleToFloat(-0.03799),doubleToFloat(0),doubleToFloat(0),doubleToFloat(-0.05648),doubleToFloat(0),doubleToFloat(0),doubleToFloat(-0.045),doubleToFloat(0),doubleToFloat(0),doubleToFloat(-0.00928),doubleToFloat(0)], Java.type("float[]")))
                .setIS(new IS()
                  .addConnect(new connect().setNodeField("value_changed").setProtoField("HumanoidRoot_translation_changed"))))
              .addChild(new OrientationInterpolator().setDEF("HUMANOIDROOT_ANIMATOR").setKey(Java.to([doubleToFloat(0),doubleToFloat(1)], Java.type("float[]"))).setKeyValue(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0)], Java.type("float[]")))
                .setIS(new IS()
                  .addConnect(new connect().setNodeField("value_changed").setProtoField("HumanoidRoot_rotation_changed"))))
              .addComments(new CommentsBlock("no SACROILIAC_ANIMATOR"))
              .addChild(new OrientationInterpolator().setDEF("L_HIP_ANIMATOR").setKey(Java.to([doubleToFloat(0),doubleToFloat(0.25),doubleToFloat(0.375),doubleToFloat(0.6667),doubleToFloat(0.7917),doubleToFloat(0.9167),doubleToFloat(1)], Java.type("float[]"))).setKeyValue(Java.to([doubleToFloat(-0.873),doubleToFloat(0.06094),doubleToFloat(0.484),doubleToFloat(0.2865),doubleToFloat(0.9963),doubleToFloat(-0.01057),doubleToFloat(0.08481),doubleToFloat(0.2488),doubleToFloat(0.9965),doubleToFloat(0.01591),doubleToFloat(-0.08222),doubleToFloat(0.3836),doubleToFloat(-1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.5518),doubleToFloat(-0.9964),doubleToFloat(0.02231),doubleToFloat(0.0817),doubleToFloat(0.5351),doubleToFloat(-0.9809),doubleToFloat(0.04912),doubleToFloat(0.1881),doubleToFloat(0.5204),doubleToFloat(-0.873),doubleToFloat(0.06094),doubleToFloat(0.484),doubleToFloat(0.2865)], Java.type("float[]")))
                .setIS(new IS()
                  .addConnect(new connect().setNodeField("value_changed").setProtoField("l_hip_rotation_changed"))))
              .addChild(new OrientationInterpolator().setDEF("L_KNEE_ANIMATOR").setKey(Java.to([doubleToFloat(0),doubleToFloat(0.2083),doubleToFloat(0.375),doubleToFloat(0.5),doubleToFloat(0.6667),doubleToFloat(0.7917),doubleToFloat(0.9167),doubleToFloat(1)], Java.type("float[]"))).setKeyValue(Java.to([doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.3226),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.1556),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.08678),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.8751),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1.131),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.09961),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.3942),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.3226)], Java.type("float[]")))
                .setIS(new IS()
                  .addConnect(new connect().setNodeField("value_changed").setProtoField("l_knee_rotation_changed"))))
              .addChild(new OrientationInterpolator().setDEF("L_ANKLE_ANIMATOR").setKey(Java.to([doubleToFloat(0),doubleToFloat(0.125),doubleToFloat(0.2083),doubleToFloat(0.375),doubleToFloat(0.4583),doubleToFloat(0.5),doubleToFloat(0.6667),doubleToFloat(0.75),doubleToFloat(0.7917),doubleToFloat(0.9167),doubleToFloat(1)], Java.type("float[]"))).setKeyValue(Java.to([doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.6001),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.6509),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.6001),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.6001),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.6509),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.6001),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.6001),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.6509),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.6001),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.6509),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.6001)], Java.type("float[]")))
                .setIS(new IS()
                  .addConnect(new connect().setNodeField("value_changed").setProtoField("l_ankle_rotation_changed"))))
              .addComments(new CommentsBlock("no L_MIDTARSAL_ANIMATOR"))
              .addChild(new OrientationInterpolator().setDEF("R_HIP_ANIMATOR").setKey(Java.to([doubleToFloat(0),doubleToFloat(0.125),doubleToFloat(0.2083),doubleToFloat(0.2917),doubleToFloat(0.5),doubleToFloat(0.7917),doubleToFloat(0.9167),doubleToFloat(1)], Java.type("float[]"))).setKeyValue(Java.to([doubleToFloat(-0.5831),doubleToFloat(0.03511),doubleToFloat(0.8116),doubleToFloat(0.1481),doubleToFloat(-0.995),doubleToFloat(0.02296),doubleToFloat(0.09674),doubleToFloat(0.4683),doubleToFloat(-1),doubleToFloat(0.00192),doubleToFloat(0.007964),doubleToFloat(0.4732),doubleToFloat(-0.998),doubleToFloat(-0.0158),doubleToFloat(-0.06102),doubleToFloat(0.5079),doubleToFloat(-0.9131),doubleToFloat(-0.06243),doubleToFloat(-0.403),doubleToFloat(0.3361),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.2571),doubleToFloat(0.9891),doubleToFloat(-0.02805),doubleToFloat(0.1444),doubleToFloat(0.3879),doubleToFloat(-0.5831),doubleToFloat(0.03511),doubleToFloat(0.8116),doubleToFloat(0.1481)], Java.type("float[]")))
                .setIS(new IS()
                  .addConnect(new connect().setNodeField("value_changed").setProtoField("r_hip_rotation_changed"))))
              .addChild(new OrientationInterpolator().setDEF("R_KNEE_ANIMATOR").setKey(Java.to([doubleToFloat(0),doubleToFloat(0.125),doubleToFloat(0.2083),doubleToFloat(0.375),doubleToFloat(0.5),doubleToFloat(0.6667),doubleToFloat(0.9167),doubleToFloat(1)], Java.type("float[]"))).setKeyValue(Java.to([doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.8573),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.5351),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.1756),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.1194),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.3153),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.09354),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.08558),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.8573)], Java.type("float[]")))
                .setIS(new IS()
                  .addConnect(new connect().setNodeField("value_changed").setProtoField("r_knee_rotation_changed"))))
              .addChild(new OrientationInterpolator().setDEF("R_ANKLE_ANIMATOR").setKey(Java.to([doubleToFloat(0),doubleToFloat(0.125),doubleToFloat(0.2083),doubleToFloat(0.375),doubleToFloat(0.4583),doubleToFloat(0.5),doubleToFloat(0.6667),doubleToFloat(0.75),doubleToFloat(0.7917),doubleToFloat(0.9167),doubleToFloat(1)], Java.type("float[]"))).setKeyValue(Java.to([doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.8001),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.8509),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.8001),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.8001),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.8509),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.8001),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.8001),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.8001),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.8001),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.8509),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.86001)], Java.type("float[]")))
                .setIS(new IS()
                  .addConnect(new connect().setNodeField("value_changed").setProtoField("r_ankle_rotation_changed"))))
              .addComments(new CommentsBlock("no L_MIDTARSAL_ANIMATOR"))
              .addChild(new OrientationInterpolator().setDEF("VL5_ANIMATOR").setKey(Java.to([doubleToFloat(0),doubleToFloat(0.2083),doubleToFloat(0.375),doubleToFloat(0.75),doubleToFloat(0.8333),doubleToFloat(1)], Java.type("float[]"))).setKeyValue(Java.to([doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0.0826),doubleToFloat(-0.01972),doubleToFloat(-0.5974),doubleToFloat(0.8017),doubleToFloat(0.08231),doubleToFloat(0.009296),doubleToFloat(-0.9648),doubleToFloat(0.2627),doubleToFloat(0.1734),doubleToFloat(-0.01238),doubleToFloat(0.9549),doubleToFloat(-0.2968),doubleToFloat(0.08732),doubleToFloat(-0.008125),doubleToFloat(0.9691),doubleToFloat(-0.2463),doubleToFloat(0.158),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0.0826)], Java.type("float[]")))
                .setIS(new IS()
                  .addConnect(new connect().setNodeField("value_changed").setProtoField("vl5_rotation_changed"))))
              .addChild(new OrientationInterpolator().setDEF("SKULLBASE_ANIMATOR").setKey(Java.to([doubleToFloat(0),doubleToFloat(0.28),doubleToFloat(0.3),doubleToFloat(0.32),doubleToFloat(0.4),doubleToFloat(0.45),doubleToFloat(0.6),doubleToFloat(0.65),doubleToFloat(0.7),doubleToFloat(0.75),doubleToFloat(0.85),doubleToFloat(0.9),doubleToFloat(0.95),doubleToFloat(1)], Java.type("float[]"))).setKeyValue(Java.to([doubleToFloat(-1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(-1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(-1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.999),doubleToFloat(-1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.99),doubleToFloat(-1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.99),doubleToFloat(-1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.9),doubleToFloat(-1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.9),doubleToFloat(-1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.9),doubleToFloat(-1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.9),doubleToFloat(-1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.9),doubleToFloat(-1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.9),doubleToFloat(-1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.9),doubleToFloat(-1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.9),doubleToFloat(-1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1)], Java.type("float[]")))
                .setIS(new IS()
                  .addConnect(new connect().setNodeField("value_changed").setProtoField("skullbase_rotation_changed"))))
              .addChild(new OrientationInterpolator().setDEF("L_SHOULDER_ANIMATOR").setKey(Java.to([doubleToFloat(0),doubleToFloat(0.25),doubleToFloat(0.375),doubleToFloat(0.6667),doubleToFloat(0.7917),doubleToFloat(0.9167),doubleToFloat(1)], Java.type("float[]"))).setKeyValue(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0.1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0.2),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0.2),doubleToFloat(0.86),doubleToFloat(0.25),doubleToFloat(0.42),doubleToFloat(0.5),doubleToFloat(0.86),doubleToFloat(0.25),doubleToFloat(0.42),doubleToFloat(0.8),doubleToFloat(0.86),doubleToFloat(0.25),doubleToFloat(0.42),doubleToFloat(0.4),doubleToFloat(0.86),doubleToFloat(0.25),doubleToFloat(0.42),doubleToFloat(0.2)], Java.type("float[]")))
                .setIS(new IS()
                  .addConnect(new connect().setNodeField("value_changed").setProtoField("l_shoulder_rotation_changed"))))
              .addChild(new OrientationInterpolator().setDEF("L_ELBOW_ANIMATOR").setKey(Java.to([doubleToFloat(0),doubleToFloat(0.28),doubleToFloat(0.32),doubleToFloat(0.64),doubleToFloat(0.76),doubleToFloat(1)], Java.type("float[]"))).setKeyValue(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(-1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.1229),doubleToFloat(-1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.1229),doubleToFloat(-1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.5976),doubleToFloat(-1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.3917),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0)], Java.type("float[]")))
                .setIS(new IS()
                  .addConnect(new connect().setNodeField("value_changed").setProtoField("l_elbow_rotation_changed"))))
              .addChild(new OrientationInterpolator().setDEF("L_WRIST_ANIMATOR").setKey(Java.to([doubleToFloat(0),doubleToFloat(0.32),doubleToFloat(0.64),doubleToFloat(0.88),doubleToFloat(1)], Java.type("float[]"))).setKeyValue(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0.067),doubleToFloat(0.98),doubleToFloat(-0.128),doubleToFloat(4.15),doubleToFloat(0.067),doubleToFloat(0.98),doubleToFloat(-0.128),doubleToFloat(4.15),doubleToFloat(0.067),doubleToFloat(0.98),doubleToFloat(-0.128),doubleToFloat(4.15),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0)], Java.type("float[]")))
                .setIS(new IS()
                  .addConnect(new connect().setNodeField("value_changed").setProtoField("l_wrist_rotation_changed"))))
              .addChild(new OrientationInterpolator().setDEF("R_SHOULDER_ANIMATOR").setKey(Java.to([doubleToFloat(0),doubleToFloat(0.45),doubleToFloat(0.64),doubleToFloat(0.76),doubleToFloat(0.88),doubleToFloat(1)], Java.type("float[]"))).setKeyValue(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0.9992),doubleToFloat(0.02042),doubleToFloat(0.03558),doubleToFloat(7.2),doubleToFloat(0.9989),doubleToFloat(-0.04623),doubleToFloat(0.005159),doubleToFloat(4.079),doubleToFloat(-0.8687),doubleToFloat(-0.2525),doubleToFloat(-0.4261),doubleToFloat(1.501),doubleToFloat(-0.941),doubleToFloat(-0.2893),doubleToFloat(-0.1754),doubleToFloat(0.4788),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0)], Java.type("float[]")))
                .setIS(new IS()
                  .addConnect(new connect().setNodeField("value_changed").setProtoField("r_shoulder_rotation_changed"))))
              .addChild(new OrientationInterpolator().setDEF("R_ELBOW_ANIMATOR").setKey(Java.to([doubleToFloat(0),doubleToFloat(0.28),doubleToFloat(0.32),doubleToFloat(0.64),doubleToFloat(0.76),doubleToFloat(1)], Java.type("float[]"))).setKeyValue(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(-1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.04151),doubleToFloat(-1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.04151),doubleToFloat(-1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.5855),doubleToFloat(-1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.5852),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0)], Java.type("float[]")))
                .setIS(new IS()
                  .addConnect(new connect().setNodeField("value_changed").setProtoField("r_elbow_rotation_changed"))))
              .addChild(new OrientationInterpolator().setDEF("R_WRIST_ANIMATOR").setKey(Java.to([doubleToFloat(0),doubleToFloat(0.28),doubleToFloat(0.32),doubleToFloat(0.64),doubleToFloat(0.76),doubleToFloat(1)], Java.type("float[]"))).setKeyValue(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(-0.0585279),doubleToFloat(0.983903),doubleToFloat(-0.168849),doubleToFloat(1.85956),doubleToFloat(-0.0585279),doubleToFloat(0.983903),doubleToFloat(-0.168849),doubleToFloat(1.85956),doubleToFloat(-0.00222418),doubleToFloat(0.99801),doubleToFloat(-0.0630095),doubleToFloat(1.46072),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0.497349),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0)], Java.type("float[]")))
                .setIS(new IS()
                  .addConnect(new connect().setNodeField("value_changed").setProtoField("r_wrist_rotation_changed")))))
            .addChild(new ROUTE().setFromField("fraction_changed").setFromNode("TIMER").setToField("set_fraction").setToNode("HUMANOIDROOT_POSITION_ANIMATOR"))
            .addChild(new ROUTE().setFromField("fraction_changed").setFromNode("TIMER").setToField("set_fraction").setToNode("HUMANOIDROOT_ANIMATOR"))
            .addChild(new ROUTE().setFromField("fraction_changed").setFromNode("TIMER").setToField("set_fraction").setToNode("SKULLBASE_ANIMATOR"))
            .addChild(new ROUTE().setFromField("fraction_changed").setFromNode("TIMER").setToField("set_fraction").setToNode("VL5_ANIMATOR"))
            .addChild(new ROUTE().setFromField("fraction_changed").setFromNode("TIMER").setToField("set_fraction").setToNode("L_HIP_ANIMATOR"))
            .addChild(new ROUTE().setFromField("fraction_changed").setFromNode("TIMER").setToField("set_fraction").setToNode("L_KNEE_ANIMATOR"))
            .addChild(new ROUTE().setFromField("fraction_changed").setFromNode("TIMER").setToField("set_fraction").setToNode("L_ANKLE_ANIMATOR"))
            .addChild(new ROUTE().setFromField("fraction_changed").setFromNode("TIMER").setToField("set_fraction").setToNode("R_HIP_ANIMATOR"))
            .addChild(new ROUTE().setFromField("fraction_changed").setFromNode("TIMER").setToField("set_fraction").setToNode("R_KNEE_ANIMATOR"))
            .addChild(new ROUTE().setFromField("fraction_changed").setFromNode("TIMER").setToField("set_fraction").setToNode("R_ANKLE_ANIMATOR"))
            .addChild(new ROUTE().setFromField("fraction_changed").setFromNode("TIMER").setToField("set_fraction").setToNode("L_SHOULDER_ANIMATOR"))
            .addChild(new ROUTE().setFromField("fraction_changed").setFromNode("TIMER").setToField("set_fraction").setToNode("L_ELBOW_ANIMATOR"))
            .addChild(new ROUTE().setFromField("fraction_changed").setFromNode("TIMER").setToField("set_fraction").setToNode("L_WRIST_ANIMATOR"))
            .addChild(new ROUTE().setFromField("fraction_changed").setFromNode("TIMER").setToField("set_fraction").setToNode("R_SHOULDER_ANIMATOR"))
            .addChild(new ROUTE().setFromField("fraction_changed").setFromNode("TIMER").setToField("set_fraction").setToNode("R_ELBOW_ANIMATOR"))
            .addChild(new ROUTE().setFromField("fraction_changed").setFromNode("TIMER").setToField("set_fraction").setToNode("R_WRIST_ANIMATOR"))))
        .addChild(new Viewpoint().setDescription("LOA1_SwimmingFlutterKickAnimation scene").setPosition(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(12)], Java.type("float[]"))))
        .addChild(new Anchor().setDescription("Nancy Diving").setParameter(Java.to(["target=_blank"], Java.type("java.lang.String[]"))).setUrl(Java.to(["NancyDiving.x3d","https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Prototypes/NancyDiving.x3d","NancyDiving.wrl","https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Prototypes/NancyDiving.wrl"], Java.type("java.lang.String[]")))
          .addChild(new Shape()
            .setGeometry(new Text().setString(Java.to(["LOA1_SwimmingFlutterKickAnimation.x3d","defines a prototype","for animating a humanoid.","","Click text to see example."], Java.type("java.lang.String[]")))
              .setFontStyle(new FontStyle().setJustify(Java.to(["MIDDLE","MIDDLE"], Java.type("java.lang.String[]"))).setSize(0.8)))
            .setAppearance(new Appearance()
              .setMaterial(new Material().setDiffuseColor(Java.to([doubleToFloat(1),doubleToFloat(1),doubleToFloat(0.2)], Java.type("float[]"))))))))      ;
    X3D0.toFileX3D("../data/LOA1_SwimmingFlutterKickAnimation.new.graal.x3d");
    X3D0.toFileJSON("../data/LOA1_SwimmingFlutterKickAnimation.new.graal.json");
