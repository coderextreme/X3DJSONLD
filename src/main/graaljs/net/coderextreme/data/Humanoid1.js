AcousticProperties = Java.type('org.web3d.x3d.jsail.Shape.AcousticProperties')
Analyser = Java.type('org.web3d.x3d.jsail.Sound.Analyser')
Anchor = Java.type('org.web3d.x3d.jsail.Networking.Anchor')
Appearance = Java.type('org.web3d.x3d.jsail.Shape.Appearance')
Arc2D = Java.type('org.web3d.x3d.jsail.Geometry2D.Arc2D')
ArcClose2D = Java.type('org.web3d.x3d.jsail.Geometry2D.ArcClose2D')
AudioClip = Java.type('org.web3d.x3d.jsail.Sound.AudioClip')
AudioDestination = Java.type('org.web3d.x3d.jsail.Sound.AudioDestination')
Background = Java.type('org.web3d.x3d.jsail.EnvironmentalEffects.Background')
BallJoint = Java.type('org.web3d.x3d.jsail.RigidBodyPhysics.BallJoint')
Billboard = Java.type('org.web3d.x3d.jsail.Navigation.Billboard')
BiquadFilter = Java.type('org.web3d.x3d.jsail.Sound.BiquadFilter')
BlendedVolumeStyle = Java.type('org.web3d.x3d.jsail.VolumeRendering.BlendedVolumeStyle')
BooleanFilter = Java.type('org.web3d.x3d.jsail.EventUtilities.BooleanFilter')
BooleanSequencer = Java.type('org.web3d.x3d.jsail.EventUtilities.BooleanSequencer')
BooleanToggle = Java.type('org.web3d.x3d.jsail.EventUtilities.BooleanToggle')
BooleanTrigger = Java.type('org.web3d.x3d.jsail.EventUtilities.BooleanTrigger')
BoundaryEnhancementVolumeStyle = Java.type('org.web3d.x3d.jsail.VolumeRendering.BoundaryEnhancementVolumeStyle')
BoundedPhysicsModel = Java.type('org.web3d.x3d.jsail.ParticleSystems.BoundedPhysicsModel')
Box = Java.type('org.web3d.x3d.jsail.Geometry3D.Box')
BufferAudioSource = Java.type('org.web3d.x3d.jsail.Sound.BufferAudioSource')
CADAssembly = Java.type('org.web3d.x3d.jsail.CADGeometry.CADAssembly')
CADFace = Java.type('org.web3d.x3d.jsail.CADGeometry.CADFace')
CADLayer = Java.type('org.web3d.x3d.jsail.CADGeometry.CADLayer')
CADPart = Java.type('org.web3d.x3d.jsail.CADGeometry.CADPart')
CartoonVolumeStyle = Java.type('org.web3d.x3d.jsail.VolumeRendering.CartoonVolumeStyle')
ChannelMerger = Java.type('org.web3d.x3d.jsail.Sound.ChannelMerger')
ChannelSelector = Java.type('org.web3d.x3d.jsail.Sound.ChannelSelector')
ChannelSplitter = Java.type('org.web3d.x3d.jsail.Sound.ChannelSplitter')
Circle2D = Java.type('org.web3d.x3d.jsail.Geometry2D.Circle2D')
ClipPlane = Java.type('org.web3d.x3d.jsail.Rendering.ClipPlane')
CollidableOffset = Java.type('org.web3d.x3d.jsail.RigidBodyPhysics.CollidableOffset')
CollidableShape = Java.type('org.web3d.x3d.jsail.RigidBodyPhysics.CollidableShape')
Collision = Java.type('org.web3d.x3d.jsail.Navigation.Collision')
CollisionCollection = Java.type('org.web3d.x3d.jsail.RigidBodyPhysics.CollisionCollection')
CollisionSensor = Java.type('org.web3d.x3d.jsail.RigidBodyPhysics.CollisionSensor')
CollisionSpace = Java.type('org.web3d.x3d.jsail.RigidBodyPhysics.CollisionSpace')
Color = Java.type('org.web3d.x3d.jsail.Rendering.Color')
ColorChaser = Java.type('org.web3d.x3d.jsail.Followers.ColorChaser')
ColorDamper = Java.type('org.web3d.x3d.jsail.Followers.ColorDamper')
ColorInterpolator = Java.type('org.web3d.x3d.jsail.Interpolation.ColorInterpolator')
ColorRGBA = Java.type('org.web3d.x3d.jsail.Rendering.ColorRGBA')
ComposedCubeMapTexture = Java.type('org.web3d.x3d.jsail.CubeMapTexturing.ComposedCubeMapTexture')
ComposedShader = Java.type('org.web3d.x3d.jsail.Shaders.ComposedShader')
ComposedTexture3D = Java.type('org.web3d.x3d.jsail.Texturing3D.ComposedTexture3D')
ComposedVolumeStyle = Java.type('org.web3d.x3d.jsail.VolumeRendering.ComposedVolumeStyle')
Cone = Java.type('org.web3d.x3d.jsail.Geometry3D.Cone')
ConeEmitter = Java.type('org.web3d.x3d.jsail.ParticleSystems.ConeEmitter')
Contact = Java.type('org.web3d.x3d.jsail.RigidBodyPhysics.Contact')
Contour2D = Java.type('org.web3d.x3d.jsail.NURBS.Contour2D')
ContourPolyline2D = Java.type('org.web3d.x3d.jsail.NURBS.ContourPolyline2D')
Convolver = Java.type('org.web3d.x3d.jsail.Sound.Convolver')
Coordinate = Java.type('org.web3d.x3d.jsail.Rendering.Coordinate')
CoordinateChaser = Java.type('org.web3d.x3d.jsail.Followers.CoordinateChaser')
CoordinateDamper = Java.type('org.web3d.x3d.jsail.Followers.CoordinateDamper')
CoordinateDouble = Java.type('org.web3d.x3d.jsail.Rendering.CoordinateDouble')
CoordinateInterpolator = Java.type('org.web3d.x3d.jsail.Interpolation.CoordinateInterpolator')
CoordinateInterpolator2D = Java.type('org.web3d.x3d.jsail.Interpolation.CoordinateInterpolator2D')
Cylinder = Java.type('org.web3d.x3d.jsail.Geometry3D.Cylinder')
CylinderSensor = Java.type('org.web3d.x3d.jsail.PointingDeviceSensor.CylinderSensor')
Delay = Java.type('org.web3d.x3d.jsail.Sound.Delay')
DirectionalLight = Java.type('org.web3d.x3d.jsail.Lighting.DirectionalLight')
DISEntityManager = Java.type('org.web3d.x3d.jsail.DIS.DISEntityManager')
DISEntityTypeMapping = Java.type('org.web3d.x3d.jsail.DIS.DISEntityTypeMapping')
Disk2D = Java.type('org.web3d.x3d.jsail.Geometry2D.Disk2D')
DoubleAxisHingeJoint = Java.type('org.web3d.x3d.jsail.RigidBodyPhysics.DoubleAxisHingeJoint')
DynamicsCompressor = Java.type('org.web3d.x3d.jsail.Sound.DynamicsCompressor')
EaseInEaseOut = Java.type('org.web3d.x3d.jsail.Interpolation.EaseInEaseOut')
EdgeEnhancementVolumeStyle = Java.type('org.web3d.x3d.jsail.VolumeRendering.EdgeEnhancementVolumeStyle')
ElevationGrid = Java.type('org.web3d.x3d.jsail.Geometry3D.ElevationGrid')
EspduTransform = Java.type('org.web3d.x3d.jsail.DIS.EspduTransform')
ExplosionEmitter = Java.type('org.web3d.x3d.jsail.ParticleSystems.ExplosionEmitter')
Extrusion = Java.type('org.web3d.x3d.jsail.Geometry3D.Extrusion')
FillProperties = Java.type('org.web3d.x3d.jsail.Shape.FillProperties')
FloatVertexAttribute = Java.type('org.web3d.x3d.jsail.Shaders.FloatVertexAttribute')
Fog = Java.type('org.web3d.x3d.jsail.EnvironmentalEffects.Fog')
FogCoordinate = Java.type('org.web3d.x3d.jsail.EnvironmentalEffects.FogCoordinate')
FontStyle = Java.type('org.web3d.x3d.jsail.Text.FontStyle')
ForcePhysicsModel = Java.type('org.web3d.x3d.jsail.ParticleSystems.ForcePhysicsModel')
Gain = Java.type('org.web3d.x3d.jsail.Sound.Gain')
GeneratedCubeMapTexture = Java.type('org.web3d.x3d.jsail.CubeMapTexturing.GeneratedCubeMapTexture')
GeoCoordinate = Java.type('org.web3d.x3d.jsail.Geospatial.GeoCoordinate')
GeoElevationGrid = Java.type('org.web3d.x3d.jsail.Geospatial.GeoElevationGrid')
GeoLocation = Java.type('org.web3d.x3d.jsail.Geospatial.GeoLocation')
GeoLOD = Java.type('org.web3d.x3d.jsail.Geospatial.GeoLOD')
GeoMetadata = Java.type('org.web3d.x3d.jsail.Geospatial.GeoMetadata')
GeoOrigin = Java.type('org.web3d.x3d.jsail.Geospatial.GeoOrigin')
GeoPositionInterpolator = Java.type('org.web3d.x3d.jsail.Geospatial.GeoPositionInterpolator')
GeoProximitySensor = Java.type('org.web3d.x3d.jsail.Geospatial.GeoProximitySensor')
GeoTouchSensor = Java.type('org.web3d.x3d.jsail.Geospatial.GeoTouchSensor')
GeoTransform = Java.type('org.web3d.x3d.jsail.Geospatial.GeoTransform')
GeoViewpoint = Java.type('org.web3d.x3d.jsail.Geospatial.GeoViewpoint')
Group = Java.type('org.web3d.x3d.jsail.Grouping.Group')
HAnimDisplacer = Java.type('org.web3d.x3d.jsail.HAnim.HAnimDisplacer')
HAnimHumanoid = Java.type('org.web3d.x3d.jsail.HAnim.HAnimHumanoid')
HAnimJoint = Java.type('org.web3d.x3d.jsail.HAnim.HAnimJoint')
HAnimMotion = Java.type('org.web3d.x3d.jsail.HAnim.HAnimMotion')
HAnimSegment = Java.type('org.web3d.x3d.jsail.HAnim.HAnimSegment')
HAnimSite = Java.type('org.web3d.x3d.jsail.HAnim.HAnimSite')
ImageCubeMapTexture = Java.type('org.web3d.x3d.jsail.CubeMapTexturing.ImageCubeMapTexture')
ImageTexture = Java.type('org.web3d.x3d.jsail.Texturing.ImageTexture')
ImageTexture3D = Java.type('org.web3d.x3d.jsail.Texturing3D.ImageTexture3D')
IndexedFaceSet = Java.type('org.web3d.x3d.jsail.Geometry3D.IndexedFaceSet')
IndexedLineSet = Java.type('org.web3d.x3d.jsail.Rendering.IndexedLineSet')
IndexedQuadSet = Java.type('org.web3d.x3d.jsail.CADGeometry.IndexedQuadSet')
IndexedTriangleFanSet = Java.type('org.web3d.x3d.jsail.Rendering.IndexedTriangleFanSet')
IndexedTriangleSet = Java.type('org.web3d.x3d.jsail.Rendering.IndexedTriangleSet')
IndexedTriangleStripSet = Java.type('org.web3d.x3d.jsail.Rendering.IndexedTriangleStripSet')
Inline = Java.type('org.web3d.x3d.jsail.Networking.Inline')
IntegerSequencer = Java.type('org.web3d.x3d.jsail.EventUtilities.IntegerSequencer')
IntegerTrigger = Java.type('org.web3d.x3d.jsail.EventUtilities.IntegerTrigger')
IsoSurfaceVolumeData = Java.type('org.web3d.x3d.jsail.VolumeRendering.IsoSurfaceVolumeData')
KeySensor = Java.type('org.web3d.x3d.jsail.KeyDeviceSensor.KeySensor')
Layer = Java.type('org.web3d.x3d.jsail.Layering.Layer')
LayerSet = Java.type('org.web3d.x3d.jsail.Layering.LayerSet')
Layout = Java.type('org.web3d.x3d.jsail.Layout.Layout')
LayoutGroup = Java.type('org.web3d.x3d.jsail.Layout.LayoutGroup')
LayoutLayer = Java.type('org.web3d.x3d.jsail.Layout.LayoutLayer')
LinePickSensor = Java.type('org.web3d.x3d.jsail.Picking.LinePickSensor')
LineProperties = Java.type('org.web3d.x3d.jsail.Shape.LineProperties')
LineSet = Java.type('org.web3d.x3d.jsail.Rendering.LineSet')
ListenerPointSource = Java.type('org.web3d.x3d.jsail.Sound.ListenerPointSource')
LoadSensor = Java.type('org.web3d.x3d.jsail.Networking.LoadSensor')
LocalFog = Java.type('org.web3d.x3d.jsail.EnvironmentalEffects.LocalFog')
LOD = Java.type('org.web3d.x3d.jsail.Navigation.LOD')
Material = Java.type('org.web3d.x3d.jsail.Shape.Material')
Matrix3VertexAttribute = Java.type('org.web3d.x3d.jsail.Shaders.Matrix3VertexAttribute')
Matrix4VertexAttribute = Java.type('org.web3d.x3d.jsail.Shaders.Matrix4VertexAttribute')
MetadataBoolean = Java.type('org.web3d.x3d.jsail.Core.MetadataBoolean')
MetadataDouble = Java.type('org.web3d.x3d.jsail.Core.MetadataDouble')
MetadataFloat = Java.type('org.web3d.x3d.jsail.Core.MetadataFloat')
MetadataInteger = Java.type('org.web3d.x3d.jsail.Core.MetadataInteger')
MetadataSet = Java.type('org.web3d.x3d.jsail.Core.MetadataSet')
MetadataString = Java.type('org.web3d.x3d.jsail.Core.MetadataString')
MicrophoneSource = Java.type('org.web3d.x3d.jsail.Sound.MicrophoneSource')
MotorJoint = Java.type('org.web3d.x3d.jsail.RigidBodyPhysics.MotorJoint')
MovieTexture = Java.type('org.web3d.x3d.jsail.Texturing.MovieTexture')
MultiTexture = Java.type('org.web3d.x3d.jsail.Texturing.MultiTexture')
MultiTextureCoordinate = Java.type('org.web3d.x3d.jsail.Texturing.MultiTextureCoordinate')
MultiTextureTransform = Java.type('org.web3d.x3d.jsail.Texturing.MultiTextureTransform')
NavigationInfo = Java.type('org.web3d.x3d.jsail.Navigation.NavigationInfo')
Normal = Java.type('org.web3d.x3d.jsail.Rendering.Normal')
NormalInterpolator = Java.type('org.web3d.x3d.jsail.Interpolation.NormalInterpolator')
NurbsCurve = Java.type('org.web3d.x3d.jsail.NURBS.NurbsCurve')
NurbsCurve2D = Java.type('org.web3d.x3d.jsail.NURBS.NurbsCurve2D')
NurbsOrientationInterpolator = Java.type('org.web3d.x3d.jsail.NURBS.NurbsOrientationInterpolator')
NurbsPatchSurface = Java.type('org.web3d.x3d.jsail.NURBS.NurbsPatchSurface')
NurbsPositionInterpolator = Java.type('org.web3d.x3d.jsail.NURBS.NurbsPositionInterpolator')
NurbsSet = Java.type('org.web3d.x3d.jsail.NURBS.NurbsSet')
NurbsSurfaceInterpolator = Java.type('org.web3d.x3d.jsail.NURBS.NurbsSurfaceInterpolator')
NurbsSweptSurface = Java.type('org.web3d.x3d.jsail.NURBS.NurbsSweptSurface')
NurbsSwungSurface = Java.type('org.web3d.x3d.jsail.NURBS.NurbsSwungSurface')
NurbsTextureCoordinate = Java.type('org.web3d.x3d.jsail.NURBS.NurbsTextureCoordinate')
NurbsTrimmedSurface = Java.type('org.web3d.x3d.jsail.NURBS.NurbsTrimmedSurface')
OpacityMapVolumeStyle = Java.type('org.web3d.x3d.jsail.VolumeRendering.OpacityMapVolumeStyle')
OrientationChaser = Java.type('org.web3d.x3d.jsail.Followers.OrientationChaser')
OrientationDamper = Java.type('org.web3d.x3d.jsail.Followers.OrientationDamper')
OrientationInterpolator = Java.type('org.web3d.x3d.jsail.Interpolation.OrientationInterpolator')
OrthoViewpoint = Java.type('org.web3d.x3d.jsail.Navigation.OrthoViewpoint')
OscillatorSource = Java.type('org.web3d.x3d.jsail.Sound.OscillatorSource')
PackagedShader = Java.type('org.web3d.x3d.jsail.Shaders.PackagedShader')
ParticleSystem = Java.type('org.web3d.x3d.jsail.ParticleSystems.ParticleSystem')
PeriodicWave = Java.type('org.web3d.x3d.jsail.Sound.PeriodicWave')
PhysicalMaterial = Java.type('org.web3d.x3d.jsail.Shape.PhysicalMaterial')
PickableGroup = Java.type('org.web3d.x3d.jsail.Picking.PickableGroup')
PixelTexture = Java.type('org.web3d.x3d.jsail.Texturing.PixelTexture')
PixelTexture3D = Java.type('org.web3d.x3d.jsail.Texturing3D.PixelTexture3D')
PlaneSensor = Java.type('org.web3d.x3d.jsail.PointingDeviceSensor.PlaneSensor')
PointEmitter = Java.type('org.web3d.x3d.jsail.ParticleSystems.PointEmitter')
PointLight = Java.type('org.web3d.x3d.jsail.Lighting.PointLight')
PointPickSensor = Java.type('org.web3d.x3d.jsail.Picking.PointPickSensor')
PointProperties = Java.type('org.web3d.x3d.jsail.Shape.PointProperties')
PointSet = Java.type('org.web3d.x3d.jsail.Rendering.PointSet')
Polyline2D = Java.type('org.web3d.x3d.jsail.Geometry2D.Polyline2D')
PolylineEmitter = Java.type('org.web3d.x3d.jsail.ParticleSystems.PolylineEmitter')
Polypoint2D = Java.type('org.web3d.x3d.jsail.Geometry2D.Polypoint2D')
PositionChaser = Java.type('org.web3d.x3d.jsail.Followers.PositionChaser')
PositionChaser2D = Java.type('org.web3d.x3d.jsail.Followers.PositionChaser2D')
PositionDamper = Java.type('org.web3d.x3d.jsail.Followers.PositionDamper')
PositionDamper2D = Java.type('org.web3d.x3d.jsail.Followers.PositionDamper2D')
PositionInterpolator = Java.type('org.web3d.x3d.jsail.Interpolation.PositionInterpolator')
PositionInterpolator2D = Java.type('org.web3d.x3d.jsail.Interpolation.PositionInterpolator2D')
PrimitivePickSensor = Java.type('org.web3d.x3d.jsail.Picking.PrimitivePickSensor')
ProgramShader = Java.type('org.web3d.x3d.jsail.Shaders.ProgramShader')
ProjectionVolumeStyle = Java.type('org.web3d.x3d.jsail.VolumeRendering.ProjectionVolumeStyle')
ProtoInstance = Java.type('org.web3d.x3d.jsail.Core.ProtoInstance')
ProximitySensor = Java.type('org.web3d.x3d.jsail.EnvironmentalSensor.ProximitySensor')
QuadSet = Java.type('org.web3d.x3d.jsail.CADGeometry.QuadSet')
ReceiverPdu = Java.type('org.web3d.x3d.jsail.DIS.ReceiverPdu')
Rectangle2D = Java.type('org.web3d.x3d.jsail.Geometry2D.Rectangle2D')
RigidBody = Java.type('org.web3d.x3d.jsail.RigidBodyPhysics.RigidBody')
RigidBodyCollection = Java.type('org.web3d.x3d.jsail.RigidBodyPhysics.RigidBodyCollection')
ScalarChaser = Java.type('org.web3d.x3d.jsail.Followers.ScalarChaser')
ScalarDamper = Java.type('org.web3d.x3d.jsail.Followers.ScalarDamper')
ScalarInterpolator = Java.type('org.web3d.x3d.jsail.Interpolation.ScalarInterpolator')
ScreenFontStyle = Java.type('org.web3d.x3d.jsail.Layout.ScreenFontStyle')
ScreenGroup = Java.type('org.web3d.x3d.jsail.Layout.ScreenGroup')
Script = Java.type('org.web3d.x3d.jsail.Scripting.Script')
SegmentedVolumeData = Java.type('org.web3d.x3d.jsail.VolumeRendering.SegmentedVolumeData')
ShadedVolumeStyle = Java.type('org.web3d.x3d.jsail.VolumeRendering.ShadedVolumeStyle')
ShaderPart = Java.type('org.web3d.x3d.jsail.Shaders.ShaderPart')
ShaderProgram = Java.type('org.web3d.x3d.jsail.Shaders.ShaderProgram')
Shape = Java.type('org.web3d.x3d.jsail.Shape.Shape')
SignalPdu = Java.type('org.web3d.x3d.jsail.DIS.SignalPdu')
SilhouetteEnhancementVolumeStyle = Java.type('org.web3d.x3d.jsail.VolumeRendering.SilhouetteEnhancementVolumeStyle')
SingleAxisHingeJoint = Java.type('org.web3d.x3d.jsail.RigidBodyPhysics.SingleAxisHingeJoint')
SliderJoint = Java.type('org.web3d.x3d.jsail.RigidBodyPhysics.SliderJoint')
Sound = Java.type('org.web3d.x3d.jsail.Sound.Sound')
SpatialSound = Java.type('org.web3d.x3d.jsail.Sound.SpatialSound')
Sphere = Java.type('org.web3d.x3d.jsail.Geometry3D.Sphere')
SphereSensor = Java.type('org.web3d.x3d.jsail.PointingDeviceSensor.SphereSensor')
SplinePositionInterpolator = Java.type('org.web3d.x3d.jsail.Interpolation.SplinePositionInterpolator')
SplinePositionInterpolator2D = Java.type('org.web3d.x3d.jsail.Interpolation.SplinePositionInterpolator2D')
SplineScalarInterpolator = Java.type('org.web3d.x3d.jsail.Interpolation.SplineScalarInterpolator')
SpotLight = Java.type('org.web3d.x3d.jsail.Lighting.SpotLight')
SquadOrientationInterpolator = Java.type('org.web3d.x3d.jsail.Interpolation.SquadOrientationInterpolator')
StaticGroup = Java.type('org.web3d.x3d.jsail.Grouping.StaticGroup')
StreamAudioDestination = Java.type('org.web3d.x3d.jsail.Sound.StreamAudioDestination')
StreamAudioSource = Java.type('org.web3d.x3d.jsail.Sound.StreamAudioSource')
StringSensor = Java.type('org.web3d.x3d.jsail.KeyDeviceSensor.StringSensor')
SurfaceEmitter = Java.type('org.web3d.x3d.jsail.ParticleSystems.SurfaceEmitter')
Switch = Java.type('org.web3d.x3d.jsail.Grouping.Switch')
TexCoordChaser2D = Java.type('org.web3d.x3d.jsail.Followers.TexCoordChaser2D')
TexCoordDamper2D = Java.type('org.web3d.x3d.jsail.Followers.TexCoordDamper2D')
Text = Java.type('org.web3d.x3d.jsail.Text.Text')
TextureBackground = Java.type('org.web3d.x3d.jsail.EnvironmentalEffects.TextureBackground')
TextureCoordinate = Java.type('org.web3d.x3d.jsail.Texturing.TextureCoordinate')
TextureCoordinate3D = Java.type('org.web3d.x3d.jsail.Texturing3D.TextureCoordinate3D')
TextureCoordinate4D = Java.type('org.web3d.x3d.jsail.Texturing3D.TextureCoordinate4D')
TextureCoordinateGenerator = Java.type('org.web3d.x3d.jsail.Texturing.TextureCoordinateGenerator')
TextureProjector = Java.type('org.web3d.x3d.jsail.TextureProjection.TextureProjector')
TextureProjectorParallel = Java.type('org.web3d.x3d.jsail.TextureProjection.TextureProjectorParallel')
TextureProperties = Java.type('org.web3d.x3d.jsail.Texturing.TextureProperties')
TextureTransform = Java.type('org.web3d.x3d.jsail.Texturing.TextureTransform')
TextureTransform3D = Java.type('org.web3d.x3d.jsail.Texturing3D.TextureTransform3D')
TextureTransformMatrix3D = Java.type('org.web3d.x3d.jsail.Texturing3D.TextureTransformMatrix3D')
TimeSensor = Java.type('org.web3d.x3d.jsail.Time.TimeSensor')
TimeTrigger = Java.type('org.web3d.x3d.jsail.EventUtilities.TimeTrigger')
ToneMappedVolumeStyle = Java.type('org.web3d.x3d.jsail.VolumeRendering.ToneMappedVolumeStyle')
TouchSensor = Java.type('org.web3d.x3d.jsail.PointingDeviceSensor.TouchSensor')
Transform = Java.type('org.web3d.x3d.jsail.Grouping.Transform')
TransformSensor = Java.type('org.web3d.x3d.jsail.EnvironmentalSensor.TransformSensor')
TransmitterPdu = Java.type('org.web3d.x3d.jsail.DIS.TransmitterPdu')
TriangleFanSet = Java.type('org.web3d.x3d.jsail.Rendering.TriangleFanSet')
TriangleSet = Java.type('org.web3d.x3d.jsail.Rendering.TriangleSet')
TriangleSet2D = Java.type('org.web3d.x3d.jsail.Geometry2D.TriangleSet2D')
TriangleStripSet = Java.type('org.web3d.x3d.jsail.Rendering.TriangleStripSet')
TwoSidedMaterial = Java.type('org.web3d.x3d.jsail.Shape.TwoSidedMaterial')
UniversalJoint = Java.type('org.web3d.x3d.jsail.RigidBodyPhysics.UniversalJoint')
UnlitMaterial = Java.type('org.web3d.x3d.jsail.Shape.UnlitMaterial')
Viewpoint = Java.type('org.web3d.x3d.jsail.Navigation.Viewpoint')
ViewpointGroup = Java.type('org.web3d.x3d.jsail.Navigation.ViewpointGroup')
Viewport = Java.type('org.web3d.x3d.jsail.Layering.Viewport')
VisibilitySensor = Java.type('org.web3d.x3d.jsail.EnvironmentalSensor.VisibilitySensor')
VolumeData = Java.type('org.web3d.x3d.jsail.VolumeRendering.VolumeData')
VolumeEmitter = Java.type('org.web3d.x3d.jsail.ParticleSystems.VolumeEmitter')
VolumePickSensor = Java.type('org.web3d.x3d.jsail.Picking.VolumePickSensor')
WaveShaper = Java.type('org.web3d.x3d.jsail.Sound.WaveShaper')
WindPhysicsModel = Java.type('org.web3d.x3d.jsail.ParticleSystems.WindPhysicsModel')
WorldInfo = Java.type('org.web3d.x3d.jsail.Core.WorldInfo')
component = Java.type('org.web3d.x3d.jsail.Core.component')
connect = Java.type('org.web3d.x3d.jsail.Core.connect')
EXPORT = Java.type('org.web3d.x3d.jsail.Networking.EXPORT')
ExternProtoDeclare = Java.type('org.web3d.x3d.jsail.Core.ExternProtoDeclare')
field = Java.type('org.web3d.x3d.jsail.Core.field')
fieldValue = Java.type('org.web3d.x3d.jsail.Core.fieldValue')
head = Java.type('org.web3d.x3d.jsail.Core.head')
IMPORT = Java.type('org.web3d.x3d.jsail.Networking.IMPORT')
IS = Java.type('org.web3d.x3d.jsail.Core.IS')
meta = Java.type('org.web3d.x3d.jsail.Core.meta')
ProtoBody = Java.type('org.web3d.x3d.jsail.Core.ProtoBody')
ProtoDeclare = Java.type('org.web3d.x3d.jsail.Core.ProtoDeclare')
ProtoInterface = Java.type('org.web3d.x3d.jsail.Core.ProtoInterface')
ROUTE = Java.type('org.web3d.x3d.jsail.Core.ROUTE')
Scene = Java.type('org.web3d.x3d.jsail.Core.Scene')
unit = Java.type('org.web3d.x3d.jsail.Core.unit')
X3D = Java.type('org.web3d.x3d.jsail.Core.X3D')
SFBool = Java.type('org.web3d.x3d.jsail.fields.SFBool')
MFBool = Java.type('org.web3d.x3d.jsail.fields.MFBool')
SFColor = Java.type('org.web3d.x3d.jsail.fields.SFColor')
MFColor = Java.type('org.web3d.x3d.jsail.fields.MFColor')
SFColorRGBA = Java.type('org.web3d.x3d.jsail.fields.SFColorRGBA')
MFColorRGBA = Java.type('org.web3d.x3d.jsail.fields.MFColorRGBA')
SFDouble = Java.type('org.web3d.x3d.jsail.fields.SFDouble')
MFDouble = Java.type('org.web3d.x3d.jsail.fields.MFDouble')
SFFloat = Java.type('org.web3d.x3d.jsail.fields.SFFloat')
MFFloat = Java.type('org.web3d.x3d.jsail.fields.MFFloat')
SFImage = Java.type('org.web3d.x3d.jsail.fields.SFImage')
MFImage = Java.type('org.web3d.x3d.jsail.fields.MFImage')
SFInt32 = Java.type('org.web3d.x3d.jsail.fields.SFInt32')
MFInt32 = Java.type('org.web3d.x3d.jsail.fields.MFInt32')
SFMatrix3d = Java.type('org.web3d.x3d.jsail.fields.SFMatrix3d')
MFMatrix3d = Java.type('org.web3d.x3d.jsail.fields.MFMatrix3d')
SFMatrix3f = Java.type('org.web3d.x3d.jsail.fields.SFMatrix3f')
MFMatrix3f = Java.type('org.web3d.x3d.jsail.fields.MFMatrix3f')
SFMatrix4d = Java.type('org.web3d.x3d.jsail.fields.SFMatrix4d')
MFMatrix4d = Java.type('org.web3d.x3d.jsail.fields.MFMatrix4d')
SFMatrix4f = Java.type('org.web3d.x3d.jsail.fields.SFMatrix4f')
MFMatrix4f = Java.type('org.web3d.x3d.jsail.fields.MFMatrix4f')
SFNode = Java.type('org.web3d.x3d.jsail.fields.SFNode')
MFNode = Java.type('org.web3d.x3d.jsail.fields.MFNode')
SFRotation = Java.type('org.web3d.x3d.jsail.fields.SFRotation')
MFRotation = Java.type('org.web3d.x3d.jsail.fields.MFRotation')
SFString = Java.type('org.web3d.x3d.jsail.fields.SFString')
MFString = Java.type('org.web3d.x3d.jsail.fields.MFString')
SFTime = Java.type('org.web3d.x3d.jsail.fields.SFTime')
MFTime = Java.type('org.web3d.x3d.jsail.fields.MFTime')
SFVec2d = Java.type('org.web3d.x3d.jsail.fields.SFVec2d')
MFVec2d = Java.type('org.web3d.x3d.jsail.fields.MFVec2d')
SFVec2f = Java.type('org.web3d.x3d.jsail.fields.SFVec2f')
MFVec2f = Java.type('org.web3d.x3d.jsail.fields.MFVec2f')
SFVec3d = Java.type('org.web3d.x3d.jsail.fields.SFVec3d')
MFVec3d = Java.type('org.web3d.x3d.jsail.fields.MFVec3d')
SFVec3f = Java.type('org.web3d.x3d.jsail.fields.SFVec3f')
MFVec3f = Java.type('org.web3d.x3d.jsail.fields.MFVec3f')
SFVec4d = Java.type('org.web3d.x3d.jsail.fields.SFVec4d')
MFVec4d = Java.type('org.web3d.x3d.jsail.fields.MFVec4d')
SFVec4f = Java.type('org.web3d.x3d.jsail.fields.SFVec4f')
MFVec4f = Java.type('org.web3d.x3d.jsail.fields.MFVec4f')
var ConfigurationProperties = Packages.org.web3d.x3d.jsail.ConfigurationProperties;
ConfigurationProperties.showDefaultAttributes = false;
ConfigurationProperties.xsltEngine = ConfigurationProperties.XSLT_ENGINE_NATIVE_JAVA;
ConfigurationProperties.deleteIntermediateFiles = false;
ConfigurationProperties.setStripTrailingZeroes(true);
ConfigurationProperties.setStripDefaultAttributes(true);
function doubleToFloat(d) {
    if (Float32Array)
	return new Float32Array([d])[0];
}
      var X3D0 =  new X3D().setProfile("Immersive").setVersion("4.0")
      .setHead(new head()
        .addComponent(new component().setName("HAnim").setLevel(1))
        .addMeta(new meta().setName("title").setContent("Humanoid1.x3d"))
        .addMeta(new meta().setName("identifier").setContent("http://www.web3d.org/x3d/content/examples/HumanoidAnimation/Humanoid1.x3d"))
        .addMeta(new meta().setName("description").setContent("An attempt at a standard LOA-4 skeleton"))
        .addMeta(new meta().setName("generator").setContent("h2.pl"))
        .addMeta(new meta().setName("modified").setContent("14 Jan 2023"))
        .addMeta(new meta().setName("creator").setContent("John Carlson"))
        .addMeta(new meta().setName("created").setContent("9 November 2020"))
        .addMeta(new meta().setName("license").setContent("../license.html")))
      .setScene(new Scene()
        .addChild(new Transform()
          .addComments(new CommentsBlock("DEF for markerfor XYZ axes"))
          .addChild(new Shape().setDEF("AxisLinesShape")
            .addComments(new CommentsBlock("RGB lines showing XYZ axes"))
            .setGeometry(new IndexedLineSet().setColorIndex(Java.to([0,1,2], Java.type("int[]"))).setColorPerVertex(false).setCoordIndex(Java.to([0,1,-1,0,2,-1,0,3,-1], Java.type("int[]")))
              .setCoord(new Coordinate().setPoint(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.1)], Java.type("float[]"))))
              .setColor(new Color().setColor(Java.to([doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.6),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1)], Java.type("float[]")))))))
        .addChild(new Group()
          .addComments(new CommentsBlock("DEFS for markers of skeleton joints, segments, and sites"))
          .addChild(new Transform()
            .addChild(new Transform().setTranslation(Java.to([doubleToFloat(0),doubleToFloat(2),doubleToFloat(0)], Java.type("float[]")))
              .addChild(new Shape().setDEF("HAnimRootShape")
                .setGeometry(new Sphere().setRadius(0.02))
                .setAppearance(new Appearance()
                  .setMaterial(new Material().setDEF("HAnimRootMaterial").setDiffuseColor(Java.to([doubleToFloat(0.8),doubleToFloat(0),doubleToFloat(0)], Java.type("float[]"))).setTransparency(0.3)))))
            .addChild(new Transform().setTranslation(Java.to([doubleToFloat(0),doubleToFloat(2.1),doubleToFloat(0)], Java.type("float[]")))
              .addChild(new Shape().setDEF("HAnimJointShape")
                .setGeometry(new Sphere().setRadius(0.02))
                .setAppearance(new Appearance()
                  .setMaterial(new Material().setDEF("HAnimJointMaterial").setDiffuseColor(Java.to([doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.8)], Java.type("float[]"))).setTransparency(0.3)))))
            .addChild(new Transform().setTranslation(Java.to([doubleToFloat(0),doubleToFloat(2.05),doubleToFloat(0)], Java.type("float[]")))
              .addChild(new Shape().setDEF("HAnimSegmentLine")
                .setGeometry(new LineSet().setVertexCount(Java.to([2], Java.type("int[]")))
                  .setColor(new ColorRGBA().setDEF("HAnimSegmentLineColorRGBA").setColor(Java.to([doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0.1)], Java.type("float[]"))))
                  .setCoord(new Coordinate().setPoint(Java.to([doubleToFloat(-0.05),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.05),doubleToFloat(0),doubleToFloat(0)], Java.type("float[]")))))))
            .addChild(new Transform().setTranslation(Java.to([doubleToFloat(0),doubleToFloat(2.1),doubleToFloat(0)], Java.type("float[]")))
              .addChild(new Shape().setDEF("HAnimSiteShape")
                .setGeometry(new IndexedFaceSet().setDEF("DiamondIFS").setCreaseAngle(0.5).setSolid(false).setCoordIndex(Java.to([0,1,2,-1,0,2,3,-1,0,3,4,-1,0,4,1,-1,5,2,1,-1,5,3,2,-1,5,4,3,-1,5,1,4,-1], Java.type("int[]")))
                  .setColor(new ColorRGBA().setDEF("HAnimSiteColorRGBA").setColor(Java.to([doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0.1),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0.1),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0.1)], Java.type("float[]"))))
                  .setCoord(new Coordinate().setPoint(Java.to([doubleToFloat(0),doubleToFloat(0.01),doubleToFloat(0),doubleToFloat(-0.01),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0.01),doubleToFloat(0.01),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(-0.01),doubleToFloat(0),doubleToFloat(-0.01),doubleToFloat(0)], Java.type("float[]")))))
                .setAppearance(new Appearance()
                  .setMaterial(new Material().setDiffuseColor(Java.to([doubleToFloat(1),doubleToFloat(1),doubleToFloat(0)], Java.type("float[]"))).setTransparency(0.3)))))))
        .addChild(new NavigationInfo().setSpeed(1.5))
        .addChild(new Viewpoint().setDescription("default"))
        .addChild(new HAnimHumanoid().setName("HAnim").setDEF("hanim_HAnim").setInfo(Java.to(["humanoidVersion=2.0"], Java.type("java.lang.String[]"))).setVersion("2.0")
          .addComments(new CommentsBlock("<LOD containerField='skin'> (Switch whichChoice='0' and LOD parents each already work in view3dscene)"))
          .addComments(new CommentsBlock("</LOD>"))
          .addSkin(new Shape().setDEF("SkinShape").setContainerFieldOverride("skin")
            .setGeometry(new IndexedFaceSet().setCoordIndex(Java.to([0,9,5,-1,0,7,9,-1,0,5,1,-1,1,5,2,-1,1,3,7,-1,2,4,3,-1,0,1,7,-1,1,2,3,-1,5,6,2,-1,7,3,8,-1,6,4,2,-1,3,4,8,-1,9,6,5,-1,9,7,8,-1,4,6,10,-1,4,10,12,-1,4,12,8,-1,10,11,12,-1,9,75,24,-1,9,24,74,-1,9,8,75,-1,9,74,6,-1,10,6,74,-1,12,75,8,-1,74,24,29,-1,24,77,29,-1,10,74,29,-1,77,32,29,-1,32,78,29,-1,78,30,29,-1,30,10,29,-1,41,24,75,-1,41,75,12,-1,41,12,42,-1,41,42,80,-1,41,80,44,-1,41,44,79,-1,41,79,24,-1,81,24,79,-1,81,77,24,-1,81,25,77,-1,81,79,25,-1,25,79,44,-1,25,32,77,-1,25,83,32,-1,25,26,83,-1,25,27,26,-1,25,84,27,-1,25,44,84,-1,11,10,30,-1,11,30,13,-1,11,13,15,-1,11,15,14,-1,11,14,42,-1,11,42,12,-1,15,13,16,-1,15,18,14,-1,15,16,76,-1,15,76,18,-1,76,16,17,-1,76,17,82,-1,76,82,19,-1,76,19,18,-1,22,18,19,-1,22,87,18,-1,22,27,84,-1,22,84,87,-1,87,84,85,-1,85,84,44,-1,85,42,14,-1,87,14,18,-1,87,85,14,-1,20,83,26,-1,20,17,16,-1,20,16,88,-1,20,88,83,-1,88,16,13,-1,88,13,86,-1,88,86,83,-1,86,13,30,-1,86,32,83,-1,23,89,22,-1,89,27,22,-1,89,91,27,-1,91,26,27,-1,91,20,26,-1,21,20,91,-1,21,17,20,-1,21,92,17,-1,82,17,92,-1,82,90,19,-1,23,22,19,-1,23,19,90,-1,82,92,101,-1,82,101,99,-1,82,99,93,-1,82,93,95,-1,82,95,97,-1,82,97,90,-1,23,90,97,-1,23,97,94,-1,23,94,89,-1,89,94,96,-1,89,96,95,-1,89,95,93,-1,89,93,91,-1,91,93,99,-1,91,99,100,-1,91,100,98,-1,21,91,98,-1,21,98,101,-1,21,101,92,-1,85,105,42,-1,85,103,105,-1,85,44,103,-1,103,44,104,-1,80,42,105,-1,80,105,102,-1,80,102,104,-1,80,104,44,-1,105,109,102,-1,102,109,47,-1,47,104,102,-1,104,47,45,-1,104,45,103,-1,103,45,46,-1,103,46,109,-1,103,109,105,-1,109,112,110,-1,109,110,47,-1,47,110,111,-1,47,111,45,-1,45,111,113,-1,113,46,45,-1,46,113,112,-1,112,109,46,-1,112,118,110,-1,110,118,115,-1,110,115,111,-1,111,115,117,-1,111,117,113,-1,113,117,116,-1,113,116,112,-1,112,116,118,-1,115,118,119,-1,119,118,122,-1,118,116,122,-1,122,116,120,-1,116,117,120,-1,120,117,121,-1,117,115,121,-1,115,119,121,-1,119,127,123,-1,119,122,127,-1,122,126,127,-1,122,128,126,-1,122,120,128,-1,120,124,128,-1,120,121,124,-1,121,125,124,-1,121,119,125,-1,119,123,125,-1,127,129,123,-1,127,126,129,-1,129,126,141,-1,141,126,143,-1,126,142,143,-1,126,128,142,-1,128,124,130,-1,142,128,130,-1,124,132,130,-1,124,134,132,-1,125,134,124,-1,125,136,134,-1,125,137,136,-1,125,135,137,-1,125,133,135,-1,125,123,133,-1,123,131,133,-1,123,129,131,-1,131,129,138,-1,129,141,138,-1,138,141,144,-1,141,143,144,-1,143,146,144,-1,142,146,143,-1,142,145,146,-1,139,145,142,-1,130,139,142,-1,139,130,132,-1,139,132,154,-1,132,157,154,-1,132,159,157,-1,132,134,159,-1,134,136,159,-1,136,161,159,-1,136,137,161,-1,137,162,161,-1,160,162,137,-1,135,160,137,-1,133,160,135,-1,133,158,160,-1,131,158,133,-1,156,158,131,-1,153,156,131,-1,131,138,153,-1,138,155,153,-1,140,155,138,-1,138,144,140,-1,144,147,140,-1,140,147,145,-1,140,145,139,-1,139,155,140,-1,154,155,139,-1,146,149,144,-1,146,151,149,-1,145,151,146,-1,150,151,145,-1,145,152,150,-1,147,152,145,-1,147,149,152,-1,147,144,149,-1,148,149,151,-1,148,152,149,-1,148,150,152,-1,148,151,150,-1,160,207,162,-1,160,205,207,-1,165,208,205,-1,160,165,205,-1,158,165,160,-1,161,162,207,-1,161,207,206,-1,165,206,208,-1,206,165,161,-1,161,165,159,-1,207,209,211,-1,205,209,207,-1,205,212,209,-1,205,208,212,-1,206,212,208,-1,206,210,212,-1,206,207,210,-1,207,211,210,-1,209,212,213,-1,212,216,213,-1,212,214,216,-1,210,214,212,-1,210,215,214,-1,210,211,215,-1,209,215,211,-1,209,213,215,-1,217,213,216,-1,217,215,213,-1,217,214,215,-1,217,216,214,-1,158,194,165,-1,192,194,158,-1,164,195,192,-1,158,164,192,-1,156,164,158,-1,159,194,165,-1,159,194,193,-1,159,193,195,-1,159,195,164,-1,159,164,157,-1,157,164,180,-1,192,198,194,-1,192,196,198,-1,192,195,196,-1,195,199,196,-1,196,199,200,-1,199,203,200,-1,193,199,195,-1,193,197,199,-1,193,198,197,-1,193,194,198,-1,199,201,203,-1,197,201,199,-1,197,198,201,-1,198,202,201,-1,196,202,198,-1,200,202,196,-1,204,202,200,-1,204,201,202,-1,204,203,201,-1,204,200,203,-1,156,181,164,-1,156,179,181,-1,156,182,179,-1,156,163,182,-1,163,180,182,-1,157,180,163,-1,164,181,180,-1,179,182,183,-1,182,186,183,-1,182,184,186,-1,180,184,182,-1,180,181,184,-1,181,185,184,-1,179,185,181,-1,183,185,179,-1,183,186,187,-1,186,190,187,-1,184,190,186,-1,184,188,190,-1,184,185,188,-1,185,189,188,-1,185,183,189,-1,183,187,189,-1,191,189,187,-1,191,188,189,-1,191,190,188,-1,191,187,190,-1,153,163,156,-1,153,168,163,-1,153,166,168,-1,153,169,166,-1,155,169,153,-1,155,167,169,-1,154,167,155,-1,154,163,167,-1,154,157,163,-1,163,168,167,-1,166,169,170,-1,169,173,170,-1,169,171,173,-1,169,167,171,-1,167,168,171,-1,168,172,171,-1,168,170,172,-1,170,168,166,-1,170,173,174,-1,173,177,174,-1,173,175,177,-1,173,171,175,-1,171,172,175,-1,172,176,175,-1,172,174,176,-1,170,174,172,-1,178,176,174,-1,178,175,176,-1,178,177,175,-1,178,174,177,-1,86,30,221,-1,86,221,219,-1,86,219,32,-1,32,219,220,-1,78,32,220,-1,78,220,218,-1,78,218,221,-1,78,221,30,-1,221,225,219,-1,219,225,35,-1,35,33,219,-1,33,220,219,-1,33,34,220,-1,220,34,218,-1,221,218,34,-1,34,225,221,-1,225,226,228,-1,225,228,35,-1,35,228,229,-1,35,229,33,-1,33,229,227,-1,33,227,34,-1,34,227,226,-1,34,226,225,-1,226,234,228,-1,228,234,232,-1,232,229,228,-1,232,233,229,-1,229,233,227,-1,227,233,231,-1,227,231,226,-1,226,231,234,-1,231,235,234,-1,235,238,234,-1,234,238,232,-1,238,236,232,-1,232,236,233,-1,236,237,233,-1,233,237,231,-1,231,237,235,-1,235,239,243,-1,235,243,238,-1,238,243,242,-1,238,242,244,-1,238,244,236,-1,236,244,240,-1,236,240,237,-1,237,240,241,-1,237,241,235,-1,235,241,239,-1,243,239,245,-1,243,245,242,-1,245,257,242,-1,257,259,242,-1,242,259,258,-1,242,258,244,-1,244,246,240,-1,258,246,244,-1,240,246,248,-1,240,248,250,-1,241,240,250,-1,241,250,252,-1,241,252,253,-1,241,253,251,-1,241,251,249,-1,241,249,239,-1,239,249,247,-1,239,247,245,-1,247,254,245,-1,245,254,257,-1,254,260,257,-1,257,260,259,-1,259,260,262,-1,258,259,262,-1,258,262,261,-1,255,258,261,-1,246,258,255,-1,255,248,246,-1,255,270,248,-1,248,270,273,-1,248,273,275,-1,248,275,250,-1,250,275,252,-1,252,275,277,-1,252,277,253,-1,253,277,278,-1,276,253,278,-1,251,253,276,-1,249,251,276,-1,249,276,274,-1,247,249,274,-1,272,247,274,-1,269,247,272,-1,247,269,254,-1,254,269,271,-1,256,254,271,-1,254,256,260,-1,260,256,263,-1,256,261,263,-1,256,255,261,-1,255,256,271,-1,270,255,271,-1,262,260,265,-1,262,265,267,-1,261,262,267,-1,266,261,267,-1,261,266,268,-1,263,261,268,-1,263,268,265,-1,263,265,260,-1,264,267,265,-1,264,265,268,-1,264,268,266,-1,264,266,267,-1,276,278,323,-1,276,323,321,-1,281,321,324,-1,276,321,281,-1,274,276,281,-1,277,323,278,-1,277,322,323,-1,281,324,322,-1,322,277,281,-1,277,275,281,-1,323,327,325,-1,321,323,325,-1,321,325,328,-1,321,328,324,-1,322,324,328,-1,322,328,326,-1,322,326,323,-1,323,326,327,-1,325,329,328,-1,328,329,332,-1,328,332,330,-1,326,328,330,-1,326,330,331,-1,326,331,327,-1,325,327,331,-1,325,331,329,-1,333,332,329,-1,333,329,331,-1,333,331,330,-1,333,330,332,-1,274,281,310,-1,308,274,310,-1,280,308,311,-1,274,308,280,-1,272,274,280,-1,275,310,281,-1,275,309,310,-1,275,311,309,-1,275,280,311,-1,275,273,280,-1,273,296,280,-1,308,310,314,-1,308,314,312,-1,308,312,311,-1,311,312,315,-1,312,316,315,-1,315,316,319,-1,309,311,315,-1,309,315,313,-1,309,313,314,-1,309,314,310,-1,315,319,317,-1,313,315,317,-1,313,317,314,-1,314,317,318,-1,312,314,318,-1,316,312,318,-1,320,316,318,-1,320,318,317,-1,320,317,319,-1,320,319,316,-1,272,280,297,-1,272,297,295,-1,272,295,298,-1,272,298,279,-1,279,298,296,-1,273,279,296,-1,280,296,297,-1,295,299,298,-1,298,299,302,-1,298,302,300,-1,296,298,300,-1,296,300,297,-1,297,300,301,-1,295,297,301,-1,299,295,301,-1,299,303,302,-1,302,303,306,-1,300,302,306,-1,300,306,304,-1,300,304,301,-1,301,304,305,-1,301,305,299,-1,299,305,303,-1,307,303,305,-1,307,305,304,-1,307,304,306,-1,307,306,303,-1,269,272,279,-1,269,279,284,-1,269,284,282,-1,269,282,285,-1,271,269,285,-1,271,285,283,-1,270,271,283,-1,270,283,279,-1,270,279,273,-1,279,283,284,-1,282,286,285,-1,285,286,289,-1,285,289,287,-1,285,287,283,-1,283,287,284,-1,284,287,288,-1,284,288,286,-1,286,282,284,-1,286,290,289,-1,289,290,293,-1,289,293,291,-1,289,291,287,-1,287,291,288,-1,288,291,292,-1,288,292,290,-1,286,288,290,-1,294,290,292,-1,294,292,291,-1,294,291,293,-1,294,293,290,-1,97,334,336,-1,97,336,94,-1,94,336,96,-1,336,335,96,-1,96,335,95,-1,95,335,337,-1,95,337,334,-1,95,334,97,-1,334,341,336,-1,336,341,338,-1,336,338,335,-1,335,338,340,-1,335,340,337,-1,337,340,339,-1,337,339,334,-1,334,339,341,-1,341,345,342,-1,341,342,338,-1,338,342,340,-1,340,342,344,-1,340,344,339,-1,339,344,343,-1,339,343,345,-1,339,345,341,-1,345,349,342,-1,342,349,351,-1,342,351,346,-1,342,346,344,-1,71,346,348,-1,71,344,346,-1,71,348,347,-1,71,347,344,-1,344,347,343,-1,343,347,352,-1,343,352,349,-1,343,349,345,-1,349,352,356,-1,349,356,353,-1,349,353,355,-1,349,355,351,-1,354,356,352,-1,354,352,350,-1,354,350,351,-1,354,351,355,-1,353,356,357,-1,353,357,358,-1,353,358,359,-1,353,359,360,-1,353,360,361,-1,353,361,355,-1,354,357,356,-1,350,346,351,-1,348,346,347,-1,350,347,346,-1,350,352,347,-1,354,358,357,-1,354,359,358,-1,354,360,359,-1,354,361,360,-1,354,355,361,-1,101,362,365,-1,101,365,99,-1,99,365,100,-1,100,365,363,-1,100,363,98,-1,98,363,364,-1,98,364,101,-1,101,364,362,-1,362,369,367,-1,362,367,365,-1,365,367,363,-1,363,367,368,-1,363,367,368,-1,363,368,366,-1,363,366,364,-1,364,366,362,-1,362,366,369,-1,369,373,371,-1,369,371,367,-1,367,371,368,-1,368,371,372,-1,368,372,366,-1,366,372,370,-1,366,370,369,-1,369,370,373,-1,373,377,380,-1,373,380,375,-1,373,375,371,-1,371,375,372,-1,372,375,376,-1,372,376,374,-1,372,374,370,-1,370,374,379,-1,373,370,379,-1,373,379,377,-1,377,379,383,-1,377,383,381,-1,377,381,384,-1,377,384,380,-1,381,383,389,-1,381,389,388,-1,381,388,387,-1,381,387,386,-1,381,386,385,-1,381,385,384,-1,376,375,374,-1,378,379,374,-1,378,374,375,-1,378,375,380,-1,382,386,387,-1,382,387,388,-1,382,388,389,-1,382,389,383,-1,382,383,379,-1,382,379,378,-1,382,378,380,-1,382,380,384,-1,382,384,385,-1,382,385,386,-1], Java.type("int[]"))).setCreaseAngle(3.1)
              .setCoord(new Coordinate().setDEF("TheSkinCoord").setPoint(Java.to([doubleToFloat(0),doubleToFloat(1.77),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1.665),doubleToFloat(0.09),doubleToFloat(-0.033),doubleToFloat(1.62),doubleToFloat(0.087),doubleToFloat(0.033),doubleToFloat(1.62),doubleToFloat(0.087),doubleToFloat(0),doubleToFloat(1.55),doubleToFloat(0.097),doubleToFloat(-0.077),doubleToFloat(1.64),doubleToFloat(-0.01),doubleToFloat(-0.0527),doubleToFloat(1.58),doubleToFloat(0.015),doubleToFloat(0.077),doubleToFloat(1.64),doubleToFloat(-0.01),doubleToFloat(0.0527),doubleToFloat(1.58),doubleToFloat(0.015),doubleToFloat(0),doubleToFloat(1.625),doubleToFloat(-0.0925),doubleToFloat(-0.03),doubleToFloat(1.46),doubleToFloat(0.035),doubleToFloat(0),doubleToFloat(1.44),doubleToFloat(0.03),doubleToFloat(0.03),doubleToFloat(1.46),doubleToFloat(0.035),doubleToFloat(-0.1135),doubleToFloat(1.318),doubleToFloat(0.095),doubleToFloat(0.1135),doubleToFloat(1.318),doubleToFloat(0.095),doubleToFloat(0),doubleToFloat(1.25),doubleToFloat(0.113),doubleToFloat(-0.087),doubleToFloat(1.19),doubleToFloat(0.09),doubleToFloat(-0.0935),doubleToFloat(1.03),doubleToFloat(0.075),doubleToFloat(0.087),doubleToFloat(1.19),doubleToFloat(0.09),doubleToFloat(0.0935),doubleToFloat(1.03),doubleToFloat(0.075),doubleToFloat(-0.1425),doubleToFloat(1.065),doubleToFloat(0.0033),doubleToFloat(-0.15),doubleToFloat(0.9),doubleToFloat(-0.01),doubleToFloat(0.1425),doubleToFloat(1.065),doubleToFloat(0.0033),doubleToFloat(0.15),doubleToFloat(0.9),doubleToFloat(-0.01),doubleToFloat(0),doubleToFloat(1.53),doubleToFloat(-0.084),doubleToFloat(0.0049),doubleToFloat(1.1908),doubleToFloat(-0.1113),doubleToFloat(-0.0773),doubleToFloat(1.019),doubleToFloat(-0.12),doubleToFloat(0.0773),doubleToFloat(1.019),doubleToFloat(-0.12),doubleToFloat(0.005),doubleToFloat(1.0915),doubleToFloat(-0.1091),doubleToFloat(-0.178),doubleToFloat(1.4825),doubleToFloat(-0.0625),doubleToFloat(-0.17),doubleToFloat(1.38),doubleToFloat(0.007),doubleToFloat(-0.1884),doubleToFloat(0.8676),doubleToFloat(-0.036),doubleToFloat(-0.16),doubleToFloat(1.38),doubleToFloat(-0.127),doubleToFloat(-0.2),doubleToFloat(1.1388),doubleToFloat(-0.08),doubleToFloat(-0.244),doubleToFloat(1.1388),doubleToFloat(-0.04),doubleToFloat(-0.165),doubleToFloat(1.1388),doubleToFloat(-0.04),doubleToFloat(-0.23),doubleToFloat(1.133),doubleToFloat(-0.055),doubleToFloat(-0.1977),doubleToFloat(0.8169),doubleToFloat(-0.0177),doubleToFloat(-0.1941),doubleToFloat(0.6772),doubleToFloat(-0.0423),doubleToFloat(-0.2117),doubleToFloat(0.8562),doubleToFloat(-0.0584),doubleToFloat(-0.1929),doubleToFloat(0.789),doubleToFloat(-0.1064),doubleToFloat(0.175),doubleToFloat(1.4825),doubleToFloat(-0.06),doubleToFloat(0.17),doubleToFloat(1.38),doubleToFloat(0.007),doubleToFloat(0.1901),doubleToFloat(0.8645),doubleToFloat(-0.0415),doubleToFloat(0.16),doubleToFloat(1.38),doubleToFloat(-0.125),doubleToFloat(0.2),doubleToFloat(1.1388),doubleToFloat(-0.08),doubleToFloat(0.165),doubleToFloat(1.1388),doubleToFloat(-0.04),doubleToFloat(0.244),doubleToFloat(1.1388),doubleToFloat(-0.04),doubleToFloat(0.23),doubleToFloat(1.133),doubleToFloat(-0.055),doubleToFloat(0.2009),doubleToFloat(0.8139),doubleToFloat(-0.0237),doubleToFloat(0.2056),doubleToFloat(0.6743),doubleToFloat(-0.0482),doubleToFloat(0.2142),doubleToFloat(0.8529),doubleToFloat(-0.0648),doubleToFloat(0.1929),doubleToFloat(0.786),doubleToFloat(-0.1122),doubleToFloat(-0.1),doubleToFloat(0.4913),doubleToFloat(-0.03),doubleToFloat(-0.17),doubleToFloat(0.466),doubleToFloat(0),doubleToFloat(-0.05),doubleToFloat(0.466),doubleToFloat(0),doubleToFloat(-0.165),doubleToFloat(0.01),doubleToFloat(0.12),doubleToFloat(-0.15),doubleToFloat(0.07),doubleToFloat(0),doubleToFloat(-0.085),doubleToFloat(0.086),doubleToFloat(0.0125),doubleToFloat(-0.09),doubleToFloat(0.056),doubleToFloat(0.0125),doubleToFloat(-0.115),doubleToFloat(0.02),doubleToFloat(0.122),doubleToFloat(-0.115),doubleToFloat(0.04),doubleToFloat(-0.055),doubleToFloat(-0.11),doubleToFloat(0.011),doubleToFloat(0.19),doubleToFloat(0.0993),doubleToFloat(0.4881),doubleToFloat(-0.0309),doubleToFloat(0.17),doubleToFloat(0.466),doubleToFloat(0),doubleToFloat(0.05),doubleToFloat(0.4867),doubleToFloat(0),doubleToFloat(0.165),doubleToFloat(0.01),doubleToFloat(0.12),doubleToFloat(0.15),doubleToFloat(0.07),doubleToFloat(0),doubleToFloat(0.085),doubleToFloat(0.086),doubleToFloat(0.0125),doubleToFloat(0.09),doubleToFloat(0.056),doubleToFloat(0.0125),doubleToFloat(0.115),doubleToFloat(0.02),doubleToFloat(0.122),doubleToFloat(0.115),doubleToFloat(0.04),doubleToFloat(-0.055),doubleToFloat(0.11),doubleToFloat(0.011),doubleToFloat(0.19),doubleToFloat(0),doubleToFloat(0.875),doubleToFloat(0),doubleToFloat(-0.0646),doubleToFloat(1.5149),doubleToFloat(-0.038),doubleToFloat(0.0646),doubleToFloat(1.5149),doubleToFloat(-0.038),doubleToFloat(0),doubleToFloat(1.07225),doubleToFloat(0.09),doubleToFloat(-0.11),doubleToFloat(1.427),doubleToFloat(-0.1375),doubleToFloat(-0.235),doubleToFloat(1.42),doubleToFloat(-0.0625),doubleToFloat(0.11),doubleToFloat(1.427),doubleToFloat(-0.1375),doubleToFloat(0.235),doubleToFloat(1.42),doubleToFloat(-0.0625),doubleToFloat(0),doubleToFloat(1.41),doubleToFloat(-0.145),doubleToFloat(0),doubleToFloat(0.925),doubleToFloat(0.08),doubleToFloat(-0.087),doubleToFloat(1.19),doubleToFloat(-0.09),doubleToFloat(0.087),doubleToFloat(1.19),doubleToFloat(-0.09),doubleToFloat(0.172),doubleToFloat(1.32),doubleToFloat(-0.03),doubleToFloat(-0.172),doubleToFloat(1.32),doubleToFloat(-0.03),doubleToFloat(0.15),doubleToFloat(1.23),doubleToFloat(-0.015),doubleToFloat(-0.15),doubleToFloat(1.23),doubleToFloat(-0.015),doubleToFloat(0.079),doubleToFloat(0.92),doubleToFloat(-0.14),doubleToFloat(0.1),doubleToFloat(0.9),doubleToFloat(0.077),doubleToFloat(-0.079),doubleToFloat(0.92),doubleToFloat(-0.14),doubleToFloat(-0.1),doubleToFloat(0.9),doubleToFloat(0.075),doubleToFloat(0),doubleToFloat(0.87),doubleToFloat(0),doubleToFloat(0.171),doubleToFloat(0.65),doubleToFloat(0),doubleToFloat(0.02),doubleToFloat(0.65),doubleToFloat(0),doubleToFloat(0.1),doubleToFloat(0.65),doubleToFloat(-0.08),doubleToFloat(0.1),doubleToFloat(0.65),doubleToFloat(0.07),doubleToFloat(-0.171),doubleToFloat(0.65),doubleToFloat(0),doubleToFloat(-0.02),doubleToFloat(0.65),doubleToFloat(0),doubleToFloat(-0.1),doubleToFloat(0.65),doubleToFloat(-0.08),doubleToFloat(-0.1),doubleToFloat(0.65),doubleToFloat(0.07),doubleToFloat(0.25),doubleToFloat(1.27),doubleToFloat(-0.04),doubleToFloat(0.17),doubleToFloat(1.27),doubleToFloat(-0.04),doubleToFloat(0.2),doubleToFloat(1.27),doubleToFloat(-0.09),doubleToFloat(0.2),doubleToFloat(1.27),doubleToFloat(0.02),doubleToFloat(0.244),doubleToFloat(1.1388),doubleToFloat(-0.04),doubleToFloat(0.165),doubleToFloat(1.1388),doubleToFloat(-0.04),doubleToFloat(0.2),doubleToFloat(1.1388),doubleToFloat(-0.08),doubleToFloat(0.2),doubleToFloat(1.1388),doubleToFloat(-0.013),doubleToFloat(0.225),doubleToFloat(1),doubleToFloat(-0.01),doubleToFloat(0.225),doubleToFloat(1),doubleToFloat(-0.07),doubleToFloat(0.185),doubleToFloat(1),doubleToFloat(-0.01),doubleToFloat(0.185),doubleToFloat(1),doubleToFloat(-0.07),doubleToFloat(0.2),doubleToFloat(1.1388),doubleToFloat(-0.04),doubleToFloat(0.225),doubleToFloat(0.92),doubleToFloat(-0.04),doubleToFloat(0.175),doubleToFloat(0.92),doubleToFloat(-0.04),doubleToFloat(0.2),doubleToFloat(0.92),doubleToFloat(-0.065),doubleToFloat(0.2),doubleToFloat(0.92),doubleToFloat(-0.015),doubleToFloat(0.225),doubleToFloat(0.89),doubleToFloat(-0.04),doubleToFloat(0.175),doubleToFloat(0.89),doubleToFloat(-0.04),doubleToFloat(0.2),doubleToFloat(0.89),doubleToFloat(-0.065),doubleToFloat(0.2),doubleToFloat(0.89),doubleToFloat(-0.015),doubleToFloat(0.218),doubleToFloat(0.86),doubleToFloat(-0.04),doubleToFloat(0.184),doubleToFloat(0.86),doubleToFloat(-0.04),doubleToFloat(0.2),doubleToFloat(0.87),doubleToFloat(-0.07),doubleToFloat(0.2),doubleToFloat(0.87),doubleToFloat(0),doubleToFloat(0.21),doubleToFloat(0.85),doubleToFloat(0),doubleToFloat(0.1854),doubleToFloat(0.85),doubleToFloat(0),doubleToFloat(0.212),doubleToFloat(0.84),doubleToFloat(-0.015),doubleToFloat(0.183),doubleToFloat(0.84),doubleToFloat(-0.015),doubleToFloat(0.213),doubleToFloat(0.835),doubleToFloat(-0.04),doubleToFloat(0.19),doubleToFloat(0.835),doubleToFloat(-0.04),doubleToFloat(0.211),doubleToFloat(0.835),doubleToFloat(-0.065),doubleToFloat(0.192),doubleToFloat(0.835),doubleToFloat(-0.065),doubleToFloat(0.208),doubleToFloat(0.84),doubleToFloat(-0.085),doubleToFloat(0.19),doubleToFloat(0.84),doubleToFloat(-0.085),doubleToFloat(0.2),doubleToFloat(0.84),doubleToFloat(-0.095),doubleToFloat(0.215),doubleToFloat(0.82),doubleToFloat(0),doubleToFloat(0.193),doubleToFloat(0.815),doubleToFloat(0.005),doubleToFloat(0.198),doubleToFloat(0.8),doubleToFloat(0.012),doubleToFloat(0.21),doubleToFloat(0.82),doubleToFloat(0.03),doubleToFloat(0.19),doubleToFloat(0.82),doubleToFloat(0.03),doubleToFloat(0.2),doubleToFloat(0.835),doubleToFloat(0.039),doubleToFloat(0.212),doubleToFloat(0.8),doubleToFloat(0.05),doubleToFloat(0.188),doubleToFloat(0.8),doubleToFloat(0.05),doubleToFloat(0.2),doubleToFloat(0.807),doubleToFloat(0.057),doubleToFloat(0.2),doubleToFloat(0.793),doubleToFloat(0.035),doubleToFloat(0.2),doubleToFloat(0.774),doubleToFloat(0.076),doubleToFloat(0.212),doubleToFloat(0.78),doubleToFloat(0.07),doubleToFloat(0.188),doubleToFloat(0.78),doubleToFloat(0.07),doubleToFloat(0.2),doubleToFloat(0.785),doubleToFloat(0.075),doubleToFloat(0.2),doubleToFloat(0.77),doubleToFloat(0.062),doubleToFloat(0.215),doubleToFloat(0.793),doubleToFloat(-0.015),doubleToFloat(0.187),doubleToFloat(0.793),doubleToFloat(-0.015),doubleToFloat(0.2),doubleToFloat(0.793),doubleToFloat(-0.005),doubleToFloat(0.215),doubleToFloat(0.788),doubleToFloat(-0.04),doubleToFloat(0.187),doubleToFloat(0.788),doubleToFloat(-0.04),doubleToFloat(0.215),doubleToFloat(0.793),doubleToFloat(-0.065),doubleToFloat(0.187),doubleToFloat(0.793),doubleToFloat(-0.065),doubleToFloat(0.21),doubleToFloat(0.79),doubleToFloat(-0.085),doubleToFloat(0.19),doubleToFloat(0.79),doubleToFloat(-0.085),doubleToFloat(0.2),doubleToFloat(0.79),doubleToFloat(-0.095),doubleToFloat(0.19),doubleToFloat(0.77),doubleToFloat(-0.0275),doubleToFloat(0.19),doubleToFloat(0.77),doubleToFloat(-0.0525),doubleToFloat(0.19),doubleToFloat(0.78),doubleToFloat(-0.0775),doubleToFloat(0.212),doubleToFloat(0.745),doubleToFloat(-0.015),doubleToFloat(0.188),doubleToFloat(0.745),doubleToFloat(-0.02),doubleToFloat(0.2),doubleToFloat(0.745),doubleToFloat(-0.0255),doubleToFloat(0.2),doubleToFloat(0.745),doubleToFloat(-0.0045),doubleToFloat(0.211),doubleToFloat(0.72),doubleToFloat(-0.015),doubleToFloat(0.189),doubleToFloat(0.72),doubleToFloat(-0.015),doubleToFloat(0.2),doubleToFloat(0.72),doubleToFloat(-0.0252),doubleToFloat(0.2),doubleToFloat(0.72),doubleToFloat(-0.0048),doubleToFloat(0.21),doubleToFloat(0.695),doubleToFloat(-0.015),doubleToFloat(0.19),doubleToFloat(0.695),doubleToFloat(-0.015),doubleToFloat(0.2),doubleToFloat(0.695),doubleToFloat(-0.025),doubleToFloat(0.2),doubleToFloat(0.695),doubleToFloat(-0.005),doubleToFloat(0.2),doubleToFloat(0.685),doubleToFloat(-0.015),doubleToFloat(0.215),doubleToFloat(0.74),doubleToFloat(-0.04),doubleToFloat(0.185),doubleToFloat(0.74),doubleToFloat(-0.04),doubleToFloat(0.2),doubleToFloat(0.74),doubleToFloat(-0.055),doubleToFloat(0.2),doubleToFloat(0.74),doubleToFloat(-0.025),doubleToFloat(0.21),doubleToFloat(0.7142),doubleToFloat(-0.04),doubleToFloat(0.19),doubleToFloat(0.7142),doubleToFloat(-0.04),doubleToFloat(0.2),doubleToFloat(0.7142),doubleToFloat(-0.053),doubleToFloat(0.2),doubleToFloat(0.7142),doubleToFloat(-0.027),doubleToFloat(0.21),doubleToFloat(0.68),doubleToFloat(-0.04),doubleToFloat(0.19),doubleToFloat(0.68),doubleToFloat(-0.04),doubleToFloat(0.2),doubleToFloat(0.68),doubleToFloat(-0.05),doubleToFloat(0.2),doubleToFloat(0.68),doubleToFloat(-0.03),doubleToFloat(0.2),doubleToFloat(0.67),doubleToFloat(-0.04),doubleToFloat(0.212),doubleToFloat(0.74),doubleToFloat(-0.065),doubleToFloat(0.188),doubleToFloat(0.74),doubleToFloat(-0.065),doubleToFloat(0.2),doubleToFloat(0.74),doubleToFloat(-0.0756),doubleToFloat(0.2),doubleToFloat(0.74),doubleToFloat(-0.0542),doubleToFloat(0.21),doubleToFloat(0.7177),doubleToFloat(-0.065),doubleToFloat(0.19),doubleToFloat(0.7177),doubleToFloat(-0.065),doubleToFloat(0.2),doubleToFloat(0.7177),doubleToFloat(-0.0751),doubleToFloat(0.2),doubleToFloat(0.7177),doubleToFloat(-0.0549),doubleToFloat(0.21),doubleToFloat(0.695),doubleToFloat(-0.065),doubleToFloat(0.19),doubleToFloat(0.695),doubleToFloat(-0.065),doubleToFloat(0.2),doubleToFloat(0.695),doubleToFloat(-0.075),doubleToFloat(0.2),doubleToFloat(0.695),doubleToFloat(-0.055),doubleToFloat(0.2),doubleToFloat(0.685),doubleToFloat(-0.065),doubleToFloat(0.211),doubleToFloat(0.755),doubleToFloat(-0.085),doubleToFloat(0.189),doubleToFloat(0.755),doubleToFloat(-0.085),doubleToFloat(0.2),doubleToFloat(0.755),doubleToFloat(-0.0952),doubleToFloat(0.2),doubleToFloat(0.755),doubleToFloat(-0.0748),doubleToFloat(0.21),doubleToFloat(0.735),doubleToFloat(-0.085),doubleToFloat(0.19),doubleToFloat(0.735),doubleToFloat(-0.085),doubleToFloat(0.2),doubleToFloat(0.735),doubleToFloat(-0.0951),doubleToFloat(0.2),doubleToFloat(0.735),doubleToFloat(-0.0749),doubleToFloat(0.21),doubleToFloat(0.72),doubleToFloat(-0.085),doubleToFloat(0.19),doubleToFloat(0.72),doubleToFloat(-0.085),doubleToFloat(0.2),doubleToFloat(0.72),doubleToFloat(-0.095),doubleToFloat(0.2),doubleToFloat(0.72),doubleToFloat(-0.075),doubleToFloat(0.2),doubleToFloat(0.71),doubleToFloat(-0.085),doubleToFloat(-0.23),doubleToFloat(1.23),doubleToFloat(-0.04),doubleToFloat(-0.16),doubleToFloat(1.23),doubleToFloat(-0.04),doubleToFloat(-0.2),doubleToFloat(1.235),doubleToFloat(-0.105),doubleToFloat(-0.2),doubleToFloat(1.235),doubleToFloat(0.02),doubleToFloat(-0.244),doubleToFloat(1.1388),doubleToFloat(-0.04),doubleToFloat(-0.165),doubleToFloat(1.1388),doubleToFloat(-0.04),doubleToFloat(-0.2),doubleToFloat(1.1388),doubleToFloat(-0.08),doubleToFloat(-0.2),doubleToFloat(1.1388),doubleToFloat(0.013),doubleToFloat(-0.225),doubleToFloat(1),doubleToFloat(-0.01),doubleToFloat(-0.225),doubleToFloat(1),doubleToFloat(-0.07),doubleToFloat(-0.185),doubleToFloat(1),doubleToFloat(-0.01),doubleToFloat(-0.185),doubleToFloat(1),doubleToFloat(-0.07),doubleToFloat(-0.2),doubleToFloat(1.1388),doubleToFloat(-0.04),doubleToFloat(-0.225),doubleToFloat(0.92),doubleToFloat(-0.04),doubleToFloat(-0.175),doubleToFloat(0.92),doubleToFloat(-0.04),doubleToFloat(-0.2),doubleToFloat(0.92),doubleToFloat(-0.065),doubleToFloat(-0.2),doubleToFloat(0.92),doubleToFloat(-0.015),doubleToFloat(-0.225),doubleToFloat(0.89),doubleToFloat(-0.04),doubleToFloat(-0.175),doubleToFloat(0.89),doubleToFloat(-0.04),doubleToFloat(-0.2),doubleToFloat(0.89),doubleToFloat(-0.065),doubleToFloat(-0.2),doubleToFloat(0.89),doubleToFloat(-0.015),doubleToFloat(-0.218),doubleToFloat(0.86),doubleToFloat(-0.04),doubleToFloat(-0.184),doubleToFloat(0.86),doubleToFloat(-0.04),doubleToFloat(-0.2),doubleToFloat(0.87),doubleToFloat(-0.07),doubleToFloat(-0.2),doubleToFloat(0.87),doubleToFloat(0),doubleToFloat(-0.21),doubleToFloat(0.85),doubleToFloat(0),doubleToFloat(-0.1854),doubleToFloat(0.85),doubleToFloat(0),doubleToFloat(-0.212),doubleToFloat(0.84),doubleToFloat(-0.015),doubleToFloat(-0.183),doubleToFloat(0.84),doubleToFloat(-0.015),doubleToFloat(-0.213),doubleToFloat(0.835),doubleToFloat(-0.04),doubleToFloat(-0.19),doubleToFloat(0.835),doubleToFloat(-0.04),doubleToFloat(-0.211),doubleToFloat(0.835),doubleToFloat(-0.065),doubleToFloat(-0.192),doubleToFloat(0.835),doubleToFloat(-0.065),doubleToFloat(-0.208),doubleToFloat(0.84),doubleToFloat(-0.085),doubleToFloat(-0.19),doubleToFloat(0.84),doubleToFloat(-0.085),doubleToFloat(-0.2),doubleToFloat(0.84),doubleToFloat(-0.095),doubleToFloat(-0.215),doubleToFloat(0.82),doubleToFloat(0),doubleToFloat(-0.193),doubleToFloat(0.815),doubleToFloat(0.005),doubleToFloat(-0.198),doubleToFloat(0.8),doubleToFloat(0.012),doubleToFloat(-0.21),doubleToFloat(0.82),doubleToFloat(0.03),doubleToFloat(-0.19),doubleToFloat(0.82),doubleToFloat(0.03),doubleToFloat(-0.2),doubleToFloat(0.835),doubleToFloat(0.039),doubleToFloat(-0.212),doubleToFloat(0.8),doubleToFloat(0.05),doubleToFloat(-0.188),doubleToFloat(0.8),doubleToFloat(0.05),doubleToFloat(-0.2),doubleToFloat(0.807),doubleToFloat(0.057),doubleToFloat(-0.2),doubleToFloat(0.793),doubleToFloat(0.035),doubleToFloat(-0.2),doubleToFloat(0.774),doubleToFloat(0.076),doubleToFloat(-0.212),doubleToFloat(0.78),doubleToFloat(0.07),doubleToFloat(-0.188),doubleToFloat(0.78),doubleToFloat(0.07),doubleToFloat(-0.2),doubleToFloat(0.785),doubleToFloat(0.075),doubleToFloat(-0.2),doubleToFloat(0.77),doubleToFloat(0.062),doubleToFloat(-0.215),doubleToFloat(0.793),doubleToFloat(-0.015),doubleToFloat(-0.187),doubleToFloat(0.793),doubleToFloat(-0.015),doubleToFloat(-0.2),doubleToFloat(0.793),doubleToFloat(-0.005),doubleToFloat(-0.215),doubleToFloat(0.788),doubleToFloat(-0.04),doubleToFloat(-0.187),doubleToFloat(0.788),doubleToFloat(-0.04),doubleToFloat(-0.215),doubleToFloat(0.793),doubleToFloat(-0.065),doubleToFloat(-0.187),doubleToFloat(0.793),doubleToFloat(-0.065),doubleToFloat(-0.21),doubleToFloat(0.79),doubleToFloat(-0.085),doubleToFloat(-0.19),doubleToFloat(0.79),doubleToFloat(-0.085),doubleToFloat(-0.2),doubleToFloat(0.79),doubleToFloat(-0.095),doubleToFloat(-0.19),doubleToFloat(0.77),doubleToFloat(-0.0275),doubleToFloat(-0.19),doubleToFloat(0.77),doubleToFloat(-0.0525),doubleToFloat(-0.19),doubleToFloat(0.78),doubleToFloat(-0.0775),doubleToFloat(-0.212),doubleToFloat(0.745),doubleToFloat(-0.015),doubleToFloat(-0.188),doubleToFloat(0.745),doubleToFloat(-0.02),doubleToFloat(-0.2),doubleToFloat(0.745),doubleToFloat(-0.0255),doubleToFloat(-0.2),doubleToFloat(0.745),doubleToFloat(-0.0045),doubleToFloat(-0.211),doubleToFloat(0.72),doubleToFloat(-0.015),doubleToFloat(-0.189),doubleToFloat(0.72),doubleToFloat(-0.015),doubleToFloat(-0.2),doubleToFloat(0.72),doubleToFloat(-0.0252),doubleToFloat(-0.2),doubleToFloat(0.72),doubleToFloat(-0.0048),doubleToFloat(-0.21),doubleToFloat(0.695),doubleToFloat(-0.015),doubleToFloat(-0.19),doubleToFloat(0.695),doubleToFloat(-0.015),doubleToFloat(-0.2),doubleToFloat(0.695),doubleToFloat(-0.025),doubleToFloat(-0.2),doubleToFloat(0.695),doubleToFloat(-0.005),doubleToFloat(-0.2),doubleToFloat(0.685),doubleToFloat(-0.015),doubleToFloat(-0.215),doubleToFloat(0.74),doubleToFloat(-0.04),doubleToFloat(-0.185),doubleToFloat(0.74),doubleToFloat(-0.04),doubleToFloat(-0.2),doubleToFloat(0.74),doubleToFloat(-0.055),doubleToFloat(-0.2),doubleToFloat(0.74),doubleToFloat(-0.025),doubleToFloat(-0.21),doubleToFloat(0.7142),doubleToFloat(-0.04),doubleToFloat(-0.19),doubleToFloat(0.7142),doubleToFloat(-0.04),doubleToFloat(-0.2),doubleToFloat(0.7142),doubleToFloat(-0.053),doubleToFloat(-0.2),doubleToFloat(0.7142),doubleToFloat(-0.027),doubleToFloat(-0.21),doubleToFloat(0.68),doubleToFloat(-0.04),doubleToFloat(-0.19),doubleToFloat(0.68),doubleToFloat(-0.04),doubleToFloat(-0.2),doubleToFloat(0.68),doubleToFloat(-0.05),doubleToFloat(-0.2),doubleToFloat(0.68),doubleToFloat(-0.03),doubleToFloat(-0.2),doubleToFloat(0.67),doubleToFloat(-0.04),doubleToFloat(-0.212),doubleToFloat(0.74),doubleToFloat(-0.065),doubleToFloat(-0.188),doubleToFloat(0.74),doubleToFloat(-0.065),doubleToFloat(-0.2),doubleToFloat(0.74),doubleToFloat(-0.0756),doubleToFloat(-0.2),doubleToFloat(0.74),doubleToFloat(-0.0542),doubleToFloat(-0.21),doubleToFloat(0.7177),doubleToFloat(-0.065),doubleToFloat(-0.19),doubleToFloat(0.7177),doubleToFloat(-0.065),doubleToFloat(-0.2),doubleToFloat(0.7177),doubleToFloat(-0.0751),doubleToFloat(-0.2),doubleToFloat(0.7177),doubleToFloat(-0.0549),doubleToFloat(-0.21),doubleToFloat(0.695),doubleToFloat(-0.065),doubleToFloat(-0.19),doubleToFloat(0.695),doubleToFloat(-0.065),doubleToFloat(-0.2),doubleToFloat(0.695),doubleToFloat(-0.075),doubleToFloat(-0.2),doubleToFloat(0.695),doubleToFloat(-0.055),doubleToFloat(-0.2),doubleToFloat(0.685),doubleToFloat(-0.065),doubleToFloat(-0.211),doubleToFloat(0.755),doubleToFloat(-0.085),doubleToFloat(-0.189),doubleToFloat(0.755),doubleToFloat(-0.085),doubleToFloat(-0.2),doubleToFloat(0.755),doubleToFloat(-0.0952),doubleToFloat(-0.2),doubleToFloat(0.755),doubleToFloat(-0.0748),doubleToFloat(-0.21),doubleToFloat(0.735),doubleToFloat(-0.085),doubleToFloat(-0.19),doubleToFloat(0.735),doubleToFloat(-0.085),doubleToFloat(-0.2),doubleToFloat(0.735),doubleToFloat(-0.0951),doubleToFloat(-0.2),doubleToFloat(0.735),doubleToFloat(-0.0749),doubleToFloat(-0.21),doubleToFloat(0.72),doubleToFloat(-0.085),doubleToFloat(-0.19),doubleToFloat(0.72),doubleToFloat(-0.085),doubleToFloat(-0.2),doubleToFloat(0.72),doubleToFloat(-0.095),doubleToFloat(-0.2),doubleToFloat(0.72),doubleToFloat(-0.075),doubleToFloat(-0.2),doubleToFloat(0.71),doubleToFloat(-0.085),doubleToFloat(0.115),doubleToFloat(0.466),doubleToFloat(0.06),doubleToFloat(0.115),doubleToFloat(0.466),doubleToFloat(-0.055),doubleToFloat(0.15),doubleToFloat(0.466),doubleToFloat(0),doubleToFloat(0.05),doubleToFloat(0.466),doubleToFloat(0),doubleToFloat(0.17),doubleToFloat(0.3),doubleToFloat(0),doubleToFloat(0.06),doubleToFloat(0.3),doubleToFloat(0),doubleToFloat(0.1),doubleToFloat(0.3),doubleToFloat(-0.05),doubleToFloat(0.1),doubleToFloat(0.3),doubleToFloat(0.05),doubleToFloat(0.15),doubleToFloat(0.07),doubleToFloat(0),doubleToFloat(0.085),doubleToFloat(0.086),doubleToFloat(0.0125),doubleToFloat(0.115),doubleToFloat(0.069),doubleToFloat(-0.045),doubleToFloat(0.117),doubleToFloat(0.0975),doubleToFloat(0.0615),doubleToFloat(0.1375),doubleToFloat(0.006),doubleToFloat(-0.03),doubleToFloat(0.095),doubleToFloat(0.006),doubleToFloat(-0.03),doubleToFloat(0.115),doubleToFloat(0.015),doubleToFloat(-0.045),doubleToFloat(0.115),doubleToFloat(0.06),doubleToFloat(0.1),doubleToFloat(0.115),doubleToFloat(0),doubleToFloat(0.07),doubleToFloat(0.165),doubleToFloat(0),doubleToFloat(0.07),doubleToFloat(0.095),doubleToFloat(0),doubleToFloat(0.07),doubleToFloat(0.115),doubleToFloat(0.04),doubleToFloat(0.13),doubleToFloat(0.125),doubleToFloat(0),doubleToFloat(0.12),doubleToFloat(0.165),doubleToFloat(0),doubleToFloat(0.12),doubleToFloat(0.087),doubleToFloat(0),doubleToFloat(0.122),doubleToFloat(0.09),doubleToFloat(0.012),doubleToFloat(0.188),doubleToFloat(0.11),doubleToFloat(0.011),doubleToFloat(0.19),doubleToFloat(0.128),doubleToFloat(0.011),doubleToFloat(0.185),doubleToFloat(0.142),doubleToFloat(0.011),doubleToFloat(0.178),doubleToFloat(0.154),doubleToFloat(0.01),doubleToFloat(0.168),doubleToFloat(-0.115),doubleToFloat(0.466),doubleToFloat(0.06),doubleToFloat(-0.115),doubleToFloat(0.466),doubleToFloat(-0.055),doubleToFloat(-0.17),doubleToFloat(0.466),doubleToFloat(0),doubleToFloat(-0.05),doubleToFloat(0.466),doubleToFloat(0),doubleToFloat(-0.17),doubleToFloat(0.3),doubleToFloat(0),doubleToFloat(-0.06),doubleToFloat(0.3),doubleToFloat(0),doubleToFloat(-0.1),doubleToFloat(0.3),doubleToFloat(-0.05),doubleToFloat(-0.1),doubleToFloat(0.3),doubleToFloat(0.05),doubleToFloat(-0.15),doubleToFloat(0.07),doubleToFloat(0),doubleToFloat(-0.085),doubleToFloat(0.086),doubleToFloat(0.0125),doubleToFloat(-0.115),doubleToFloat(0.069),doubleToFloat(-0.045),doubleToFloat(-0.117),doubleToFloat(0.0975),doubleToFloat(0.0615),doubleToFloat(-0.1375),doubleToFloat(0.006),doubleToFloat(-0.03),doubleToFloat(-0.095),doubleToFloat(0.006),doubleToFloat(-0.03),doubleToFloat(-0.095),doubleToFloat(0.006),doubleToFloat(-0.03),doubleToFloat(-0.115),doubleToFloat(0.06),doubleToFloat(0.1),doubleToFloat(-0.115),doubleToFloat(0),doubleToFloat(0.07),doubleToFloat(-0.165),doubleToFloat(0),doubleToFloat(0.07),doubleToFloat(-0.095),doubleToFloat(0),doubleToFloat(0.07),doubleToFloat(-0.115),doubleToFloat(0.04),doubleToFloat(0.13),doubleToFloat(-0.125),doubleToFloat(0),doubleToFloat(0.12),doubleToFloat(-0.165),doubleToFloat(0),doubleToFloat(0.12),doubleToFloat(-0.087),doubleToFloat(0),doubleToFloat(0.122),doubleToFloat(-0.09),doubleToFloat(0.012),doubleToFloat(0.188),doubleToFloat(-0.11),doubleToFloat(0.011),doubleToFloat(0.19),doubleToFloat(-0.128),doubleToFloat(0.011),doubleToFloat(0.185),doubleToFloat(-0.142),doubleToFloat(0.011),doubleToFloat(0.178),doubleToFloat(-0.154),doubleToFloat(0.01),doubleToFloat(0.168)], Java.type("float[]"))))
              .setColor(new Color().setColor(Java.to([doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(0),doubleToFloat(1),doubleToFloat(1),doubleToFloat(1),doubleToFloat(1)], Java.type("float[]")))))
            .setAppearance(new Appearance().setDEF("SkinAppearance")
              .setTexture(new ImageTexture().setDEF("zBlueSpiralBkg2").setDescription("Blue Spiral Pattern").setUrl(Java.to(["./data/zBlueSpiralBkg2.gif","zBlueSpiralBkg2.gif","https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Skin/zBlueSpiralBkg2.gif"], Java.type("java.lang.String[]"))))
              .setMaterial(new Material().setDEF("SkinMaterial").setAmbientIntensity(0.6).setDiffuseColor(Java.to([doubleToFloat(1),doubleToFloat(1),doubleToFloat(1)], Java.type("float[]"))).setShininess(0.6).setTransparency(0.2))))
          .setSkinCoord(new Coordinate().setContainerFieldOverride("skinCoord").setUSE("TheSkinCoord"))
          .addSkeleton(new HAnimJoint("hanim_HAnim").setName("humanoid_root").setDEF("hanim_humanoid_root").setCenter(Java.to([doubleToFloat(0),doubleToFloat(0.824),doubleToFloat(0.0277)], Java.type("float[]"))).setContainerFieldOverride("skeleton")
            .addChild(new HAnimSegment("hanim_humanoid_root").setName("sacrum").setDEF("hanim_sacrum")
              .addChild(new Transform().setTranslation(Java.to([doubleToFloat(0),doubleToFloat(0.824),doubleToFloat(0.0277)], Java.type("float[]")))
                .addChild(new Transform()
                  .addComments(new CommentsBlock("Empty Transform"))
                  .addChild(new Shape().setUSE("HAnimJointShape"))))
              .addChild(new Shape()
                .setGeometry(new LineSet().setVertexCount(Java.to([2], Java.type("int[]")))
                  .setCoord(new Coordinate().setPoint(Java.to([doubleToFloat(0),doubleToFloat(0.824),doubleToFloat(0.0277),doubleToFloat(0),doubleToFloat(0.9149),doubleToFloat(0.0016)], Java.type("float[]"))))
                  .addComments(new CommentsBlock("from humanoid_root to sacroiliac vertices 2"))
                  .setColor(new ColorRGBA().setUSE("HAnimSegmentLineColorRGBA"))))
              .addChild(new HAnimSite("hanim_sacrum").setName("buttocks_standing_wall_contact_point").setDEF("hanim_buttocks_standing_wall_contact_point")
                .addChild(new TouchSensor().setDescription("HAnimSite buttocks_standing_wall_contact_point"))
                .addChild(new Shape().setUSE("HAnimSiteShape")))
              .addChild(new HAnimSite("hanim_sacrum").setName("crotch").setDEF("hanim_crotch").setTranslation(Java.to([doubleToFloat(0.0034),doubleToFloat(0.8266),doubleToFloat(0.0257)], Java.type("float[]")))
                .addChild(new TouchSensor().setDescription("HAnimSite crotch"))
                .addChild(new Shape().setUSE("HAnimSiteShape")))
              .addChild(new HAnimSite("hanim_sacrum").setName("l_asis").setDEF("hanim_l_asis").setTranslation(Java.to([doubleToFloat(0.0925),doubleToFloat(0.9983),doubleToFloat(0.1052)], Java.type("float[]")))
                .addChild(new TouchSensor().setDescription("HAnimSite l_asis"))
                .addChild(new Shape().setUSE("HAnimSiteShape")))
              .addChild(new HAnimSite("hanim_sacrum").setName("l_iliocristale").setDEF("hanim_l_iliocristale").setTranslation(Java.to([doubleToFloat(0.1612),doubleToFloat(1.0537),doubleToFloat(0.0008)], Java.type("float[]")))
                .addChild(new TouchSensor().setDescription("HAnimSite l_iliocristale"))
                .addChild(new Shape().setUSE("HAnimSiteShape")))
              .addChild(new HAnimSite("hanim_sacrum").setName("l_psis").setDEF("hanim_l_psis").setTranslation(Java.to([doubleToFloat(0.0774),doubleToFloat(1.019),doubleToFloat(-0.1151)], Java.type("float[]")))
                .addChild(new TouchSensor().setDescription("HAnimSite l_psis"))
                .addChild(new Shape().setUSE("HAnimSiteShape")))
              .addChild(new HAnimSite("hanim_sacrum").setName("l_trochanterion").setDEF("hanim_l_trochanterion").setTranslation(Java.to([doubleToFloat(0.1677),doubleToFloat(0.8336),doubleToFloat(0.0303)], Java.type("float[]")))
                .addChild(new TouchSensor().setDescription("HAnimSite l_trochanterion"))
                .addChild(new Shape().setUSE("HAnimSiteShape")))
              .addChild(new HAnimSite("hanim_sacrum").setName("r_asis").setDEF("hanim_r_asis").setTranslation(Java.to([doubleToFloat(-0.0887),doubleToFloat(1.0021),doubleToFloat(0.1112)], Java.type("float[]")))
                .addChild(new TouchSensor().setDescription("HAnimSite r_asis"))
                .addChild(new Shape().setUSE("HAnimSiteShape")))
              .addChild(new HAnimSite("hanim_sacrum").setName("r_iliocristale").setDEF("hanim_r_iliocristale").setTranslation(Java.to([doubleToFloat(-0.1525),doubleToFloat(1.0628),doubleToFloat(0.0035)], Java.type("float[]")))
                .addChild(new TouchSensor().setDescription("HAnimSite r_iliocristale"))
                .addChild(new Shape().setUSE("HAnimSiteShape")))
              .addChild(new HAnimSite("hanim_sacrum").setName("r_psis").setDEF("hanim_r_psis").setTranslation(Java.to([doubleToFloat(-0.0716),doubleToFloat(1.019),doubleToFloat(-0.1138)], Java.type("float[]")))
                .addChild(new TouchSensor().setDescription("HAnimSite r_psis"))
                .addChild(new Shape().setUSE("HAnimSiteShape")))
              .addChild(new HAnimSite("hanim_sacrum").setName("r_trochanterion").setDEF("hanim_r_trochanterion").setTranslation(Java.to([doubleToFloat(-0.1689),doubleToFloat(0.8419),doubleToFloat(0.0352)], Java.type("float[]")))
                .addChild(new TouchSensor().setDescription("HAnimSite r_trochanterion"))
                .addChild(new Shape().setUSE("HAnimSiteShape")))
              .addChild(new Shape()
                .setGeometry(new LineSet().setVertexCount(Java.to([2], Java.type("int[]")))
                  .setCoord(new Coordinate().setPoint(Java.to([doubleToFloat(0),doubleToFloat(0.824),doubleToFloat(0.0277),doubleToFloat(0.0028),doubleToFloat(1.0568),doubleToFloat(-0.0776)], Java.type("float[]"))))
                  .addComments(new CommentsBlock("from humanoid_root to vl5 vertices 2"))
                  .setColor(new ColorRGBA().setUSE("HAnimSegmentLineColorRGBA"))))
              .addChild(new HAnimSite("hanim_sacrum").setName("adams_apple").setDEF("hanim_adams_apple")
                .addChild(new TouchSensor().setDescription("HAnimSite adams_apple"))
                .addChild(new Shape().setUSE("HAnimSiteShape")))
              .addChild(new HAnimSite("hanim_sacrum").setName("cervicale").setDEF("hanim_cervicale").setTranslation(Java.to([doubleToFloat(0.0064),doubleToFloat(1.52),doubleToFloat(-0.0815)], Java.type("float[]")))
                .addChild(new TouchSensor().setDescription("HAnimSite cervicale"))
                .addChild(new Shape().setUSE("HAnimSiteShape")))
              .addChild(new HAnimSite("hanim_sacrum").setName("l_acromion").setDEF("hanim_l_acromion").setTranslation(Java.to([doubleToFloat(0.2032),doubleToFloat(1.476),doubleToFloat(-0.049)], Java.type("float[]")))
                .addChild(new TouchSensor().setDescription("HAnimSite l_acromion"))
                .addChild(new Shape().setUSE("HAnimSiteShape")))
              .addChild(new HAnimSite("hanim_sacrum").setName("l_axilla_distal_pt").setDEF("hanim_l_axilla_distal_pt").setTranslation(Java.to([doubleToFloat(0.1706),doubleToFloat(1.4072),doubleToFloat(-0.0875)], Java.type("float[]")))
                .addChild(new TouchSensor().setDescription("HAnimSite l_axilla_distal_pt"))
                .addChild(new Shape().setUSE("HAnimSiteShape")))
              .addChild(new HAnimSite("hanim_sacrum").setName("l_axilla_posterior_folds").setDEF("hanim_l_axilla_posterior_folds")
                .addChild(new TouchSensor().setDescription("HAnimSite l_axilla_posterior_folds"))
                .addChild(new Shape().setUSE("HAnimSiteShape")))
              .addChild(new HAnimSite("hanim_sacrum").setName("l_axilla_proximal").setDEF("hanim_l_axilla_proximal").setTranslation(Java.to([doubleToFloat(0.1777),doubleToFloat(1.4065),doubleToFloat(-0.0075)], Java.type("float[]")))
                .addChild(new TouchSensor().setDescription("HAnimSite l_axilla_proximal"))
                .addChild(new Shape().setUSE("HAnimSiteShape")))
              .addChild(new HAnimSite("hanim_sacrum").setName("l_chest_midsagittal_plane").setDEF("hanim_l_chest_midsagittal_plane")
                .addChild(new TouchSensor().setDescription("HAnimSite l_chest_midsagittal_plane"))
                .addChild(new Shape().setUSE("HAnimSiteShape")))
              .addChild(new HAnimSite("hanim_sacrum").setName("l_clavicale").setDEF("hanim_l_clavicale").setTranslation(Java.to([doubleToFloat(0.0271),doubleToFloat(1.4943),doubleToFloat(0.0394)], Java.type("float[]")))
                .addChild(new TouchSensor().setDescription("HAnimSite l_clavicale"))
                .addChild(new Shape().setUSE("HAnimSiteShape")))
              .addChild(new HAnimSite("hanim_sacrum").setName("l_neck_base").setDEF("hanim_l_neck_base").setTranslation(Java.to([doubleToFloat(0.0646),doubleToFloat(1.5141),doubleToFloat(-0.038)], Java.type("float[]")))
                .addChild(new TouchSensor().setDescription("HAnimSite l_neck_base"))
                .addChild(new Shape().setUSE("HAnimSiteShape")))
              .addChild(new HAnimSite("hanim_sacrum").setName("l_rib10").setDEF("hanim_l_rib10").setTranslation(Java.to([doubleToFloat(0.0871),doubleToFloat(1.1925),doubleToFloat(0.0992)], Java.type("float[]")))
                .addChild(new TouchSensor().setDescription("HAnimSite l_rib10"))
                .addChild(new Shape().setUSE("HAnimSiteShape")))
              .addChild(new HAnimSite("hanim_sacrum").setName("l_thelion").setDEF("hanim_l_thelion").setTranslation(Java.to([doubleToFloat(0.0918),doubleToFloat(1.3382),doubleToFloat(0.1192)], Java.type("float[]")))
                .addChild(new TouchSensor().setDescription("HAnimSite l_thelion"))
                .addChild(new Shape().setUSE("HAnimSiteShape")))
              .addChild(new HAnimSite("hanim_sacrum").setName("mesosternale").setDEF("hanim_mesosternale")
                .addChild(new TouchSensor().setDescription("HAnimSite mesosternale"))
                .addChild(new Shape().setUSE("HAnimSiteShape")))
              .addChild(new HAnimSite("hanim_sacrum").setName("navel").setDEF("hanim_navel").setTranslation(Java.to([doubleToFloat(0.0069),doubleToFloat(1.0966),doubleToFloat(0.1017)], Java.type("float[]")))
                .addChild(new TouchSensor().setDescription("HAnimSite navel"))
                .addChild(new Shape().setUSE("HAnimSiteShape")))
              .addChild(new HAnimSite("hanim_sacrum").setName("r_acromion").setDEF("hanim_r_acromion").setTranslation(Java.to([doubleToFloat(-0.1905),doubleToFloat(1.4791),doubleToFloat(-0.0431)], Java.type("float[]")))
                .addChild(new TouchSensor().setDescription("HAnimSite r_acromion"))
                .addChild(new Shape().setUSE("HAnimSiteShape")))
              .addChild(new HAnimSite("hanim_sacrum").setName("r_axilla_distal_pt").setDEF("hanim_r_axilla_distal_pt").setTranslation(Java.to([doubleToFloat(-0.1603),doubleToFloat(1.4098),doubleToFloat(-0.0826)], Java.type("float[]")))
                .addChild(new TouchSensor().setDescription("HAnimSite r_axilla_distal_pt"))
                .addChild(new Shape().setUSE("HAnimSiteShape")))
              .addChild(new HAnimSite("hanim_sacrum").setName("r_axilla_posterior_folds").setDEF("hanim_r_axilla_posterior_folds")
                .addChild(new TouchSensor().setDescription("HAnimSite r_axilla_posterior_folds"))
                .addChild(new Shape().setUSE("HAnimSiteShape")))
              .addChild(new HAnimSite("hanim_sacrum").setName("r_axilla_proximal").setDEF("hanim_r_axilla_proximal").setTranslation(Java.to([doubleToFloat(-0.1626),doubleToFloat(1.4072),doubleToFloat(-0.0031)], Java.type("float[]")))
                .addChild(new TouchSensor().setDescription("HAnimSite r_axilla_proximal"))
                .addChild(new Shape().setUSE("HAnimSiteShape")))
              .addChild(new HAnimSite("hanim_sacrum").setName("r_chest_midsagittal_plane").setDEF("hanim_r_chest_midsagittal_plane")
                .addChild(new TouchSensor().setDescription("HAnimSite r_chest_midsagittal_plane"))
                .addChild(new Shape().setUSE("HAnimSiteShape")))
              .addChild(new HAnimSite("hanim_sacrum").setName("r_clavicale").setDEF("hanim_r_clavicale").setTranslation(Java.to([doubleToFloat(-0.0115),doubleToFloat(1.4943),doubleToFloat(0.04)], Java.type("float[]")))
                .addChild(new TouchSensor().setDescription("HAnimSite r_clavicale"))
                .addChild(new Shape().setUSE("HAnimSiteShape")))
              .addChild(new HAnimSite("hanim_sacrum").setName("r_neck_base").setDEF("hanim_r_neck_base").setTranslation(Java.to([doubleToFloat(-0.0419),doubleToFloat(1.5149),doubleToFloat(-0.022)], Java.type("float[]")))
                .addChild(new TouchSensor().setDescription("HAnimSite r_neck_base"))
                .addChild(new Shape().setUSE("HAnimSiteShape")))
              .addChild(new HAnimSite("hanim_sacrum").setName("r_rib10").setDEF("hanim_r_rib10").setTranslation(Java.to([doubleToFloat(-0.0711),doubleToFloat(1.1941),doubleToFloat(0.1016)], Java.type("float[]")))
                .addChild(new TouchSensor().setDescription("HAnimSite r_rib10"))
                .addChild(new Shape().setUSE("HAnimSiteShape")))
              .addChild(new HAnimSite("hanim_sacrum").setName("r_thelion").setDEF("hanim_r_thelion").setTranslation(Java.to([doubleToFloat(-0.0736),doubleToFloat(1.3385),doubleToFloat(0.1217)], Java.type("float[]")))
                .addChild(new TouchSensor().setDescription("HAnimSite r_thelion"))
                .addChild(new Shape().setUSE("HAnimSiteShape")))
              .addChild(new HAnimSite("hanim_sacrum").setName("rear_center_midsagittal_plane").setDEF("hanim_rear_center_midsagittal_plane")
                .addChild(new TouchSensor().setDescription("HAnimSite rear_center_midsagittal_plane"))
                .addChild(new Shape().setUSE("HAnimSiteShape")))
              .addChild(new HAnimSite("hanim_sacrum").setName("spine_1_middle_back").setDEF("hanim_spine_1_middle_back")
                .addChild(new TouchSensor().setDescription("HAnimSite spine_1_middle_back"))
                .addChild(new Shape().setUSE("HAnimSiteShape")))
              .addChild(new HAnimSite("hanim_sacrum").setName("spine_2_middle_back").setDEF("hanim_spine_2_middle_back")
                .addChild(new TouchSensor().setDescription("HAnimSite spine_2_middle_back"))
                .addChild(new Shape().setUSE("HAnimSiteShape")))
              .addChild(new HAnimSite("hanim_sacrum").setName("substernale").setDEF("hanim_substernale").setTranslation(Java.to([doubleToFloat(0.0085),doubleToFloat(1.2995),doubleToFloat(0.1147)], Java.type("float[]")))
                .addChild(new TouchSensor().setDescription("HAnimSite substernale"))
                .addChild(new Shape().setUSE("HAnimSiteShape")))
              .addChild(new HAnimSite("hanim_sacrum").setName("suprasternale").setDEF("hanim_suprasternale").setTranslation(Java.to([doubleToFloat(0.0084),doubleToFloat(1.4714),doubleToFloat(0.0551)], Java.type("float[]")))
                .addChild(new TouchSensor().setDescription("HAnimSite suprasternale"))
                .addChild(new Shape().setUSE("HAnimSiteShape")))
              .addChild(new HAnimSite("hanim_sacrum").setName("waist_preferred_anterior").setDEF("hanim_waist_preferred_anterior")
                .addChild(new TouchSensor().setDescription("HAnimSite waist_preferred_anterior"))
                .addChild(new Shape().setUSE("HAnimSiteShape")))
              .addChild(new HAnimSite("hanim_sacrum").setName("waist_preferred_posterior").setDEF("hanim_waist_preferred_posterior").setTranslation(Java.to([doubleToFloat(0.29),doubleToFloat(1.0915),doubleToFloat(-0.1091)], Java.type("float[]")))
                .addChild(new TouchSensor().setDescription("HAnimSite waist_preferred_posterior"))
                .addChild(new Shape().setUSE("HAnimSiteShape"))))
            .addChild(new HAnimJoint("hanim_humanoid_root").setName("sacroiliac").setDEF("hanim_sacroiliac").setCenter(Java.to([doubleToFloat(0),doubleToFloat(0.9149),doubleToFloat(0.0016)], Java.type("float[]")))
              .addChild(new HAnimSegment("hanim_sacroiliac").setName("pelvis").setDEF("hanim_pelvis")
                .addChild(new Transform().setTranslation(Java.to([doubleToFloat(0),doubleToFloat(0.9149),doubleToFloat(0.0016)], Java.type("float[]")))
                  .addChild(new Transform()
                    .addComments(new CommentsBlock("Empty Transform"))
                    .addChild(new Shape().setUSE("HAnimJointShape"))))
                .addChild(new Shape()
                  .setGeometry(new LineSet().setVertexCount(Java.to([2], Java.type("int[]")))
                    .setCoord(new Coordinate().setPoint(Java.to([doubleToFloat(0),doubleToFloat(0.9149),doubleToFloat(0.0016),doubleToFloat(0.0961),doubleToFloat(0.9124),doubleToFloat(-0.0001)], Java.type("float[]"))))
                    .addComments(new CommentsBlock("from sacroiliac to l_hip vertices 2"))
                    .setColor(new ColorRGBA().setUSE("HAnimSegmentLineColorRGBA"))))
                .addChild(new HAnimSite("hanim_pelvis").setName("l_femoral_lateral_epicondyles").setDEF("hanim_l_femoral_lateral_epicondyles").setTranslation(Java.to([doubleToFloat(0.1598),doubleToFloat(0.4967),doubleToFloat(0.0297)], Java.type("float[]")))
                  .addChild(new TouchSensor().setDescription("HAnimSite l_femoral_lateral_epicondyles"))
                  .addChild(new Shape().setUSE("HAnimSiteShape")))
                .addChild(new HAnimSite("hanim_pelvis").setName("l_femoral_medial_epicondyles").setDEF("hanim_l_femoral_medial_epicondyles").setTranslation(Java.to([doubleToFloat(0.0398),doubleToFloat(0.4946),doubleToFloat(0.0303)], Java.type("float[]")))
                  .addChild(new TouchSensor().setDescription("HAnimSite l_femoral_medial_epicondyles"))
                  .addChild(new Shape().setUSE("HAnimSiteShape")))
                .addChild(new HAnimSite("hanim_pelvis").setName("l_knee_crease").setDEF("hanim_l_knee_crease").setTranslation(Java.to([doubleToFloat(0.0993),doubleToFloat(0.4881),doubleToFloat(-0.0309)], Java.type("float[]")))
                  .addChild(new TouchSensor().setDescription("HAnimSite l_knee_crease"))
                  .addChild(new Shape().setUSE("HAnimSiteShape")))
                .addChild(new HAnimSite("hanim_pelvis").setName("l_suprapatella").setDEF("hanim_l_suprapatella")
                  .addChild(new TouchSensor().setDescription("HAnimSite l_suprapatella"))
                  .addChild(new Shape().setUSE("HAnimSiteShape")))
                .addChild(new Shape()
                  .setGeometry(new LineSet().setVertexCount(Java.to([2], Java.type("int[]")))
                    .setCoord(new Coordinate().setPoint(Java.to([doubleToFloat(0),doubleToFloat(0.9149),doubleToFloat(0.0016),doubleToFloat(-0.095),doubleToFloat(0.9171),doubleToFloat(0.0029)], Java.type("float[]"))))
                    .addComments(new CommentsBlock("from sacroiliac to r_hip vertices 2"))
                    .setColor(new ColorRGBA().setUSE("HAnimSegmentLineColorRGBA"))))
                .addChild(new HAnimSite("hanim_pelvis").setName("r_femoral_lateral_epicondyles").setDEF("hanim_r_femoral_lateral_epicondyles").setTranslation(Java.to([doubleToFloat(-0.1421),doubleToFloat(0.4992),doubleToFloat(0.031)], Java.type("float[]")))
                  .addChild(new TouchSensor().setDescription("HAnimSite r_femoral_lateral_epicondyles"))
                  .addChild(new Shape().setUSE("HAnimSiteShape")))
                .addChild(new HAnimSite("hanim_pelvis").setName("r_femoral_medial_epicondyles").setDEF("hanim_r_femoral_medial_epicondyles").setTranslation(Java.to([doubleToFloat(-0.0221),doubleToFloat(0.5014),doubleToFloat(0.0289)], Java.type("float[]")))
                  .addChild(new TouchSensor().setDescription("HAnimSite r_femoral_medial_epicondyles"))
                  .addChild(new Shape().setUSE("HAnimSiteShape")))
                .addChild(new HAnimSite("hanim_pelvis").setName("r_knee_crease").setDEF("hanim_r_knee_crease").setTranslation(Java.to([doubleToFloat(-0.0825),doubleToFloat(0.4932),doubleToFloat(-0.0326)], Java.type("float[]")))
                  .addChild(new TouchSensor().setDescription("HAnimSite r_knee_crease"))
                  .addChild(new Shape().setUSE("HAnimSiteShape")))
                .addChild(new HAnimSite("hanim_pelvis").setName("r_suprapatella").setDEF("hanim_r_suprapatella")
                  .addChild(new TouchSensor().setDescription("HAnimSite r_suprapatella"))
                  .addChild(new Shape().setUSE("HAnimSiteShape"))))
              .addChild(new HAnimJoint("hanim_sacroiliac").setName("l_hip").setDEF("hanim_l_hip").setCenter(Java.to([doubleToFloat(0.0961),doubleToFloat(0.9124),doubleToFloat(-0.0001)], Java.type("float[]")))
                .addChild(new HAnimSegment("hanim_l_hip").setName("l_thigh").setDEF("hanim_l_thigh")
                  .addChild(new Transform().setTranslation(Java.to([doubleToFloat(0.0961),doubleToFloat(0.9124),doubleToFloat(-0.0001)], Java.type("float[]")))
                    .addChild(new Transform()
                      .addComments(new CommentsBlock("Empty Transform"))
                      .addChild(new Shape().setUSE("HAnimJointShape"))))
                  .addChild(new Shape()
                    .setGeometry(new LineSet().setVertexCount(Java.to([2], Java.type("int[]")))
                      .setCoord(new Coordinate().setPoint(Java.to([doubleToFloat(0.0961),doubleToFloat(0.9124),doubleToFloat(-0.0001),doubleToFloat(0.104),doubleToFloat(0.4867),doubleToFloat(0.0308)], Java.type("float[]"))))
                      .addComments(new CommentsBlock("from l_hip to l_knee vertices 2"))
                      .setColor(new ColorRGBA().setUSE("HAnimSegmentLineColorRGBA"))))
                  .addChild(new HAnimSite("hanim_l_thigh").setName("l_lateral_malleolus").setDEF("hanim_l_lateral_malleolus").setTranslation(Java.to([doubleToFloat(0.1308),doubleToFloat(0.0597),doubleToFloat(-0.1032)], Java.type("float[]")))
                    .addChild(new TouchSensor().setDescription("HAnimSite l_lateral_malleolus"))
                    .addChild(new Shape().setUSE("HAnimSiteShape")))
                  .addChild(new HAnimSite("hanim_l_thigh").setName("l_medial_malleolus").setDEF("hanim_l_medial_malleolus").setTranslation(Java.to([doubleToFloat(0.089),doubleToFloat(0.0716),doubleToFloat(-0.0881)], Java.type("float[]")))
                    .addChild(new TouchSensor().setDescription("HAnimSite l_medial_malleolus"))
                    .addChild(new Shape().setUSE("HAnimSiteShape")))
                  .addChild(new HAnimSite("hanim_l_thigh").setName("l_tibiale").setDEF("hanim_l_tibiale")
                    .addChild(new TouchSensor().setDescription("HAnimSite l_tibiale"))
                    .addChild(new Shape().setUSE("HAnimSiteShape"))))
                .addChild(new HAnimJoint("hanim_l_hip").setName("l_knee").setDEF("hanim_l_knee").setCenter(Java.to([doubleToFloat(0.104),doubleToFloat(0.4867),doubleToFloat(0.0308)], Java.type("float[]")))
                  .addChild(new HAnimSegment("hanim_l_knee").setName("l_calf").setDEF("hanim_l_calf")
                    .addChild(new Transform().setTranslation(Java.to([doubleToFloat(0.104),doubleToFloat(0.4867),doubleToFloat(0.0308)], Java.type("float[]")))
                      .addChild(new Transform()
                        .addComments(new CommentsBlock("Empty Transform"))
                        .addChild(new Shape().setUSE("HAnimJointShape"))))
                    .addChild(new Shape()
                      .setGeometry(new LineSet().setVertexCount(Java.to([2], Java.type("int[]")))
                        .setCoord(new Coordinate().setPoint(Java.to([doubleToFloat(0.104),doubleToFloat(0.4867),doubleToFloat(0.0308),doubleToFloat(0.1101),doubleToFloat(0.0656),doubleToFloat(-0.0736)], Java.type("float[]"))))
                        .addComments(new CommentsBlock("from l_knee to l_talocrural vertices 2"))
                        .setColor(new ColorRGBA().setUSE("HAnimSegmentLineColorRGBA"))))
                    .addChild(new HAnimSite("hanim_l_calf").setName("l_calcaneus_posterior").setDEF("hanim_l_calcaneus_posterior").setTranslation(Java.to([doubleToFloat(0.0974),doubleToFloat(0.0259),doubleToFloat(-0.1171)], Java.type("float[]")))
                      .addChild(new TouchSensor().setDescription("HAnimSite l_calcaneus_posterior"))
                      .addChild(new Shape().setUSE("HAnimSiteShape")))
                    .addChild(new HAnimSite("hanim_l_calf").setName("l_sphyrion").setDEF("hanim_l_sphyrion").setTranslation(Java.to([doubleToFloat(0.089),doubleToFloat(0.0575),doubleToFloat(-0.0943)], Java.type("float[]")))
                      .addChild(new TouchSensor().setDescription("HAnimSite l_sphyrion"))
                      .addChild(new Shape().setUSE("HAnimSiteShape"))))
                  .addChild(new HAnimJoint("hanim_l_knee").setName("l_talocrural").setDEF("hanim_l_talocrural").setCenter(Java.to([doubleToFloat(0.1101),doubleToFloat(0.0656),doubleToFloat(-0.0736)], Java.type("float[]")))
                    .addChild(new HAnimSegment("hanim_l_talocrural").setName("l_talus").setDEF("hanim_l_talus")
                      .addChild(new Transform().setScale(Java.to([doubleToFloat(0.15),doubleToFloat(0.15),doubleToFloat(0.15)], Java.type("float[]"))).setTranslation(Java.to([doubleToFloat(0.08),doubleToFloat(0.06),doubleToFloat(-0.025)], Java.type("float[]"))).setRotation(Java.to([doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(-1.57)], Java.type("float[]")))
                        .addComments(new CommentsBlock("Transform left foot"))
                        .addChild(new Transform()
                          .addComments(new CommentsBlock("Empty Transform left foot"))
                          .addChild(new Shape().setUSE("HAnimJointShape"))))
                      .addChild(new Shape()
                        .setGeometry(new LineSet().setVertexCount(Java.to([2], Java.type("int[]")))
                          .setCoord(new Coordinate().setPoint(Java.to([doubleToFloat(0.1101),doubleToFloat(0.0656),doubleToFloat(-0.0736),doubleToFloat(0.0824),doubleToFloat(0.0064),doubleToFloat(-0.004)], Java.type("float[]"))))
                          .addComments(new CommentsBlock("from l_talocrural to l_metatarsophalangeal_2 vertices 2"))
                          .setColor(new ColorRGBA().setUSE("HAnimSegmentLineColorRGBA"))))
                      .addChild(new HAnimSite("hanim_l_talus").setName("l_metatarsal_phalanx_1").setDEF("hanim_l_metatarsal_phalanx_1")
                        .addChild(new TouchSensor().setDescription("HAnimSite l_metatarsal_phalanx_1"))
                        .addChild(new Shape().setUSE("HAnimSiteShape")))
                      .addChild(new HAnimSite("hanim_l_talus").setName("l_metatarsal_phalanx_5").setDEF("hanim_l_metatarsal_phalanx_5")
                        .addChild(new TouchSensor().setDescription("HAnimSite l_metatarsal_phalanx_5"))
                        .addChild(new Shape().setUSE("HAnimSiteShape")))
                      .addChild(new HAnimSite("hanim_l_talus").setName("l_tarsal_distal_phalanx_1_tip").setDEF("hanim_l_tarsal_distal_phalanx_1_tip")
                        .addChild(new TouchSensor().setDescription("HAnimSite l_tarsal_distal_phalanx_1_tip"))
                        .addChild(new Shape().setUSE("HAnimSiteShape")))
                      .addChild(new HAnimSite("hanim_l_talus").setName("l_tarsal_distal_phalanx_2_tip").setDEF("hanim_l_tarsal_distal_phalanx_2_tip").setTranslation(Java.to([doubleToFloat(0.1195),doubleToFloat(0.0079),doubleToFloat(0.1433)], Java.type("float[]")))
                        .addChild(new TouchSensor().setDescription("HAnimSite l_tarsal_distal_phalanx_2_tip"))
                        .addChild(new Shape().setUSE("HAnimSiteShape")))
                      .addChild(new HAnimSite("hanim_l_talus").setName("l_tarsal_distal_phalanx_3_tip").setDEF("hanim_l_tarsal_distal_phalanx_3_tip")
                        .addChild(new TouchSensor().setDescription("HAnimSite l_tarsal_distal_phalanx_3_tip"))
                        .addChild(new Shape().setUSE("HAnimSiteShape")))
                      .addChild(new HAnimSite("hanim_l_talus").setName("l_tarsal_distal_phalanx_4_tip").setDEF("hanim_l_tarsal_distal_phalanx_4_tip")
                        .addChild(new TouchSensor().setDescription("HAnimSite l_tarsal_distal_phalanx_4_tip"))
                        .addChild(new Shape().setUSE("HAnimSiteShape")))
                      .addChild(new HAnimSite("hanim_l_talus").setName("l_tarsal_distal_phalanx_5_tip").setDEF("hanim_l_tarsal_distal_phalanx_5_tip")
                        .addChild(new TouchSensor().setDescription("HAnimSite l_tarsal_distal_phalanx_5_tip"))
                        .addChild(new Shape().setUSE("HAnimSiteShape"))))
                    .addChild(new HAnimJoint("hanim_l_talocrural").setName("l_metatarsophalangeal_2").setDEF("hanim_l_metatarsophalangeal_2").setCenter(Java.to([doubleToFloat(0.0824),doubleToFloat(0.0064),doubleToFloat(-0.004)], Java.type("float[]")))))))
              .addChild(new HAnimJoint("hanim_sacroiliac").setName("r_hip").setDEF("hanim_r_hip").setCenter(Java.to([doubleToFloat(-0.095),doubleToFloat(0.9171),doubleToFloat(0.0029)], Java.type("float[]")))
                .addChild(new HAnimSegment("hanim_r_hip").setName("r_thigh").setDEF("hanim_r_thigh")
                  .addChild(new Transform().setTranslation(Java.to([doubleToFloat(-0.095),doubleToFloat(0.9171),doubleToFloat(0.0029)], Java.type("float[]")))
                    .addChild(new Transform()
                      .addComments(new CommentsBlock("Empty Transform"))
                      .addChild(new Shape().setUSE("HAnimJointShape"))))
                  .addChild(new Shape()
                    .setGeometry(new LineSet().setVertexCount(Java.to([2], Java.type("int[]")))
                      .setCoord(new Coordinate().setPoint(Java.to([doubleToFloat(-0.095),doubleToFloat(0.9171),doubleToFloat(0.0029),doubleToFloat(-0.0867),doubleToFloat(0.4913),doubleToFloat(0.0318)], Java.type("float[]"))))
                      .addComments(new CommentsBlock("from r_hip to r_knee vertices 2"))
                      .setColor(new ColorRGBA().setUSE("HAnimSegmentLineColorRGBA"))))
                  .addChild(new HAnimSite("hanim_r_thigh").setName("r_lateral_malleolus").setDEF("hanim_r_lateral_malleolus").setTranslation(Java.to([doubleToFloat(-0.1006),doubleToFloat(0.0658),doubleToFloat(-0.1075)], Java.type("float[]")))
                    .addChild(new TouchSensor().setDescription("HAnimSite r_lateral_malleolus"))
                    .addChild(new Shape().setUSE("HAnimSiteShape")))
                  .addChild(new HAnimSite("hanim_r_thigh").setName("r_medial_malleolus").setDEF("hanim_r_medial_malleolus").setTranslation(Java.to([doubleToFloat(-0.0591),doubleToFloat(0.076),doubleToFloat(-0.0928)], Java.type("float[]")))
                    .addChild(new TouchSensor().setDescription("HAnimSite r_medial_malleolus"))
                    .addChild(new Shape().setUSE("HAnimSiteShape")))
                  .addChild(new HAnimSite("hanim_r_thigh").setName("r_tibiale").setDEF("hanim_r_tibiale")
                    .addChild(new TouchSensor().setDescription("HAnimSite r_tibiale"))
                    .addChild(new Shape().setUSE("HAnimSiteShape"))))
                .addChild(new HAnimJoint("hanim_r_hip").setName("r_knee").setDEF("hanim_r_knee").setCenter(Java.to([doubleToFloat(-0.0867),doubleToFloat(0.4913),doubleToFloat(0.0318)], Java.type("float[]")))
                  .addChild(new HAnimSegment("hanim_r_knee").setName("r_calf").setDEF("hanim_r_calf")
                    .addChild(new Transform().setTranslation(Java.to([doubleToFloat(-0.0867),doubleToFloat(0.4913),doubleToFloat(0.0318)], Java.type("float[]")))
                      .addChild(new Transform()
                        .addComments(new CommentsBlock("Empty Transform"))
                        .addChild(new Shape().setUSE("HAnimJointShape"))))
                    .addChild(new Shape()
                      .setGeometry(new LineSet().setVertexCount(Java.to([2], Java.type("int[]")))
                        .setCoord(new Coordinate().setPoint(Java.to([doubleToFloat(-0.0867),doubleToFloat(0.4913),doubleToFloat(0.0318),doubleToFloat(-0.0801),doubleToFloat(0.0712),doubleToFloat(-0.0766)], Java.type("float[]"))))
                        .addComments(new CommentsBlock("from r_knee to r_talocrural vertices 2"))
                        .setColor(new ColorRGBA().setUSE("HAnimSegmentLineColorRGBA"))))
                    .addChild(new HAnimSite("hanim_r_calf").setName("r_calcaneus_posterior").setDEF("hanim_r_calcaneus_posterior").setTranslation(Java.to([doubleToFloat(-0.0692),doubleToFloat(0.0297),doubleToFloat(-0.1221)], Java.type("float[]")))
                      .addChild(new TouchSensor().setDescription("HAnimSite r_calcaneus_posterior"))
                      .addChild(new Shape().setUSE("HAnimSiteShape")))
                    .addChild(new HAnimSite("hanim_r_calf").setName("r_sphyrion").setDEF("hanim_r_sphyrion").setTranslation(Java.to([doubleToFloat(-0.0603),doubleToFloat(0.061),doubleToFloat(-0.1002)], Java.type("float[]")))
                      .addChild(new TouchSensor().setDescription("HAnimSite r_sphyrion"))
                      .addChild(new Shape().setUSE("HAnimSiteShape"))))
                  .addChild(new HAnimJoint("hanim_r_knee").setName("r_talocrural").setDEF("hanim_r_talocrural").setCenter(Java.to([doubleToFloat(-0.0801),doubleToFloat(0.0712),doubleToFloat(-0.0766)], Java.type("float[]")))
                    .addChild(new HAnimSegment("hanim_r_talocrural").setName("r_talus").setDEF("hanim_r_talus")
                      .addChild(new Transform().setScale(Java.to([doubleToFloat(0.15),doubleToFloat(0.15),doubleToFloat(0.15)], Java.type("float[]"))).setTranslation(Java.to([doubleToFloat(-0.05),doubleToFloat(0.06),doubleToFloat(-0.025)], Java.type("float[]"))).setRotation(Java.to([doubleToFloat(1),doubleToFloat(0),doubleToFloat(0),doubleToFloat(-1.57)], Java.type("float[]")))
                        .addComments(new CommentsBlock("Transform right foot"))
                        .addChild(new Transform()
                          .addComments(new CommentsBlock("Empty Transform right foot"))
                          .addChild(new Shape().setUSE("HAnimJointShape"))))
                      .addChild(new Shape()
                        .setGeometry(new LineSet().setVertexCount(Java.to([2], Java.type("int[]")))
                          .setCoord(new Coordinate().setPoint(Java.to([doubleToFloat(-0.0801),doubleToFloat(0.0712),doubleToFloat(-0.0766),doubleToFloat(-0.0823),doubleToFloat(0.0064),doubleToFloat(-0.004)], Java.type("float[]"))))
                          .addComments(new CommentsBlock("from r_talocrural to r_metatarsophalangeal_2 vertices 2"))
                          .setColor(new ColorRGBA().setUSE("HAnimSegmentLineColorRGBA"))))
                      .addChild(new HAnimSite("hanim_r_talus").setName("r_metatarsal_phalanx_1").setDEF("hanim_r_metatarsal_phalanx_1")
                        .addChild(new TouchSensor().setDescription("HAnimSite r_metatarsal_phalanx_1"))
                        .addChild(new Shape().setUSE("HAnimSiteShape")))
                      .addChild(new HAnimSite("hanim_r_talus").setName("r_metatarsal_phalanx_5").setDEF("hanim_r_metatarsal_phalanx_5")
                        .addChild(new TouchSensor().setDescription("HAnimSite r_metatarsal_phalanx_5"))
                        .addChild(new Shape().setUSE("HAnimSiteShape")))
                      .addChild(new HAnimSite("hanim_r_talus").setName("r_tarsal_distal_phalanx_1_tip").setDEF("hanim_r_tarsal_distal_phalanx_1_tip")
                        .addChild(new TouchSensor().setDescription("HAnimSite r_tarsal_distal_phalanx_1_tip"))
                        .addChild(new Shape().setUSE("HAnimSiteShape")))
                      .addChild(new HAnimSite("hanim_r_talus").setName("r_tarsal_distal_phalanx_2_tip").setDEF("hanim_r_tarsal_distal_phalanx_2_tip").setTranslation(Java.to([doubleToFloat(-0.0883),doubleToFloat(0.0134),doubleToFloat(0.1383)], Java.type("float[]")))
                        .addChild(new TouchSensor().setDescription("HAnimSite r_tarsal_distal_phalanx_2_tip"))
                        .addChild(new Shape().setUSE("HAnimSiteShape")))
                      .addChild(new HAnimSite("hanim_r_talus").setName("r_tarsal_distal_phalanx_3_tip").setDEF("hanim_r_tarsal_distal_phalanx_3_tip")
                        .addChild(new TouchSensor().setDescription("HAnimSite r_tarsal_distal_phalanx_3_tip"))
                        .addChild(new Shape().setUSE("HAnimSiteShape")))
                      .addChild(new HAnimSite("hanim_r_talus").setName("r_tarsal_distal_phalanx_4_tip").setDEF("hanim_r_tarsal_distal_phalanx_4_tip")
                        .addChild(new TouchSensor().setDescription("HAnimSite r_tarsal_distal_phalanx_4_tip"))
                        .addChild(new Shape().setUSE("HAnimSiteShape")))
                      .addChild(new HAnimSite("hanim_r_talus").setName("r_tarsal_distal_phalanx_5_tip").setDEF("hanim_r_tarsal_distal_phalanx_5_tip")
                        .addChild(new TouchSensor().setDescription("HAnimSite r_tarsal_distal_phalanx_5_tip"))
                        .addChild(new Shape().setUSE("HAnimSiteShape"))))
                    .addChild(new HAnimJoint("hanim_r_talocrural").setName("r_metatarsophalangeal_2").setDEF("hanim_r_metatarsophalangeal_2").setCenter(Java.to([doubleToFloat(-0.0823),doubleToFloat(0.0064),doubleToFloat(-0.004)], Java.type("float[]"))))))))
            .addChild(new HAnimJoint("hanim_humanoid_root").setName("vl5").setDEF("hanim_vl5").setCenter(Java.to([doubleToFloat(0.0028),doubleToFloat(1.0568),doubleToFloat(-0.0776)], Java.type("float[]")))
              .addChild(new HAnimSegment("hanim_vl5").setName("l5").setDEF("hanim_l5")
                .addChild(new Transform().setTranslation(Java.to([doubleToFloat(0.0028),doubleToFloat(1.0568),doubleToFloat(-0.0776)], Java.type("float[]")))
                  .addChild(new Transform()
                    .addComments(new CommentsBlock("Empty Transform"))
                    .addChild(new Shape().setUSE("HAnimJointShape"))))
                .addChild(new Shape()
                  .setGeometry(new LineSet().setVertexCount(Java.to([2], Java.type("int[]")))
                    .setCoord(new Coordinate().setPoint(Java.to([doubleToFloat(0.0028),doubleToFloat(1.0568),doubleToFloat(-0.0776),doubleToFloat(0.0044),doubleToFloat(1.6209),doubleToFloat(0.0236)], Java.type("float[]"))))
                    .addComments(new CommentsBlock("from vl5 to skullbase vertices 2"))
                    .setColor(new ColorRGBA().setUSE("HAnimSegmentLineColorRGBA"))))
                .addChild(new HAnimSite("hanim_l5").setName("glabella").setDEF("hanim_glabella")
                  .addChild(new TouchSensor().setDescription("HAnimSite glabella"))
                  .addChild(new Shape().setUSE("HAnimSiteShape")))
                .addChild(new HAnimSite("hanim_l5").setName("l_ectocanthus").setDEF("hanim_l_ectocanthus")
                  .addChild(new TouchSensor().setDescription("HAnimSite l_ectocanthus"))
                  .addChild(new Shape().setUSE("HAnimSiteShape")))
                .addChild(new HAnimSite("hanim_l5").setName("l_gonion").setDEF("hanim_l_gonion").setTranslation(Java.to([doubleToFloat(0.0631),doubleToFloat(1.553),doubleToFloat(0.033)], Java.type("float[]")))
                  .addChild(new TouchSensor().setDescription("HAnimSite l_gonion"))
                  .addChild(new Shape().setUSE("HAnimSiteShape")))
                .addChild(new HAnimSite("hanim_l5").setName("l_infraorbitale").setDEF("hanim_l_infraorbitale").setTranslation(Java.to([doubleToFloat(0.0341),doubleToFloat(1.6171),doubleToFloat(0.0752)], Java.type("float[]")))
                  .addChild(new TouchSensor().setDescription("HAnimSite l_infraorbitale"))
                  .addChild(new Shape().setUSE("HAnimSiteShape")))
                .addChild(new HAnimSite("hanim_l5").setName("l_tragion").setDEF("hanim_l_tragion").setTranslation(Java.to([doubleToFloat(0.0739),doubleToFloat(1.6348),doubleToFloat(0.0282)], Java.type("float[]")))
                  .addChild(new TouchSensor().setDescription("HAnimSite l_tragion"))
                  .addChild(new Shape().setUSE("HAnimSiteShape")))
                .addChild(new HAnimSite("hanim_l5").setName("menton").setDEF("hanim_menton")
                  .addChild(new TouchSensor().setDescription("HAnimSite menton"))
                  .addChild(new Shape().setUSE("HAnimSiteShape")))
                .addChild(new HAnimSite("hanim_l5").setName("nuchale").setDEF("hanim_nuchale").setTranslation(Java.to([doubleToFloat(0.0039),doubleToFloat(1.5972),doubleToFloat(-0.0796)], Java.type("float[]")))
                  .addChild(new TouchSensor().setDescription("HAnimSite nuchale"))
                  .addChild(new Shape().setUSE("HAnimSiteShape")))
                .addChild(new HAnimSite("hanim_l5").setName("opisthocranion").setDEF("hanim_opisthocranion")
                  .addChild(new TouchSensor().setDescription("HAnimSite opisthocranion"))
                  .addChild(new Shape().setUSE("HAnimSiteShape")))
                .addChild(new HAnimSite("hanim_l5").setName("r_ectocanthus").setDEF("hanim_r_ectocanthus")
                  .addChild(new TouchSensor().setDescription("HAnimSite r_ectocanthus"))
                  .addChild(new Shape().setUSE("HAnimSiteShape")))
                .addChild(new HAnimSite("hanim_l5").setName("r_gonion").setDEF("hanim_r_gonion").setTranslation(Java.to([doubleToFloat(-0.052),doubleToFloat(1.5529),doubleToFloat(0.0347)], Java.type("float[]")))
                  .addChild(new TouchSensor().setDescription("HAnimSite r_gonion"))
                  .addChild(new Shape().setUSE("HAnimSiteShape")))
                .addChild(new HAnimSite("hanim_l5").setName("r_infraorbitale").setDEF("hanim_r_infraorbitale").setTranslation(Java.to([doubleToFloat(-0.0237),doubleToFloat(1.6171),doubleToFloat(0.0752)], Java.type("float[]")))
                  .addChild(new TouchSensor().setDescription("HAnimSite r_infraorbitale"))
                  .addChild(new Shape().setUSE("HAnimSiteShape")))
                .addChild(new HAnimSite("hanim_l5").setName("r_tragion").setDEF("hanim_r_tragion").setTranslation(Java.to([doubleToFloat(-0.0646),doubleToFloat(1.6347),doubleToFloat(0.0302)], Java.type("float[]")))
                  .addChild(new TouchSensor().setDescription("HAnimSite r_tragion"))
                  .addChild(new Shape().setUSE("HAnimSiteShape")))
                .addChild(new HAnimSite("hanim_l5").setName("sellion").setDEF("hanim_sellion").setTranslation(Java.to([doubleToFloat(0.0058),doubleToFloat(1.6316),doubleToFloat(0.0852)], Java.type("float[]")))
                  .addChild(new TouchSensor().setDescription("HAnimSite sellion"))
                  .addChild(new Shape().setUSE("HAnimSiteShape")))
                .addChild(new HAnimSite("hanim_l5").setName("skull_vertex").setDEF("hanim_skull_vertex")
                  .addChild(new TouchSensor().setDescription("HAnimSite skull_vertex"))
                  .addChild(new Shape().setUSE("HAnimSiteShape")))
                .addChild(new HAnimSite("hanim_l5").setName("supramenton").setDEF("hanim_supramenton").setTranslation(Java.to([doubleToFloat(0.0061),doubleToFloat(1.541),doubleToFloat(0.0805)], Java.type("float[]")))
                  .addChild(new TouchSensor().setDescription("HAnimSite supramenton"))
                  .addChild(new Shape().setUSE("HAnimSiteShape")))
                .addChild(new Shape()
                  .setGeometry(new LineSet().setVertexCount(Java.to([2], Java.type("int[]")))
                    .setCoord(new Coordinate().setPoint(Java.to([doubleToFloat(0.0028),doubleToFloat(1.0568),doubleToFloat(-0.0776),doubleToFloat(0.2029),doubleToFloat(1.4376),doubleToFloat(-0.0387)], Java.type("float[]"))))
                    .addComments(new CommentsBlock("from vl5 to l_shoulder vertices 2"))
                    .setColor(new ColorRGBA().setUSE("HAnimSegmentLineColorRGBA"))))
                .addChild(new HAnimSite("hanim_l5").setName("l_bideltoid").setDEF("hanim_l_bideltoid")
                  .addChild(new TouchSensor().setDescription("HAnimSite l_bideltoid"))
                  .addChild(new Shape().setUSE("HAnimSiteShape")))
                .addChild(new HAnimSite("hanim_l5").setName("l_humeral_lateral_epicondyles").setDEF("hanim_l_humeral_lateral_epicondyles").setTranslation(Java.to([doubleToFloat(0.228),doubleToFloat(1.1482),doubleToFloat(-0.11)], Java.type("float[]")))
                  .addChild(new TouchSensor().setDescription("HAnimSite l_humeral_lateral_epicondyles"))
                  .addChild(new Shape().setUSE("HAnimSiteShape")))
                .addChild(new Shape()
                  .setGeometry(new LineSet().setVertexCount(Java.to([2], Java.type("int[]")))
                    .setCoord(new Coordinate().setPoint(Java.to([doubleToFloat(0.0028),doubleToFloat(1.0568),doubleToFloat(-0.0776),doubleToFloat(-0.1907),doubleToFloat(1.4407),doubleToFloat(-0.0325)], Java.type("float[]"))))
                    .addComments(new CommentsBlock("from vl5 to r_shoulder vertices 2"))
                    .setColor(new ColorRGBA().setUSE("HAnimSegmentLineColorRGBA"))))
                .addChild(new HAnimSite("hanim_l5").setName("r_bideltoid").setDEF("hanim_r_bideltoid")
                  .addChild(new TouchSensor().setDescription("HAnimSite r_bideltoid"))
                  .addChild(new Shape().setUSE("HAnimSiteShape")))
                .addChild(new HAnimSite("hanim_l5").setName("r_humeral_lateral_epicondyles").setDEF("hanim_r_humeral_lateral_epicondyles").setTranslation(Java.to([doubleToFloat(-0.2224),doubleToFloat(1.1517),doubleToFloat(-0.1033)], Java.type("float[]")))
                  .addChild(new TouchSensor().setDescription("HAnimSite r_humeral_lateral_epicondyles"))
                  .addChild(new Shape().setUSE("HAnimSiteShape"))))
              .addChild(new HAnimJoint("hanim_vl5").setName("skullbase").setDEF("hanim_skullbase").setCenter(Java.to([doubleToFloat(0.0044),doubleToFloat(1.6209),doubleToFloat(0.0236)], Java.type("float[]"))))
              .addChild(new HAnimJoint("hanim_vl5").setName("l_shoulder").setDEF("hanim_l_shoulder").setCenter(Java.to([doubleToFloat(0.2029),doubleToFloat(1.4376),doubleToFloat(-0.0387)], Java.type("float[]")))
                .addChild(new HAnimSegment("hanim_l_shoulder").setName("l_upperarm").setDEF("hanim_l_upperarm")
                  .addChild(new Transform().setTranslation(Java.to([doubleToFloat(0.2029),doubleToFloat(1.4376),doubleToFloat(-0.0387)], Java.type("float[]")))
                    .addChild(new Transform()
                      .addComments(new CommentsBlock("Empty Transform"))
                      .addChild(new Shape().setUSE("HAnimJointShape"))))
                  .addChild(new Shape()
                    .setGeometry(new LineSet().setVertexCount(Java.to([2], Java.type("int[]")))
                      .setCoord(new Coordinate().setPoint(Java.to([doubleToFloat(0.2029),doubleToFloat(1.4376),doubleToFloat(-0.0387),doubleToFloat(0.2014),doubleToFloat(1.1357),doubleToFloat(-0.0682)], Java.type("float[]"))))
                      .addComments(new CommentsBlock("from l_shoulder to l_elbow vertices 2"))
                      .setColor(new ColorRGBA().setUSE("HAnimSegmentLineColorRGBA"))))
                  .addChild(new HAnimSite("hanim_l_upperarm").setName("l_humeral_medial_epicondyles").setDEF("hanim_l_humeral_medial_epicondyles").setTranslation(Java.to([doubleToFloat(0.1735),doubleToFloat(1.1272),doubleToFloat(-0.1113)], Java.type("float[]")))
                    .addChild(new TouchSensor().setDescription("HAnimSite l_humeral_medial_epicondyles"))
                    .addChild(new Shape().setUSE("HAnimSiteShape")))
                  .addChild(new HAnimSite("hanim_l_upperarm").setName("l_olecranon").setDEF("hanim_l_olecranon").setTranslation(Java.to([doubleToFloat(-0.1962),doubleToFloat(1.1375),doubleToFloat(-0.1123)], Java.type("float[]")))
                    .addChild(new TouchSensor().setDescription("HAnimSite l_olecranon"))
                    .addChild(new Shape().setUSE("HAnimSiteShape")))
                  .addChild(new HAnimSite("hanim_l_upperarm").setName("l_radial_styloid").setDEF("hanim_l_radial_styloid").setTranslation(Java.to([doubleToFloat(0.1901),doubleToFloat(0.8645),doubleToFloat(-0.0415)], Java.type("float[]")))
                    .addChild(new TouchSensor().setDescription("HAnimSite l_radial_styloid"))
                    .addChild(new Shape().setUSE("HAnimSiteShape")))
                  .addChild(new HAnimSite("hanim_l_upperarm").setName("l_radiale").setDEF("hanim_l_radiale").setTranslation(Java.to([doubleToFloat(0.2182),doubleToFloat(1.1212),doubleToFloat(-0.1167)], Java.type("float[]")))
                    .addChild(new TouchSensor().setDescription("HAnimSite l_radiale"))
                    .addChild(new Shape().setUSE("HAnimSiteShape"))))
                .addChild(new HAnimJoint("hanim_l_shoulder").setName("l_elbow").setDEF("hanim_l_elbow").setCenter(Java.to([doubleToFloat(0.2014),doubleToFloat(1.1357),doubleToFloat(-0.0682)], Java.type("float[]")))
                  .addChild(new HAnimSegment("hanim_l_elbow").setName("l_forearm").setDEF("hanim_l_forearm")
                    .addChild(new Transform().setTranslation(Java.to([doubleToFloat(0.2014),doubleToFloat(1.1357),doubleToFloat(-0.0682)], Java.type("float[]")))
                      .addChild(new Transform()
                        .addComments(new CommentsBlock("Empty Transform"))
                        .addChild(new Shape().setUSE("HAnimJointShape"))))
                    .addChild(new Shape()
                      .setGeometry(new LineSet().setVertexCount(Java.to([2], Java.type("int[]")))
                        .setCoord(new Coordinate().setPoint(Java.to([doubleToFloat(0.2014),doubleToFloat(1.1357),doubleToFloat(-0.0682),doubleToFloat(0.1984),doubleToFloat(0.8663),doubleToFloat(-0.0583)], Java.type("float[]"))))
                        .addComments(new CommentsBlock("from l_elbow to l_radiocarpal vertices 2"))
                        .setColor(new ColorRGBA().setUSE("HAnimSegmentLineColorRGBA"))))
                    .addChild(new HAnimSite("hanim_l_forearm").setName("l_carpal_distal_phalanx_1_tip").setDEF("hanim_l_carpal_distal_phalanx_1_tip")
                      .addChild(new TouchSensor().setDescription("HAnimSite l_carpal_distal_phalanx_1_tip"))
                      .addChild(new Shape().setUSE("HAnimSiteShape")))
                    .addChild(new HAnimSite("hanim_l_forearm").setName("l_dactylion").setDEF("hanim_l_dactylion").setTranslation(Java.to([doubleToFloat(0.2056),doubleToFloat(0.6743),doubleToFloat(-0.0482)], Java.type("float[]")))
                      .addChild(new TouchSensor().setDescription("HAnimSite l_dactylion"))
                      .addChild(new Shape().setUSE("HAnimSiteShape")))
                    .addChild(new HAnimSite("hanim_l_forearm").setName("l_metacarpal_phalanx_2").setDEF("hanim_l_metacarpal_phalanx_2").setTranslation(Java.to([doubleToFloat(0.2009),doubleToFloat(0.8139),doubleToFloat(-0.0237)], Java.type("float[]")))
                      .addChild(new TouchSensor().setDescription("HAnimSite l_metacarpal_phalanx_2"))
                      .addChild(new Shape().setUSE("HAnimSiteShape")))
                    .addChild(new HAnimSite("hanim_l_forearm").setName("l_metacarpal_phalanx_3").setDEF("hanim_l_metacarpal_phalanx_3")
                      .addChild(new TouchSensor().setDescription("HAnimSite l_metacarpal_phalanx_3"))
                      .addChild(new Shape().setUSE("HAnimSiteShape")))
                    .addChild(new HAnimSite("hanim_l_forearm").setName("l_metacarpal_phalanx_5").setDEF("hanim_l_metacarpal_phalanx_5").setTranslation(Java.to([doubleToFloat(0.1929),doubleToFloat(0.786),doubleToFloat(-0.1122)], Java.type("float[]")))
                      .addChild(new TouchSensor().setDescription("HAnimSite l_metacarpal_phalanx_5"))
                      .addChild(new Shape().setUSE("HAnimSiteShape")))
                    .addChild(new HAnimSite("hanim_l_forearm").setName("l_ulnar_styloid").setDEF("hanim_l_ulnar_styloid").setTranslation(Java.to([doubleToFloat(-0.2142),doubleToFloat(0.8529),doubleToFloat(-0.0648)], Java.type("float[]")))
                      .addChild(new TouchSensor().setDescription("HAnimSite l_ulnar_styloid"))
                      .addChild(new Shape().setUSE("HAnimSiteShape"))))
                  .addChild(new HAnimJoint("hanim_l_elbow").setName("l_radiocarpal").setDEF("hanim_l_radiocarpal").setCenter(Java.to([doubleToFloat(0.1984),doubleToFloat(0.8663),doubleToFloat(-0.0583)], Java.type("float[]"))))))
              .addChild(new HAnimJoint("hanim_vl5").setName("r_shoulder").setDEF("hanim_r_shoulder").setCenter(Java.to([doubleToFloat(-0.1907),doubleToFloat(1.4407),doubleToFloat(-0.0325)], Java.type("float[]")))
                .addChild(new HAnimSegment("hanim_r_shoulder").setName("r_upperarm").setDEF("hanim_r_upperarm")
                  .addChild(new Transform().setTranslation(Java.to([doubleToFloat(-0.1907),doubleToFloat(1.4407),doubleToFloat(-0.0325)], Java.type("float[]")))
                    .addChild(new Transform()
                      .addComments(new CommentsBlock("Empty Transform"))
                      .addChild(new Shape().setUSE("HAnimJointShape"))))
                  .addChild(new Shape()
                    .setGeometry(new LineSet().setVertexCount(Java.to([2], Java.type("int[]")))
                      .setCoord(new Coordinate().setPoint(Java.to([doubleToFloat(-0.1907),doubleToFloat(1.4407),doubleToFloat(-0.0325),doubleToFloat(-0.1949),doubleToFloat(1.1388),doubleToFloat(-0.062)], Java.type("float[]"))))
                      .addComments(new CommentsBlock("from r_shoulder to r_elbow vertices 2"))
                      .setColor(new ColorRGBA().setUSE("HAnimSegmentLineColorRGBA"))))
                  .addChild(new HAnimSite("hanim_r_upperarm").setName("r_humeral_medial_epicondyles").setDEF("hanim_r_humeral_medial_epicondyles").setTranslation(Java.to([doubleToFloat(-0.168),doubleToFloat(1.1298),doubleToFloat(-0.1062)], Java.type("float[]")))
                    .addChild(new TouchSensor().setDescription("HAnimSite r_humeral_medial_epicondyles"))
                    .addChild(new Shape().setUSE("HAnimSiteShape")))
                  .addChild(new HAnimSite("hanim_r_upperarm").setName("r_olecranon").setDEF("hanim_r_olecranon").setTranslation(Java.to([doubleToFloat(-0.1907),doubleToFloat(1.1405),doubleToFloat(-0.1065)], Java.type("float[]")))
                    .addChild(new TouchSensor().setDescription("HAnimSite r_olecranon"))
                    .addChild(new Shape().setUSE("HAnimSiteShape")))
                  .addChild(new HAnimSite("hanim_r_upperarm").setName("r_radial_styloid").setDEF("hanim_r_radial_styloid").setTranslation(Java.to([doubleToFloat(-0.1884),doubleToFloat(0.8676),doubleToFloat(-0.036)], Java.type("float[]")))
                    .addChild(new TouchSensor().setDescription("HAnimSite r_radial_styloid"))
                    .addChild(new Shape().setUSE("HAnimSiteShape")))
                  .addChild(new HAnimSite("hanim_r_upperarm").setName("r_radiale").setDEF("hanim_r_radiale").setTranslation(Java.to([doubleToFloat(-0.213),doubleToFloat(1.1305),doubleToFloat(-0.1091)], Java.type("float[]")))
                    .addChild(new TouchSensor().setDescription("HAnimSite r_radiale"))
                    .addChild(new Shape().setUSE("HAnimSiteShape"))))
                .addChild(new HAnimJoint("hanim_r_shoulder").setName("r_elbow").setDEF("hanim_r_elbow").setCenter(Java.to([doubleToFloat(-0.1949),doubleToFloat(1.1388),doubleToFloat(-0.062)], Java.type("float[]")))
                  .addChild(new HAnimSegment("hanim_r_elbow").setName("r_forearm").setDEF("hanim_r_forearm")
                    .addChild(new Transform().setTranslation(Java.to([doubleToFloat(-0.1949),doubleToFloat(1.1388),doubleToFloat(-0.062)], Java.type("float[]")))
                      .addChild(new Transform()
                        .addComments(new CommentsBlock("Empty Transform"))
                        .addChild(new Shape().setUSE("HAnimJointShape"))))
                    .addChild(new Shape()
                      .setGeometry(new LineSet().setVertexCount(Java.to([2], Java.type("int[]")))
                        .setCoord(new Coordinate().setPoint(Java.to([doubleToFloat(-0.1949),doubleToFloat(1.1388),doubleToFloat(-0.062),doubleToFloat(-0.1959),doubleToFloat(0.8694),doubleToFloat(-0.0521)], Java.type("float[]"))))
                        .addComments(new CommentsBlock("from r_elbow to r_radiocarpal vertices 2"))
                        .setColor(new ColorRGBA().setUSE("HAnimSegmentLineColorRGBA"))))
                    .addChild(new HAnimSite("hanim_r_forearm").setName("r_carpal_distal_phalanx_1_tip").setDEF("hanim_r_carpal_distal_phalanx_1_tip")
                      .addChild(new TouchSensor().setDescription("HAnimSite r_carpal_distal_phalanx_1_tip"))
                      .addChild(new Shape().setUSE("HAnimSiteShape")))
                    .addChild(new HAnimSite("hanim_r_forearm").setName("r_dactylion").setDEF("hanim_r_dactylion").setTranslation(Java.to([doubleToFloat(-0.1941),doubleToFloat(0.6772),doubleToFloat(-0.0423)], Java.type("float[]")))
                      .addChild(new TouchSensor().setDescription("HAnimSite r_dactylion"))
                      .addChild(new Shape().setUSE("HAnimSiteShape")))
                    .addChild(new HAnimSite("hanim_r_forearm").setName("r_metacarpal_phalanx_2").setDEF("hanim_r_metacarpal_phalanx_2").setTranslation(Java.to([doubleToFloat(-0.1977),doubleToFloat(0.8169),doubleToFloat(-0.0177)], Java.type("float[]")))
                      .addChild(new TouchSensor().setDescription("HAnimSite r_metacarpal_phalanx_2"))
                      .addChild(new Shape().setUSE("HAnimSiteShape")))
                    .addChild(new HAnimSite("hanim_r_forearm").setName("r_metacarpal_phalanx_3").setDEF("hanim_r_metacarpal_phalanx_3")
                      .addChild(new TouchSensor().setDescription("HAnimSite r_metacarpal_phalanx_3"))
                      .addChild(new Shape().setUSE("HAnimSiteShape")))
                    .addChild(new HAnimSite("hanim_r_forearm").setName("r_metacarpal_phalanx_5").setDEF("hanim_r_metacarpal_phalanx_5").setTranslation(Java.to([doubleToFloat(-0.1929),doubleToFloat(0.789),doubleToFloat(-0.1064)], Java.type("float[]")))
                      .addChild(new TouchSensor().setDescription("HAnimSite r_metacarpal_phalanx_5"))
                      .addChild(new Shape().setUSE("HAnimSiteShape")))
                    .addChild(new HAnimSite("hanim_r_forearm").setName("r_ulnar_styloid").setDEF("hanim_r_ulnar_styloid").setTranslation(Java.to([doubleToFloat(-0.2117),doubleToFloat(0.8562),doubleToFloat(-0.0584)], Java.type("float[]")))
                      .addChild(new TouchSensor().setDescription("HAnimSite r_ulnar_styloid"))
                      .addChild(new Shape().setUSE("HAnimSiteShape"))))
                  .addChild(new HAnimJoint("hanim_r_elbow").setName("r_radiocarpal").setDEF("hanim_r_radiocarpal").setCenter(Java.to([doubleToFloat(-0.1959),doubleToFloat(0.8694),doubleToFloat(-0.0521)], Java.type("float[]"))))))))
          .addJoints(new HAnimJoint("hanim_HAnim").setContainerFieldOverride("joints").setUSE("hanim_humanoid_root"))
          .addJoints(new HAnimJoint("hanim_HAnim").setContainerFieldOverride("joints").setUSE("hanim_sacroiliac"))
          .addJoints(new HAnimJoint("hanim_HAnim").setContainerFieldOverride("joints").setUSE("hanim_l_hip"))
          .addJoints(new HAnimJoint("hanim_HAnim").setContainerFieldOverride("joints").setUSE("hanim_l_knee"))
          .addJoints(new HAnimJoint("hanim_HAnim").setContainerFieldOverride("joints").setUSE("hanim_l_talocrural"))
          .addJoints(new HAnimJoint("hanim_HAnim").setContainerFieldOverride("joints").setUSE("hanim_l_metatarsophalangeal_2"))
          .addJoints(new HAnimJoint("hanim_HAnim").setContainerFieldOverride("joints").setUSE("hanim_r_hip"))
          .addJoints(new HAnimJoint("hanim_HAnim").setContainerFieldOverride("joints").setUSE("hanim_r_knee"))
          .addJoints(new HAnimJoint("hanim_HAnim").setContainerFieldOverride("joints").setUSE("hanim_r_talocrural"))
          .addJoints(new HAnimJoint("hanim_HAnim").setContainerFieldOverride("joints").setUSE("hanim_r_metatarsophalangeal_2"))
          .addJoints(new HAnimJoint("hanim_HAnim").setContainerFieldOverride("joints").setUSE("hanim_vl5"))
          .addJoints(new HAnimJoint("hanim_HAnim").setContainerFieldOverride("joints").setUSE("hanim_skullbase"))
          .addJoints(new HAnimJoint("hanim_HAnim").setContainerFieldOverride("joints").setUSE("hanim_l_shoulder"))
          .addJoints(new HAnimJoint("hanim_HAnim").setContainerFieldOverride("joints").setUSE("hanim_l_elbow"))
          .addJoints(new HAnimJoint("hanim_HAnim").setContainerFieldOverride("joints").setUSE("hanim_l_radiocarpal"))
          .addJoints(new HAnimJoint("hanim_HAnim").setContainerFieldOverride("joints").setUSE("hanim_r_shoulder"))
          .addJoints(new HAnimJoint("hanim_HAnim").setContainerFieldOverride("joints").setUSE("hanim_r_elbow"))
          .addJoints(new HAnimJoint("hanim_HAnim").setContainerFieldOverride("joints").setUSE("hanim_r_radiocarpal"))
          .addSegments(new HAnimSegment("hanim_HAnim").setContainerFieldOverride("segments").setUSE("hanim_sacrum"))
          .addSegments(new HAnimSegment("hanim_HAnim").setContainerFieldOverride("segments").setUSE("hanim_pelvis"))
          .addSegments(new HAnimSegment("hanim_HAnim").setContainerFieldOverride("segments").setUSE("hanim_l_thigh"))
          .addSegments(new HAnimSegment("hanim_HAnim").setContainerFieldOverride("segments").setUSE("hanim_l_calf"))
          .addSegments(new HAnimSegment("hanim_HAnim").setContainerFieldOverride("segments").setUSE("hanim_l_talus"))
          .addSegments(new HAnimSegment("hanim_HAnim").setContainerFieldOverride("segments").setUSE("hanim_r_thigh"))
          .addSegments(new HAnimSegment("hanim_HAnim").setContainerFieldOverride("segments").setUSE("hanim_r_calf"))
          .addSegments(new HAnimSegment("hanim_HAnim").setContainerFieldOverride("segments").setUSE("hanim_r_talus"))
          .addSegments(new HAnimSegment("hanim_HAnim").setContainerFieldOverride("segments").setUSE("hanim_l5"))
          .addSegments(new HAnimSegment("hanim_HAnim").setContainerFieldOverride("segments").setUSE("hanim_l_upperarm"))
          .addSegments(new HAnimSegment("hanim_HAnim").setContainerFieldOverride("segments").setUSE("hanim_l_forearm"))
          .addSegments(new HAnimSegment("hanim_HAnim").setContainerFieldOverride("segments").setUSE("hanim_r_upperarm"))
          .addSegments(new HAnimSegment("hanim_HAnim").setContainerFieldOverride("segments").setUSE("hanim_r_forearm"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_buttocks_standing_wall_contact_point"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_crotch"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_l_asis"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_l_iliocristale"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_l_psis"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_l_trochanterion"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_r_asis"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_r_iliocristale"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_r_psis"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_r_trochanterion"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_adams_apple"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_cervicale"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_l_acromion"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_l_axilla_distal_pt"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_l_axilla_posterior_folds"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_l_axilla_proximal"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_l_chest_midsagittal_plane"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_l_clavicale"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_l_neck_base"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_l_rib10"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_l_thelion"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_mesosternale"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_navel"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_r_acromion"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_r_axilla_distal_pt"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_r_axilla_posterior_folds"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_r_axilla_proximal"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_r_chest_midsagittal_plane"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_r_clavicale"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_r_neck_base"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_r_rib10"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_r_thelion"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_rear_center_midsagittal_plane"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_spine_1_middle_back"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_spine_2_middle_back"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_substernale"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_suprasternale"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_waist_preferred_anterior"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_waist_preferred_posterior"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_l_femoral_lateral_epicondyles"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_l_femoral_medial_epicondyles"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_l_knee_crease"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_l_suprapatella"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_r_femoral_lateral_epicondyles"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_r_femoral_medial_epicondyles"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_r_knee_crease"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_r_suprapatella"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_l_lateral_malleolus"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_l_medial_malleolus"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_l_tibiale"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_l_calcaneus_posterior"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_l_sphyrion"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_l_metatarsal_phalanx_1"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_l_metatarsal_phalanx_5"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_l_tarsal_distal_phalanx_1_tip"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_l_tarsal_distal_phalanx_2_tip"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_l_tarsal_distal_phalanx_3_tip"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_l_tarsal_distal_phalanx_4_tip"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_l_tarsal_distal_phalanx_5_tip"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_r_lateral_malleolus"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_r_medial_malleolus"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_r_tibiale"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_r_calcaneus_posterior"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_r_sphyrion"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_r_metatarsal_phalanx_1"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_r_metatarsal_phalanx_5"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_r_tarsal_distal_phalanx_1_tip"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_r_tarsal_distal_phalanx_2_tip"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_r_tarsal_distal_phalanx_3_tip"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_r_tarsal_distal_phalanx_4_tip"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_r_tarsal_distal_phalanx_5_tip"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_glabella"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_l_ectocanthus"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_l_gonion"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_l_infraorbitale"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_l_tragion"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_menton"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_nuchale"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_opisthocranion"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_r_ectocanthus"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_r_gonion"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_r_infraorbitale"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_r_tragion"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_sellion"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_skull_vertex"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_supramenton"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_l_bideltoid"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_l_humeral_lateral_epicondyles"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_r_bideltoid"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_r_humeral_lateral_epicondyles"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_l_humeral_medial_epicondyles"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_l_olecranon"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_l_radial_styloid"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_l_radiale"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_l_carpal_distal_phalanx_1_tip"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_l_dactylion"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_l_metacarpal_phalanx_2"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_l_metacarpal_phalanx_3"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_l_metacarpal_phalanx_5"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_l_ulnar_styloid"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_r_humeral_medial_epicondyles"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_r_olecranon"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_r_radial_styloid"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_r_radiale"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_r_carpal_distal_phalanx_1_tip"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_r_dactylion"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_r_metacarpal_phalanx_2"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_r_metacarpal_phalanx_3"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_r_metacarpal_phalanx_5"))
          .addSites(new HAnimSite("hanim_HAnim").setContainerFieldOverride("sites").setUSE("hanim_r_ulnar_styloid"))))      ;
    X3D0.toFileX3D("../data/Humanoid1.new.graal.x3d");
    X3D0.toFileJSON("../data/Humanoid1.new.graal.json");
