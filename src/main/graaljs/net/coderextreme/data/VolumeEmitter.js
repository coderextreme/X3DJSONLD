CommentsBlock = Java.type("org.web3d.x3d.jsail.Core.CommentsBlock")
AcousticProperties = Java.type('org.web3d.x3d.jsail.Shape.AcousticProperties')
Analyser = Java.type('org.web3d.x3d.jsail.Sound.Analyser')
Anchor = Java.type('org.web3d.x3d.jsail.Networking.Anchor')
Appearance = Java.type('org.web3d.x3d.jsail.Shape.Appearance')
Arc2D = Java.type('org.web3d.x3d.jsail.Geometry2D.Arc2D')
ArcClose2D = Java.type('org.web3d.x3d.jsail.Geometry2D.ArcClose2D')
AudioClip = Java.type('org.web3d.x3d.jsail.Sound.AudioClip')
AudioDestination = Java.type('org.web3d.x3d.jsail.Sound.AudioDestination')
Background = Java.type('org.web3d.x3d.jsail.EnvironmentalEffects.Background')
BallJoint = Java.type('org.web3d.x3d.jsail.RigidBodyPhysics.BallJoint')
Billboard = Java.type('org.web3d.x3d.jsail.Navigation.Billboard')
BiquadFilter = Java.type('org.web3d.x3d.jsail.Sound.BiquadFilter')
BlendedVolumeStyle = Java.type('org.web3d.x3d.jsail.VolumeRendering.BlendedVolumeStyle')
BooleanFilter = Java.type('org.web3d.x3d.jsail.EventUtilities.BooleanFilter')
BooleanSequencer = Java.type('org.web3d.x3d.jsail.EventUtilities.BooleanSequencer')
BooleanToggle = Java.type('org.web3d.x3d.jsail.EventUtilities.BooleanToggle')
BooleanTrigger = Java.type('org.web3d.x3d.jsail.EventUtilities.BooleanTrigger')
BoundaryEnhancementVolumeStyle = Java.type('org.web3d.x3d.jsail.VolumeRendering.BoundaryEnhancementVolumeStyle')
BoundedPhysicsModel = Java.type('org.web3d.x3d.jsail.ParticleSystems.BoundedPhysicsModel')
Box = Java.type('org.web3d.x3d.jsail.Geometry3D.Box')
BufferAudioSource = Java.type('org.web3d.x3d.jsail.Sound.BufferAudioSource')
CADAssembly = Java.type('org.web3d.x3d.jsail.CADGeometry.CADAssembly')
CADFace = Java.type('org.web3d.x3d.jsail.CADGeometry.CADFace')
CADLayer = Java.type('org.web3d.x3d.jsail.CADGeometry.CADLayer')
CADPart = Java.type('org.web3d.x3d.jsail.CADGeometry.CADPart')
CartoonVolumeStyle = Java.type('org.web3d.x3d.jsail.VolumeRendering.CartoonVolumeStyle')
ChannelMerger = Java.type('org.web3d.x3d.jsail.Sound.ChannelMerger')
ChannelSelector = Java.type('org.web3d.x3d.jsail.Sound.ChannelSelector')
ChannelSplitter = Java.type('org.web3d.x3d.jsail.Sound.ChannelSplitter')
Circle2D = Java.type('org.web3d.x3d.jsail.Geometry2D.Circle2D')
ClipPlane = Java.type('org.web3d.x3d.jsail.Rendering.ClipPlane')
CollidableOffset = Java.type('org.web3d.x3d.jsail.RigidBodyPhysics.CollidableOffset')
CollidableShape = Java.type('org.web3d.x3d.jsail.RigidBodyPhysics.CollidableShape')
Collision = Java.type('org.web3d.x3d.jsail.Navigation.Collision')
CollisionCollection = Java.type('org.web3d.x3d.jsail.RigidBodyPhysics.CollisionCollection')
CollisionSensor = Java.type('org.web3d.x3d.jsail.RigidBodyPhysics.CollisionSensor')
CollisionSpace = Java.type('org.web3d.x3d.jsail.RigidBodyPhysics.CollisionSpace')
Color = Java.type('org.web3d.x3d.jsail.Rendering.Color')
ColorChaser = Java.type('org.web3d.x3d.jsail.Followers.ColorChaser')
ColorDamper = Java.type('org.web3d.x3d.jsail.Followers.ColorDamper')
ColorInterpolator = Java.type('org.web3d.x3d.jsail.Interpolation.ColorInterpolator')
ColorRGBA = Java.type('org.web3d.x3d.jsail.Rendering.ColorRGBA')
ComposedCubeMapTexture = Java.type('org.web3d.x3d.jsail.CubeMapTexturing.ComposedCubeMapTexture')
ComposedShader = Java.type('org.web3d.x3d.jsail.Shaders.ComposedShader')
ComposedTexture3D = Java.type('org.web3d.x3d.jsail.Texturing3D.ComposedTexture3D')
ComposedVolumeStyle = Java.type('org.web3d.x3d.jsail.VolumeRendering.ComposedVolumeStyle')
Cone = Java.type('org.web3d.x3d.jsail.Geometry3D.Cone')
ConeEmitter = Java.type('org.web3d.x3d.jsail.ParticleSystems.ConeEmitter')
Contact = Java.type('org.web3d.x3d.jsail.RigidBodyPhysics.Contact')
Contour2D = Java.type('org.web3d.x3d.jsail.NURBS.Contour2D')
ContourPolyline2D = Java.type('org.web3d.x3d.jsail.NURBS.ContourPolyline2D')
Convolver = Java.type('org.web3d.x3d.jsail.Sound.Convolver')
Coordinate = Java.type('org.web3d.x3d.jsail.Rendering.Coordinate')
CoordinateChaser = Java.type('org.web3d.x3d.jsail.Followers.CoordinateChaser')
CoordinateDamper = Java.type('org.web3d.x3d.jsail.Followers.CoordinateDamper')
CoordinateDouble = Java.type('org.web3d.x3d.jsail.Rendering.CoordinateDouble')
CoordinateInterpolator = Java.type('org.web3d.x3d.jsail.Interpolation.CoordinateInterpolator')
CoordinateInterpolator2D = Java.type('org.web3d.x3d.jsail.Interpolation.CoordinateInterpolator2D')
Cylinder = Java.type('org.web3d.x3d.jsail.Geometry3D.Cylinder')
CylinderSensor = Java.type('org.web3d.x3d.jsail.PointingDeviceSensor.CylinderSensor')
Delay = Java.type('org.web3d.x3d.jsail.Sound.Delay')
DirectionalLight = Java.type('org.web3d.x3d.jsail.Lighting.DirectionalLight')
DISEntityManager = Java.type('org.web3d.x3d.jsail.DIS.DISEntityManager')
DISEntityTypeMapping = Java.type('org.web3d.x3d.jsail.DIS.DISEntityTypeMapping')
Disk2D = Java.type('org.web3d.x3d.jsail.Geometry2D.Disk2D')
DoubleAxisHingeJoint = Java.type('org.web3d.x3d.jsail.RigidBodyPhysics.DoubleAxisHingeJoint')
DynamicsCompressor = Java.type('org.web3d.x3d.jsail.Sound.DynamicsCompressor')
EaseInEaseOut = Java.type('org.web3d.x3d.jsail.Interpolation.EaseInEaseOut')
EdgeEnhancementVolumeStyle = Java.type('org.web3d.x3d.jsail.VolumeRendering.EdgeEnhancementVolumeStyle')
ElevationGrid = Java.type('org.web3d.x3d.jsail.Geometry3D.ElevationGrid')
EspduTransform = Java.type('org.web3d.x3d.jsail.DIS.EspduTransform')
ExplosionEmitter = Java.type('org.web3d.x3d.jsail.ParticleSystems.ExplosionEmitter')
Extrusion = Java.type('org.web3d.x3d.jsail.Geometry3D.Extrusion')
FillProperties = Java.type('org.web3d.x3d.jsail.Shape.FillProperties')
FloatVertexAttribute = Java.type('org.web3d.x3d.jsail.Shaders.FloatVertexAttribute')
Fog = Java.type('org.web3d.x3d.jsail.EnvironmentalEffects.Fog')
FogCoordinate = Java.type('org.web3d.x3d.jsail.EnvironmentalEffects.FogCoordinate')
FontStyle = Java.type('org.web3d.x3d.jsail.Text.FontStyle')
ForcePhysicsModel = Java.type('org.web3d.x3d.jsail.ParticleSystems.ForcePhysicsModel')
Gain = Java.type('org.web3d.x3d.jsail.Sound.Gain')
GeneratedCubeMapTexture = Java.type('org.web3d.x3d.jsail.CubeMapTexturing.GeneratedCubeMapTexture')
GeoCoordinate = Java.type('org.web3d.x3d.jsail.Geospatial.GeoCoordinate')
GeoElevationGrid = Java.type('org.web3d.x3d.jsail.Geospatial.GeoElevationGrid')
GeoLocation = Java.type('org.web3d.x3d.jsail.Geospatial.GeoLocation')
GeoLOD = Java.type('org.web3d.x3d.jsail.Geospatial.GeoLOD')
GeoMetadata = Java.type('org.web3d.x3d.jsail.Geospatial.GeoMetadata')
GeoOrigin = Java.type('org.web3d.x3d.jsail.Geospatial.GeoOrigin')
GeoPositionInterpolator = Java.type('org.web3d.x3d.jsail.Geospatial.GeoPositionInterpolator')
GeoProximitySensor = Java.type('org.web3d.x3d.jsail.Geospatial.GeoProximitySensor')
GeoTouchSensor = Java.type('org.web3d.x3d.jsail.Geospatial.GeoTouchSensor')
GeoTransform = Java.type('org.web3d.x3d.jsail.Geospatial.GeoTransform')
GeoViewpoint = Java.type('org.web3d.x3d.jsail.Geospatial.GeoViewpoint')
Group = Java.type('org.web3d.x3d.jsail.Grouping.Group')
HAnimDisplacer = Java.type('org.web3d.x3d.jsail.HAnim.HAnimDisplacer')
HAnimHumanoid = Java.type('org.web3d.x3d.jsail.HAnim.HAnimHumanoid')
HAnimJoint = Java.type('org.web3d.x3d.jsail.HAnim.HAnimJoint')
HAnimMotion = Java.type('org.web3d.x3d.jsail.HAnim.HAnimMotion')
HAnimSegment = Java.type('org.web3d.x3d.jsail.HAnim.HAnimSegment')
HAnimSite = Java.type('org.web3d.x3d.jsail.HAnim.HAnimSite')
ImageCubeMapTexture = Java.type('org.web3d.x3d.jsail.CubeMapTexturing.ImageCubeMapTexture')
ImageTexture = Java.type('org.web3d.x3d.jsail.Texturing.ImageTexture')
ImageTexture3D = Java.type('org.web3d.x3d.jsail.Texturing3D.ImageTexture3D')
IndexedFaceSet = Java.type('org.web3d.x3d.jsail.Geometry3D.IndexedFaceSet')
IndexedLineSet = Java.type('org.web3d.x3d.jsail.Rendering.IndexedLineSet')
IndexedQuadSet = Java.type('org.web3d.x3d.jsail.CADGeometry.IndexedQuadSet')
IndexedTriangleFanSet = Java.type('org.web3d.x3d.jsail.Rendering.IndexedTriangleFanSet')
IndexedTriangleSet = Java.type('org.web3d.x3d.jsail.Rendering.IndexedTriangleSet')
IndexedTriangleStripSet = Java.type('org.web3d.x3d.jsail.Rendering.IndexedTriangleStripSet')
Inline = Java.type('org.web3d.x3d.jsail.Networking.Inline')
IntegerSequencer = Java.type('org.web3d.x3d.jsail.EventUtilities.IntegerSequencer')
IntegerTrigger = Java.type('org.web3d.x3d.jsail.EventUtilities.IntegerTrigger')
IsoSurfaceVolumeData = Java.type('org.web3d.x3d.jsail.VolumeRendering.IsoSurfaceVolumeData')
KeySensor = Java.type('org.web3d.x3d.jsail.KeyDeviceSensor.KeySensor')
Layer = Java.type('org.web3d.x3d.jsail.Layering.Layer')
LayerSet = Java.type('org.web3d.x3d.jsail.Layering.LayerSet')
Layout = Java.type('org.web3d.x3d.jsail.Layout.Layout')
LayoutGroup = Java.type('org.web3d.x3d.jsail.Layout.LayoutGroup')
LayoutLayer = Java.type('org.web3d.x3d.jsail.Layout.LayoutLayer')
LinePickSensor = Java.type('org.web3d.x3d.jsail.Picking.LinePickSensor')
LineProperties = Java.type('org.web3d.x3d.jsail.Shape.LineProperties')
LineSet = Java.type('org.web3d.x3d.jsail.Rendering.LineSet')
ListenerPointSource = Java.type('org.web3d.x3d.jsail.Sound.ListenerPointSource')
LoadSensor = Java.type('org.web3d.x3d.jsail.Networking.LoadSensor')
LocalFog = Java.type('org.web3d.x3d.jsail.EnvironmentalEffects.LocalFog')
LOD = Java.type('org.web3d.x3d.jsail.Navigation.LOD')
Material = Java.type('org.web3d.x3d.jsail.Shape.Material')
Matrix3VertexAttribute = Java.type('org.web3d.x3d.jsail.Shaders.Matrix3VertexAttribute')
Matrix4VertexAttribute = Java.type('org.web3d.x3d.jsail.Shaders.Matrix4VertexAttribute')
MetadataBoolean = Java.type('org.web3d.x3d.jsail.Core.MetadataBoolean')
MetadataDouble = Java.type('org.web3d.x3d.jsail.Core.MetadataDouble')
MetadataFloat = Java.type('org.web3d.x3d.jsail.Core.MetadataFloat')
MetadataInteger = Java.type('org.web3d.x3d.jsail.Core.MetadataInteger')
MetadataSet = Java.type('org.web3d.x3d.jsail.Core.MetadataSet')
MetadataString = Java.type('org.web3d.x3d.jsail.Core.MetadataString')
MicrophoneSource = Java.type('org.web3d.x3d.jsail.Sound.MicrophoneSource')
MotorJoint = Java.type('org.web3d.x3d.jsail.RigidBodyPhysics.MotorJoint')
MovieTexture = Java.type('org.web3d.x3d.jsail.Texturing.MovieTexture')
MultiTexture = Java.type('org.web3d.x3d.jsail.Texturing.MultiTexture')
MultiTextureCoordinate = Java.type('org.web3d.x3d.jsail.Texturing.MultiTextureCoordinate')
MultiTextureTransform = Java.type('org.web3d.x3d.jsail.Texturing.MultiTextureTransform')
NavigationInfo = Java.type('org.web3d.x3d.jsail.Navigation.NavigationInfo')
Normal = Java.type('org.web3d.x3d.jsail.Rendering.Normal')
NormalInterpolator = Java.type('org.web3d.x3d.jsail.Interpolation.NormalInterpolator')
NurbsCurve = Java.type('org.web3d.x3d.jsail.NURBS.NurbsCurve')
NurbsCurve2D = Java.type('org.web3d.x3d.jsail.NURBS.NurbsCurve2D')
NurbsOrientationInterpolator = Java.type('org.web3d.x3d.jsail.NURBS.NurbsOrientationInterpolator')
NurbsPatchSurface = Java.type('org.web3d.x3d.jsail.NURBS.NurbsPatchSurface')
NurbsPositionInterpolator = Java.type('org.web3d.x3d.jsail.NURBS.NurbsPositionInterpolator')
NurbsSet = Java.type('org.web3d.x3d.jsail.NURBS.NurbsSet')
NurbsSurfaceInterpolator = Java.type('org.web3d.x3d.jsail.NURBS.NurbsSurfaceInterpolator')
NurbsSweptSurface = Java.type('org.web3d.x3d.jsail.NURBS.NurbsSweptSurface')
NurbsSwungSurface = Java.type('org.web3d.x3d.jsail.NURBS.NurbsSwungSurface')
NurbsTextureCoordinate = Java.type('org.web3d.x3d.jsail.NURBS.NurbsTextureCoordinate')
NurbsTrimmedSurface = Java.type('org.web3d.x3d.jsail.NURBS.NurbsTrimmedSurface')
OpacityMapVolumeStyle = Java.type('org.web3d.x3d.jsail.VolumeRendering.OpacityMapVolumeStyle')
OrientationChaser = Java.type('org.web3d.x3d.jsail.Followers.OrientationChaser')
OrientationDamper = Java.type('org.web3d.x3d.jsail.Followers.OrientationDamper')
OrientationInterpolator = Java.type('org.web3d.x3d.jsail.Interpolation.OrientationInterpolator')
OrthoViewpoint = Java.type('org.web3d.x3d.jsail.Navigation.OrthoViewpoint')
OscillatorSource = Java.type('org.web3d.x3d.jsail.Sound.OscillatorSource')
PackagedShader = Java.type('org.web3d.x3d.jsail.Shaders.PackagedShader')
ParticleSystem = Java.type('org.web3d.x3d.jsail.ParticleSystems.ParticleSystem')
PeriodicWave = Java.type('org.web3d.x3d.jsail.Sound.PeriodicWave')
PhysicalMaterial = Java.type('org.web3d.x3d.jsail.Shape.PhysicalMaterial')
PickableGroup = Java.type('org.web3d.x3d.jsail.Picking.PickableGroup')
PixelTexture = Java.type('org.web3d.x3d.jsail.Texturing.PixelTexture')
PixelTexture3D = Java.type('org.web3d.x3d.jsail.Texturing3D.PixelTexture3D')
PlaneSensor = Java.type('org.web3d.x3d.jsail.PointingDeviceSensor.PlaneSensor')
PointEmitter = Java.type('org.web3d.x3d.jsail.ParticleSystems.PointEmitter')
PointLight = Java.type('org.web3d.x3d.jsail.Lighting.PointLight')
PointPickSensor = Java.type('org.web3d.x3d.jsail.Picking.PointPickSensor')
PointProperties = Java.type('org.web3d.x3d.jsail.Shape.PointProperties')
PointSet = Java.type('org.web3d.x3d.jsail.Rendering.PointSet')
Polyline2D = Java.type('org.web3d.x3d.jsail.Geometry2D.Polyline2D')
PolylineEmitter = Java.type('org.web3d.x3d.jsail.ParticleSystems.PolylineEmitter')
Polypoint2D = Java.type('org.web3d.x3d.jsail.Geometry2D.Polypoint2D')
PositionChaser = Java.type('org.web3d.x3d.jsail.Followers.PositionChaser')
PositionChaser2D = Java.type('org.web3d.x3d.jsail.Followers.PositionChaser2D')
PositionDamper = Java.type('org.web3d.x3d.jsail.Followers.PositionDamper')
PositionDamper2D = Java.type('org.web3d.x3d.jsail.Followers.PositionDamper2D')
PositionInterpolator = Java.type('org.web3d.x3d.jsail.Interpolation.PositionInterpolator')
PositionInterpolator2D = Java.type('org.web3d.x3d.jsail.Interpolation.PositionInterpolator2D')
PrimitivePickSensor = Java.type('org.web3d.x3d.jsail.Picking.PrimitivePickSensor')
ProgramShader = Java.type('org.web3d.x3d.jsail.Shaders.ProgramShader')
ProjectionVolumeStyle = Java.type('org.web3d.x3d.jsail.VolumeRendering.ProjectionVolumeStyle')
ProtoInstance = Java.type('org.web3d.x3d.jsail.Core.ProtoInstance')
ProximitySensor = Java.type('org.web3d.x3d.jsail.EnvironmentalSensor.ProximitySensor')
QuadSet = Java.type('org.web3d.x3d.jsail.CADGeometry.QuadSet')
ReceiverPdu = Java.type('org.web3d.x3d.jsail.DIS.ReceiverPdu')
Rectangle2D = Java.type('org.web3d.x3d.jsail.Geometry2D.Rectangle2D')
RigidBody = Java.type('org.web3d.x3d.jsail.RigidBodyPhysics.RigidBody')
RigidBodyCollection = Java.type('org.web3d.x3d.jsail.RigidBodyPhysics.RigidBodyCollection')
ScalarChaser = Java.type('org.web3d.x3d.jsail.Followers.ScalarChaser')
ScalarDamper = Java.type('org.web3d.x3d.jsail.Followers.ScalarDamper')
ScalarInterpolator = Java.type('org.web3d.x3d.jsail.Interpolation.ScalarInterpolator')
ScreenFontStyle = Java.type('org.web3d.x3d.jsail.Layout.ScreenFontStyle')
ScreenGroup = Java.type('org.web3d.x3d.jsail.Layout.ScreenGroup')
Script = Java.type('org.web3d.x3d.jsail.Scripting.Script')
SegmentedVolumeData = Java.type('org.web3d.x3d.jsail.VolumeRendering.SegmentedVolumeData')
ShadedVolumeStyle = Java.type('org.web3d.x3d.jsail.VolumeRendering.ShadedVolumeStyle')
ShaderPart = Java.type('org.web3d.x3d.jsail.Shaders.ShaderPart')
ShaderProgram = Java.type('org.web3d.x3d.jsail.Shaders.ShaderProgram')
Shape = Java.type('org.web3d.x3d.jsail.Shape.Shape')
SignalPdu = Java.type('org.web3d.x3d.jsail.DIS.SignalPdu')
SilhouetteEnhancementVolumeStyle = Java.type('org.web3d.x3d.jsail.VolumeRendering.SilhouetteEnhancementVolumeStyle')
SingleAxisHingeJoint = Java.type('org.web3d.x3d.jsail.RigidBodyPhysics.SingleAxisHingeJoint')
SliderJoint = Java.type('org.web3d.x3d.jsail.RigidBodyPhysics.SliderJoint')
Sound = Java.type('org.web3d.x3d.jsail.Sound.Sound')
SpatialSound = Java.type('org.web3d.x3d.jsail.Sound.SpatialSound')
Sphere = Java.type('org.web3d.x3d.jsail.Geometry3D.Sphere')
SphereSensor = Java.type('org.web3d.x3d.jsail.PointingDeviceSensor.SphereSensor')
SplinePositionInterpolator = Java.type('org.web3d.x3d.jsail.Interpolation.SplinePositionInterpolator')
SplinePositionInterpolator2D = Java.type('org.web3d.x3d.jsail.Interpolation.SplinePositionInterpolator2D')
SplineScalarInterpolator = Java.type('org.web3d.x3d.jsail.Interpolation.SplineScalarInterpolator')
SpotLight = Java.type('org.web3d.x3d.jsail.Lighting.SpotLight')
SquadOrientationInterpolator = Java.type('org.web3d.x3d.jsail.Interpolation.SquadOrientationInterpolator')
StaticGroup = Java.type('org.web3d.x3d.jsail.Grouping.StaticGroup')
StreamAudioDestination = Java.type('org.web3d.x3d.jsail.Sound.StreamAudioDestination')
StreamAudioSource = Java.type('org.web3d.x3d.jsail.Sound.StreamAudioSource')
StringSensor = Java.type('org.web3d.x3d.jsail.KeyDeviceSensor.StringSensor')
SurfaceEmitter = Java.type('org.web3d.x3d.jsail.ParticleSystems.SurfaceEmitter')
Switch = Java.type('org.web3d.x3d.jsail.Grouping.Switch')
TexCoordChaser2D = Java.type('org.web3d.x3d.jsail.Followers.TexCoordChaser2D')
TexCoordDamper2D = Java.type('org.web3d.x3d.jsail.Followers.TexCoordDamper2D')
Text = Java.type('org.web3d.x3d.jsail.Text.Text')
TextureBackground = Java.type('org.web3d.x3d.jsail.EnvironmentalEffects.TextureBackground')
TextureCoordinate = Java.type('org.web3d.x3d.jsail.Texturing.TextureCoordinate')
TextureCoordinate3D = Java.type('org.web3d.x3d.jsail.Texturing3D.TextureCoordinate3D')
TextureCoordinate4D = Java.type('org.web3d.x3d.jsail.Texturing3D.TextureCoordinate4D')
TextureCoordinateGenerator = Java.type('org.web3d.x3d.jsail.Texturing.TextureCoordinateGenerator')
TextureProjector = Java.type('org.web3d.x3d.jsail.TextureProjection.TextureProjector')
TextureProjectorParallel = Java.type('org.web3d.x3d.jsail.TextureProjection.TextureProjectorParallel')
TextureProperties = Java.type('org.web3d.x3d.jsail.Texturing.TextureProperties')
TextureTransform = Java.type('org.web3d.x3d.jsail.Texturing.TextureTransform')
TextureTransform3D = Java.type('org.web3d.x3d.jsail.Texturing3D.TextureTransform3D')
TextureTransformMatrix3D = Java.type('org.web3d.x3d.jsail.Texturing3D.TextureTransformMatrix3D')
TimeSensor = Java.type('org.web3d.x3d.jsail.Time.TimeSensor')
TimeTrigger = Java.type('org.web3d.x3d.jsail.EventUtilities.TimeTrigger')
ToneMappedVolumeStyle = Java.type('org.web3d.x3d.jsail.VolumeRendering.ToneMappedVolumeStyle')
TouchSensor = Java.type('org.web3d.x3d.jsail.PointingDeviceSensor.TouchSensor')
Transform = Java.type('org.web3d.x3d.jsail.Grouping.Transform')
TransformSensor = Java.type('org.web3d.x3d.jsail.EnvironmentalSensor.TransformSensor')
TransmitterPdu = Java.type('org.web3d.x3d.jsail.DIS.TransmitterPdu')
TriangleFanSet = Java.type('org.web3d.x3d.jsail.Rendering.TriangleFanSet')
TriangleSet = Java.type('org.web3d.x3d.jsail.Rendering.TriangleSet')
TriangleSet2D = Java.type('org.web3d.x3d.jsail.Geometry2D.TriangleSet2D')
TriangleStripSet = Java.type('org.web3d.x3d.jsail.Rendering.TriangleStripSet')
TwoSidedMaterial = Java.type('org.web3d.x3d.jsail.Shape.TwoSidedMaterial')
UniversalJoint = Java.type('org.web3d.x3d.jsail.RigidBodyPhysics.UniversalJoint')
UnlitMaterial = Java.type('org.web3d.x3d.jsail.Shape.UnlitMaterial')
Viewpoint = Java.type('org.web3d.x3d.jsail.Navigation.Viewpoint')
ViewpointGroup = Java.type('org.web3d.x3d.jsail.Navigation.ViewpointGroup')
Viewport = Java.type('org.web3d.x3d.jsail.Layering.Viewport')
VisibilitySensor = Java.type('org.web3d.x3d.jsail.EnvironmentalSensor.VisibilitySensor')
VolumeData = Java.type('org.web3d.x3d.jsail.VolumeRendering.VolumeData')
VolumeEmitter = Java.type('org.web3d.x3d.jsail.ParticleSystems.VolumeEmitter')
VolumePickSensor = Java.type('org.web3d.x3d.jsail.Picking.VolumePickSensor')
WaveShaper = Java.type('org.web3d.x3d.jsail.Sound.WaveShaper')
WindPhysicsModel = Java.type('org.web3d.x3d.jsail.ParticleSystems.WindPhysicsModel')
WorldInfo = Java.type('org.web3d.x3d.jsail.Core.WorldInfo')
component = Java.type('org.web3d.x3d.jsail.Core.component')
connect = Java.type('org.web3d.x3d.jsail.Core.connect')
EXPORT = Java.type('org.web3d.x3d.jsail.Networking.EXPORT')
ExternProtoDeclare = Java.type('org.web3d.x3d.jsail.Core.ExternProtoDeclare')
field = Java.type('org.web3d.x3d.jsail.Core.field')
fieldValue = Java.type('org.web3d.x3d.jsail.Core.fieldValue')
head = Java.type('org.web3d.x3d.jsail.Core.head')
IMPORT = Java.type('org.web3d.x3d.jsail.Networking.IMPORT')
IS = Java.type('org.web3d.x3d.jsail.Core.IS')
meta = Java.type('org.web3d.x3d.jsail.Core.meta')
ProtoBody = Java.type('org.web3d.x3d.jsail.Core.ProtoBody')
ProtoDeclare = Java.type('org.web3d.x3d.jsail.Core.ProtoDeclare')
ProtoInterface = Java.type('org.web3d.x3d.jsail.Core.ProtoInterface')
ROUTE = Java.type('org.web3d.x3d.jsail.Core.ROUTE')
Scene = Java.type('org.web3d.x3d.jsail.Core.Scene')
unit = Java.type('org.web3d.x3d.jsail.Core.unit')
X3D = Java.type('org.web3d.x3d.jsail.Core.X3D')
SFBool = Java.type('org.web3d.x3d.jsail.fields.SFBool')
MFBool = Java.type('org.web3d.x3d.jsail.fields.MFBool')
SFColor = Java.type('org.web3d.x3d.jsail.fields.SFColor')
MFColor = Java.type('org.web3d.x3d.jsail.fields.MFColor')
SFColorRGBA = Java.type('org.web3d.x3d.jsail.fields.SFColorRGBA')
MFColorRGBA = Java.type('org.web3d.x3d.jsail.fields.MFColorRGBA')
SFDouble = Java.type('org.web3d.x3d.jsail.fields.SFDouble')
MFDouble = Java.type('org.web3d.x3d.jsail.fields.MFDouble')
SFFloat = Java.type('org.web3d.x3d.jsail.fields.SFFloat')
MFFloat = Java.type('org.web3d.x3d.jsail.fields.MFFloat')
SFImage = Java.type('org.web3d.x3d.jsail.fields.SFImage')
MFImage = Java.type('org.web3d.x3d.jsail.fields.MFImage')
SFInt32 = Java.type('org.web3d.x3d.jsail.fields.SFInt32')
MFInt32 = Java.type('org.web3d.x3d.jsail.fields.MFInt32')
SFMatrix3d = Java.type('org.web3d.x3d.jsail.fields.SFMatrix3d')
MFMatrix3d = Java.type('org.web3d.x3d.jsail.fields.MFMatrix3d')
SFMatrix3f = Java.type('org.web3d.x3d.jsail.fields.SFMatrix3f')
MFMatrix3f = Java.type('org.web3d.x3d.jsail.fields.MFMatrix3f')
SFMatrix4d = Java.type('org.web3d.x3d.jsail.fields.SFMatrix4d')
MFMatrix4d = Java.type('org.web3d.x3d.jsail.fields.MFMatrix4d')
SFMatrix4f = Java.type('org.web3d.x3d.jsail.fields.SFMatrix4f')
MFMatrix4f = Java.type('org.web3d.x3d.jsail.fields.MFMatrix4f')
SFNode = Java.type('org.web3d.x3d.jsail.fields.SFNode')
MFNode = Java.type('org.web3d.x3d.jsail.fields.MFNode')
SFRotation = Java.type('org.web3d.x3d.jsail.fields.SFRotation')
MFRotation = Java.type('org.web3d.x3d.jsail.fields.MFRotation')
SFString = Java.type('org.web3d.x3d.jsail.fields.SFString')
MFString = Java.type('org.web3d.x3d.jsail.fields.MFString')
SFTime = Java.type('org.web3d.x3d.jsail.fields.SFTime')
MFTime = Java.type('org.web3d.x3d.jsail.fields.MFTime')
SFVec2d = Java.type('org.web3d.x3d.jsail.fields.SFVec2d')
MFVec2d = Java.type('org.web3d.x3d.jsail.fields.MFVec2d')
SFVec2f = Java.type('org.web3d.x3d.jsail.fields.SFVec2f')
MFVec2f = Java.type('org.web3d.x3d.jsail.fields.MFVec2f')
SFVec3d = Java.type('org.web3d.x3d.jsail.fields.SFVec3d')
MFVec3d = Java.type('org.web3d.x3d.jsail.fields.MFVec3d')
SFVec3f = Java.type('org.web3d.x3d.jsail.fields.SFVec3f')
MFVec3f = Java.type('org.web3d.x3d.jsail.fields.MFVec3f')
SFVec4d = Java.type('org.web3d.x3d.jsail.fields.SFVec4d')
MFVec4d = Java.type('org.web3d.x3d.jsail.fields.MFVec4d')
SFVec4f = Java.type('org.web3d.x3d.jsail.fields.SFVec4f')
MFVec4f = Java.type('org.web3d.x3d.jsail.fields.MFVec4f')
var ConfigurationProperties = Packages.org.web3d.x3d.jsail.ConfigurationProperties;
ConfigurationProperties.showDefaultAttributes = false;
ConfigurationProperties.xsltEngine = ConfigurationProperties.XSLT_ENGINE_NATIVE_JAVA;
ConfigurationProperties.deleteIntermediateFiles = false;
ConfigurationProperties.setStripTrailingZeroes(true);
ConfigurationProperties.setStripDefaultAttributes(true);
function doubleToFloat(d) {
    if (Float32Array)
	return new Float32Array(d);
}
      var X3D0 =  new X3D().setProfile("Interchange").setVersion("4.0")
      .setHead(new head()
        .addComponent(new component().setName("ParticleSystems").setLevel(3))
        .addMeta(new meta().setName("comment").setContent("World of Titania"))
        .addMeta(new meta().setName("created").setContent("Sun, 01 May 2016 01:57:45 GMT"))
        .addMeta(new meta().setName("creator").setContent("holger"))
        .addMeta(new meta().setName("creator").setContent("Holger Seelig"))
        .addMeta(new meta().setName("generator").setContent("Titania V1.4.2, http://titania.create3000.de"))
        .addMeta(new meta().setName("generator").setContent("Sunrize X3D Editor V1.6.10, https://create3000.github.io/sunrize/"))
        .addMeta(new meta().setName("identifier").setContent("file:///home/holger/Projekte/Cobweb/excite/tests/Components/ParticleSystems/VolumeEmitter.x3d"))
        .addMeta(new meta().setName("modified").setContent("Mon, 22 Apr 2024 19:55:06 GMT")))
      .setScene(new Scene()
        .addChild(new WorldInfo().setTitle("VolumeEmitter")
          .setMetadata(new MetadataSet().setName("Titania").setDEF("Titania").setReference("http://titania.create3000.de")
            .addValue(new MetadataSet().setName("NavigationInfo").setDEF("NavigationInfo").setReference("http://titania.create3000.de")
              .addValue(new MetadataString().setName("type").setDEF("type").setReference("http://titania.create3000.de").setValue(Java.to(["EXAMINE"], Java.type("java.lang.String[]")))))
            .addValue(new MetadataSet().setName("Viewpoint").setDEF("Viewpoint").setReference("http://titania.create3000.de")
              .addValue(new MetadataDouble().setName("position").setDEF("position").setReference("http://titania.create3000.de").setValue(Java.to([0,0,10], Java.type("double[]"))))
              .addValue(new MetadataDouble().setName("orientation").setDEF("orientation").setReference("http://titania.create3000.de").setValue(Java.to([0,0,1,0], Java.type("double[]"))))
              .addValue(new MetadataDouble().setName("centerOfRotation").setDEF("centerOfRotation").setReference("http://titania.create3000.de").setValue(Java.to([0,0,0], Java.type("double[]")))))
            .addValue(new MetadataSet().setName("Selection").setDEF("Selection").setReference("http://titania.create3000.de")
              .addValue(new MetadataSet().setName("previous").setDEF("previous").setReference("http://titania.create3000.de")))))
        .addChild(new Background().setDEF("Gray").setSkyColor(Java.to(doubleToFloat([0.2,0.2,0.2]), Java.type("float[]"))))
        .addChild(new OrthoViewpoint().setDescription("OrthoViewpoint").setFieldOfView(Java.to(doubleToFloat([-1.5,-1.5,1.5,1.5]), Java.type("float[]"))))
        .addChild(new Viewpoint().setDescription("Viewpoint").setPosition(Java.to(doubleToFloat([0,0,8]), Java.type("float[]"))))
        .addChild(new ParticleSystem().setGeometryType("POINT").setMaxParticles(100000).setParticleLifetime(60).setLifetimeVariation(0.01).setParticleSize(Java.to(doubleToFloat([0.1,0.1]), Java.type("float[]"))).setColorKey(Java.to(doubleToFloat([0,0.1,0.4,1]), Java.type("float[]")))
          .setEmitter(new VolumeEmitter().setDirection(Java.to(doubleToFloat([0,0,0]), Java.type("float[]"))).setMass(0.01).setSurfaceArea(0.01)
            .setCoord(new Coordinate().setPoint(Java.to(doubleToFloat([0.0277709,-1,1,2.02777,-1,1,2.02777,1,1,0.0277709,1,1,0.0277709,-1,-1,2.02777,-1,-1,2.02777,1,-1,0.0277709,1,-1,-1.01983,1,0,-1.01983,0.974928,-0.222521,-1.06609,0.974928,-0.217658,-1.11034,0.974928,-0.203283,-1.15062,0.974928,-0.180023,-1.18519,0.974928,-0.148896,-1.21254,0.974928,-0.11126,-1.23146,0.974928,-0.0687627,-1.24113,0.974928,-0.0232598,-1.24113,0.974928,0.0232598,-1.23146,0.974928,0.0687627,-1.21254,0.974928,0.11126,-1.18519,0.974928,0.148896,-1.15062,0.974928,0.180023,-1.11034,0.974928,0.203283,-1.06609,0.974928,0.217658,-1.01983,0.974928,0.222521,-0.973561,0.974928,0.217658,-0.929318,0.974928,0.203283,-0.889031,0.974928,0.180023,-0.85446,0.974928,0.148896,-0.827116,0.974928,0.11126,-0.808195,0.974928,0.0687627,-0.798523,0.974928,0.0232598,-0.798523,0.974928,-0.0232598,-0.808195,0.974928,-0.0687627,-0.827116,0.974928,-0.11126,-0.85446,0.974928,-0.148896,-0.889031,0.974928,-0.180023,-0.929318,0.974928,-0.203283,-0.973561,0.974928,-0.217658,-1.01983,0.900969,-0.433884,-1.11004,0.900969,-0.424402,-1.19631,0.900969,-0.396373,-1.27486,0.900969,-0.351019,-1.34227,0.900969,-0.290325,-1.39558,0.900969,-0.216942,-1.43248,0.900969,-0.134077,-1.45134,0.900969,-0.0453532,-1.45134,0.900969,0.0453532,-1.43248,0.900969,0.134077,-1.39558,0.900969,0.216942,-1.34227,0.900969,0.290325,-1.27486,0.900969,0.351019,-1.19631,0.900969,0.396373,-1.11004,0.900969,0.424402,-1.01983,0.900969,0.433884,-0.929616,0.900969,0.424402,-0.843349,0.900969,0.396373,-0.764795,0.900969,0.351019,-0.697387,0.900969,0.290325,-0.644071,0.900969,0.216942,-0.607177,0.900969,0.134077,-0.588318,0.900969,0.0453532,-0.588318,0.900969,-0.0453532,-0.607177,0.900969,-0.134077,-0.644071,0.900969,-0.216942,-0.697387,0.900969,-0.290325,-0.764795,0.900969,-0.351019,-0.843349,0.900969,-0.396373,-0.929616,0.900969,-0.424402,-1.01983,0.781832,-0.62349,-1.14946,0.781832,-0.609865,-1.27343,0.781832,-0.569586,-1.38631,0.781832,-0.504414,-1.48317,0.781832,-0.417196,-1.55979,0.781832,-0.311745,-1.6128,0.781832,-0.192669,-1.6399,0.781832,-0.0651724,-1.6399,0.781832,0.0651724,-1.6128,0.781832,0.192669,-1.55979,0.781832,0.311745,-1.48317,0.781832,0.417196,-1.38631,0.781832,0.504414,-1.27343,0.781832,0.569586,-1.14946,0.781832,0.609865,-1.01983,0.781832,0.62349,-0.890194,0.781832,0.609865,-0.766229,0.781832,0.569586,-0.653347,0.781832,0.504414,-0.556482,0.781832,0.417196,-0.479867,0.781832,0.311745,-0.426851,0.781832,0.192669,-0.399751,0.781832,0.0651724,-0.399751,0.781832,-0.0651724,-0.426851,0.781832,-0.192669,-0.479867,0.781832,-0.311745,-0.556482,0.781832,-0.417196,-0.653347,0.781832,-0.504414,-0.766229,0.781832,-0.569586,-0.890194,0.781832,-0.609865,-1.01983,0.62349,-0.781832,-1.18238,0.62349,-0.764747,-1.33783,0.62349,-0.714239,-1.47938,0.62349,-0.632515,-1.60084,0.62349,-0.523147,-1.69692,0.62349,-0.390916,-1.7634,0.62349,-0.241599,-1.79738,0.62349,-0.0817236,-1.79738,0.62349,0.0817236,-1.7634,0.62349,0.241599,-1.69692,0.62349,0.390916,-1.60084,0.62349,0.523147,-1.47938,0.62349,0.632515,-1.33783,0.62349,0.714239,-1.18238,0.62349,0.764747,-1.01983,0.62349,0.781832,-0.857273,0.62349,0.764747,-0.701826,0.62349,0.714239,-0.560276,0.62349,0.632515,-0.438811,0.62349,0.523147,-0.342739,0.62349,0.390916,-0.276259,0.62349,0.241599,-0.242277,0.62349,0.0817236,-0.242277,0.62349,-0.0817236,-0.276259,0.62349,-0.241599,-0.342739,0.62349,-0.390916,-0.438811,0.62349,-0.523147,-0.560276,0.62349,-0.632515,-0.701826,0.62349,-0.714239,-0.857273,0.62349,-0.764747,-1.01983,0.433884,-0.900969,-1.20715,0.433884,-0.881281,-1.38629,0.433884,-0.823076,-1.54941,0.433884,-0.728899,-1.68938,0.433884,-0.602866,-1.80009,0.433884,-0.450484,-1.8767,0.433884,-0.278415,-1.91586,0.433884,-0.0941769,-1.91586,0.433884,0.0941769,-1.8767,0.433884,0.278415,-1.80009,0.433884,0.450484,-1.68938,0.433884,0.602866,-1.54941,0.433884,0.728899,-1.38629,0.433884,0.823076,-1.20715,0.433884,0.881281,-1.01983,0.433884,0.900969,-0.832503,0.433884,0.881281,-0.653368,0.433884,0.823076,-0.490249,0.433884,0.728899,-0.350275,0.433884,0.602866,-0.239563,0.433884,0.450484,-0.162953,0.433884,0.278415,-0.123792,0.433884,0.0941769,-0.123792,0.433884,-0.0941769,-0.162953,0.433884,-0.278415,-0.239563,0.433884,-0.450484,-0.350275,0.433884,-0.602866,-0.490249,0.433884,-0.728899,-0.653368,0.433884,-0.823076,-0.832503,0.433884,-0.881281,-1.01983,0.222521,-0.974928,-1.22253,0.222521,-0.953623,-1.41637,0.222521,-0.890641,-1.59288,0.222521,-0.788733,-1.74434,0.222521,-0.652354,-1.86414,0.222521,-0.487464,-1.94704,0.222521,-0.301269,-1.98942,0.222521,-0.101908,-1.98942,0.222521,0.101908,-1.94704,0.222521,0.301269,-1.86414,0.222521,0.487464,-1.74434,0.222521,0.652354,-1.59288,0.222521,0.788733,-1.41637,0.222521,0.890641,-1.22253,0.222521,0.953623,-1.01983,0.222521,0.974928,-0.817126,0.222521,0.953623,-0.623286,0.222521,0.890641,-0.446777,0.222521,0.788733,-0.295313,0.222521,0.652354,-0.175513,0.222521,0.487464,-0.0926139,0.222521,0.301269,-0.0502383,0.222521,0.101908,-0.0502383,0.222521,-0.101908,-0.0926139,0.222521,-0.301269,-0.175513,0.222521,-0.487464,-0.295313,0.222521,-0.652354,-0.446777,0.222521,-0.788733,-0.623286,0.222521,-0.890641,-0.817126,0.222521,-0.953623,-1.01983,6.12323e-17,-1,-1.22774,6.12323e-17,-0.978148,-1.42657,6.12323e-17,-0.913545,-1.60761,6.12323e-17,-0.809017,-1.76297,6.12323e-17,-0.669131,-1.88585,6.12323e-17,-0.5,-1.97089,6.12323e-17,-0.309017,-2.01435,6.12323e-17,-0.104528,-2.01435,6.12323e-17,0.104528,-1.97089,6.12323e-17,0.309017,-1.88585,6.12323e-17,0.5,-1.76297,6.12323e-17,0.669131,-1.60761,6.12323e-17,0.809017,-1.42657,6.12323e-17,0.913545,-1.22774,6.12323e-17,0.978148,-1.01983,6.12323e-17,1,-0.811914,6.12323e-17,0.978148,-0.613089,6.12323e-17,0.913545,-0.43204,6.12323e-17,0.809017,-0.27668,6.12323e-17,0.669131,-0.1538,6.12323e-17,0.5,-0.0687689,6.12323e-17,0.309017,-0.0253035,6.12323e-17,0.104528,-0.0253035,6.12323e-17,-0.104528,-0.0687689,6.12323e-17,-0.309017,-0.1538,6.12323e-17,-0.5,-0.27668,6.12323e-17,-0.669131,-0.43204,6.12323e-17,-0.809017,-0.613089,6.12323e-17,-0.913545,-0.811914,6.12323e-17,-0.978148,-1.01983,-0.222521,-0.974928,-1.22253,-0.222521,-0.953623,-1.41637,-0.222521,-0.890641,-1.59288,-0.222521,-0.788733,-1.74434,-0.222521,-0.652354,-1.86414,-0.222521,-0.487464,-1.94704,-0.222521,-0.301269,-1.98942,-0.222521,-0.101908,-1.98942,-0.222521,0.101908,-1.94704,-0.222521,0.301269,-1.86414,-0.222521,0.487464,-1.74434,-0.222521,0.652354,-1.59288,-0.222521,0.788733,-1.41637,-0.222521,0.890641,-1.22253,-0.222521,0.953623,-1.01983,-0.222521,0.974928,-0.817126,-0.222521,0.953623,-0.623286,-0.222521,0.890641,-0.446777,-0.222521,0.788733,-0.295313,-0.222521,0.652354,-0.175513,-0.222521,0.487464,-0.0926139,-0.222521,0.301269,-0.0502383,-0.222521,0.101908,-0.0502383,-0.222521,-0.101908,-0.0926139,-0.222521,-0.301269,-0.175513,-0.222521,-0.487464,-0.295313,-0.222521,-0.652354,-0.446777,-0.222521,-0.788733,-0.623286,-0.222521,-0.890641,-0.817126,-0.222521,-0.953623,-1.01983,-0.433884,-0.900969,-1.20715,-0.433884,-0.881281,-1.38629,-0.433884,-0.823076,-1.54941,-0.433884,-0.728899,-1.68938,-0.433884,-0.602866,-1.80009,-0.433884,-0.450484,-1.8767,-0.433884,-0.278415,-1.91586,-0.433884,-0.0941769,-1.91586,-0.433884,0.0941769,-1.8767,-0.433884,0.278415,-1.80009,-0.433884,0.450484,-1.68938,-0.433884,0.602866,-1.54941,-0.433884,0.728899,-1.38629,-0.433884,0.823076,-1.20715,-0.433884,0.881281,-1.01983,-0.433884,0.900969,-0.832503,-0.433884,0.881281,-0.653368,-0.433884,0.823076,-0.490249,-0.433884,0.728899,-0.350275,-0.433884,0.602866,-0.239563,-0.433884,0.450484,-0.162953,-0.433884,0.278415,-0.123792,-0.433884,0.0941769,-0.123792,-0.433884,-0.0941769,-0.162953,-0.433884,-0.278415,-0.239563,-0.433884,-0.450484,-0.350275,-0.433884,-0.602866,-0.490249,-0.433884,-0.728899,-0.653368,-0.433884,-0.823076,-0.832503,-0.433884,-0.881281,-1.01983,-0.62349,-0.781832,-1.18238,-0.62349,-0.764747,-1.33783,-0.62349,-0.714239,-1.47938,-0.62349,-0.632515,-1.60084,-0.62349,-0.523147,-1.69692,-0.62349,-0.390916,-1.7634,-0.62349,-0.241599,-1.79738,-0.62349,-0.0817236,-1.79738,-0.62349,0.0817236,-1.7634,-0.62349,0.241599,-1.69692,-0.62349,0.390916,-1.60084,-0.62349,0.523147,-1.47938,-0.62349,0.632515,-1.33783,-0.62349,0.714239,-1.18238,-0.62349,0.764747,-1.01983,-0.62349,0.781832,-0.857273,-0.62349,0.764747,-0.701826,-0.62349,0.714239,-0.560276,-0.62349,0.632515,-0.438811,-0.62349,0.523147,-0.342739,-0.62349,0.390916,-0.276259,-0.62349,0.241599,-0.242277,-0.62349,0.0817236,-0.242277,-0.62349,-0.0817236,-0.276259,-0.62349,-0.241599,-0.342739,-0.62349,-0.390916,-0.438811,-0.62349,-0.523147,-0.560276,-0.62349,-0.632515,-0.701826,-0.62349,-0.714239,-0.857273,-0.62349,-0.764747,-1.01983,-0.781832,-0.62349,-1.14946,-0.781832,-0.609865,-1.27343,-0.781832,-0.569586,-1.38631,-0.781832,-0.504414,-1.48317,-0.781832,-0.417196,-1.55979,-0.781832,-0.311745,-1.6128,-0.781832,-0.192669,-1.6399,-0.781832,-0.0651724,-1.6399,-0.781832,0.0651724,-1.6128,-0.781832,0.192669,-1.55979,-0.781832,0.311745,-1.48317,-0.781832,0.417196,-1.38631,-0.781832,0.504414,-1.27343,-0.781832,0.569586,-1.14946,-0.781832,0.609865,-1.01983,-0.781832,0.62349,-0.890194,-0.781832,0.609865,-0.766229,-0.781832,0.569586,-0.653347,-0.781832,0.504414,-0.556482,-0.781832,0.417196,-0.479867,-0.781832,0.311745,-0.426851,-0.781832,0.192669,-0.399751,-0.781832,0.0651724,-0.399751,-0.781832,-0.0651724,-0.426851,-0.781832,-0.192669,-0.479867,-0.781832,-0.311745,-0.556482,-0.781832,-0.417196,-0.653347,-0.781832,-0.504414,-0.766229,-0.781832,-0.569586,-0.890194,-0.781832,-0.609865,-1.01983,-0.900969,-0.433884,-1.11004,-0.900969,-0.424402,-1.19631,-0.900969,-0.396373,-1.27486,-0.900969,-0.351019,-1.34227,-0.900969,-0.290325,-1.39558,-0.900969,-0.216942,-1.43248,-0.900969,-0.134077,-1.45134,-0.900969,-0.0453532,-1.45134,-0.900969,0.0453532,-1.43248,-0.900969,0.134077,-1.39558,-0.900969,0.216942,-1.34227,-0.900969,0.290325,-1.27486,-0.900969,0.351019,-1.19631,-0.900969,0.396373,-1.11004,-0.900969,0.424402,-1.01983,-0.900969,0.433884,-0.929616,-0.900969,0.424402,-0.843349,-0.900969,0.396373,-0.764795,-0.900969,0.351019,-0.697387,-0.900969,0.290325,-0.644071,-0.900969,0.216942,-0.607177,-0.900969,0.134077,-0.588318,-0.900969,0.0453532,-0.588318,-0.900969,-0.0453532,-0.607177,-0.900969,-0.134077,-0.644071,-0.900969,-0.216942,-0.697387,-0.900969,-0.290325,-0.764795,-0.900969,-0.351019,-0.843349,-0.900969,-0.396373,-0.929616,-0.900969,-0.424402,-1.01983,-0.974928,-0.222521,-1.06609,-0.974928,-0.217658,-1.11034,-0.974928,-0.203283,-1.15062,-0.974928,-0.180023,-1.18519,-0.974928,-0.148896,-1.21254,-0.974928,-0.11126,-1.23146,-0.974928,-0.0687627,-1.24113,-0.974928,-0.0232598,-1.24113,-0.974928,0.0232598,-1.23146,-0.974928,0.0687627,-1.21254,-0.974928,0.11126,-1.18519,-0.974928,0.148896,-1.15062,-0.974928,0.180023,-1.11034,-0.974928,0.203283,-1.06609,-0.974928,0.217658,-1.01983,-0.974928,0.222521,-0.973561,-0.974928,0.217658,-0.929318,-0.974928,0.203283,-0.889031,-0.974928,0.180023,-0.85446,-0.974928,0.148896,-0.827116,-0.974928,0.11126,-0.808195,-0.974928,0.0687627,-0.798523,-0.974928,0.0232598,-0.798523,-0.974928,-0.0232598,-0.808195,-0.974928,-0.0687627,-0.827116,-0.974928,-0.11126,-0.85446,-0.974928,-0.148896,-0.889031,-0.974928,-0.180023,-0.929318,-0.974928,-0.203283,-0.973561,-0.974928,-0.217658,-1.01983,-1,0]), Java.type("float[]")))))
          .setAppearance(new Appearance()
            .setPointProperties(new PointProperties().setPointSizeScaleFactor(2).setPointSizeMaxValue(2))))
        .addChild(new ClipPlane().setPlane(Java.to(doubleToFloat([0,0,1,0.2]), Java.type("float[]"))))
        .addChild(new ClipPlane().setPlane(Java.to(doubleToFloat([0,0,-1,0.2]), Java.type("float[]"))))
        .addChild(new Transform().setDEF("IndexedLineSet")
          .addChild(new Shape()
            .setGeometry(new IndexedLineSet().setColorPerVertex(false).setColorIndex(Java.to([0,1,2], Java.type("int[]"))).setCoordIndex(Java.to([0,1,-1,2,3,-1,4,5,-1], Java.type("int[]")))
              .setColor(new Color().setColor(Java.to(doubleToFloat([1,0,0,0,1,0,0,0,1]), Java.type("float[]"))))
              .setCoord(new Coordinate().setPoint(Java.to(doubleToFloat([-1,0,0,1,0,0,0,-1,0,0,1,0,0,0,-1,0,0,1]), Java.type("float[]"))))))))      ;
    X3D0.toFileX3D("../data/VolumeEmitter.new.graal.x3d");
    X3D0.toFileJSON("../data/VolumeEmitter.new.graal.json");
