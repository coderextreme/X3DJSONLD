load('X3Dautoclass.js');
var ConfigurationProperties = Packages.org.web3d.x3d.jsail.ConfigurationProperties;
ConfigurationProperties.showDefaultAttributes = false;
ConfigurationProperties.xsltEngine = ConfigurationProperties.XSLT_ENGINE_NATIVE_JAVA;
ConfigurationProperties.deleteIntermediateFiles = false;
ConfigurationProperties.setStripTrailingZeroes(true);
function doubleToFloat(d) {
    if (Float32Array)
	return new Float32Array([d])[0];
}
      var X3D0 =  new X3D().setProfile("Immersive").setVersion("4.0")
      .setHead(new head()
        .addComponent(new component().setName("HAnim").setLevel(1))
        .addMeta(new meta().setName("title").setContent("KoreanCharacter12Sun.x3d"))
        .addMeta(new meta().setName("creator").setContent("Jin Hoon Lee and Min Joo Lee"))
        .addMeta(new meta().setName("translator").setContent("Chul Hee Jung and Myeong Won Lee"))
        .addMeta(new meta().setName("created").setContent("31 March 2011"))
        .addMeta(new meta().setName("translated").setContent("1 November 2014"))
        .addMeta(new meta().setName("modified").setContent("23 December 2021"))
        .addMeta(new meta().setName("description").setContent("Articulated 3D game character designed with a general graphics tool, then converted into an X3D HAnim model."))
        .addMeta(new meta().setName("reference").setContent("KoreanCharacter00ReadMe.txt"))
        .addMeta(new meta().setName("reference").setContent("KoreanCharacterHumanMotion_Infotech2014_140706.pdf"))
        .addMeta(new meta().setName("reference").setContent("KoreanCharactersIllustrated.pdf"))
        .addMeta(new meta().setName("identifier").setContent("https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Characters/KoreanCharacter12Sun.x3d"))
        .addMeta(new meta().setName("generator").setContent("3DS MAX, http://www.autodesk.com/products/autodesk-3ds-max/overview"))
        .addMeta(new meta().setName("generator").setContent("Suwon University HAnim Editor"))
        .addMeta(new meta().setName("generator").setContent("Gnu Image Manipulation Program, http://www.gimp.org"))
        .addMeta(new meta().setName("generator").setContent("X3D-Edit 3.3, https://savage.nps.edu/X3D-Edit"))
        .addMeta(new meta().setName("license").setContent("../license.html")))
      .setScene(new Scene()
        .addChild(new WorldInfo().setTitle("KoreanCharacter12Sun.x3d"))
        .addChild(new NavigationInfo().setSpeed(1.5))
        .addChild(new Viewpoint().setCenterOfRotation(Java.to([doubleToFloat(0),doubleToFloat(1),doubleToFloat(0)], Java.type("float[]"))).setDescription("Sun").setPosition(Java.to([doubleToFloat(0),doubleToFloat(1),doubleToFloat(3)], Java.type("float[]"))))
        .addChild(new HAnimHumanoid().setName("Sun").setDEF("hanim_Sun").setScale(Java.to([doubleToFloat(0.0225),doubleToFloat(0.0225),doubleToFloat(0.0225)], Java.type("float[]"))).setVersion("2.0")
          .addComments(new CommentsBlock("original HAnimHumanoid info='\"authorName=Chul Hee Jung and Myeong Won Lee\" \"authorEmail=myeongwonlee@gmail.com\" \"creationDate=31 March 2011\" \"humanoidVersion=2.0\" \"gender=female\" \"height=1.5\"'"))
          .setMetadata(new MetadataSet().setName("HAnimHumanoid.info").setReference("https://www.web3d.org/documents/specifications/19774/V2.0/Architecture/ObjectInterfaces.html#Humanoid")
            .addValue(new MetadataString().setName("authorName").setValue(Java.to(["Chul Hee Jung and Myeong Won Lee"], Java.type("java.lang.String[]"))))
            .addValue(new MetadataString().setName("authorEmail").setValue(Java.to(["myeongwonlee@gmail.com"], Java.type("java.lang.String[]"))))
            .addValue(new MetadataString().setName("creationDate").setValue(Java.to(["31 March 2011"], Java.type("java.lang.String[]"))))
            .addValue(new MetadataString().setName("gender").setValue(Java.to(["female"], Java.type("java.lang.String[]"))))
            .addValue(new MetadataFloat().setName("height").setValue(Java.to([doubleToFloat(1.5)], Java.type("float[]"))))
            .addValue(new MetadataString().setName("humanoidVersion").setValue(Java.to(["2.0"], Java.type("java.lang.String[]")))))
          .addSkeleton(new HAnimJoint("hanim_Sun").setName("humanoid_root").setDEF("hanim_humanoid_root").setCenter(Java.to([doubleToFloat(0),doubleToFloat(29.860001),doubleToFloat(-0.4567)], Java.type("float[]"))).setContainerFieldOverride("skeleton")
            .addChild(new HAnimSegment("hanim_humanoid_root").setName("sacrum").setDEF("hanim_sacrum")
              .addChild(new Transform().setTranslation(Java.to([doubleToFloat(0),doubleToFloat(29.860001),doubleToFloat(-0.4567)], Java.type("float[]")))
                .addChild(new Shape()
                  .setAppearance(new Appearance()
                    .setMaterial(new Material().setDiffuseColor(Java.to([doubleToFloat(0.588),doubleToFloat(0.588),doubleToFloat(0.588)], Java.type("float[]"))))
                    .setTexture(new ImageTexture().setDEF("SunTextureAtlas").setUrl(Java.to(["images/Sun.png","https://www.web3d.org/x3d/content/examples/HumanoidAnimation/Characters/images/Sun.png"], Java.type("java.lang.String[]")))))
                  .setGeometry(new IndexedFaceSet().setCoordIndex(Java.to([2,30,0,-1,0,1,2,-1,30,36,3,-1,3,0,30,-1,3,36,32,-1,32,4,3,-1,35,5,4,-1,4,32,35,-1,44,6,33,-1,33,34,44,-1,2,28,27,-1,27,30,2,-1,30,27,29,-1,29,36,30,-1,29,7,32,-1,32,36,29,-1,16,15,34,-1,34,33,16,-1,28,10,9,-1,9,27,28,-1,9,11,29,-1,29,27,9,-1,29,11,12,-1,12,7,29,-1,8,7,12,-1,12,13,8,-1,15,16,14,-1,14,60,15,-1,10,18,17,-1,17,9,10,-1,9,17,19,-1,19,11,9,-1,19,20,12,-1,12,11,19,-1,13,12,20,-1,20,21,13,-1,60,14,22,-1,22,23,60,-1,5,35,33,-1,33,6,5,-1,16,8,13,-1,13,14,16,-1,14,13,21,-1,21,22,14,-1,24,21,20,-1,35,8,16,-1,16,33,35,-1,32,7,8,-1,8,35,32,-1,68,1,69,-1,69,1,0,-1,0,3,69,-1,69,3,4,-1,6,69,5,-1,69,6,44,-1,1,68,31,-1,31,2,1,-1,71,25,10,-1,10,28,71,-1,25,26,18,-1,18,10,25,-1,24,18,26,-1,24,17,18,-1,24,19,17,-1,24,20,19,-1,24,22,21,-1,23,22,24,-1,4,5,69,-1,71,28,2,-1,2,31,71,-1,70,38,37,-1,37,39,70,-1,39,37,40,-1,40,49,39,-1,40,41,50,-1,50,49,40,-1,42,50,41,-1,41,43,42,-1,44,34,67,-1,67,45,44,-1,70,39,46,-1,46,47,70,-1,39,49,48,-1,48,46,39,-1,48,49,50,-1,50,51,48,-1,52,67,34,-1,34,15,52,-1,47,46,53,-1,53,54,47,-1,53,46,48,-1,48,55,53,-1,48,51,56,-1,56,55,48,-1,58,57,56,-1,56,51,58,-1,15,60,59,-1,59,52,15,-1,54,53,61,-1,61,62,54,-1,53,55,63,-1,63,61,53,-1,63,55,56,-1,56,64,63,-1,57,65,64,-1,64,56,57,-1,60,23,66,-1,66,59,60,-1,43,45,67,-1,67,42,43,-1,52,59,57,-1,57,58,52,-1,59,66,65,-1,65,57,59,-1,24,64,65,-1,42,67,52,-1,52,58,42,-1,50,42,58,-1,58,51,50,-1,68,69,38,-1,69,37,38,-1,37,69,40,-1,69,41,40,-1,45,43,69,-1,69,44,45,-1,38,70,31,-1,31,68,38,-1,71,47,54,-1,54,25,71,-1,25,54,62,-1,62,26,25,-1,24,26,62,-1,24,62,61,-1,24,61,63,-1,24,63,64,-1,24,65,66,-1,23,24,66,-1,41,69,43,-1,71,31,70,-1,70,47,71,-1], Java.type("int[]"))).setCreaseAngle(1.57).setTexCoordIndex(Java.to([2,3,0,-1,0,1,2,-1,5,6,4,-1,4,0,5,-1,4,33,7,-1,7,8,4,-1,35,50,8,-1,8,34,35,-1,54,55,52,-1,52,53,54,-1,11,12,9,-1,9,10,11,-1,15,9,13,-1,13,14,15,-1,13,18,16,-1,16,17,13,-1,19,20,21,-1,21,22,19,-1,12,24,23,-1,23,9,12,-1,23,25,13,-1,13,9,23,-1,13,25,26,-1,26,18,13,-1,28,18,26,-1,26,27,28,-1,20,19,29,-1,29,30,20,-1,24,32,31,-1,31,23,24,-1,23,31,36,-1,36,25,23,-1,36,37,26,-1,26,25,36,-1,27,26,37,-1,37,38,27,-1,30,29,39,-1,39,40,30,-1,50,57,56,-1,56,55,50,-1,19,28,27,-1,27,29,19,-1,29,27,38,-1,38,39,29,-1,41,38,37,-1,42,28,19,-1,19,43,42,-1,45,18,28,-1,28,44,45,-1,58,1,59,-1,59,1,0,-1,0,4,59,-1,59,4,8,-1,55,59,50,-1,59,55,54,-1,1,58,60,-1,60,61,1,-1,46,47,24,-1,24,12,46,-1,47,48,32,-1,32,24,47,-1,41,32,48,-1,41,31,32,-1,41,36,31,-1,41,37,36,-1,41,39,38,-1,40,39,41,-1,8,50,59,-1,46,12,49,-1,49,51,46,-1,64,63,62,-1,62,65,64,-1,67,62,66,-1,66,68,67,-1,66,70,69,-1,69,71,66,-1,73,72,70,-1,70,74,73,-1,77,76,75,-1,75,78,77,-1,81,80,79,-1,79,82,81,-1,85,84,83,-1,83,79,85,-1,83,87,86,-1,86,88,83,-1,89,92,91,-1,91,90,89,-1,82,79,93,-1,93,94,82,-1,93,79,83,-1,83,95,93,-1,83,88,96,-1,96,95,83,-1,98,97,96,-1,96,88,98,-1,90,100,99,-1,99,89,90,-1,94,93,101,-1,101,102,94,-1,93,95,103,-1,103,101,93,-1,103,95,96,-1,96,104,103,-1,97,105,104,-1,104,96,97,-1,100,107,106,-1,106,99,100,-1,74,78,108,-1,108,109,74,-1,89,99,97,-1,97,98,89,-1,99,106,105,-1,105,97,99,-1,110,104,105,-1,111,112,89,-1,89,98,111,-1,114,113,98,-1,98,88,114,-1,115,116,63,-1,116,62,63,-1,62,116,66,-1,116,70,66,-1,78,74,116,-1,116,77,78,-1,63,118,117,-1,117,115,63,-1,119,82,94,-1,94,120,119,-1,120,94,102,-1,102,121,120,-1,110,121,102,-1,110,102,101,-1,110,101,103,-1,110,103,104,-1,110,105,106,-1,107,110,106,-1,70,116,74,-1,119,123,122,-1,122,82,119,-1], Java.type("int[]")))
                    .setCoord(new Coordinate().setPoint(Java.to([doubleToFloat(0.7553),doubleToFloat(1.289),doubleToFloat(0.3192),doubleToFloat(0.4361),doubleToFloat(1.289),doubleToFloat(0.502),doubleToFloat(0.6835),doubleToFloat(1.04),doubleToFloat(0.8046),doubleToFloat(0.8722),doubleToFloat(1.289),doubleToFloat(0.0695),doubleToFloat(0.7553),doubleToFloat(1.289),doubleToFloat(-0.2872),doubleToFloat(0.5259),doubleToFloat(1.289),doubleToFloat(-0.4902),doubleToFloat(0.1782),doubleToFloat(1.289),doubleToFloat(-0.53),doubleToFloat(1.379),doubleToFloat(0.3768),doubleToFloat(-0.5369),doubleToFloat(0.8225),doubleToFloat(0.3588),doubleToFloat(-0.9058),doubleToFloat(1.308),doubleToFloat(-0.2088),doubleToFloat(0.502),doubleToFloat(0.7553),doubleToFloat(-0.2088),doubleToFloat(0.8186),doubleToFloat(1.511),doubleToFloat(-0.2088),doubleToFloat(0.0031),doubleToFloat(1.308),doubleToFloat(-0.2088),doubleToFloat(-0.47),doubleToFloat(0.8152),doubleToFloat(-0.2088),doubleToFloat(-0.878),doubleToFloat(0.2426),doubleToFloat(-0.2088),doubleToFloat(-0.9658),doubleToFloat(0),doubleToFloat(0.287),doubleToFloat(-1.026),doubleToFloat(0.2889),doubleToFloat(0.3271),doubleToFloat(-1.034),doubleToFloat(0.7553),doubleToFloat(-0.5809),doubleToFloat(0.3192),doubleToFloat(0.4361),doubleToFloat(-0.5809),doubleToFloat(0.502),doubleToFloat(0.8722),doubleToFloat(-0.5809),doubleToFloat(0.0031),doubleToFloat(0.7553),doubleToFloat(-0.5809),doubleToFloat(-0.2872),doubleToFloat(0.4457),doubleToFloat(-0.5809),doubleToFloat(-0.4902),doubleToFloat(0.1782),doubleToFloat(-0.5809),doubleToFloat(-0.53),doubleToFloat(0),doubleToFloat(-0.5809),doubleToFloat(-0.5369),doubleToFloat(0),doubleToFloat(-0.7115),doubleToFloat(0.003),doubleToFloat(0),doubleToFloat(-0.2088),doubleToFloat(0.9345),doubleToFloat(0),doubleToFloat(-0.5809),doubleToFloat(0.5689),doubleToFloat(1.379),doubleToFloat(0.3768),doubleToFloat(0.5689),doubleToFloat(0.8185),doubleToFloat(0.3135),doubleToFloat(0.9345),doubleToFloat(1.541),doubleToFloat(0.3768),doubleToFloat(0.0031),doubleToFloat(1.333),doubleToFloat(1.061),doubleToFloat(0.4211),doubleToFloat(0),doubleToFloat(1.043),doubleToFloat(0.9382),doubleToFloat(1.306),doubleToFloat(1.029),doubleToFloat(-0.4635),doubleToFloat(0.2707),doubleToFloat(1.005),doubleToFloat(-0.9317),doubleToFloat(0),doubleToFloat(0.9999),doubleToFloat(-0.9412),doubleToFloat(0.808),doubleToFloat(1.016),doubleToFloat(-0.8729),doubleToFloat(1.483),doubleToFloat(1.061),doubleToFloat(-0.0036),doubleToFloat(-0.7553),doubleToFloat(1.289),doubleToFloat(0.3192),doubleToFloat(-0.4361),doubleToFloat(1.289),doubleToFloat(0.502),doubleToFloat(-1.333),doubleToFloat(1.061),doubleToFloat(0.4211),doubleToFloat(-0.8722),doubleToFloat(1.289),doubleToFloat(0.0695),doubleToFloat(-0.7553),doubleToFloat(1.289),doubleToFloat(-0.2872),doubleToFloat(-0.808),doubleToFloat(1.016),doubleToFloat(-0.8729),doubleToFloat(-0.5259),doubleToFloat(1.289),doubleToFloat(-0.4902),doubleToFloat(0),doubleToFloat(1.289),doubleToFloat(-0.5369),doubleToFloat(-0.1782),doubleToFloat(1.289),doubleToFloat(-0.53),doubleToFloat(-1.379),doubleToFloat(0.3768),doubleToFloat(0.5689),doubleToFloat(-0.8185),doubleToFloat(0.3135),doubleToFloat(0.9345),doubleToFloat(-1.541),doubleToFloat(0.3768),doubleToFloat(0.0031),doubleToFloat(-1.483),doubleToFloat(1.061),doubleToFloat(-0.0036),doubleToFloat(-1.306),doubleToFloat(1.029),doubleToFloat(-0.4635),doubleToFloat(-1.379),doubleToFloat(0.3768),doubleToFloat(-0.5369),doubleToFloat(-0.2889),doubleToFloat(0.3271),doubleToFloat(-1.034),doubleToFloat(-1.308),doubleToFloat(-0.2088),doubleToFloat(0.502),doubleToFloat(-0.7553),doubleToFloat(-0.2088),doubleToFloat(0.8186),doubleToFloat(-1.511),doubleToFloat(-0.2088),doubleToFloat(0.0031),doubleToFloat(-1.308),doubleToFloat(-0.2088),doubleToFloat(-0.47),doubleToFloat(-0.8152),doubleToFloat(-0.2088),doubleToFloat(-0.878),doubleToFloat(-0.8225),doubleToFloat(0.3588),doubleToFloat(-0.9058),doubleToFloat(-0.2426),doubleToFloat(-0.2088),doubleToFloat(-0.9658),doubleToFloat(0),doubleToFloat(-0.2088),doubleToFloat(-0.9594),doubleToFloat(-0.7553),doubleToFloat(-0.5809),doubleToFloat(0.3192),doubleToFloat(-0.4361),doubleToFloat(-0.5809),doubleToFloat(0.502),doubleToFloat(-0.8722),doubleToFloat(-0.5809),doubleToFloat(0.0031),doubleToFloat(-0.7553),doubleToFloat(-0.5809),doubleToFloat(-0.2872),doubleToFloat(-0.4457),doubleToFloat(-0.5809),doubleToFloat(-0.4902),doubleToFloat(-0.1782),doubleToFloat(-0.5809),doubleToFloat(-0.53),doubleToFloat(-0.2707),doubleToFloat(1.005),doubleToFloat(-0.9317),doubleToFloat(0),doubleToFloat(1.289),doubleToFloat(0.5689),doubleToFloat(0),doubleToFloat(1.447),doubleToFloat(0.0694),doubleToFloat(-0.6835),doubleToFloat(1.04),doubleToFloat(0.8046),doubleToFloat(0),doubleToFloat(0.2734),doubleToFloat(1.068)], Java.type("float[]"))))
                    .setTexCoord(new TextureCoordinate().setPoint(Java.to([doubleToFloat(0.7918),doubleToFloat(0.3915),doubleToFloat(0.7861),doubleToFloat(0.4125),doubleToFloat(0.761),doubleToFloat(0.4016),doubleToFloat(0.7739),doubleToFloat(0.359),doubleToFloat(0.8043),doubleToFloat(0.381),doubleToFloat(0.7754),doubleToFloat(0.3582),doubleToFloat(0.7971),doubleToFloat(0.3429),doubleToFloat(0.8277),doubleToFloat(0.3444),doubleToFloat(0.8264),doubleToFloat(0.3818),doubleToFloat(0.9221),doubleToFloat(0.6798),doubleToFloat(0.9068),doubleToFloat(0.6634),doubleToFloat(0.9278),doubleToFloat(0.6477),doubleToFloat(0.942),doubleToFloat(0.668),doubleToFloat(0.9118),doubleToFloat(0.6975),doubleToFloat(0.892),doubleToFloat(0.6876),doubleToFloat(0.8997),doubleToFloat(0.6728),doubleToFloat(0.8888),doubleToFloat(0.7144),doubleToFloat(0.8893),doubleToFloat(0.6963),doubleToFloat(0.9102),doubleToFloat(0.7174),doubleToFloat(0.9318),doubleToFloat(0.7543),doubleToFloat(0.9405),doubleToFloat(0.7608),doubleToFloat(0.9219),doubleToFloat(0.7764),doubleToFloat(0.9155),doubleToFloat(0.7699),doubleToFloat(0.9352),doubleToFloat(0.6914),doubleToFloat(0.9514),doubleToFloat(0.6827),doubleToFloat(0.9275),doubleToFloat(0.7025),doubleToFloat(0.9278),doubleToFloat(0.7154),doubleToFloat(0.9353),doubleToFloat(0.7322),doubleToFloat(0.9192),doubleToFloat(0.7392),doubleToFloat(0.9477),doubleToFloat(0.7447),doubleToFloat(0.9543),doubleToFloat(0.7492),doubleToFloat(0.9534),doubleToFloat(0.7016),doubleToFloat(0.9633),doubleToFloat(0.697),doubleToFloat(0.7986),doubleToFloat(0.3427),doubleToFloat(0.8292),doubleToFloat(0.3445),doubleToFloat(0.861),doubleToFloat(0.3654),doubleToFloat(0.9486),doubleToFloat(0.7096),doubleToFloat(0.9495),doubleToFloat(0.7179),doubleToFloat(0.956),doubleToFloat(0.7264),doubleToFloat(0.9627),doubleToFloat(0.7307),doubleToFloat(0.9675),doubleToFloat(0.7332),doubleToFloat(0.9757),doubleToFloat(0.7147),doubleToFloat(0.9016),doubleToFloat(0.7514),doubleToFloat(0.9124),doubleToFloat(0.7668),doubleToFloat(0.8987),doubleToFloat(0.7466),doubleToFloat(0.8902),doubleToFloat(0.7255),doubleToFloat(0.9681),doubleToFloat(0.6588),doubleToFloat(0.974),doubleToFloat(0.6751),doubleToFloat(0.9769),doubleToFloat(0.6939),doubleToFloat(0.9357),doubleToFloat(0.6444),doubleToFloat(0.8417),doubleToFloat(0.3914),doubleToFloat(0.9575),doubleToFloat(0.6354),doubleToFloat(0.8761),doubleToFloat(0.3962),doubleToFloat(0.8816),doubleToFloat(0.4112),doubleToFloat(0.8536),doubleToFloat(0.4202),doubleToFloat(0.8501),doubleToFloat(0.4103),doubleToFloat(0.8759),doubleToFloat(0.3959),doubleToFloat(0.8628),doubleToFloat(0.3668),doubleToFloat(0.7883),doubleToFloat(0.4384),doubleToFloat(0.8184),doubleToFloat(0.4313),doubleToFloat(0.7627),doubleToFloat(0.4439),doubleToFloat(0.7605),doubleToFloat(0.4029),doubleToFloat(0.7918),doubleToFloat(0.3915),doubleToFloat(0.7861),doubleToFloat(0.4125),doubleToFloat(0.761),doubleToFloat(0.4016),doubleToFloat(0.7739),doubleToFloat(0.359),doubleToFloat(0.8043),doubleToFloat(0.381),doubleToFloat(0.7754),doubleToFloat(0.3582),doubleToFloat(0.7971),doubleToFloat(0.3429),doubleToFloat(0.8277),doubleToFloat(0.3444),doubleToFloat(0.8264),doubleToFloat(0.3818),doubleToFloat(0.7986),doubleToFloat(0.3427),doubleToFloat(0.8292),doubleToFloat(0.3445),doubleToFloat(0.861),doubleToFloat(0.3654),doubleToFloat(0.8417),doubleToFloat(0.3914),doubleToFloat(0.8761),doubleToFloat(0.3962),doubleToFloat(0.8816),doubleToFloat(0.4112),doubleToFloat(0.8536),doubleToFloat(0.4202),doubleToFloat(0.8501),doubleToFloat(0.4103),doubleToFloat(0.9221),doubleToFloat(0.6798),doubleToFloat(0.9068),doubleToFloat(0.6634),doubleToFloat(0.9278),doubleToFloat(0.6477),doubleToFloat(0.942),doubleToFloat(0.668),doubleToFloat(0.9118),doubleToFloat(0.6975),doubleToFloat(0.892),doubleToFloat(0.6876),doubleToFloat(0.8997),doubleToFloat(0.6728),doubleToFloat(0.8888),doubleToFloat(0.7144),doubleToFloat(0.8893),doubleToFloat(0.6963),doubleToFloat(0.9102),doubleToFloat(0.7174),doubleToFloat(0.9318),doubleToFloat(0.7543),doubleToFloat(0.9405),doubleToFloat(0.7608),doubleToFloat(0.9219),doubleToFloat(0.7764),doubleToFloat(0.9155),doubleToFloat(0.7699),doubleToFloat(0.9352),doubleToFloat(0.6914),doubleToFloat(0.9514),doubleToFloat(0.6827),doubleToFloat(0.9275),doubleToFloat(0.7025),doubleToFloat(0.9278),doubleToFloat(0.7154),doubleToFloat(0.9353),doubleToFloat(0.7322),doubleToFloat(0.9192),doubleToFloat(0.7392),doubleToFloat(0.9477),doubleToFloat(0.7447),doubleToFloat(0.9543),doubleToFloat(0.7492),doubleToFloat(0.9534),doubleToFloat(0.7016),doubleToFloat(0.9633),doubleToFloat(0.697),doubleToFloat(0.9486),doubleToFloat(0.7096),doubleToFloat(0.9495),doubleToFloat(0.7179),doubleToFloat(0.956),doubleToFloat(0.7264),doubleToFloat(0.9627),doubleToFloat(0.7307),doubleToFloat(0.9675),doubleToFloat(0.7332),doubleToFloat(0.8759),doubleToFloat(0.3959),doubleToFloat(0.8628),doubleToFloat(0.3668),doubleToFloat(0.9757),doubleToFloat(0.7147),doubleToFloat(0.9016),doubleToFloat(0.7514),doubleToFloat(0.9124),doubleToFloat(0.7668),doubleToFloat(0.8987),doubleToFloat(0.7466),doubleToFloat(0.8902),doubleToFloat(0.7255),doubleToFloat(0.7883),doubleToFloat(0.4384),doubleToFloat(0.8184),doubleToFloat(0.4313),doubleToFloat(0.7627),doubleToFloat(0.4439),doubleToFloat(0.7605),doubleToFloat(0.4029),doubleToFloat(0.9681),doubleToFloat(0.6588),doubleToFloat(0.974),doubleToFloat(0.6751),doubleToFloat(0.9769),doubleToFloat(0.6939),doubleToFloat(0.9357),doubleToFloat(0.6444),doubleToFloat(0.9575),doubleToFloat(0.6354)], Java.type("float[]"))))))))
            .addChild(new HAnimJoint("hanim_humanoid_root").setName("l_hip").setDEF("hanim_l_hip").setCenter(Java.to([doubleToFloat(2.955),doubleToFloat(28.940001),doubleToFloat(-0.5218)], Java.type("float[]")))
              .addChild(new HAnimSegment("hanim_l_hip").setName("l_thigh").setDEF("hanim_l_thigh")
                .addChild(new Transform().setTranslation(Java.to([doubleToFloat(2.955),doubleToFloat(28.940001),doubleToFloat(-0.5218)], Java.type("float[]")))
                  .addChild(new Shape()
                    .setAppearance(new Appearance()
                      .setMaterial(new Material().setDiffuseColor(Java.to([doubleToFloat(0.588),doubleToFloat(0.588),doubleToFloat(0.588)], Java.type("float[]"))))
                      .setTexture(new ImageTexture().setUSE("SunTextureAtlas")))
                    .setGeometry(new IndexedFaceSet().setCoordIndex(Java.to([3,0,1,-1,1,2,3,-1,0,4,5,-1,5,1,0,-1,5,4,6,-1,6,7,5,-1,7,6,8,-1,8,9,7,-1,9,8,10,-1,10,11,9,-1,12,13,11,-1,11,10,12,-1,15,13,12,-1,12,14,15,-1,3,2,15,-1,15,14,3,-1,19,16,17,-1,17,18,19,-1,18,17,20,-1,20,21,18,-1,23,21,20,-1,20,22,23,-1,25,23,22,-1,22,24,25,-1,27,25,24,-1,24,26,27,-1,28,29,27,-1,27,26,28,-1,31,29,28,-1,28,30,31,-1,30,16,19,-1,19,31,30,-1,19,18,32,-1,18,21,32,-1,21,23,32,-1,23,25,32,-1,25,27,32,-1,27,29,32,-1,29,31,32,-1,31,19,32,-1,34,2,1,-1,1,33,34,-1,33,1,5,-1,5,35,33,-1,7,36,35,-1,35,5,7,-1,9,37,36,-1,36,7,9,-1,11,38,9,-1,11,13,39,-1,39,38,11,-1,39,13,15,-1,15,40,39,-1,41,40,2,-1,2,34,41,-1,42,43,0,-1,0,3,42,-1,42,3,14,-1,14,44,42,-1,14,12,45,-1,45,44,14,-1,46,45,12,-1,12,10,46,-1,8,47,46,-1,46,10,8,-1,8,6,48,-1,48,47,8,-1,6,4,49,-1,49,48,6,-1,4,0,43,-1,43,49,4,-1,43,42,50,-1,42,44,50,-1,44,45,50,-1,45,46,50,-1,46,47,50,-1,47,48,50,-1,48,49,50,-1,49,43,50,-1,16,34,33,-1,33,17,16,-1,17,33,35,-1,35,20,17,-1,20,35,36,-1,36,22,20,-1,22,36,37,-1,37,24,22,-1,26,24,37,-1,37,51,26,-1,52,28,26,-1,26,51,52,-1,28,52,41,-1,41,30,28,-1,41,34,16,-1,16,30,41,-1,52,51,38,-1,38,39,52,-1,40,41,52,-1,52,39,40,-1,38,51,37,-1,37,9,38,-1,40,15,2,-1], Java.type("int[]"))).setCreaseAngle(1.57).setTexCoordIndex(Java.to([3,0,1,-1,1,2,3,-1,0,4,5,-1,5,1,0,-1,5,4,6,-1,6,7,5,-1,7,6,8,-1,8,9,7,-1,9,8,10,-1,10,11,9,-1,4,12,11,-1,11,10,4,-1,14,12,4,-1,4,13,14,-1,3,2,14,-1,14,13,3,-1,18,15,16,-1,16,17,18,-1,17,16,19,-1,19,20,17,-1,22,20,19,-1,19,21,22,-1,24,22,21,-1,21,23,24,-1,22,24,23,-1,23,21,22,-1,19,20,22,-1,22,21,19,-1,17,20,19,-1,19,16,17,-1,16,15,18,-1,18,17,16,-1,18,17,25,-1,17,20,25,-1,20,22,25,-1,22,24,25,-1,24,22,25,-1,22,20,25,-1,20,17,25,-1,17,18,25,-1,27,2,1,-1,1,26,27,-1,26,1,5,-1,5,28,26,-1,7,29,28,-1,28,5,7,-1,9,30,29,-1,29,7,9,-1,11,31,9,-1,11,12,32,-1,32,31,11,-1,32,12,14,-1,14,33,32,-1,34,33,2,-1,2,27,34,-1,35,36,0,-1,0,3,35,-1,35,3,13,-1,13,37,35,-1,13,4,38,-1,38,37,13,-1,39,38,4,-1,4,10,39,-1,8,40,39,-1,39,10,8,-1,8,6,41,-1,41,40,8,-1,6,4,38,-1,38,41,6,-1,4,0,36,-1,36,38,4,-1,36,35,42,-1,35,37,42,-1,37,38,42,-1,38,39,42,-1,39,40,42,-1,40,41,42,-1,41,38,42,-1,38,36,42,-1,15,27,26,-1,26,16,15,-1,16,26,28,-1,28,19,16,-1,19,28,29,-1,29,21,19,-1,21,29,30,-1,30,23,21,-1,21,23,30,-1,30,43,21,-1,28,19,21,-1,21,43,28,-1,19,28,34,-1,34,16,19,-1,34,27,15,-1,15,16,34,-1,28,43,31,-1,31,32,28,-1,33,34,28,-1,28,32,33,-1,31,43,30,-1,30,9,31,-1,33,14,2,-1], Java.type("int[]")))
                      .setCoord(new Coordinate().setPoint(Java.to([doubleToFloat(1.812),doubleToFloat(-0.3087),doubleToFloat(1.904),doubleToFloat(1.588),doubleToFloat(-6.489),doubleToFloat(1.624),doubleToFloat(2.192),doubleToFloat(-5.962),doubleToFloat(0.1086),doubleToFloat(2.457),doubleToFloat(-0.3087),doubleToFloat(0.0948),doubleToFloat(0),doubleToFloat(-0.3087),doubleToFloat(2.766),doubleToFloat(0.0022),doubleToFloat(-6.794),doubleToFloat(2.44),doubleToFloat(-1.812),doubleToFloat(-0.3087),doubleToFloat(1.904),doubleToFloat(-1.696),doubleToFloat(-6.489),doubleToFloat(1.624),doubleToFloat(-2.457),doubleToFloat(-0.3087),doubleToFloat(0.0948),doubleToFloat(-2.3),doubleToFloat(-5.962),doubleToFloat(0.1086),doubleToFloat(-1.923),doubleToFloat(-0.3087),doubleToFloat(-1.955),doubleToFloat(-1.878),doubleToFloat(-5.375),doubleToFloat(-1.791),doubleToFloat(0),doubleToFloat(-0.3087),doubleToFloat(-2.766),doubleToFloat(0.0022),doubleToFloat(-4.935),doubleToFloat(-2.745),doubleToFloat(1.929),doubleToFloat(-0.3087),doubleToFloat(-1.955),doubleToFloat(1.764),doubleToFloat(-5.375),doubleToFloat(-1.791),doubleToFloat(1.824),doubleToFloat(-12.47),doubleToFloat(0.1086),doubleToFloat(1.294),doubleToFloat(-12.47),doubleToFloat(1.546),doubleToFloat(0.8192),doubleToFloat(-13.62),doubleToFloat(0.9456),doubleToFloat(1.244),doubleToFloat(-13.62),doubleToFloat(0.1086),doubleToFloat(0),doubleToFloat(-12.47),doubleToFloat(2.119),doubleToFloat(0),doubleToFloat(-13.62),doubleToFloat(1.371),doubleToFloat(-1.403),doubleToFloat(-12.47),doubleToFloat(1.546),doubleToFloat(-0.9277),doubleToFloat(-13.62),doubleToFloat(0.9456),doubleToFloat(-1.892),doubleToFloat(-12.47),doubleToFloat(0.1086),doubleToFloat(-1.353),doubleToFloat(-13.62),doubleToFloat(0.1086),doubleToFloat(-1.403),doubleToFloat(-12.47),doubleToFloat(-1.203),doubleToFloat(-0.9277),doubleToFloat(-13.62),doubleToFloat(-1.004),doubleToFloat(0),doubleToFloat(-12.47),doubleToFloat(-1.776),doubleToFloat(0),doubleToFloat(-13.62),doubleToFloat(-1.43),doubleToFloat(1.294),doubleToFloat(-12.47),doubleToFloat(-1.203),doubleToFloat(0.8192),doubleToFloat(-13.62),doubleToFloat(-1.004),doubleToFloat(0),doubleToFloat(-14.58),doubleToFloat(0.1086),doubleToFloat(1.328),doubleToFloat(-11.04),doubleToFloat(1.381),doubleToFloat(1.898),doubleToFloat(-11.04),doubleToFloat(0.1086),doubleToFloat(0.0033),doubleToFloat(-11.04),doubleToFloat(1.998),doubleToFloat(-1.437),doubleToFloat(-11.04),doubleToFloat(1.381),doubleToFloat(-2.006),doubleToFloat(-11.04),doubleToFloat(0.1086),doubleToFloat(-1.674),doubleToFloat(-7.89),doubleToFloat(-1.676),doubleToFloat(0.0028),doubleToFloat(-8.084),doubleToFloat(-2.33),doubleToFloat(1.563),doubleToFloat(-7.89),doubleToFloat(-1.676),doubleToFloat(1.306),doubleToFloat(-11.04),doubleToFloat(-1.288),doubleToFloat(1.775),doubleToFloat(0.6114),doubleToFloat(0.1021),doubleToFloat(1.355),doubleToFloat(0.6114),doubleToFloat(1.391),doubleToFloat(1.282),doubleToFloat(0.6114),doubleToFloat(-1.341),doubleToFloat(0),doubleToFloat(0.6114),doubleToFloat(-1.85),doubleToFloat(-1.282),doubleToFloat(0.6114),doubleToFloat(-1.341),doubleToFloat(-1.774),doubleToFloat(0.6114),doubleToFloat(0.1021),doubleToFloat(-1.354),doubleToFloat(0.6114),doubleToFloat(1.391),doubleToFloat(0),doubleToFloat(0.6114),doubleToFloat(2.036),doubleToFloat(0),doubleToFloat(1.324),doubleToFloat(0.0586),doubleToFloat(-1.415),doubleToFloat(-11.04),doubleToFloat(-1.288),doubleToFloat(0.0033),doubleToFloat(-11.04),doubleToFloat(-1.867)], Java.type("float[]"))))
                      .setTexCoord(new TextureCoordinate().setPoint(Java.to([doubleToFloat(0.918),doubleToFloat(0.5995),doubleToFloat(0.9216),doubleToFloat(0.5192),doubleToFloat(0.9118),doubleToFloat(0.5261),doubleToFloat(0.9076),doubleToFloat(0.5995),doubleToFloat(0.9471),doubleToFloat(0.5995),doubleToFloat(0.9471),doubleToFloat(0.5153),doubleToFloat(0.9763),doubleToFloat(0.5995),doubleToFloat(0.9745),doubleToFloat(0.5192),doubleToFloat(0.9867),doubleToFloat(0.5995),doubleToFloat(0.9841),doubleToFloat(0.5261),doubleToFloat(0.9751),doubleToFloat(0.5995),doubleToFloat(0.9733),doubleToFloat(0.5337),doubleToFloat(0.9471),doubleToFloat(0.5369),doubleToFloat(0.9192),doubleToFloat(0.5995),doubleToFloat(0.9227),doubleToFloat(0.5337),doubleToFloat(0.9178),doubleToFloat(0.4416),doubleToFloat(0.9263),doubleToFloat(0.4416),doubleToFloat(0.9339),doubleToFloat(0.4268),doubleToFloat(0.9271),doubleToFloat(0.4268),doubleToFloat(0.9471),doubleToFloat(0.4416),doubleToFloat(0.9471),doubleToFloat(0.4268),doubleToFloat(0.9697),doubleToFloat(0.4416),doubleToFloat(0.9621),doubleToFloat(0.4268),doubleToFloat(0.9783),doubleToFloat(0.4416),doubleToFloat(0.9689),doubleToFloat(0.4268),doubleToFloat(0.9471),doubleToFloat(0.4144),doubleToFloat(0.9258),doubleToFloat(0.4603),doubleToFloat(0.9166),doubleToFloat(0.4603),doubleToFloat(0.9471),doubleToFloat(0.4603),doubleToFloat(0.9702),doubleToFloat(0.4603),doubleToFloat(0.9794),doubleToFloat(0.4603),doubleToFloat(0.9716),doubleToFloat(0.497),doubleToFloat(0.9471),doubleToFloat(0.4986),doubleToFloat(0.9244),doubleToFloat(0.497),doubleToFloat(0.9261),doubleToFloat(0.4603),doubleToFloat(0.9186),doubleToFloat(0.6114),doubleToFloat(0.9253),doubleToFloat(0.6114),doubleToFloat(0.9265),doubleToFloat(0.6114),doubleToFloat(0.9471),doubleToFloat(0.6114),doubleToFloat(0.9678),doubleToFloat(0.6114),doubleToFloat(0.9757),doubleToFloat(0.6114),doubleToFloat(0.969),doubleToFloat(0.6114),doubleToFloat(0.9471),doubleToFloat(0.6206),doubleToFloat(0.9699),doubleToFloat(0.4603)], Java.type("float[]"))))))))
              .addChild(new HAnimJoint("hanim_l_hip").setName("l_knee").setDEF("hanim_l_knee").setCenter(Java.to([doubleToFloat(2.948),doubleToFloat(16.459999),doubleToFloat(-0.5275)], Java.type("float[]")))
                .addChild(new HAnimSegment("hanim_l_knee").setName("l_calf").setDEF("hanim_l_calf")
                  .addChild(new Transform().setTranslation(Java.to([doubleToFloat(2.948),doubleToFloat(16.459999),doubleToFloat(-0.5275)], Java.type("float[]")))
                    .addChild(new Shape()
                      .setAppearance(new Appearance()
                        .setMaterial(new Material().setDiffuseColor(Java.to([doubleToFloat(0.588),doubleToFloat(0.588),doubleToFloat(0.588)], Java.type("float[]"))))
                        .setTexture(new ImageTexture().setUSE("SunTextureAtlas")))
                      .setGeometry(new IndexedFaceSet().setCoordIndex(Java.to([0,1,2,-1,3,4,53,-1,53,54,3,-1,6,55,53,-1,53,4,6,-1,56,55,6,-1,6,8,56,-1,57,56,8,-1,8,10,57,-1,57,58,13,-1,13,11,57,-1,14,59,58,-1,58,12,14,-1,16,60,59,-1,59,14,16,-1,19,20,17,-1,17,18,19,-1,18,21,22,-1,22,19,18,-1,23,24,22,-1,22,21,23,-1,23,25,26,-1,26,24,23,-1,25,27,28,-1,28,26,25,-1,30,28,27,-1,27,29,30,-1,32,30,29,-1,29,31,32,-1,32,31,17,-1,17,20,32,-1,20,19,33,-1,19,22,33,-1,22,24,33,-1,24,26,33,-1,26,28,33,-1,28,30,33,-1,30,32,33,-1,32,20,33,-1,35,3,16,-1,16,34,35,-1,34,16,14,-1,14,36,34,-1,36,14,12,-1,12,37,36,-1,10,38,37,-1,37,12,10,-1,39,38,10,-1,10,8,39,-1,39,8,6,-1,6,40,39,-1,41,40,6,-1,6,4,41,-1,41,4,3,-1,3,35,41,-1,35,34,42,-1,34,36,42,-1,36,37,42,-1,37,38,42,-1,38,39,42,-1,39,40,42,-1,40,41,42,-1,41,35,42,-1,1,43,44,-1,44,2,1,-1,45,43,1,-1,1,46,45,-1,47,45,46,-1,46,48,47,-1,49,47,48,-1,48,9,49,-1,11,50,49,-1,49,9,11,-1,50,11,13,-1,13,51,50,-1,15,52,51,-1,51,13,15,-1,15,2,44,-1,44,52,15,-1,17,44,43,-1,43,18,17,-1,43,45,21,-1,21,18,43,-1,45,47,23,-1,23,21,45,-1,47,49,25,-1,25,23,47,-1,27,25,49,-1,49,50,27,-1,51,29,27,-1,27,50,51,-1,29,51,52,-1,52,31,29,-1,31,52,44,-1,44,17,31,-1,1,0,5,-1,5,46,1,-1,7,48,46,-1,46,5,7,-1,16,3,54,-1,54,60,16,-1,9,48,7,-1,5,0,54,-1,54,53,5,-1,55,7,5,-1,5,53,55,-1,9,7,55,-1,55,56,9,-1,11,9,56,-1,56,57,11,-1,10,12,58,-1,58,57,10,-1,59,15,13,-1,13,58,59,-1,60,2,15,-1,15,59,60,-1,0,2,60,-1,60,54,0,-1], Java.type("int[]"))).setCreaseAngle(1.57).setTexCoordIndex(Java.to([0,1,2,-1,3,4,41,-1,41,42,3,-1,6,43,41,-1,41,4,6,-1,44,43,6,-1,6,8,44,-1,45,44,8,-1,8,6,45,-1,45,46,11,-1,11,10,45,-1,3,47,46,-1,46,4,3,-1,13,48,47,-1,47,3,13,-1,16,17,14,-1,14,15,16,-1,15,18,19,-1,19,16,15,-1,20,21,19,-1,19,18,20,-1,20,22,23,-1,23,21,20,-1,22,20,21,-1,21,23,22,-1,19,21,20,-1,20,18,19,-1,16,19,18,-1,18,15,16,-1,16,15,14,-1,14,17,16,-1,17,16,24,-1,16,19,24,-1,19,21,24,-1,21,23,24,-1,23,21,24,-1,21,19,24,-1,19,16,24,-1,16,17,24,-1,26,3,13,-1,13,25,26,-1,25,13,3,-1,3,26,25,-1,26,3,4,-1,4,27,26,-1,6,28,27,-1,27,4,6,-1,29,28,6,-1,6,8,29,-1,29,8,6,-1,6,28,29,-1,27,28,6,-1,6,4,27,-1,27,4,3,-1,3,26,27,-1,26,25,30,-1,25,26,30,-1,26,27,30,-1,27,28,30,-1,28,29,30,-1,29,28,30,-1,28,27,30,-1,27,26,30,-1,1,31,32,-1,32,2,1,-1,33,31,1,-1,1,34,33,-1,35,33,34,-1,34,36,35,-1,37,35,36,-1,36,9,37,-1,10,38,37,-1,37,9,10,-1,38,10,11,-1,11,39,38,-1,12,40,39,-1,39,11,12,-1,12,2,32,-1,32,40,12,-1,14,32,31,-1,31,15,14,-1,31,33,18,-1,18,15,31,-1,33,35,20,-1,20,18,33,-1,35,37,22,-1,22,20,35,-1,20,22,37,-1,37,38,20,-1,39,18,20,-1,20,38,39,-1,18,39,40,-1,40,15,18,-1,15,40,32,-1,32,14,15,-1,1,0,5,-1,5,34,1,-1,7,36,34,-1,34,5,7,-1,13,3,42,-1,42,48,13,-1,9,36,7,-1,5,0,42,-1,42,41,5,-1,43,7,5,-1,5,41,43,-1,9,7,43,-1,43,44,9,-1,10,9,44,-1,44,45,10,-1,6,4,46,-1,46,45,6,-1,47,12,11,-1,11,46,47,-1,48,2,12,-1,12,47,48,-1,0,2,48,-1,48,42,0,-1], Java.type("int[]")))
                        .setCoord(new Coordinate().setPoint(Java.to([doubleToFloat(1.375),doubleToFloat(-5.834),doubleToFloat(-1.193),doubleToFloat(1.477),doubleToFloat(-4.137),doubleToFloat(-1.195),doubleToFloat(1.952),doubleToFloat(-4.672),doubleToFloat(0.1143),doubleToFloat(0.6966),doubleToFloat(-12.16),doubleToFloat(-0.8887),doubleToFloat(-0.0964),doubleToFloat(-12.16),doubleToFloat(-1.304),doubleToFloat(0.0075),doubleToFloat(-6.489),doubleToFloat(-1.984),doubleToFloat(-0.9748),doubleToFloat(-12.16),doubleToFloat(-0.8887),doubleToFloat(-1.329),doubleToFloat(-6.244),doubleToFloat(-1.314),doubleToFloat(-1.339),doubleToFloat(-12.16),doubleToFloat(0.1054),doubleToFloat(-1.761),doubleToFloat(-6.229),doubleToFloat(0.1143),doubleToFloat(-0.9748),doubleToFloat(-12.16),doubleToFloat(0.9689),doubleToFloat(-1.217),doubleToFloat(-6.865),doubleToFloat(1.222),doubleToFloat(-0.0964),doubleToFloat(-12.16),doubleToFloat(1.384),doubleToFloat(0.0075),doubleToFloat(-7.096),doubleToFloat(1.879),doubleToFloat(0.6966),doubleToFloat(-12.16),doubleToFloat(0.9689),doubleToFloat(1.312),doubleToFloat(-6.004),doubleToFloat(1.225),doubleToFloat(1.06),doubleToFloat(-12.16),doubleToFloat(0.1054),doubleToFloat(1.831),doubleToFloat(0.0045),doubleToFloat(0.1143),doubleToFloat(1.301),doubleToFloat(0.0045),doubleToFloat(-1.198),doubleToFloat(0.9277),doubleToFloat(1.148),doubleToFloat(-0.902),doubleToFloat(1.353),doubleToFloat(1.148),doubleToFloat(0.1143),doubleToFloat(0.0071),doubleToFloat(0.0045),doubleToFloat(-1.771),doubleToFloat(0.0071),doubleToFloat(1.148),doubleToFloat(-1.327),doubleToFloat(-1.396),doubleToFloat(0.0045),doubleToFloat(-1.198),doubleToFloat(-1.02),doubleToFloat(1.148),doubleToFloat(-0.902),doubleToFloat(-1.885),doubleToFloat(0.0045),doubleToFloat(0.1143),doubleToFloat(-1.445),doubleToFloat(1.148),doubleToFloat(0.1143),doubleToFloat(-1.396),doubleToFloat(0.0045),doubleToFloat(1.551),doubleToFloat(-1.02),doubleToFloat(1.148),doubleToFloat(1.396),doubleToFloat(0.0071),doubleToFloat(0.0045),doubleToFloat(2.125),doubleToFloat(0.0071),doubleToFloat(1.148),doubleToFloat(1.821),doubleToFloat(1.301),doubleToFloat(0.0045),doubleToFloat(1.551),doubleToFloat(0.9277),doubleToFloat(1.148),doubleToFloat(1.396),doubleToFloat(0.0071),doubleToFloat(2.106),doubleToFloat(0.1143),doubleToFloat(0.7952),doubleToFloat(-13.2),doubleToFloat(0.1143),doubleToFloat(0.5053),doubleToFloat(-13.2),doubleToFloat(-0.6746),doubleToFloat(0.5053),doubleToFloat(-13.2),doubleToFloat(0.749),doubleToFloat(-0.0941),doubleToFloat(-13.2),doubleToFloat(1.08),doubleToFloat(-0.7943),doubleToFloat(-13.2),doubleToFloat(0.749),doubleToFloat(-1.084),doubleToFloat(-13.2),doubleToFloat(0.1143),doubleToFloat(-0.7943),doubleToFloat(-13.2),doubleToFloat(-0.6746),doubleToFloat(-0.0941),doubleToFloat(-13.2),doubleToFloat(-1.006),doubleToFloat(-0.0941),doubleToFloat(-13.94),doubleToFloat(0.1143),doubleToFloat(1.319),doubleToFloat(-1.205),doubleToFloat(-1.195),doubleToFloat(1.928),doubleToFloat(-1.333),doubleToFloat(0.1143),doubleToFloat(-0.0092),doubleToFloat(-1.051),doubleToFloat(-1.85),doubleToFloat(0.0075),doubleToFloat(-3.792),doubleToFloat(-2.125),doubleToFloat(-1.423),doubleToFloat(-1.205),doubleToFloat(-1.195),doubleToFloat(-1.386),doubleToFloat(-4.758),doubleToFloat(-1.344),doubleToFloat(-1.952),doubleToFloat(-1.333),doubleToFloat(0.1143),doubleToFloat(-1.391),doubleToFloat(-1.333),doubleToFloat(1.308),doubleToFloat(0.0071),doubleToFloat(-1.333),doubleToFloat(1.881),doubleToFloat(1.326),doubleToFloat(-1.333),doubleToFloat(1.308),doubleToFloat(-0.0957),doubleToFloat(-10.22),doubleToFloat(-1.525),doubleToFloat(0.8601),doubleToFloat(-10.22),doubleToFloat(-0.9874),doubleToFloat(-1.1),doubleToFloat(-10.22),doubleToFloat(-1.026),doubleToFloat(-1.478),doubleToFloat(-10.22),doubleToFloat(0.1083),doubleToFloat(-1.065),doubleToFloat(-10.22),doubleToFloat(1.051),doubleToFloat(-0.0957),doubleToFloat(-10.22),doubleToFloat(1.545),doubleToFloat(0.8407),doubleToFloat(-10.22),doubleToFloat(1.052),doubleToFloat(1.283),doubleToFloat(-10.22),doubleToFloat(0.1083)], Java.type("float[]"))))
                        .setTexCoord(new TextureCoordinate().setPoint(Java.to([doubleToFloat(0.9287),doubleToFloat(0.342),doubleToFloat(0.9261),doubleToFloat(0.3817),doubleToFloat(0.9166),doubleToFloat(0.3743),doubleToFloat(0.9312),doubleToFloat(0.2839),doubleToFloat(0.9471),doubleToFloat(0.2839),doubleToFloat(0.9471),doubleToFloat(0.3395),doubleToFloat(0.9648),doubleToFloat(0.2839),doubleToFloat(0.9653),doubleToFloat(0.3367),doubleToFloat(0.9721),doubleToFloat(0.2839),doubleToFloat(0.9756),doubleToFloat(0.3608),doubleToFloat(0.9668),doubleToFloat(0.3526),doubleToFloat(0.9471),doubleToFloat(0.3496),doubleToFloat(0.9261),doubleToFloat(0.3638),doubleToFloat(0.9239),doubleToFloat(0.2839),doubleToFloat(0.9178),doubleToFloat(0.4416),doubleToFloat(0.9263),doubleToFloat(0.4416),doubleToFloat(0.9323),doubleToFloat(0.4565),doubleToFloat(0.9255),doubleToFloat(0.4565),doubleToFloat(0.9471),doubleToFloat(0.4416),doubleToFloat(0.9471),doubleToFloat(0.4565),doubleToFloat(0.9697),doubleToFloat(0.4416),doubleToFloat(0.9637),doubleToFloat(0.4565),doubleToFloat(0.9783),doubleToFloat(0.4416),doubleToFloat(0.9705),doubleToFloat(0.4565),doubleToFloat(0.9471),doubleToFloat(0.4689),doubleToFloat(0.932),doubleToFloat(0.2704),doubleToFloat(0.937),doubleToFloat(0.2704),doubleToFloat(0.9471),doubleToFloat(0.2704),doubleToFloat(0.959),doubleToFloat(0.2704),doubleToFloat(0.964),doubleToFloat(0.2704),doubleToFloat(0.9471),doubleToFloat(0.2608),doubleToFloat(0.9261),doubleToFloat(0.428),doubleToFloat(0.9162),doubleToFloat(0.4243),doubleToFloat(0.9474),doubleToFloat(0.428),doubleToFloat(0.9471),doubleToFloat(0.3767),doubleToFloat(0.9684),doubleToFloat(0.428),doubleToFloat(0.9669),doubleToFloat(0.3711),doubleToFloat(0.9771),doubleToFloat(0.4243),doubleToFloat(0.9678),doubleToFloat(0.4243),doubleToFloat(0.9471),doubleToFloat(0.4243),doubleToFloat(0.9259),doubleToFloat(0.4243),doubleToFloat(0.9467),doubleToFloat(0.3066),doubleToFloat(0.9291),doubleToFloat(0.3066),doubleToFloat(0.9659),doubleToFloat(0.3066),doubleToFloat(0.9763),doubleToFloat(0.3066),doubleToFloat(0.967),doubleToFloat(0.3066),doubleToFloat(0.9459),doubleToFloat(0.3066),doubleToFloat(0.9267),doubleToFloat(0.3066),doubleToFloat(0.9183),doubleToFloat(0.3066)], Java.type("float[]"))))))))
                .addChild(new HAnimJoint("hanim_l_knee").setName("l_talocrural").setDEF("hanim_l_talocrural").setCenter(Java.to([doubleToFloat(2.839),doubleToFloat(3.899),doubleToFloat(-0.4116)], Java.type("float[]")))
                  .addChild(new HAnimSegment("hanim_l_talocrural").setName("l_talus").setDEF("hanim_l_talus")
                    .addChild(new Transform().setTranslation(Java.to([doubleToFloat(2.839),doubleToFloat(3.899),doubleToFloat(-0.4116)], Java.type("float[]")))
                      .addChild(new Shape()
                        .setAppearance(new Appearance()
                          .setMaterial(new Material().setDiffuseColor(Java.to([doubleToFloat(0.588),doubleToFloat(0.588),doubleToFloat(0.588)], Java.type("float[]"))))
                          .setTexture(new ImageTexture().setUSE("SunTextureAtlas")))
                        .setGeometry(new IndexedFaceSet().setCoordIndex(Java.to([2,3,0,-1,0,1,2,-1,3,6,4,-1,4,5,3,-1,8,33,32,-1,32,7,8,-1,7,32,31,-1,31,9,7,-1,10,11,0,-1,0,3,10,-1,3,5,12,-1,12,10,3,-1,15,16,13,-1,13,14,15,-1,1,8,7,-1,7,2,1,-1,2,7,9,-1,9,6,2,-1,9,31,30,-1,30,17,9,-1,17,4,6,-1,6,9,17,-1,3,2,6,-1,0,11,13,-1,13,16,0,-1,20,21,18,-1,18,19,20,-1,22,19,5,-1,5,4,22,-1,24,35,34,-1,34,23,24,-1,35,24,25,-1,25,36,35,-1,18,40,26,-1,26,19,18,-1,19,26,12,-1,12,5,19,-1,27,28,15,-1,15,14,27,-1,20,24,23,-1,23,21,20,-1,22,25,24,-1,24,20,22,-1,36,25,17,-1,17,30,36,-1,25,22,4,-1,4,17,25,-1,19,22,20,-1,28,27,40,-1,40,18,28,-1,30,31,32,-1,32,37,30,-1,36,30,37,-1,37,35,36,-1,32,33,29,-1,29,37,32,-1,29,34,35,-1,35,37,29,-1,14,13,38,-1,38,39,14,-1,13,11,38,-1,27,14,39,-1,39,41,27,-1,27,41,40,-1,11,10,42,-1,10,12,42,-1,12,26,42,-1,26,40,42,-1,40,41,42,-1,41,39,42,-1,39,38,42,-1,38,11,42,-1,45,46,47,-1,45,47,48,-1,44,45,48,-1,1,0,44,-1,44,43,1,-1,0,16,45,-1,45,44,0,-1,16,15,46,-1,46,45,16,-1,15,28,47,-1,47,46,15,-1,28,18,48,-1,48,47,28,-1,18,21,49,-1,49,48,18,-1,21,23,50,-1,50,49,21,-1,23,34,51,-1,51,50,23,-1,34,29,52,-1,52,51,34,-1,29,33,53,-1,53,52,29,-1,33,8,54,-1,54,53,33,-1,8,1,43,-1,43,54,8,-1,49,50,54,-1,54,43,44,-1,49,54,44,-1,48,49,44,-1,50,51,52,-1,50,52,53,-1,50,53,54,-1], Java.type("int[]"))).setCreaseAngle(1.57).setTexCoordIndex(Java.to([2,3,0,-1,0,1,2,-1,3,6,4,-1,4,5,3,-1,37,10,7,-1,7,36,37,-1,36,7,11,-1,11,38,36,-1,13,14,0,-1,0,3,13,-1,3,5,15,-1,15,13,3,-1,18,19,16,-1,16,17,18,-1,1,9,8,-1,8,2,1,-1,2,8,12,-1,12,6,2,-1,38,11,20,-1,20,39,38,-1,21,4,6,-1,6,12,21,-1,3,2,6,-1,22,23,16,-1,16,19,22,-1,2,1,0,-1,0,3,2,-1,6,3,5,-1,5,4,6,-1,36,7,10,-1,10,37,36,-1,7,36,38,-1,38,11,7,-1,0,14,13,-1,13,3,0,-1,3,13,15,-1,15,5,3,-1,24,25,18,-1,18,17,24,-1,2,8,9,-1,9,1,2,-1,6,12,8,-1,8,2,6,-1,11,38,39,-1,39,20,11,-1,12,6,4,-1,4,21,12,-1,3,6,2,-1,25,24,42,-1,42,26,25,-1,29,30,31,-1,31,27,29,-1,34,29,27,-1,27,33,34,-1,31,32,28,-1,28,27,31,-1,28,35,33,-1,33,27,28,-1,17,16,40,-1,40,41,17,-1,16,23,40,-1,24,17,41,-1,41,43,24,-1,24,43,42,-1,44,45,46,-1,45,47,46,-1,47,48,46,-1,48,49,46,-1,49,50,46,-1,50,51,46,-1,51,52,46,-1,52,44,46,-1,55,56,57,-1,55,57,58,-1,54,55,58,-1,1,0,54,-1,54,53,1,-1,22,19,55,-1,55,54,22,-1,19,18,56,-1,56,55,19,-1,18,25,57,-1,57,56,18,-1,25,26,58,-1,58,57,25,-1,0,1,53,-1,53,58,0,-1,1,9,59,-1,59,53,1,-1,64,65,66,-1,66,67,64,-1,60,61,62,-1,62,73,60,-1,61,74,75,-1,75,62,61,-1,68,69,70,-1,70,71,68,-1,9,1,53,-1,53,63,9,-1,53,59,63,-1,63,53,54,-1,53,63,54,-1,58,53,54,-1,67,66,72,-1,67,72,71,-1,67,71,70,-1], Java.type("int[]")))
                          .setCoord(new Coordinate().setPoint(Java.to([doubleToFloat(1.486),doubleToFloat(-1.104),doubleToFloat(-0.0121),doubleToFloat(1.788),doubleToFloat(-2.384),doubleToFloat(-0.0121),doubleToFloat(1.576),doubleToFloat(-2.288),doubleToFloat(-1.284),doubleToFloat(1.215),doubleToFloat(-1.048),doubleToFloat(-1.431),doubleToFloat(0),doubleToFloat(-2.222),doubleToFloat(-2.07),doubleToFloat(0),doubleToFloat(-0.9763),doubleToFloat(-1.857),doubleToFloat(1.109),doubleToFloat(-2.246),doubleToFloat(-1.797),doubleToFloat(1.648),doubleToFloat(-2.952),doubleToFloat(-1.227),doubleToFloat(1.928),doubleToFloat(-3.172),doubleToFloat(-0.0121),doubleToFloat(1.121),doubleToFloat(-2.825),doubleToFloat(-1.762),doubleToFloat(0.9389),doubleToFloat(0.048),doubleToFloat(-0.9468),doubleToFloat(1.158),doubleToFloat(0.048),doubleToFloat(-0.0184),doubleToFloat(-0.0037),doubleToFloat(0.048),doubleToFloat(-1.291),doubleToFloat(0.971),doubleToFloat(0.0076),doubleToFloat(1.129),doubleToFloat(-0.0037),doubleToFloat(0.048),doubleToFloat(1.489),doubleToFloat(-0.0009),doubleToFloat(-0.4231),doubleToFloat(1.851),doubleToFloat(1.326),doubleToFloat(-0.6054),doubleToFloat(1.493),doubleToFloat(0),doubleToFloat(-2.774),doubleToFloat(-2.014),doubleToFloat(-1.486),doubleToFloat(-1.104),doubleToFloat(-0.0121),doubleToFloat(-1.215),doubleToFloat(-1.048),doubleToFloat(-1.431),doubleToFloat(-1.576),doubleToFloat(-2.288),doubleToFloat(-1.284),doubleToFloat(-1.788),doubleToFloat(-2.384),doubleToFloat(-0.0121),doubleToFloat(-1.109),doubleToFloat(-2.246),doubleToFloat(-1.797),doubleToFloat(-1.928),doubleToFloat(-3.172),doubleToFloat(-0.0121),doubleToFloat(-1.648),doubleToFloat(-2.952),doubleToFloat(-1.227),doubleToFloat(-1.121),doubleToFloat(-2.825),doubleToFloat(-1.762),doubleToFloat(-1.067),doubleToFloat(0.048),doubleToFloat(-0.9145),doubleToFloat(-1.005),doubleToFloat(0.0288),doubleToFloat(1.129),doubleToFloat(-1.331),doubleToFloat(-0.5981),doubleToFloat(1.498),doubleToFloat(0),doubleToFloat(-3.751),doubleToFloat(-0.0121),doubleToFloat(0),doubleToFloat(-3.556),doubleToFloat(-2.192),doubleToFloat(1.156),doubleToFloat(-3.584),doubleToFloat(-1.941),doubleToFloat(1.746),doubleToFloat(-3.653),doubleToFloat(-1.26),doubleToFloat(1.935),doubleToFloat(-3.751),doubleToFloat(-0.0121),doubleToFloat(-1.934),doubleToFloat(-3.751),doubleToFloat(-0.0121),doubleToFloat(-1.746),doubleToFloat(-3.653),doubleToFloat(-1.26),doubleToFloat(-1.156),doubleToFloat(-3.584),doubleToFloat(-1.941),doubleToFloat(0),doubleToFloat(-3.657),doubleToFloat(-1.26),doubleToFloat(0.8317),doubleToFloat(0.4142),doubleToFloat(0.8386),doubleToFloat(-0.0037),doubleToFloat(0.5073),doubleToFloat(1.277),doubleToFloat(-1.225),doubleToFloat(0.048),doubleToFloat(-0.0184),doubleToFloat(-0.9272),doubleToFloat(0.4142),doubleToFloat(0.8135),doubleToFloat(-0.0359),doubleToFloat(0.4987),doubleToFloat(-0.0174),doubleToFloat(1.181),doubleToFloat(-2.385),doubleToFloat(0.7578),doubleToFloat(0.8758),doubleToFloat(-1.458),doubleToFloat(0.7625),doubleToFloat(0.7742),doubleToFloat(-0.9835),doubleToFloat(1.664),doubleToFloat(-0.0035),doubleToFloat(-0.9186),doubleToFloat(1.971),doubleToFloat(-0.7785),doubleToFloat(-0.9788),doubleToFloat(1.669),doubleToFloat(-0.8761),doubleToFloat(-1.457),doubleToFloat(0.7637),doubleToFloat(-1.182),doubleToFloat(-2.385),doubleToFloat(0.7583),doubleToFloat(-1.307),doubleToFloat(-3.08),doubleToFloat(0.7871),doubleToFloat(-1.305),doubleToFloat(-3.419),doubleToFloat(1.057),doubleToFloat(-0.0004),doubleToFloat(-3.419),doubleToFloat(1.057),doubleToFloat(1.304),doubleToFloat(-3.419),doubleToFloat(1.056),doubleToFloat(1.306),doubleToFloat(-3.08),doubleToFloat(0.7865)], Java.type("float[]"))))
                          .setTexCoord(new TextureCoordinate().setPoint(Java.to([doubleToFloat(0.1096),doubleToFloat(0.0871),doubleToFloat(0.1086),doubleToFloat(0.051),doubleToFloat(0.0724),doubleToFloat(0.0571),doubleToFloat(0.0703),doubleToFloat(0.093),doubleToFloat(0.0235),doubleToFloat(0.075),doubleToFloat(0.0389),doubleToFloat(0.1112),doubleToFloat(0.0537),doubleToFloat(0.0629),doubleToFloat(0.0688),doubleToFloat(0.0153),doubleToFloat(0.0719),doubleToFloat(0.0393),doubleToFloat(0.1073),doubleToFloat(0.0299),doubleToFloat(0.1053),doubleToFloat(0.0075),doubleToFloat(0.0438),doubleToFloat(0.0235),doubleToFloat(0.0507),doubleToFloat(0.0468),doubleToFloat(0.0827),doubleToFloat(0.1223),doubleToFloat(0.1079),doubleToFloat(0.1195),doubleToFloat(0.0638),doubleToFloat(0.1406),doubleToFloat(0.148),doubleToFloat(0.3335),doubleToFloat(0.1191),doubleToFloat(0.3241),doubleToFloat(0.1188),doubleToFloat(0.3009),doubleToFloat(0.1607),doubleToFloat(0.3056),doubleToFloat(0.0125),doubleToFloat(0.0361),doubleToFloat(0.0195),doubleToFloat(0.0586),doubleToFloat(0.1959),doubleToFloat(0.3397),doubleToFloat(0.1665),doubleToFloat(0.356),doubleToFloat(0.0896),doubleToFloat(0.3325),doubleToFloat(0.0774),doubleToFloat(0.3058),doubleToFloat(0.042),doubleToFloat(0.3397),doubleToFloat(0.9339),doubleToFloat(0.8099),doubleToFloat(0.9339),doubleToFloat(0.8425),doubleToFloat(0.9339),doubleToFloat(0.7851),doubleToFloat(0.9639),doubleToFloat(0.7918),doubleToFloat(0.9793),doubleToFloat(0.8097),doubleToFloat(0.9842),doubleToFloat(0.8425),doubleToFloat(0.8885),doubleToFloat(0.8098),doubleToFloat(0.9038),doubleToFloat(0.7913),doubleToFloat(0.8836),doubleToFloat(0.8425),doubleToFloat(0.0713),doubleToFloat(0.0347),doubleToFloat(0.1066),doubleToFloat(0.0253),doubleToFloat(0.05),doubleToFloat(0.0422),doubleToFloat(0.0189),doubleToFloat(0.054),doubleToFloat(0.142),doubleToFloat(0.3577),doubleToFloat(0.1187),doubleToFloat(0.3518),doubleToFloat(0.0703),doubleToFloat(0.3561),doubleToFloat(0.0946),doubleToFloat(0.3567),doubleToFloat(0.1006),doubleToFloat(0.1294),doubleToFloat(0.0944),doubleToFloat(0.1279),doubleToFloat(0.1006),doubleToFloat(0.121),doubleToFloat(0.0918),doubleToFloat(0.1217),doubleToFloat(0.0937),doubleToFloat(0.1145),doubleToFloat(0.0996),doubleToFloat(0.1127),doubleToFloat(0.1056),doubleToFloat(0.1147),doubleToFloat(0.1091),doubleToFloat(0.1206),doubleToFloat(0.1065),doubleToFloat(0.1264),doubleToFloat(0.1086),doubleToFloat(0.051),doubleToFloat(0.1096),doubleToFloat(0.0871),doubleToFloat(0.1607),doubleToFloat(0.3056),doubleToFloat(0.1188),doubleToFloat(0.3009),doubleToFloat(0.0774),doubleToFloat(0.3058),doubleToFloat(0.042),doubleToFloat(0.3397),doubleToFloat(0.1073),doubleToFloat(0.0299),doubleToFloat(0.8837),doubleToFloat(0.8428),doubleToFloat(0.9341),doubleToFloat(0.8428),doubleToFloat(0.9341),doubleToFloat(0.8649),doubleToFloat(0.1066),doubleToFloat(0.0253),doubleToFloat(0.1067),doubleToFloat(0.025),doubleToFloat(0.1052),doubleToFloat(0.0076),doubleToFloat(0.1262),doubleToFloat(0.0158),doubleToFloat(0.122),doubleToFloat(0.0264),doubleToFloat(0.1052),doubleToFloat(0.0076),doubleToFloat(0.1067),doubleToFloat(0.025),doubleToFloat(0.122),doubleToFloat(0.0264),doubleToFloat(0.1262),doubleToFloat(0.0158),doubleToFloat(0.1262),doubleToFloat(0.0158),doubleToFloat(0.9001),doubleToFloat(0.8648),doubleToFloat(0.9844),doubleToFloat(0.8428),doubleToFloat(0.968),doubleToFloat(0.8649)], Java.type("float[]"))))))))
                  .addChild(new HAnimJoint("hanim_l_talocrural").setName("l_metatarsophalangeal_2").setDEF("hanim_l_metatarsophalangeal_2").setCenter(Java.to([doubleToFloat(2.839),doubleToFloat(3.312),doubleToFloat(1.078)], Java.type("float[]")))
                    .addChild(new HAnimSegment("hanim_l_metatarsophalangeal_2").setName("l_tarsal_proximal_phalanx_2").setDEF("hanim_l_tarsal_proximal_phalanx_2")
                      .addChild(new Transform().setTranslation(Java.to([doubleToFloat(2.839),doubleToFloat(3.312),doubleToFloat(1.078)], Java.type("float[]")))
                        .addChild(new Shape()
                          .setAppearance(new Appearance()
                            .setMaterial(new Material().setDiffuseColor(Java.to([doubleToFloat(0.588),doubleToFloat(0.588),doubleToFloat(0.588)], Java.type("float[]"))))
                            .setTexture(new ImageTexture().setUSE("SunTextureAtlas")))
                          .setGeometry(new IndexedFaceSet().setCoordIndex(Java.to([1,2,3,-1,3,0,1,-1,6,7,4,-1,4,5,6,-1,8,9,3,-1,3,4,8,-1,10,11,35,-1,35,34,10,-1,34,33,12,-1,12,10,34,-1,0,50,49,-1,49,1,0,-1,15,16,13,-1,13,14,15,-1,37,13,16,-1,16,32,37,-1,10,7,6,-1,6,11,10,-1,8,7,10,-1,10,12,8,-1,14,47,46,-1,46,50,14,-1,14,13,48,-1,48,47,14,-1,13,37,56,-1,56,48,13,-1,14,50,0,-1,0,15,14,-1,16,17,43,-1,43,32,16,-1,12,17,9,-1,9,8,12,-1,4,7,8,-1,1,18,19,-1,19,2,1,-1,20,21,6,-1,6,5,20,-1,23,19,18,-1,18,22,23,-1,40,35,11,-1,11,24,40,-1,24,25,38,-1,38,40,24,-1,49,54,18,-1,18,1,49,-1,27,28,26,-1,26,22,27,-1,39,26,28,-1,28,41,39,-1,6,21,24,-1,24,11,6,-1,21,29,25,-1,25,24,21,-1,51,52,27,-1,27,54,51,-1,52,53,28,-1,28,27,52,-1,57,41,28,-1,28,53,57,-1,27,22,18,-1,18,54,27,-1,26,39,44,-1,44,30,26,-1,22,26,30,-1,30,23,22,-1,20,29,21,-1,2,5,4,-1,4,3,2,-1,9,15,0,-1,0,3,9,-1,17,12,33,-1,33,43,17,-1,17,16,15,-1,15,9,17,-1,20,5,2,-1,2,19,20,-1,29,20,19,-1,19,23,29,-1,38,25,30,-1,30,44,38,-1,25,29,23,-1,23,30,25,-1,45,43,33,-1,33,42,45,-1,31,36,37,-1,37,32,31,-1,37,36,55,-1,55,56,37,-1,31,45,44,-1,44,39,31,-1,36,31,39,-1,39,41,36,-1,57,55,36,-1,36,41,57,-1,34,35,42,-1,42,33,34,-1,42,35,40,-1,40,38,42,-1,31,32,43,-1,43,45,31,-1,45,42,38,-1,38,44,45,-1,59,60,61,-1,59,61,62,-1,62,63,64,-1,62,64,65,-1,65,66,67,-1,67,68,69,-1,65,67,69,-1,62,65,69,-1,59,62,69,-1,59,69,58,-1,46,47,59,-1,59,58,46,-1,47,48,60,-1,60,59,47,-1,48,56,61,-1,61,60,48,-1,56,55,62,-1,62,61,56,-1,55,57,63,-1,63,62,55,-1,57,53,64,-1,64,63,57,-1,53,52,65,-1,65,64,53,-1,52,51,66,-1,66,65,52,-1,51,54,67,-1,67,66,51,-1,54,49,68,-1,68,67,54,-1,49,50,69,-1,69,68,49,-1,50,46,58,-1,58,69,50,-1], Java.type("int[]"))).setCreaseAngle(1.57).setTexCoordIndex(Java.to([1,2,3,-1,3,0,1,-1,6,7,4,-1,4,5,6,-1,8,9,3,-1,3,4,8,-1,25,37,10,-1,10,11,25,-1,11,15,38,-1,38,25,11,-1,0,65,64,-1,64,1,0,-1,18,19,16,-1,16,17,18,-1,21,56,57,-1,57,20,21,-1,12,23,22,-1,22,13,12,-1,24,23,12,-1,12,14,24,-1,26,60,59,-1,59,65,26,-1,17,16,62,-1,62,61,17,-1,56,21,71,-1,71,63,56,-1,26,65,0,-1,0,27,26,-1,57,58,29,-1,29,20,57,-1,14,28,30,-1,30,24,14,-1,4,7,8,-1,1,31,32,-1,32,2,1,-1,33,34,6,-1,6,5,33,-1,36,32,31,-1,31,35,36,-1,11,10,37,-1,37,25,11,-1,25,38,15,-1,15,11,25,-1,64,68,31,-1,31,1,64,-1,17,16,19,-1,19,18,17,-1,20,57,56,-1,56,21,20,-1,22,23,12,-1,12,13,22,-1,23,24,14,-1,14,12,23,-1,66,67,39,-1,39,68,66,-1,61,62,16,-1,16,17,61,-1,71,21,56,-1,56,63,71,-1,39,35,31,-1,31,68,39,-1,57,20,29,-1,29,58,57,-1,18,19,28,-1,28,30,18,-1,33,40,34,-1,2,5,4,-1,4,3,2,-1,9,27,0,-1,0,3,9,-1,58,38,15,-1,15,29,58,-1,28,19,18,-1,18,30,28,-1,33,5,2,-1,2,32,33,-1,40,33,32,-1,32,36,40,-1,15,38,58,-1,58,29,15,-1,14,24,30,-1,30,28,14,-1,42,45,46,-1,46,41,42,-1,43,44,49,-1,49,50,43,-1,49,44,69,-1,69,70,49,-1,43,42,51,-1,51,52,43,-1,44,43,52,-1,52,55,44,-1,72,69,44,-1,44,55,72,-1,48,47,41,-1,41,46,48,-1,41,47,53,-1,53,54,41,-1,43,50,45,-1,45,42,43,-1,42,41,54,-1,54,51,42,-1,74,75,76,-1,74,76,77,-1,77,78,79,-1,77,79,80,-1,80,111,112,-1,112,113,114,-1,80,112,114,-1,77,80,114,-1,74,77,114,-1,74,114,115,-1,99,100,101,-1,101,102,99,-1,100,103,104,-1,104,101,100,-1,91,92,93,-1,93,94,91,-1,85,86,87,-1,87,88,85,-1,86,89,90,-1,90,87,86,-1,95,96,97,-1,97,98,95,-1,105,106,107,-1,107,108,105,-1,106,109,110,-1,110,107,106,-1,66,68,82,-1,82,81,66,-1,68,64,83,-1,83,82,68,-1,64,65,84,-1,84,83,64,-1,65,59,73,-1,73,84,65,-1], Java.type("int[]")))
                            .setCoord(new Coordinate().setPoint(Java.to([doubleToFloat(1.388),doubleToFloat(-0.7441),doubleToFloat(0.9353),doubleToFloat(0),doubleToFloat(-0.5418),doubleToFloat(1.142),doubleToFloat(0),doubleToFloat(-1.042),doubleToFloat(2.002),doubleToFloat(1.356),doubleToFloat(-1.234),doubleToFloat(1.823),doubleToFloat(1.286),doubleToFloat(-1.394),doubleToFloat(3.004),doubleToFloat(0),doubleToFloat(-1.212),doubleToFloat(3.154),doubleToFloat(0),doubleToFloat(-1.708),doubleToFloat(3.962),doubleToFloat(1.162),doubleToFloat(-1.8),doubleToFloat(3.64),doubleToFloat(1.65),doubleToFloat(-1.868),doubleToFloat(2.671),doubleToFloat(1.806),doubleToFloat(-1.859),doubleToFloat(1.688),doubleToFloat(1.217),doubleToFloat(-2.657),doubleToFloat(3.79),doubleToFloat(0),doubleToFloat(-2.605),doubleToFloat(4.159),doubleToFloat(1.729),doubleToFloat(-2.767),doubleToFloat(2.676),doubleToFloat(1.984),doubleToFloat(-2.747),doubleToFloat(-0.4534),doubleToFloat(1.847),doubleToFloat(-1.879),doubleToFloat(-0.4111),doubleToFloat(1.91),doubleToFloat(-1.914),doubleToFloat(0.8074),doubleToFloat(2.006),doubleToFloat(-2.83),doubleToFloat(0.7644),doubleToFloat(1.895),doubleToFloat(-2.791),doubleToFloat(1.697),doubleToFloat(-1.388),doubleToFloat(-0.7441),doubleToFloat(0.9353),doubleToFloat(-1.356),doubleToFloat(-1.234),doubleToFloat(1.823),doubleToFloat(-1.286),doubleToFloat(-1.394),doubleToFloat(3.004),doubleToFloat(-1.162),doubleToFloat(-1.8),doubleToFloat(3.64),doubleToFloat(-1.91),doubleToFloat(-1.914),doubleToFloat(0.8074),doubleToFloat(-1.806),doubleToFloat(-1.859),doubleToFloat(1.688),doubleToFloat(-1.217),doubleToFloat(-2.657),doubleToFloat(3.79),doubleToFloat(-1.729),doubleToFloat(-2.767),doubleToFloat(2.676),doubleToFloat(-2.006),doubleToFloat(-2.83),doubleToFloat(0.7644),doubleToFloat(-1.847),doubleToFloat(-1.879),doubleToFloat(-0.4111),doubleToFloat(-1.984),doubleToFloat(-2.747),doubleToFloat(-0.4534),doubleToFloat(-1.65),doubleToFloat(-1.868),doubleToFloat(2.671),doubleToFloat(-1.895),doubleToFloat(-2.791),doubleToFloat(1.697),doubleToFloat(0),doubleToFloat(-3.18),doubleToFloat(0.7644),doubleToFloat(2.006),doubleToFloat(-3.18),doubleToFloat(0.7644),doubleToFloat(1.729),doubleToFloat(-3.137),doubleToFloat(2.71),doubleToFloat(1.217),doubleToFloat(-3.069),doubleToFloat(3.793),doubleToFloat(0),doubleToFloat(-2.997),doubleToFloat(4.162),doubleToFloat(0),doubleToFloat(-3.18),doubleToFloat(-0.4554),doubleToFloat(1.99),doubleToFloat(-3.18),doubleToFloat(-0.4554),doubleToFloat(-1.729),doubleToFloat(-3.137),doubleToFloat(2.71),doubleToFloat(-2.006),doubleToFloat(-3.18),doubleToFloat(0.7644),doubleToFloat(-1.217),doubleToFloat(-3.069),doubleToFloat(3.793),doubleToFloat(-1.99),doubleToFloat(-3.18),doubleToFloat(-0.4554),doubleToFloat(0),doubleToFloat(-3.141),doubleToFloat(2.71),doubleToFloat(1.895),doubleToFloat(-3.164),doubleToFloat(1.686),doubleToFloat(-1.895),doubleToFloat(-3.164),doubleToFloat(1.686),doubleToFloat(0),doubleToFloat(-3.164),doubleToFloat(1.686),doubleToFloat(1.486),doubleToFloat(-0.5175),doubleToFloat(-1.502),doubleToFloat(1.788),doubleToFloat(-1.797),doubleToFloat(-1.502),doubleToFloat(1.928),doubleToFloat(-2.585),doubleToFloat(-1.502),doubleToFloat(-0.0009),doubleToFloat(0.1637),doubleToFloat(0.361),doubleToFloat(1.326),doubleToFloat(-0.0186),doubleToFloat(0.0033),doubleToFloat(-1.486),doubleToFloat(-0.5175),doubleToFloat(-1.502),doubleToFloat(-1.788),doubleToFloat(-1.797),doubleToFloat(-1.502),doubleToFloat(-1.928),doubleToFloat(-2.585),doubleToFloat(-1.502),doubleToFloat(-1.331),doubleToFloat(-0.0112),doubleToFloat(0.0089),doubleToFloat(0),doubleToFloat(-3.164),doubleToFloat(-1.502),doubleToFloat(1.935),doubleToFloat(-3.164),doubleToFloat(-1.502),doubleToFloat(-1.934),doubleToFloat(-3.164),doubleToFloat(-1.502),doubleToFloat(1.153),doubleToFloat(-0.3082),doubleToFloat(-2.015),doubleToFloat(1.192),doubleToFloat(-1.388),doubleToFloat(-2.379),doubleToFloat(1.307),doubleToFloat(-1.876),doubleToFloat(-2.363),doubleToFloat(1.307),doubleToFloat(-2.129),doubleToFloat(-2.356),doubleToFloat(0.0004),doubleToFloat(-2.129),doubleToFloat(-2.356),doubleToFloat(-1.306),doubleToFloat(-2.129),doubleToFloat(-2.356),doubleToFloat(-1.306),doubleToFloat(-1.876),doubleToFloat(-2.362),doubleToFloat(-1.191),doubleToFloat(-1.388),doubleToFloat(-2.378),doubleToFloat(-1.152),doubleToFloat(-0.3071),doubleToFloat(-2.014),doubleToFloat(-1.027),doubleToFloat(0.2573),doubleToFloat(-1.173),doubleToFloat(-0.0025),doubleToFloat(0.3479),doubleToFloat(-0.8576),doubleToFloat(1.023),doubleToFloat(0.2519),doubleToFloat(-1.179)], Java.type("float[]"))))
                            .setTexCoord(new TextureCoordinate().setPoint(Java.to([doubleToFloat(0.1645),doubleToFloat(0.2682),doubleToFloat(0.119),doubleToFloat(0.2656),doubleToFloat(0.119),doubleToFloat(0.2333),doubleToFloat(0.1642),doubleToFloat(0.2355),doubleToFloat(0.1585),doubleToFloat(0.1986),doubleToFloat(0.119),doubleToFloat(0.1964),doubleToFloat(0.119),doubleToFloat(0.1664),doubleToFloat(0.1572),doubleToFloat(0.175),doubleToFloat(0.1786),doubleToFloat(0.2029),doubleToFloat(0.1893),doubleToFloat(0.2321),doubleToFloat(0.2954),doubleToFloat(0.0497),doubleToFloat(0.2633),doubleToFloat(0.0308),doubleToFloat(0.2607),doubleToFloat(0.0443),doubleToFloat(0.2924),doubleToFloat(0.0621),doubleToFloat(0.2275),doubleToFloat(0.0325),doubleToFloat(0.2299),doubleToFloat(0.0183),doubleToFloat(0.1375),doubleToFloat(0.0244),doubleToFloat(0.1392),doubleToFloat(0.0478),doubleToFloat(0.1726),doubleToFloat(0.0473),doubleToFloat(0.1726),doubleToFloat(0.0227),doubleToFloat(0.1726),doubleToFloat(0.0066),doubleToFloat(0.1366),doubleToFloat(0.0058),doubleToFloat(0.2807),doubleToFloat(0.084),doubleToFloat(0.2512),doubleToFloat(0.067),doubleToFloat(0.2227),doubleToFloat(0.0576),doubleToFloat(0.2601),doubleToFloat(0.0398),doubleToFloat(0.2197),doubleToFloat(0.2888),doubleToFloat(0.2029),doubleToFloat(0.2547),doubleToFloat(0.1996),doubleToFloat(0.0258),doubleToFloat(0.2),doubleToFloat(0.0107),doubleToFloat(0.1962),doubleToFloat(0.0514),doubleToFloat(0.0735),doubleToFloat(0.2682),doubleToFloat(0.0739),doubleToFloat(0.2355),doubleToFloat(0.0796),doubleToFloat(0.1986),doubleToFloat(0.0809),doubleToFloat(0.175),doubleToFloat(0.0352),doubleToFloat(0.2547),doubleToFloat(0.0488),doubleToFloat(0.232),doubleToFloat(0.2918),doubleToFloat(0.0575),doubleToFloat(0.2269),doubleToFloat(0.0279),doubleToFloat(0.0183),doubleToFloat(0.2887),doubleToFloat(0.0595),doubleToFloat(0.2029),doubleToFloat(0.9339),doubleToFloat(0.9522),doubleToFloat(0.9339),doubleToFloat(0.9254),doubleToFloat(0.9339),doubleToFloat(0.9014),doubleToFloat(0.9339),doubleToFloat(0.8697),doubleToFloat(0.9832),doubleToFloat(0.9254),doubleToFloat(0.9789),doubleToFloat(0.9522),doubleToFloat(0.9339),doubleToFloat(0.9904),doubleToFloat(0.9656),doubleToFloat(0.9806),doubleToFloat(0.9857),doubleToFloat(0.8697),doubleToFloat(0.9861),doubleToFloat(0.9014),doubleToFloat(0.8846),doubleToFloat(0.9254),doubleToFloat(0.8818),doubleToFloat(0.9014),doubleToFloat(0.9023),doubleToFloat(0.9806),doubleToFloat(0.889),doubleToFloat(0.9522),doubleToFloat(0.8822),doubleToFloat(0.8697),doubleToFloat(0.1368),doubleToFloat(0.0198),doubleToFloat(0.172),doubleToFloat(0.0181),doubleToFloat(0.1989),doubleToFloat(0.0212),doubleToFloat(0.1959),doubleToFloat(0.3397),doubleToFloat(0.233),doubleToFloat(0.3209),doubleToFloat(0.1086),doubleToFloat(0.051),doubleToFloat(0.1073),doubleToFloat(0.0299),doubleToFloat(0.1066),doubleToFloat(0.0253),doubleToFloat(0.1188),doubleToFloat(0.3009),doubleToFloat(0.1607),doubleToFloat(0.3056),doubleToFloat(0.042),doubleToFloat(0.3397),doubleToFloat(0.0049),doubleToFloat(0.3208),doubleToFloat(0.0774),doubleToFloat(0.3058),doubleToFloat(0.9339),doubleToFloat(0.8425),doubleToFloat(0.9842),doubleToFloat(0.8425),doubleToFloat(0.1053),doubleToFloat(0.0075),doubleToFloat(0.8836),doubleToFloat(0.8425),doubleToFloat(0.1925),doubleToFloat(0.3379),doubleToFloat(0.0929),doubleToFloat(0.0472),doubleToFloat(0.0926),doubleToFloat(0.0413),doubleToFloat(0.0916),doubleToFloat(0.0386),doubleToFloat(0.0732),doubleToFloat(0.0453),doubleToFloat(0.0548),doubleToFloat(0.052),doubleToFloat(0.0558),doubleToFloat(0.0548),doubleToFloat(0.0593),doubleToFloat(0.0595),doubleToFloat(0.0051),doubleToFloat(0.3217),doubleToFloat(0.0786),doubleToFloat(0.3181),doubleToFloat(0.1161),doubleToFloat(0.313),doubleToFloat(0.1637),doubleToFloat(0.3136),doubleToFloat(0.8849),doubleToFloat(0.8425),doubleToFloat(0.9342),doubleToFloat(0.8425),doubleToFloat(0.9342),doubleToFloat(0.8153),doubleToFloat(0.8926),doubleToFloat(0.8153),doubleToFloat(0.9835),doubleToFloat(0.8425),doubleToFloat(0.9758),doubleToFloat(0.8153),doubleToFloat(0.1064),doubleToFloat(0.0254),doubleToFloat(0.1052),doubleToFloat(0.0081),doubleToFloat(0.09),doubleToFloat(0.0108),doubleToFloat(0.0907),doubleToFloat(0.0265),doubleToFloat(0.1052),doubleToFloat(0.0081),doubleToFloat(0.1064),doubleToFloat(0.0254),doubleToFloat(0.0907),doubleToFloat(0.0265),doubleToFloat(0.09),doubleToFloat(0.0108),doubleToFloat(0.1068),doubleToFloat(0.0747),doubleToFloat(0.1086),doubleToFloat(0.0517),doubleToFloat(0.0941),doubleToFloat(0.0542),doubleToFloat(0.0982),doubleToFloat(0.0753),doubleToFloat(0.1071),doubleToFloat(0.03),doubleToFloat(0.0934),doubleToFloat(0.041),doubleToFloat(0.1071),doubleToFloat(0.03),doubleToFloat(0.1086),doubleToFloat(0.0517),doubleToFloat(0.0941),doubleToFloat(0.0542),doubleToFloat(0.0934),doubleToFloat(0.041),doubleToFloat(0.1068),doubleToFloat(0.0747),doubleToFloat(0.0982),doubleToFloat(0.0754),doubleToFloat(0.0683),doubleToFloat(0.0723),doubleToFloat(0.0739),doubleToFloat(0.0833),doubleToFloat(0.0866),doubleToFloat(0.0821),doubleToFloat(0.097),doubleToFloat(0.0748),doubleToFloat(0.0943),doubleToFloat(0.0628)], Java.type("float[]"))))))))))))
            .addChild(new HAnimJoint("hanim_humanoid_root").setName("r_hip").setDEF("hanim_r_hip").setCenter(Java.to([doubleToFloat(-2.955),doubleToFloat(28.940001),doubleToFloat(-0.5218)], Java.type("float[]")))
              .addChild(new HAnimSegment("hanim_r_hip").setName("r_thigh").setDEF("hanim_r_thigh")
                .addChild(new Transform().setTranslation(Java.to([doubleToFloat(-2.955),doubleToFloat(28.940001),doubleToFloat(-0.5218)], Java.type("float[]")))
                  .addChild(new Shape()
                    .setAppearance(new Appearance()
                      .setMaterial(new Material().setDiffuseColor(Java.to([doubleToFloat(0.588),doubleToFloat(0.588),doubleToFloat(0.588)], Java.type("float[]"))))
                      .setTexture(new ImageTexture().setUSE("SunTextureAtlas")))
                    .setGeometry(new IndexedFaceSet().setCoordIndex(Java.to([3,2,1,-1,1,0,3,-1,0,1,5,-1,5,4,0,-1,5,7,6,-1,6,4,5,-1,7,9,8,-1,8,6,7,-1,9,11,10,-1,10,8,9,-1,12,10,11,-1,11,13,12,-1,15,14,12,-1,12,13,15,-1,3,14,15,-1,15,2,3,-1,19,18,17,-1,17,16,19,-1,18,21,20,-1,20,17,18,-1,23,22,20,-1,20,21,23,-1,25,24,22,-1,22,23,25,-1,27,26,24,-1,24,25,27,-1,28,26,27,-1,27,29,28,-1,31,30,28,-1,28,29,31,-1,30,31,19,-1,19,16,30,-1,19,32,18,-1,18,32,21,-1,21,32,23,-1,23,32,25,-1,25,32,27,-1,27,32,29,-1,29,32,31,-1,31,32,19,-1,34,33,1,-1,1,2,34,-1,33,35,5,-1,5,1,33,-1,7,5,35,-1,35,36,7,-1,9,7,36,-1,36,37,9,-1,11,9,38,-1,11,38,39,-1,39,13,11,-1,39,40,15,-1,15,13,39,-1,41,34,2,-1,2,40,41,-1,42,3,0,-1,0,43,42,-1,42,44,14,-1,14,3,42,-1,14,44,45,-1,45,12,14,-1,46,10,12,-1,12,45,46,-1,8,10,46,-1,46,47,8,-1,8,47,48,-1,48,6,8,-1,6,48,49,-1,49,4,6,-1,4,49,43,-1,43,0,4,-1,43,50,42,-1,42,50,44,-1,44,50,45,-1,45,50,46,-1,46,50,47,-1,47,50,48,-1,48,50,49,-1,49,50,43,-1,16,17,33,-1,33,34,16,-1,17,20,35,-1,35,33,17,-1,20,22,36,-1,36,35,20,-1,22,24,37,-1,37,36,22,-1,26,51,37,-1,37,24,26,-1,52,51,26,-1,26,28,52,-1,28,30,41,-1,41,52,28,-1,41,30,16,-1,16,34,41,-1,52,39,38,-1,38,51,52,-1,40,39,52,-1,52,41,40,-1,38,9,37,-1,37,51,38,-1,40,2,15,-1], Java.type("int[]"))).setCreaseAngle(1.57).setTexCoordIndex(Java.to([3,2,1,-1,1,0,3,-1,0,1,5,-1,5,4,0,-1,5,7,6,-1,6,4,5,-1,7,9,8,-1,8,6,7,-1,9,11,10,-1,10,8,9,-1,4,10,11,-1,11,12,4,-1,14,13,4,-1,4,12,14,-1,3,13,14,-1,14,2,3,-1,18,17,16,-1,16,15,18,-1,17,20,19,-1,19,16,17,-1,22,21,19,-1,19,20,22,-1,24,23,21,-1,21,22,24,-1,22,21,23,-1,23,24,22,-1,19,21,22,-1,22,20,19,-1,17,16,19,-1,19,20,17,-1,16,17,18,-1,18,15,16,-1,18,25,17,-1,17,25,20,-1,20,25,22,-1,22,25,24,-1,24,25,22,-1,22,25,20,-1,20,25,17,-1,17,25,18,-1,27,26,1,-1,1,2,27,-1,26,28,5,-1,5,1,26,-1,7,5,28,-1,28,29,7,-1,9,7,29,-1,29,30,9,-1,11,9,31,-1,11,31,32,-1,32,12,11,-1,32,33,14,-1,14,12,32,-1,34,27,2,-1,2,33,34,-1,35,3,0,-1,0,36,35,-1,35,37,13,-1,13,3,35,-1,13,37,38,-1,38,4,13,-1,39,10,4,-1,4,38,39,-1,8,10,39,-1,39,40,8,-1,8,40,41,-1,41,6,8,-1,6,41,38,-1,38,4,6,-1,4,38,36,-1,36,0,4,-1,36,42,35,-1,35,42,37,-1,37,42,38,-1,38,42,39,-1,39,42,40,-1,40,42,41,-1,41,42,38,-1,38,42,36,-1,15,16,26,-1,26,27,15,-1,16,19,28,-1,28,26,16,-1,19,21,29,-1,29,28,19,-1,21,23,30,-1,30,29,21,-1,21,43,30,-1,30,23,21,-1,28,43,21,-1,21,19,28,-1,19,16,34,-1,34,28,19,-1,34,16,15,-1,15,27,34,-1,28,32,31,-1,31,43,28,-1,33,32,28,-1,28,34,33,-1,31,9,30,-1,30,43,31,-1,33,2,14,-1], Java.type("int[]")))
                      .setCoord(new Coordinate().setPoint(Java.to([doubleToFloat(-1.812),doubleToFloat(-0.3087),doubleToFloat(1.904),doubleToFloat(-1.588),doubleToFloat(-6.489),doubleToFloat(1.624),doubleToFloat(-2.192),doubleToFloat(-5.962),doubleToFloat(0.1086),doubleToFloat(-2.457),doubleToFloat(-0.3087),doubleToFloat(0.0948),doubleToFloat(0),doubleToFloat(-0.3087),doubleToFloat(2.766),doubleToFloat(-0.0022),doubleToFloat(-6.794),doubleToFloat(2.44),doubleToFloat(1.812),doubleToFloat(-0.3087),doubleToFloat(1.904),doubleToFloat(1.696),doubleToFloat(-6.489),doubleToFloat(1.624),doubleToFloat(2.457),doubleToFloat(-0.3087),doubleToFloat(0.0948),doubleToFloat(2.3),doubleToFloat(-5.962),doubleToFloat(0.1086),doubleToFloat(1.923),doubleToFloat(-0.3087),doubleToFloat(-1.955),doubleToFloat(1.878),doubleToFloat(-5.375),doubleToFloat(-1.791),doubleToFloat(0),doubleToFloat(-0.3087),doubleToFloat(-2.766),doubleToFloat(-0.0022),doubleToFloat(-4.935),doubleToFloat(-2.745),doubleToFloat(-1.929),doubleToFloat(-0.3087),doubleToFloat(-1.955),doubleToFloat(-1.764),doubleToFloat(-5.375),doubleToFloat(-1.791),doubleToFloat(-1.824),doubleToFloat(-12.47),doubleToFloat(0.1086),doubleToFloat(-1.294),doubleToFloat(-12.47),doubleToFloat(1.546),doubleToFloat(-0.8192),doubleToFloat(-13.62),doubleToFloat(0.9456),doubleToFloat(-1.244),doubleToFloat(-13.62),doubleToFloat(0.1086),doubleToFloat(0),doubleToFloat(-12.47),doubleToFloat(2.119),doubleToFloat(0),doubleToFloat(-13.62),doubleToFloat(1.371),doubleToFloat(1.403),doubleToFloat(-12.47),doubleToFloat(1.546),doubleToFloat(0.9277),doubleToFloat(-13.62),doubleToFloat(0.9456),doubleToFloat(1.892),doubleToFloat(-12.47),doubleToFloat(0.1086),doubleToFloat(1.353),doubleToFloat(-13.62),doubleToFloat(0.1086),doubleToFloat(1.403),doubleToFloat(-12.47),doubleToFloat(-1.203),doubleToFloat(0.9277),doubleToFloat(-13.62),doubleToFloat(-1.005),doubleToFloat(0),doubleToFloat(-12.47),doubleToFloat(-1.776),doubleToFloat(0),doubleToFloat(-13.62),doubleToFloat(-1.43),doubleToFloat(-1.294),doubleToFloat(-12.47),doubleToFloat(-1.203),doubleToFloat(-0.8192),doubleToFloat(-13.62),doubleToFloat(-1.005),doubleToFloat(0),doubleToFloat(-14.58),doubleToFloat(0.1086),doubleToFloat(-1.328),doubleToFloat(-11.04),doubleToFloat(1.381),doubleToFloat(-1.898),doubleToFloat(-11.04),doubleToFloat(0.1086),doubleToFloat(-0.0033),doubleToFloat(-11.04),doubleToFloat(1.998),doubleToFloat(1.437),doubleToFloat(-11.04),doubleToFloat(1.381),doubleToFloat(2.006),doubleToFloat(-11.04),doubleToFloat(0.1086),doubleToFloat(1.674),doubleToFloat(-7.89),doubleToFloat(-1.676),doubleToFloat(-0.0028),doubleToFloat(-8.084),doubleToFloat(-2.33),doubleToFloat(-1.563),doubleToFloat(-7.89),doubleToFloat(-1.676),doubleToFloat(-1.306),doubleToFloat(-11.04),doubleToFloat(-1.289),doubleToFloat(-1.775),doubleToFloat(0.6114),doubleToFloat(0.1021),doubleToFloat(-1.355),doubleToFloat(0.6114),doubleToFloat(1.391),doubleToFloat(-1.282),doubleToFloat(0.6114),doubleToFloat(-1.341),doubleToFloat(0),doubleToFloat(0.6114),doubleToFloat(-1.85),doubleToFloat(1.282),doubleToFloat(0.6114),doubleToFloat(-1.341),doubleToFloat(1.774),doubleToFloat(0.6114),doubleToFloat(0.1021),doubleToFloat(1.354),doubleToFloat(0.6114),doubleToFloat(1.391),doubleToFloat(0),doubleToFloat(0.6114),doubleToFloat(2.036),doubleToFloat(0),doubleToFloat(1.324),doubleToFloat(0.0586),doubleToFloat(1.415),doubleToFloat(-11.04),doubleToFloat(-1.289),doubleToFloat(-0.0033),doubleToFloat(-11.04),doubleToFloat(-1.867)], Java.type("float[]"))))
                      .setTexCoord(new TextureCoordinate().setPoint(Java.to([doubleToFloat(0.918),doubleToFloat(0.5995),doubleToFloat(0.9216),doubleToFloat(0.5192),doubleToFloat(0.9118),doubleToFloat(0.5261),doubleToFloat(0.9076),doubleToFloat(0.5995),doubleToFloat(0.9471),doubleToFloat(0.5995),doubleToFloat(0.9471),doubleToFloat(0.5153),doubleToFloat(0.9763),doubleToFloat(0.5995),doubleToFloat(0.9745),doubleToFloat(0.5192),doubleToFloat(0.9867),doubleToFloat(0.5995),doubleToFloat(0.9841),doubleToFloat(0.5261),doubleToFloat(0.9751),doubleToFloat(0.5995),doubleToFloat(0.9733),doubleToFloat(0.5337),doubleToFloat(0.9471),doubleToFloat(0.5369),doubleToFloat(0.9192),doubleToFloat(0.5995),doubleToFloat(0.9227),doubleToFloat(0.5337),doubleToFloat(0.9178),doubleToFloat(0.4416),doubleToFloat(0.9263),doubleToFloat(0.4416),doubleToFloat(0.9339),doubleToFloat(0.4268),doubleToFloat(0.9271),doubleToFloat(0.4268),doubleToFloat(0.9471),doubleToFloat(0.4416),doubleToFloat(0.9471),doubleToFloat(0.4268),doubleToFloat(0.9697),doubleToFloat(0.4416),doubleToFloat(0.9621),doubleToFloat(0.4268),doubleToFloat(0.9783),doubleToFloat(0.4416),doubleToFloat(0.9689),doubleToFloat(0.4268),doubleToFloat(0.9471),doubleToFloat(0.4144),doubleToFloat(0.9258),doubleToFloat(0.4603),doubleToFloat(0.9166),doubleToFloat(0.4603),doubleToFloat(0.9471),doubleToFloat(0.4603),doubleToFloat(0.9702),doubleToFloat(0.4603),doubleToFloat(0.9794),doubleToFloat(0.4603),doubleToFloat(0.9716),doubleToFloat(0.497),doubleToFloat(0.9471),doubleToFloat(0.4986),doubleToFloat(0.9244),doubleToFloat(0.497),doubleToFloat(0.9261),doubleToFloat(0.4603),doubleToFloat(0.9186),doubleToFloat(0.6114),doubleToFloat(0.9253),doubleToFloat(0.6114),doubleToFloat(0.9265),doubleToFloat(0.6114),doubleToFloat(0.9471),doubleToFloat(0.6114),doubleToFloat(0.9678),doubleToFloat(0.6114),doubleToFloat(0.9757),doubleToFloat(0.6114),doubleToFloat(0.969),doubleToFloat(0.6114),doubleToFloat(0.9471),doubleToFloat(0.6206),doubleToFloat(0.9699),doubleToFloat(0.4603)], Java.type("float[]"))))))))
              .addChild(new HAnimJoint("hanim_r_hip").setName("r_knee").setDEF("hanim_r_knee").setCenter(Java.to([doubleToFloat(-2.948),doubleToFloat(16.459999),doubleToFloat(-0.5275)], Java.type("float[]")))
                .addChild(new HAnimSegment("hanim_r_knee").setName("r_calf").setDEF("hanim_r_calf")
                  .addChild(new Transform().setTranslation(Java.to([doubleToFloat(-2.948),doubleToFloat(16.459999),doubleToFloat(-0.5275)], Java.type("float[]")))
                    .addChild(new Shape()
                      .setAppearance(new Appearance()
                        .setMaterial(new Material().setDiffuseColor(Java.to([doubleToFloat(0.588),doubleToFloat(0.588),doubleToFloat(0.588)], Java.type("float[]"))))
                        .setTexture(new ImageTexture().setUSE("SunTextureAtlas")))
                      .setGeometry(new IndexedFaceSet().setCoordIndex(Java.to([0,2,1,-1,3,54,53,-1,53,4,3,-1,6,4,53,-1,53,55,6,-1,56,8,6,-1,6,55,56,-1,57,10,8,-1,8,56,57,-1,57,11,13,-1,13,58,57,-1,14,12,58,-1,58,59,14,-1,16,14,59,-1,59,60,16,-1,19,18,17,-1,17,20,19,-1,18,19,22,-1,22,21,18,-1,23,21,22,-1,22,24,23,-1,23,24,26,-1,26,25,23,-1,25,26,28,-1,28,27,25,-1,30,29,27,-1,27,28,30,-1,32,31,29,-1,29,30,32,-1,32,20,17,-1,17,31,32,-1,20,33,19,-1,19,33,22,-1,22,33,24,-1,24,33,26,-1,26,33,28,-1,28,33,30,-1,30,33,32,-1,32,33,20,-1,35,34,16,-1,16,3,35,-1,34,36,14,-1,14,16,34,-1,36,37,12,-1,12,14,36,-1,10,12,37,-1,37,38,10,-1,39,8,10,-1,10,38,39,-1,39,40,6,-1,6,8,39,-1,41,4,6,-1,6,40,41,-1,41,35,3,-1,3,4,41,-1,35,42,34,-1,34,42,36,-1,36,42,37,-1,37,42,38,-1,38,42,39,-1,39,42,40,-1,40,42,41,-1,41,42,35,-1,1,2,44,-1,44,43,1,-1,45,46,1,-1,1,43,45,-1,47,48,46,-1,46,45,47,-1,49,9,48,-1,48,47,49,-1,11,9,49,-1,49,50,11,-1,50,51,13,-1,13,11,50,-1,15,13,51,-1,51,52,15,-1,15,52,44,-1,44,2,15,-1,17,18,43,-1,43,44,17,-1,43,18,21,-1,21,45,43,-1,45,21,23,-1,23,47,45,-1,47,23,25,-1,25,49,47,-1,27,50,49,-1,49,25,27,-1,51,50,27,-1,27,29,51,-1,29,31,52,-1,52,51,29,-1,31,17,44,-1,44,52,31,-1,1,46,5,-1,5,0,1,-1,7,5,46,-1,46,48,7,-1,16,60,54,-1,54,3,16,-1,9,7,48,-1,5,53,54,-1,54,0,5,-1,55,53,5,-1,5,7,55,-1,9,56,55,-1,55,7,9,-1,11,57,56,-1,56,9,11,-1,10,57,58,-1,58,12,10,-1,59,58,13,-1,13,15,59,-1,60,59,15,-1,15,2,60,-1,0,54,60,-1,60,2,0,-1], Java.type("int[]"))).setCreaseAngle(1.57).setTexCoordIndex(Java.to([0,2,1,-1,3,42,41,-1,41,4,3,-1,6,4,41,-1,41,43,6,-1,44,8,6,-1,6,43,44,-1,45,6,8,-1,8,44,45,-1,45,10,11,-1,11,46,45,-1,3,4,46,-1,46,47,3,-1,13,3,47,-1,47,48,13,-1,16,15,14,-1,14,17,16,-1,15,16,19,-1,19,18,15,-1,20,18,19,-1,19,21,20,-1,20,21,23,-1,23,22,20,-1,22,23,21,-1,21,20,22,-1,19,18,20,-1,20,21,19,-1,16,15,18,-1,18,19,16,-1,16,17,14,-1,14,15,16,-1,17,24,16,-1,16,24,19,-1,19,24,21,-1,21,24,23,-1,23,24,21,-1,21,24,19,-1,19,24,16,-1,16,24,17,-1,26,25,13,-1,13,3,26,-1,25,26,3,-1,3,13,25,-1,26,27,4,-1,4,3,26,-1,6,4,27,-1,27,28,6,-1,29,8,6,-1,6,28,29,-1,29,28,6,-1,6,8,29,-1,27,4,6,-1,6,28,27,-1,27,26,3,-1,3,4,27,-1,26,30,25,-1,25,30,26,-1,26,30,27,-1,27,30,28,-1,28,30,29,-1,29,30,28,-1,28,30,27,-1,27,30,26,-1,1,2,32,-1,32,31,1,-1,33,34,1,-1,1,31,33,-1,35,36,34,-1,34,33,35,-1,37,9,36,-1,36,35,37,-1,10,9,37,-1,37,38,10,-1,38,39,11,-1,11,10,38,-1,12,11,39,-1,39,40,12,-1,12,40,32,-1,32,2,12,-1,14,15,31,-1,31,32,14,-1,31,15,18,-1,18,33,31,-1,33,18,20,-1,20,35,33,-1,35,20,22,-1,22,37,35,-1,20,38,37,-1,37,22,20,-1,39,38,20,-1,20,18,39,-1,18,15,40,-1,40,39,18,-1,15,14,32,-1,32,40,15,-1,1,34,5,-1,5,0,1,-1,7,5,34,-1,34,36,7,-1,13,48,42,-1,42,3,13,-1,9,7,36,-1,5,41,42,-1,42,0,5,-1,43,41,5,-1,5,7,43,-1,9,44,43,-1,43,7,9,-1,10,45,44,-1,44,9,10,-1,6,45,46,-1,46,4,6,-1,47,46,11,-1,11,12,47,-1,48,47,12,-1,12,2,48,-1,0,42,48,-1,48,2,0,-1], Java.type("int[]")))
                        .setCoord(new Coordinate().setPoint(Java.to([doubleToFloat(-1.375),doubleToFloat(-5.834),doubleToFloat(-1.193),doubleToFloat(-1.477),doubleToFloat(-4.137),doubleToFloat(-1.195),doubleToFloat(-1.952),doubleToFloat(-4.672),doubleToFloat(0.1143),doubleToFloat(-0.6966),doubleToFloat(-12.16),doubleToFloat(-0.8887),doubleToFloat(0.0964),doubleToFloat(-12.16),doubleToFloat(-1.304),doubleToFloat(-0.0075),doubleToFloat(-6.489),doubleToFloat(-1.984),doubleToFloat(0.9748),doubleToFloat(-12.16),doubleToFloat(-0.8887),doubleToFloat(1.329),doubleToFloat(-6.244),doubleToFloat(-1.314),doubleToFloat(1.339),doubleToFloat(-12.16),doubleToFloat(0.1054),doubleToFloat(1.761),doubleToFloat(-6.229),doubleToFloat(0.1143),doubleToFloat(0.9748),doubleToFloat(-12.16),doubleToFloat(0.9689),doubleToFloat(1.217),doubleToFloat(-6.865),doubleToFloat(1.222),doubleToFloat(0.0964),doubleToFloat(-12.16),doubleToFloat(1.384),doubleToFloat(-0.0075),doubleToFloat(-7.096),doubleToFloat(1.879),doubleToFloat(-0.6966),doubleToFloat(-12.16),doubleToFloat(0.9689),doubleToFloat(-1.312),doubleToFloat(-6.004),doubleToFloat(1.225),doubleToFloat(-1.06),doubleToFloat(-12.16),doubleToFloat(0.1054),doubleToFloat(-1.831),doubleToFloat(0.0045),doubleToFloat(0.1143),doubleToFloat(-1.301),doubleToFloat(0.0045),doubleToFloat(-1.198),doubleToFloat(-0.9277),doubleToFloat(1.148),doubleToFloat(-0.902),doubleToFloat(-1.353),doubleToFloat(1.148),doubleToFloat(0.1143),doubleToFloat(-0.0071),doubleToFloat(0.0045),doubleToFloat(-1.771),doubleToFloat(-0.0071),doubleToFloat(1.148),doubleToFloat(-1.327),doubleToFloat(1.396),doubleToFloat(0.0045),doubleToFloat(-1.198),doubleToFloat(1.02),doubleToFloat(1.148),doubleToFloat(-0.902),doubleToFloat(1.885),doubleToFloat(0.0045),doubleToFloat(0.1143),doubleToFloat(1.445),doubleToFloat(1.148),doubleToFloat(0.1143),doubleToFloat(1.396),doubleToFloat(0.0045),doubleToFloat(1.551),doubleToFloat(1.02),doubleToFloat(1.148),doubleToFloat(1.396),doubleToFloat(-0.0071),doubleToFloat(0.0045),doubleToFloat(2.125),doubleToFloat(-0.0071),doubleToFloat(1.148),doubleToFloat(1.821),doubleToFloat(-1.301),doubleToFloat(0.0045),doubleToFloat(1.551),doubleToFloat(-0.9277),doubleToFloat(1.148),doubleToFloat(1.396),doubleToFloat(-0.0071),doubleToFloat(2.106),doubleToFloat(0.1143),doubleToFloat(-0.7952),doubleToFloat(-13.2),doubleToFloat(0.1143),doubleToFloat(-0.5053),doubleToFloat(-13.2),doubleToFloat(-0.6746),doubleToFloat(-0.5053),doubleToFloat(-13.2),doubleToFloat(0.749),doubleToFloat(0.0941),doubleToFloat(-13.2),doubleToFloat(1.08),doubleToFloat(0.7943),doubleToFloat(-13.2),doubleToFloat(0.749),doubleToFloat(1.084),doubleToFloat(-13.2),doubleToFloat(0.1143),doubleToFloat(0.7943),doubleToFloat(-13.2),doubleToFloat(-0.6746),doubleToFloat(0.0941),doubleToFloat(-13.2),doubleToFloat(-1.006),doubleToFloat(0.0941),doubleToFloat(-13.94),doubleToFloat(0.1143),doubleToFloat(-1.319),doubleToFloat(-1.205),doubleToFloat(-1.195),doubleToFloat(-1.928),doubleToFloat(-1.333),doubleToFloat(0.1143),doubleToFloat(0.0092),doubleToFloat(-1.051),doubleToFloat(-1.85),doubleToFloat(-0.0075),doubleToFloat(-3.792),doubleToFloat(-2.125),doubleToFloat(1.423),doubleToFloat(-1.205),doubleToFloat(-1.195),doubleToFloat(1.386),doubleToFloat(-4.758),doubleToFloat(-1.344),doubleToFloat(1.952),doubleToFloat(-1.333),doubleToFloat(0.1143),doubleToFloat(1.391),doubleToFloat(-1.333),doubleToFloat(1.308),doubleToFloat(-0.0071),doubleToFloat(-1.333),doubleToFloat(1.881),doubleToFloat(-1.326),doubleToFloat(-1.333),doubleToFloat(1.308),doubleToFloat(0.0957),doubleToFloat(-10.22),doubleToFloat(-1.525),doubleToFloat(-0.8601),doubleToFloat(-10.22),doubleToFloat(-0.9874),doubleToFloat(1.1),doubleToFloat(-10.22),doubleToFloat(-1.026),doubleToFloat(1.478),doubleToFloat(-10.22),doubleToFloat(0.1083),doubleToFloat(1.065),doubleToFloat(-10.22),doubleToFloat(1.051),doubleToFloat(0.0957),doubleToFloat(-10.22),doubleToFloat(1.545),doubleToFloat(-0.8407),doubleToFloat(-10.22),doubleToFloat(1.052),doubleToFloat(-1.283),doubleToFloat(-10.22),doubleToFloat(0.1083)], Java.type("float[]"))))
                        .setTexCoord(new TextureCoordinate().setPoint(Java.to([doubleToFloat(0.9287),doubleToFloat(0.342),doubleToFloat(0.9261),doubleToFloat(0.3817),doubleToFloat(0.9166),doubleToFloat(0.3743),doubleToFloat(0.9312),doubleToFloat(0.2839),doubleToFloat(0.9471),doubleToFloat(0.2839),doubleToFloat(0.9471),doubleToFloat(0.3395),doubleToFloat(0.9648),doubleToFloat(0.2839),doubleToFloat(0.9653),doubleToFloat(0.3367),doubleToFloat(0.9721),doubleToFloat(0.2839),doubleToFloat(0.9756),doubleToFloat(0.3608),doubleToFloat(0.9668),doubleToFloat(0.3526),doubleToFloat(0.9471),doubleToFloat(0.3496),doubleToFloat(0.9261),doubleToFloat(0.3638),doubleToFloat(0.9239),doubleToFloat(0.2839),doubleToFloat(0.9178),doubleToFloat(0.4416),doubleToFloat(0.9263),doubleToFloat(0.4416),doubleToFloat(0.9323),doubleToFloat(0.4565),doubleToFloat(0.9255),doubleToFloat(0.4565),doubleToFloat(0.9471),doubleToFloat(0.4416),doubleToFloat(0.9471),doubleToFloat(0.4565),doubleToFloat(0.9697),doubleToFloat(0.4416),doubleToFloat(0.9637),doubleToFloat(0.4565),doubleToFloat(0.9783),doubleToFloat(0.4416),doubleToFloat(0.9705),doubleToFloat(0.4565),doubleToFloat(0.9471),doubleToFloat(0.4689),doubleToFloat(0.932),doubleToFloat(0.2704),doubleToFloat(0.937),doubleToFloat(0.2704),doubleToFloat(0.9471),doubleToFloat(0.2704),doubleToFloat(0.959),doubleToFloat(0.2704),doubleToFloat(0.964),doubleToFloat(0.2704),doubleToFloat(0.9471),doubleToFloat(0.2608),doubleToFloat(0.9261),doubleToFloat(0.428),doubleToFloat(0.9162),doubleToFloat(0.4243),doubleToFloat(0.9474),doubleToFloat(0.428),doubleToFloat(0.9471),doubleToFloat(0.3767),doubleToFloat(0.9684),doubleToFloat(0.428),doubleToFloat(0.9669),doubleToFloat(0.3711),doubleToFloat(0.9771),doubleToFloat(0.4243),doubleToFloat(0.9678),doubleToFloat(0.4243),doubleToFloat(0.9471),doubleToFloat(0.4243),doubleToFloat(0.9259),doubleToFloat(0.4243),doubleToFloat(0.9467),doubleToFloat(0.3066),doubleToFloat(0.9291),doubleToFloat(0.3066),doubleToFloat(0.9659),doubleToFloat(0.3066),doubleToFloat(0.9763),doubleToFloat(0.3066),doubleToFloat(0.967),doubleToFloat(0.3066),doubleToFloat(0.9459),doubleToFloat(0.3066),doubleToFloat(0.9267),doubleToFloat(0.3066),doubleToFloat(0.9183),doubleToFloat(0.3066)], Java.type("float[]"))))))))
                .addChild(new HAnimJoint("hanim_r_knee").setName("r_talocrural").setDEF("hanim_r_talocrural").setCenter(Java.to([doubleToFloat(-2.839),doubleToFloat(3.899),doubleToFloat(-0.4116)], Java.type("float[]")))
                  .addChild(new HAnimSegment("hanim_r_talocrural").setName("r_talus").setDEF("hanim_r_talus")
                    .addChild(new Transform().setTranslation(Java.to([doubleToFloat(-2.839),doubleToFloat(3.899),doubleToFloat(-0.4116)], Java.type("float[]")))
                      .addChild(new Shape()
                        .setAppearance(new Appearance()
                          .setMaterial(new Material().setDiffuseColor(Java.to([doubleToFloat(0.588),doubleToFloat(0.588),doubleToFloat(0.588)], Java.type("float[]"))))
                          .setTexture(new ImageTexture().setUSE("SunTextureAtlas")))
                        .setGeometry(new IndexedFaceSet().setCoordIndex(Java.to([2,1,0,-1,0,3,2,-1,3,5,4,-1,4,6,3,-1,8,7,32,-1,32,33,8,-1,7,9,31,-1,31,32,7,-1,10,3,0,-1,0,11,10,-1,3,10,12,-1,12,5,3,-1,15,14,13,-1,13,16,15,-1,1,2,7,-1,7,8,1,-1,2,6,9,-1,9,7,2,-1,9,17,30,-1,30,31,9,-1,17,9,6,-1,6,4,17,-1,3,6,2,-1,0,16,13,-1,13,11,0,-1,20,19,18,-1,18,21,20,-1,22,4,5,-1,5,19,22,-1,24,23,34,-1,34,35,24,-1,35,36,25,-1,25,24,35,-1,18,19,26,-1,26,40,18,-1,19,5,12,-1,12,26,19,-1,27,14,15,-1,15,28,27,-1,20,21,23,-1,23,24,20,-1,22,20,24,-1,24,25,22,-1,36,30,17,-1,17,25,36,-1,25,17,4,-1,4,22,25,-1,19,20,22,-1,28,18,40,-1,40,27,28,-1,30,37,32,-1,32,31,30,-1,36,35,37,-1,37,30,36,-1,32,37,29,-1,29,33,32,-1,29,37,35,-1,35,34,29,-1,14,39,38,-1,38,13,14,-1,13,38,11,-1,27,41,39,-1,39,14,27,-1,27,40,41,-1,11,42,10,-1,10,42,12,-1,12,42,26,-1,26,42,40,-1,40,42,41,-1,41,42,39,-1,39,42,38,-1,38,42,11,-1,47,46,45,-1,48,47,45,-1,44,48,45,-1,1,43,44,-1,44,0,1,-1,0,44,45,-1,45,16,0,-1,16,45,46,-1,46,15,16,-1,15,46,47,-1,47,28,15,-1,28,47,48,-1,48,18,28,-1,18,48,49,-1,49,21,18,-1,21,49,50,-1,50,23,21,-1,23,50,51,-1,51,34,23,-1,34,51,52,-1,52,29,34,-1,29,52,53,-1,53,33,29,-1,33,53,54,-1,54,8,33,-1,8,54,43,-1,43,1,8,-1,44,43,54,-1,54,50,49,-1,44,54,49,-1,48,44,49,-1,50,54,53,-1,50,53,52,-1,50,52,51,-1], Java.type("int[]"))).setCreaseAngle(1.57).setTexCoordIndex(Java.to([2,1,0,-1,0,3,2,-1,3,5,4,-1,4,6,3,-1,37,36,7,-1,7,10,37,-1,36,38,11,-1,11,7,36,-1,13,3,0,-1,0,14,13,-1,3,13,15,-1,15,5,3,-1,18,17,16,-1,16,19,18,-1,1,2,8,-1,8,9,1,-1,2,6,12,-1,12,8,2,-1,38,39,20,-1,20,11,38,-1,21,12,6,-1,6,4,21,-1,3,6,2,-1,22,19,16,-1,16,23,22,-1,2,3,0,-1,0,1,2,-1,6,4,5,-1,5,3,6,-1,36,37,10,-1,10,7,36,-1,7,11,38,-1,38,36,7,-1,0,3,13,-1,13,14,0,-1,3,5,15,-1,15,13,3,-1,24,17,18,-1,18,25,24,-1,2,1,9,-1,9,8,2,-1,6,2,8,-1,8,12,6,-1,11,20,39,-1,39,38,11,-1,12,21,4,-1,4,6,12,-1,3,2,6,-1,25,26,42,-1,42,24,25,-1,29,27,31,-1,31,30,29,-1,34,33,27,-1,27,29,34,-1,31,27,28,-1,28,32,31,-1,28,27,33,-1,33,35,28,-1,17,41,40,-1,40,16,17,-1,16,40,23,-1,24,43,41,-1,41,17,24,-1,24,42,43,-1,44,46,45,-1,45,46,47,-1,47,46,48,-1,48,46,49,-1,49,46,50,-1,50,46,51,-1,51,46,52,-1,52,46,44,-1,57,56,55,-1,58,57,55,-1,54,58,55,-1,1,53,54,-1,54,0,1,-1,22,54,55,-1,55,19,22,-1,19,55,56,-1,56,18,19,-1,18,56,57,-1,57,25,18,-1,25,57,58,-1,58,26,25,-1,0,58,53,-1,53,1,0,-1,1,53,59,-1,59,9,1,-1,64,67,66,-1,66,65,64,-1,60,73,62,-1,62,61,60,-1,61,62,75,-1,75,74,61,-1,68,71,70,-1,70,69,68,-1,9,63,53,-1,53,1,9,-1,54,53,63,-1,63,59,53,-1,54,63,53,-1,58,54,53,-1,67,70,71,-1,67,71,72,-1,67,72,66,-1], Java.type("int[]")))
                          .setCoord(new Coordinate().setPoint(Java.to([doubleToFloat(-1.486),doubleToFloat(-1.104),doubleToFloat(-0.0121),doubleToFloat(-1.788),doubleToFloat(-2.384),doubleToFloat(-0.0121),doubleToFloat(-1.576),doubleToFloat(-2.288),doubleToFloat(-1.284),doubleToFloat(-1.215),doubleToFloat(-1.048),doubleToFloat(-1.431),doubleToFloat(0),doubleToFloat(-2.222),doubleToFloat(-2.07),doubleToFloat(0),doubleToFloat(-0.9763),doubleToFloat(-1.857),doubleToFloat(-1.109),doubleToFloat(-2.246),doubleToFloat(-1.797),doubleToFloat(-1.648),doubleToFloat(-2.952),doubleToFloat(-1.227),doubleToFloat(-1.928),doubleToFloat(-3.172),doubleToFloat(-0.0121),doubleToFloat(-1.121),doubleToFloat(-2.825),doubleToFloat(-1.762),doubleToFloat(-0.9389),doubleToFloat(0.0479),doubleToFloat(-0.9468),doubleToFloat(-1.158),doubleToFloat(0.048),doubleToFloat(-0.0184),doubleToFloat(0.0037),doubleToFloat(0.0479),doubleToFloat(-1.291),doubleToFloat(-0.971),doubleToFloat(0.0076),doubleToFloat(1.129),doubleToFloat(0.0037),doubleToFloat(0.048),doubleToFloat(1.489),doubleToFloat(0.0009),doubleToFloat(-0.4231),doubleToFloat(1.851),doubleToFloat(-1.326),doubleToFloat(-0.6054),doubleToFloat(1.493),doubleToFloat(0),doubleToFloat(-2.774),doubleToFloat(-2.014),doubleToFloat(1.486),doubleToFloat(-1.104),doubleToFloat(-0.0121),doubleToFloat(1.215),doubleToFloat(-1.048),doubleToFloat(-1.431),doubleToFloat(1.576),doubleToFloat(-2.288),doubleToFloat(-1.284),doubleToFloat(1.788),doubleToFloat(-2.384),doubleToFloat(-0.0121),doubleToFloat(1.109),doubleToFloat(-2.246),doubleToFloat(-1.797),doubleToFloat(1.928),doubleToFloat(-3.172),doubleToFloat(-0.0121),doubleToFloat(1.648),doubleToFloat(-2.952),doubleToFloat(-1.227),doubleToFloat(1.121),doubleToFloat(-2.825),doubleToFloat(-1.762),doubleToFloat(1.067),doubleToFloat(0.0479),doubleToFloat(-0.9145),doubleToFloat(1.005),doubleToFloat(0.0288),doubleToFloat(1.129),doubleToFloat(1.331),doubleToFloat(-0.5981),doubleToFloat(1.498),doubleToFloat(0),doubleToFloat(-3.751),doubleToFloat(-0.0121),doubleToFloat(0),doubleToFloat(-3.556),doubleToFloat(-2.192),doubleToFloat(-1.156),doubleToFloat(-3.584),doubleToFloat(-1.941),doubleToFloat(-1.746),doubleToFloat(-3.653),doubleToFloat(-1.26),doubleToFloat(-1.935),doubleToFloat(-3.751),doubleToFloat(-0.0121),doubleToFloat(1.934),doubleToFloat(-3.751),doubleToFloat(-0.0121),doubleToFloat(1.746),doubleToFloat(-3.653),doubleToFloat(-1.26),doubleToFloat(1.156),doubleToFloat(-3.584),doubleToFloat(-1.941),doubleToFloat(0),doubleToFloat(-3.657),doubleToFloat(-1.26),doubleToFloat(-0.8317),doubleToFloat(0.4142),doubleToFloat(0.8386),doubleToFloat(0.0037),doubleToFloat(0.5073),doubleToFloat(1.277),doubleToFloat(1.225),doubleToFloat(0.048),doubleToFloat(-0.0184),doubleToFloat(0.9272),doubleToFloat(0.4142),doubleToFloat(0.8135),doubleToFloat(0.0359),doubleToFloat(0.4987),doubleToFloat(-0.0174),doubleToFloat(-1.181),doubleToFloat(-2.385),doubleToFloat(0.7578),doubleToFloat(-0.8758),doubleToFloat(-1.458),doubleToFloat(0.7625),doubleToFloat(-0.7742),doubleToFloat(-0.9835),doubleToFloat(1.664),doubleToFloat(0.0035),doubleToFloat(-0.9186),doubleToFloat(1.971),doubleToFloat(0.7785),doubleToFloat(-0.9788),doubleToFloat(1.669),doubleToFloat(0.8761),doubleToFloat(-1.457),doubleToFloat(0.7637),doubleToFloat(1.182),doubleToFloat(-2.385),doubleToFloat(0.7583),doubleToFloat(1.307),doubleToFloat(-3.08),doubleToFloat(0.7871),doubleToFloat(1.305),doubleToFloat(-3.419),doubleToFloat(1.057),doubleToFloat(0.0004),doubleToFloat(-3.419),doubleToFloat(1.057),doubleToFloat(-1.304),doubleToFloat(-3.419),doubleToFloat(1.056),doubleToFloat(-1.306),doubleToFloat(-3.08),doubleToFloat(0.7865)], Java.type("float[]"))))
                          .setTexCoord(new TextureCoordinate().setPoint(Java.to([doubleToFloat(0.1096),doubleToFloat(0.0871),doubleToFloat(0.1086),doubleToFloat(0.051),doubleToFloat(0.0724),doubleToFloat(0.0571),doubleToFloat(0.0703),doubleToFloat(0.093),doubleToFloat(0.0235),doubleToFloat(0.075),doubleToFloat(0.0389),doubleToFloat(0.1112),doubleToFloat(0.0537),doubleToFloat(0.0629),doubleToFloat(0.0688),doubleToFloat(0.0153),doubleToFloat(0.0719),doubleToFloat(0.0393),doubleToFloat(0.1073),doubleToFloat(0.0299),doubleToFloat(0.1053),doubleToFloat(0.0075),doubleToFloat(0.0438),doubleToFloat(0.0235),doubleToFloat(0.0507),doubleToFloat(0.0468),doubleToFloat(0.0827),doubleToFloat(0.1223),doubleToFloat(0.1079),doubleToFloat(0.1195),doubleToFloat(0.0638),doubleToFloat(0.1406),doubleToFloat(0.148),doubleToFloat(0.3335),doubleToFloat(0.1191),doubleToFloat(0.3241),doubleToFloat(0.1188),doubleToFloat(0.3009),doubleToFloat(0.1607),doubleToFloat(0.3056),doubleToFloat(0.0125),doubleToFloat(0.0361),doubleToFloat(0.0195),doubleToFloat(0.0586),doubleToFloat(0.1959),doubleToFloat(0.3397),doubleToFloat(0.1665),doubleToFloat(0.356),doubleToFloat(0.0896),doubleToFloat(0.3325),doubleToFloat(0.0774),doubleToFloat(0.3058),doubleToFloat(0.042),doubleToFloat(0.3397),doubleToFloat(0.9339),doubleToFloat(0.8099),doubleToFloat(0.9339),doubleToFloat(0.8425),doubleToFloat(0.9339),doubleToFloat(0.7851),doubleToFloat(0.9639),doubleToFloat(0.7918),doubleToFloat(0.9793),doubleToFloat(0.8097),doubleToFloat(0.9842),doubleToFloat(0.8425),doubleToFloat(0.8885),doubleToFloat(0.8098),doubleToFloat(0.9038),doubleToFloat(0.7913),doubleToFloat(0.8836),doubleToFloat(0.8425),doubleToFloat(0.0713),doubleToFloat(0.0347),doubleToFloat(0.1066),doubleToFloat(0.0253),doubleToFloat(0.05),doubleToFloat(0.0422),doubleToFloat(0.0189),doubleToFloat(0.054),doubleToFloat(0.142),doubleToFloat(0.3577),doubleToFloat(0.1187),doubleToFloat(0.3518),doubleToFloat(0.0703),doubleToFloat(0.3561),doubleToFloat(0.0946),doubleToFloat(0.3567),doubleToFloat(0.1006),doubleToFloat(0.1294),doubleToFloat(0.0944),doubleToFloat(0.1279),doubleToFloat(0.1006),doubleToFloat(0.121),doubleToFloat(0.0918),doubleToFloat(0.1217),doubleToFloat(0.0937),doubleToFloat(0.1145),doubleToFloat(0.0996),doubleToFloat(0.1127),doubleToFloat(0.1056),doubleToFloat(0.1147),doubleToFloat(0.1091),doubleToFloat(0.1206),doubleToFloat(0.1065),doubleToFloat(0.1264),doubleToFloat(0.1086),doubleToFloat(0.051),doubleToFloat(0.1096),doubleToFloat(0.0871),doubleToFloat(0.1607),doubleToFloat(0.3056),doubleToFloat(0.1188),doubleToFloat(0.3009),doubleToFloat(0.0774),doubleToFloat(0.3058),doubleToFloat(0.042),doubleToFloat(0.3397),doubleToFloat(0.1073),doubleToFloat(0.0299),doubleToFloat(0.8837),doubleToFloat(0.8428),doubleToFloat(0.9341),doubleToFloat(0.8428),doubleToFloat(0.9341),doubleToFloat(0.8649),doubleToFloat(0.1066),doubleToFloat(0.0253),doubleToFloat(0.1067),doubleToFloat(0.025),doubleToFloat(0.1052),doubleToFloat(0.0076),doubleToFloat(0.1262),doubleToFloat(0.0158),doubleToFloat(0.122),doubleToFloat(0.0264),doubleToFloat(0.1052),doubleToFloat(0.0076),doubleToFloat(0.1067),doubleToFloat(0.025),doubleToFloat(0.122),doubleToFloat(0.0264),doubleToFloat(0.1262),doubleToFloat(0.0158),doubleToFloat(0.1262),doubleToFloat(0.0158),doubleToFloat(0.9001),doubleToFloat(0.8648),doubleToFloat(0.9844),doubleToFloat(0.8428),doubleToFloat(0.968),doubleToFloat(0.8649)], Java.type("float[]"))))))))
                  .addChild(new HAnimJoint("hanim_r_talocrural").setName("r_metatarsophalangeal_2").setDEF("hanim_r_metatarsophalangeal_2").setCenter(Java.to([doubleToFloat(-2.839),doubleToFloat(3.312),doubleToFloat(1.078)], Java.type("float[]")))
                    .addChild(new HAnimSegment("hanim_r_metatarsophalangeal_2").setName("r_tarsal_proximal_phalanx_2").setDEF("hanim_r_tarsal_proximal_phalanx_2")
                      .addChild(new Transform().setTranslation(Java.to([doubleToFloat(-2.839),doubleToFloat(3.312),doubleToFloat(1.078)], Java.type("float[]")))
                        .addChild(new Shape()
                          .setAppearance(new Appearance()
                            .setMaterial(new Material().setDiffuseColor(Java.to([doubleToFloat(0.588),doubleToFloat(0.588),doubleToFloat(0.588)], Java.type("float[]"))))
                            .setTexture(new ImageTexture().setUSE("SunTextureAtlas")))
                          .setGeometry(new IndexedFaceSet().setCoordIndex(Java.to([1,0,3,-1,3,2,1,-1,6,5,4,-1,4,7,6,-1,8,4,3,-1,3,9,8,-1,10,34,35,-1,35,11,10,-1,34,10,12,-1,12,33,34,-1,0,1,49,-1,49,50,0,-1,15,14,13,-1,13,16,15,-1,37,32,16,-1,16,13,37,-1,10,11,6,-1,6,7,10,-1,8,12,10,-1,10,7,8,-1,14,50,46,-1,46,47,14,-1,14,47,48,-1,48,13,14,-1,13,48,56,-1,56,37,13,-1,14,15,0,-1,0,50,14,-1,16,32,43,-1,43,17,16,-1,12,8,9,-1,9,17,12,-1,4,8,7,-1,1,2,19,-1,19,18,1,-1,20,5,6,-1,6,21,20,-1,23,22,18,-1,18,19,23,-1,40,24,11,-1,11,35,40,-1,24,40,38,-1,38,25,24,-1,49,1,18,-1,18,54,49,-1,27,22,26,-1,26,28,27,-1,39,41,28,-1,28,26,39,-1,6,11,24,-1,24,21,6,-1,21,24,25,-1,25,29,21,-1,51,54,27,-1,27,52,51,-1,52,27,28,-1,28,53,52,-1,57,53,28,-1,28,41,57,-1,27,54,18,-1,18,22,27,-1,26,30,44,-1,44,39,26,-1,22,23,30,-1,30,26,22,-1,20,21,29,-1,2,3,4,-1,4,5,2,-1,9,3,0,-1,0,15,9,-1,17,43,33,-1,33,12,17,-1,17,9,15,-1,15,16,17,-1,20,19,2,-1,2,5,20,-1,29,23,19,-1,19,20,29,-1,38,44,30,-1,30,25,38,-1,25,30,23,-1,23,29,25,-1,45,42,33,-1,33,43,45,-1,31,32,37,-1,37,36,31,-1,37,56,55,-1,55,36,37,-1,31,39,44,-1,44,45,31,-1,36,41,39,-1,39,31,36,-1,57,41,36,-1,36,55,57,-1,34,33,42,-1,42,35,34,-1,42,38,40,-1,40,35,42,-1,31,45,43,-1,43,32,31,-1,45,44,38,-1,38,42,45,-1,59,58,69,-1,69,68,67,-1,67,66,65,-1,69,67,65,-1,64,63,62,-1,65,64,62,-1,69,65,62,-1,59,69,62,-1,59,62,61,-1,59,61,60,-1,46,58,59,-1,59,47,46,-1,47,59,60,-1,60,48,47,-1,48,60,61,-1,61,56,48,-1,56,61,62,-1,62,55,56,-1,55,62,63,-1,63,57,55,-1,57,63,64,-1,64,53,57,-1,53,64,65,-1,65,52,53,-1,52,65,66,-1,66,51,52,-1,51,66,67,-1,67,54,51,-1,54,67,68,-1,68,49,54,-1,49,68,69,-1,69,50,49,-1,50,69,58,-1,58,46,50,-1], Java.type("int[]"))).setCreaseAngle(1.57).setTexCoordIndex(Java.to([1,0,3,-1,3,2,1,-1,6,5,4,-1,4,7,6,-1,8,4,3,-1,3,9,8,-1,25,11,10,-1,10,37,25,-1,11,25,38,-1,38,15,11,-1,0,1,64,-1,64,65,0,-1,18,17,16,-1,16,19,18,-1,21,20,57,-1,57,56,21,-1,12,13,22,-1,22,23,12,-1,24,14,12,-1,12,23,24,-1,26,65,59,-1,59,60,26,-1,17,61,62,-1,62,16,17,-1,56,63,71,-1,71,21,56,-1,26,27,0,-1,0,65,26,-1,57,20,29,-1,29,58,57,-1,14,24,30,-1,30,28,14,-1,4,8,7,-1,1,2,32,-1,32,31,1,-1,33,5,6,-1,6,34,33,-1,36,35,31,-1,31,32,36,-1,11,25,37,-1,37,10,11,-1,25,11,15,-1,15,38,25,-1,64,1,31,-1,31,68,64,-1,17,18,19,-1,19,16,17,-1,20,21,56,-1,56,57,20,-1,22,13,12,-1,12,23,22,-1,23,12,14,-1,14,24,23,-1,66,68,39,-1,39,67,66,-1,61,17,16,-1,16,62,61,-1,71,63,56,-1,56,21,71,-1,39,68,31,-1,31,35,39,-1,57,58,29,-1,29,20,57,-1,18,30,28,-1,28,19,18,-1,33,34,40,-1,2,3,4,-1,4,5,2,-1,9,3,0,-1,0,27,9,-1,58,29,15,-1,15,38,58,-1,28,30,18,-1,18,19,28,-1,33,32,2,-1,2,5,33,-1,40,36,32,-1,32,33,40,-1,15,29,58,-1,58,38,15,-1,14,28,30,-1,30,24,14,-1,42,41,46,-1,46,45,42,-1,43,50,49,-1,49,44,43,-1,49,70,69,-1,69,44,49,-1,43,52,51,-1,51,42,43,-1,44,55,52,-1,52,43,44,-1,72,55,44,-1,44,69,72,-1,48,46,41,-1,41,47,48,-1,41,54,53,-1,53,47,41,-1,43,42,45,-1,45,50,43,-1,42,51,54,-1,54,41,42,-1,74,115,114,-1,114,113,112,-1,112,111,80,-1,114,112,80,-1,79,78,77,-1,80,79,77,-1,114,80,77,-1,74,114,77,-1,74,77,76,-1,74,76,75,-1,99,102,101,-1,101,100,99,-1,100,101,104,-1,104,103,100,-1,91,94,93,-1,93,92,91,-1,85,88,87,-1,87,86,85,-1,86,87,90,-1,90,89,86,-1,95,98,97,-1,97,96,95,-1,105,108,107,-1,107,106,105,-1,106,107,110,-1,110,109,106,-1,66,81,82,-1,82,68,66,-1,68,82,83,-1,83,64,68,-1,64,83,84,-1,84,65,64,-1,65,84,73,-1,73,59,65,-1], Java.type("int[]")))
                            .setCoord(new Coordinate().setPoint(Java.to([doubleToFloat(-1.388),doubleToFloat(-0.7441),doubleToFloat(0.9353),doubleToFloat(0),doubleToFloat(-0.5418),doubleToFloat(1.142),doubleToFloat(0),doubleToFloat(-1.042),doubleToFloat(2.002),doubleToFloat(-1.356),doubleToFloat(-1.234),doubleToFloat(1.823),doubleToFloat(-1.286),doubleToFloat(-1.394),doubleToFloat(3.004),doubleToFloat(0),doubleToFloat(-1.212),doubleToFloat(3.154),doubleToFloat(0),doubleToFloat(-1.708),doubleToFloat(3.962),doubleToFloat(-1.162),doubleToFloat(-1.8),doubleToFloat(3.64),doubleToFloat(-1.65),doubleToFloat(-1.868),doubleToFloat(2.671),doubleToFloat(-1.806),doubleToFloat(-1.859),doubleToFloat(1.688),doubleToFloat(-1.217),doubleToFloat(-2.657),doubleToFloat(3.79),doubleToFloat(0),doubleToFloat(-2.605),doubleToFloat(4.159),doubleToFloat(-1.729),doubleToFloat(-2.767),doubleToFloat(2.676),doubleToFloat(-1.984),doubleToFloat(-2.747),doubleToFloat(-0.4534),doubleToFloat(-1.847),doubleToFloat(-1.879),doubleToFloat(-0.4111),doubleToFloat(-1.91),doubleToFloat(-1.914),doubleToFloat(0.8074),doubleToFloat(-2.006),doubleToFloat(-2.83),doubleToFloat(0.7644),doubleToFloat(-1.895),doubleToFloat(-2.791),doubleToFloat(1.697),doubleToFloat(1.388),doubleToFloat(-0.7441),doubleToFloat(0.9353),doubleToFloat(1.356),doubleToFloat(-1.234),doubleToFloat(1.823),doubleToFloat(1.286),doubleToFloat(-1.394),doubleToFloat(3.004),doubleToFloat(1.162),doubleToFloat(-1.8),doubleToFloat(3.64),doubleToFloat(1.91),doubleToFloat(-1.914),doubleToFloat(0.8074),doubleToFloat(1.806),doubleToFloat(-1.859),doubleToFloat(1.688),doubleToFloat(1.217),doubleToFloat(-2.657),doubleToFloat(3.79),doubleToFloat(1.729),doubleToFloat(-2.767),doubleToFloat(2.676),doubleToFloat(2.006),doubleToFloat(-2.83),doubleToFloat(0.7644),doubleToFloat(1.847),doubleToFloat(-1.879),doubleToFloat(-0.4111),doubleToFloat(1.984),doubleToFloat(-2.747),doubleToFloat(-0.4534),doubleToFloat(1.65),doubleToFloat(-1.868),doubleToFloat(2.671),doubleToFloat(1.895),doubleToFloat(-2.791),doubleToFloat(1.697),doubleToFloat(0),doubleToFloat(-3.18),doubleToFloat(0.7644),doubleToFloat(-2.006),doubleToFloat(-3.18),doubleToFloat(0.7644),doubleToFloat(-1.729),doubleToFloat(-3.137),doubleToFloat(2.71),doubleToFloat(-1.217),doubleToFloat(-3.069),doubleToFloat(3.793),doubleToFloat(0),doubleToFloat(-2.997),doubleToFloat(4.162),doubleToFloat(0),doubleToFloat(-3.18),doubleToFloat(-0.4554),doubleToFloat(-1.99),doubleToFloat(-3.18),doubleToFloat(-0.4554),doubleToFloat(1.729),doubleToFloat(-3.137),doubleToFloat(2.71),doubleToFloat(2.006),doubleToFloat(-3.18),doubleToFloat(0.7644),doubleToFloat(1.217),doubleToFloat(-3.069),doubleToFloat(3.793),doubleToFloat(1.99),doubleToFloat(-3.18),doubleToFloat(-0.4554),doubleToFloat(0),doubleToFloat(-3.141),doubleToFloat(2.71),doubleToFloat(-1.895),doubleToFloat(-3.164),doubleToFloat(1.686),doubleToFloat(1.895),doubleToFloat(-3.164),doubleToFloat(1.686),doubleToFloat(0),doubleToFloat(-3.164),doubleToFloat(1.686),doubleToFloat(-1.486),doubleToFloat(-0.5175),doubleToFloat(-1.502),doubleToFloat(-1.788),doubleToFloat(-1.797),doubleToFloat(-1.502),doubleToFloat(-1.928),doubleToFloat(-2.585),doubleToFloat(-1.502),doubleToFloat(0.0009),doubleToFloat(0.1637),doubleToFloat(0.361),doubleToFloat(-1.326),doubleToFloat(-0.0186),doubleToFloat(0.0033),doubleToFloat(1.486),doubleToFloat(-0.5175),doubleToFloat(-1.502),doubleToFloat(1.788),doubleToFloat(-1.797),doubleToFloat(-1.502),doubleToFloat(1.928),doubleToFloat(-2.585),doubleToFloat(-1.502),doubleToFloat(1.331),doubleToFloat(-0.0112),doubleToFloat(0.0089),doubleToFloat(0),doubleToFloat(-3.164),doubleToFloat(-1.502),doubleToFloat(-1.935),doubleToFloat(-3.164),doubleToFloat(-1.502),doubleToFloat(1.934),doubleToFloat(-3.164),doubleToFloat(-1.502),doubleToFloat(-1.153),doubleToFloat(-0.3082),doubleToFloat(-2.015),doubleToFloat(-1.192),doubleToFloat(-1.388),doubleToFloat(-2.379),doubleToFloat(-1.307),doubleToFloat(-1.876),doubleToFloat(-2.363),doubleToFloat(-1.307),doubleToFloat(-2.129),doubleToFloat(-2.356),doubleToFloat(-0.0004),doubleToFloat(-2.129),doubleToFloat(-2.356),doubleToFloat(1.306),doubleToFloat(-2.129),doubleToFloat(-2.356),doubleToFloat(1.306),doubleToFloat(-1.876),doubleToFloat(-2.362),doubleToFloat(1.191),doubleToFloat(-1.388),doubleToFloat(-2.378),doubleToFloat(1.152),doubleToFloat(-0.3071),doubleToFloat(-2.014),doubleToFloat(1.027),doubleToFloat(0.2573),doubleToFloat(-1.173),doubleToFloat(0.0025),doubleToFloat(0.3479),doubleToFloat(-0.8576),doubleToFloat(-1.023),doubleToFloat(0.2519),doubleToFloat(-1.179)], Java.type("float[]"))))
                            .setTexCoord(new TextureCoordinate().setPoint(Java.to([doubleToFloat(0.1645),doubleToFloat(0.2682),doubleToFloat(0.119),doubleToFloat(0.2656),doubleToFloat(0.119),doubleToFloat(0.2333),doubleToFloat(0.1642),doubleToFloat(0.2355),doubleToFloat(0.1585),doubleToFloat(0.1986),doubleToFloat(0.119),doubleToFloat(0.1964),doubleToFloat(0.119),doubleToFloat(0.1664),doubleToFloat(0.1572),doubleToFloat(0.175),doubleToFloat(0.1786),doubleToFloat(0.2029),doubleToFloat(0.1893),doubleToFloat(0.2321),doubleToFloat(0.2954),doubleToFloat(0.0497),doubleToFloat(0.2633),doubleToFloat(0.0308),doubleToFloat(0.2607),doubleToFloat(0.0443),doubleToFloat(0.2924),doubleToFloat(0.0621),doubleToFloat(0.2275),doubleToFloat(0.0325),doubleToFloat(0.2299),doubleToFloat(0.0183),doubleToFloat(0.1375),doubleToFloat(0.0244),doubleToFloat(0.1392),doubleToFloat(0.0478),doubleToFloat(0.1726),doubleToFloat(0.0473),doubleToFloat(0.1726),doubleToFloat(0.0227),doubleToFloat(0.1726),doubleToFloat(0.0066),doubleToFloat(0.1366),doubleToFloat(0.0058),doubleToFloat(0.2807),doubleToFloat(0.084),doubleToFloat(0.2512),doubleToFloat(0.067),doubleToFloat(0.2227),doubleToFloat(0.0576),doubleToFloat(0.2601),doubleToFloat(0.0398),doubleToFloat(0.2197),doubleToFloat(0.2888),doubleToFloat(0.2029),doubleToFloat(0.2547),doubleToFloat(0.1996),doubleToFloat(0.0258),doubleToFloat(0.2),doubleToFloat(0.0107),doubleToFloat(0.1962),doubleToFloat(0.0514),doubleToFloat(0.0735),doubleToFloat(0.2682),doubleToFloat(0.0739),doubleToFloat(0.2355),doubleToFloat(0.0796),doubleToFloat(0.1986),doubleToFloat(0.0809),doubleToFloat(0.175),doubleToFloat(0.0352),doubleToFloat(0.2547),doubleToFloat(0.0488),doubleToFloat(0.232),doubleToFloat(0.2918),doubleToFloat(0.0575),doubleToFloat(0.2269),doubleToFloat(0.0279),doubleToFloat(0.0183),doubleToFloat(0.2887),doubleToFloat(0.0595),doubleToFloat(0.2029),doubleToFloat(0.9339),doubleToFloat(0.9522),doubleToFloat(0.9339),doubleToFloat(0.9254),doubleToFloat(0.9339),doubleToFloat(0.9014),doubleToFloat(0.9339),doubleToFloat(0.8697),doubleToFloat(0.9832),doubleToFloat(0.9254),doubleToFloat(0.9789),doubleToFloat(0.9522),doubleToFloat(0.9339),doubleToFloat(0.9904),doubleToFloat(0.9656),doubleToFloat(0.9806),doubleToFloat(0.9857),doubleToFloat(0.8697),doubleToFloat(0.9861),doubleToFloat(0.9014),doubleToFloat(0.8846),doubleToFloat(0.9254),doubleToFloat(0.8818),doubleToFloat(0.9014),doubleToFloat(0.9023),doubleToFloat(0.9806),doubleToFloat(0.889),doubleToFloat(0.9522),doubleToFloat(0.8822),doubleToFloat(0.8697),doubleToFloat(0.1368),doubleToFloat(0.0198),doubleToFloat(0.172),doubleToFloat(0.0181),doubleToFloat(0.1989),doubleToFloat(0.0212),doubleToFloat(0.1959),doubleToFloat(0.3397),doubleToFloat(0.233),doubleToFloat(0.3209),doubleToFloat(0.1086),doubleToFloat(0.051),doubleToFloat(0.1073),doubleToFloat(0.0299),doubleToFloat(0.1066),doubleToFloat(0.0253),doubleToFloat(0.1188),doubleToFloat(0.3009),doubleToFloat(0.1607),doubleToFloat(0.3056),doubleToFloat(0.042),doubleToFloat(0.3397),doubleToFloat(0.0049),doubleToFloat(0.3208),doubleToFloat(0.0774),doubleToFloat(0.3058),doubleToFloat(0.9339),doubleToFloat(0.8425),doubleToFloat(0.9842),doubleToFloat(0.8425),doubleToFloat(0.1053),doubleToFloat(0.0075),doubleToFloat(0.8836),doubleToFloat(0.8425),doubleToFloat(0.1925),doubleToFloat(0.3379),doubleToFloat(0.0929),doubleToFloat(0.0472),doubleToFloat(0.0926),doubleToFloat(0.0413),doubleToFloat(0.0916),doubleToFloat(0.0386),doubleToFloat(0.0732),doubleToFloat(0.0453),doubleToFloat(0.0548),doubleToFloat(0.052),doubleToFloat(0.0558),doubleToFloat(0.0548),doubleToFloat(0.0593),doubleToFloat(0.0595),doubleToFloat(0.0051),doubleToFloat(0.3217),doubleToFloat(0.0786),doubleToFloat(0.3181),doubleToFloat(0.1161),doubleToFloat(0.313),doubleToFloat(0.1637),doubleToFloat(0.3136),doubleToFloat(0.8849),doubleToFloat(0.8425),doubleToFloat(0.9342),doubleToFloat(0.8425),doubleToFloat(0.9342),doubleToFloat(0.8153),doubleToFloat(0.8926),doubleToFloat(0.8153),doubleToFloat(0.9835),doubleToFloat(0.8425),doubleToFloat(0.9758),doubleToFloat(0.8153),doubleToFloat(0.1064),doubleToFloat(0.0254),doubleToFloat(0.1052),doubleToFloat(0.0081),doubleToFloat(0.09),doubleToFloat(0.0108),doubleToFloat(0.0907),doubleToFloat(0.0265),doubleToFloat(0.1052),doubleToFloat(0.0081),doubleToFloat(0.1064),doubleToFloat(0.0254),doubleToFloat(0.0907),doubleToFloat(0.0265),doubleToFloat(0.09),doubleToFloat(0.0108),doubleToFloat(0.1068),doubleToFloat(0.0747),doubleToFloat(0.1086),doubleToFloat(0.0517),doubleToFloat(0.0941),doubleToFloat(0.0542),doubleToFloat(0.0982),doubleToFloat(0.0753),doubleToFloat(0.1071),doubleToFloat(0.03),doubleToFloat(0.0934),doubleToFloat(0.041),doubleToFloat(0.1071),doubleToFloat(0.03),doubleToFloat(0.1086),doubleToFloat(0.0517),doubleToFloat(0.0941),doubleToFloat(0.0542),doubleToFloat(0.0934),doubleToFloat(0.041),doubleToFloat(0.1068),doubleToFloat(0.0747),doubleToFloat(0.0982),doubleToFloat(0.0754),doubleToFloat(0.0683),doubleToFloat(0.0723),doubleToFloat(0.0739),doubleToFloat(0.0833),doubleToFloat(0.0866),doubleToFloat(0.0821),doubleToFloat(0.097),doubleToFloat(0.0748),doubleToFloat(0.0943),doubleToFloat(0.0628)], Java.type("float[]"))))))))))))
            .addChild(new HAnimJoint("hanim_humanoid_root").setName("sacroiliac").setDEF("hanim_sacroiliac").setCenter(Java.to([doubleToFloat(0),doubleToFloat(29.860001),doubleToFloat(-0.4567)], Java.type("float[]")))
              .addChild(new HAnimSegment("hanim_sacroiliac").setName("pelvis").setDEF("hanim_pelvis")
                .addChild(new Transform().setTranslation(Java.to([doubleToFloat(0),doubleToFloat(29.860001),doubleToFloat(-0.4567)], Java.type("float[]")))
                  .addChild(new Shape()
                    .setAppearance(new Appearance()
                      .setMaterial(new Material().setDiffuseColor(Java.to([doubleToFloat(0.588),doubleToFloat(0.588),doubleToFloat(0.588)], Java.type("float[]"))))
                      .setTexture(new ImageTexture().setUSE("SunTextureAtlas")))
                    .setGeometry(new IndexedFaceSet().setCoordIndex(Java.to([2,76,0,-1,0,1,2,-1,77,81,3,-1,3,0,77,-1,3,82,74,-1,74,4,3,-1,83,5,4,-1,4,75,83,-1,111,6,78,-1,78,80,111,-1,70,64,63,-1,63,66,70,-1,87,63,65,-1,65,61,87,-1,65,7,67,-1,67,85,65,-1,16,15,80,-1,80,62,16,-1,64,10,9,-1,9,63,64,-1,9,11,65,-1,65,63,9,-1,65,11,12,-1,12,7,65,-1,8,7,12,-1,12,13,8,-1,15,16,14,-1,14,132,15,-1,10,18,17,-1,17,9,10,-1,9,17,19,-1,19,11,9,-1,19,20,12,-1,12,11,19,-1,13,12,20,-1,20,21,13,-1,132,14,22,-1,22,23,132,-1,5,84,79,-1,79,6,5,-1,16,8,13,-1,13,14,16,-1,14,13,21,-1,21,22,14,-1,24,21,20,-1,68,8,16,-1,16,86,68,-1,88,7,8,-1,8,89,88,-1,29,27,30,-1,30,28,29,-1,25,53,31,-1,31,32,25,-1,25,32,33,-1,33,55,25,-1,26,54,34,-1,34,35,26,-1,27,55,36,-1,36,30,27,-1,37,53,26,-1,26,35,37,-1,39,41,54,-1,54,38,39,-1,39,40,41,-1,54,41,40,-1,40,34,54,-1,165,43,42,-1,42,164,165,-1,165,168,43,-1,90,44,53,-1,53,37,90,-1,53,44,45,-1,45,31,53,-1,46,48,55,-1,55,33,46,-1,46,47,48,-1,55,48,47,-1,47,36,55,-1,175,1,176,-1,176,1,0,-1,0,3,176,-1,176,3,4,-1,6,176,5,-1,176,6,111,-1,1,175,73,-1,73,69,1,-1,178,49,10,-1,10,64,178,-1,49,50,18,-1,18,10,49,-1,24,18,50,-1,24,17,18,-1,24,19,17,-1,24,20,19,-1,24,22,21,-1,23,22,24,-1,4,5,176,-1,54,164,42,-1,42,38,54,-1,51,52,29,-1,29,28,51,-1,52,51,180,-1,164,54,93,-1,93,182,164,-1,53,25,91,-1,91,95,53,-1,25,55,96,-1,96,91,25,-1,26,92,93,-1,93,54,26,-1,27,94,96,-1,96,55,27,-1,53,95,92,-1,92,26,53,-1,27,29,188,-1,188,94,27,-1,178,64,71,-1,71,73,178,-1,45,44,90,-1,72,73,182,-1,182,93,72,-1,56,59,95,-1,95,91,56,-1,60,56,91,-1,91,96,60,-1,57,72,93,-1,93,92,57,-1,94,58,60,-1,60,96,94,-1,95,59,57,-1,57,92,95,-1,80,58,94,-1,94,188,80,-1,99,98,97,-1,97,100,99,-1,102,97,101,-1,101,103,102,-1,101,105,104,-1,104,106,101,-1,108,107,105,-1,105,109,108,-1,111,80,110,-1,110,112,111,-1,115,114,113,-1,113,116,115,-1,119,118,117,-1,117,113,119,-1,117,121,120,-1,120,122,117,-1,123,124,80,-1,80,15,123,-1,116,113,125,-1,125,126,116,-1,125,113,117,-1,117,127,125,-1,117,122,128,-1,128,127,117,-1,130,129,128,-1,128,122,130,-1,15,132,131,-1,131,123,15,-1,126,125,133,-1,133,134,126,-1,125,127,135,-1,135,133,125,-1,135,127,128,-1,128,136,135,-1,129,137,136,-1,136,128,129,-1,132,23,138,-1,138,131,132,-1,109,112,139,-1,139,140,109,-1,123,131,129,-1,129,130,123,-1,131,138,137,-1,137,129,131,-1,24,136,137,-1,141,142,123,-1,123,130,141,-1,144,143,130,-1,130,122,144,-1,29,145,147,-1,147,146,29,-1,150,149,148,-1,148,151,150,-1,150,153,152,-1,152,149,150,-1,156,155,154,-1,154,157,156,-1,146,147,158,-1,158,153,146,-1,159,155,156,-1,156,151,159,-1,161,160,157,-1,157,162,161,-1,161,162,163,-1,157,154,163,-1,163,162,157,-1,165,164,167,-1,167,166,165,-1,165,166,168,-1,169,159,151,-1,151,170,169,-1,151,148,171,-1,171,170,151,-1,172,152,153,-1,153,173,172,-1,172,173,174,-1,153,158,174,-1,174,173,153,-1,175,176,98,-1,176,97,98,-1,97,176,101,-1,176,105,101,-1,112,109,176,-1,176,111,112,-1,98,177,73,-1,73,175,98,-1,178,116,126,-1,126,49,178,-1,49,126,134,-1,134,50,49,-1,24,50,134,-1,24,134,133,-1,24,133,135,-1,24,135,136,-1,24,137,138,-1,23,24,138,-1,105,176,109,-1,157,160,167,-1,167,164,157,-1,179,145,29,-1,29,52,179,-1,52,180,179,-1,164,182,181,-1,181,157,164,-1,151,184,183,-1,183,150,151,-1,150,183,185,-1,185,153,150,-1,156,157,181,-1,181,186,156,-1,146,153,185,-1,185,187,146,-1,151,156,186,-1,186,184,151,-1,146,187,188,-1,188,29,146,-1,178,73,189,-1,189,116,178,-1,171,169,170,-1,190,181,182,-1,182,73,190,-1,191,183,184,-1,184,192,191,-1,193,185,183,-1,183,191,193,-1,194,186,181,-1,181,190,194,-1,187,185,193,-1,193,195,187,-1,184,186,194,-1,194,192,184,-1,80,188,187,-1,187,195,80,-1], Java.type("int[]"))).setCreaseAngle(1.57).setTexCoordIndex(Java.to([2,3,0,-1,0,1,2,-1,5,6,4,-1,4,0,5,-1,4,65,7,-1,7,8,4,-1,67,92,8,-1,8,66,67,-1,99,100,94,-1,94,97,99,-1,11,12,9,-1,9,10,11,-1,15,9,13,-1,13,14,15,-1,13,18,16,-1,16,17,13,-1,19,20,21,-1,21,22,19,-1,12,24,23,-1,23,9,12,-1,23,25,13,-1,13,9,23,-1,13,25,26,-1,26,18,13,-1,28,18,26,-1,26,27,28,-1,20,19,29,-1,29,30,20,-1,24,51,31,-1,31,23,24,-1,23,31,68,-1,68,25,23,-1,68,69,26,-1,26,25,68,-1,27,26,69,-1,69,70,27,-1,30,29,71,-1,71,82,30,-1,92,103,102,-1,102,100,92,-1,19,28,27,-1,27,29,19,-1,29,27,70,-1,70,71,29,-1,83,70,69,-1,84,28,19,-1,19,85,84,-1,87,18,28,-1,28,86,87,-1,33,34,35,-1,35,32,33,-1,38,39,36,-1,36,37,38,-1,38,37,40,-1,40,41,38,-1,44,45,42,-1,42,43,44,-1,34,41,46,-1,46,35,34,-1,47,39,44,-1,44,43,47,-1,49,50,45,-1,45,48,49,-1,49,52,50,-1,45,50,52,-1,52,42,45,-1,54,55,56,-1,56,53,54,-1,54,57,55,-1,58,59,39,-1,39,47,58,-1,39,59,60,-1,60,36,39,-1,61,62,41,-1,41,40,61,-1,61,63,62,-1,41,62,63,-1,63,46,41,-1,105,1,106,-1,106,1,0,-1,0,4,106,-1,106,4,8,-1,100,106,92,-1,106,100,99,-1,1,105,107,-1,107,108,1,-1,88,89,24,-1,24,12,88,-1,89,90,51,-1,51,24,89,-1,83,51,90,-1,83,31,51,-1,83,68,31,-1,83,69,68,-1,83,71,70,-1,82,71,83,-1,8,92,106,-1,45,53,56,-1,56,48,45,-1,64,72,33,-1,33,32,64,-1,72,64,73,-1,53,45,74,-1,74,75,53,-1,39,38,76,-1,76,77,39,-1,38,41,78,-1,78,76,38,-1,44,79,74,-1,74,45,44,-1,34,80,78,-1,78,41,34,-1,39,77,79,-1,79,44,39,-1,34,33,81,-1,81,80,34,-1,88,12,91,-1,91,93,88,-1,60,59,58,-1,95,96,75,-1,75,74,95,-1,98,101,77,-1,77,76,98,-1,104,98,76,-1,76,78,104,-1,109,95,74,-1,74,79,109,-1,80,110,104,-1,104,78,80,-1,77,101,109,-1,109,79,77,-1,111,110,80,-1,80,81,111,-1,114,113,112,-1,112,115,114,-1,117,112,116,-1,116,118,117,-1,116,120,119,-1,119,121,116,-1,123,122,120,-1,120,124,123,-1,127,126,125,-1,125,128,127,-1,131,130,129,-1,129,132,131,-1,135,134,133,-1,133,129,135,-1,133,137,136,-1,136,138,133,-1,139,142,141,-1,141,140,139,-1,132,129,143,-1,143,144,132,-1,143,129,133,-1,133,145,143,-1,133,138,146,-1,146,145,133,-1,148,147,146,-1,146,138,148,-1,140,150,149,-1,149,139,140,-1,144,143,151,-1,151,152,144,-1,143,145,153,-1,153,151,143,-1,153,145,146,-1,146,154,153,-1,147,155,154,-1,154,146,147,-1,150,157,156,-1,156,149,150,-1,124,128,158,-1,158,159,124,-1,139,149,147,-1,147,148,139,-1,149,156,155,-1,155,147,149,-1,160,154,155,-1,161,162,139,-1,139,148,161,-1,164,163,148,-1,148,138,164,-1,166,165,168,-1,168,167,166,-1,171,170,169,-1,169,172,171,-1,171,174,173,-1,173,170,171,-1,177,176,175,-1,175,178,177,-1,167,168,179,-1,179,174,167,-1,180,176,177,-1,177,172,180,-1,182,181,178,-1,178,183,182,-1,182,183,184,-1,178,175,184,-1,184,183,178,-1,186,185,188,-1,188,187,186,-1,186,187,189,-1,190,180,172,-1,172,191,190,-1,172,169,192,-1,192,191,172,-1,193,173,174,-1,174,194,193,-1,193,194,195,-1,174,179,195,-1,195,194,174,-1,196,197,113,-1,197,112,113,-1,112,197,116,-1,197,120,116,-1,128,124,197,-1,197,127,128,-1,113,199,198,-1,198,196,113,-1,200,132,144,-1,144,201,200,-1,201,144,152,-1,152,202,201,-1,160,202,152,-1,160,152,151,-1,160,151,153,-1,160,153,154,-1,160,155,156,-1,157,160,156,-1,120,197,124,-1,178,181,188,-1,188,185,178,-1,203,165,166,-1,166,204,203,-1,204,205,203,-1,185,207,206,-1,206,178,185,-1,172,209,208,-1,208,171,172,-1,171,208,210,-1,210,174,171,-1,177,178,206,-1,206,211,177,-1,167,174,210,-1,210,212,167,-1,172,177,211,-1,211,209,172,-1,167,212,213,-1,213,166,167,-1,200,215,214,-1,214,132,200,-1,192,190,191,-1,216,206,207,-1,207,217,216,-1,218,208,209,-1,209,219,218,-1,220,210,208,-1,208,218,220,-1,221,211,206,-1,206,216,221,-1,212,210,220,-1,220,222,212,-1,209,211,221,-1,221,219,209,-1,223,213,212,-1,212,222,223,-1], Java.type("int[]")))
                      .setCoord(new Coordinate().setPoint(Java.to([doubleToFloat(2.809),doubleToFloat(4.795),doubleToFloat(1.187),doubleToFloat(1.622),doubleToFloat(4.795),doubleToFloat(1.867),doubleToFloat(2.542),doubleToFloat(3.868),doubleToFloat(2.992),doubleToFloat(3.243),doubleToFloat(4.795),doubleToFloat(0.2585),doubleToFloat(2.809),doubleToFloat(4.795),doubleToFloat(-1.068),doubleToFloat(1.956),doubleToFloat(4.795),doubleToFloat(-1.823),doubleToFloat(0.6627),doubleToFloat(4.795),doubleToFloat(-1.971),doubleToFloat(5.129),doubleToFloat(1.401),doubleToFloat(-1.997),doubleToFloat(3.059),doubleToFloat(1.334),doubleToFloat(-3.368),doubleToFloat(4.865),doubleToFloat(-0.7763),doubleToFloat(1.867),doubleToFloat(2.809),doubleToFloat(-0.7763),doubleToFloat(3.044),doubleToFloat(5.618),doubleToFloat(-0.7763),doubleToFloat(0.0117),doubleToFloat(4.865),doubleToFloat(-0.7763),doubleToFloat(-1.748),doubleToFloat(3.031),doubleToFloat(-0.7763),doubleToFloat(-3.265),doubleToFloat(0.9023),doubleToFloat(-0.7763),doubleToFloat(-3.592),doubleToFloat(0),doubleToFloat(1.067),doubleToFloat(-3.814),doubleToFloat(1.074),doubleToFloat(1.216),doubleToFloat(-3.846),doubleToFloat(2.809),doubleToFloat(-2.16),doubleToFloat(1.187),doubleToFloat(1.622),doubleToFloat(-2.16),doubleToFloat(1.867),doubleToFloat(3.243),doubleToFloat(-2.16),doubleToFloat(0.0117),doubleToFloat(2.809),doubleToFloat(-2.16),doubleToFloat(-1.068),doubleToFloat(1.657),doubleToFloat(-2.16),doubleToFloat(-1.823),doubleToFloat(0.6627),doubleToFloat(-2.16),doubleToFloat(-1.971),doubleToFloat(0),doubleToFloat(-2.16),doubleToFloat(-1.997),doubleToFloat(0),doubleToFloat(-2.646),doubleToFloat(0.0112),doubleToFloat(5.26),doubleToFloat(2.063),doubleToFloat(-2.223),doubleToFloat(5.348),doubleToFloat(2.12),doubleToFloat(1.949),doubleToFloat(1.063),doubleToFloat(2.006),doubleToFloat(-3.996),doubleToFloat(0.265),doubleToFloat(-5.379),doubleToFloat(-5.735),doubleToFloat(0),doubleToFloat(1.955),doubleToFloat(-4.049),doubleToFloat(1.067),doubleToFloat(-5.379),doubleToFloat(-5.675),doubleToFloat(7.509),doubleToFloat(-5.379),doubleToFloat(-0.4661),doubleToFloat(6.619),doubleToFloat(-5.379),doubleToFloat(-2.935),doubleToFloat(4.603),doubleToFloat(-5.379),doubleToFloat(-4.823),doubleToFloat(4.266),doubleToFloat(-5.379),doubleToFloat(4.645),doubleToFloat(6.848),doubleToFloat(-5.379),doubleToFloat(2.67),doubleToFloat(4.085),doubleToFloat(-5.379),doubleToFloat(-5.147),doubleToFloat(7.509),doubleToFloat(-5.379),doubleToFloat(0.3354),doubleToFloat(3.943),doubleToFloat(-5.379),doubleToFloat(4.88),doubleToFloat(3.602),doubleToFloat(-5.379),doubleToFloat(4.612),doubleToFloat(4.27),doubleToFloat(-5.379),doubleToFloat(4.271),doubleToFloat(2.819),doubleToFloat(2.088),doubleToFloat(3.472),doubleToFloat(0.2192),doubleToFloat(-5.379),doubleToFloat(5.735),doubleToFloat(0.532),doubleToFloat(-5.379),doubleToFloat(5.286),doubleToFloat(5.794),doubleToFloat(2.123),doubleToFloat(-0.0077),doubleToFloat(7.166),doubleToFloat(-5.379),doubleToFloat(-0.6053),doubleToFloat(4.48),doubleToFloat(-5.379),doubleToFloat(-4.434),doubleToFloat(3.734),doubleToFloat(-5.379),doubleToFloat(-4.846),doubleToFloat(3.147),doubleToFloat(2.002),doubleToFloat(-3.514),doubleToFloat(0),doubleToFloat(-0.7763),doubleToFloat(3.475),doubleToFloat(0),doubleToFloat(-2.16),doubleToFloat(2.115),doubleToFloat(0.3689),doubleToFloat(-5.379),doubleToFloat(-5.299),doubleToFloat(0),doubleToFloat(1.952),doubleToFloat(-3.81),doubleToFloat(5.958),doubleToFloat(2.123),doubleToFloat(-0.0223),doubleToFloat(2.914),doubleToFloat(2.088),doubleToFloat(3.624),doubleToFloat(3.262),doubleToFloat(2.031),doubleToFloat(-3.66),doubleToFloat(4.857),doubleToFloat(3.825),doubleToFloat(-1.724),doubleToFloat(4.956),doubleToFloat(3.944),doubleToFloat(1.566),doubleToFloat(1.007),doubleToFloat(3.735),doubleToFloat(-3.465),doubleToFloat(5.514),doubleToFloat(3.944),doubleToFloat(-0.0133),doubleToFloat(3.005),doubleToFloat(3.779),doubleToFloat(-3.246),doubleToFloat(5.514),doubleToFloat(3.944),doubleToFloat(-0.0133),doubleToFloat(1.007),doubleToFloat(3.735),doubleToFloat(-3.465),doubleToFloat(5.129),doubleToFloat(1.401),doubleToFloat(2.116),doubleToFloat(3.044),doubleToFloat(1.166),doubleToFloat(3.475),doubleToFloat(5.729),doubleToFloat(1.401),doubleToFloat(0.0117),doubleToFloat(4.956),doubleToFloat(3.944),doubleToFloat(1.566),doubleToFloat(4.857),doubleToFloat(3.825),doubleToFloat(-1.724),doubleToFloat(3.005),doubleToFloat(3.779),doubleToFloat(-3.246),doubleToFloat(2.542),doubleToFloat(3.868),doubleToFloat(2.992),doubleToFloat(2.542),doubleToFloat(3.868),doubleToFloat(2.992),doubleToFloat(2.542),doubleToFloat(3.868),doubleToFloat(2.992),doubleToFloat(2.542),doubleToFloat(3.868),doubleToFloat(2.992),doubleToFloat(0),doubleToFloat(3.878),doubleToFloat(3.489),doubleToFloat(4.857),doubleToFloat(3.825),doubleToFloat(-1.724),doubleToFloat(4.857),doubleToFloat(3.825),doubleToFloat(-1.724),doubleToFloat(4.956),doubleToFloat(3.944),doubleToFloat(1.566),doubleToFloat(4.956),doubleToFloat(3.944),doubleToFloat(1.566),doubleToFloat(1.007),doubleToFloat(3.735),doubleToFloat(-3.465),doubleToFloat(1.007),doubleToFloat(3.735),doubleToFloat(-3.465),doubleToFloat(0),doubleToFloat(3.718),doubleToFloat(-3.5),doubleToFloat(5.514),doubleToFloat(3.944),doubleToFloat(-0.0133),doubleToFloat(5.514),doubleToFloat(3.944),doubleToFloat(-0.0133),doubleToFloat(3.005),doubleToFloat(3.779),doubleToFloat(-3.246),doubleToFloat(3.005),doubleToFloat(3.779),doubleToFloat(-3.246),doubleToFloat(5.514),doubleToFloat(3.944),doubleToFloat(-0.0133),doubleToFloat(1.007),doubleToFloat(3.735),doubleToFloat(-3.465),doubleToFloat(4.956),doubleToFloat(3.944),doubleToFloat(1.566),doubleToFloat(4.857),doubleToFloat(3.825),doubleToFloat(-1.724),doubleToFloat(3.005),doubleToFloat(3.779),doubleToFloat(-3.246),doubleToFloat(7.166),doubleToFloat(-5.379),doubleToFloat(0.4723),doubleToFloat(5.19),doubleToFloat(2.367),doubleToFloat(-2.137),doubleToFloat(5.276),doubleToFloat(2.454),doubleToFloat(1.878),doubleToFloat(2.848),doubleToFloat(2.4),doubleToFloat(3.513),doubleToFloat(1.054),doubleToFloat(2.293),doubleToFloat(-3.908),doubleToFloat(5.877),doubleToFloat(2.456),doubleToFloat(-0.0206),doubleToFloat(3.218),doubleToFloat(2.328),doubleToFloat(-3.59),doubleToFloat(-2.809),doubleToFloat(4.795),doubleToFloat(1.187),doubleToFloat(-1.622),doubleToFloat(4.795),doubleToFloat(1.867),doubleToFloat(-2.542),doubleToFloat(3.868),doubleToFloat(2.992),doubleToFloat(-4.956),doubleToFloat(3.944),doubleToFloat(1.566),doubleToFloat(-3.243),doubleToFloat(4.795),doubleToFloat(0.2585),doubleToFloat(-4.956),doubleToFloat(3.944),doubleToFloat(1.566),doubleToFloat(-5.514),doubleToFloat(3.944),doubleToFloat(-0.0133),doubleToFloat(-4.857),doubleToFloat(3.825),doubleToFloat(-1.724),doubleToFloat(-2.809),doubleToFloat(4.795),doubleToFloat(-1.068),doubleToFloat(-5.514),doubleToFloat(3.944),doubleToFloat(-0.0133),doubleToFloat(-4.857),doubleToFloat(3.825),doubleToFloat(-1.724),doubleToFloat(-3.005),doubleToFloat(3.779),doubleToFloat(-3.246),doubleToFloat(-1.956),doubleToFloat(4.795),doubleToFloat(-1.823),doubleToFloat(-1.007),doubleToFloat(3.735),doubleToFloat(-3.465),doubleToFloat(0),doubleToFloat(4.795),doubleToFloat(-1.997),doubleToFloat(-0.6627),doubleToFloat(4.795),doubleToFloat(-1.971),doubleToFloat(-5.129),doubleToFloat(1.401),doubleToFloat(2.116),doubleToFloat(-4.956),doubleToFloat(3.944),doubleToFloat(1.566),doubleToFloat(-2.542),doubleToFloat(3.868),doubleToFloat(2.992),doubleToFloat(-3.044),doubleToFloat(1.166),doubleToFloat(3.475),doubleToFloat(-5.729),doubleToFloat(1.401),doubleToFloat(0.0117),doubleToFloat(-5.514),doubleToFloat(3.944),doubleToFloat(-0.0133),doubleToFloat(-4.956),doubleToFloat(3.944),doubleToFloat(1.566),doubleToFloat(-4.857),doubleToFloat(3.825),doubleToFloat(-1.724),doubleToFloat(-5.514),doubleToFloat(3.944),doubleToFloat(-0.0133),doubleToFloat(-5.129),doubleToFloat(1.401),doubleToFloat(-1.997),doubleToFloat(-1.074),doubleToFloat(1.216),doubleToFloat(-3.846),doubleToFloat(-1.007),doubleToFloat(3.735),doubleToFloat(-3.465),doubleToFloat(-4.865),doubleToFloat(-0.7763),doubleToFloat(1.867),doubleToFloat(-2.809),doubleToFloat(-0.7763),doubleToFloat(3.044),doubleToFloat(-5.618),doubleToFloat(-0.7763),doubleToFloat(0.0117),doubleToFloat(-4.865),doubleToFloat(-0.7763),doubleToFloat(-1.748),doubleToFloat(-3.031),doubleToFloat(-0.7763),doubleToFloat(-3.265),doubleToFloat(-3.059),doubleToFloat(1.334),doubleToFloat(-3.368),doubleToFloat(-0.9023),doubleToFloat(-0.7763),doubleToFloat(-3.592),doubleToFloat(0),doubleToFloat(-0.7763),doubleToFloat(-3.568),doubleToFloat(-2.809),doubleToFloat(-2.16),doubleToFloat(1.187),doubleToFloat(-1.622),doubleToFloat(-2.16),doubleToFloat(1.867),doubleToFloat(-3.243),doubleToFloat(-2.16),doubleToFloat(0.0117),doubleToFloat(-2.809),doubleToFloat(-2.16),doubleToFloat(-1.068),doubleToFloat(-1.657),doubleToFloat(-2.16),doubleToFloat(-1.823),doubleToFloat(-0.6627),doubleToFloat(-2.16),doubleToFloat(-1.971),doubleToFloat(-1.007),doubleToFloat(3.735),doubleToFloat(-3.465),doubleToFloat(-3.005),doubleToFloat(3.779),doubleToFloat(-3.246),doubleToFloat(-3.005),doubleToFloat(3.779),doubleToFloat(-3.246),doubleToFloat(-1.007),doubleToFloat(3.735),doubleToFloat(-3.465),doubleToFloat(-3.005),doubleToFloat(3.779),doubleToFloat(-3.246),doubleToFloat(-4.857),doubleToFloat(3.825),doubleToFloat(-1.724),doubleToFloat(-0.265),doubleToFloat(-5.379),doubleToFloat(-5.735),doubleToFloat(-1.063),doubleToFloat(2.006),doubleToFloat(-3.996),doubleToFloat(-1.067),doubleToFloat(-5.379),doubleToFloat(-5.675),doubleToFloat(-7.509),doubleToFloat(-5.379),doubleToFloat(-0.4661),doubleToFloat(-6.619),doubleToFloat(-5.379),doubleToFloat(-2.935),doubleToFloat(-5.26),doubleToFloat(2.063),doubleToFloat(-2.223),doubleToFloat(-5.958),doubleToFloat(2.123),doubleToFloat(-0.0223),doubleToFloat(-4.603),doubleToFloat(-5.379),doubleToFloat(-4.823),doubleToFloat(-3.262),doubleToFloat(2.031),doubleToFloat(-3.66),doubleToFloat(-4.266),doubleToFloat(-5.379),doubleToFloat(4.645),doubleToFloat(-6.848),doubleToFloat(-5.379),doubleToFloat(2.67),doubleToFloat(-5.348),doubleToFloat(2.12),doubleToFloat(1.949),doubleToFloat(-2.914),doubleToFloat(2.088),doubleToFloat(3.624),doubleToFloat(-4.085),doubleToFloat(-5.379),doubleToFloat(-5.147),doubleToFloat(-7.509),doubleToFloat(-5.379),doubleToFloat(0.3354),doubleToFloat(-3.943),doubleToFloat(-5.379),doubleToFloat(4.88),doubleToFloat(-3.602),doubleToFloat(-5.379),doubleToFloat(4.612),doubleToFloat(-2.819),doubleToFloat(2.088),doubleToFloat(3.472),doubleToFloat(-4.27),doubleToFloat(-5.379),doubleToFloat(4.271),doubleToFloat(0),doubleToFloat(2.089),doubleToFloat(4.08),doubleToFloat(0),doubleToFloat(2.045),doubleToFloat(3.843),doubleToFloat(-0.532),doubleToFloat(-5.379),doubleToFloat(5.286),doubleToFloat(-0.2192),doubleToFloat(-5.379),doubleToFloat(5.735),doubleToFloat(0),doubleToFloat(-5.379),doubleToFloat(5.286),doubleToFloat(-7.166),doubleToFloat(-5.379),doubleToFloat(0.4723),doubleToFloat(-5.794),doubleToFloat(2.123),doubleToFloat(-0.0077),doubleToFloat(-7.166),doubleToFloat(-5.379),doubleToFloat(-0.6053),doubleToFloat(-4.48),doubleToFloat(-5.379),doubleToFloat(-4.434),doubleToFloat(-3.147),doubleToFloat(2.002),doubleToFloat(-3.514),doubleToFloat(-3.734),doubleToFloat(-5.379),doubleToFloat(-4.846),doubleToFloat(0),doubleToFloat(4.795),doubleToFloat(2.115),doubleToFloat(0),doubleToFloat(5.379),doubleToFloat(0.2579),doubleToFloat(-2.542),doubleToFloat(3.868),doubleToFloat(2.992),doubleToFloat(0),doubleToFloat(1.017),doubleToFloat(3.972),doubleToFloat(-0.3689),doubleToFloat(-5.379),doubleToFloat(-5.299),doubleToFloat(0),doubleToFloat(-5.379),doubleToFloat(-5.299),doubleToFloat(-2.848),doubleToFloat(2.4),doubleToFloat(3.513),doubleToFloat(0),doubleToFloat(2.406),doubleToFloat(3.975),doubleToFloat(-5.19),doubleToFloat(2.367),doubleToFloat(-2.137),doubleToFloat(-5.877),doubleToFloat(2.456),doubleToFloat(-0.0206),doubleToFloat(-3.218),doubleToFloat(2.328),doubleToFloat(-3.59),doubleToFloat(-5.276),doubleToFloat(2.454),doubleToFloat(1.878),doubleToFloat(-1.054),doubleToFloat(2.293),doubleToFloat(-3.908),doubleToFloat(0),doubleToFloat(2.259),doubleToFloat(-3.954),doubleToFloat(-2.542),doubleToFloat(3.868),doubleToFloat(2.992),doubleToFloat(-2.542),doubleToFloat(3.868),doubleToFloat(2.992),doubleToFloat(-4.857),doubleToFloat(3.825),doubleToFloat(-1.724),doubleToFloat(-5.514),doubleToFloat(3.944),doubleToFloat(-0.0133),doubleToFloat(-3.005),doubleToFloat(3.779),doubleToFloat(-3.246),doubleToFloat(-4.956),doubleToFloat(3.944),doubleToFloat(1.566),doubleToFloat(-1.007),doubleToFloat(3.735),doubleToFloat(-3.465)], Java.type("float[]"))))
                      .setTexCoord(new TextureCoordinate().setPoint(Java.to([doubleToFloat(0.7918),doubleToFloat(0.3915),doubleToFloat(0.7861),doubleToFloat(0.4125),doubleToFloat(0.761),doubleToFloat(0.4016),doubleToFloat(0.7739),doubleToFloat(0.359),doubleToFloat(0.8043),doubleToFloat(0.381),doubleToFloat(0.7754),doubleToFloat(0.3582),doubleToFloat(0.7971),doubleToFloat(0.3429),doubleToFloat(0.8277),doubleToFloat(0.3444),doubleToFloat(0.8264),doubleToFloat(0.3818),doubleToFloat(0.9221),doubleToFloat(0.6798),doubleToFloat(0.9068),doubleToFloat(0.6634),doubleToFloat(0.9278),doubleToFloat(0.6477),doubleToFloat(0.942),doubleToFloat(0.668),doubleToFloat(0.9118),doubleToFloat(0.6975),doubleToFloat(0.892),doubleToFloat(0.6876),doubleToFloat(0.8997),doubleToFloat(0.6728),doubleToFloat(0.8888),doubleToFloat(0.7144),doubleToFloat(0.8893),doubleToFloat(0.6963),doubleToFloat(0.9102),doubleToFloat(0.7174),doubleToFloat(0.9318),doubleToFloat(0.7543),doubleToFloat(0.9405),doubleToFloat(0.7608),doubleToFloat(0.9219),doubleToFloat(0.7764),doubleToFloat(0.9155),doubleToFloat(0.7699),doubleToFloat(0.9352),doubleToFloat(0.6914),doubleToFloat(0.9514),doubleToFloat(0.6827),doubleToFloat(0.9275),doubleToFloat(0.7025),doubleToFloat(0.9278),doubleToFloat(0.7154),doubleToFloat(0.9353),doubleToFloat(0.7322),doubleToFloat(0.9192),doubleToFloat(0.7392),doubleToFloat(0.9477),doubleToFloat(0.7447),doubleToFloat(0.9543),doubleToFloat(0.7492),doubleToFloat(0.9534),doubleToFloat(0.7016),doubleToFloat(0.9689),doubleToFloat(0.0153),doubleToFloat(0.9719),doubleToFloat(0.1999),doubleToFloat(0.9458),doubleToFloat(0.2011),doubleToFloat(0.9492),doubleToFloat(0.0154),doubleToFloat(0.7092),doubleToFloat(0.067),doubleToFloat(0.769),doubleToFloat(0.0435),doubleToFloat(0.8323),doubleToFloat(0.2185),doubleToFloat(0.7803),doubleToFloat(0.2416),doubleToFloat(0.8338),doubleToFloat(0.0247),doubleToFloat(0.8909),doubleToFloat(0.203),doubleToFloat(0.5653),doubleToFloat(0.1778),doubleToFloat(0.6229),doubleToFloat(0.123),doubleToFloat(0.7389),doubleToFloat(0.2712),doubleToFloat(0.6865),doubleToFloat(0.3216),doubleToFloat(0.8742),doubleToFloat(0.017),doubleToFloat(0.671),doubleToFloat(0.0882),doubleToFloat(0.5395),doubleToFloat(0.2048),doubleToFloat(0.5476),doubleToFloat(0.1983),doubleToFloat(0.6869),doubleToFloat(0.3219),doubleToFloat(0.9633),doubleToFloat(0.697),doubleToFloat(0.5594),doubleToFloat(0.1844),doubleToFloat(0.6471),doubleToFloat(0.3824),doubleToFloat(0.6446),doubleToFloat(0.3872),doubleToFloat(0.483),doubleToFloat(0.2951),doubleToFloat(0.4882),doubleToFloat(0.283),doubleToFloat(0.4773),doubleToFloat(0.3069),doubleToFloat(0.6789),doubleToFloat(0.0845),doubleToFloat(0.7806),doubleToFloat(0.2419),doubleToFloat(0.7018),doubleToFloat(0.0717),doubleToFloat(0.8434),doubleToFloat(0.0238),doubleToFloat(0.8908),doubleToFloat(0.2029),doubleToFloat(0.8637),doubleToFloat(0.0204),doubleToFloat(0.9797),doubleToFloat(0.0173),doubleToFloat(0.7986),doubleToFloat(0.3427),doubleToFloat(0.8292),doubleToFloat(0.3445),doubleToFloat(0.861),doubleToFloat(0.3654),doubleToFloat(0.9486),doubleToFloat(0.7096),doubleToFloat(0.9495),doubleToFloat(0.7179),doubleToFloat(0.956),doubleToFloat(0.7264),doubleToFloat(0.9627),doubleToFloat(0.7307),doubleToFloat(0.9776),doubleToFloat(0.2011),doubleToFloat(0.9887),doubleToFloat(0.0179),doubleToFloat(0.6928),doubleToFloat(0.3274),doubleToFloat(0.6537),doubleToFloat(0.3865),doubleToFloat(0.8339),doubleToFloat(0.2256),doubleToFloat(0.7846),doubleToFloat(0.2494),doubleToFloat(0.8923),doubleToFloat(0.2111),doubleToFloat(0.7444),doubleToFloat(0.2773),doubleToFloat(0.946),doubleToFloat(0.2082),doubleToFloat(0.9719),doubleToFloat(0.2073),doubleToFloat(0.9675),doubleToFloat(0.7332),doubleToFloat(0.9757),doubleToFloat(0.7147),doubleToFloat(0.9016),doubleToFloat(0.7514),doubleToFloat(0.9124),doubleToFloat(0.7668),doubleToFloat(0.8987),doubleToFloat(0.7466),doubleToFloat(0.8902),doubleToFloat(0.7255),doubleToFloat(0.9681),doubleToFloat(0.6588),doubleToFloat(0.974),doubleToFloat(0.6751),doubleToFloat(0.9769),doubleToFloat(0.6939),doubleToFloat(0.9357),doubleToFloat(0.6444),doubleToFloat(0.8417),doubleToFloat(0.3914),doubleToFloat(0.9575),doubleToFloat(0.6354),doubleToFloat(0.8761),doubleToFloat(0.3962),doubleToFloat(0.7215),doubleToFloat(0.3537),doubleToFloat(0.6862),doubleToFloat(0.4061),doubleToFloat(0.8816),doubleToFloat(0.4112),doubleToFloat(0.8425),doubleToFloat(0.2623),doubleToFloat(0.8536),doubleToFloat(0.4202),doubleToFloat(0.8501),doubleToFloat(0.4103),doubleToFloat(0.8029),doubleToFloat(0.2824),doubleToFloat(0.8759),doubleToFloat(0.3959),doubleToFloat(0.8628),doubleToFloat(0.3668),doubleToFloat(0.8988),doubleToFloat(0.2477),doubleToFloat(0.7883),doubleToFloat(0.4384),doubleToFloat(0.8184),doubleToFloat(0.4313),doubleToFloat(0.7627),doubleToFloat(0.4439),doubleToFloat(0.7605),doubleToFloat(0.4029),doubleToFloat(0.7697),doubleToFloat(0.3055),doubleToFloat(0.9474),doubleToFloat(0.2452),doubleToFloat(0.972),doubleToFloat(0.2446),doubleToFloat(0.7918),doubleToFloat(0.3915),doubleToFloat(0.7861),doubleToFloat(0.4125),doubleToFloat(0.761),doubleToFloat(0.4016),doubleToFloat(0.7739),doubleToFloat(0.359),doubleToFloat(0.8043),doubleToFloat(0.381),doubleToFloat(0.7754),doubleToFloat(0.3582),doubleToFloat(0.7971),doubleToFloat(0.3429),doubleToFloat(0.8277),doubleToFloat(0.3444),doubleToFloat(0.8264),doubleToFloat(0.3818),doubleToFloat(0.7986),doubleToFloat(0.3427),doubleToFloat(0.8292),doubleToFloat(0.3445),doubleToFloat(0.861),doubleToFloat(0.3654),doubleToFloat(0.8417),doubleToFloat(0.3914),doubleToFloat(0.8761),doubleToFloat(0.3962),doubleToFloat(0.8816),doubleToFloat(0.4112),doubleToFloat(0.8536),doubleToFloat(0.4202),doubleToFloat(0.8501),doubleToFloat(0.4103),doubleToFloat(0.9221),doubleToFloat(0.6798),doubleToFloat(0.9068),doubleToFloat(0.6634),doubleToFloat(0.9278),doubleToFloat(0.6477),doubleToFloat(0.942),doubleToFloat(0.668),doubleToFloat(0.9118),doubleToFloat(0.6975),doubleToFloat(0.892),doubleToFloat(0.6876),doubleToFloat(0.8997),doubleToFloat(0.6728),doubleToFloat(0.8888),doubleToFloat(0.7144),doubleToFloat(0.8893),doubleToFloat(0.6963),doubleToFloat(0.9102),doubleToFloat(0.7174),doubleToFloat(0.9318),doubleToFloat(0.7543),doubleToFloat(0.9405),doubleToFloat(0.7608),doubleToFloat(0.9219),doubleToFloat(0.7764),doubleToFloat(0.9155),doubleToFloat(0.7699),doubleToFloat(0.9352),doubleToFloat(0.6914),doubleToFloat(0.9514),doubleToFloat(0.6827),doubleToFloat(0.9275),doubleToFloat(0.7025),doubleToFloat(0.9278),doubleToFloat(0.7154),doubleToFloat(0.9353),doubleToFloat(0.7322),doubleToFloat(0.9192),doubleToFloat(0.7392),doubleToFloat(0.9477),doubleToFloat(0.7447),doubleToFloat(0.9543),doubleToFloat(0.7492),doubleToFloat(0.9534),doubleToFloat(0.7016),doubleToFloat(0.9633),doubleToFloat(0.697),doubleToFloat(0.9486),doubleToFloat(0.7096),doubleToFloat(0.9495),doubleToFloat(0.7179),doubleToFloat(0.956),doubleToFloat(0.7264),doubleToFloat(0.9627),doubleToFloat(0.7307),doubleToFloat(0.9675),doubleToFloat(0.7332),doubleToFloat(0.8759),doubleToFloat(0.3959),doubleToFloat(0.8628),doubleToFloat(0.3668),doubleToFloat(0.9757),doubleToFloat(0.7147),doubleToFloat(0.9016),doubleToFloat(0.7514),doubleToFloat(0.9124),doubleToFloat(0.7668),doubleToFloat(0.8987),doubleToFloat(0.7466),doubleToFloat(0.8902),doubleToFloat(0.7255),doubleToFloat(0.9689),doubleToFloat(0.0153),doubleToFloat(0.9719),doubleToFloat(0.1999),doubleToFloat(0.9458),doubleToFloat(0.2011),doubleToFloat(0.9492),doubleToFloat(0.0154),doubleToFloat(0.7092),doubleToFloat(0.067),doubleToFloat(0.769),doubleToFloat(0.0435),doubleToFloat(0.8323),doubleToFloat(0.2185),doubleToFloat(0.7803),doubleToFloat(0.2416),doubleToFloat(0.8338),doubleToFloat(0.0247),doubleToFloat(0.8909),doubleToFloat(0.203),doubleToFloat(0.5653),doubleToFloat(0.1778),doubleToFloat(0.6229),doubleToFloat(0.123),doubleToFloat(0.7389),doubleToFloat(0.2712),doubleToFloat(0.6865),doubleToFloat(0.3216),doubleToFloat(0.8742),doubleToFloat(0.017),doubleToFloat(0.671),doubleToFloat(0.0882),doubleToFloat(0.5395),doubleToFloat(0.2048),doubleToFloat(0.5476),doubleToFloat(0.1983),doubleToFloat(0.6869),doubleToFloat(0.3219),doubleToFloat(0.5594),doubleToFloat(0.1844),doubleToFloat(0.6471),doubleToFloat(0.3824),doubleToFloat(0.6446),doubleToFloat(0.3872),doubleToFloat(0.483),doubleToFloat(0.2951),doubleToFloat(0.4882),doubleToFloat(0.283),doubleToFloat(0.4773),doubleToFloat(0.3069),doubleToFloat(0.6789),doubleToFloat(0.0845),doubleToFloat(0.7806),doubleToFloat(0.2419),doubleToFloat(0.7018),doubleToFloat(0.0717),doubleToFloat(0.8434),doubleToFloat(0.0238),doubleToFloat(0.8908),doubleToFloat(0.2029),doubleToFloat(0.8637),doubleToFloat(0.0204),doubleToFloat(0.7883),doubleToFloat(0.4384),doubleToFloat(0.8184),doubleToFloat(0.4313),doubleToFloat(0.7627),doubleToFloat(0.4439),doubleToFloat(0.7605),doubleToFloat(0.4029),doubleToFloat(0.9681),doubleToFloat(0.6588),doubleToFloat(0.974),doubleToFloat(0.6751),doubleToFloat(0.9769),doubleToFloat(0.6939),doubleToFloat(0.9797),doubleToFloat(0.0173),doubleToFloat(0.9776),doubleToFloat(0.2011),doubleToFloat(0.9887),doubleToFloat(0.0179),doubleToFloat(0.6928),doubleToFloat(0.3274),doubleToFloat(0.6537),doubleToFloat(0.3865),doubleToFloat(0.8339),doubleToFloat(0.2256),doubleToFloat(0.7846),doubleToFloat(0.2494),doubleToFloat(0.8923),doubleToFloat(0.2111),doubleToFloat(0.7444),doubleToFloat(0.2773),doubleToFloat(0.946),doubleToFloat(0.2082),doubleToFloat(0.9719),doubleToFloat(0.2073),doubleToFloat(0.9357),doubleToFloat(0.6444),doubleToFloat(0.9575),doubleToFloat(0.6354),doubleToFloat(0.7215),doubleToFloat(0.3537),doubleToFloat(0.6862),doubleToFloat(0.4061),doubleToFloat(0.8425),doubleToFloat(0.2623),doubleToFloat(0.8029),doubleToFloat(0.2824),doubleToFloat(0.8988),doubleToFloat(0.2477),doubleToFloat(0.7697),doubleToFloat(0.3055),doubleToFloat(0.9474),doubleToFloat(0.2452),doubleToFloat(0.972),doubleToFloat(0.2446)], Java.type("float[]"))))))))
              .addChild(new HAnimJoint("hanim_sacroiliac").setName("l_shoulder").setDEF("hanim_l_shoulder").setCenter(Java.to([doubleToFloat(6.077),doubleToFloat(45.880001),doubleToFloat(-1.319)], Java.type("float[]")))
                .addChild(new HAnimSegment("hanim_l_shoulder").setName("l_upperarm").setDEF("hanim_l_upperarm")
                  .addChild(new Transform().setTranslation(Java.to([doubleToFloat(6.077),doubleToFloat(45.880001),doubleToFloat(-1.319)], Java.type("float[]")))
                    .addChild(new Shape()
                      .setAppearance(new Appearance()
                        .setMaterial(new Material().setDiffuseColor(Java.to([doubleToFloat(0.588),doubleToFloat(0.588),doubleToFloat(0.588)], Java.type("float[]"))))
                        .setTexture(new ImageTexture().setUSE("SunTextureAtlas")))
                      .setGeometry(new IndexedFaceSet().setCoordIndex(Java.to([2,3,0,-1,0,1,2,-1,0,5,4,-1,4,1,0,-1,4,5,6,-1,6,7,4,-1,7,6,8,-1,8,9,7,-1,9,8,10,-1,10,11,9,-1,10,13,12,-1,12,11,10,-1,15,12,13,-1,13,14,15,-1,2,15,14,-1,14,3,2,-1,17,0,3,-1,3,16,17,-1,16,3,14,-1,14,18,16,-1,18,14,13,-1,13,19,18,-1,10,20,19,-1,19,13,10,-1,8,21,20,-1,20,10,8,-1,21,8,6,-1,6,22,21,-1,22,6,5,-1,5,23,22,-1,5,0,17,-1,17,23,5,-1,17,16,24,-1,16,18,24,-1,18,19,24,-1,19,20,24,-1,20,21,24,-1,21,22,24,-1,22,23,24,-1,23,17,24,-1,26,2,1,-1,1,25,26,-1,1,4,27,-1,27,25,1,-1,4,7,28,-1,28,27,4,-1,7,9,29,-1,29,28,7,-1,29,9,11,-1,11,30,29,-1,30,11,12,-1,12,31,30,-1,12,15,32,-1,32,31,12,-1,2,26,32,-1,32,15,2,-1,35,36,33,-1,33,34,35,-1,34,33,37,-1,37,38,34,-1,39,40,38,-1,38,37,39,-1,42,40,39,-1,39,41,42,-1,42,41,43,-1,43,44,42,-1,46,44,43,-1,43,45,46,-1,45,48,47,-1,47,46,45,-1,35,47,48,-1,48,36,35,-1,35,34,49,-1,34,38,49,-1,38,40,49,-1,40,42,49,-1,42,44,49,-1,44,46,49,-1,46,47,49,-1,47,35,49,-1,36,26,25,-1,25,33,36,-1,25,27,37,-1,37,33,25,-1,39,37,27,-1,27,28,39,-1,28,29,41,-1,41,39,28,-1,43,41,29,-1,29,30,43,-1,30,31,45,-1,45,43,30,-1,31,32,48,-1,48,45,31,-1,36,48,32,-1,32,26,36,-1], Java.type("int[]"))).setCreaseAngle(1.57).setTexCoordIndex(Java.to([2,3,0,-1,0,1,2,-1,0,5,4,-1,4,1,0,-1,4,5,6,-1,6,7,4,-1,7,6,14,-1,14,13,7,-1,13,14,11,-1,11,12,13,-1,11,16,15,-1,15,12,11,-1,18,15,16,-1,16,17,18,-1,20,18,17,-1,17,19,20,-1,9,0,3,-1,3,8,9,-1,26,19,17,-1,17,21,26,-1,21,17,16,-1,16,27,21,-1,11,28,27,-1,27,16,11,-1,14,29,28,-1,28,11,14,-1,22,14,6,-1,6,10,22,-1,10,6,5,-1,5,23,10,-1,5,0,9,-1,9,23,5,-1,9,8,24,-1,26,21,30,-1,21,27,30,-1,27,28,30,-1,28,29,30,-1,22,10,24,-1,10,23,24,-1,23,9,24,-1,37,2,1,-1,1,25,37,-1,1,4,38,-1,38,25,1,-1,4,7,39,-1,39,38,4,-1,7,13,32,-1,32,39,7,-1,32,13,12,-1,12,31,32,-1,31,12,15,-1,15,33,31,-1,15,18,34,-1,34,33,15,-1,20,35,34,-1,34,18,20,-1,42,62,61,-1,61,41,42,-1,41,61,63,-1,63,44,41,-1,64,46,44,-1,44,63,64,-1,47,46,64,-1,64,68,47,-1,50,68,60,-1,60,49,50,-1,52,49,60,-1,60,65,52,-1,65,66,53,-1,53,52,65,-1,55,53,66,-1,66,67,55,-1,42,41,48,-1,41,44,48,-1,44,46,48,-1,46,47,48,-1,50,49,56,-1,49,52,56,-1,52,53,56,-1,53,55,56,-1,57,37,25,-1,25,40,57,-1,25,38,43,-1,43,40,25,-1,45,43,38,-1,38,39,45,-1,39,32,59,-1,59,45,39,-1,36,59,32,-1,32,31,36,-1,31,33,51,-1,51,36,31,-1,33,34,54,-1,54,51,33,-1,58,54,34,-1,34,35,58,-1], Java.type("int[]")))
                        .setCoord(new Coordinate().setPoint(Java.to([doubleToFloat(1.717),doubleToFloat(1.309),doubleToFloat(1.097),doubleToFloat(1.974),doubleToFloat(-1.312),doubleToFloat(1.269),doubleToFloat(2.5),doubleToFloat(-1.164),doubleToFloat(0.0054),doubleToFloat(2.189),doubleToFloat(1.309),doubleToFloat(0.0054),doubleToFloat(0.9602),doubleToFloat(-1.482),doubleToFloat(1.715),doubleToFloat(0.7596),doubleToFloat(1.257),doubleToFloat(1.575),doubleToFloat(-0.2808),doubleToFloat(1.309),doubleToFloat(1.097),doubleToFloat(-0.1525),doubleToFloat(-1.651),doubleToFloat(1.255),doubleToFloat(-0.7527),doubleToFloat(1.309),doubleToFloat(0.0054),doubleToFloat(-0.7245),doubleToFloat(-1.721),doubleToFloat(0.0054),doubleToFloat(-0.2808),doubleToFloat(1.309),doubleToFloat(-1.076),doubleToFloat(-0.1271),doubleToFloat(-1.205),doubleToFloat(-1.321),doubleToFloat(0.9602),doubleToFloat(-0.6874),doubleToFloat(-1.769),doubleToFloat(0.7596),doubleToFloat(1.257),doubleToFloat(-1.553),doubleToFloat(1.717),doubleToFloat(1.309),doubleToFloat(-1.076),doubleToFloat(1.914),doubleToFloat(-0.718),doubleToFloat(-1.323),doubleToFloat(1.542),doubleToFloat(1.789),doubleToFloat(0.0054),doubleToFloat(1.26),doubleToFloat(1.789),doubleToFloat(0.6945),doubleToFloat(1.26),doubleToFloat(1.789),doubleToFloat(-0.6837),doubleToFloat(0.7596),doubleToFloat(1.737),doubleToFloat(-0.9692),doubleToFloat(0.177),doubleToFloat(1.789),doubleToFloat(-0.6837),doubleToFloat(-0.1052),doubleToFloat(1.789),doubleToFloat(0.0054),doubleToFloat(0.177),doubleToFloat(1.789),doubleToFloat(0.6945),doubleToFloat(0.7596),doubleToFloat(1.737),doubleToFloat(0.9799),doubleToFloat(0.7596),doubleToFloat(1.988),doubleToFloat(0.0054),doubleToFloat(2.046),doubleToFloat(-4.237),doubleToFloat(1.121),doubleToFloat(2.544),doubleToFloat(-4.107),doubleToFloat(0.0054),doubleToFloat(0.9757),doubleToFloat(-4.461),doubleToFloat(1.55),doubleToFloat(-0.0943),doubleToFloat(-4.686),doubleToFloat(1.035),doubleToFloat(-0.592),doubleToFloat(-4.765),doubleToFloat(0.0054),doubleToFloat(-0.0502),doubleToFloat(-4.676),doubleToFloat(-1.212),doubleToFloat(0.9757),doubleToFloat(-4.461),doubleToFloat(-1.624),doubleToFloat(2.002),doubleToFloat(-4.246),doubleToFloat(-1.212),doubleToFloat(1.895),doubleToFloat(-7.377),doubleToFloat(0.8552),doubleToFloat(1.714),doubleToFloat(-7.897),doubleToFloat(0.5991),doubleToFloat(2.019),doubleToFloat(-7.897),doubleToFloat(0.0054),doubleToFloat(2.276),doubleToFloat(-7.377),doubleToFloat(0.0054),doubleToFloat(0.9757),doubleToFloat(-7.377),doubleToFloat(1.267),doubleToFloat(0.9757),doubleToFloat(-7.897),doubleToFloat(0.9047),doubleToFloat(0.0561),doubleToFloat(-7.377),doubleToFloat(0.8552),doubleToFloat(0.2378),doubleToFloat(-7.897),doubleToFloat(0.5991),doubleToFloat(-0.3248),doubleToFloat(-7.377),doubleToFloat(0.0054),doubleToFloat(-0.0678),doubleToFloat(-7.897),doubleToFloat(0.0054),doubleToFloat(0.0561),doubleToFloat(-7.377),doubleToFloat(-0.9888),doubleToFloat(0.2378),doubleToFloat(-7.897),doubleToFloat(-0.7325),doubleToFloat(0.9757),doubleToFloat(-7.377),doubleToFloat(-1.401),doubleToFloat(0.9757),doubleToFloat(-7.897),doubleToFloat(-1.038),doubleToFloat(1.714),doubleToFloat(-7.897),doubleToFloat(-0.7325),doubleToFloat(1.895),doubleToFloat(-7.377),doubleToFloat(-0.9888),doubleToFloat(0.9757),doubleToFloat(-8.333),doubleToFloat(0.0054)], Java.type("float[]"))))
                        .setTexCoord(new TextureCoordinate().setPoint(Java.to([doubleToFloat(0.7373),doubleToFloat(1.904),doubleToFloat(0.7454),doubleToFloat(1.852),doubleToFloat(0.7783),doubleToFloat(1.858),doubleToFloat(0.7656),doubleToFloat(1.899),doubleToFloat(0.7152),doubleToFloat(1.848),doubleToFloat(0.71),doubleToFloat(1.901),doubleToFloat(0.6826),doubleToFloat(1.904),doubleToFloat(0.6851),doubleToFloat(1.846),doubleToFloat(0.7419),doubleToFloat(1.927),doubleToFloat(0.7284),doubleToFloat(1.918),doubleToFloat(0.6909),doubleToFloat(1.918),doubleToFloat(0.6244),doubleToFloat(1.905),doubleToFloat(0.619),doubleToFloat(1.855),doubleToFloat(0.6525),doubleToFloat(1.846),doubleToFloat(0.6537),doubleToFloat(1.912),doubleToFloat(0.5897),doubleToFloat(1.865),doubleToFloat(0.5966),doubleToFloat(1.902),doubleToFloat(0.5694),doubleToFloat(1.905),doubleToFloat(0.5607),doubleToFloat(1.866),doubleToFloat(0.543),doubleToFloat(1.916),doubleToFloat(0.5243),doubleToFloat(1.861),doubleToFloat(0.5792),doubleToFloat(1.919),doubleToFloat(0.6768),doubleToFloat(1.927),doubleToFloat(0.7098),doubleToFloat(1.915),doubleToFloat(0.7095),doubleToFloat(1.934),doubleToFloat(0.7427),doubleToFloat(1.793),doubleToFloat(0.5662),doubleToFloat(1.93),doubleToFloat(0.5976),doubleToFloat(1.916),doubleToFloat(0.6166),doubleToFloat(1.918),doubleToFloat(0.6311),doubleToFloat(1.928),doubleToFloat(0.5988),doubleToFloat(1.935),doubleToFloat(0.6179),doubleToFloat(1.786),doubleToFloat(0.652),doubleToFloat(1.784),doubleToFloat(0.5894),doubleToFloat(1.79),doubleToFloat(0.5606),doubleToFloat(1.794),doubleToFloat(0.5257),doubleToFloat(1.796),doubleToFloat(0.6213),doubleToFloat(1.732),doubleToFloat(0.7737),doubleToFloat(1.794),doubleToFloat(0.7122),doubleToFloat(1.789),doubleToFloat(0.6812),doubleToFloat(1.785),doubleToFloat(0.7323),doubleToFloat(1.729),doubleToFloat(0.73),doubleToFloat(1.719),doubleToFloat(0.747),doubleToFloat(1.712),doubleToFloat(0.7045),doubleToFloat(1.731),doubleToFloat(0.7048),doubleToFloat(1.724),doubleToFloat(0.6766),doubleToFloat(1.731),doubleToFloat(0.6789),doubleToFloat(1.722),doubleToFloat(0.6605),doubleToFloat(1.715),doubleToFloat(0.7027),doubleToFloat(1.7),doubleToFloat(0.6206),doubleToFloat(1.724),doubleToFloat(0.6424),doubleToFloat(1.717),doubleToFloat(0.594),doubleToFloat(1.731),doubleToFloat(0.5953),doubleToFloat(1.726),doubleToFloat(0.5704),doubleToFloat(1.723),doubleToFloat(0.5669),doubleToFloat(1.731),doubleToFloat(0.5513),doubleToFloat(1.711),doubleToFloat(0.5972),doubleToFloat(1.7),doubleToFloat(0.7577),doubleToFloat(1.727),doubleToFloat(0.5392),doubleToFloat(1.729),doubleToFloat(0.6505),doubleToFloat(1.731),doubleToFloat(0.6254),doubleToFloat(1.737),doubleToFloat(0.7371),doubleToFloat(1.733),doubleToFloat(0.7608),doubleToFloat(1.731),doubleToFloat(0.7076),doubleToFloat(1.737),doubleToFloat(0.6768),doubleToFloat(1.738),doubleToFloat(0.5953),doubleToFloat(1.74),doubleToFloat(0.5651),doubleToFloat(1.738),doubleToFloat(0.529),doubleToFloat(1.733),doubleToFloat(0.6481),doubleToFloat(1.738)], Java.type("float[]"))))))))
                .addChild(new HAnimJoint("hanim_l_shoulder").setName("l_elbow").setDEF("hanim_l_elbow").setCenter(Java.to([doubleToFloat(7.076),doubleToFloat(38.529999),doubleToFloat(-1.385)], Java.type("float[]")))
                  .addChild(new HAnimSegment("hanim_l_elbow").setName("l_forearm").setDEF("hanim_l_forearm")
                    .addChild(new Transform().setTranslation(Java.to([doubleToFloat(7.076),doubleToFloat(38.529999),doubleToFloat(-1.385)], Java.type("float[]")))
                      .addChild(new Shape()
                        .setAppearance(new Appearance()
                          .setMaterial(new Material().setDiffuseColor(Java.to([doubleToFloat(0.588),doubleToFloat(0.588),doubleToFloat(0.588)], Java.type("float[]"))))
                          .setTexture(new ImageTexture().setUSE("SunTextureAtlas")))
                        .setGeometry(new IndexedFaceSet().setCoordIndex(Java.to([0,1,2,-1,2,3,0,-1,4,0,3,-1,3,5,4,-1,6,7,8,-1,8,9,6,-1,11,7,6,-1,6,10,11,-1,13,11,10,-1,10,12,13,-1,14,15,16,-1,16,17,14,-1,19,20,21,-1,21,18,19,-1,22,23,2,-1,2,1,22,-1,26,27,24,-1,24,25,26,-1,25,24,28,-1,28,29,25,-1,31,29,28,-1,28,30,31,-1,33,31,30,-1,30,32,33,-1,35,33,32,-1,32,34,35,-1,36,37,35,-1,35,34,36,-1,39,37,36,-1,36,38,39,-1,38,27,26,-1,26,39,38,-1,26,25,40,-1,25,29,40,-1,29,31,40,-1,31,33,40,-1,33,35,40,-1,35,37,40,-1,37,39,40,-1,39,26,40,-1,43,44,41,-1,41,42,43,-1,19,45,43,-1,43,42,19,-1,46,45,19,-1,19,18,46,-1,12,47,46,-1,46,18,12,-1,47,12,10,-1,10,48,47,-1,49,48,10,-1,10,6,49,-1,49,6,9,-1,9,50,49,-1,9,41,44,-1,44,50,9,-1,44,43,51,-1,43,45,51,-1,45,46,51,-1,46,47,51,-1,47,48,51,-1,48,49,51,-1,49,50,51,-1,50,44,51,-1,0,53,52,-1,52,1,0,-1,4,54,53,-1,53,0,4,-1,54,4,55,-1,55,56,54,-1,55,58,57,-1,57,56,55,-1,14,59,57,-1,57,58,14,-1,17,60,59,-1,59,14,17,-1,22,61,60,-1,60,17,22,-1,22,1,52,-1,52,61,22,-1,24,27,52,-1,52,53,24,-1,24,53,54,-1,54,28,24,-1,54,56,30,-1,30,28,54,-1,56,57,32,-1,32,30,56,-1,34,32,57,-1,57,59,34,-1,36,34,59,-1,59,60,36,-1,60,61,38,-1,38,36,60,-1,38,61,52,-1,52,27,38,-1,62,63,3,-1,3,2,62,-1,63,8,5,-1,5,3,63,-1,55,4,5,-1,5,64,55,-1,58,55,64,-1,64,65,58,-1,15,14,58,-1,58,65,15,-1,13,21,16,-1,16,15,13,-1,23,22,17,-1,17,16,23,-1,20,62,2,-1,2,23,20,-1,7,64,5,-1,5,8,7,-1,65,64,7,-1,7,11,65,-1,15,65,11,-1,11,13,15,-1,20,23,16,-1,16,21,20,-1,42,41,63,-1,63,62,42,-1,41,9,8,-1,8,63,41,-1,12,18,21,-1,21,13,12,-1,19,42,62,-1,62,20,19,-1], Java.type("int[]"))).setCreaseAngle(1.57).setTexCoordIndex(Java.to([21,22,24,-1,24,25,21,-1,26,21,25,-1,25,27,26,-1,28,29,30,-1,30,31,28,-1,44,29,28,-1,28,43,44,-1,5,6,7,-1,7,4,5,-1,8,10,11,-1,11,12,8,-1,14,15,16,-1,16,13,14,-1,17,18,19,-1,19,23,17,-1,48,84,83,-1,83,47,48,-1,47,83,85,-1,85,56,47,-1,57,56,85,-1,85,86,57,-1,58,57,86,-1,86,87,58,-1,32,58,87,-1,87,79,32,-1,80,33,32,-1,32,79,80,-1,34,33,80,-1,80,81,34,-1,81,82,35,-1,35,34,81,-1,48,47,59,-1,47,56,59,-1,56,57,59,-1,57,58,59,-1,58,32,37,-1,32,33,37,-1,33,34,37,-1,34,35,37,-1,62,63,60,-1,60,61,62,-1,14,40,38,-1,38,39,14,-1,41,40,14,-1,14,13,41,-1,4,42,41,-1,41,13,4,-1,42,4,7,-1,7,45,42,-1,64,65,43,-1,43,28,64,-1,64,28,31,-1,31,66,64,-1,31,60,63,-1,63,66,31,-1,63,62,67,-1,38,40,46,-1,40,41,46,-1,41,42,46,-1,42,45,46,-1,65,64,67,-1,64,66,67,-1,66,63,67,-1,21,69,68,-1,68,22,21,-1,26,70,69,-1,69,21,26,-1,70,26,71,-1,71,72,70,-1,71,74,73,-1,73,72,71,-1,8,50,73,-1,73,74,8,-1,12,51,50,-1,50,8,12,-1,17,52,51,-1,51,12,17,-1,17,23,53,-1,53,52,17,-1,20,49,68,-1,68,69,20,-1,20,69,70,-1,70,9,20,-1,70,72,0,-1,0,9,70,-1,72,73,78,-1,78,0,72,-1,3,78,73,-1,73,50,3,-1,2,3,50,-1,50,51,2,-1,51,52,1,-1,1,2,51,-1,1,52,53,-1,53,36,1,-1,75,76,25,-1,25,24,75,-1,76,30,27,-1,27,25,76,-1,71,26,27,-1,27,77,71,-1,74,71,77,-1,77,54,74,-1,10,8,74,-1,74,54,10,-1,5,16,11,-1,11,10,5,-1,18,17,12,-1,12,11,18,-1,15,55,19,-1,19,18,15,-1,29,77,27,-1,27,30,29,-1,54,77,29,-1,29,44,54,-1,10,54,6,-1,6,5,10,-1,15,18,11,-1,11,16,15,-1,61,60,76,-1,76,75,61,-1,60,31,30,-1,30,76,60,-1,4,13,16,-1,16,5,4,-1,14,39,55,-1,55,15,14,-1], Java.type("int[]")))
                          .setCoord(new Coordinate().setPoint(Java.to([doubleToFloat(0.896),doubleToFloat(-3.458),doubleToFloat(-0.7733),doubleToFloat(1.43),doubleToFloat(-3.283),doubleToFloat(0.0723),doubleToFloat(1.163),doubleToFloat(-7.27),doubleToFloat(0.0721),doubleToFloat(0.7935),doubleToFloat(-7.267),doubleToFloat(-0.5416),doubleToFloat(-0.0234),doubleToFloat(-3.843),doubleToFloat(-1.144),doubleToFloat(-0.0262),doubleToFloat(-7.3),doubleToFloat(-0.8983),doubleToFloat(-0.6588),doubleToFloat(-7.609),doubleToFloat(-0.4491),doubleToFloat(-0.7822),doubleToFloat(-7.049),doubleToFloat(-0.481),doubleToFloat(-0.025),doubleToFloat(-7.07),doubleToFloat(-0.8149),doubleToFloat(-0.0233),doubleToFloat(-7.631),doubleToFloat(-0.7795),doubleToFloat(-0.922),doubleToFloat(-7.614),doubleToFloat(0.0729),doubleToFloat(-1.098),doubleToFloat(-7.053),doubleToFloat(0.0729),doubleToFloat(-0.6588),doubleToFloat(-7.612),doubleToFloat(0.6263),doubleToFloat(-0.7823),doubleToFloat(-7.05),doubleToFloat(0.6527),doubleToFloat(-0.9427),doubleToFloat(-4.174),doubleToFloat(0.8667),doubleToFloat(-0.8457),doubleToFloat(-7.28),doubleToFloat(0.7082),doubleToFloat(-0.0234),doubleToFloat(-7.282),doubleToFloat(1.066),doubleToFloat(-0.0234),doubleToFloat(-3.825),doubleToFloat(1.273),doubleToFloat(-0.0233),doubleToFloat(-7.623),doubleToFloat(0.9572),doubleToFloat(0.6122),doubleToFloat(-7.612),doubleToFloat(0.6263),doubleToFloat(0.7325),doubleToFloat(-7.043),doubleToFloat(0.6513),doubleToFloat(-0.0233),doubleToFloat(-7.057),doubleToFloat(0.9867),doubleToFloat(0.896),doubleToFloat(-3.452),doubleToFloat(0.8897),doubleToFloat(0.7936),doubleToFloat(-7.266),doubleToFloat(0.7058),doubleToFloat(0.896),doubleToFloat(-0.0257),doubleToFloat(-0.9221),doubleToFloat(0.7144),doubleToFloat(0.4948),doubleToFloat(-0.6658),doubleToFloat(1.02),doubleToFloat(0.4948),doubleToFloat(0.0721),doubleToFloat(1.277),doubleToFloat(-0.0257),doubleToFloat(0.0721),doubleToFloat(-0.0236),doubleToFloat(-0.0257),doubleToFloat(-1.334),doubleToFloat(-0.0236),doubleToFloat(0.4948),doubleToFloat(-0.9714),doubleToFloat(-0.9432),doubleToFloat(-0.0257),doubleToFloat(-0.9221),doubleToFloat(-0.7615),doubleToFloat(0.4948),doubleToFloat(-0.6658),doubleToFloat(-1.324),doubleToFloat(-0.0257),doubleToFloat(0.0721),doubleToFloat(-1.067),doubleToFloat(0.4948),doubleToFloat(0.0721),doubleToFloat(-0.9432),doubleToFloat(-0.0257),doubleToFloat(0.9219),doubleToFloat(-0.7615),doubleToFloat(0.4948),doubleToFloat(0.8099),doubleToFloat(-0.0236),doubleToFloat(-0.0257),doubleToFloat(1.334),doubleToFloat(-0.0236),doubleToFloat(0.4948),doubleToFloat(1.116),doubleToFloat(0.896),doubleToFloat(-0.0257),doubleToFloat(0.9219),doubleToFloat(0.7144),doubleToFloat(0.4948),doubleToFloat(0.8099),doubleToFloat(-0.0236),doubleToFloat(0.931),doubleToFloat(0.0721),doubleToFloat(0.6122),doubleToFloat(-7.609),doubleToFloat(-0.4491),doubleToFloat(0.8754),doubleToFloat(-7.614),doubleToFloat(0.0729),doubleToFloat(0.583),doubleToFloat(-8.086),doubleToFloat(0.0729),doubleToFloat(0.4054),doubleToFloat(-8.063),doubleToFloat(-0.1612),doubleToFloat(0.4054),doubleToFloat(-8.076),doubleToFloat(0.3527),doubleToFloat(-0.0233),doubleToFloat(-8.083),doubleToFloat(0.5759),doubleToFloat(-0.452),doubleToFloat(-8.076),doubleToFloat(0.3527),doubleToFloat(-0.6297),doubleToFloat(-8.086),doubleToFloat(0.0729),doubleToFloat(-0.452),doubleToFloat(-8.063),doubleToFloat(-0.1612),doubleToFloat(-0.0233),doubleToFloat(-8.078),doubleToFloat(-0.3841),doubleToFloat(-0.0233),doubleToFloat(-8.424),doubleToFloat(0.0729),doubleToFloat(1.403),doubleToFloat(-0.6344),doubleToFloat(0.0721),doubleToFloat(0.9954),doubleToFloat(-0.506),doubleToFloat(-0.8653),doubleToFloat(-0.02),doubleToFloat(-0.506),doubleToFloat(-1.277),doubleToFloat(-0.9426),doubleToFloat(-4.179),doubleToFloat(-0.7253),doubleToFloat(-1.041),doubleToFloat(-0.506),doubleToFloat(-0.8653),doubleToFloat(-1.43),doubleToFloat(-0.6344),doubleToFloat(0.0721),doubleToFloat(-1.323),doubleToFloat(-4.321),doubleToFloat(0.0723),doubleToFloat(-1.018),doubleToFloat(-0.6344),doubleToFloat(0.9221),doubleToFloat(-0.0236),doubleToFloat(-0.6344),doubleToFloat(1.334),doubleToFloat(0.9707),doubleToFloat(-0.6344),doubleToFloat(0.9221),doubleToFloat(1.063),doubleToFloat(-7.046),doubleToFloat(0.0729),doubleToFloat(0.7325),doubleToFloat(-7.042),doubleToFloat(-0.4818),doubleToFloat(-0.8456),doubleToFloat(-7.281),doubleToFloat(-0.5402),doubleToFloat(-1.188),doubleToFloat(-7.284),doubleToFloat(0.0721)], Java.type("float[]"))))
                          .setTexCoord(new TextureCoordinate().setPoint(Java.to([doubleToFloat(0.6214),doubleToFloat(1.732),doubleToFloat(0.7319),doubleToFloat(1.729),doubleToFloat(0.7045),doubleToFloat(1.73),doubleToFloat(0.6763),doubleToFloat(1.731),doubleToFloat(0.6737),doubleToFloat(1.57),doubleToFloat(0.6695),doubleToFloat(1.581),doubleToFloat(0.6525),doubleToFloat(1.578),doubleToFloat(0.6596),doubleToFloat(1.565),doubleToFloat(0.672),doubleToFloat(1.648),doubleToFloat(0.5944),doubleToFloat(1.731),doubleToFloat(0.669),doubleToFloat(1.585),doubleToFloat(0.692),doubleToFloat(1.585),doubleToFloat(0.6985),doubleToFloat(1.654),doubleToFloat(0.6909),doubleToFloat(1.571),doubleToFloat(0.7076),doubleToFloat(1.568),doubleToFloat(0.7136),doubleToFloat(1.579),doubleToFloat(0.6917),doubleToFloat(1.581),doubleToFloat(0.7251),doubleToFloat(1.66),doubleToFloat(0.7149),doubleToFloat(1.583),doubleToFloat(0.7334),doubleToFloat(1.58),doubleToFloat(0.5663),doubleToFloat(1.733),doubleToFloat(0.5738),doubleToFloat(1.66),doubleToFloat(0.5479),doubleToFloat(1.661),doubleToFloat(0.7502),doubleToFloat(1.661),doubleToFloat(0.5667),doubleToFloat(1.581),doubleToFloat(0.5849),doubleToFloat(1.584),doubleToFloat(0.6006),doubleToFloat(1.655),doubleToFloat(0.6078),doubleToFloat(1.585),doubleToFloat(0.6259),doubleToFloat(1.57),doubleToFloat(0.6303),doubleToFloat(1.581),doubleToFloat(0.6081),doubleToFloat(1.582),doubleToFloat(0.6088),doubleToFloat(1.572),doubleToFloat(0.6784),doubleToFloat(1.72),doubleToFloat(0.6987),doubleToFloat(1.718),doubleToFloat(0.715),doubleToFloat(1.723),doubleToFloat(0.7248),doubleToFloat(1.738),doubleToFloat(0.7566),doubleToFloat(1.727),doubleToFloat(0.6922),doubleToFloat(1.739),doubleToFloat(0.7083),doubleToFloat(1.553),doubleToFloat(0.7208),doubleToFloat(1.562),doubleToFloat(0.7017),doubleToFloat(1.557),doubleToFloat(0.69),doubleToFloat(1.561),doubleToFloat(0.6778),doubleToFloat(1.559),doubleToFloat(0.6394),doubleToFloat(1.565),doubleToFloat(0.6467),doubleToFloat(1.578),doubleToFloat(0.6707),doubleToFloat(1.555),doubleToFloat(0.6891),doubleToFloat(1.549),doubleToFloat(0.5851),doubleToFloat(1.722),doubleToFloat(0.5744),doubleToFloat(1.738),doubleToFloat(0.5383),doubleToFloat(1.729),doubleToFloat(0.6749),doubleToFloat(1.719),doubleToFloat(0.7035),doubleToFloat(1.718),doubleToFloat(0.732),doubleToFloat(1.717),doubleToFloat(0.7566),doubleToFloat(1.715),doubleToFloat(0.6497),doubleToFloat(1.584),doubleToFloat(0.73),doubleToFloat(1.574),doubleToFloat(0.6021),doubleToFloat(1.717),doubleToFloat(0.6226),doubleToFloat(1.719),doubleToFloat(0.6477),doubleToFloat(1.727),doubleToFloat(0.6092),doubleToFloat(1.739),doubleToFloat(0.5919),doubleToFloat(1.569),doubleToFloat(0.5792),doubleToFloat(1.563),doubleToFloat(0.5915),doubleToFloat(1.554),doubleToFloat(0.5975),doubleToFloat(1.558),doubleToFloat(0.6219),doubleToFloat(1.559),doubleToFloat(0.6284),doubleToFloat(1.556),doubleToFloat(0.6095),doubleToFloat(1.561),doubleToFloat(0.6103),doubleToFloat(1.55),doubleToFloat(0.5395),doubleToFloat(1.716),doubleToFloat(0.5658),doubleToFloat(1.721),doubleToFloat(0.5946),doubleToFloat(1.722),doubleToFloat(0.6275),doubleToFloat(1.648),doubleToFloat(0.6242),doubleToFloat(1.723),doubleToFloat(0.6504),doubleToFloat(1.719),doubleToFloat(0.6499),doubleToFloat(1.645),doubleToFloat(0.5702),doubleToFloat(1.575),doubleToFloat(0.5861),doubleToFloat(1.579),doubleToFloat(0.6308),doubleToFloat(1.586),doubleToFloat(0.6503),doubleToFloat(1.731),doubleToFloat(0.6767),doubleToFloat(1.711),doubleToFloat(0.7018),doubleToFloat(1.71),doubleToFloat(0.7234),doubleToFloat(1.719),doubleToFloat(0.7395),doubleToFloat(1.728),doubleToFloat(0.577),doubleToFloat(1.712),doubleToFloat(0.5523),doubleToFloat(1.731),doubleToFloat(0.5995),doubleToFloat(1.706),doubleToFloat(0.6239),doubleToFloat(1.709),doubleToFloat(0.6527),doubleToFloat(1.716)], Java.type("float[]"))))))))
                  .addChild(new HAnimJoint("hanim_l_elbow").setName("l_radiocarpal").setDEF("hanim_l_radiocarpal").setCenter(Java.to([doubleToFloat(6.946),doubleToFloat(30.889999),doubleToFloat(-1.308)], Java.type("float[]")))
                    .addChild(new HAnimSegment("hanim_l_radiocarpal").setName("l_carpal").setDEF("hanim_l_carpal")
                      .addChild(new Transform().setTranslation(Java.to([doubleToFloat(6.946),doubleToFloat(30.889999),doubleToFloat(-1.308)], Java.type("float[]")))
                        .addChild(new Shape()
                          .setAppearance(new Appearance()
                            .setMaterial(new Material().setDiffuseColor(Java.to([doubleToFloat(0.588),doubleToFloat(0.588),doubleToFloat(0.588)], Java.type("float[]"))))
                            .setTexture(new ImageTexture().setUSE("SunTextureAtlas")))
                          .setGeometry(new IndexedFaceSet().setCoordIndex(Java.to([3,0,1,-1,1,2,3,-1,5,6,7,-1,7,4,5,-1,9,10,11,-1,11,8,9,-1,9,12,13,-1,13,10,9,-1,15,16,17,-1,17,14,15,-1,16,15,18,-1,18,19,16,-1,3,11,10,-1,10,0,3,-1,10,13,1,-1,1,0,10,-1,16,20,21,-1,21,17,16,-1,20,16,19,-1,19,2,20,-1,7,6,9,-1,9,8,7,-1,5,12,9,-1,9,6,5,-1,15,14,22,-1,22,23,15,-1,18,15,23,-1,23,4,18,-1,21,20,2,-1,2,1,21,-1,23,22,5,-1,5,4,23,-1,12,14,17,-1,17,13,12,-1,26,27,24,-1,24,25,26,-1,21,1,13,-1,13,17,21,-1,11,3,2,-1,2,19,11,-1,22,14,12,-1,12,5,22,-1,4,7,8,-1,8,18,4,-1,25,24,8,-1,8,11,25,-1,11,19,26,-1,26,25,11,-1,19,18,27,-1,27,26,19,-1,18,8,24,-1,24,27,18,-1], Java.type("int[]"))).setCreaseAngle(1.57).setTexCoordIndex(Java.to([3,0,1,-1,1,2,3,-1,28,29,4,-1,4,5,28,-1,9,10,11,-1,11,8,9,-1,9,12,13,-1,13,10,9,-1,39,40,41,-1,41,38,39,-1,16,15,18,-1,18,19,16,-1,3,11,10,-1,10,0,3,-1,10,13,1,-1,1,0,10,-1,40,42,43,-1,43,41,40,-1,20,16,19,-1,19,2,20,-1,7,6,9,-1,9,8,7,-1,28,31,30,-1,30,29,28,-1,39,38,22,-1,22,23,39,-1,33,34,32,-1,32,5,33,-1,21,20,2,-1,2,1,21,-1,32,35,28,-1,28,5,32,-1,12,14,17,-1,17,13,12,-1,26,27,24,-1,24,25,26,-1,21,1,13,-1,13,17,21,-1,11,3,2,-1,2,19,11,-1,35,36,31,-1,31,28,35,-1,5,4,37,-1,37,33,5,-1,25,24,8,-1,8,11,25,-1,11,19,26,-1,26,25,11,-1,19,18,27,-1,27,26,19,-1,18,8,24,-1,24,27,18,-1], Java.type("int[]")))
                            .setCoord(new Coordinate().setPoint(Java.to([doubleToFloat(0.8369),doubleToFloat(-0.0091),doubleToFloat(0.7613),doubleToFloat(1.046),doubleToFloat(-0.0091),doubleToFloat(0.2822),doubleToFloat(-0.7102),doubleToFloat(-0.0091),doubleToFloat(0.2822),doubleToFloat(-0.6365),doubleToFloat(-0.0091),doubleToFloat(0.7613),doubleToFloat(-0.8285),doubleToFloat(-2.66),doubleToFloat(0.2822),doubleToFloat(1.164),doubleToFloat(-2.992),doubleToFloat(0.2822),doubleToFloat(0.9362),doubleToFloat(-2.714),doubleToFloat(1.233),doubleToFloat(-0.7358),doubleToFloat(-2.435),doubleToFloat(1.233),doubleToFloat(-1.07),doubleToFloat(-1.907),doubleToFloat(1.233),doubleToFloat(1.27),doubleToFloat(-1.907),doubleToFloat(1.233),doubleToFloat(1.27),doubleToFloat(-0.5983),doubleToFloat(1.233),doubleToFloat(-1.07),doubleToFloat(-0.5983),doubleToFloat(1.233),doubleToFloat(1.563),doubleToFloat(-2.03),doubleToFloat(0.2822),doubleToFloat(1.563),doubleToFloat(-0.5489),doubleToFloat(0.2822),doubleToFloat(1.338),doubleToFloat(-1.908),doubleToFloat(-1.198),doubleToFloat(-1.002),doubleToFloat(-1.908),doubleToFloat(-1.198),doubleToFloat(-1.002),doubleToFloat(-0.5991),doubleToFloat(-1.198),doubleToFloat(1.338),doubleToFloat(-0.5991),doubleToFloat(-1.198),doubleToFloat(-1.227),doubleToFloat(-2.03),doubleToFloat(0.2822),doubleToFloat(-1.227),doubleToFloat(-0.5489),doubleToFloat(0.2822),doubleToFloat(-0.5688),doubleToFloat(-0.0091),doubleToFloat(-0.7263),doubleToFloat(0.9047),doubleToFloat(-0.0091),doubleToFloat(-0.7263),doubleToFloat(1.004),doubleToFloat(-2.714),doubleToFloat(-1.198),doubleToFloat(-0.668),doubleToFloat(-2.436),doubleToFloat(-1.198),doubleToFloat(-1.552),doubleToFloat(-1.761),doubleToFloat(1.073),doubleToFloat(-1.552),doubleToFloat(-0.7447),doubleToFloat(1.073),doubleToFloat(-1.802),doubleToFloat(-0.7234),doubleToFloat(0.4415),doubleToFloat(-1.802),doubleToFloat(-1.856),doubleToFloat(0.4415)], Java.type("float[]"))))
                            .setTexCoord(new TextureCoordinate().setPoint(Java.to([doubleToFloat(0.2291),doubleToFloat(0.4554),doubleToFloat(0.2379),doubleToFloat(0.4639),doubleToFloat(0.1638),doubleToFloat(0.4639),doubleToFloat(0.1669),doubleToFloat(0.4554),doubleToFloat(0.1055),doubleToFloat(0.4675),doubleToFloat(0.0703),doubleToFloat(0.4694),doubleToFloat(0.2333),doubleToFloat(0.3582),doubleToFloat(0.1628),doubleToFloat(0.3683),doubleToFloat(0.1487),doubleToFloat(0.3875),doubleToFloat(0.2473),doubleToFloat(0.3875),doubleToFloat(0.2473),doubleToFloat(0.435),doubleToFloat(0.1487),doubleToFloat(0.435),doubleToFloat(0.2598),doubleToFloat(0.383),doubleToFloat(0.2598),doubleToFloat(0.4396),doubleToFloat(0.2502),doubleToFloat(0.3875),doubleToFloat(0.1477),doubleToFloat(0.3875),doubleToFloat(0.1477),doubleToFloat(0.435),doubleToFloat(0.2502),doubleToFloat(0.435),doubleToFloat(0.1383),doubleToFloat(0.383),doubleToFloat(0.1383),doubleToFloat(0.4396),doubleToFloat(0.1698),doubleToFloat(0.4554),doubleToFloat(0.232),doubleToFloat(0.4554),doubleToFloat(0.2362),doubleToFloat(0.3582),doubleToFloat(0.1657),doubleToFloat(0.3683),doubleToFloat(0.1283),doubleToFloat(0.3928),doubleToFloat(0.1283),doubleToFloat(0.4296),doubleToFloat(0.1178),doubleToFloat(0.4333),doubleToFloat(0.1178),doubleToFloat(0.3894),doubleToFloat(0.0685),doubleToFloat(0.4095),doubleToFloat(0.1043),doubleToFloat(0.4119),doubleToFloat(0.1041),doubleToFloat(0.3824),doubleToFloat(0.0691),doubleToFloat(0.3798),doubleToFloat(0.0184),doubleToFloat(0.4681),doubleToFloat(0.0704),doubleToFloat(0.4904),doubleToFloat(0.0183),doubleToFloat(0.4889),doubleToFloat(0.0176),doubleToFloat(0.4121),doubleToFloat(0.018),doubleToFloat(0.3832),doubleToFloat(0.1056),doubleToFloat(0.489),doubleToFloat(0.2502),doubleToFloat(0.3875),doubleToFloat(0.1515),doubleToFloat(0.3875),doubleToFloat(0.1515),doubleToFloat(0.435),doubleToFloat(0.2502),doubleToFloat(0.435),doubleToFloat(0.1698),doubleToFloat(0.4554),doubleToFloat(0.232),doubleToFloat(0.4554)], Java.type("float[]")))))))))))
              .addChild(new HAnimJoint("hanim_sacroiliac").setName("r_shoulder").setDEF("hanim_r_shoulder").setCenter(Java.to([doubleToFloat(-6.077),doubleToFloat(45.880001),doubleToFloat(-1.319)], Java.type("float[]")))
                .addChild(new HAnimSegment("hanim_r_shoulder").setName("r_upperarm").setDEF("hanim_r_upperarm")
                  .addChild(new Transform().setTranslation(Java.to([doubleToFloat(-6.077),doubleToFloat(45.880001),doubleToFloat(-1.319)], Java.type("float[]")))
                    .addChild(new Shape()
                      .setAppearance(new Appearance()
                        .setMaterial(new Material().setDiffuseColor(Java.to([doubleToFloat(0.588),doubleToFloat(0.588),doubleToFloat(0.588)], Java.type("float[]"))))
                        .setTexture(new ImageTexture().setUSE("SunTextureAtlas")))
                      .setGeometry(new IndexedFaceSet().setCoordIndex(Java.to([2,1,0,-1,0,3,2,-1,0,1,4,-1,4,5,0,-1,4,7,6,-1,6,5,4,-1,7,9,8,-1,8,6,7,-1,9,11,10,-1,10,8,9,-1,10,11,12,-1,12,13,10,-1,15,14,13,-1,13,12,15,-1,2,3,14,-1,14,15,2,-1,17,16,3,-1,3,0,17,-1,16,18,14,-1,14,3,16,-1,18,19,13,-1,13,14,18,-1,10,13,19,-1,19,20,10,-1,8,10,20,-1,20,21,8,-1,21,22,6,-1,6,8,21,-1,22,23,5,-1,5,6,22,-1,5,23,17,-1,17,0,5,-1,17,24,16,-1,16,24,18,-1,18,24,19,-1,19,24,20,-1,20,24,21,-1,21,24,22,-1,22,24,23,-1,23,24,17,-1,26,25,1,-1,1,2,26,-1,1,25,27,-1,27,4,1,-1,4,27,28,-1,28,7,4,-1,7,28,29,-1,29,9,7,-1,29,30,11,-1,11,9,29,-1,30,31,12,-1,12,11,30,-1,12,31,32,-1,32,15,12,-1,2,15,32,-1,32,26,2,-1,35,34,33,-1,33,36,35,-1,34,38,37,-1,37,33,34,-1,39,37,38,-1,38,40,39,-1,42,41,39,-1,39,40,42,-1,42,44,43,-1,43,41,42,-1,46,45,43,-1,43,44,46,-1,45,46,47,-1,47,48,45,-1,35,36,48,-1,48,47,35,-1,35,49,34,-1,34,49,38,-1,38,49,40,-1,40,49,42,-1,42,49,44,-1,44,49,46,-1,46,49,47,-1,47,49,35,-1,36,33,25,-1,25,26,36,-1,25,33,37,-1,37,27,25,-1,39,28,27,-1,27,37,39,-1,28,39,41,-1,41,29,28,-1,43,30,29,-1,29,41,43,-1,30,43,45,-1,45,31,30,-1,31,45,48,-1,48,32,31,-1,36,26,32,-1,32,48,36,-1], Java.type("int[]"))).setCreaseAngle(1.57).setTexCoordIndex(Java.to([2,1,0,-1,0,3,2,-1,0,1,4,-1,4,5,0,-1,4,7,6,-1,6,5,4,-1,7,13,14,-1,14,6,7,-1,13,12,11,-1,11,14,13,-1,11,12,15,-1,15,16,11,-1,18,17,16,-1,16,15,18,-1,20,19,17,-1,17,18,20,-1,9,8,3,-1,3,0,9,-1,26,21,17,-1,17,19,26,-1,21,27,16,-1,16,17,21,-1,11,16,27,-1,27,28,11,-1,14,11,28,-1,28,29,14,-1,22,10,6,-1,6,14,22,-1,10,23,5,-1,5,6,10,-1,5,23,9,-1,9,0,5,-1,9,24,8,-1,26,30,21,-1,21,30,27,-1,27,30,28,-1,28,30,29,-1,22,24,10,-1,10,24,23,-1,23,24,9,-1,37,25,1,-1,1,2,37,-1,1,25,38,-1,38,4,1,-1,4,38,39,-1,39,7,4,-1,7,39,32,-1,32,13,7,-1,32,31,12,-1,12,13,32,-1,31,33,15,-1,15,12,31,-1,15,33,34,-1,34,18,15,-1,20,18,34,-1,34,35,20,-1,42,41,61,-1,61,62,42,-1,41,44,63,-1,63,61,41,-1,64,63,44,-1,44,46,64,-1,47,68,64,-1,64,46,47,-1,50,49,60,-1,60,68,50,-1,52,65,60,-1,60,49,52,-1,65,52,53,-1,53,66,65,-1,55,67,66,-1,66,53,55,-1,42,48,41,-1,41,48,44,-1,44,48,46,-1,46,48,47,-1,50,56,49,-1,49,56,52,-1,52,56,53,-1,53,56,55,-1,57,40,25,-1,25,37,57,-1,25,40,43,-1,43,38,25,-1,45,39,38,-1,38,43,45,-1,39,45,59,-1,59,32,39,-1,36,31,32,-1,32,59,36,-1,31,36,51,-1,51,33,31,-1,33,51,54,-1,54,34,33,-1,58,35,34,-1,34,54,58,-1], Java.type("int[]")))
                        .setCoord(new Coordinate().setPoint(Java.to([doubleToFloat(-1.719),doubleToFloat(1.309),doubleToFloat(1.097),doubleToFloat(-1.998),doubleToFloat(-1.312),doubleToFloat(1.269),doubleToFloat(-2.525),doubleToFloat(-1.164),doubleToFloat(0.0054),doubleToFloat(-2.191),doubleToFloat(1.309),doubleToFloat(0.0054),doubleToFloat(-0.9602),doubleToFloat(-1.482),doubleToFloat(1.715),doubleToFloat(-0.7596),doubleToFloat(1.257),doubleToFloat(1.575),doubleToFloat(0.2808),doubleToFloat(1.309),doubleToFloat(1.097),doubleToFloat(0.1525),doubleToFloat(-1.651),doubleToFloat(1.255),doubleToFloat(0.7527),doubleToFloat(1.309),doubleToFloat(0.0054),doubleToFloat(0.7245),doubleToFloat(-1.721),doubleToFloat(0.0054),doubleToFloat(0.2808),doubleToFloat(1.309),doubleToFloat(-1.076),doubleToFloat(0.1271),doubleToFloat(-1.205),doubleToFloat(-1.321),doubleToFloat(-0.9602),doubleToFloat(-0.6874),doubleToFloat(-1.769),doubleToFloat(-0.7596),doubleToFloat(1.257),doubleToFloat(-1.553),doubleToFloat(-1.719),doubleToFloat(1.309),doubleToFloat(-1.076),doubleToFloat(-1.938),doubleToFloat(-0.718),doubleToFloat(-1.323),doubleToFloat(-1.543),doubleToFloat(1.789),doubleToFloat(0.0054),doubleToFloat(-1.261),doubleToFloat(1.789),doubleToFloat(0.6945),doubleToFloat(-1.261),doubleToFloat(1.789),doubleToFloat(-0.6837),doubleToFloat(-0.7596),doubleToFloat(1.737),doubleToFloat(-0.9692),doubleToFloat(-0.177),doubleToFloat(1.789),doubleToFloat(-0.6837),doubleToFloat(0.1052),doubleToFloat(1.789),doubleToFloat(0.0054),doubleToFloat(-0.177),doubleToFloat(1.789),doubleToFloat(0.6945),doubleToFloat(-0.7596),doubleToFloat(1.737),doubleToFloat(0.9799),doubleToFloat(-0.7596),doubleToFloat(1.988),doubleToFloat(0.0054),doubleToFloat(-2.046),doubleToFloat(-4.237),doubleToFloat(1.121),doubleToFloat(-2.544),doubleToFloat(-4.107),doubleToFloat(0.0054),doubleToFloat(-0.9757),doubleToFloat(-4.461),doubleToFloat(1.55),doubleToFloat(0.0943),doubleToFloat(-4.686),doubleToFloat(1.035),doubleToFloat(0.592),doubleToFloat(-4.765),doubleToFloat(0.0054),doubleToFloat(0.0502),doubleToFloat(-4.676),doubleToFloat(-1.212),doubleToFloat(-0.9757),doubleToFloat(-4.461),doubleToFloat(-1.624),doubleToFloat(-2.002),doubleToFloat(-4.246),doubleToFloat(-1.212),doubleToFloat(-1.895),doubleToFloat(-7.377),doubleToFloat(0.8552),doubleToFloat(-1.714),doubleToFloat(-7.897),doubleToFloat(0.5991),doubleToFloat(-2.019),doubleToFloat(-7.897),doubleToFloat(0.0054),doubleToFloat(-2.276),doubleToFloat(-7.377),doubleToFloat(0.0054),doubleToFloat(-0.9757),doubleToFloat(-7.377),doubleToFloat(1.267),doubleToFloat(-0.9757),doubleToFloat(-7.897),doubleToFloat(0.9047),doubleToFloat(-0.0561),doubleToFloat(-7.377),doubleToFloat(0.8552),doubleToFloat(-0.2378),doubleToFloat(-7.897),doubleToFloat(0.5991),doubleToFloat(0.3248),doubleToFloat(-7.377),doubleToFloat(0.0054),doubleToFloat(0.0678),doubleToFloat(-7.897),doubleToFloat(0.0054),doubleToFloat(-0.0561),doubleToFloat(-7.377),doubleToFloat(-0.9888),doubleToFloat(-0.2378),doubleToFloat(-7.897),doubleToFloat(-0.7325),doubleToFloat(-0.9757),doubleToFloat(-7.377),doubleToFloat(-1.401),doubleToFloat(-0.9757),doubleToFloat(-7.897),doubleToFloat(-1.038),doubleToFloat(-1.714),doubleToFloat(-7.897),doubleToFloat(-0.7325),doubleToFloat(-1.895),doubleToFloat(-7.377),doubleToFloat(-0.9888),doubleToFloat(-0.9757),doubleToFloat(-8.333),doubleToFloat(0.0054)], Java.type("float[]"))))
                        .setTexCoord(new TextureCoordinate().setPoint(Java.to([doubleToFloat(0.7373),doubleToFloat(1.904),doubleToFloat(0.7454),doubleToFloat(1.852),doubleToFloat(0.7783),doubleToFloat(1.858),doubleToFloat(0.7656),doubleToFloat(1.899),doubleToFloat(0.7152),doubleToFloat(1.848),doubleToFloat(0.71),doubleToFloat(1.901),doubleToFloat(0.6826),doubleToFloat(1.904),doubleToFloat(0.6851),doubleToFloat(1.846),doubleToFloat(0.7419),doubleToFloat(1.927),doubleToFloat(0.7284),doubleToFloat(1.918),doubleToFloat(0.6909),doubleToFloat(1.918),doubleToFloat(0.6244),doubleToFloat(1.905),doubleToFloat(0.619),doubleToFloat(1.855),doubleToFloat(0.6525),doubleToFloat(1.846),doubleToFloat(0.6537),doubleToFloat(1.912),doubleToFloat(0.5897),doubleToFloat(1.865),doubleToFloat(0.5966),doubleToFloat(1.902),doubleToFloat(0.5694),doubleToFloat(1.905),doubleToFloat(0.5607),doubleToFloat(1.866),doubleToFloat(0.543),doubleToFloat(1.916),doubleToFloat(0.5243),doubleToFloat(1.861),doubleToFloat(0.5792),doubleToFloat(1.919),doubleToFloat(0.6768),doubleToFloat(1.927),doubleToFloat(0.7098),doubleToFloat(1.915),doubleToFloat(0.7095),doubleToFloat(1.934),doubleToFloat(0.7427),doubleToFloat(1.793),doubleToFloat(0.5662),doubleToFloat(1.93),doubleToFloat(0.5976),doubleToFloat(1.916),doubleToFloat(0.6166),doubleToFloat(1.918),doubleToFloat(0.6311),doubleToFloat(1.928),doubleToFloat(0.5988),doubleToFloat(1.935),doubleToFloat(0.6179),doubleToFloat(1.786),doubleToFloat(0.652),doubleToFloat(1.784),doubleToFloat(0.5894),doubleToFloat(1.79),doubleToFloat(0.5606),doubleToFloat(1.794),doubleToFloat(0.5257),doubleToFloat(1.796),doubleToFloat(0.6213),doubleToFloat(1.732),doubleToFloat(0.7737),doubleToFloat(1.794),doubleToFloat(0.7122),doubleToFloat(1.789),doubleToFloat(0.6812),doubleToFloat(1.785),doubleToFloat(0.7323),doubleToFloat(1.729),doubleToFloat(0.73),doubleToFloat(1.719),doubleToFloat(0.747),doubleToFloat(1.712),doubleToFloat(0.7045),doubleToFloat(1.731),doubleToFloat(0.7048),doubleToFloat(1.724),doubleToFloat(0.6766),doubleToFloat(1.731),doubleToFloat(0.6789),doubleToFloat(1.722),doubleToFloat(0.6605),doubleToFloat(1.715),doubleToFloat(0.7027),doubleToFloat(1.7),doubleToFloat(0.6206),doubleToFloat(1.724),doubleToFloat(0.6424),doubleToFloat(1.717),doubleToFloat(0.594),doubleToFloat(1.731),doubleToFloat(0.5953),doubleToFloat(1.726),doubleToFloat(0.5704),doubleToFloat(1.723),doubleToFloat(0.5669),doubleToFloat(1.731),doubleToFloat(0.5513),doubleToFloat(1.711),doubleToFloat(0.5972),doubleToFloat(1.7),doubleToFloat(0.7577),doubleToFloat(1.727),doubleToFloat(0.5392),doubleToFloat(1.729),doubleToFloat(0.6505),doubleToFloat(1.731),doubleToFloat(0.6254),doubleToFloat(1.737),doubleToFloat(0.7371),doubleToFloat(1.733),doubleToFloat(0.7608),doubleToFloat(1.731),doubleToFloat(0.7076),doubleToFloat(1.737),doubleToFloat(0.6768),doubleToFloat(1.738),doubleToFloat(0.5953),doubleToFloat(1.74),doubleToFloat(0.5651),doubleToFloat(1.738),doubleToFloat(0.529),doubleToFloat(1.733),doubleToFloat(0.6481),doubleToFloat(1.738)], Java.type("float[]"))))))))
                .addChild(new HAnimJoint("hanim_r_shoulder").setName("r_elbow").setDEF("hanim_r_elbow").setCenter(Java.to([doubleToFloat(-7.076),doubleToFloat(38.529999),doubleToFloat(-1.385)], Java.type("float[]")))
                  .addChild(new HAnimSegment("hanim_r_elbow").setName("r_forearm").setDEF("hanim_r_forearm")
                    .addChild(new Transform().setTranslation(Java.to([doubleToFloat(-7.076),doubleToFloat(38.529999),doubleToFloat(-1.385)], Java.type("float[]")))
                      .addChild(new Shape()
                        .setAppearance(new Appearance()
                          .setMaterial(new Material().setDiffuseColor(Java.to([doubleToFloat(0.588),doubleToFloat(0.588),doubleToFloat(0.588)], Java.type("float[]"))))
                          .setTexture(new ImageTexture().setUSE("SunTextureAtlas")))
                        .setGeometry(new IndexedFaceSet().setCoordIndex(Java.to([0,3,2,-1,2,1,0,-1,4,5,3,-1,3,0,4,-1,6,9,8,-1,8,7,6,-1,11,10,6,-1,6,7,11,-1,13,12,10,-1,10,11,13,-1,14,17,16,-1,16,15,14,-1,19,18,21,-1,21,20,19,-1,22,1,2,-1,2,23,22,-1,26,25,24,-1,24,27,26,-1,25,29,28,-1,28,24,25,-1,31,30,28,-1,28,29,31,-1,33,32,30,-1,30,31,33,-1,35,34,32,-1,32,33,35,-1,36,34,35,-1,35,37,36,-1,39,38,36,-1,36,37,39,-1,38,39,26,-1,26,27,38,-1,26,40,25,-1,25,40,29,-1,29,40,31,-1,31,40,33,-1,33,40,35,-1,35,40,37,-1,37,40,39,-1,39,40,26,-1,43,42,41,-1,41,44,43,-1,19,42,43,-1,43,45,19,-1,46,18,19,-1,19,45,46,-1,12,18,46,-1,46,47,12,-1,47,48,10,-1,10,12,47,-1,49,6,10,-1,10,48,49,-1,49,50,9,-1,9,6,49,-1,9,50,44,-1,44,41,9,-1,44,51,43,-1,43,51,45,-1,45,51,46,-1,46,51,47,-1,47,51,48,-1,48,51,49,-1,49,51,50,-1,50,51,44,-1,0,1,52,-1,52,53,0,-1,4,0,53,-1,53,54,4,-1,54,56,55,-1,55,4,54,-1,55,56,57,-1,57,58,55,-1,14,58,57,-1,57,59,14,-1,17,14,59,-1,59,60,17,-1,22,17,60,-1,60,61,22,-1,22,61,52,-1,52,1,22,-1,24,53,52,-1,52,27,24,-1,24,28,54,-1,54,53,24,-1,54,28,30,-1,30,56,54,-1,56,30,32,-1,32,57,56,-1,34,59,57,-1,57,32,34,-1,36,60,59,-1,59,34,36,-1,60,36,38,-1,38,61,60,-1,38,27,52,-1,52,61,38,-1,62,2,3,-1,3,63,62,-1,63,3,5,-1,5,8,63,-1,55,64,5,-1,5,4,55,-1,58,65,64,-1,64,55,58,-1,15,65,58,-1,58,14,15,-1,13,15,16,-1,16,21,13,-1,23,16,17,-1,17,22,23,-1,20,23,2,-1,2,62,20,-1,7,8,5,-1,5,64,7,-1,65,11,7,-1,7,64,65,-1,15,13,11,-1,11,65,15,-1,20,21,16,-1,16,23,20,-1,42,62,63,-1,63,41,42,-1,41,63,8,-1,8,9,41,-1,12,13,21,-1,21,18,12,-1,19,20,62,-1,62,42,19,-1], Java.type("int[]"))).setCreaseAngle(1.57).setTexCoordIndex(Java.to([21,25,24,-1,24,22,21,-1,26,27,25,-1,25,21,26,-1,28,31,30,-1,30,29,28,-1,44,43,28,-1,28,29,44,-1,5,4,7,-1,7,6,5,-1,8,12,11,-1,11,10,8,-1,14,13,16,-1,16,15,14,-1,17,23,19,-1,19,18,17,-1,48,47,83,-1,83,84,48,-1,47,56,85,-1,85,83,47,-1,57,86,85,-1,85,56,57,-1,58,87,86,-1,86,57,58,-1,32,79,87,-1,87,58,32,-1,80,79,32,-1,32,33,80,-1,34,81,80,-1,80,33,34,-1,81,34,35,-1,35,82,81,-1,48,59,47,-1,47,59,56,-1,56,59,57,-1,57,59,58,-1,58,37,32,-1,32,37,33,-1,33,37,34,-1,34,37,35,-1,62,61,60,-1,60,63,62,-1,14,39,38,-1,38,40,14,-1,41,13,14,-1,14,40,41,-1,4,13,41,-1,41,42,4,-1,42,45,7,-1,7,4,42,-1,64,28,43,-1,43,65,64,-1,64,66,31,-1,31,28,64,-1,31,66,63,-1,63,60,31,-1,63,67,62,-1,38,46,40,-1,40,46,41,-1,41,46,42,-1,42,46,45,-1,65,67,64,-1,64,67,66,-1,66,67,63,-1,21,22,68,-1,68,69,21,-1,26,21,69,-1,69,70,26,-1,70,72,71,-1,71,26,70,-1,71,72,73,-1,73,74,71,-1,8,74,73,-1,73,50,8,-1,12,8,50,-1,50,51,12,-1,17,12,51,-1,51,52,17,-1,17,52,53,-1,53,23,17,-1,20,69,68,-1,68,49,20,-1,20,9,70,-1,70,69,20,-1,70,9,0,-1,0,72,70,-1,72,0,78,-1,78,73,72,-1,3,50,73,-1,73,78,3,-1,2,51,50,-1,50,3,2,-1,51,2,1,-1,1,52,51,-1,1,36,53,-1,53,52,1,-1,75,24,25,-1,25,76,75,-1,76,25,27,-1,27,30,76,-1,71,77,27,-1,27,26,71,-1,74,54,77,-1,77,71,74,-1,10,54,74,-1,74,8,10,-1,5,10,11,-1,11,16,5,-1,18,11,12,-1,12,17,18,-1,15,18,19,-1,19,55,15,-1,29,30,27,-1,27,77,29,-1,54,44,29,-1,29,77,54,-1,10,5,6,-1,6,54,10,-1,15,16,11,-1,11,18,15,-1,61,75,76,-1,76,60,61,-1,60,76,30,-1,30,31,60,-1,4,5,16,-1,16,13,4,-1,14,15,55,-1,55,39,14,-1], Java.type("int[]")))
                          .setCoord(new Coordinate().setPoint(Java.to([doubleToFloat(-0.896),doubleToFloat(-3.458),doubleToFloat(-0.7733),doubleToFloat(-1.43),doubleToFloat(-3.283),doubleToFloat(0.0723),doubleToFloat(-1.163),doubleToFloat(-7.27),doubleToFloat(0.0721),doubleToFloat(-0.7935),doubleToFloat(-7.267),doubleToFloat(-0.5416),doubleToFloat(0.0234),doubleToFloat(-3.843),doubleToFloat(-1.144),doubleToFloat(0.0262),doubleToFloat(-7.3),doubleToFloat(-0.8983),doubleToFloat(0.6588),doubleToFloat(-7.609),doubleToFloat(-0.4491),doubleToFloat(0.7822),doubleToFloat(-7.049),doubleToFloat(-0.481),doubleToFloat(0.025),doubleToFloat(-7.07),doubleToFloat(-0.8149),doubleToFloat(0.0233),doubleToFloat(-7.631),doubleToFloat(-0.7795),doubleToFloat(0.922),doubleToFloat(-7.614),doubleToFloat(0.0729),doubleToFloat(1.098),doubleToFloat(-7.053),doubleToFloat(0.0729),doubleToFloat(0.6588),doubleToFloat(-7.612),doubleToFloat(0.6263),doubleToFloat(0.7823),doubleToFloat(-7.05),doubleToFloat(0.6527),doubleToFloat(0.9427),doubleToFloat(-4.174),doubleToFloat(0.8667),doubleToFloat(0.8457),doubleToFloat(-7.28),doubleToFloat(0.7082),doubleToFloat(0.0234),doubleToFloat(-7.282),doubleToFloat(1.066),doubleToFloat(0.0234),doubleToFloat(-3.825),doubleToFloat(1.273),doubleToFloat(0.0233),doubleToFloat(-7.623),doubleToFloat(0.9572),doubleToFloat(-0.6122),doubleToFloat(-7.612),doubleToFloat(0.6263),doubleToFloat(-0.7325),doubleToFloat(-7.043),doubleToFloat(0.6513),doubleToFloat(0.0233),doubleToFloat(-7.057),doubleToFloat(0.9867),doubleToFloat(-0.896),doubleToFloat(-3.452),doubleToFloat(0.8897),doubleToFloat(-0.7936),doubleToFloat(-7.266),doubleToFloat(0.7058),doubleToFloat(-0.896),doubleToFloat(-0.0257),doubleToFloat(-0.9221),doubleToFloat(-0.7144),doubleToFloat(0.4948),doubleToFloat(-0.6658),doubleToFloat(-1.02),doubleToFloat(0.4948),doubleToFloat(0.0721),doubleToFloat(-1.277),doubleToFloat(-0.0257),doubleToFloat(0.0721),doubleToFloat(0.0236),doubleToFloat(-0.0257),doubleToFloat(-1.334),doubleToFloat(0.0236),doubleToFloat(0.4948),doubleToFloat(-0.9714),doubleToFloat(0.9432),doubleToFloat(-0.0257),doubleToFloat(-0.9221),doubleToFloat(0.7615),doubleToFloat(0.4948),doubleToFloat(-0.6658),doubleToFloat(1.324),doubleToFloat(-0.0257),doubleToFloat(0.0721),doubleToFloat(1.067),doubleToFloat(0.4948),doubleToFloat(0.0721),doubleToFloat(0.9432),doubleToFloat(-0.0257),doubleToFloat(0.9219),doubleToFloat(0.7615),doubleToFloat(0.4948),doubleToFloat(0.8099),doubleToFloat(0.0236),doubleToFloat(-0.0257),doubleToFloat(1.334),doubleToFloat(0.0236),doubleToFloat(0.4948),doubleToFloat(1.116),doubleToFloat(-0.896),doubleToFloat(-0.0257),doubleToFloat(0.9219),doubleToFloat(-0.7144),doubleToFloat(0.4948),doubleToFloat(0.8099),doubleToFloat(0.0236),doubleToFloat(0.931),doubleToFloat(0.0721),doubleToFloat(-0.6122),doubleToFloat(-7.609),doubleToFloat(-0.4491),doubleToFloat(-0.8754),doubleToFloat(-7.614),doubleToFloat(0.0729),doubleToFloat(-0.583),doubleToFloat(-8.086),doubleToFloat(0.0729),doubleToFloat(-0.4054),doubleToFloat(-8.063),doubleToFloat(-0.1612),doubleToFloat(-0.4054),doubleToFloat(-8.076),doubleToFloat(0.3527),doubleToFloat(0.0233),doubleToFloat(-8.083),doubleToFloat(0.5759),doubleToFloat(0.452),doubleToFloat(-8.076),doubleToFloat(0.3527),doubleToFloat(0.6297),doubleToFloat(-8.086),doubleToFloat(0.0729),doubleToFloat(0.452),doubleToFloat(-8.063),doubleToFloat(-0.1612),doubleToFloat(0.0233),doubleToFloat(-8.078),doubleToFloat(-0.3841),doubleToFloat(0.0233),doubleToFloat(-8.424),doubleToFloat(0.0729),doubleToFloat(-1.403),doubleToFloat(-0.6344),doubleToFloat(0.0721),doubleToFloat(-0.9954),doubleToFloat(-0.506),doubleToFloat(-0.8653),doubleToFloat(0.02),doubleToFloat(-0.506),doubleToFloat(-1.277),doubleToFloat(0.9426),doubleToFloat(-4.179),doubleToFloat(-0.7253),doubleToFloat(1.041),doubleToFloat(-0.506),doubleToFloat(-0.8653),doubleToFloat(1.43),doubleToFloat(-0.6344),doubleToFloat(0.0721),doubleToFloat(1.323),doubleToFloat(-4.321),doubleToFloat(0.0723),doubleToFloat(1.018),doubleToFloat(-0.6344),doubleToFloat(0.9221),doubleToFloat(0.0236),doubleToFloat(-0.6344),doubleToFloat(1.334),doubleToFloat(-0.9707),doubleToFloat(-0.6344),doubleToFloat(0.9221),doubleToFloat(-1.063),doubleToFloat(-7.046),doubleToFloat(0.0729),doubleToFloat(-0.7325),doubleToFloat(-7.042),doubleToFloat(-0.4818),doubleToFloat(0.8456),doubleToFloat(-7.281),doubleToFloat(-0.5402),doubleToFloat(1.188),doubleToFloat(-7.284),doubleToFloat(0.0721)], Java.type("float[]"))))
                          .setTexCoord(new TextureCoordinate().setPoint(Java.to([doubleToFloat(0.6214),doubleToFloat(1.732),doubleToFloat(0.7319),doubleToFloat(1.729),doubleToFloat(0.7045),doubleToFloat(1.73),doubleToFloat(0.6763),doubleToFloat(1.731),doubleToFloat(0.6737),doubleToFloat(1.57),doubleToFloat(0.6695),doubleToFloat(1.581),doubleToFloat(0.6525),doubleToFloat(1.578),doubleToFloat(0.6596),doubleToFloat(1.565),doubleToFloat(0.672),doubleToFloat(1.648),doubleToFloat(0.5944),doubleToFloat(1.731),doubleToFloat(0.669),doubleToFloat(1.585),doubleToFloat(0.692),doubleToFloat(1.585),doubleToFloat(0.6985),doubleToFloat(1.654),doubleToFloat(0.6909),doubleToFloat(1.571),doubleToFloat(0.7076),doubleToFloat(1.568),doubleToFloat(0.7136),doubleToFloat(1.579),doubleToFloat(0.6917),doubleToFloat(1.581),doubleToFloat(0.7251),doubleToFloat(1.66),doubleToFloat(0.7149),doubleToFloat(1.583),doubleToFloat(0.7334),doubleToFloat(1.58),doubleToFloat(0.5663),doubleToFloat(1.733),doubleToFloat(0.5738),doubleToFloat(1.66),doubleToFloat(0.5479),doubleToFloat(1.661),doubleToFloat(0.7502),doubleToFloat(1.661),doubleToFloat(0.5667),doubleToFloat(1.581),doubleToFloat(0.5849),doubleToFloat(1.584),doubleToFloat(0.6006),doubleToFloat(1.655),doubleToFloat(0.6078),doubleToFloat(1.585),doubleToFloat(0.6259),doubleToFloat(1.57),doubleToFloat(0.6303),doubleToFloat(1.581),doubleToFloat(0.6081),doubleToFloat(1.582),doubleToFloat(0.6088),doubleToFloat(1.572),doubleToFloat(0.6784),doubleToFloat(1.72),doubleToFloat(0.6987),doubleToFloat(1.718),doubleToFloat(0.715),doubleToFloat(1.723),doubleToFloat(0.7248),doubleToFloat(1.738),doubleToFloat(0.7566),doubleToFloat(1.727),doubleToFloat(0.6922),doubleToFloat(1.739),doubleToFloat(0.7083),doubleToFloat(1.553),doubleToFloat(0.7208),doubleToFloat(1.562),doubleToFloat(0.7017),doubleToFloat(1.557),doubleToFloat(0.69),doubleToFloat(1.561),doubleToFloat(0.6778),doubleToFloat(1.559),doubleToFloat(0.6394),doubleToFloat(1.565),doubleToFloat(0.6467),doubleToFloat(1.578),doubleToFloat(0.6707),doubleToFloat(1.555),doubleToFloat(0.6891),doubleToFloat(1.549),doubleToFloat(0.5851),doubleToFloat(1.722),doubleToFloat(0.5744),doubleToFloat(1.738),doubleToFloat(0.5383),doubleToFloat(1.729),doubleToFloat(0.6749),doubleToFloat(1.719),doubleToFloat(0.7035),doubleToFloat(1.718),doubleToFloat(0.732),doubleToFloat(1.717),doubleToFloat(0.7566),doubleToFloat(1.715),doubleToFloat(0.6497),doubleToFloat(1.584),doubleToFloat(0.73),doubleToFloat(1.574),doubleToFloat(0.6021),doubleToFloat(1.717),doubleToFloat(0.6226),doubleToFloat(1.719),doubleToFloat(0.6477),doubleToFloat(1.727),doubleToFloat(0.6092),doubleToFloat(1.739),doubleToFloat(0.5919),doubleToFloat(1.569),doubleToFloat(0.5792),doubleToFloat(1.563),doubleToFloat(0.5915),doubleToFloat(1.554),doubleToFloat(0.5975),doubleToFloat(1.558),doubleToFloat(0.6219),doubleToFloat(1.559),doubleToFloat(0.6284),doubleToFloat(1.556),doubleToFloat(0.6095),doubleToFloat(1.561),doubleToFloat(0.6103),doubleToFloat(1.55),doubleToFloat(0.5395),doubleToFloat(1.716),doubleToFloat(0.5658),doubleToFloat(1.721),doubleToFloat(0.5946),doubleToFloat(1.722),doubleToFloat(0.6275),doubleToFloat(1.648),doubleToFloat(0.6242),doubleToFloat(1.723),doubleToFloat(0.6504),doubleToFloat(1.719),doubleToFloat(0.6499),doubleToFloat(1.645),doubleToFloat(0.5702),doubleToFloat(1.575),doubleToFloat(0.5861),doubleToFloat(1.579),doubleToFloat(0.6308),doubleToFloat(1.586),doubleToFloat(0.6503),doubleToFloat(1.731),doubleToFloat(0.6767),doubleToFloat(1.711),doubleToFloat(0.7018),doubleToFloat(1.71),doubleToFloat(0.7234),doubleToFloat(1.719),doubleToFloat(0.7395),doubleToFloat(1.728),doubleToFloat(0.577),doubleToFloat(1.712),doubleToFloat(0.5523),doubleToFloat(1.731),doubleToFloat(0.5995),doubleToFloat(1.706),doubleToFloat(0.6239),doubleToFloat(1.709),doubleToFloat(0.6527),doubleToFloat(1.716)], Java.type("float[]"))))))))
                  .addChild(new HAnimJoint("hanim_r_elbow").setName("r_radiocarpal").setDEF("hanim_r_radiocarpal").setCenter(Java.to([doubleToFloat(-6.946),doubleToFloat(30.889999),doubleToFloat(-1.308)], Java.type("float[]")))
                    .addChild(new HAnimSegment("hanim_r_radiocarpal").setName("r_carpal").setDEF("hanim_r_carpal")
                      .addChild(new Transform().setTranslation(Java.to([doubleToFloat(-6.946),doubleToFloat(30.889999),doubleToFloat(-1.308)], Java.type("float[]")))
                        .addChild(new Shape()
                          .setAppearance(new Appearance()
                            .setMaterial(new Material().setDiffuseColor(Java.to([doubleToFloat(0.588),doubleToFloat(0.588),doubleToFloat(0.588)], Java.type("float[]"))))
                            .setTexture(new ImageTexture().setUSE("SunTextureAtlas")))
                          .setGeometry(new IndexedFaceSet().setCoordIndex(Java.to([3,2,1,-1,1,0,3,-1,5,4,7,-1,7,6,5,-1,9,8,11,-1,11,10,9,-1,9,10,13,-1,13,12,9,-1,15,14,17,-1,17,16,15,-1,16,19,18,-1,18,15,16,-1,3,0,10,-1,10,11,3,-1,10,0,1,-1,1,13,10,-1,16,17,21,-1,21,20,16,-1,20,2,19,-1,19,16,20,-1,7,8,9,-1,9,6,7,-1,5,6,9,-1,9,12,5,-1,15,23,22,-1,22,14,15,-1,18,4,23,-1,23,15,18,-1,21,1,2,-1,2,20,21,-1,23,4,5,-1,5,22,23,-1,12,13,17,-1,17,14,12,-1,26,25,24,-1,24,27,26,-1,21,17,13,-1,13,1,21,-1,11,19,2,-1,2,3,11,-1,22,5,12,-1,12,14,22,-1,4,18,8,-1,8,7,4,-1,25,11,8,-1,8,24,25,-1,11,25,26,-1,26,19,11,-1,19,26,27,-1,27,18,19,-1,18,27,24,-1,24,8,18,-1], Java.type("int[]"))).setCreaseAngle(1.57).setTexCoordIndex(Java.to([3,2,1,-1,1,0,3,-1,28,5,4,-1,4,29,28,-1,9,8,11,-1,11,10,9,-1,9,10,13,-1,13,12,9,-1,39,38,41,-1,41,40,39,-1,16,19,18,-1,18,15,16,-1,3,0,10,-1,10,11,3,-1,10,0,1,-1,1,13,10,-1,40,41,43,-1,43,42,40,-1,20,2,19,-1,19,16,20,-1,7,8,9,-1,9,6,7,-1,28,29,30,-1,30,31,28,-1,39,23,22,-1,22,38,39,-1,33,5,32,-1,32,34,33,-1,21,1,2,-1,2,20,21,-1,32,5,28,-1,28,35,32,-1,12,13,17,-1,17,14,12,-1,26,25,24,-1,24,27,26,-1,21,17,13,-1,13,1,21,-1,11,19,2,-1,2,3,11,-1,35,28,31,-1,31,36,35,-1,5,33,37,-1,37,4,5,-1,25,11,8,-1,8,24,25,-1,11,25,26,-1,26,19,11,-1,19,26,27,-1,27,18,19,-1,18,27,24,-1,24,8,18,-1], Java.type("int[]")))
                            .setCoord(new Coordinate().setPoint(Java.to([doubleToFloat(-0.8369),doubleToFloat(-0.0091),doubleToFloat(0.7613),doubleToFloat(-1.046),doubleToFloat(-0.0091),doubleToFloat(0.2822),doubleToFloat(0.7102),doubleToFloat(-0.0091),doubleToFloat(0.2822),doubleToFloat(0.6365),doubleToFloat(-0.0091),doubleToFloat(0.7613),doubleToFloat(0.8285),doubleToFloat(-2.66),doubleToFloat(0.2822),doubleToFloat(-1.164),doubleToFloat(-2.992),doubleToFloat(0.2822),doubleToFloat(-0.9362),doubleToFloat(-2.714),doubleToFloat(1.233),doubleToFloat(0.7358),doubleToFloat(-2.435),doubleToFloat(1.233),doubleToFloat(1.07),doubleToFloat(-1.907),doubleToFloat(1.233),doubleToFloat(-1.27),doubleToFloat(-1.907),doubleToFloat(1.233),doubleToFloat(-1.27),doubleToFloat(-0.5983),doubleToFloat(1.233),doubleToFloat(1.07),doubleToFloat(-0.5983),doubleToFloat(1.233),doubleToFloat(-1.563),doubleToFloat(-2.03),doubleToFloat(0.2822),doubleToFloat(-1.563),doubleToFloat(-0.5489),doubleToFloat(0.2822),doubleToFloat(-1.338),doubleToFloat(-1.908),doubleToFloat(-1.198),doubleToFloat(1.002),doubleToFloat(-1.908),doubleToFloat(-1.198),doubleToFloat(1.002),doubleToFloat(-0.5991),doubleToFloat(-1.198),doubleToFloat(-1.338),doubleToFloat(-0.5991),doubleToFloat(-1.198),doubleToFloat(1.227),doubleToFloat(-2.03),doubleToFloat(0.2822),doubleToFloat(1.227),doubleToFloat(-0.5489),doubleToFloat(0.2822),doubleToFloat(0.5688),doubleToFloat(-0.0091),doubleToFloat(-0.7264),doubleToFloat(-0.9047),doubleToFloat(-0.0091),doubleToFloat(-0.7264),doubleToFloat(-1.004),doubleToFloat(-2.714),doubleToFloat(-1.198),doubleToFloat(0.668),doubleToFloat(-2.436),doubleToFloat(-1.198),doubleToFloat(1.552),doubleToFloat(-1.761),doubleToFloat(1.073),doubleToFloat(1.552),doubleToFloat(-0.7447),doubleToFloat(1.073),doubleToFloat(1.802),doubleToFloat(-0.7234),doubleToFloat(0.4415),doubleToFloat(1.802),doubleToFloat(-1.856),doubleToFloat(0.4415)], Java.type("float[]"))))
                            .setTexCoord(new TextureCoordinate().setPoint(Java.to([doubleToFloat(0.2291),doubleToFloat(0.4554),doubleToFloat(0.2379),doubleToFloat(0.4639),doubleToFloat(0.1638),doubleToFloat(0.4639),doubleToFloat(0.1669),doubleToFloat(0.4554),doubleToFloat(0.1055),doubleToFloat(0.4675),doubleToFloat(0.0703),doubleToFloat(0.4694),doubleToFloat(0.2333),doubleToFloat(0.3582),doubleToFloat(0.1628),doubleToFloat(0.3683),doubleToFloat(0.1487),doubleToFloat(0.3875),doubleToFloat(0.2473),doubleToFloat(0.3875),doubleToFloat(0.2473),doubleToFloat(0.435),doubleToFloat(0.1487),doubleToFloat(0.435),doubleToFloat(0.2598),doubleToFloat(0.383),doubleToFloat(0.2598),doubleToFloat(0.4396),doubleToFloat(0.2502),doubleToFloat(0.3875),doubleToFloat(0.1477),doubleToFloat(0.3875),doubleToFloat(0.1477),doubleToFloat(0.435),doubleToFloat(0.2502),doubleToFloat(0.435),doubleToFloat(0.1383),doubleToFloat(0.383),doubleToFloat(0.1383),doubleToFloat(0.4396),doubleToFloat(0.1698),doubleToFloat(0.4554),doubleToFloat(0.232),doubleToFloat(0.4554),doubleToFloat(0.2362),doubleToFloat(0.3582),doubleToFloat(0.1657),doubleToFloat(0.3683),doubleToFloat(0.1283),doubleToFloat(0.3928),doubleToFloat(0.1283),doubleToFloat(0.4296),doubleToFloat(0.1178),doubleToFloat(0.4333),doubleToFloat(0.1178),doubleToFloat(0.3894),doubleToFloat(0.0685),doubleToFloat(0.4095),doubleToFloat(0.1043),doubleToFloat(0.4119),doubleToFloat(0.1041),doubleToFloat(0.3824),doubleToFloat(0.0691),doubleToFloat(0.3798),doubleToFloat(0.0184),doubleToFloat(0.4681),doubleToFloat(0.0704),doubleToFloat(0.4904),doubleToFloat(0.0183),doubleToFloat(0.4889),doubleToFloat(0.0176),doubleToFloat(0.4121),doubleToFloat(0.018),doubleToFloat(0.3832),doubleToFloat(0.1056),doubleToFloat(0.489),doubleToFloat(0.2502),doubleToFloat(0.3875),doubleToFloat(0.1515),doubleToFloat(0.3875),doubleToFloat(0.1515),doubleToFloat(0.435),doubleToFloat(0.2502),doubleToFloat(0.435),doubleToFloat(0.1698),doubleToFloat(0.4554),doubleToFloat(0.232),doubleToFloat(0.4554)], Java.type("float[]")))))))))))
              .addChild(new HAnimJoint("hanim_sacroiliac").setName("vl5").setDEF("hanim_vl5").setCenter(Java.to([doubleToFloat(0.05249),doubleToFloat(34.130001),doubleToFloat(-0.468)], Java.type("float[]")))
                .addChild(new HAnimSegment("hanim_vl5").setName("l5").setDEF("hanim_l5")
                  .addChild(new Transform().setTranslation(Java.to([doubleToFloat(0.05249),doubleToFloat(34.130001),doubleToFloat(-0.468)], Java.type("float[]")))
                    .addChild(new Shape()
                      .setAppearance(new Appearance()
                        .setMaterial(new Material().setDiffuseColor(Java.to([doubleToFloat(0.588),doubleToFloat(0.588),doubleToFloat(0.588)], Java.type("float[]"))))
                        .setTexture(new ImageTexture().setUSE("SunTextureAtlas")))
                      .setGeometry(new IndexedFaceSet().setCoordIndex(Java.to([0,1,2,-1,3,2,4,-1,2,3,5,-1,6,7,1,-1,7,3,4,-1,0,8,1,-1,8,6,1,-1,81,7,9,-1,9,80,81,-1,80,9,10,-1,10,83,80,-1,11,12,13,-1,13,85,11,-1,16,17,14,-1,14,15,16,-1,0,18,19,-1,19,8,0,-1,20,21,0,-1,0,2,20,-1,23,21,20,-1,20,22,23,-1,23,24,25,-1,25,21,23,-1,27,10,9,-1,9,26,27,-1,31,28,29,-1,29,30,31,-1,6,26,9,-1,31,26,6,-1,6,28,31,-1,8,28,6,-1,32,17,25,-1,25,24,32,-1,17,32,33,-1,33,14,17,-1,6,9,7,-1,24,23,67,-1,67,55,24,-1,24,55,56,-1,56,32,24,-1,19,29,28,-1,28,8,19,-1,22,68,67,-1,67,23,22,-1,5,36,20,-1,20,2,5,-1,35,22,20,-1,20,36,35,-1,81,3,7,-1,13,15,37,-1,37,85,13,-1,18,0,21,-1,21,25,18,-1,19,18,16,-1,16,38,19,-1,39,40,10,-1,10,27,39,-1,29,41,42,-1,42,30,29,-1,38,41,29,-1,29,19,38,-1,25,17,16,-1,16,18,25,-1,43,83,10,-1,10,40,43,-1,37,15,14,-1,14,116,37,-1,117,116,14,-1,14,33,117,-1,15,13,38,-1,38,16,15,-1,12,40,39,-1,39,45,12,-1,7,4,1,-1,1,4,2,-1,34,44,117,-1,117,33,34,-1,34,33,32,-1,12,11,43,-1,43,40,12,-1,12,45,38,-1,38,13,12,-1,31,30,27,-1,27,26,31,-1,39,27,30,-1,30,42,39,-1,45,39,42,-1,42,41,45,-1,45,41,38,-1,46,47,48,-1,48,49,46,-1,69,70,50,-1,50,51,69,-1,46,49,51,-1,51,50,46,-1,52,53,49,-1,49,48,52,-1,48,128,129,-1,129,52,48,-1,51,49,53,-1,53,54,51,-1,34,32,56,-1,56,57,34,-1,68,22,35,-1,35,132,68,-1,44,34,57,-1,57,58,44,-1,61,62,57,-1,57,56,61,-1,64,68,132,-1,132,63,64,-1,62,65,58,-1,58,57,62,-1,66,60,59,-1,59,64,66,-1,139,66,64,-1,64,63,139,-1,62,66,139,-1,139,65,62,-1,62,61,60,-1,60,66,62,-1,59,60,55,-1,55,67,59,-1,55,60,61,-1,61,56,55,-1,68,64,59,-1,59,67,68,-1,48,47,140,-1,140,128,48,-1,51,54,71,-1,71,69,51,-1,72,74,73,-1,3,75,74,-1,74,5,3,-1,76,73,77,-1,77,75,3,-1,72,73,78,-1,78,73,76,-1,81,80,79,-1,79,77,81,-1,80,83,82,-1,82,79,80,-1,11,85,84,-1,84,86,11,-1,89,88,87,-1,87,90,89,-1,72,78,91,-1,91,92,72,-1,93,74,72,-1,72,94,93,-1,96,95,93,-1,93,94,96,-1,96,94,97,-1,97,98,96,-1,100,99,79,-1,79,82,100,-1,103,102,101,-1,101,104,103,-1,76,79,99,-1,103,104,76,-1,76,99,103,-1,78,76,104,-1,105,98,97,-1,97,90,105,-1,90,87,106,-1,106,105,90,-1,76,77,79,-1,98,108,107,-1,107,96,98,-1,98,105,109,-1,109,108,98,-1,91,78,104,-1,104,101,91,-1,95,96,107,-1,107,110,95,-1,5,74,93,-1,93,36,5,-1,35,36,93,-1,93,95,35,-1,81,77,3,-1,84,85,37,-1,37,88,84,-1,92,97,94,-1,94,72,92,-1,91,111,89,-1,89,92,91,-1,112,100,82,-1,82,113,112,-1,101,102,114,-1,114,115,101,-1,111,91,101,-1,101,115,111,-1,97,92,89,-1,89,90,97,-1,43,113,82,-1,82,83,43,-1,37,116,87,-1,87,88,37,-1,117,106,87,-1,87,116,117,-1,88,89,111,-1,111,84,88,-1,86,118,112,-1,112,113,86,-1,77,73,75,-1,73,74,75,-1,119,106,117,-1,117,44,119,-1,119,105,106,-1,86,113,43,-1,43,11,86,-1,86,84,111,-1,111,118,86,-1,103,99,100,-1,100,102,103,-1,112,114,102,-1,102,100,112,-1,118,115,114,-1,114,112,118,-1,118,111,115,-1,122,121,120,-1,120,123,122,-1,69,124,125,-1,125,70,69,-1,122,125,124,-1,124,121,122,-1,126,120,121,-1,121,127,126,-1,120,126,129,-1,129,128,120,-1,124,130,127,-1,127,121,124,-1,119,131,109,-1,109,105,119,-1,110,132,35,-1,35,95,110,-1,44,58,131,-1,131,119,44,-1,133,109,131,-1,131,134,133,-1,135,63,132,-1,132,110,135,-1,134,131,58,-1,58,65,134,-1,137,135,136,-1,136,138,137,-1,139,63,135,-1,135,137,139,-1,134,65,139,-1,139,137,134,-1,134,137,138,-1,138,133,134,-1,136,107,108,-1,108,138,136,-1,108,109,133,-1,133,138,108,-1,110,107,136,-1,136,135,110,-1,120,128,140,-1,140,123,120,-1,124,69,71,-1,71,130,124,-1], Java.type("int[]"))).setCreaseAngle(1.57).setTexCoordIndex(Java.to([0,1,2,-1,3,2,4,-1,2,3,5,-1,6,7,1,-1,7,3,4,-1,0,8,1,-1,8,6,1,-1,11,7,9,-1,9,10,11,-1,10,9,12,-1,12,13,10,-1,11,15,14,-1,14,3,11,-1,18,19,16,-1,16,17,18,-1,0,21,20,-1,20,8,0,-1,22,23,0,-1,0,2,22,-1,25,23,22,-1,22,24,25,-1,25,121,26,-1,26,23,25,-1,29,12,9,-1,9,28,29,-1,32,33,30,-1,30,31,32,-1,6,28,9,-1,32,28,6,-1,6,33,32,-1,8,33,6,-1,34,19,26,-1,26,27,34,-1,19,34,35,-1,35,16,19,-1,6,9,7,-1,121,25,36,-1,36,122,121,-1,27,37,38,-1,38,34,27,-1,20,30,33,-1,33,8,20,-1,24,39,36,-1,36,25,24,-1,5,40,22,-1,22,2,5,-1,41,24,22,-1,22,40,41,-1,11,3,7,-1,14,17,5,-1,5,3,14,-1,21,0,23,-1,23,26,21,-1,20,21,18,-1,18,42,20,-1,43,44,12,-1,12,29,43,-1,30,46,45,-1,45,31,30,-1,42,46,30,-1,30,20,42,-1,26,19,18,-1,18,21,26,-1,47,13,12,-1,12,44,47,-1,5,17,16,-1,16,40,5,-1,48,40,16,-1,16,35,48,-1,17,14,42,-1,42,18,17,-1,15,44,43,-1,43,49,15,-1,7,4,1,-1,1,4,2,-1,50,41,48,-1,48,35,50,-1,50,35,34,-1,15,11,47,-1,47,44,15,-1,15,49,42,-1,42,14,15,-1,32,31,29,-1,29,28,32,-1,43,29,31,-1,31,45,43,-1,49,43,45,-1,45,46,49,-1,49,46,42,-1,51,52,53,-1,53,54,51,-1,84,85,55,-1,55,56,84,-1,51,54,56,-1,56,55,51,-1,53,54,54,-1,54,53,53,-1,53,82,86,-1,86,53,53,-1,56,54,54,-1,54,56,56,-1,50,34,38,-1,38,57,50,-1,39,24,41,-1,41,41,39,-1,41,50,57,-1,57,41,41,-1,58,59,57,-1,57,38,58,-1,61,39,41,-1,41,60,61,-1,59,60,41,-1,41,57,59,-1,63,64,62,-1,62,61,63,-1,65,63,61,-1,61,60,65,-1,59,63,65,-1,65,60,59,-1,59,58,64,-1,64,63,59,-1,62,64,122,-1,122,36,62,-1,37,64,58,-1,58,38,37,-1,39,61,62,-1,62,36,39,-1,53,52,83,-1,83,82,53,-1,56,56,87,-1,87,84,56,-1,66,67,68,-1,3,69,67,-1,67,5,3,-1,70,68,71,-1,71,69,3,-1,66,68,72,-1,72,68,70,-1,11,10,73,-1,73,71,11,-1,10,13,74,-1,74,73,10,-1,11,3,75,-1,75,76,11,-1,79,80,77,-1,77,78,79,-1,66,72,81,-1,81,88,66,-1,90,67,66,-1,66,89,90,-1,91,92,90,-1,90,89,91,-1,91,89,93,-1,93,123,91,-1,95,96,73,-1,73,74,95,-1,99,100,97,-1,97,98,99,-1,70,73,96,-1,99,98,70,-1,70,96,99,-1,72,70,98,-1,101,94,93,-1,93,78,101,-1,78,77,102,-1,102,101,78,-1,70,71,73,-1,123,124,104,-1,104,91,123,-1,94,101,105,-1,105,103,94,-1,81,72,98,-1,98,97,81,-1,92,91,104,-1,104,106,92,-1,5,67,90,-1,90,40,5,-1,41,40,90,-1,90,92,41,-1,11,71,3,-1,75,3,5,-1,5,80,75,-1,88,93,89,-1,89,66,88,-1,81,107,79,-1,79,88,81,-1,109,95,74,-1,74,108,109,-1,97,100,110,-1,110,111,97,-1,107,81,97,-1,97,111,107,-1,93,88,79,-1,79,78,93,-1,47,108,74,-1,74,13,47,-1,5,40,77,-1,77,80,5,-1,48,102,77,-1,77,40,48,-1,80,79,107,-1,107,75,80,-1,76,112,109,-1,109,108,76,-1,71,68,69,-1,68,67,69,-1,113,102,48,-1,48,41,113,-1,113,101,102,-1,76,108,47,-1,47,11,76,-1,76,75,107,-1,107,112,76,-1,99,96,95,-1,95,100,99,-1,109,110,100,-1,100,95,109,-1,112,111,110,-1,110,109,112,-1,112,107,111,-1,127,126,125,-1,125,128,127,-1,130,129,132,-1,132,131,130,-1,127,132,129,-1,129,126,127,-1,125,125,126,-1,126,126,125,-1,125,125,134,-1,134,133,125,-1,129,129,126,-1,126,126,129,-1,113,114,105,-1,105,101,113,-1,106,41,41,-1,41,92,106,-1,41,41,114,-1,114,113,41,-1,115,105,114,-1,114,116,115,-1,117,60,41,-1,41,106,117,-1,116,114,41,-1,41,60,116,-1,120,117,118,-1,118,119,120,-1,65,60,117,-1,117,120,65,-1,116,60,65,-1,65,120,116,-1,116,120,119,-1,119,115,116,-1,118,104,124,-1,124,119,118,-1,103,105,115,-1,115,119,103,-1,106,104,118,-1,118,117,106,-1,125,133,135,-1,135,128,125,-1,129,130,136,-1,136,129,129,-1], Java.type("int[]")))
                        .setCoord(new Coordinate().setPoint(Java.to([doubleToFloat(4.454),doubleToFloat(6.394),doubleToFloat(1.888),doubleToFloat(4.618),doubleToFloat(8.543),doubleToFloat(2.843),doubleToFloat(2.505),doubleToFloat(6.424),doubleToFloat(3.401),doubleToFloat(-0.0525),doubleToFloat(8.865),doubleToFloat(3.058),doubleToFloat(2.907),doubleToFloat(8.739),doubleToFloat(3.501),doubleToFloat(-0.0525),doubleToFloat(6.579),doubleToFloat(3.375),doubleToFloat(4.503),doubleToFloat(11.18),doubleToFloat(1.774),doubleToFloat(2.559),doubleToFloat(11.2),doubleToFloat(2.513),doubleToFloat(5.288),doubleToFloat(8.66),doubleToFloat(1.686),doubleToFloat(2.572),doubleToFloat(14.37),doubleToFloat(0.762),doubleToFloat(3.084),doubleToFloat(14.78),doubleToFloat(-0.7761),doubleToFloat(-0.0525),doubleToFloat(11.54),doubleToFloat(-3.168),doubleToFloat(2.713),doubleToFloat(11.37),doubleToFloat(-3.061),doubleToFloat(2.519),doubleToFloat(8.947),doubleToFloat(-3.394),doubleToFloat(2.296),doubleToFloat(3.196),doubleToFloat(-2.751),doubleToFloat(2.433),doubleToFloat(6.093),doubleToFloat(-3.125),doubleToFloat(4.443),doubleToFloat(6.093),doubleToFloat(-2.609),doubleToFloat(4.441),doubleToFloat(3.26),doubleToFloat(-1.876),doubleToFloat(4.798),doubleToFloat(6.24),doubleToFloat(-0.4598),doubleToFloat(5.297),doubleToFloat(8.754),doubleToFloat(-0.6018),doubleToFloat(2.586),doubleToFloat(3.205),doubleToFloat(3.53),doubleToFloat(4.405),doubleToFloat(2.971),doubleToFloat(2.014),doubleToFloat(2.546),doubleToFloat(-0.2983),doubleToFloat(3.174),doubleToFloat(5.021),doubleToFloat(-0.2466),doubleToFloat(1.609),doubleToFloat(5.611),doubleToFloat(-0.256),doubleToFloat(-0.2087),doubleToFloat(4.795),doubleToFloat(3.13),doubleToFloat(-0.2841),doubleToFloat(5.182),doubleToFloat(13.85),doubleToFloat(0.487),doubleToFloat(5.182),doubleToFloat(14.22),doubleToFloat(-0.7721),doubleToFloat(6.176),doubleToFloat(11.13),doubleToFloat(0.3197),doubleToFloat(6.431),doubleToFloat(11.09),doubleToFloat(-0.7003),doubleToFloat(6.741),doubleToFloat(13.76),doubleToFloat(-0.7542),doubleToFloat(6.358),doubleToFloat(13.74),doubleToFloat(0.3803),doubleToFloat(4.878),doubleToFloat(-0.2809),doubleToFloat(-1.933),doubleToFloat(2.54),doubleToFloat(0.2297),doubleToFloat(-3.055),doubleToFloat(2.978),doubleToFloat(-0.3402),doubleToFloat(-3.459),doubleToFloat(-0.0525),doubleToFloat(-0.4079),doubleToFloat(3.65),doubleToFloat(-0.0525),doubleToFloat(3.268),doubleToFloat(3.731),doubleToFloat(-0.0525),doubleToFloat(6.069),doubleToFloat(-3.502),doubleToFloat(4.842),doubleToFloat(8.857),doubleToFloat(-2.741),doubleToFloat(5.136),doubleToFloat(14.02),doubleToFloat(-1.964),doubleToFloat(2.907),doubleToFloat(14.62),doubleToFloat(-2.194),doubleToFloat(5.827),doubleToFloat(11.05),doubleToFloat(-2.238),doubleToFloat(5.686),doubleToFloat(13.4),doubleToFloat(-1.942),doubleToFloat(-0.0525),doubleToFloat(14.9),doubleToFloat(-2.279),doubleToFloat(-0.0525),doubleToFloat(-0.3848),doubleToFloat(-3.731),doubleToFloat(5.087),doubleToFloat(11.17),doubleToFloat(-2.785),doubleToFloat(1.708),doubleToFloat(14.19),doubleToFloat(-0.6462),doubleToFloat(1.186),doubleToFloat(14.19),doubleToFloat(-1.907),doubleToFloat(1.074),doubleToFloat(17.9),doubleToFloat(-1.793),doubleToFloat(1.549),doubleToFloat(17.9),doubleToFloat(-0.6462),doubleToFloat(1.186),doubleToFloat(14.19),doubleToFloat(0.615),doubleToFloat(1.074),doubleToFloat(17.9),doubleToFloat(0.501),doubleToFloat(0.6887),doubleToFloat(18.91),doubleToFloat(-1.408),doubleToFloat(1.004),doubleToFloat(18.91),doubleToFloat(-0.6462),doubleToFloat(0.6887),doubleToFloat(18.91),doubleToFloat(0.116),doubleToFloat(5.463),doubleToFloat(-0.1408),doubleToFloat(-0.2011),doubleToFloat(4.733),doubleToFloat(-0.1408),doubleToFloat(-1.898),doubleToFloat(2.827),doubleToFloat(-0.1408),doubleToFloat(-3.351),doubleToFloat(-0.0525),doubleToFloat(-0.1408),doubleToFloat(-3.565),doubleToFloat(4.459),doubleToFloat(-1.318),doubleToFloat(1.45),doubleToFloat(5),doubleToFloat(-1.893),doubleToFloat(-0.2086),doubleToFloat(4.585),doubleToFloat(-1.099),doubleToFloat(-1.774),doubleToFloat(2.444),doubleToFloat(-1.963),doubleToFloat(-2.571),doubleToFloat(-0.0525),doubleToFloat(-2.219),doubleToFloat(2.353),doubleToFloat(2.172),doubleToFloat(-1.976),doubleToFloat(2.18),doubleToFloat(-0.0525),doubleToFloat(-2.219),doubleToFloat(-2.845),doubleToFloat(2.308),doubleToFloat(-2.56),doubleToFloat(-0.2177),doubleToFloat(4.727),doubleToFloat(-0.1408),doubleToFloat(1.6),doubleToFloat(2.448),doubleToFloat(-0.1408),doubleToFloat(2.936),doubleToFloat(-0.0525),doubleToFloat(17.9),doubleToFloat(0.9675),doubleToFloat(-0.0525),doubleToFloat(14.19),doubleToFloat(1.128),doubleToFloat(-0.0525),doubleToFloat(18.91),doubleToFloat(0.423),doubleToFloat(-4.559),doubleToFloat(6.394),doubleToFloat(1.888),doubleToFloat(-4.722),doubleToFloat(8.543),doubleToFloat(2.843),doubleToFloat(-2.61),doubleToFloat(6.424),doubleToFloat(3.401),doubleToFloat(-3.012),doubleToFloat(8.739),doubleToFloat(3.501),doubleToFloat(-4.608),doubleToFloat(11.18),doubleToFloat(1.774),doubleToFloat(-2.664),doubleToFloat(11.2),doubleToFloat(2.513),doubleToFloat(-5.393),doubleToFloat(8.66),doubleToFloat(1.686),doubleToFloat(-2.676),doubleToFloat(14.37),doubleToFloat(0.762),doubleToFloat(-0.0525),doubleToFloat(14.51),doubleToFloat(1.033),doubleToFloat(-0.0525),doubleToFloat(11.36),doubleToFloat(2.188),doubleToFloat(-3.189),doubleToFloat(14.78),doubleToFloat(-0.7761),doubleToFloat(-0.0525),doubleToFloat(15.19),doubleToFloat(-0.8003),doubleToFloat(-2.624),doubleToFloat(8.947),doubleToFloat(-3.394),doubleToFloat(-0.0525),doubleToFloat(9.013),doubleToFloat(-3.525),doubleToFloat(-2.818),doubleToFloat(11.37),doubleToFloat(-3.061),doubleToFloat(-2.401),doubleToFloat(3.196),doubleToFloat(-2.751),doubleToFloat(-2.538),doubleToFloat(6.093),doubleToFloat(-3.125),doubleToFloat(-4.548),doubleToFloat(6.093),doubleToFloat(-2.609),doubleToFloat(-4.546),doubleToFloat(3.26),doubleToFloat(-1.876),doubleToFloat(-5.401),doubleToFloat(8.754),doubleToFloat(-0.6018),doubleToFloat(-4.903),doubleToFloat(6.24),doubleToFloat(-0.4598),doubleToFloat(-2.691),doubleToFloat(3.205),doubleToFloat(3.53),doubleToFloat(-4.51),doubleToFloat(2.971),doubleToFloat(2.014),doubleToFloat(-2.651),doubleToFloat(-0.2983),doubleToFloat(3.174),doubleToFloat(-5.126),doubleToFloat(-0.2466),doubleToFloat(1.609),doubleToFloat(-4.899),doubleToFloat(3.13),doubleToFloat(-0.2841),doubleToFloat(-5.716),doubleToFloat(-0.256),doubleToFloat(-0.2087),doubleToFloat(-5.341),doubleToFloat(13.85),doubleToFloat(0.487),doubleToFloat(-5.341),doubleToFloat(14.22),doubleToFloat(-0.7721),doubleToFloat(-6.589),doubleToFloat(11.09),doubleToFloat(-0.7003),doubleToFloat(-6.741),doubleToFloat(13.76),doubleToFloat(-0.7542),doubleToFloat(-6.358),doubleToFloat(13.74),doubleToFloat(0.3803),doubleToFloat(-6.335),doubleToFloat(11.13),doubleToFloat(0.3197),doubleToFloat(-4.983),doubleToFloat(-0.2809),doubleToFloat(-1.933),doubleToFloat(-2.645),doubleToFloat(0.2297),doubleToFloat(-3.055),doubleToFloat(-4.832),doubleToFloat(-0.1408),doubleToFloat(1.6),doubleToFloat(-5.568),doubleToFloat(-0.1408),doubleToFloat(-0.2011),doubleToFloat(-4.838),doubleToFloat(-0.1408),doubleToFloat(-1.898),doubleToFloat(-2.552),doubleToFloat(-0.1408),doubleToFloat(2.936),doubleToFloat(-4.947),doubleToFloat(8.857),doubleToFloat(-2.741),doubleToFloat(-5.294),doubleToFloat(14.02),doubleToFloat(-1.964),doubleToFloat(-3.012),doubleToFloat(14.62),doubleToFloat(-2.194),doubleToFloat(-6.16),doubleToFloat(13.69),doubleToFloat(-1.942),doubleToFloat(-5.985),doubleToFloat(11.05),doubleToFloat(-2.238),doubleToFloat(-0.0525),doubleToFloat(3.171),doubleToFloat(-3.179),doubleToFloat(-0.0525),doubleToFloat(0.3216),doubleToFloat(-3.478),doubleToFloat(-4.713),doubleToFloat(11.17),doubleToFloat(-2.785),doubleToFloat(-3.083),doubleToFloat(-0.3402),doubleToFloat(-3.459),doubleToFloat(-1.179),doubleToFloat(17.9),doubleToFloat(-1.793),doubleToFloat(-1.654),doubleToFloat(17.9),doubleToFloat(-0.6462),doubleToFloat(-1.813),doubleToFloat(14.19),doubleToFloat(-0.6462),doubleToFloat(-1.291),doubleToFloat(14.19),doubleToFloat(-1.907),doubleToFloat(-1.179),doubleToFloat(17.9),doubleToFloat(0.501),doubleToFloat(-1.291),doubleToFloat(14.19),doubleToFloat(0.615),doubleToFloat(-0.7937),doubleToFloat(18.91),doubleToFloat(-1.408),doubleToFloat(-1.109),doubleToFloat(18.91),doubleToFloat(-0.6462),doubleToFloat(-0.0525),doubleToFloat(17.9),doubleToFloat(-2.26),doubleToFloat(-0.0525),doubleToFloat(18.91),doubleToFloat(-1.715),doubleToFloat(-0.7937),doubleToFloat(18.91),doubleToFloat(0.116),doubleToFloat(-2.932),doubleToFloat(-0.1408),doubleToFloat(-3.351),doubleToFloat(-0.0525),doubleToFloat(-0.1408),doubleToFloat(3.431),doubleToFloat(-4.69),doubleToFloat(-1.099),doubleToFloat(-1.774),doubleToFloat(-2.549),doubleToFloat(-1.963),doubleToFloat(-2.571),doubleToFloat(-2.277),doubleToFloat(-1.976),doubleToFloat(2.18),doubleToFloat(-4.563),doubleToFloat(-1.318),doubleToFloat(1.45),doubleToFloat(-2.413),doubleToFloat(-2.56),doubleToFloat(-0.2177),doubleToFloat(-5.105),doubleToFloat(-1.893),doubleToFloat(-0.2086),doubleToFloat(-0.0525),doubleToFloat(-2.867),doubleToFloat(-0.2406),doubleToFloat(-0.0525),doubleToFloat(14.19),doubleToFloat(-2.42)], Java.type("float[]"))))
                        .setTexCoord(new TextureCoordinate().setPoint(Java.to([doubleToFloat(0.5258),doubleToFloat(0.7375),doubleToFloat(0.5404),doubleToFloat(0.7916),doubleToFloat(0.5892),doubleToFloat(0.738),doubleToFloat(0.6514),doubleToFloat(0.8021),doubleToFloat(0.5821),doubleToFloat(0.793),doubleToFloat(0.6519),doubleToFloat(0.7393),doubleToFloat(0.54),doubleToFloat(0.8589),doubleToFloat(0.5896),doubleToFloat(0.8555),doubleToFloat(0.5114),doubleToFloat(0.7983),doubleToFloat(0.587),doubleToFloat(0.9424),doubleToFloat(0.6514),doubleToFloat(0.9431),doubleToFloat(0.6509),doubleToFloat(0.8653),doubleToFloat(0.5677),doubleToFloat(0.9798),doubleToFloat(0.6498),doubleToFloat(0.9901),doubleToFloat(0.5867),doubleToFloat(0.8044),doubleToFloat(0.5828),doubleToFloat(0.8642),doubleToFloat(0.5891),doubleToFloat(0.6629),doubleToFloat(0.5874),doubleToFloat(0.7344),doubleToFloat(0.5358),doubleToFloat(0.7341),doubleToFloat(0.5294),doubleToFloat(0.6606),doubleToFloat(0.4728),doubleToFloat(0.7921),doubleToFloat(0.4823),doubleToFloat(0.7294),doubleToFloat(0.5893),doubleToFloat(0.6621),doubleToFloat(0.532),doubleToFloat(0.6516),doubleToFloat(0.5932),doubleToFloat(0.5649),doubleToFloat(0.5467),doubleToFloat(0.5572),doubleToFloat(0.4885),doubleToFloat(0.6535),doubleToFloat(0.5146),doubleToFloat(0.5441),doubleToFloat(0.5095),doubleToFloat(0.93),doubleToFloat(0.4974),doubleToFloat(0.9584),doubleToFloat(0.4499),doubleToFloat(0.8695),doubleToFloat(0.4667),doubleToFloat(0.9323),doubleToFloat(0.4925),doubleToFloat(0.9215),doubleToFloat(0.4737),doubleToFloat(0.8685),doubleToFloat(0.5438),doubleToFloat(0.5609),doubleToFloat(0.5871),doubleToFloat(0.591),doubleToFloat(0.5509),doubleToFloat(0.5507),doubleToFloat(0.5231),doubleToFloat(0.5335),doubleToFloat(0.5476),doubleToFloat(0.5547),doubleToFloat(0.5922),doubleToFloat(0.5601),doubleToFloat(0.6526),doubleToFloat(0.6648),doubleToFloat(0.6533),doubleToFloat(0.5684),doubleToFloat(0.5263),doubleToFloat(0.8036),doubleToFloat(0.5097),doubleToFloat(0.9327),doubleToFloat(0.5774),doubleToFloat(0.947),doubleToFloat(0.4959),doubleToFloat(0.919),doubleToFloat(0.4905),doubleToFloat(0.8623),doubleToFloat(0.6489),doubleToFloat(0.9534),doubleToFloat(0.6519),doubleToFloat(0.5959),doubleToFloat(0.5256),doubleToFloat(0.8609),doubleToFloat(0.5802),doubleToFloat(0.5627),doubleToFloat(0.2512),doubleToFloat(0.9262),doubleToFloat(0.2576),doubleToFloat(0.9262),doubleToFloat(0.2576),doubleToFloat(0.9782),doubleToFloat(0.2512),doubleToFloat(0.9782),doubleToFloat(0.2447),doubleToFloat(0.9262),doubleToFloat(0.2447),doubleToFloat(0.9782),doubleToFloat(0.5808),doubleToFloat(0.561),doubleToFloat(0.5377),doubleToFloat(0.5438),doubleToFloat(0.5908),doubleToFloat(0.5213),doubleToFloat(0.6539),doubleToFloat(0.5162),doubleToFloat(0.5995),doubleToFloat(0.5198),doubleToFloat(0.5437),doubleToFloat(0.5288),doubleToFloat(0.5808),doubleToFloat(0.4589),doubleToFloat(0.5107),doubleToFloat(0.498),doubleToFloat(0.6544),doubleToFloat(0.4462),doubleToFloat(0.7806),doubleToFloat(0.7397),doubleToFloat(0.7172),doubleToFloat(0.7391),doubleToFloat(0.7651),doubleToFloat(0.7935),doubleToFloat(0.7233),doubleToFloat(0.7942),doubleToFloat(0.7643),doubleToFloat(0.8608),doubleToFloat(0.7147),doubleToFloat(0.8566),doubleToFloat(0.794),doubleToFloat(0.8008),doubleToFloat(0.7159),doubleToFloat(0.9435),doubleToFloat(0.7321),doubleToFloat(0.9812),doubleToFloat(0.7136),doubleToFloat(0.8055),doubleToFloat(0.7165),doubleToFloat(0.8653),doubleToFloat(0.7135),doubleToFloat(0.664),doubleToFloat(0.7695),doubleToFloat(0.6641),doubleToFloat(0.7656),doubleToFloat(0.7361),doubleToFloat(0.714),doubleToFloat(0.7354),doubleToFloat(0.8277),doubleToFloat(0.7951),doubleToFloat(0.264),doubleToFloat(0.9782),doubleToFloat(0.264),doubleToFloat(0.9262),doubleToFloat(0.2383),doubleToFloat(0.9782),doubleToFloat(0.2383),doubleToFloat(0.9262),doubleToFloat(0.264),doubleToFloat(0.9782),doubleToFloat(0.2383),doubleToFloat(0.9782),doubleToFloat(0.8192),doubleToFloat(0.7323),doubleToFloat(0.7734),doubleToFloat(0.6523),doubleToFloat(0.7184),doubleToFloat(0.6632),doubleToFloat(0.7662),doubleToFloat(0.5624),doubleToFloat(0.7161),doubleToFloat(0.5662),doubleToFloat(0.8141),doubleToFloat(0.6563),doubleToFloat(0.7955),doubleToFloat(0.5617),doubleToFloat(0.8027),doubleToFloat(0.961),doubleToFloat(0.7935),doubleToFloat(0.9324),doubleToFloat(0.8517),doubleToFloat(0.8729),doubleToFloat(0.8305),doubleToFloat(0.8716),doubleToFloat(0.8107),doubleToFloat(0.9243),doubleToFloat(0.8339),doubleToFloat(0.9354),doubleToFloat(0.7591),doubleToFloat(0.5642),doubleToFloat(0.7168),doubleToFloat(0.592),doubleToFloat(0.7875),doubleToFloat(0.5273),doubleToFloat(0.7553),doubleToFloat(0.554),doubleToFloat(0.7563),doubleToFloat(0.5617),doubleToFloat(0.715),doubleToFloat(0.5627),doubleToFloat(0.7739),doubleToFloat(0.8057),doubleToFloat(0.7205),doubleToFloat(0.9482),doubleToFloat(0.7884),doubleToFloat(0.935),doubleToFloat(0.8024),doubleToFloat(0.9215),doubleToFloat(0.8088),doubleToFloat(0.8649),doubleToFloat(0.7737),doubleToFloat(0.863),doubleToFloat(0.722),doubleToFloat(0.5644),doubleToFloat(0.721),doubleToFloat(0.5616),doubleToFloat(0.7707),doubleToFloat(0.5413),doubleToFloat(0.7145),doubleToFloat(0.5223),doubleToFloat(0.7104),doubleToFloat(0.521),doubleToFloat(0.7664),doubleToFloat(0.5355),doubleToFloat(0.7975),doubleToFloat(0.5007),doubleToFloat(0.7279),doubleToFloat(0.4601),doubleToFloat(0.5093),doubleToFloat(0.5555),doubleToFloat(0.5151),doubleToFloat(0.5256),doubleToFloat(0.7924),doubleToFloat(0.547),doubleToFloat(0.7818),doubleToFloat(0.5272),doubleToFloat(0.2576),doubleToFloat(0.9782),doubleToFloat(0.2512),doubleToFloat(0.9782),doubleToFloat(0.2512),doubleToFloat(0.9262),doubleToFloat(0.2576),doubleToFloat(0.9262),doubleToFloat(0.2447),doubleToFloat(0.9782),doubleToFloat(0.2383),doubleToFloat(0.9782),doubleToFloat(0.2383),doubleToFloat(0.9262),doubleToFloat(0.2447),doubleToFloat(0.9262),doubleToFloat(0.264),doubleToFloat(0.9782),doubleToFloat(0.264),doubleToFloat(0.9782),doubleToFloat(0.264),doubleToFloat(0.9262),doubleToFloat(0.2383),doubleToFloat(0.9782)], Java.type("float[]"))))))))
                .addChild(new HAnimJoint("hanim_vl5").setName("skullbase").setDEF("hanim_skullbase").setCenter(Java.to([doubleToFloat(0),doubleToFloat(51.25),doubleToFloat(-1.124)], Java.type("float[]")))
                  .addChild(new HAnimSegment("hanim_skullbase").setName("skull").setDEF("hanim_skull")
                    .addChild(new Transform().setTranslation(Java.to([doubleToFloat(0),doubleToFloat(51.25),doubleToFloat(-1.124)], Java.type("float[]")))
                      .addChild(new Shape()
                        .setAppearance(new Appearance()
                          .setMaterial(new Material().setDiffuseColor(Java.to([doubleToFloat(0.588),doubleToFloat(0.588),doubleToFloat(0.588)], Java.type("float[]"))))
                          .setTexture(new ImageTexture().setUSE("SunTextureAtlas")))
                        .setGeometry(new IndexedFaceSet().setCoordIndex(Java.to([1,111,2,-1,2,0,1,-1,118,3,4,-1,4,124,118,-1,8,128,6,-1,6,7,8,-1,9,10,11,-1,11,12,9,-1,14,11,10,-1,10,13,14,-1,17,18,15,-1,15,16,17,-1,24,21,22,-1,22,23,24,-1,24,1,0,-1,0,25,24,-1,27,4,3,-1,3,26,27,-1,30,7,6,-1,6,29,30,-1,150,151,32,-1,32,31,150,-1,34,33,152,-1,152,153,34,-1,156,35,34,-1,34,153,156,-1,33,34,35,-1,35,3,33,-1,152,33,3,-1,3,118,152,-1,32,17,16,-1,16,31,32,-1,24,25,36,-1,36,21,24,-1,37,38,27,-1,27,26,37,-1,40,30,29,-1,29,39,40,-1,29,42,41,-1,41,39,29,-1,44,45,46,-1,46,43,44,-1,19,13,71,-1,71,47,19,-1,110,53,9,-1,9,93,110,-1,128,176,48,-1,48,6,128,-1,48,42,29,-1,29,6,48,-1,4,32,151,-1,151,124,4,-1,20,14,13,-1,13,19,20,-1,17,32,4,-1,4,27,17,-1,38,18,17,-1,17,27,38,-1,44,43,49,-1,49,50,44,-1,92,43,46,-1,51,49,92,-1,92,71,51,-1,13,52,51,-1,51,71,13,-1,10,44,50,-1,9,53,45,-1,45,10,9,-1,8,7,0,-1,0,2,8,-1,36,40,54,-1,54,21,36,-1,14,38,37,-1,37,11,14,-1,12,11,37,-1,37,22,12,-1,7,30,25,-1,25,0,7,-1,36,25,30,-1,30,40,36,-1,18,38,14,-1,14,20,18,-1,112,5,48,-1,48,176,112,-1,28,42,48,-1,48,5,28,-1,93,92,46,-1,46,110,93,-1,45,44,10,-1,50,49,51,-1,51,52,50,-1,52,13,10,-1,10,50,52,-1,49,43,92,-1,1,35,156,-1,156,111,1,-1,35,23,26,-1,26,3,35,-1,9,116,117,-1,117,93,9,-1,9,12,54,-1,54,116,9,-1,22,37,26,-1,26,23,22,-1,22,21,54,-1,54,12,22,-1,35,1,24,-1,24,23,35,-1,57,58,55,-1,55,56,57,-1,104,105,61,-1,61,62,104,-1,63,58,57,-1,57,106,63,-1,65,66,198,-1,198,199,65,-1,67,203,113,-1,113,107,67,-1,66,65,56,-1,56,55,66,-1,68,61,105,-1,105,107,68,-1,58,63,94,-1,94,69,58,-1,66,95,119,-1,119,198,66,-1,70,95,66,-1,66,55,70,-1,58,69,70,-1,70,55,58,-1,57,56,60,-1,60,59,57,-1,59,104,106,-1,106,57,59,-1,65,199,203,-1,203,67,65,-1,65,67,60,-1,60,56,65,-1,63,73,71,-1,71,94,63,-1,64,62,103,-1,103,102,64,-1,64,72,73,-1,73,63,64,-1,219,74,75,-1,75,218,219,-1,76,77,78,-1,78,79,76,-1,83,80,81,-1,81,82,83,-1,84,74,219,-1,219,114,84,-1,83,77,76,-1,76,80,83,-1,231,218,75,-1,75,85,231,-1,78,87,86,-1,86,79,78,-1,75,74,88,-1,88,89,75,-1,114,237,90,-1,90,84,114,-1,84,81,88,-1,88,74,84,-1,91,85,75,-1,75,89,91,-1,90,82,81,-1,81,84,90,-1,89,88,76,-1,76,79,89,-1,76,88,81,-1,81,80,76,-1,86,91,89,-1,89,79,86,-1,78,71,92,-1,92,87,78,-1,69,83,82,-1,82,70,69,-1,69,94,77,-1,77,83,69,-1,95,90,237,-1,237,119,95,-1,82,90,95,-1,95,70,82,-1,71,78,77,-1,77,94,71,-1,112,231,85,-1,85,5,112,-1,109,108,86,-1,86,87,109,-1,91,28,5,-1,5,85,91,-1,108,28,91,-1,91,86,108,-1,62,61,96,-1,96,97,62,-1,68,115,98,-1,98,99,68,-1,61,68,101,-1,101,100,61,-1,59,60,105,-1,105,104,59,-1,115,68,107,-1,107,113,115,-1,60,67,107,-1,107,105,60,-1,104,62,64,-1,64,106,104,-1,106,64,63,-1,120,109,87,-1,87,92,120,-1,41,42,28,-1,28,108,41,-1,92,93,120,-1,46,45,53,-1,53,110,46,-1,116,39,41,-1,41,117,116,-1,39,116,54,-1,54,40,39,-1,41,108,109,-1,109,117,41,-1,93,117,109,-1,109,120,93,-1,122,121,2,-1,2,111,122,-1,118,124,123,-1,123,125,118,-1,8,127,126,-1,126,128,8,-1,131,130,129,-1,129,132,131,-1,134,133,132,-1,132,129,134,-1,137,136,135,-1,135,138,137,-1,141,140,139,-1,139,142,141,-1,141,143,121,-1,121,122,141,-1,145,144,125,-1,125,123,145,-1,147,146,126,-1,126,127,147,-1,150,149,148,-1,148,151,150,-1,154,153,152,-1,152,155,154,-1,156,153,154,-1,154,157,156,-1,157,154,155,-1,155,125,157,-1,152,118,125,-1,125,155,152,-1,148,149,136,-1,136,137,148,-1,141,142,158,-1,158,143,141,-1,159,144,145,-1,145,160,159,-1,162,161,146,-1,146,147,162,-1,146,161,163,-1,163,164,146,-1,167,166,165,-1,165,168,167,-1,171,170,169,-1,169,133,171,-1,173,172,131,-1,131,174,173,-1,128,126,175,-1,175,176,128,-1,175,126,146,-1,146,164,175,-1,123,124,151,-1,151,148,123,-1,177,171,133,-1,133,134,177,-1,137,145,123,-1,123,148,137,-1,160,145,137,-1,137,138,160,-1,167,179,178,-1,178,166,167,-1,180,165,166,-1,181,169,180,-1,180,178,181,-1,133,169,181,-1,181,182,133,-1,132,179,167,-1,131,132,168,-1,168,174,131,-1,8,2,121,-1,121,127,8,-1,158,142,183,-1,183,162,158,-1,134,129,159,-1,159,160,134,-1,130,139,159,-1,159,129,130,-1,127,121,143,-1,143,147,127,-1,158,162,147,-1,147,143,158,-1,138,177,134,-1,134,160,138,-1,112,176,175,-1,175,184,112,-1,185,184,175,-1,175,164,185,-1,172,173,165,-1,165,180,172,-1,168,132,167,-1,179,182,181,-1,181,178,179,-1,182,179,132,-1,132,133,182,-1,178,180,166,-1,122,111,156,-1,156,157,122,-1,157,125,144,-1,144,140,157,-1,131,172,187,-1,187,186,131,-1,131,186,183,-1,183,130,131,-1,139,140,144,-1,144,159,139,-1,139,130,183,-1,183,142,139,-1,157,140,141,-1,141,122,157,-1,190,189,188,-1,188,191,190,-1,193,192,195,-1,195,194,193,-1,196,197,190,-1,190,191,196,-1,200,199,198,-1,198,201,200,-1,202,204,113,-1,113,203,202,-1,201,188,189,-1,189,200,201,-1,205,204,194,-1,194,195,205,-1,191,207,206,-1,206,196,191,-1,201,198,119,-1,119,208,201,-1,209,188,201,-1,201,208,209,-1,191,188,209,-1,209,207,191,-1,190,211,210,-1,210,189,190,-1,211,190,197,-1,197,193,211,-1,200,202,203,-1,203,199,200,-1,200,189,210,-1,210,202,200,-1,196,206,169,-1,169,212,196,-1,215,214,213,-1,213,192,215,-1,215,196,212,-1,212,216,215,-1,219,218,217,-1,217,220,219,-1,223,222,221,-1,221,224,223,-1,227,226,225,-1,225,228,227,-1,229,114,219,-1,219,220,229,-1,227,228,223,-1,223,224,227,-1,231,230,217,-1,217,218,231,-1,221,222,232,-1,232,233,221,-1,217,235,234,-1,234,220,217,-1,114,229,236,-1,236,237,114,-1,229,220,234,-1,234,225,229,-1,238,235,217,-1,217,230,238,-1,236,229,225,-1,225,226,236,-1,235,222,223,-1,223,234,235,-1,223,228,225,-1,225,234,223,-1,232,222,235,-1,235,238,232,-1,221,233,180,-1,180,169,221,-1,207,209,226,-1,226,227,207,-1,207,227,224,-1,224,206,207,-1,208,119,237,-1,237,236,208,-1,226,209,208,-1,208,236,226,-1,169,206,224,-1,224,221,169,-1,112,184,230,-1,230,231,112,-1,239,233,232,-1,232,240,239,-1,238,230,184,-1,184,185,238,-1,240,232,238,-1,238,185,240,-1,192,242,241,-1,241,195,192,-1,205,244,243,-1,243,115,205,-1,195,246,245,-1,245,205,195,-1,211,193,194,-1,194,210,211,-1,115,113,204,-1,204,205,115,-1,210,194,204,-1,204,202,210,-1,193,197,215,-1,215,192,193,-1,197,196,215,-1,247,180,233,-1,233,239,247,-1,163,240,185,-1,185,164,163,-1,180,247,172,-1,165,173,174,-1,174,168,165,-1,186,187,163,-1,163,161,186,-1,161,162,183,-1,183,186,161,-1,163,187,239,-1,239,240,163,-1,172,247,239,-1,239,187,172,-1,251,248,249,-1,249,250,251,-1,249,248,252,-1,252,253,249,-1,255,253,252,-1,252,254,255,-1,254,256,257,-1,257,255,254,-1,256,258,259,-1,259,257,256,-1,261,259,258,-1,258,260,261,-1,262,263,261,-1,261,260,262,-1,250,263,262,-1,262,251,250,-1,265,266,267,-1,267,264,265,-1,267,269,268,-1,268,264,267,-1,270,268,269,-1,269,271,270,-1,272,270,271,-1,271,273,272,-1,272,273,275,-1,275,274,272,-1,277,276,274,-1,274,275,277,-1,277,279,278,-1,278,276,277,-1,266,265,278,-1,278,279,266,-1,249,267,266,-1,266,250,249,-1,267,249,253,-1,253,269,267,-1,269,253,255,-1,255,271,269,-1,273,271,255,-1,255,257,273,-1,275,273,257,-1,257,259,275,-1,259,261,277,-1,277,275,259,-1,277,261,263,-1,263,279,277,-1,279,263,250,-1,250,266,279,-1,248,251,280,-1,251,262,280,-1,262,260,280,-1,260,258,280,-1,258,256,280,-1,256,254,280,-1,254,252,280,-1,252,248,280,-1,265,264,281,-1,264,268,281,-1,268,270,281,-1,270,272,281,-1,272,274,281,-1,274,276,281,-1,276,278,281,-1,278,265,281,-1,282,283,284,-1,282,284,285,-1,282,285,286,-1,282,286,287,-1,282,287,288,-1,282,288,289,-1,282,289,290,-1,282,290,283,-1,283,292,291,-1,291,284,283,-1,291,293,285,-1,285,284,291,-1,285,293,294,-1,294,286,285,-1,294,295,287,-1,287,286,294,-1,295,296,288,-1,288,287,295,-1,288,296,297,-1,297,289,288,-1,289,297,298,-1,298,290,289,-1,298,292,283,-1,283,290,298,-1,299,291,292,-1,292,300,299,-1,299,301,293,-1,291,299,293,-1,301,302,293,-1,293,302,294,-1,294,302,303,-1,303,295,294,-1,303,304,296,-1,296,295,303,-1,296,304,305,-1,305,297,296,-1,297,305,306,-1,306,298,297,-1,298,306,300,-1,300,292,298,-1,307,299,300,-1,299,307,308,-1,308,301,299,-1,301,308,307,-1,307,302,301,-1,307,303,302,-1,307,304,303,-1,307,305,304,-1,307,306,305,-1,307,300,306,-1,309,310,311,-1,309,312,310,-1,309,313,312,-1,309,314,313,-1,309,315,314,-1,309,316,315,-1,309,317,316,-1,309,311,317,-1,319,311,310,-1,310,318,319,-1,318,310,312,-1,312,320,318,-1,320,312,313,-1,313,321,320,-1,322,321,313,-1,313,314,322,-1,322,314,315,-1,315,323,322,-1,316,324,323,-1,323,315,316,-1,317,325,324,-1,324,316,317,-1,319,325,317,-1,317,311,319,-1,326,327,319,-1,319,318,326,-1,328,334,326,-1,326,320,328,-1,318,320,326,-1,321,329,328,-1,328,320,321,-1,329,334,328,-1,322,330,329,-1,329,321,322,-1,330,322,323,-1,323,331,330,-1,323,324,332,-1,332,331,323,-1,325,333,332,-1,332,324,325,-1,333,325,319,-1,319,327,333,-1,335,327,326,-1,335,326,334,-1,334,329,335,-1,335,329,330,-1,335,330,331,-1,335,331,332,-1,335,332,333,-1,335,333,327,-1,339,338,337,-1,337,336,339,-1,337,341,340,-1,340,336,337,-1,343,342,340,-1,340,341,343,-1,342,343,345,-1,345,344,342,-1,344,345,347,-1,347,346,344,-1,349,348,346,-1,346,347,349,-1,350,348,349,-1,349,351,350,-1,338,339,350,-1,350,351,338,-1,353,352,355,-1,355,354,353,-1,355,352,356,-1,356,357,355,-1,358,359,357,-1,357,356,358,-1,360,361,359,-1,359,358,360,-1,360,362,363,-1,363,361,360,-1,365,363,362,-1,362,364,365,-1,365,364,366,-1,366,367,365,-1,354,367,366,-1,366,353,354,-1,337,338,354,-1,354,355,337,-1,355,357,341,-1,341,337,355,-1,357,359,343,-1,343,341,357,-1,361,345,343,-1,343,359,361,-1,363,347,345,-1,345,361,363,-1,347,363,365,-1,365,349,347,-1,365,367,351,-1,351,349,365,-1,367,354,338,-1,338,351,367,-1,336,368,339,-1,339,368,350,-1,350,368,348,-1,348,368,346,-1,346,368,344,-1,344,368,342,-1,342,368,340,-1,340,368,336,-1,353,369,352,-1,352,369,356,-1,356,369,358,-1,358,369,360,-1,360,369,362,-1,362,369,364,-1,364,369,366,-1,366,369,353,-1,370,372,371,-1,370,373,372,-1,370,374,373,-1,370,375,374,-1,370,376,375,-1,370,377,376,-1,370,378,377,-1,370,371,378,-1,371,372,379,-1,379,380,371,-1,379,372,373,-1,373,381,379,-1,373,374,382,-1,382,381,373,-1,382,374,375,-1,375,383,382,-1,383,375,376,-1,376,384,383,-1,376,377,385,-1,385,384,376,-1,377,378,386,-1,386,385,377,-1,386,378,371,-1,371,380,386,-1,387,388,380,-1,380,379,387,-1,387,381,389,-1,379,381,387,-1,389,381,390,-1,381,382,390,-1,382,383,391,-1,391,390,382,-1,391,383,384,-1,384,392,391,-1,384,385,393,-1,393,392,384,-1,385,386,394,-1,394,393,385,-1,386,380,388,-1,388,394,386,-1,395,388,387,-1,387,389,396,-1,396,395,387,-1,389,395,396,-1,395,389,390,-1,395,390,391,-1,395,391,392,-1,395,392,393,-1,395,393,394,-1,395,394,388,-1,397,399,398,-1,397,398,400,-1,397,400,401,-1,397,401,402,-1,397,402,403,-1,397,403,404,-1,397,404,405,-1,397,405,399,-1,407,406,398,-1,398,399,407,-1,406,408,400,-1,400,398,406,-1,408,409,401,-1,401,400,408,-1,410,402,401,-1,401,409,410,-1,410,411,403,-1,403,402,410,-1,404,403,411,-1,411,412,404,-1,405,404,412,-1,412,413,405,-1,407,399,405,-1,405,413,407,-1,414,406,407,-1,407,415,414,-1,416,408,414,-1,414,422,416,-1,406,414,408,-1,409,408,416,-1,416,417,409,-1,417,416,422,-1,410,409,417,-1,417,418,410,-1,418,419,411,-1,411,410,418,-1,411,419,420,-1,420,412,411,-1,413,412,420,-1,420,421,413,-1,421,415,407,-1,407,413,421,-1,423,414,415,-1,423,422,414,-1,422,423,417,-1,423,418,417,-1,423,419,418,-1,423,420,419,-1,423,421,420,-1,423,415,421,-1], Java.type("int[]"))).setCreaseAngle(1.57).setTexCoordIndex(Java.to([2,3,0,-1,0,1,2,-1,6,7,4,-1,4,5,6,-1,10,11,8,-1,8,9,10,-1,14,68,12,-1,12,13,14,-1,16,12,68,-1,68,15,16,-1,19,20,17,-1,17,18,19,-1,23,24,21,-1,21,22,23,-1,23,2,1,-1,1,25,23,-1,27,4,7,-1,7,26,27,-1,29,9,8,-1,8,28,29,-1,32,33,30,-1,30,31,32,-1,36,37,34,-1,34,35,36,-1,38,39,36,-1,36,35,38,-1,37,36,39,-1,39,7,37,-1,34,37,7,-1,7,6,34,-1,30,19,18,-1,18,31,30,-1,23,25,40,-1,40,24,23,-1,41,42,27,-1,27,26,41,-1,44,29,28,-1,28,43,44,-1,28,46,45,-1,45,43,28,-1,54,55,56,-1,56,53,54,-1,49,15,47,-1,47,48,49,-1,141,69,14,-1,14,61,141,-1,11,51,50,-1,50,8,11,-1,50,46,28,-1,28,8,50,-1,4,30,33,-1,33,5,4,-1,52,16,15,-1,15,49,52,-1,19,30,4,-1,4,27,19,-1,42,20,19,-1,19,27,42,-1,54,53,62,-1,62,63,54,-1,64,53,56,-1,66,62,64,-1,64,65,66,-1,15,67,66,-1,66,65,15,-1,68,54,63,-1,14,69,55,-1,55,68,14,-1,10,9,1,-1,1,0,10,-1,40,44,57,-1,57,24,40,-1,16,42,41,-1,41,12,16,-1,13,12,41,-1,41,21,13,-1,9,29,25,-1,25,1,9,-1,40,25,29,-1,29,44,40,-1,20,42,16,-1,16,52,20,-1,58,59,50,-1,50,51,58,-1,60,46,50,-1,50,59,60,-1,61,64,56,-1,56,141,61,-1,55,54,68,-1,63,62,66,-1,66,67,63,-1,67,15,68,-1,68,63,67,-1,62,53,64,-1,2,39,38,-1,38,3,2,-1,39,22,26,-1,26,7,39,-1,14,142,143,-1,143,61,14,-1,14,13,57,-1,57,142,14,-1,21,41,26,-1,26,22,21,-1,21,24,57,-1,57,13,21,-1,39,2,23,-1,23,22,39,-1,73,74,71,-1,71,72,73,-1,76,77,78,-1,78,75,76,-1,79,74,73,-1,73,80,79,-1,83,84,81,-1,81,82,83,-1,85,86,87,-1,87,88,85,-1,84,83,72,-1,72,71,84,-1,89,78,77,-1,77,88,89,-1,74,79,144,-1,144,145,74,-1,84,147,146,-1,146,81,84,-1,148,147,84,-1,84,71,148,-1,74,145,148,-1,148,71,74,-1,73,72,95,-1,95,96,73,-1,96,76,80,-1,80,73,96,-1,83,82,86,-1,86,85,83,-1,83,85,95,-1,95,72,83,-1,79,97,149,-1,149,144,79,-1,101,75,99,-1,99,100,101,-1,101,102,97,-1,97,79,101,-1,105,106,103,-1,103,104,105,-1,109,110,107,-1,107,108,109,-1,113,114,111,-1,111,112,113,-1,116,106,105,-1,105,115,116,-1,113,110,109,-1,109,114,113,-1,118,104,103,-1,103,117,118,-1,107,120,119,-1,119,108,107,-1,103,106,121,-1,121,122,103,-1,115,124,123,-1,123,116,115,-1,116,111,121,-1,121,106,116,-1,125,117,103,-1,103,122,125,-1,123,112,111,-1,111,116,123,-1,122,121,109,-1,109,108,122,-1,109,121,111,-1,111,114,109,-1,119,125,122,-1,122,108,119,-1,107,98,126,-1,126,120,107,-1,91,113,112,-1,112,94,91,-1,91,90,110,-1,110,113,91,-1,93,123,124,-1,124,92,93,-1,112,123,93,-1,93,94,112,-1,98,107,110,-1,110,90,98,-1,128,118,117,-1,117,127,128,-1,129,130,119,-1,119,120,129,-1,125,131,127,-1,127,117,125,-1,130,131,125,-1,125,119,130,-1,75,78,132,-1,132,133,75,-1,89,134,135,-1,135,136,89,-1,78,89,137,-1,137,138,78,-1,96,95,77,-1,77,76,96,-1,134,89,88,-1,88,87,134,-1,95,85,88,-1,88,77,95,-1,76,75,101,-1,101,80,76,-1,80,101,79,-1,151,129,120,-1,120,126,151,-1,45,46,60,-1,60,70,45,-1,140,61,150,-1,56,55,69,-1,69,141,56,-1,142,43,45,-1,45,143,142,-1,43,142,57,-1,57,44,43,-1,45,70,139,-1,139,143,45,-1,61,143,139,-1,139,150,61,-1,154,153,152,-1,152,155,154,-1,158,157,156,-1,156,159,158,-1,162,161,160,-1,160,163,162,-1,166,165,164,-1,164,167,166,-1,169,168,167,-1,167,164,169,-1,172,171,170,-1,170,173,172,-1,176,175,174,-1,174,177,176,-1,176,178,153,-1,153,154,176,-1,180,179,159,-1,159,156,180,-1,182,181,160,-1,160,161,182,-1,185,184,183,-1,183,186,185,-1,189,188,187,-1,187,190,189,-1,191,188,189,-1,189,192,191,-1,192,189,190,-1,190,159,192,-1,187,158,159,-1,159,190,187,-1,183,184,171,-1,171,172,183,-1,176,177,193,-1,193,178,176,-1,194,179,180,-1,180,195,194,-1,197,196,181,-1,181,182,197,-1,181,196,198,-1,198,199,181,-1,202,201,200,-1,200,203,202,-1,206,205,204,-1,204,168,206,-1,208,207,166,-1,166,209,208,-1,163,160,210,-1,210,211,163,-1,210,160,181,-1,181,199,210,-1,156,157,186,-1,186,183,156,-1,212,206,168,-1,168,169,212,-1,172,180,156,-1,156,183,172,-1,195,180,172,-1,172,173,195,-1,202,214,213,-1,213,201,202,-1,215,200,201,-1,217,216,215,-1,215,213,217,-1,168,216,217,-1,217,218,168,-1,167,214,202,-1,166,167,203,-1,203,209,166,-1,162,152,153,-1,153,161,162,-1,193,177,219,-1,219,197,193,-1,169,164,194,-1,194,195,169,-1,165,174,194,-1,194,164,165,-1,161,153,178,-1,178,182,161,-1,193,197,182,-1,182,178,193,-1,173,212,169,-1,169,195,173,-1,220,211,210,-1,210,221,220,-1,222,221,210,-1,210,199,222,-1,207,208,200,-1,200,215,207,-1,203,167,202,-1,214,218,217,-1,217,213,214,-1,218,214,167,-1,167,168,218,-1,213,215,201,-1,154,155,191,-1,191,192,154,-1,192,159,179,-1,179,175,192,-1,166,207,224,-1,224,223,166,-1,166,223,219,-1,219,165,166,-1,174,175,179,-1,179,194,174,-1,174,165,219,-1,219,177,174,-1,192,175,176,-1,176,154,192,-1,227,226,225,-1,225,228,227,-1,230,229,232,-1,232,231,230,-1,233,234,227,-1,227,228,233,-1,237,236,235,-1,235,238,237,-1,239,242,241,-1,241,240,239,-1,238,225,226,-1,226,237,238,-1,243,242,231,-1,231,232,243,-1,228,245,244,-1,244,233,228,-1,238,235,246,-1,246,247,238,-1,248,225,238,-1,238,247,248,-1,228,225,248,-1,248,245,228,-1,227,250,249,-1,249,226,227,-1,250,227,234,-1,234,230,250,-1,237,239,240,-1,240,236,237,-1,237,226,249,-1,249,239,237,-1,233,244,252,-1,252,251,233,-1,255,254,253,-1,253,229,255,-1,255,233,251,-1,251,256,255,-1,259,258,257,-1,257,260,259,-1,263,262,261,-1,261,264,263,-1,267,266,265,-1,265,268,267,-1,270,269,259,-1,259,260,270,-1,267,268,263,-1,263,264,267,-1,272,271,257,-1,257,258,272,-1,261,262,273,-1,273,274,261,-1,257,276,275,-1,275,260,257,-1,269,270,277,-1,277,278,269,-1,270,260,275,-1,275,265,270,-1,279,276,257,-1,257,271,279,-1,277,270,265,-1,265,266,277,-1,276,262,263,-1,263,275,276,-1,263,268,265,-1,265,275,263,-1,273,262,276,-1,276,279,273,-1,261,274,281,-1,281,280,261,-1,283,282,266,-1,266,267,283,-1,283,267,264,-1,264,284,283,-1,286,285,278,-1,278,277,286,-1,266,282,286,-1,286,277,266,-1,280,284,264,-1,264,261,280,-1,288,287,271,-1,271,272,288,-1,289,274,273,-1,273,290,289,-1,279,271,287,-1,287,291,279,-1,290,273,279,-1,279,291,290,-1,229,293,292,-1,292,232,229,-1,243,296,295,-1,295,294,243,-1,232,298,297,-1,297,243,232,-1,250,230,231,-1,231,249,250,-1,294,241,242,-1,242,243,294,-1,249,231,242,-1,242,239,249,-1,230,234,255,-1,255,229,230,-1,234,233,255,-1,299,281,274,-1,274,289,299,-1,198,300,222,-1,222,199,198,-1,301,302,207,-1,200,208,209,-1,209,203,200,-1,223,224,198,-1,198,196,223,-1,196,197,219,-1,219,223,196,-1,198,224,303,-1,303,300,198,-1,207,302,303,-1,303,224,207,-1,307,304,305,-1,305,306,307,-1,305,304,308,-1,308,309,305,-1,305,309,308,-1,308,304,305,-1,304,307,306,-1,306,305,304,-1,307,310,311,-1,311,306,307,-1,313,311,310,-1,310,312,313,-1,310,311,313,-1,313,312,310,-1,306,311,310,-1,310,307,306,-1,314,315,316,-1,316,314,314,-1,316,318,317,-1,317,314,316,-1,314,317,318,-1,318,316,314,-1,314,314,316,-1,316,315,314,-1,314,315,319,-1,319,314,314,-1,321,320,314,-1,314,319,321,-1,321,319,322,-1,322,320,321,-1,315,314,322,-1,322,319,315,-1,305,316,315,-1,315,306,305,-1,316,305,309,-1,309,318,316,-1,318,309,305,-1,305,316,318,-1,315,316,305,-1,305,306,315,-1,319,315,306,-1,306,311,319,-1,311,313,321,-1,321,319,311,-1,321,313,311,-1,311,319,321,-1,319,311,306,-1,306,315,319,-1,304,307,323,-1,307,310,323,-1,310,312,323,-1,312,310,323,-1,310,307,323,-1,307,304,323,-1,304,308,323,-1,308,304,323,-1,314,314,324,-1,314,317,324,-1,317,314,324,-1,314,314,324,-1,314,314,324,-1,314,320,324,-1,320,322,324,-1,322,314,324,-1,325,326,327,-1,325,327,328,-1,325,328,329,-1,325,329,330,-1,325,330,331,-1,325,331,332,-1,325,332,333,-1,325,333,326,-1,326,335,334,-1,334,327,326,-1,334,336,328,-1,328,327,334,-1,328,336,337,-1,337,329,328,-1,337,338,330,-1,330,329,337,-1,338,339,331,-1,331,330,338,-1,331,339,340,-1,340,332,331,-1,332,340,341,-1,341,333,332,-1,341,335,326,-1,326,333,341,-1,342,334,335,-1,335,343,342,-1,342,344,336,-1,334,342,336,-1,345,346,336,-1,336,346,337,-1,337,346,347,-1,347,338,337,-1,347,348,339,-1,339,338,347,-1,339,348,349,-1,349,340,339,-1,340,349,350,-1,350,341,340,-1,341,350,343,-1,343,335,341,-1,351,342,343,-1,342,351,352,-1,352,344,342,-1,345,352,351,-1,351,346,345,-1,351,347,346,-1,351,348,347,-1,351,349,348,-1,351,350,349,-1,351,343,350,-1,325,327,326,-1,325,328,327,-1,325,329,328,-1,325,330,329,-1,325,331,330,-1,325,332,331,-1,325,333,332,-1,325,326,333,-1,335,326,327,-1,327,334,335,-1,334,327,328,-1,328,336,334,-1,336,328,329,-1,329,337,336,-1,338,337,329,-1,329,330,338,-1,338,330,331,-1,331,339,338,-1,332,340,339,-1,339,331,332,-1,333,341,340,-1,340,332,333,-1,335,341,333,-1,333,326,335,-1,342,343,335,-1,335,334,342,-1,353,344,342,-1,342,336,353,-1,334,336,342,-1,337,346,353,-1,353,336,337,-1,346,345,353,-1,338,347,346,-1,346,337,338,-1,347,338,339,-1,339,348,347,-1,339,340,349,-1,349,348,339,-1,341,350,349,-1,349,340,341,-1,350,341,335,-1,335,343,350,-1,351,343,342,-1,351,342,344,-1,345,346,351,-1,351,346,347,-1,351,347,348,-1,351,348,349,-1,351,349,350,-1,351,350,343,-1,357,356,355,-1,355,354,357,-1,355,359,358,-1,358,354,355,-1,355,354,358,-1,358,359,355,-1,354,355,356,-1,356,357,354,-1,357,356,361,-1,361,360,357,-1,363,362,360,-1,360,361,363,-1,360,362,363,-1,363,361,360,-1,356,357,360,-1,360,361,356,-1,364,364,366,-1,366,365,364,-1,366,364,367,-1,367,368,366,-1,364,366,368,-1,368,367,364,-1,364,365,366,-1,366,364,364,-1,364,364,369,-1,369,365,364,-1,371,369,364,-1,364,370,371,-1,371,370,372,-1,372,369,371,-1,365,369,372,-1,372,364,365,-1,355,356,365,-1,365,366,355,-1,366,368,359,-1,359,355,366,-1,368,366,355,-1,355,359,368,-1,365,356,355,-1,355,366,365,-1,369,361,356,-1,356,365,369,-1,361,369,371,-1,371,363,361,-1,371,369,361,-1,361,363,371,-1,369,365,356,-1,356,361,369,-1,354,373,357,-1,357,373,360,-1,360,373,362,-1,362,373,360,-1,360,373,357,-1,357,373,354,-1,354,373,358,-1,358,373,354,-1,364,374,364,-1,364,374,367,-1,367,374,364,-1,364,374,364,-1,364,374,364,-1,364,374,370,-1,370,374,372,-1,372,374,364,-1,375,377,376,-1,375,378,377,-1,375,379,378,-1,375,380,379,-1,375,381,380,-1,375,382,381,-1,375,383,382,-1,375,376,383,-1,376,377,384,-1,384,385,376,-1,384,377,378,-1,378,386,384,-1,378,379,387,-1,387,386,378,-1,387,379,380,-1,380,388,387,-1,388,380,381,-1,381,389,388,-1,381,382,390,-1,390,389,381,-1,382,383,391,-1,391,390,382,-1,391,383,376,-1,376,385,391,-1,392,393,385,-1,385,384,392,-1,392,386,394,-1,384,386,392,-1,395,386,396,-1,386,387,396,-1,387,388,397,-1,397,396,387,-1,397,388,389,-1,389,398,397,-1,389,390,399,-1,399,398,389,-1,390,391,400,-1,400,399,390,-1,391,385,393,-1,393,400,391,-1,401,393,392,-1,392,394,402,-1,402,401,392,-1,395,401,402,-1,401,395,396,-1,401,396,397,-1,401,397,398,-1,401,398,399,-1,401,399,400,-1,401,400,393,-1,375,376,377,-1,375,377,378,-1,375,378,379,-1,375,379,380,-1,375,380,381,-1,375,381,382,-1,375,382,383,-1,375,383,376,-1,385,384,377,-1,377,376,385,-1,384,386,378,-1,378,377,384,-1,386,387,379,-1,379,378,386,-1,388,380,379,-1,379,387,388,-1,388,389,381,-1,381,380,388,-1,382,381,389,-1,389,390,382,-1,383,382,390,-1,390,391,383,-1,385,376,383,-1,383,391,385,-1,392,384,385,-1,385,393,392,-1,403,386,392,-1,392,394,403,-1,384,392,386,-1,387,386,403,-1,403,396,387,-1,396,403,395,-1,388,387,396,-1,396,397,388,-1,397,398,389,-1,389,388,397,-1,389,398,399,-1,399,390,389,-1,391,390,399,-1,399,400,391,-1,400,393,385,-1,385,391,400,-1,401,392,393,-1,401,394,392,-1,395,401,396,-1,401,397,396,-1,401,398,397,-1,401,399,398,-1,401,400,399,-1,401,393,400,-1], Java.type("int[]")))
                          .setCoord(new Coordinate().setPoint(Java.to([doubleToFloat(0.9005),doubleToFloat(-0.6145),doubleToFloat(4.151),doubleToFloat(0.9532),doubleToFloat(0.1621),doubleToFloat(4.839),doubleToFloat(0),doubleToFloat(-0.6867),doubleToFloat(4.245),doubleToFloat(0.929),doubleToFloat(1.885),doubleToFloat(5.318),doubleToFloat(0.9789),doubleToFloat(2.946),doubleToFloat(5.169),doubleToFloat(0.9847),doubleToFloat(0.1758),doubleToFloat(-2.372),doubleToFloat(0.8684),doubleToFloat(-0.7949),doubleToFloat(0.7211),doubleToFloat(0.834),doubleToFloat(-1.015),doubleToFloat(3.47),doubleToFloat(0),doubleToFloat(-1.097),doubleToFloat(3.531),doubleToFloat(4.388),doubleToFloat(1.688),doubleToFloat(0.6199),doubleToFloat(4.699),doubleToFloat(2.772),doubleToFloat(0.5821),doubleToFloat(4.409),doubleToFloat(2.567),doubleToFloat(2.304),doubleToFloat(4.158),doubleToFloat(1.51),doubleToFloat(2.208),doubleToFloat(4.797),doubleToFloat(4.23),doubleToFloat(0.6766),doubleToFloat(4.479),doubleToFloat(3.877),doubleToFloat(2.364),doubleToFloat(3.395),doubleToFloat(7.384),doubleToFloat(4.125),doubleToFloat(2.387),doubleToFloat(7.787),doubleToFloat(4.862),doubleToFloat(2.437),doubleToFloat(5.73),doubleToFloat(5.231),doubleToFloat(3.658),doubleToFloat(6.064),doubleToFloat(4.107),doubleToFloat(4.777),doubleToFloat(6.245),doubleToFloat(0.851),doubleToFloat(4.476),doubleToFloat(6.307),doubleToFloat(2.523),doubleToFloat(3.476),doubleToFloat(0.7672),doubleToFloat(3.645),doubleToFloat(3.578),doubleToFloat(1.206),doubleToFloat(3.744),doubleToFloat(2.377),doubleToFloat(0.9448),doubleToFloat(4.645),doubleToFloat(2.369),doubleToFloat(0.4377),doubleToFloat(4.433),doubleToFloat(2.278),doubleToFloat(-0.2885),doubleToFloat(3.759),doubleToFloat(2.385),doubleToFloat(1.808),doubleToFloat(4.996),doubleToFloat(2.386),doubleToFloat(3.002),doubleToFloat(4.854),doubleToFloat(2.165),doubleToFloat(0.4361),doubleToFloat(-2.077),doubleToFloat(2.098),doubleToFloat(-0.3536),doubleToFloat(0.7104),doubleToFloat(2.198),doubleToFloat(-0.5116),doubleToFloat(2.809),doubleToFloat(1.154),doubleToFloat(7.941),doubleToFloat(5.184),doubleToFloat(0.9982),doubleToFloat(5.655),doubleToFloat(5.654),doubleToFloat(0.5149),doubleToFloat(1.585),doubleToFloat(5.799),doubleToFloat(0.4902),doubleToFloat(1.232),doubleToFloat(5.439),doubleToFloat(0.9286),doubleToFloat(1.125),doubleToFloat(5.211),doubleToFloat(3.156),doubleToFloat(0.2681),doubleToFloat(3.419),doubleToFloat(3.713),doubleToFloat(2.083),doubleToFloat(3.972),doubleToFloat(3.746),doubleToFloat(3.354),doubleToFloat(3.906),doubleToFloat(3.478),doubleToFloat(0.5638),doubleToFloat(0.6931),doubleToFloat(3.219),doubleToFloat(0.1947),doubleToFloat(2.395),doubleToFloat(3.523),doubleToFloat(0.8927),doubleToFloat(-0.5097),doubleToFloat(2.091),doubleToFloat(-0.0399),doubleToFloat(-0.8455),doubleToFloat(5.674),doubleToFloat(3.111),doubleToFloat(-0.8309),doubleToFloat(5.795),doubleToFloat(3.115),doubleToFloat(-0.7085),doubleToFloat(5.437),doubleToFloat(2.332),doubleToFloat(-0.5267),doubleToFloat(5.351),doubleToFloat(2.338),doubleToFloat(-0.6258),doubleToFloat(4.887),doubleToFloat(6.131),doubleToFloat(-0.1991),doubleToFloat(0.9005),doubleToFloat(-0.3978),doubleToFloat(-0.9102),doubleToFloat(5.666),doubleToFloat(3.939),doubleToFloat(-0.6403),doubleToFloat(5.762),doubleToFloat(3.929),doubleToFloat(-0.5133),doubleToFloat(5.294),doubleToFloat(4.301),doubleToFloat(-0.233),doubleToFloat(5.367),doubleToFloat(4.311),doubleToFloat(-0.0354),doubleToFloat(4.943),doubleToFloat(1.81),doubleToFloat(-0.0909),doubleToFloat(3.959),doubleToFloat(1.174),doubleToFloat(2.174),doubleToFloat(3.12),doubleToFloat(10.01),doubleToFloat(1.457),doubleToFloat(2.96),doubleToFloat(9.408),doubleToFloat(3.354),doubleToFloat(4.168),doubleToFloat(8.393),doubleToFloat(2.757),doubleToFloat(4.385),doubleToFloat(8.675),doubleToFloat(1.083),doubleToFloat(3.526),doubleToFloat(7.625),doubleToFloat(4.256),doubleToFloat(2.72),doubleToFloat(8.125),doubleToFloat(4.818),doubleToFloat(2.696),doubleToFloat(5.505),doubleToFloat(5.253),doubleToFloat(3.66),doubleToFloat(5.442),doubleToFloat(4.348),doubleToFloat(5.034),doubleToFloat(6.173),doubleToFloat(0.9192),doubleToFloat(4.649),doubleToFloat(5.425),doubleToFloat(2.482),doubleToFloat(1.487),doubleToFloat(9.764),doubleToFloat(3.712),doubleToFloat(1.541),doubleToFloat(10.58),doubleToFloat(1.636),doubleToFloat(1.455),doubleToFloat(8.326),doubleToFloat(5.261),doubleToFloat(1.481),doubleToFloat(5.552),doubleToFloat(5.668),doubleToFloat(4.471),doubleToFloat(8.779),doubleToFloat(-0.2191),doubleToFloat(3.192),doubleToFloat(10.2),doubleToFloat(-0.2191),doubleToFloat(5.004),doubleToFloat(4.301),doubleToFloat(-0.153),doubleToFloat(4.641),doubleToFloat(4.305),doubleToFloat(2.345),doubleToFloat(4.927),doubleToFloat(4.268),doubleToFloat(0.8143),doubleToFloat(1.366),doubleToFloat(5.868),doubleToFloat(-5.446),doubleToFloat(1.35),doubleToFloat(3.777),doubleToFloat(-5.335),doubleToFloat(3.821),doubleToFloat(5.927),doubleToFloat(-4.185),doubleToFloat(4.745),doubleToFloat(6.082),doubleToFloat(-2.283),doubleToFloat(4.695),doubleToFloat(4.15),doubleToFloat(-2.117),doubleToFloat(3.783),doubleToFloat(3.944),doubleToFloat(-4.083),doubleToFloat(3.574),doubleToFloat(7.393),doubleToFloat(-4.111),doubleToFloat(2.531),doubleToFloat(7.885),doubleToFloat(-4.647),doubleToFloat(2.999),doubleToFloat(9.621),doubleToFloat(-2.588),doubleToFloat(4.33),doubleToFloat(8.423),doubleToFloat(-2.376),doubleToFloat(1.367),doubleToFloat(8.138),doubleToFloat(-4.958),doubleToFloat(1.169),doubleToFloat(1.568),doubleToFloat(-4.469),doubleToFloat(3.672),doubleToFloat(2.332),doubleToFloat(-3.293),doubleToFloat(4.455),doubleToFloat(2.711),doubleToFloat(-1.938),doubleToFloat(2.747),doubleToFloat(5.88),doubleToFloat(-4.933),doubleToFloat(2.714),doubleToFloat(3.853),doubleToFloat(-4.856),doubleToFloat(1.457),doubleToFloat(10.14),doubleToFloat(-2.76),doubleToFloat(2.44),doubleToFloat(1.914),doubleToFloat(-4.064),doubleToFloat(4.868),doubleToFloat(3.145),doubleToFloat(-0.5647),doubleToFloat(4.475),doubleToFloat(1.829),doubleToFloat(-0.1635),doubleToFloat(5.135),doubleToFloat(6.181),doubleToFloat(-0.2191),doubleToFloat(1.618),doubleToFloat(10.79),doubleToFloat(-0.2191),doubleToFloat(2.724),doubleToFloat(4.589),doubleToFloat(5.049),doubleToFloat(3.591),doubleToFloat(4.488),doubleToFloat(4.221),doubleToFloat(0.1149),doubleToFloat(4.778),doubleToFloat(5.713),doubleToFloat(1.366),doubleToFloat(4.722),doubleToFloat(5.562),doubleToFloat(2.602),doubleToFloat(4.621),doubleToFloat(5.166),doubleToFloat(1.575),doubleToFloat(4.708),doubleToFloat(5.516),doubleToFloat(4.529),doubleToFloat(4.351),doubleToFloat(2.507),doubleToFloat(3.728),doubleToFloat(4.429),doubleToFloat(4.035),doubleToFloat(3.569),doubleToFloat(6.668),doubleToFloat(4.387),doubleToFloat(2.705),doubleToFloat(6.791),doubleToFloat(5.166),doubleToFloat(4.562),doubleToFloat(6.59),doubleToFloat(2.583),doubleToFloat(1.472),doubleToFloat(6.791),doubleToFloat(5.64),doubleToFloat(3.493),doubleToFloat(1.22),doubleToFloat(-1.566),doubleToFloat(4.216),doubleToFloat(1.991),doubleToFloat(-1.124),doubleToFloat(4.852),doubleToFloat(1.833),doubleToFloat(-0.2281),doubleToFloat(0),doubleToFloat(0.0712),doubleToFloat(4.922),doubleToFloat(0),doubleToFloat(0.1217),doubleToFloat(-2.459),doubleToFloat(0),doubleToFloat(6.791),doubleToFloat(5.809),doubleToFloat(0),doubleToFloat(8.204),doubleToFloat(-5.027),doubleToFloat(0),doubleToFloat(5.591),doubleToFloat(5.846),doubleToFloat(4.226),doubleToFloat(1.487),doubleToFloat(0.633),doubleToFloat(4.348),doubleToFloat(1.704),doubleToFloat(-0.2098),doubleToFloat(0),doubleToFloat(2.054),doubleToFloat(5.623),doubleToFloat(0),doubleToFloat(11),doubleToFloat(-0.2191),doubleToFloat(4.507),doubleToFloat(2.505),doubleToFloat(-0.8744),doubleToFloat(-0.9005),doubleToFloat(-0.6145),doubleToFloat(4.151),doubleToFloat(-0.9532),doubleToFloat(0.1621),doubleToFloat(4.839),doubleToFloat(-0.979),doubleToFloat(2.946),doubleToFloat(5.169),doubleToFloat(0),doubleToFloat(2.906),doubleToFloat(5.403),doubleToFloat(-0.929),doubleToFloat(1.885),doubleToFloat(5.318),doubleToFloat(-0.8685),doubleToFloat(-0.7949),doubleToFloat(0.7211),doubleToFloat(-0.8341),doubleToFloat(-1.015),doubleToFloat(3.47),doubleToFloat(0),doubleToFloat(-0.8828),doubleToFloat(0.7211),doubleToFloat(-4.409),doubleToFloat(2.567),doubleToFloat(2.304),doubleToFloat(-4.158),doubleToFloat(1.51),doubleToFloat(2.208),doubleToFloat(-4.388),doubleToFloat(1.688),doubleToFloat(0.6199),doubleToFloat(-4.699),doubleToFloat(2.772),doubleToFloat(0.5821),doubleToFloat(-4.797),doubleToFloat(4.23),doubleToFloat(0.6766),doubleToFloat(-4.479),doubleToFloat(3.877),doubleToFloat(2.364),doubleToFloat(-3.395),doubleToFloat(7.384),doubleToFloat(4.125),doubleToFloat(-2.387),doubleToFloat(7.787),doubleToFloat(4.862),doubleToFloat(-2.437),doubleToFloat(5.73),doubleToFloat(5.231),doubleToFloat(-3.658),doubleToFloat(6.064),doubleToFloat(4.107),doubleToFloat(-3.578),doubleToFloat(1.206),doubleToFloat(3.744),doubleToFloat(-2.377),doubleToFloat(0.9448),doubleToFloat(4.645),doubleToFloat(-2.369),doubleToFloat(0.4377),doubleToFloat(4.433),doubleToFloat(-3.476),doubleToFloat(0.7672),doubleToFloat(3.645),doubleToFloat(-2.278),doubleToFloat(-0.2885),doubleToFloat(3.759),doubleToFloat(-2.385),doubleToFloat(1.808),doubleToFloat(4.996),doubleToFloat(-2.386),doubleToFloat(3.002),doubleToFloat(4.854),doubleToFloat(-2.099),doubleToFloat(-0.3536),doubleToFloat(0.7104),doubleToFloat(-2.198),doubleToFloat(-0.5116),doubleToFloat(2.809),doubleToFloat(-0.9982),doubleToFloat(5.655),doubleToFloat(5.654),doubleToFloat(-1.154),doubleToFloat(7.941),doubleToFloat(5.184),doubleToFloat(0),doubleToFloat(7.969),doubleToFloat(5.255),doubleToFloat(0),doubleToFloat(5.613),doubleToFloat(5.74),doubleToFloat(0),doubleToFloat(1.616),doubleToFloat(6.035),doubleToFloat(0),doubleToFloat(1.154),doubleToFloat(5.535),doubleToFloat(-0.4902),doubleToFloat(1.232),doubleToFloat(5.439),doubleToFloat(-0.5149),doubleToFloat(1.585),doubleToFloat(5.799),doubleToFloat(0),doubleToFloat(0.9861),doubleToFloat(5.283),doubleToFloat(-0.9287),doubleToFloat(1.125),doubleToFloat(5.211),doubleToFloat(-3.156),doubleToFloat(0.2681),doubleToFloat(3.419),doubleToFloat(-3.713),doubleToFloat(2.083),doubleToFloat(3.972),doubleToFloat(-3.746),doubleToFloat(3.354),doubleToFloat(3.906),doubleToFloat(-3.478),doubleToFloat(0.5638),doubleToFloat(0.6931),doubleToFloat(-3.219),doubleToFloat(0.1947),doubleToFloat(2.395),doubleToFloat(-3.523),doubleToFloat(0.8927),doubleToFloat(-0.5097),doubleToFloat(-2.091),doubleToFloat(-0.0399),doubleToFloat(-0.8455),doubleToFloat(-5.351),doubleToFloat(2.338),doubleToFloat(-0.6258),doubleToFloat(-5.674),doubleToFloat(3.111),doubleToFloat(-0.8309),doubleToFloat(-5.795),doubleToFloat(3.115),doubleToFloat(-0.7085),doubleToFloat(-5.437),doubleToFloat(2.332),doubleToFloat(-0.5267),doubleToFloat(-5.004),doubleToFloat(4.301),doubleToFloat(-0.153),doubleToFloat(-4.887),doubleToFloat(6.131),doubleToFloat(-0.1991),doubleToFloat(-4.777),doubleToFloat(6.245),doubleToFloat(0.851),doubleToFloat(-4.475),doubleToFloat(1.829),doubleToFloat(-0.1635),doubleToFloat(-4.852),doubleToFloat(1.833),doubleToFloat(-0.2281),doubleToFloat(-4.943),doubleToFloat(1.81),doubleToFloat(-0.0909),doubleToFloat(-0.9006),doubleToFloat(-0.3978),doubleToFloat(-0.9102),doubleToFloat(0),doubleToFloat(-0.4855),doubleToFloat(-0.9159),doubleToFloat(-4.476),doubleToFloat(6.307),doubleToFloat(2.523),doubleToFloat(-5.666),doubleToFloat(3.939),doubleToFloat(-0.6403),doubleToFloat(-5.762),doubleToFloat(3.929),doubleToFloat(-0.5133),doubleToFloat(-4.868),doubleToFloat(3.145),doubleToFloat(-0.5647),doubleToFloat(-5.294),doubleToFloat(4.301),doubleToFloat(-0.233),doubleToFloat(-5.367),doubleToFloat(4.311),doubleToFloat(-0.0354),doubleToFloat(-3.959),doubleToFloat(1.174),doubleToFloat(2.174),doubleToFloat(-0.9848),doubleToFloat(0.1758),doubleToFloat(-2.372),doubleToFloat(-2.165),doubleToFloat(0.4361),doubleToFloat(-2.077),doubleToFloat(-4.226),doubleToFloat(1.487),doubleToFloat(0.633),doubleToFloat(-4.348),doubleToFloat(1.704),doubleToFloat(-0.2098),doubleToFloat(-3.12),doubleToFloat(10.01),doubleToFloat(1.457),doubleToFloat(-2.96),doubleToFloat(9.408),doubleToFloat(3.354),doubleToFloat(-4.168),doubleToFloat(8.393),doubleToFloat(2.757),doubleToFloat(-4.385),doubleToFloat(8.675),doubleToFloat(1.083),doubleToFloat(-3.66),doubleToFloat(5.442),doubleToFloat(4.348),doubleToFloat(-3.569),doubleToFloat(6.668),doubleToFloat(4.387),doubleToFloat(-2.705),doubleToFloat(6.791),doubleToFloat(5.166),doubleToFloat(-2.696),doubleToFloat(5.505),doubleToFloat(5.253),doubleToFloat(-5.034),doubleToFloat(6.173),doubleToFloat(0.9192),doubleToFloat(-4.562),doubleToFloat(6.59),doubleToFloat(2.583),doubleToFloat(0),doubleToFloat(10.81),doubleToFloat(1.746),doubleToFloat(0),doubleToFloat(9.878),doubleToFloat(3.889),doubleToFloat(-1.487),doubleToFloat(9.764),doubleToFloat(3.712),doubleToFloat(-1.541),doubleToFloat(10.58),doubleToFloat(1.636),doubleToFloat(-1.455),doubleToFloat(8.326),doubleToFloat(5.261),doubleToFloat(0),doubleToFloat(8.433),doubleToFloat(5.392),doubleToFloat(-1.472),doubleToFloat(6.791),doubleToFloat(5.64),doubleToFloat(-1.481),doubleToFloat(5.552),doubleToFloat(5.668),doubleToFloat(-5.135),doubleToFloat(6.181),doubleToFloat(-0.2191),doubleToFloat(-4.471),doubleToFloat(8.779),doubleToFloat(-0.2191),doubleToFloat(-1.618),doubleToFloat(10.79),doubleToFloat(-0.2191),doubleToFloat(-3.192),doubleToFloat(10.2),doubleToFloat(-0.2191),doubleToFloat(-2.72),doubleToFloat(8.125),doubleToFloat(4.818),doubleToFloat(-3.527),doubleToFloat(7.625),doubleToFloat(4.256),doubleToFloat(-4.927),doubleToFloat(4.268),doubleToFloat(0.8143),doubleToFloat(-3.728),doubleToFloat(4.429),doubleToFloat(4.035),doubleToFloat(-4.529),doubleToFloat(4.351),doubleToFloat(2.507),doubleToFloat(-4.649),doubleToFloat(5.425),doubleToFloat(2.482),doubleToFloat(-4.641),doubleToFloat(4.305),doubleToFloat(2.345),doubleToFloat(-1.35),doubleToFloat(3.777),doubleToFloat(-5.335),doubleToFloat(0),doubleToFloat(3.766),doubleToFloat(-5.408),doubleToFloat(0),doubleToFloat(5.903),doubleToFloat(-5.528),doubleToFloat(-1.366),doubleToFloat(5.868),doubleToFloat(-5.446),doubleToFloat(-4.695),doubleToFloat(4.15),doubleToFloat(-2.117),doubleToFloat(-3.783),doubleToFloat(3.944),doubleToFloat(-4.083),doubleToFloat(-3.821),doubleToFloat(5.927),doubleToFloat(-4.185),doubleToFloat(-4.745),doubleToFloat(6.082),doubleToFloat(-2.283),doubleToFloat(-2.531),doubleToFloat(7.885),doubleToFloat(-4.647),doubleToFloat(-2.999),doubleToFloat(9.621),doubleToFloat(-2.588),doubleToFloat(-4.33),doubleToFloat(8.423),doubleToFloat(-2.376),doubleToFloat(-3.574),doubleToFloat(7.393),doubleToFloat(-4.111),doubleToFloat(-1.367),doubleToFloat(8.138),doubleToFloat(-4.958),doubleToFloat(-1.169),doubleToFloat(1.568),doubleToFloat(-4.469),doubleToFloat(0),doubleToFloat(1.513),doubleToFloat(-4.508),doubleToFloat(-3.672),doubleToFloat(2.332),doubleToFloat(-3.293),doubleToFloat(-4.455),doubleToFloat(2.711),doubleToFloat(-1.938),doubleToFloat(-2.747),doubleToFloat(5.88),doubleToFloat(-4.933),doubleToFloat(-2.714),doubleToFloat(3.853),doubleToFloat(-4.856),doubleToFloat(-1.457),doubleToFloat(10.14),doubleToFloat(-2.76),doubleToFloat(0),doubleToFloat(10.32),doubleToFloat(-2.867),doubleToFloat(-2.44),doubleToFloat(1.914),doubleToFloat(-4.064),doubleToFloat(-4.216),doubleToFloat(1.991),doubleToFloat(-1.124),doubleToFloat(-3.493),doubleToFloat(1.22),doubleToFloat(-1.566),doubleToFloat(-2.724),doubleToFloat(4.589),doubleToFloat(5.049),doubleToFloat(-3.591),doubleToFloat(4.488),doubleToFloat(4.221),doubleToFloat(-0.1149),doubleToFloat(4.778),doubleToFloat(5.713),doubleToFloat(-1.366),doubleToFloat(4.722),doubleToFloat(5.562),doubleToFloat(-1.575),doubleToFloat(4.708),doubleToFloat(5.516),doubleToFloat(-2.602),doubleToFloat(4.621),doubleToFloat(5.166),doubleToFloat(-4.507),doubleToFloat(2.505),doubleToFloat(-0.8744),doubleToFloat(6.838),doubleToFloat(1.545),doubleToFloat(-2.282),doubleToFloat(6.602),doubleToFloat(2.817),doubleToFloat(-2.029),doubleToFloat(6.02),doubleToFloat(2.291),doubleToFloat(-1.586),doubleToFloat(6.461),doubleToFloat(1.29),doubleToFloat(-1.991),doubleToFloat(6.917),doubleToFloat(1.604),doubleToFloat(-2.832),doubleToFloat(6.689),doubleToFloat(2.938),doubleToFloat(-2.813),doubleToFloat(6.69),doubleToFloat(1.445),doubleToFloat(-3.307),doubleToFloat(6.326),doubleToFloat(2.75),doubleToFloat(-3.516),doubleToFloat(6.301),doubleToFloat(1.17),doubleToFloat(-3.409),doubleToFloat(5.783),doubleToFloat(2.283),doubleToFloat(-3.716),doubleToFloat(5.861),doubleToFloat(0.8524),doubleToFloat(-3.05),doubleToFloat(5.137),doubleToFloat(1.745),doubleToFloat(-3.289),doubleToFloat(5.798),doubleToFloat(0.8074),doubleToFloat(-2.579),doubleToFloat(5.05),doubleToFloat(1.624),doubleToFloat(-2.484),doubleToFloat(5.974),doubleToFloat(0.9271),doubleToFloat(-2.145),doubleToFloat(5.423),doubleToFloat(1.814),doubleToFloat(-1.761),doubleToFloat(5.043),doubleToFloat(4.839),doubleToFloat(-1.955),doubleToFloat(4.866),doubleToFloat(4.527),doubleToFloat(-1.724),doubleToFloat(5.502),doubleToFloat(3.159),doubleToFloat(-1.59),doubleToFloat(6.049),doubleToFloat(3.671),doubleToFloat(-1.969),doubleToFloat(5.058),doubleToFloat(4.969),doubleToFloat(-2.43),doubleToFloat(6.147),doubleToFloat(3.845),doubleToFloat(-2.687),doubleToFloat(4.902),doubleToFloat(4.839),doubleToFloat(-2.87),doubleToFloat(5.842),doubleToFloat(3.671),doubleToFloat(-3.324),doubleToFloat(4.668),doubleToFloat(4.527),doubleToFloat(-3.018),doubleToFloat(5.313),doubleToFloat(3.252),doubleToFloat(-3.506),doubleToFloat(4.491),doubleToFloat(4.215),doubleToFloat(-2.787),doubleToFloat(4.829),doubleToFloat(2.809),doubleToFloat(-3.118),doubleToFloat(4.476),doubleToFloat(4.085),doubleToFloat(-2.312),doubleToFloat(4.731),doubleToFloat(2.636),doubleToFloat(-2.4),doubleToFloat(4.631),doubleToFloat(4.215),doubleToFloat(-1.872),doubleToFloat(5.036),doubleToFloat(2.809),doubleToFloat(-1.763),doubleToFloat(6.598),doubleToFloat(0.3401),doubleToFloat(-2.723),doubleToFloat(4.537),doubleToFloat(4.855),doubleToFloat(-2.325),doubleToFloat(5.353),doubleToFloat(5.649),doubleToFloat(-1.564),doubleToFloat(5.783),doubleToFloat(5.473),doubleToFloat(-1.726),doubleToFloat(5.603),doubleToFloat(5.613),doubleToFloat(-1.998),doubleToFloat(5.268),doubleToFloat(5.671),doubleToFloat(-2.063),doubleToFloat(4.975),doubleToFloat(5.613),doubleToFloat(-1.883),doubleToFloat(4.896),doubleToFloat(5.473),doubleToFloat(-1.563),doubleToFloat(5.076),doubleToFloat(5.333),doubleToFloat(-1.291),doubleToFloat(5.41),doubleToFloat(5.275),doubleToFloat(-1.226),doubleToFloat(5.703),doubleToFloat(5.333),doubleToFloat(-1.407),doubleToFloat(5.679),doubleToFloat(5.246),doubleToFloat(-2.339),doubleToFloat(5.934),doubleToFloat(5.048),doubleToFloat(-1.955),doubleToFloat(5.2),doubleToFloat(5.328),doubleToFloat(-2.466),doubleToFloat(4.792),doubleToFloat(5.246),doubleToFloat(-2.177),doubleToFloat(4.679),doubleToFloat(5.048),doubleToFloat(-1.725),doubleToFloat(4.934),doubleToFloat(4.85),doubleToFloat(-1.34),doubleToFloat(5.406),doubleToFloat(4.768),doubleToFloat(-1.248),doubleToFloat(5.821),doubleToFloat(4.85),doubleToFloat(-1.503),doubleToFloat(5.537),doubleToFloat(4.763),doubleToFloat(-2.388),doubleToFloat(5.717),doubleToFloat(4.623),doubleToFloat(-2.116),doubleToFloat(5.198),doubleToFloat(4.817),doubleToFloat(-2.477),doubleToFloat(4.909),doubleToFloat(4.763),doubleToFloat(-2.273),doubleToFloat(4.83),doubleToFloat(4.623),doubleToFloat(-1.954),doubleToFloat(5.01),doubleToFloat(4.483),doubleToFloat(-1.682),doubleToFloat(5.344),doubleToFloat(4.425),doubleToFloat(-1.617),doubleToFloat(5.637),doubleToFloat(4.483),doubleToFloat(-1.797),doubleToFloat(5.259),doubleToFloat(4.447),doubleToFloat(-2.116),doubleToFloat(5.198),doubleToFloat(4.81),doubleToFloat(-2.477),doubleToFloat(4.807),doubleToFloat(5.649),doubleToFloat(-3.229),doubleToFloat(5.184),doubleToFloat(5.613),doubleToFloat(-2.91),doubleToFloat(5.264),doubleToFloat(5.473),doubleToFloat(-3.23),doubleToFloat(4.891),doubleToFloat(5.671),doubleToFloat(-2.73),doubleToFloat(4.557),doubleToFloat(5.613),doubleToFloat(-2.795),doubleToFloat(4.377),doubleToFloat(5.473),doubleToFloat(-3.067),doubleToFloat(4.457),doubleToFloat(5.333),doubleToFloat(-3.387),doubleToFloat(4.749),doubleToFloat(5.275),doubleToFloat(-3.567),doubleToFloat(5.084),doubleToFloat(5.333),doubleToFloat(-3.502),doubleToFloat(5.368),doubleToFloat(5.246),doubleToFloat(-2.617),doubleToFloat(5.481),doubleToFloat(5.048),doubleToFloat(-3.069),doubleToFloat(4.96),doubleToFloat(5.328),doubleToFloat(-2.327),doubleToFloat(4.481),doubleToFloat(5.246),doubleToFloat(-2.454),doubleToFloat(4.226),doubleToFloat(5.048),doubleToFloat(-2.838),doubleToFloat(4.339),doubleToFloat(4.85),doubleToFloat(-3.29),doubleToFloat(4.753),doubleToFloat(4.768),doubleToFloat(-3.545),doubleToFloat(5.226),doubleToFloat(4.85),doubleToFloat(-3.453),doubleToFloat(5.25),doubleToFloat(4.763),doubleToFloat(-2.52),doubleToFloat(5.33),doubleToFloat(4.623),doubleToFloat(-2.84),doubleToFloat(4.961),doubleToFloat(5.075),doubleToFloat(-2.316),doubleToFloat(4.623),doubleToFloat(4.763),doubleToFloat(-2.405),doubleToFloat(4.443),doubleToFloat(4.623),doubleToFloat(-2.677),doubleToFloat(4.523),doubleToFloat(4.483),doubleToFloat(-2.997),doubleToFloat(4.816),doubleToFloat(4.425),doubleToFloat(-3.177),doubleToFloat(5.15),doubleToFloat(4.483),doubleToFloat(-3.112),doubleToFloat(4.961),doubleToFloat(4.817),doubleToFloat(-2.316),doubleToFloat(4.9),doubleToFloat(4.447),doubleToFloat(-2.678),doubleToFloat(-6.838),doubleToFloat(1.545),doubleToFloat(-2.282),doubleToFloat(-6.602),doubleToFloat(2.817),doubleToFloat(-2.029),doubleToFloat(-6.02),doubleToFloat(2.291),doubleToFloat(-1.586),doubleToFloat(-6.461),doubleToFloat(1.29),doubleToFloat(-1.991),doubleToFloat(-6.917),doubleToFloat(1.604),doubleToFloat(-2.832),doubleToFloat(-6.689),doubleToFloat(2.938),doubleToFloat(-2.813),doubleToFloat(-6.69),doubleToFloat(1.445),doubleToFloat(-3.307),doubleToFloat(-6.326),doubleToFloat(2.75),doubleToFloat(-3.516),doubleToFloat(-6.301),doubleToFloat(1.17),doubleToFloat(-3.409),doubleToFloat(-5.783),doubleToFloat(2.283),doubleToFloat(-3.716),doubleToFloat(-5.861),doubleToFloat(0.8524),doubleToFloat(-3.05),doubleToFloat(-5.137),doubleToFloat(1.745),doubleToFloat(-3.289),doubleToFloat(-5.798),doubleToFloat(0.8074),doubleToFloat(-2.579),doubleToFloat(-5.05),doubleToFloat(1.624),doubleToFloat(-2.484),doubleToFloat(-5.974),doubleToFloat(0.9271),doubleToFloat(-2.145),doubleToFloat(-5.423),doubleToFloat(1.814),doubleToFloat(-1.761),doubleToFloat(-5.043),doubleToFloat(4.839),doubleToFloat(-1.955),doubleToFloat(-4.866),doubleToFloat(4.527),doubleToFloat(-1.724),doubleToFloat(-5.502),doubleToFloat(3.159),doubleToFloat(-1.59),doubleToFloat(-6.049),doubleToFloat(3.671),doubleToFloat(-1.969),doubleToFloat(-5.058),doubleToFloat(4.969),doubleToFloat(-2.43),doubleToFloat(-6.147),doubleToFloat(3.845),doubleToFloat(-2.687),doubleToFloat(-4.902),doubleToFloat(4.839),doubleToFloat(-2.87),doubleToFloat(-5.842),doubleToFloat(3.671),doubleToFloat(-3.324),doubleToFloat(-4.668),doubleToFloat(4.527),doubleToFloat(-3.018),doubleToFloat(-5.313),doubleToFloat(3.252),doubleToFloat(-3.506),doubleToFloat(-4.491),doubleToFloat(4.215),doubleToFloat(-2.787),doubleToFloat(-4.829),doubleToFloat(2.809),doubleToFloat(-3.118),doubleToFloat(-4.476),doubleToFloat(4.085),doubleToFloat(-2.312),doubleToFloat(-4.731),doubleToFloat(2.636),doubleToFloat(-2.4),doubleToFloat(-4.631),doubleToFloat(4.215),doubleToFloat(-1.872),doubleToFloat(-5.036),doubleToFloat(2.809),doubleToFloat(-1.763),doubleToFloat(-6.598),doubleToFloat(0.3401),doubleToFloat(-2.723),doubleToFloat(-4.537),doubleToFloat(4.855),doubleToFloat(-2.325),doubleToFloat(-5.353),doubleToFloat(5.649),doubleToFloat(-1.564),doubleToFloat(-5.783),doubleToFloat(5.473),doubleToFloat(-1.726),doubleToFloat(-5.603),doubleToFloat(5.613),doubleToFloat(-1.998),doubleToFloat(-5.268),doubleToFloat(5.671),doubleToFloat(-2.063),doubleToFloat(-4.975),doubleToFloat(5.613),doubleToFloat(-1.883),doubleToFloat(-4.896),doubleToFloat(5.473),doubleToFloat(-1.563),doubleToFloat(-5.076),doubleToFloat(5.333),doubleToFloat(-1.291),doubleToFloat(-5.41),doubleToFloat(5.275),doubleToFloat(-1.226),doubleToFloat(-5.703),doubleToFloat(5.333),doubleToFloat(-1.407),doubleToFloat(-5.679),doubleToFloat(5.246),doubleToFloat(-2.339),doubleToFloat(-5.934),doubleToFloat(5.048),doubleToFloat(-1.955),doubleToFloat(-5.2),doubleToFloat(5.328),doubleToFloat(-2.466),doubleToFloat(-4.792),doubleToFloat(5.246),doubleToFloat(-2.177),doubleToFloat(-4.679),doubleToFloat(5.048),doubleToFloat(-1.725),doubleToFloat(-4.934),doubleToFloat(4.85),doubleToFloat(-1.34),doubleToFloat(-5.406),doubleToFloat(4.768),doubleToFloat(-1.248),doubleToFloat(-5.821),doubleToFloat(4.85),doubleToFloat(-1.503),doubleToFloat(-5.537),doubleToFloat(4.763),doubleToFloat(-2.388),doubleToFloat(-5.717),doubleToFloat(4.623),doubleToFloat(-2.116),doubleToFloat(-5.198),doubleToFloat(4.817),doubleToFloat(-2.477),doubleToFloat(-4.909),doubleToFloat(4.763),doubleToFloat(-2.273),doubleToFloat(-4.83),doubleToFloat(4.623),doubleToFloat(-1.954),doubleToFloat(-5.01),doubleToFloat(4.483),doubleToFloat(-1.682),doubleToFloat(-5.344),doubleToFloat(4.425),doubleToFloat(-1.617),doubleToFloat(-5.637),doubleToFloat(4.483),doubleToFloat(-1.797),doubleToFloat(-5.259),doubleToFloat(4.447),doubleToFloat(-2.116),doubleToFloat(-5.198),doubleToFloat(4.81),doubleToFloat(-2.477),doubleToFloat(-4.807),doubleToFloat(5.649),doubleToFloat(-3.229),doubleToFloat(-5.184),doubleToFloat(5.613),doubleToFloat(-2.91),doubleToFloat(-5.264),doubleToFloat(5.473),doubleToFloat(-3.23),doubleToFloat(-4.891),doubleToFloat(5.671),doubleToFloat(-2.73),doubleToFloat(-4.557),doubleToFloat(5.613),doubleToFloat(-2.795),doubleToFloat(-4.377),doubleToFloat(5.473),doubleToFloat(-3.067),doubleToFloat(-4.457),doubleToFloat(5.333),doubleToFloat(-3.387),doubleToFloat(-4.749),doubleToFloat(5.275),doubleToFloat(-3.567),doubleToFloat(-5.084),doubleToFloat(5.333),doubleToFloat(-3.502),doubleToFloat(-5.368),doubleToFloat(5.246),doubleToFloat(-2.617),doubleToFloat(-5.481),doubleToFloat(5.048),doubleToFloat(-3.069),doubleToFloat(-4.96),doubleToFloat(5.328),doubleToFloat(-2.327),doubleToFloat(-4.481),doubleToFloat(5.246),doubleToFloat(-2.454),doubleToFloat(-4.226),doubleToFloat(5.048),doubleToFloat(-2.838),doubleToFloat(-4.339),doubleToFloat(4.85),doubleToFloat(-3.29),doubleToFloat(-4.753),doubleToFloat(4.768),doubleToFloat(-3.545),doubleToFloat(-5.226),doubleToFloat(4.85),doubleToFloat(-3.453),doubleToFloat(-5.25),doubleToFloat(4.763),doubleToFloat(-2.52),doubleToFloat(-5.33),doubleToFloat(4.623),doubleToFloat(-2.84),doubleToFloat(-4.961),doubleToFloat(5.075),doubleToFloat(-2.316),doubleToFloat(-4.623),doubleToFloat(4.763),doubleToFloat(-2.405),doubleToFloat(-4.443),doubleToFloat(4.623),doubleToFloat(-2.677),doubleToFloat(-4.523),doubleToFloat(4.483),doubleToFloat(-2.997),doubleToFloat(-4.816),doubleToFloat(4.425),doubleToFloat(-3.177),doubleToFloat(-5.15),doubleToFloat(4.483),doubleToFloat(-3.112),doubleToFloat(-4.961),doubleToFloat(4.817),doubleToFloat(-2.316),doubleToFloat(-4.9),doubleToFloat(4.447),doubleToFloat(-2.678)], Java.type("float[]"))))
                          .setTexCoord(new TextureCoordinate().setPoint(Java.to([doubleToFloat(0.0688),doubleToFloat(0.5877),doubleToFloat(0.0977),doubleToFloat(0.611),doubleToFloat(0.0743),doubleToFloat(0.6494),doubleToFloat(0.0415),doubleToFloat(0.6272),doubleToFloat(0.0555),doubleToFloat(0.7752),doubleToFloat(0.016),doubleToFloat(0.7731),doubleToFloat(0.0132),doubleToFloat(0.7332),doubleToFloat(0.0543),doubleToFloat(0.7372),doubleToFloat(0.219),doubleToFloat(0.5285),doubleToFloat(0.1338),doubleToFloat(0.5737),doubleToFloat(0.1122),doubleToFloat(0.5472),doubleToFloat(0.2012),doubleToFloat(0.4968),doubleToFloat(0.2578),doubleToFloat(0.7563),doubleToFloat(0.2542),doubleToFloat(0.7123),doubleToFloat(0.3174),doubleToFloat(0.689),doubleToFloat(0.3433),doubleToFloat(0.8122),doubleToFloat(0.2605),doubleToFloat(0.8105),doubleToFloat(0.1723),doubleToFloat(0.9635),doubleToFloat(0.119),doubleToFloat(0.9796),doubleToFloat(0.1136),doubleToFloat(0.8986),doubleToFloat(0.1833),doubleToFloat(0.9073),doubleToFloat(0.1832),doubleToFloat(0.711),doubleToFloat(0.1219),doubleToFloat(0.6971),doubleToFloat(0.1281),doubleToFloat(0.6787),doubleToFloat(0.1822),doubleToFloat(0.696),doubleToFloat(0.1467),doubleToFloat(0.6461),doubleToFloat(0.1135),doubleToFloat(0.7318),doubleToFloat(0.1161),doubleToFloat(0.7801),doubleToFloat(0.2505),doubleToFloat(0.5799),doubleToFloat(0.1813),doubleToFloat(0.615),doubleToFloat(0.0517),doubleToFloat(0.8953),doubleToFloat(0.0645),doubleToFloat(0.9868),doubleToFloat(0.0159),doubleToFloat(0.9897),doubleToFloat(0.0103),doubleToFloat(0.8936),doubleToFloat(0.0085),doubleToFloat(0.7062),doubleToFloat(0.0212),doubleToFloat(0.6733),doubleToFloat(0.0412),doubleToFloat(0.6832),doubleToFloat(0.0277),doubleToFloat(0.7085),doubleToFloat(0.0285),doubleToFloat(0.6585),doubleToFloat(0.0605),doubleToFloat(0.6771),doubleToFloat(0.1839),doubleToFloat(0.6689),doubleToFloat(0.1816),doubleToFloat(0.7447),doubleToFloat(0.1868),doubleToFloat(0.7947),doubleToFloat(0.2771),doubleToFloat(0.6273),doubleToFloat(0.2169),doubleToFloat(0.6536),doubleToFloat(0.33),doubleToFloat(0.6037),doubleToFloat(0.3066),doubleToFloat(0.5553),doubleToFloat(0.3749),doubleToFloat(0.8185),doubleToFloat(0.3759),doubleToFloat(0.8941),doubleToFloat(0.3325),doubleToFloat(0.9023),doubleToFloat(0.2799),doubleToFloat(0.5032),doubleToFloat(0.2624),doubleToFloat(0.468),doubleToFloat(0.261),doubleToFloat(0.9119),doubleToFloat(0.3961),doubleToFloat(0.7402),doubleToFloat(0.3894),doubleToFloat(0.7444),doubleToFloat(0.376),doubleToFloat(0.7214),doubleToFloat(0.3809),doubleToFloat(0.7175),doubleToFloat(0.2502),doubleToFloat(0.6974),doubleToFloat(0.3719),doubleToFloat(0.4204),doubleToFloat(0.3904),doubleToFloat(0.4532),doubleToFloat(0.3987),doubleToFloat(0.5102),doubleToFloat(0.357),doubleToFloat(0.6782),doubleToFloat(0.3922),doubleToFloat(0.7719),doubleToFloat(0.3864),doubleToFloat(0.7714),doubleToFloat(0.4174),doubleToFloat(0.7307),doubleToFloat(0.39),doubleToFloat(0.7955),doubleToFloat(0.3866),doubleToFloat(0.7883),doubleToFloat(0.3721),doubleToFloat(0.7911),doubleToFloat(0.3325),doubleToFloat(0.7496),doubleToFloat(0.3522),doubleToFloat(0.6907),doubleToFloat(0.3998),doubleToFloat(0.563),doubleToFloat(0.3068),doubleToFloat(0.236),doubleToFloat(0.3081),doubleToFloat(0.2829),doubleToFloat(0.346),doubleToFloat(0.2738),doubleToFloat(0.3526),doubleToFloat(0.2339),doubleToFloat(0.3848),doubleToFloat(0.3433),doubleToFloat(0.3616),doubleToFloat(0.3304),doubleToFloat(0.3418),doubleToFloat(0.3508),doubleToFloat(0.3625),doubleToFloat(0.3697),doubleToFloat(0.4133),doubleToFloat(0.2527),doubleToFloat(0.3878),doubleToFloat(0.2875),doubleToFloat(0.2331),doubleToFloat(0.2498),doubleToFloat(0.2449),doubleToFloat(0.3094),doubleToFloat(0.2741),doubleToFloat(0.2963),doubleToFloat(0.2661),doubleToFloat(0.2424),doubleToFloat(0.2934),doubleToFloat(0.3437),doubleToFloat(0.2673),doubleToFloat(0.3609),doubleToFloat(0.2954),doubleToFloat(0.396),doubleToFloat(0.3186),doubleToFloat(0.3727),doubleToFloat(0.3381),doubleToFloat(0.3919),doubleToFloat(0.4396),doubleToFloat(0.2105),doubleToFloat(0.3775),doubleToFloat(0.1985),doubleToFloat(0.2661),doubleToFloat(0.1537),doubleToFloat(0.296),doubleToFloat(0.1693),doubleToFloat(0.3319),doubleToFloat(0.1838),doubleToFloat(0.3202),doubleToFloat(0.3269),doubleToFloat(0.3435),doubleToFloat(0.3163),doubleToFloat(0.4537),doubleToFloat(0.2676),doubleToFloat(0.487),doubleToFloat(0.2177),doubleToFloat(0.4077),doubleToFloat(0.3462),doubleToFloat(0.4301),doubleToFloat(0.3104),doubleToFloat(0.4116),doubleToFloat(0.2965),doubleToFloat(0.4355),doubleToFloat(0.3016),doubleToFloat(0.4927),doubleToFloat(0.0439),doubleToFloat(0.4942),doubleToFloat(0.0108),doubleToFloat(0.4384),doubleToFloat(0.0114),doubleToFloat(0.4441),doubleToFloat(0.044),doubleToFloat(0.4924),doubleToFloat(0.1655),doubleToFloat(0.4951),doubleToFloat(0.1112),doubleToFloat(0.45),doubleToFloat(0.1093),doubleToFloat(0.4472),doubleToFloat(0.16),doubleToFloat(0.4006),doubleToFloat(0.0807),doubleToFloat(0.3563),doubleToFloat(0.1256),doubleToFloat(0.3926),doubleToFloat(0.1484),doubleToFloat(0.4165),doubleToFloat(0.106),doubleToFloat(0.3725),doubleToFloat(0.0283),doubleToFloat(0.3869),doubleToFloat(0.0567),doubleToFloat(0.5491),doubleToFloat(0.0508),doubleToFloat(0.5559),doubleToFloat(0.0224),doubleToFloat(0.5393),doubleToFloat(0.1168),doubleToFloat(0.528),doubleToFloat(0.1641),doubleToFloat(0.4483),doubleToFloat(0.0787),doubleToFloat(0.4936),doubleToFloat(0.0789),doubleToFloat(0.3278),doubleToFloat(0.1019),doubleToFloat(0.3027),doubleToFloat(0.0782),doubleToFloat(0.5437),doubleToFloat(0.0842),doubleToFloat(0.5211),doubleToFloat(0.2011),doubleToFloat(0.5929),doubleToFloat(0.0593),doubleToFloat(0.6008),doubleToFloat(0.0377),doubleToFloat(0.553),doubleToFloat(0.1676),doubleToFloat(0.5749),doubleToFloat(0.1286),doubleToFloat(0.5859),doubleToFloat(0.0948),doubleToFloat(0.3807),doubleToFloat(0.3775),doubleToFloat(0.4007),doubleToFloat(0.3558),doubleToFloat(0.3141),doubleToFloat(0.4158),doubleToFloat(0.3277),doubleToFloat(0.426),doubleToFloat(0.3473),doubleToFloat(0.4065),doubleToFloat(0.3532),doubleToFloat(0.4015),doubleToFloat(0.3737),doubleToFloat(0.3844),doubleToFloat(0.3875),doubleToFloat(0.6367),doubleToFloat(0.4149),doubleToFloat(0.6919),doubleToFloat(0.3666),doubleToFloat(0.6933),doubleToFloat(0.3127),doubleToFloat(0.6727),doubleToFloat(0.35),doubleToFloat(0.6642),doubleToFloat(0.423),doubleToFloat(0.2308),doubleToFloat(0.359),doubleToFloat(0.2075),doubleToFloat(0.2287),doubleToFloat(0.205),doubleToFloat(0.2649),doubleToFloat(0.2011),doubleToFloat(0.3089),doubleToFloat(0.1998),doubleToFloat(0.4653),doubleToFloat(0.2507),doubleToFloat(0.3966),doubleToFloat(0.6644),doubleToFloat(0.5387),doubleToFloat(0.1826),doubleToFloat(0.0688),doubleToFloat(0.5877),doubleToFloat(0.0977),doubleToFloat(0.611),doubleToFloat(0.0743),doubleToFloat(0.6494),doubleToFloat(0.0415),doubleToFloat(0.6272),doubleToFloat(0.0555),doubleToFloat(0.7752),doubleToFloat(0.016),doubleToFloat(0.7731),doubleToFloat(0.0132),doubleToFloat(0.7332),doubleToFloat(0.0543),doubleToFloat(0.7372),doubleToFloat(0.219),doubleToFloat(0.5285),doubleToFloat(0.1338),doubleToFloat(0.5737),doubleToFloat(0.1122),doubleToFloat(0.5472),doubleToFloat(0.2012),doubleToFloat(0.4968),doubleToFloat(0.2578),doubleToFloat(0.7563),doubleToFloat(0.2542),doubleToFloat(0.7123),doubleToFloat(0.3174),doubleToFloat(0.689),doubleToFloat(0.3325),doubleToFloat(0.7496),doubleToFloat(0.3433),doubleToFloat(0.8122),doubleToFloat(0.2605),doubleToFloat(0.8105),doubleToFloat(0.1723),doubleToFloat(0.9635),doubleToFloat(0.119),doubleToFloat(0.9796),doubleToFloat(0.1136),doubleToFloat(0.8986),doubleToFloat(0.1833),doubleToFloat(0.9073),doubleToFloat(0.1832),doubleToFloat(0.711),doubleToFloat(0.1219),doubleToFloat(0.6971),doubleToFloat(0.1281),doubleToFloat(0.6787),doubleToFloat(0.1822),doubleToFloat(0.696),doubleToFloat(0.1467),doubleToFloat(0.6461),doubleToFloat(0.1135),doubleToFloat(0.7318),doubleToFloat(0.1161),doubleToFloat(0.7801),doubleToFloat(0.2505),doubleToFloat(0.5799),doubleToFloat(0.1813),doubleToFloat(0.615),doubleToFloat(0.0517),doubleToFloat(0.8953),doubleToFloat(0.0645),doubleToFloat(0.9868),doubleToFloat(0.0159),doubleToFloat(0.9897),doubleToFloat(0.0103),doubleToFloat(0.8936),doubleToFloat(0.0085),doubleToFloat(0.7062),doubleToFloat(0.0212),doubleToFloat(0.6733),doubleToFloat(0.0412),doubleToFloat(0.6832),doubleToFloat(0.0277),doubleToFloat(0.7085),doubleToFloat(0.0285),doubleToFloat(0.6585),doubleToFloat(0.0605),doubleToFloat(0.6771),doubleToFloat(0.1839),doubleToFloat(0.6689),doubleToFloat(0.1816),doubleToFloat(0.7447),doubleToFloat(0.1868),doubleToFloat(0.7947),doubleToFloat(0.2771),doubleToFloat(0.6273),doubleToFloat(0.2169),doubleToFloat(0.6536),doubleToFloat(0.33),doubleToFloat(0.6037),doubleToFloat(0.3066),doubleToFloat(0.5553),doubleToFloat(0.3809),doubleToFloat(0.7175),doubleToFloat(0.3961),doubleToFloat(0.7402),doubleToFloat(0.3894),doubleToFloat(0.7444),doubleToFloat(0.376),doubleToFloat(0.7214),doubleToFloat(0.3749),doubleToFloat(0.8185),doubleToFloat(0.3759),doubleToFloat(0.8941),doubleToFloat(0.3325),doubleToFloat(0.9023),doubleToFloat(0.357),doubleToFloat(0.6782),doubleToFloat(0.3666),doubleToFloat(0.6933),doubleToFloat(0.3522),doubleToFloat(0.6907),doubleToFloat(0.2799),doubleToFloat(0.5032),doubleToFloat(0.2624),doubleToFloat(0.468),doubleToFloat(0.261),doubleToFloat(0.9119),doubleToFloat(0.3922),doubleToFloat(0.7719),doubleToFloat(0.3864),doubleToFloat(0.7714),doubleToFloat(0.4174),doubleToFloat(0.7307),doubleToFloat(0.39),doubleToFloat(0.7955),doubleToFloat(0.3866),doubleToFloat(0.7883),doubleToFloat(0.3721),doubleToFloat(0.7911),doubleToFloat(0.2502),doubleToFloat(0.6974),doubleToFloat(0.3719),doubleToFloat(0.4204),doubleToFloat(0.3904),doubleToFloat(0.4532),doubleToFloat(0.3987),doubleToFloat(0.5102),doubleToFloat(0.3127),doubleToFloat(0.6727),doubleToFloat(0.35),doubleToFloat(0.6642),doubleToFloat(0.3068),doubleToFloat(0.236),doubleToFloat(0.3081),doubleToFloat(0.2829),doubleToFloat(0.346),doubleToFloat(0.2738),doubleToFloat(0.3526),doubleToFloat(0.2339),doubleToFloat(0.3848),doubleToFloat(0.3433),doubleToFloat(0.3616),doubleToFloat(0.3304),doubleToFloat(0.3418),doubleToFloat(0.3508),doubleToFloat(0.3625),doubleToFloat(0.3697),doubleToFloat(0.4133),doubleToFloat(0.2527),doubleToFloat(0.3878),doubleToFloat(0.2875),doubleToFloat(0.2331),doubleToFloat(0.2498),doubleToFloat(0.2449),doubleToFloat(0.3094),doubleToFloat(0.2741),doubleToFloat(0.2963),doubleToFloat(0.2661),doubleToFloat(0.2424),doubleToFloat(0.2934),doubleToFloat(0.3437),doubleToFloat(0.2673),doubleToFloat(0.3609),doubleToFloat(0.2954),doubleToFloat(0.396),doubleToFloat(0.3186),doubleToFloat(0.3727),doubleToFloat(0.3381),doubleToFloat(0.3919),doubleToFloat(0.423),doubleToFloat(0.2308),doubleToFloat(0.359),doubleToFloat(0.2075),doubleToFloat(0.2287),doubleToFloat(0.205),doubleToFloat(0.2649),doubleToFloat(0.2011),doubleToFloat(0.3089),doubleToFloat(0.1998),doubleToFloat(0.3202),doubleToFloat(0.3269),doubleToFloat(0.3435),doubleToFloat(0.3163),doubleToFloat(0.4537),doubleToFloat(0.2676),doubleToFloat(0.4653),doubleToFloat(0.2507),doubleToFloat(0.4077),doubleToFloat(0.3462),doubleToFloat(0.4301),doubleToFloat(0.3104),doubleToFloat(0.4116),doubleToFloat(0.2965),doubleToFloat(0.4355),doubleToFloat(0.3016),doubleToFloat(0.4927),doubleToFloat(0.0439),doubleToFloat(0.4942),doubleToFloat(0.0108),doubleToFloat(0.4384),doubleToFloat(0.0114),doubleToFloat(0.4441),doubleToFloat(0.044),doubleToFloat(0.4924),doubleToFloat(0.1655),doubleToFloat(0.4951),doubleToFloat(0.1112),doubleToFloat(0.45),doubleToFloat(0.1093),doubleToFloat(0.4472),doubleToFloat(0.16),doubleToFloat(0.4006),doubleToFloat(0.0807),doubleToFloat(0.3563),doubleToFloat(0.1256),doubleToFloat(0.3926),doubleToFloat(0.1484),doubleToFloat(0.4165),doubleToFloat(0.106),doubleToFloat(0.3725),doubleToFloat(0.0283),doubleToFloat(0.3869),doubleToFloat(0.0567),doubleToFloat(0.5491),doubleToFloat(0.0508),doubleToFloat(0.5559),doubleToFloat(0.0224),doubleToFloat(0.5393),doubleToFloat(0.1168),doubleToFloat(0.528),doubleToFloat(0.1641),doubleToFloat(0.4483),doubleToFloat(0.0787),doubleToFloat(0.4936),doubleToFloat(0.0789),doubleToFloat(0.3278),doubleToFloat(0.1019),doubleToFloat(0.3027),doubleToFloat(0.0782),doubleToFloat(0.5437),doubleToFloat(0.0842),doubleToFloat(0.487),doubleToFloat(0.2177),doubleToFloat(0.5211),doubleToFloat(0.2011),doubleToFloat(0.3319),doubleToFloat(0.1838),doubleToFloat(0.3775),doubleToFloat(0.1985),doubleToFloat(0.4396),doubleToFloat(0.2105),doubleToFloat(0.2661),doubleToFloat(0.1537),doubleToFloat(0.296),doubleToFloat(0.1693),doubleToFloat(0.5929),doubleToFloat(0.0593),doubleToFloat(0.6008),doubleToFloat(0.0377),doubleToFloat(0.553),doubleToFloat(0.1676),doubleToFloat(0.5749),doubleToFloat(0.1286),doubleToFloat(0.5859),doubleToFloat(0.0948),doubleToFloat(0.3807),doubleToFloat(0.3775),doubleToFloat(0.4007),doubleToFloat(0.3558),doubleToFloat(0.3141),doubleToFloat(0.4158),doubleToFloat(0.3277),doubleToFloat(0.426),doubleToFloat(0.3473),doubleToFloat(0.4065),doubleToFloat(0.3532),doubleToFloat(0.4015),doubleToFloat(0.3737),doubleToFloat(0.3844),doubleToFloat(0.5387),doubleToFloat(0.1826),doubleToFloat(0.3998),doubleToFloat(0.563),doubleToFloat(0.4149),doubleToFloat(0.6919),doubleToFloat(0.3966),doubleToFloat(0.6644),doubleToFloat(0.3875),doubleToFloat(0.6367),doubleToFloat(0.4501),doubleToFloat(0.3607),doubleToFloat(0.4292),doubleToFloat(0.3913),doubleToFloat(0.4504),doubleToFloat(0.3949),doubleToFloat(0.463),doubleToFloat(0.3655),doubleToFloat(0.4396),doubleToFloat(0.3502),doubleToFloat(0.4096),doubleToFloat(0.382),doubleToFloat(0.4803),doubleToFloat(0.3671),doubleToFloat(0.4727),doubleToFloat(0.3977),doubleToFloat(0.4932),doubleToFloat(0.3655),doubleToFloat(0.4944),doubleToFloat(0.4021),doubleToFloat(0.4315),doubleToFloat(0.4588),doubleToFloat(0.4417),doubleToFloat(0.4205),doubleToFloat(0.4203),doubleToFloat(0.418),doubleToFloat(0.4056),doubleToFloat(0.4657),doubleToFloat(0.3999),doubleToFloat(0.4161),doubleToFloat(0.4603),doubleToFloat(0.4251),doubleToFloat(0.4464),doubleToFloat(0.4677),doubleToFloat(0.4787),doubleToFloat(0.4342),doubleToFloat(0.4372),doubleToFloat(0.4593),doubleToFloat(0.4792),doubleToFloat(0.3385),doubleToFloat(0.4221),doubleToFloat(0.4778),doubleToFloat(0.3225),doubleToFloat(0.9688),doubleToFloat(0.3187),doubleToFloat(0.9638),doubleToFloat(0.3113),doubleToFloat(0.9668),doubleToFloat(0.3095),doubleToFloat(0.9682),doubleToFloat(0.3143),doubleToFloat(0.9671),doubleToFloat(0.3229),doubleToFloat(0.9642),doubleToFloat(0.3303),doubleToFloat(0.9611),doubleToFloat(0.3321),doubleToFloat(0.9599),doubleToFloat(0.3273),doubleToFloat(0.9609),doubleToFloat(0.3034),doubleToFloat(0.9563),doubleToFloat(0.3138),doubleToFloat(0.9521),doubleToFloat(0.2999),doubleToFloat(0.9581),doubleToFloat(0.3076),doubleToFloat(0.9567),doubleToFloat(0.3198),doubleToFloat(0.9527),doubleToFloat(0.3303),doubleToFloat(0.9484),doubleToFloat(0.3328),doubleToFloat(0.9465),doubleToFloat(0.326),doubleToFloat(0.9479),doubleToFloat(0.3033),doubleToFloat(0.9435),doubleToFloat(0.3107),doubleToFloat(0.9405),doubleToFloat(0.3008),doubleToFloat(0.9447),doubleToFloat(0.301),doubleToFloat(0.9448),doubleToFloat(0.3063),doubleToFloat(0.9438),doubleToFloat(0.3149),doubleToFloat(0.9409),doubleToFloat(0.3223),doubleToFloat(0.9379),doubleToFloat(0.3242),doubleToFloat(0.9365),doubleToFloat(0.3194),doubleToFloat(0.9376),doubleToFloat(0.3112),doubleToFloat(0.9359),doubleToFloat(0.3009),doubleToFloat(0.9445),doubleToFloat(0.3002),doubleToFloat(0.9515),doubleToFloat(0.4501),doubleToFloat(0.3607),doubleToFloat(0.4292),doubleToFloat(0.3913),doubleToFloat(0.4504),doubleToFloat(0.3949),doubleToFloat(0.463),doubleToFloat(0.3655),doubleToFloat(0.4396),doubleToFloat(0.3502),doubleToFloat(0.4096),doubleToFloat(0.382),doubleToFloat(0.4803),doubleToFloat(0.3671),doubleToFloat(0.4727),doubleToFloat(0.3977),doubleToFloat(0.4932),doubleToFloat(0.3655),doubleToFloat(0.4944),doubleToFloat(0.4021),doubleToFloat(0.4315),doubleToFloat(0.4588),doubleToFloat(0.4417),doubleToFloat(0.4205),doubleToFloat(0.4203),doubleToFloat(0.418),doubleToFloat(0.4056),doubleToFloat(0.4657),doubleToFloat(0.3999),doubleToFloat(0.4161),doubleToFloat(0.4603),doubleToFloat(0.4251),doubleToFloat(0.4464),doubleToFloat(0.4677),doubleToFloat(0.4787),doubleToFloat(0.4342),doubleToFloat(0.4372),doubleToFloat(0.4593),doubleToFloat(0.4792),doubleToFloat(0.3385),doubleToFloat(0.4221),doubleToFloat(0.4778),doubleToFloat(0.3225),doubleToFloat(0.9688),doubleToFloat(0.3187),doubleToFloat(0.9638),doubleToFloat(0.3113),doubleToFloat(0.9668),doubleToFloat(0.3095),doubleToFloat(0.9682),doubleToFloat(0.3143),doubleToFloat(0.9671),doubleToFloat(0.3229),doubleToFloat(0.9642),doubleToFloat(0.3303),doubleToFloat(0.9611),doubleToFloat(0.3321),doubleToFloat(0.9599),doubleToFloat(0.3273),doubleToFloat(0.9609),doubleToFloat(0.3034),doubleToFloat(0.9563),doubleToFloat(0.3138),doubleToFloat(0.9521),doubleToFloat(0.2999),doubleToFloat(0.9581),doubleToFloat(0.3076),doubleToFloat(0.9567),doubleToFloat(0.3198),doubleToFloat(0.9527),doubleToFloat(0.3303),doubleToFloat(0.9484),doubleToFloat(0.3328),doubleToFloat(0.9465),doubleToFloat(0.326),doubleToFloat(0.9479),doubleToFloat(0.3033),doubleToFloat(0.9435),doubleToFloat(0.3107),doubleToFloat(0.9405),doubleToFloat(0.3008),doubleToFloat(0.9447),doubleToFloat(0.301),doubleToFloat(0.9448),doubleToFloat(0.3063),doubleToFloat(0.9438),doubleToFloat(0.3149),doubleToFloat(0.9409),doubleToFloat(0.3223),doubleToFloat(0.9379),doubleToFloat(0.3242),doubleToFloat(0.9365),doubleToFloat(0.3194),doubleToFloat(0.9376),doubleToFloat(0.3112),doubleToFloat(0.9359),doubleToFloat(0.3009),doubleToFloat(0.9445),doubleToFloat(0.3002),doubleToFloat(0.9515)], Java.type("float[]"))))))))))))
          .addJoints(new HAnimJoint("hanim_Sun").setContainerFieldOverride("joints").setUSE("hanim_humanoid_root"))
          .addJoints(new HAnimJoint("hanim_Sun").setContainerFieldOverride("joints").setUSE("hanim_sacroiliac"))
          .addJoints(new HAnimJoint("hanim_Sun").setContainerFieldOverride("joints").setUSE("hanim_skullbase"))
          .addJoints(new HAnimJoint("hanim_Sun").setContainerFieldOverride("joints").setUSE("hanim_vl5"))
          .addJoints(new HAnimJoint("hanim_Sun").setContainerFieldOverride("joints").setUSE("hanim_l_elbow"))
          .addJoints(new HAnimJoint("hanim_Sun").setContainerFieldOverride("joints").setUSE("hanim_r_elbow"))
          .addJoints(new HAnimJoint("hanim_Sun").setContainerFieldOverride("joints").setUSE("hanim_l_hip"))
          .addJoints(new HAnimJoint("hanim_Sun").setContainerFieldOverride("joints").setUSE("hanim_r_hip"))
          .addJoints(new HAnimJoint("hanim_Sun").setContainerFieldOverride("joints").setUSE("hanim_l_knee"))
          .addJoints(new HAnimJoint("hanim_Sun").setContainerFieldOverride("joints").setUSE("hanim_r_knee"))
          .addJoints(new HAnimJoint("hanim_Sun").setContainerFieldOverride("joints").setUSE("hanim_l_metatarsophalangeal_2"))
          .addJoints(new HAnimJoint("hanim_Sun").setContainerFieldOverride("joints").setUSE("hanim_r_metatarsophalangeal_2"))
          .addJoints(new HAnimJoint("hanim_Sun").setContainerFieldOverride("joints").setUSE("hanim_l_radiocarpal"))
          .addJoints(new HAnimJoint("hanim_Sun").setContainerFieldOverride("joints").setUSE("hanim_r_radiocarpal"))
          .addJoints(new HAnimJoint("hanim_Sun").setContainerFieldOverride("joints").setUSE("hanim_l_shoulder"))
          .addJoints(new HAnimJoint("hanim_Sun").setContainerFieldOverride("joints").setUSE("hanim_r_shoulder"))
          .addJoints(new HAnimJoint("hanim_Sun").setContainerFieldOverride("joints").setUSE("hanim_l_talocrural"))
          .addJoints(new HAnimJoint("hanim_Sun").setContainerFieldOverride("joints").setUSE("hanim_r_talocrural"))
          .addSegments(new HAnimSegment("hanim_Sun").setContainerFieldOverride("segments").setUSE("hanim_l5"))
          .addSegments(new HAnimSegment("hanim_Sun").setContainerFieldOverride("segments").setUSE("hanim_pelvis"))
          .addSegments(new HAnimSegment("hanim_Sun").setContainerFieldOverride("segments").setUSE("hanim_sacrum"))
          .addSegments(new HAnimSegment("hanim_Sun").setContainerFieldOverride("segments").setUSE("hanim_skull"))
          .addSegments(new HAnimSegment("hanim_Sun").setContainerFieldOverride("segments").setUSE("hanim_l_calf"))
          .addSegments(new HAnimSegment("hanim_Sun").setContainerFieldOverride("segments").setUSE("hanim_r_calf"))
          .addSegments(new HAnimSegment("hanim_Sun").setContainerFieldOverride("segments").setUSE("hanim_l_carpal"))
          .addSegments(new HAnimSegment("hanim_Sun").setContainerFieldOverride("segments").setUSE("hanim_r_carpal"))
          .addSegments(new HAnimSegment("hanim_Sun").setContainerFieldOverride("segments").setUSE("hanim_l_forearm"))
          .addSegments(new HAnimSegment("hanim_Sun").setContainerFieldOverride("segments").setUSE("hanim_r_forearm"))
          .addSegments(new HAnimSegment("hanim_Sun").setContainerFieldOverride("segments").setUSE("hanim_l_talus"))
          .addSegments(new HAnimSegment("hanim_Sun").setContainerFieldOverride("segments").setUSE("hanim_r_talus"))
          .addSegments(new HAnimSegment("hanim_Sun").setContainerFieldOverride("segments").setUSE("hanim_l_tarsal_proximal_phalanx_2"))
          .addSegments(new HAnimSegment("hanim_Sun").setContainerFieldOverride("segments").setUSE("hanim_r_tarsal_proximal_phalanx_2"))
          .addSegments(new HAnimSegment("hanim_Sun").setContainerFieldOverride("segments").setUSE("hanim_l_thigh"))
          .addSegments(new HAnimSegment("hanim_Sun").setContainerFieldOverride("segments").setUSE("hanim_r_thigh"))
          .addSegments(new HAnimSegment("hanim_Sun").setContainerFieldOverride("segments").setUSE("hanim_l_upperarm"))
          .addSegments(new HAnimSegment("hanim_Sun").setContainerFieldOverride("segments").setUSE("hanim_r_upperarm"))))      ;
    X3D0.toFileX3D("../data/KoreanCharacter12Sun.new.graal.x3d");
    X3D0.toFileJSON("../data/KoreanCharacter12Sun.new.graal.json");
