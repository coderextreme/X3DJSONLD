{
  "X3D": {
    "encoding": "UTF-8",
    "@profile": "Immersive",
    "@version": "3.3",
    "@xsd:noNamespaceSchemaLocation": "https://www.web3d.org/specifications/x3d-3.3.xsd",
    "JSON schema": "https://www.web3d.org/specifications/x3d-4.0-JSONSchema.autogenerated.json",
    "head": {
      "meta": [
        {
          "@name": "creator",
          "@content": "John W Carlson"
        },
        {
          "@name": "created",
          "@content": "December 13 2015"
        },
        {
          "@name": "title",
          "@content": "fors.x3d"
        },
        {
          "@name": "identifier",
          "@content": "https://coderextreme.net/X3DJSONLD/src/main/data/force.x3d"
        },
        {
          "@name": "description",
          "@content": "beginnings of a force directed graph in 3D"
        },
        {
          "@name": "generator",
          "@content": "Vim, X3D-Edit, https://savage.nps.edu/X3D-Edit"
        },
        {
          "@name": "translated",
          "@content": "03 March 2024"
        },
        {
          "@name": "generator",
          "@content": "X3dToJson.xslt, https://www.web3d.org/x3d/stylesheets/X3dToJson.html"
        },
        {
          "@name": "reference",
          "@content": "X3D JSON encoding: https://www.web3d.org/wiki/index.php/X3D_JSON_Encoding"
        }
      ]
    },
    "Scene": {
      "-children": [
        {},
        {},
        {
          "Transform": {
            "@DEF": "HoldsContent",
            "@scale": [
              0.1,
              0.1,
              0.1
            ],
            "-children": [
              {
                "PlaneSensor": {
                  "@DEF": "clickGenerator",
                  "@minPosition": [
                    -50,
                    -50
                  ],
                  "@maxPosition": [
                    50,
                    50
                  ],
                  "@description": "click on background to add nodes, click on nodes to add links"
                }
              },
              {
                "Transform": {
                  "@DEF": "DECLnode_nodeA_transform",
                  "@translation": [
                    0,
                    0,
                    0
                  ],
                  "-children": [
                    {
                      "Shape": {
                        "-geometry": {
                          "Sphere": {}
                        },
                        "-appearance": {
                          "Appearance": {
                            "-material": {
                              "Material": {
                                "@diffuseColor": [
                                  1,
                                  0,
                                  0
                                ]
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "Transform": {
                        "@translation": [
                          1,
                          0,
                          0
                        ],
                        "-children": [
                          {
                            "Shape": {
                              "-geometry": {
                                "Text": {
                                  "@string": [
                                    "Node"
                                  ],
                                  "-fontStyle": {
                                    "FontStyle": {
                                      "@justify": [
                                        "MIDDLE",
                                        "MIDDLE"
                                      ],
                                      "@size": 5
                                    }
                                  }
                                }
                              },
                              "-appearance": {
                                "Appearance": {
                                  "-material": {
                                    "Material": {
                                      "@diffuseColor": [
                                        0,
                                        0,
                                        1
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "PositionInterpolator": {
                  "@DEF": "DECLnode_nodeA_NodePosition",
                  "@key": [
                    0,
                    1
                  ],
                  "@keyValue": [
                    0,
                    0,
                    0,
                    0,
                    5,
                    0
                  ]
                }
              },
              {
                "Script": {
                  "@DEF": "DECLnode_nodeA_MoveBall",
                  "field": [
                    {
                      "@name": "translation",
                      "@accessType": "inputOutput",
                      "@type": "SFVec3f",
                      "@value": [
                        50,
                        50,
                        0
                      ]
                    },
                    {
                      "@name": "old",
                      "@accessType": "inputOutput",
                      "@type": "SFVec3f",
                      "@value": [
                        0,
                        0,
                        0
                      ]
                    },
                    {
                      "@name": "set_cycle",
                      "@accessType": "inputOnly",
                      "@type": "SFTime"
                    },
                    {
                      "@name": "keyValue",
                      "@accessType": "outputOnly",
                      "@type": "MFVec3f"
                    }
                  ],
                  "#sourceCode": [
                    "",
                    "",
                    "ecmascript:",
                    "\t\t\t\t\tfunction set_cycle(value) {",
                    "                                                old = translation;",
                    "\t\t\t\t\t\ttranslation = new SFVec3f(Math.random()*100-50, Math.random()*100-50, Math.random()*100-50);",
                    "                                                keyValue = new MFVec3f([old, translation]);",
                    "\t\t\t\t\t\t// Browser.println(translation);",
                    "\t\t\t\t\t}",
                    "",
                    ""
                  ]
                }
              },
              {
                "TimeSensor": {
                  "@DEF": "DECLnode_nodeA_nodeClock",
                  "@cycleInterval": 3,
                  "@loop": true
                }
              },
              {
                "ROUTE": {
                  "@fromNode": "DECLnode_nodeA_nodeClock",
                  "@fromField": "cycleTime",
                  "@toNode": "DECLnode_nodeA_MoveBall",
                  "@toField": "set_cycle"
                }
              },
              {
                "ROUTE": {
                  "@fromNode": "DECLnode_nodeA_nodeClock",
                  "@fromField": "fraction_changed",
                  "@toNode": "DECLnode_nodeA_NodePosition",
                  "@toField": "set_fraction"
                }
              },
              {
                "ROUTE": {
                  "@fromNode": "DECLnode_nodeA_MoveBall",
                  "@fromField": "keyValue",
                  "@toNode": "DECLnode_nodeA_NodePosition",
                  "@toField": "keyValue"
                }
              },
              {
                "ROUTE": {
                  "@fromNode": "DECLnode_nodeA_NodePosition",
                  "@fromField": "value_changed",
                  "@toNode": "DECLnode_nodeA_transform",
                  "@toField": "set_translation"
                }
              },
              {
                "Transform": {
                  "@DEF": "DECLnode_nodeB_transform",
                  "@translation": [
                    50,
                    50,
                    50
                  ],
                  "-children": [
                    {
                      "Shape": {
                        "-geometry": {
                          "Sphere": {}
                        },
                        "-appearance": {
                          "Appearance": {
                            "-material": {
                              "Material": {
                                "@diffuseColor": [
                                  1,
                                  0,
                                  0
                                ]
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "Transform": {
                        "@translation": [
                          1,
                          0,
                          0
                        ],
                        "-children": [
                          {
                            "Shape": {
                              "-geometry": {
                                "Text": {
                                  "@string": [
                                    "Node"
                                  ],
                                  "-fontStyle": {
                                    "FontStyle": {
                                      "@justify": [
                                        "MIDDLE",
                                        "MIDDLE"
                                      ],
                                      "@size": 5
                                    }
                                  }
                                }
                              },
                              "-appearance": {
                                "Appearance": {
                                  "-material": {
                                    "Material": {
                                      "@diffuseColor": [
                                        0,
                                        0,
                                        1
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "PositionInterpolator": {
                  "@DEF": "DECLnode_nodeB_NodePosition",
                  "@key": [
                    0,
                    1
                  ],
                  "@keyValue": [
                    0,
                    0,
                    0,
                    0,
                    5,
                    0
                  ]
                }
              },
              {
                "Script": {
                  "@DEF": "DECLnode_nodeB_MoveBall",
                  "field": [
                    {
                      "@name": "translation",
                      "@accessType": "inputOutput",
                      "@type": "SFVec3f",
                      "@value": [
                        50,
                        50,
                        0
                      ]
                    },
                    {
                      "@name": "old",
                      "@accessType": "inputOutput",
                      "@type": "SFVec3f",
                      "@value": [
                        0,
                        0,
                        0
                      ]
                    },
                    {
                      "@name": "set_cycle",
                      "@accessType": "inputOnly",
                      "@type": "SFTime"
                    },
                    {
                      "@name": "keyValue",
                      "@accessType": "outputOnly",
                      "@type": "MFVec3f"
                    }
                  ],
                  "#sourceCode": [
                    "",
                    "",
                    "ecmascript:",
                    "\t\t\t\t\tfunction set_cycle(value) {",
                    "                                                old = translation;",
                    "\t\t\t\t\t\ttranslation = new SFVec3f(Math.random()*100-50, Math.random()*100-50, Math.random()*100-50);",
                    "                                                keyValue = new MFVec3f([old, translation]);",
                    "\t\t\t\t\t\t// Browser.println(translation);",
                    "\t\t\t\t\t}",
                    "",
                    ""
                  ]
                }
              },
              {
                "TimeSensor": {
                  "@DEF": "DECLnode_nodeB_nodeClock",
                  "@cycleInterval": 3,
                  "@loop": true
                }
              },
              {
                "ROUTE": {
                  "@fromNode": "DECLnode_nodeB_nodeClock",
                  "@fromField": "cycleTime",
                  "@toNode": "DECLnode_nodeB_MoveBall",
                  "@toField": "set_cycle"
                }
              },
              {
                "ROUTE": {
                  "@fromNode": "DECLnode_nodeB_nodeClock",
                  "@fromField": "fraction_changed",
                  "@toNode": "DECLnode_nodeB_NodePosition",
                  "@toField": "set_fraction"
                }
              },
              {
                "ROUTE": {
                  "@fromNode": "DECLnode_nodeB_MoveBall",
                  "@fromField": "keyValue",
                  "@toNode": "DECLnode_nodeB_NodePosition",
                  "@toField": "keyValue"
                }
              },
              {
                "ROUTE": {
                  "@fromNode": "DECLnode_nodeB_NodePosition",
                  "@fromField": "value_changed",
                  "@toNode": "DECLnode_nodeB_transform",
                  "@toField": "set_translation"
                }
              },
              {
                "Shape": {
                  "-geometry": {
                    "Extrusion": {
                      "@DEF": "DECLcyl_linkA_extrusion",
                      "@creaseAngle": 0.785,
                      "@crossSection": [
                        1,
                        0,
                        0.92,
                        -0.38,
                        0.71,
                        -0.71,
                        0.38,
                        -0.92,
                        0,
                        -1,
                        -0.38,
                        -0.92,
                        -0.71,
                        -0.71,
                        -0.92,
                        -0.38,
                        -1,
                        0,
                        -0.92,
                        0.38,
                        -0.71,
                        0.71,
                        -0.38,
                        0.92,
                        0,
                        1,
                        0.38,
                        0.92,
                        0.71,
                        0.71,
                        0.92,
                        0.38,
                        1,
                        0
                      ],
                      "@spine": [
                        0,
                        -50,
                        0,
                        0,
                        50,
                        0
                      ]
                    }
                  },
                  "-appearance": {
                    "Appearance": {
                      "-material": {
                        "Material": {
                          "@diffuseColor": [
                            0,
                            1,
                            0
                          ]
                        }
                      }
                    }
                  }
                }
              },
              {
                "Script": {
                  "@DEF": "DECLcyl_linkA_MoveCylinder",
                  "field": [
                    {
                      "@name": "spine",
                      "@accessType": "inputOutput",
                      "@type": "MFVec3f",
                      "@value": [
                        0,
                        -50,
                        0,
                        0,
                        50,
                        0
                      ]
                    },
                    {
                      "@name": "set_endA",
                      "@accessType": "inputOnly",
                      "@type": "SFVec3f",
                      "@value": [
                        0,
                        0,
                        0
                      ]
                    },
                    {
                      "@name": "set_endB",
                      "@accessType": "inputOnly",
                      "@type": "SFVec3f",
                      "@value": [
                        50,
                        50,
                        50
                      ]
                    }
                  ],
                  "#sourceCode": [
                    "",
                    "",
                    "ecmascript:",
                    "",
                    "                function set_endA(value) {",
                    "\t\t    if (typeof spine === 'undefined') {",
                    "\t\t        spine = new MFVec3f([value, value]);",
                    "\t\t    } else {",
                    "\t\t        spine = new MFVec3f([value, spine[1]]);",
                    "\t\t    }",
                    "                }",
                    "",
                    "                function set_endB(value) {",
                    "\t\t    if (typeof spine === 'undefined') {",
                    "\t\t        spine = new MFVec3f([value, value]);",
                    "\t\t    } else {",
                    "\t\t        spine = new MFVec3f([spine[0], value]);",
                    "\t\t    }",
                    "                }",
                    "",
                    "                function set_spine(value) {",
                    "                    spine = value;",
                    "                }",
                    "",
                    ""
                  ]
                }
              },
              {
                "ROUTE": {
                  "@fromNode": "DECLcyl_linkA_MoveCylinder",
                  "@fromField": "spine",
                  "@toNode": "DECLcyl_linkA_extrusion",
                  "@toField": "set_spine"
                }
              }
            ]
          }
        },
        {
          "ROUTE": {
            "@fromNode": "DECLnode_nodeA_transform",
            "@fromField": "translation",
            "@toNode": "DECLcyl_linkA_MoveCylinder",
            "@toField": "set_endA"
          }
        },
        {
          "ROUTE": {
            "@fromNode": "DECLnode_nodeB_transform",
            "@fromField": "translation",
            "@toNode": "DECLcyl_linkA_MoveCylinder",
            "@toField": "set_endB"
          }
        }
      ]
    }
  }
}