{
  "X3D": {
    "@profile": "Immersive",
    "@version": "3.0",
    "@xsd:noNamespaceSchemaLocation": "http://www.web3d.org/specifications/x3d-3.0.xsd",
    "head": {
      "meta": [
        {
          "@content": "title",
          "@name": "flowers2.x3d"
        },
        {
          "@content": "John Carlson",
          "@name": "author"
        },
        {
          "@content": "John Carlson",
          "@name": "transcriber"
        },
        {
          "@content": "23 January 2005",
          "@name": "created"
        },
        {
          "@content": "05 May 2017",
          "@name": "modified"
        },
        {
          "@content": "2 random mathematical roses in spherical dimensions. rho = a + b * cos(c * theta) * cos(d * phi)",
          "@name": "description"
        },
        {
          "@content": "https://coderextreme.net/x3d/flowers2.x3d",
          "@name": "url"
        },
        {
          "@content": "manually written",
          "@name": "generator"
        },
        {
          "@name": "translated",
          "@content": "21 March 2018"
        },
        {
          "@name": "generator",
          "@content": "DOM2JSONSerializer.js, https://github.com/coderextreme/X3DJSONLD/blob/master/src/main/node/DOM2JSONSerializer.js"
        },
        {
          "@name": "reference",
          "@content": "X3D JSON encoding: http://www.web3d.org/wiki/index.php/X3D_JSON_Encoding"
        }
      ]
    },
    "Scene": {
      "-children": [
        {
          "NavigationInfo": {
            "@type": [
              "EXAMINE",
              "ANY"
            ]
          }
        },
        {
          "Viewpoint": {
            "@description": "Two mathematical orbitals",
            "@position": [
              0,
              0,
              50
            ]
          }
        },
        {
          "Group": {
            "-children": [
              {
                "DirectionalLight": {
                  "@direction": [
                    1,
                    1,
                    1
                  ]
                }
              },
              {
                "TimeSensor": {
                  "@DEF": "Clock",
                  "@cycleInterval": 16,
                  "@loop": true
                }
              },
              {
                "OrientationInterpolator": {
                  "@DEF": "OrbitPath",
                  "@key": [
                    0,
                    0.5,
                    1
                  ],
                  "@keyValue": [
                    1,
                    0,
                    0,
                    0,
                    1,
                    0,
                    0,
                    3.14,
                    1,
                    0,
                    0,
                    6.28
                  ]
                }
              },
              {
                "Transform": {
                  "@DEF": "OrbitTransform",
                  "@translation": [
                    8,
                    0,
                    0
                  ],
                  "-children": [
                    {
                      "Shape": {
                        "-appearance": {
                          "Appearance": {
                            "-material": {
                              "Material": {
                                "@diffuseColor": [
                                  0,
                                  0.5,
                                  1
                                ],
                                "@specularColor": [
                                  0,
                                  0.5,
                                  1
                                ]
                              }
                            }
                          }
                        },
                        "-geometry": {
                          "IndexedFaceSet": {
                            "@convex": false,
                            "@DEF": "Orbit",
                            "@creaseAngle": 0,
                            "-coord": {
                              "Coordinate": {
                                "@DEF": "OrbitCoordinates"
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              },
              {},
              {
                "Group": {
                  "-children": [
                    {
                      "Transform": {
                        "@DEF": "DECLorbit_INSTANCE_OrbitTransform",
                        "@translation": [
                          -8,
                          0,
                          0
                        ],
                        "-children": [
                          {
                            "Shape": {
                              "-appearance": {
                                "Appearance": {
                                  "-material": {
                                    "Material": {
                                      "@diffuseColor": [
                                        1,
                                        0.5,
                                        0
                                      ],
                                      "@specularColor": [
                                        1,
                                        0.5,
                                        0
                                      ],
                                      "@transparency": 0.75
                                    }
                                  }
                                }
                              },
                              "-geometry": {
                                "IndexedFaceSet": {
                                  "@DEF": "DECLorbit_INSTANCE_Orbit",
                                  "@creaseAngle": 0,
                                  "-coord": {
                                    "Coordinate": {
                                      "@DEF": "DECLorbit_INSTANCE_OrbitCoordinates"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "Script": {
                        "@DEF": "DECLorbit_INSTANCE_OrbitScript",
                        "field": [
                          {
                            "@accessType": "inputOnly",
                            "@name": "set_fraction",
                            "@type": "SFFloat"
                          },
                          {
                            "@accessType": "outputOnly",
                            "@name": "coordinates",
                            "@type": "MFVec3f"
                          },
                          {
                            "@accessType": "outputOnly",
                            "@name": "coordIndexes",
                            "@type": "MFInt32"
                          },
                          {
                            "@accessType": "inputOutput",
                            "@name": "e",
                            "@type": "SFFloat",
                            "@value": 5
                          },
                          {
                            "@accessType": "inputOutput",
                            "@name": "f",
                            "@type": "SFFloat",
                            "@value": 5
                          },
                          {
                            "@accessType": "inputOutput",
                            "@name": "g",
                            "@type": "SFFloat",
                            "@value": 5
                          },
                          {
                            "@accessType": "inputOutput",
                            "@name": "h",
                            "@type": "SFFloat",
                            "@value": 5
                          },
                          {
                            "@accessType": "inputOutput",
                            "@name": "resolution",
                            "@type": "SFInt32",
                            "@value": 50
                          }
                        ],
                        "#sourceText": [
                          "",
                          "\t\t\tecmascript:",
                          "",
                          "\t\t\tvar e = 5;",
                          "\t\t\tvar f = 5;",
                          "\t\t\tvar g = 5;",
                          "\t\t\tvar h = 5;",
                          "\t\t\tvar resolution = 100;",
                          "",
                          "\t\t\tfunction initialize() {",
                          "\t\t\t     generateCoordinates();",
                          "\t\t\t     var localci = [];",
                          "\t\t\t     for ( i = 0; i < resolution-1; i++) {",
                          "\t\t\t\tfor ( j = 0; j < resolution-1; j++) {",
                          "\t\t\t\t     localci.push(i*resolution+j);",
                          "\t\t\t\t     localci.push(i*resolution+j+1);",
                          "\t\t\t\t     localci.push((i+1)*resolution+j+1);",
                          "\t\t\t\t     localci.push((i+1)*resolution+j);",
                          "\t\t\t\t     localci.push(-1);",
                          "\t\t\t\t}",
                          "\t\t\t    }",
                          "\t\t\t    coordIndexes = new MFInt32(localci);",
                          "\t\t\t}",
                          "",
                          "\t\t\tfunction generateCoordinates() {",
                          "\t\t\t     theta = 0.0;",
                          "\t\t\t     phi = 0.0;",
                          "\t\t\t     delta = (2 * 3.141592653) / (resolution-1);",
                          "\t\t\t     var localc = [];",
                          "\t\t\t     for ( i = 0; i < resolution; i++) {",
                          "\t\t\t\tfor ( j = 0; j < resolution; j++) {",
                          "\t\t\t\t\trho = e + f * Math.cos(g * theta) * Math.cos(h * phi);",
                          "\t\t\t\t\tlocalc.push(new SFVec3f(",
                          "\t\t\t\t\t\trho * Math.cos(phi) * Math.cos(theta),",
                          "\t\t\t\t\t\trho * Math.cos(phi) * Math.sin(theta),",
                          "\t\t\t\t\t\trho * Math.sin(phi)",
                          "\t\t\t\t\t));",
                          "\t\t\t\t\ttheta += delta;",
                          "\t\t\t\t}",
                          "\t\t\t\tphi += delta;",
                          "\t\t\t     }",
                          "\t\t\t     ",
                          "\t\t\t     coordinates = new MFVec3f(localc);",
                          "\t\t\t}",
                          "",
                          "\t\t\tfunction set_fraction(fraction, eventTime) {",
                          "\t\t\t\tchoice = Math.floor(Math.random() * 4);",
                          "\t\t\t\tswitch (choice) {",
                          "\t\t\t\tcase 0:",
                          "\t\t\t\t\te += Math.floor(Math.random() * 2) * 2 - 1;",
                          "\t\t\t\t\tbreak;",
                          "\t\t\t\tcase 1:",
                          "\t\t\t\t\tf += Math.floor(Math.random() * 2) * 2 - 1;",
                          "\t\t\t\t\tbreak;",
                          "\t\t\t\tcase 2:",
                          "\t\t\t\t\tg += Math.floor(Math.random() * 2) * 2 - 1;",
                          "\t\t\t\t\tbreak;",
                          "\t\t\t\tcase 3:",
                          "\t\t\t\t\th += Math.floor(Math.random() * 2) * 2 - 1;",
                          "\t\t\t\t\tbreak;",
                          "\t\t\t\t}",
                          "\t\t\t\tif (f < 1) {",
                          "\t\t\t\t\tf = 10;",
                          "\t\t\t\t}",
                          "\t\t\t\tif (g < 1) {",
                          "\t\t\t\t\tg = 4;",
                          "\t\t\t\t}",
                          "\t\t\t\tif (h < 1) {",
                          "\t\t\t\t\th = 4;",
                          "\t\t\t\t}",
                          "\t\t\t\tgenerateCoordinates();",
                          "\t\t\t}",
                          "\t\t\t      "
                        ]
                      }
                    },
                    {
                      "ROUTE": {
                        "@fromNode": "DECLorbit_INSTANCE_OrbitScript",
                        "@fromField": "coordIndexes",
                        "@toNode": "DECLorbit_INSTANCE_Orbit",
                        "@toField": "coordIndex"
                      }
                    },
                    {
                      "ROUTE": {
                        "@fromNode": "DECLorbit_INSTANCE_OrbitScript",
                        "@fromField": "coordinates",
                        "@toNode": "DECLorbit_INSTANCE_OrbitCoordinates",
                        "@toField": "point"
                      }
                    },
                    {
                      "ROUTE": {
                        "@fromNode": "Clock",
                        "@fromField": "fraction_changed",
                        "@toNode": "DECLorbit_INSTANCE_OrbitScript",
                        "@toField": "set_fraction"
                      }
                    },
                    {
                      "ROUTE": {
                        "@fromNode": "OrbitPath",
                        "@fromField": "value_changed",
                        "@toNode": "DECLorbit_INSTANCE_OrbitTransform",
                        "@toField": "rotation"
                      }
                    }
                  ]
                }
              },
              {
                "Group": {
                  "-children": [
                    {
                      "Transform": {
                        "@DEF": "DECLorbit_INSTANCE1000_OrbitTransform",
                        "@translation": [
                          8,
                          0,
                          0
                        ],
                        "-children": [
                          {
                            "Shape": {
                              "-appearance": {
                                "Appearance": {
                                  "-material": {
                                    "Material": {
                                      "@diffuseColor": [
                                        0,
                                        0.5,
                                        1
                                      ],
                                      "@specularColor": [
                                        0,
                                        0.5,
                                        1
                                      ],
                                      "@transparency": 1
                                    }
                                  }
                                }
                              },
                              "-geometry": {
                                "IndexedFaceSet": {
                                  "@DEF": "DECLorbit_INSTANCE1000_Orbit",
                                  "@creaseAngle": 0,
                                  "-coord": {
                                    "Coordinate": {
                                      "@DEF": "DECLorbit_INSTANCE1000_OrbitCoordinates"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "Script": {
                        "@DEF": "DECLorbit_INSTANCE1000_OrbitScript",
                        "field": [
                          {
                            "@accessType": "inputOnly",
                            "@name": "set_fraction",
                            "@type": "SFFloat"
                          },
                          {
                            "@accessType": "outputOnly",
                            "@name": "coordinates",
                            "@type": "MFVec3f"
                          },
                          {
                            "@accessType": "outputOnly",
                            "@name": "coordIndexes",
                            "@type": "MFInt32"
                          },
                          {
                            "@accessType": "inputOutput",
                            "@name": "e",
                            "@type": "SFFloat",
                            "@value": 5
                          },
                          {
                            "@accessType": "inputOutput",
                            "@name": "f",
                            "@type": "SFFloat",
                            "@value": 5
                          },
                          {
                            "@accessType": "inputOutput",
                            "@name": "g",
                            "@type": "SFFloat",
                            "@value": 5
                          },
                          {
                            "@accessType": "inputOutput",
                            "@name": "h",
                            "@type": "SFFloat",
                            "@value": 5
                          },
                          {
                            "@accessType": "inputOutput",
                            "@name": "resolution",
                            "@type": "SFInt32",
                            "@value": 50
                          }
                        ],
                        "#sourceText": [
                          "",
                          "\t\t\tecmascript:",
                          "",
                          "\t\t\tvar e = 5;",
                          "\t\t\tvar f = 5;",
                          "\t\t\tvar g = 5;",
                          "\t\t\tvar h = 5;",
                          "\t\t\tvar resolution = 100;",
                          "",
                          "\t\t\tfunction initialize() {",
                          "\t\t\t     generateCoordinates();",
                          "\t\t\t     var localci = [];",
                          "\t\t\t     for ( i = 0; i < resolution-1; i++) {",
                          "\t\t\t\tfor ( j = 0; j < resolution-1; j++) {",
                          "\t\t\t\t     localci.push(i*resolution+j);",
                          "\t\t\t\t     localci.push(i*resolution+j+1);",
                          "\t\t\t\t     localci.push((i+1)*resolution+j+1);",
                          "\t\t\t\t     localci.push((i+1)*resolution+j);",
                          "\t\t\t\t     localci.push(-1);",
                          "\t\t\t\t}",
                          "\t\t\t    }",
                          "\t\t\t    coordIndexes = new MFInt32(localci);",
                          "\t\t\t}",
                          "",
                          "\t\t\tfunction generateCoordinates() {",
                          "\t\t\t     theta = 0.0;",
                          "\t\t\t     phi = 0.0;",
                          "\t\t\t     delta = (2 * 3.141592653) / (resolution-1);",
                          "\t\t\t     var localc = [];",
                          "\t\t\t     for ( i = 0; i < resolution; i++) {",
                          "\t\t\t\tfor ( j = 0; j < resolution; j++) {",
                          "\t\t\t\t\trho = e + f * Math.cos(g * theta) * Math.cos(h * phi);",
                          "\t\t\t\t\tlocalc.push(new SFVec3f(",
                          "\t\t\t\t\t\trho * Math.cos(phi) * Math.cos(theta),",
                          "\t\t\t\t\t\trho * Math.cos(phi) * Math.sin(theta),",
                          "\t\t\t\t\t\trho * Math.sin(phi)",
                          "\t\t\t\t\t));",
                          "\t\t\t\t\ttheta += delta;",
                          "\t\t\t\t}",
                          "\t\t\t\tphi += delta;",
                          "\t\t\t     }",
                          "\t\t\t     ",
                          "\t\t\t     coordinates = new MFVec3f(localc);",
                          "\t\t\t}",
                          "",
                          "\t\t\tfunction set_fraction(fraction, eventTime) {",
                          "\t\t\t\tchoice = Math.floor(Math.random() * 4);",
                          "\t\t\t\tswitch (choice) {",
                          "\t\t\t\tcase 0:",
                          "\t\t\t\t\te += Math.floor(Math.random() * 2) * 2 - 1;",
                          "\t\t\t\t\tbreak;",
                          "\t\t\t\tcase 1:",
                          "\t\t\t\t\tf += Math.floor(Math.random() * 2) * 2 - 1;",
                          "\t\t\t\t\tbreak;",
                          "\t\t\t\tcase 2:",
                          "\t\t\t\t\tg += Math.floor(Math.random() * 2) * 2 - 1;",
                          "\t\t\t\t\tbreak;",
                          "\t\t\t\tcase 3:",
                          "\t\t\t\t\th += Math.floor(Math.random() * 2) * 2 - 1;",
                          "\t\t\t\t\tbreak;",
                          "\t\t\t\t}",
                          "\t\t\t\tif (f < 1) {",
                          "\t\t\t\t\tf = 10;",
                          "\t\t\t\t}",
                          "\t\t\t\tif (g < 1) {",
                          "\t\t\t\t\tg = 4;",
                          "\t\t\t\t}",
                          "\t\t\t\tif (h < 1) {",
                          "\t\t\t\t\th = 4;",
                          "\t\t\t\t}",
                          "\t\t\t\tgenerateCoordinates();",
                          "\t\t\t}",
                          "\t\t\t      "
                        ]
                      }
                    },
                    {
                      "ROUTE": {
                        "@fromNode": "DECLorbit_INSTANCE1000_OrbitScript",
                        "@fromField": "coordIndexes",
                        "@toNode": "DECLorbit_INSTANCE1000_Orbit",
                        "@toField": "coordIndex"
                      }
                    },
                    {
                      "ROUTE": {
                        "@fromNode": "DECLorbit_INSTANCE1000_OrbitScript",
                        "@fromField": "coordinates",
                        "@toNode": "DECLorbit_INSTANCE1000_OrbitCoordinates",
                        "@toField": "point"
                      }
                    },
                    {
                      "ROUTE": {
                        "@fromNode": "Clock",
                        "@fromField": "fraction_changed",
                        "@toNode": "DECLorbit_INSTANCE1000_OrbitScript",
                        "@toField": "set_fraction"
                      }
                    },
                    {
                      "ROUTE": {
                        "@fromNode": "OrbitPath",
                        "@fromField": "value_changed",
                        "@toNode": "DECLorbit_INSTANCE1000_OrbitTransform",
                        "@toField": "rotation"
                      }
                    }
                  ]
                }
              },
              {
                "ROUTE": {
                  "@fromNode": "Clock",
                  "@fromField": "fraction_changed",
                  "@toNode": "OrbitPath",
                  "@toField": "set_fraction"
                }
              }
            ]
          }
        }
      ]
    },
    "encoding": "UTF-8",
    "JSON schema": "http://www.web3d.org/specifications/x3d-3.3-JSONSchema.json"
  }
}