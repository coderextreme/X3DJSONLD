{
  "X3D": {
    "encoding": "UTF-8",
    "@profile": "Immersive",
    "@version": "3.3",
    "@xsd:noNamespaceSchemaLocation": "https://www.web3d.org/specifications/x3d-3.3.xsd",
    "JSON schema": "https://www.web3d.org/specifications/x3d-3.3-JSONSchema.json",
    "head": {
      "meta": [
        {
          "@name": "title",
          "@content": "HeadsUpDisplayExample.x3d"
        },
        {
          "@name": "description",
          "@content": "Prototype definition that demonstrates use of a simple HeadsUpDisplay (HUD) prototype that maintains a stable position for its children on the screen."
        },
        {
          "@name": "creator",
          "@content": "Leonard Daly and Don Brutzman"
        },
        {
          "@name": "created",
          "@content": "15 July 2006"
        },
        {
          "@name": "modified",
          "@content": "24 October 2016"
        },
        {
          "@name": "reference",
          "@content": "HeadsUpDisplayPrototype.x3d"
        },
        {
          "@name": "reference",
          "@content": "http://X3dGraphics.com"
        },
        {
          "@name": "reference",
          "@content": "https://www.web3d.org/x3d/content/examples/X3dResources.html"
        },
        {
          "@name": "rights",
          "@content": "Copyright 2006, Daly Realism and Don Brutzman"
        },
        {
          "@name": "subject",
          "@content": "X3D book, X3D graphics, X3D-Edit, http://www.x3dGraphics.com"
        },
        {
          "@name": "identifier",
          "@content": "http://X3dGraphics.com/examples/X3dForWebAuthors/Chapter14Prototypes/HeadsUpDisplayExample.x3d"
        },
        {
          "@name": "generator",
          "@content": "X3D-Edit 3.3, https://savage.nps.edu/X3D-Edit"
        },
        {
          "@name": "license",
          "@content": "../license.html"
        },
        {
          "@name": "translated",
          "@content": "17 January 2022"
        },
        {
          "@name": "generator",
          "@content": "X3dToJson.xslt, https://www.web3d.org/x3d/stylesheets/X3dToJson.html"
        },
        {
          "@name": "reference",
          "@content": "X3D JSON encoding: https://www.web3d.org/wiki/index.php/X3D_JSON_Encoding"
        }
      ]
    },
    "Scene": {
      "-children": [
        {
          "#comment": "Simple Heads-Up Display (HUD) Prototype\\n \\n Manages the display of a HUD and maintains its position on the screen.\\n Changes to fieldOfView (in Viewpoint node) will change screen position\\n \\n Fields:\\n hudSize Size of HUD (initializeOnly - SFVec3f) default=\"1 1 .01\"\\n hudColor Color of HUD (inputOutput - SFColor) default=\"1 1 1\"\\n screenOffset Offset of HUD. This field positions the HUD on the display screen (inputOutput - SFVec3f) default=\"0 0 0\"\\n hudGeometry Geometry to be placed on the HUD. Origin is center of HUD. (inputOutput - MFNode) default = []\\n position_changed Current viewer location (outputOnly - SFVec3f)\\n orientation_changed Current viewer orientation (outputOnly - SFRotation)\\n \\n \\n"
        },
        {},
        {
          "Background": {
            "@DEF": "SandyShallowBottom",
            "@groundAngle": [
              0.05,
              1.52,
              1.56,
              1.5707
            ],
            "@groundColor": [
              0.2,
              0.2,
              0,
              0.3,
              0.3,
              0,
              0.5,
              0.5,
              0.3,
              0.1,
              0.3,
              0.4,
              0,
              0.2,
              0.4
            ],
            "@skyAngle": [
              0.04,
              0.05,
              0.1,
              1.309,
              1.57
            ],
            "@skyColor": [
              0.8,
              0.8,
              0.2,
              0.8,
              0.8,
              0.2,
              0.1,
              0.1,
              0.6,
              0.1,
              0.1,
              0.6,
              0.1,
              0.25,
              0.8,
              0.6,
              0.6,
              0.9
            ]
          }
        },
        {
          "Viewpoint": {
            "@description": "Heads-up display (HUD)"
          }
        },
        {
          "#comment": "ProtoDeclare is the \"cookie cutter\" template, ProtoInstance creates an actual occurrence"
        },
        {
          "Group": {
            "-children": [
              {
                "ProximitySensor": {
                  "@DEF": "DECLHeadsUpDisplay_HeadsUpDisplayInstance_WhereSensor",
                  "@size": [
                    1000000000,
                    1000000000,
                    1000000000
                  ],
                  "@center": [
                    -2,
                    -2,
                    0
                  ]
                }
              },
              {
                "Transform": {
                  "@DEF": "DECLHeadsUpDisplay_HeadsUpDisplayInstance_FixedLocation",
                  "-children": [
                    {
                      "Transform": {
                        "@DEF": "DECLHeadsUpDisplay_HeadsUpDisplayInstance_MovableLocation",
                        "-children": [
                          {
                            "Transform": {
                              "@DEF": "DECLHeadsUpDisplay_HeadsUpDisplayInstance_LocationOffset",
                              "@translation": [
                                -2,
                                -2,
                                0
                              ],
                              "-children": [
                                {
                                  "Transform": {
                                    "@translation": [
                                      0,
                                      0,
                                      -10
                                    ],
                                    "-children": [
                                      {
                                        "Group": {
                                          "-children": [
                                            {
                                              "Shape": {
                                                "-geometry": {
                                                  "Text": {
                                                    "@string": [
                                                      "HUD text stays fixed",
                                                      "while user navigates"
                                                    ],
                                                    "-fontStyle": {
                                                      "FontStyle": {
                                                        "@justify": [
                                                          "MIDDLE",
                                                          "MIDDLE"
                                                        ],
                                                        "@size": 0.3
                                                      }
                                                    }
                                                  }
                                                },
                                                "-appearance": {
                                                  "Appearance": {
                                                    "-material": {
                                                      "Material": {
                                                        "@diffuseColor": [
                                                          0.894118,
                                                          0.819608,
                                                          1
                                                        ]
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "Group": {
                                          "@DEF": "DECLHeadsUpDisplay_HeadsUpDisplayInstance_PlaneMovementSensorGroup",
                                          "-children": [
                                            {
                                              "Group": {
                                                "@DEF": "DECLHeadsUpDisplay_HeadsUpDisplayInstance_DragGeometry",
                                                "-children": [
                                                  {
                                                    "#comment": "default is null array of nodes"
                                                  }
                                                ]
                                              }
                                            },
                                            {
                                              "PlaneSensor": {
                                                "@DEF": "DECLHeadsUpDisplay_HeadsUpDisplayInstance_PlaneMovementSensor",
                                                "@description": "click and drag to move interface",
                                                "@offset": [
                                                  -2,
                                                  -2,
                                                  0
                                                ]
                                              }
                                            },
                                            {
                                              "VisibilitySensor": {
                                                "@DEF": "DECLHeadsUpDisplay_HeadsUpDisplayInstance_MovementVisibilitySensor"
                                              }
                                            },
                                            {
                                              "Script": {
                                                "@DEF": "DECLHeadsUpDisplay_HeadsUpDisplayInstance_VisibilityControlScript",
                                                "field": [
                                                  {
                                                    "@name": "traceEnabled",
                                                    "@accessType": "initializeOnly",
                                                    "@type": "SFBool",
                                                    "@value": false
                                                  },
                                                  {
                                                    "@name": "isVisible",
                                                    "@accessType": "initializeOnly",
                                                    "@type": "SFBool",
                                                    "@value": true
                                                  },
                                                  {
                                                    "@name": "planeSensorTranslation",
                                                    "@accessType": "initializeOnly",
                                                    "@type": "SFVec3f",
                                                    "@value": [
                                                      0,
                                                      0,
                                                      0
                                                    ]
                                                  },
                                                  {
                                                    "@name": "setIsVisible",
                                                    "@accessType": "inputOnly",
                                                    "@type": "SFBool"
                                                  },
                                                  {
                                                    "@name": "setPlaneSensorIsActive",
                                                    "@accessType": "inputOnly",
                                                    "@type": "SFBool"
                                                  },
                                                  {
                                                    "@name": "setPlaneSensorTranslation",
                                                    "@accessType": "inputOnly",
                                                    "@type": "SFVec3f"
                                                  },
                                                  {
                                                    "@name": "translationChanged",
                                                    "@accessType": "outputOnly",
                                                    "@type": "SFVec3f"
                                                  },
                                                  {
                                                    "@name": "translationOffsetChanged",
                                                    "@accessType": "outputOnly",
                                                    "@type": "SFVec3f"
                                                  }
                                                ],
                                                "#sourceCode": [
                                                  "",
                                                  "",
                                                  "ecmascript:",
                                                  "",
                                                  "function tracePrint (text)",
                                                  "{",
                                                  "\tif (traceEnabled) Browser.print ('[HeadsUpDisplayPrototype VisibilityControlScript] ' + text);",
                                                  "}",
                                                  "function setIsVisible (value, timeStamp)",
                                                  "{",
                                                  "\tisVisible = value;",
                                                  "\ttracePrint('isVisible=' + value);",
                                                  "}",
                                                  "function setPlaneSensorIsActive (value, timeStamp)",
                                                  "{",
                                                  "\ttracePrint('PlaneSensor isActive=' + value);",
                                                  "",
                                                  "\tif (value == false)",
                                                  "\t{",
                                                  "\t\ttracePrint('planeSensorTranslation=' + planeSensorTranslation);",
                                                  "\t\tif (isVisible)",
                                                  "\t\t{",
                                                  "\t\t\ttranslationChanged = planeSensorTranslation;",
                                                  "\t\t}",
                                                  "\t\telse",
                                                  "\t\t{",
                                                  "\t\t\t// fell off screen, reset to center",
                                                  "\t\t\ttranslationChanged = new SFVec3f(0, 0, 0);",
                                                  "\t\t\ttranslationOffsetChanged  = new SFVec3f(0, 0, 0);",
                                                  "\t\t}",
                                                  "\t}",
                                                  "}",
                                                  "function setPlaneSensorTranslation (value, timeStamp)",
                                                  "{",
                                                  "\tplaneSensorTranslation = value;",
                                                  "\ttracePrint('planeSensorTranslation=' + value);",
                                                  "}",
                                                  "",
                                                  ""
                                                ]
                                              }
                                            },
                                            {
                                              "ROUTE": {
                                                "@fromNode": "DECLHeadsUpDisplay_HeadsUpDisplayInstance_PlaneMovementSensor",
                                                "@fromField": "isActive",
                                                "@toNode": "DECLHeadsUpDisplay_HeadsUpDisplayInstance_VisibilityControlScript",
                                                "@toField": "setPlaneSensorIsActive"
                                              }
                                            },
                                            {
                                              "ROUTE": {
                                                "@fromNode": "DECLHeadsUpDisplay_HeadsUpDisplayInstance_PlaneMovementSensor",
                                                "@fromField": "translation_changed",
                                                "@toNode": "DECLHeadsUpDisplay_HeadsUpDisplayInstance_VisibilityControlScript",
                                                "@toField": "setPlaneSensorTranslation"
                                              }
                                            },
                                            {
                                              "ROUTE": {
                                                "@fromNode": "DECLHeadsUpDisplay_HeadsUpDisplayInstance_MovementVisibilitySensor",
                                                "@fromField": "isActive",
                                                "@toNode": "DECLHeadsUpDisplay_HeadsUpDisplayInstance_VisibilityControlScript",
                                                "@toField": "setIsVisible"
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLHeadsUpDisplay_HeadsUpDisplayInstance_PlaneMovementSensor",
                              "@fromField": "translation_changed",
                              "@toNode": "DECLHeadsUpDisplay_HeadsUpDisplayInstance_MovableLocation",
                              "@toField": "set_translation"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLHeadsUpDisplay_HeadsUpDisplayInstance_VisibilityControlScript",
                              "@fromField": "translationChanged",
                              "@toNode": "DECLHeadsUpDisplay_HeadsUpDisplayInstance_MovableLocation",
                              "@toField": "set_translation"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLHeadsUpDisplay_HeadsUpDisplayInstance_VisibilityControlScript",
                              "@fromField": "translationOffsetChanged",
                              "@toNode": "DECLHeadsUpDisplay_HeadsUpDisplayInstance_PlaneMovementSensor",
                              "@toField": "set_offset"
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "ROUTE": {
                  "@fromNode": "DECLHeadsUpDisplay_HeadsUpDisplayInstance_WhereSensor",
                  "@fromField": "position_changed",
                  "@toNode": "DECLHeadsUpDisplay_HeadsUpDisplayInstance_FixedLocation",
                  "@toField": "set_translation"
                }
              },
              {
                "ROUTE": {
                  "@fromNode": "DECLHeadsUpDisplay_HeadsUpDisplayInstance_WhereSensor",
                  "@fromField": "orientation_changed",
                  "@toNode": "DECLHeadsUpDisplay_HeadsUpDisplayInstance_FixedLocation",
                  "@toField": "set_rotation"
                }
              }
            ]
          }
        },
        {
          "Inline": {
            "@url": [
              "../HelloWorld.x3d",
              "http://X3dGraphics.com/examples/X3dForWebAuthors/HelloWorld.x3d",
              "../HelloWorld.wrl",
              "http://X3dGraphics.com/examples/X3dForWebAuthors/HelloWorld.wrl"
            ]
          }
        }
      ]
    }
  }
}