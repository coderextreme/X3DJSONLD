{
  "X3D": {
    "encoding": "UTF-8",
    "@profile": "Immersive",
    "@version": "3.3",
    "@xsd:noNamespaceSchemaLocation": "https://www.web3d.org/specifications/x3d-3.3.xsd",
    "JSON schema": "https://www.web3d.org/specifications/x3d-3.3-JSONSchema.json",
    "head": {
      "meta": [
        {
          "@name": "title",
          "@content": "x3domflowers.x3d"
        },
        {
          "@name": "creator",
          "@content": "John Carlson"
        },
        {
          "@name": "description",
          "@content": "5 or more prismatic flowers"
        },
        {
          "@name": "generator",
          "@content": "X3D-Edit, https://savage.nps.edu/X3D-Edit"
        },
        {
          "@name": "identifier",
          "@content": "https://coderextreme.net/X3DJSONLD/src/main/data/x3domflowers.x3d"
        },
        {
          "@name": "translated",
          "@content": "07 January 2021"
        },
        {
          "@name": "generator",
          "@content": "X3dToJson.xslt, https://www.web3d.org/x3d/stylesheets/X3dToJson.html"
        },
        {
          "@name": "reference",
          "@content": "X3D JSON encoding: https://www.web3d.org/wiki/index.php/X3D_JSON_Encoding"
        }
      ]
    },
    "Scene": {
      "-children": [
        {
          "NavigationInfo": {}
        },
        {
          "#comment": "Images courtesy of Paul Debevec's Light Probe Image Gallery"
        },
        {
          "Background": {
            "@backUrl": [
              "../resources/images/all_probes/stpeters_cross/stpeters_back.png",
              "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_back.png"
            ],
            "@bottomUrl": [
              "../resources/images/all_probes/stpeters_cross/stpeters_bottom.png",
              "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_bottom.png"
            ],
            "@frontUrl": [
              "../resources/images/all_probes/stpeters_cross/stpeters_front.png",
              "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_front.png"
            ],
            "@leftUrl": [
              "../resources/images/all_probes/stpeters_cross/stpeters_left.png",
              "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_left.png"
            ],
            "@rightUrl": [
              "../resources/images/all_probes/stpeters_cross/stpeters_right.png",
              "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_right.png"
            ],
            "@topUrl": [
              "../resources/images/all_probes/stpeters_cross/stpeters_top.png",
              "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_top.png"
            ]
          }
        },
        {
          "Group": {
            "-children": [
              {},
              {},
              {
                "Group": {
                  "-children": [
                    {
                      "Transform": {
                        "@DEF": "DECLFlowerProto_INSTANCE2000_transform",
                        "-children": [
                          {
                            "Shape": {
                              "-appearance": {
                                "Appearance": {
                                  "-material": {
                                    "Material": {
                                      "@diffuseColor": [
                                        0.7,
                                        0.7,
                                        0.7
                                      ],
                                      "@specularColor": [
                                        0.5,
                                        0.5,
                                        0.5
                                      ]
                                    }
                                  },
                                  "-texture": {
                                    "ComposedCubeMapTexture": {
                                      "@DEF": "DECLFlowerProto_INSTANCE2000_texture",
                                      "-backTexture": {
                                        "ImageTexture": {
                                          "@url": [
                                            "../resources/images/all_probes/stpeters_cross/stpeters_back.png",
                                            "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_back.png"
                                          ]
                                        }
                                      },
                                      "-bottomTexture": {
                                        "ImageTexture": {
                                          "@url": [
                                            "../resources/images/all_probes/stpeters_cross/stpeters_bottom.png",
                                            "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_bottom.png"
                                          ]
                                        }
                                      },
                                      "-frontTexture": {
                                        "ImageTexture": {
                                          "@url": [
                                            "../resources/images/all_probes/stpeters_cross/stpeters_front.png",
                                            "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_front.png"
                                          ]
                                        }
                                      },
                                      "-leftTexture": {
                                        "ImageTexture": {
                                          "@url": [
                                            "../resources/images/all_probes/stpeters_cross/stpeters_left.png",
                                            "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_left.png"
                                          ]
                                        }
                                      },
                                      "-rightTexture": {
                                        "ImageTexture": {
                                          "@url": [
                                            "../resources/images/all_probes/stpeters_cross/stpeters_right.png",
                                            "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_right.png"
                                          ]
                                        }
                                      },
                                      "-topTexture": {
                                        "ImageTexture": {
                                          "@url": [
                                            "../resources/images/all_probes/stpeters_cross/stpeters_top.png",
                                            "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_top.png"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "-shaders": [
                                    {
                                      "ComposedShader": {
                                        "@DEF": "DECLFlowerProto_INSTANCE2000_shader",
                                        "@language": "GLSL",
                                        "field": [
                                          {
                                            "@name": "cube",
                                            "@type": "SFInt32",
                                            "@accessType": "inputOutput",
                                            "@value": 0
                                          },
                                          {
                                            "@name": "chromaticDispertion",
                                            "@accessType": "initializeOnly",
                                            "@type": "SFVec3f",
                                            "@value": [
                                              0.98,
                                              1,
                                              1.033
                                            ]
                                          },
                                          {
                                            "@name": "bias",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 0.5
                                          },
                                          {
                                            "@name": "scale",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 0.5
                                          },
                                          {
                                            "@name": "power",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 2
                                          },
                                          {
                                            "@name": "a",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 10
                                          },
                                          {
                                            "@name": "b",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 1
                                          },
                                          {
                                            "@name": "c",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 20
                                          },
                                          {
                                            "@name": "d",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 20
                                          },
                                          {
                                            "@name": "tdelta",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 0
                                          },
                                          {
                                            "@name": "pdelta",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 0
                                          }
                                        ],
                                        "-children": [
                                          {
                                            "#comment": "<field name='cube' type='SFNode' accessType=\"inputOutput\"> <ComposedCubeMapTexture USE=\"texture\"/> </field>"
                                          }
                                        ],
                                        "-parts": [
                                          {
                                            "ShaderPart": {
                                              "@type": "VERTEX",
                                              "@url": [
                                                "../shaders/x3dom_flowers_chromatic.vs"
                                              ]
                                            }
                                          },
                                          {
                                            "ShaderPart": {
                                              "@type": "FRAGMENT",
                                              "@url": [
                                                "../shaders/common.fs"
                                              ]
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                }
                              },
                              "-geometry": {
                                "Sphere": {}
                              }
                            }
                          },
                          {
                            "Script": {
                              "@DEF": "DECLFlowerProto_INSTANCE2000_Animate",
                              "field": [
                                {
                                  "@name": "translation",
                                  "@accessType": "inputOutput",
                                  "@type": "SFVec3f",
                                  "@value": [
                                    0,
                                    0,
                                    0
                                  ]
                                },
                                {
                                  "@name": "velocity",
                                  "@accessType": "inputOutput",
                                  "@type": "SFVec3f",
                                  "@value": [
                                    0,
                                    0,
                                    0
                                  ]
                                },
                                {
                                  "@name": "set_fraction",
                                  "@accessType": "inputOnly",
                                  "@type": "SFFloat"
                                },
                                {
                                  "@name": "a",
                                  "@type": "SFFloat",
                                  "@accessType": "inputOutput",
                                  "@value": 0.5
                                },
                                {
                                  "@name": "b",
                                  "@type": "SFFloat",
                                  "@accessType": "inputOutput",
                                  "@value": 0.5
                                },
                                {
                                  "@name": "c",
                                  "@type": "SFFloat",
                                  "@accessType": "inputOutput",
                                  "@value": 3
                                },
                                {
                                  "@name": "d",
                                  "@type": "SFFloat",
                                  "@accessType": "inputOutput",
                                  "@value": 3
                                },
                                {
                                  "@name": "tdelta",
                                  "@type": "SFFloat",
                                  "@accessType": "inputOutput",
                                  "@value": 0.5
                                },
                                {
                                  "@name": "pdelta",
                                  "@type": "SFFloat",
                                  "@accessType": "inputOutput",
                                  "@value": 0.5
                                }
                              ],
                              "#sourceCode": [
                                "",
                                "",
                                "",
                                "ecmascript:",
                                "\t\t\tfunction initialize() {",
                                "\t\t\t    translation = new SFVec3f(0, 0, 0);",
                                "\t\t\t    velocity = new SFVec3f(",
                                "\t\t\t    \tMath.random() - 0.5,",
                                "\t\t\t\tMath.random() - 0.5,",
                                "\t\t\t\tMath.random() - 0.5);",
                                "\t\t\t}",
                                "\t\t\tfunction set_fraction() {",
                                "\t\t\t    translation = new SFVec3f(",
                                "\t\t\t    \ttranslation.x + velocity.x,",
                                "\t\t\t\ttranslation.y + velocity.y,",
                                "\t\t\t\ttranslation.z + velocity.z);",
                                "\t\t\t    for (var j = 0; j <= 2; j++) {",
                                "\t\t\t\t    if (Math.abs(translation.x) > 10) {",
                                "\t\t\t\t\tinitialize();",
                                "\t\t\t\t    } else if (Math.abs(translation.y) > 10) {",
                                "\t\t\t\t\tinitialize();",
                                "\t\t\t\t    } else if (Math.abs(translation.z) > 10) {",
                                "\t\t\t\t\tinitialize();",
                                "\t\t\t\t    } else {",
                                "\t\t\t\t\tvelocity.x += Math.random() * 0.2 - 0.1;",
                                "\t\t\t\t\tvelocity.y += Math.random() * 0.2 - 0.1;",
                                "\t\t\t\t\tvelocity.z += Math.random() * 0.2 - 0.1;",
                                "\t\t\t\t    }",
                                "\t\t\t    }",
                                "\t\t\t    animate_flowers();",
                                "\t\t\t}",
                                "",
                                "\t\t\tfunction animate_flowers(fraction, eventTime) {",
                                "\t\t\t\tvar choice = Math.floor(Math.random() * 4);",
                                "\t\t\t\tswitch (choice) {",
                                "\t\t\t\tcase 0:",
                                "\t\t\t\t\ta += Math.random() * 0.2 - 0.1;",
                                "\t\t\t\t\tbreak;",
                                "\t\t\t\tcase 1:",
                                "\t\t\t\t\tb += Math.random() * 0.2 - 0.1;",
                                "\t\t\t\t\tbreak;",
                                "\t\t\t\tcase 2:",
                                "\t\t\t\t\tc += Math.random() * 2 - 1;",
                                "\t\t\t\t\tbreak;",
                                "\t\t\t\tcase 3:",
                                "\t\t\t\t\td += Math.random() * 2 - 1;",
                                "\t\t\t\t\tbreak;",
                                "\t\t\t\t}",
                                "\t\t\t\ttdelta += 0.5;",
                                "\t\t\t\tpdelta += 0.5;",
                                "\t\t\t\tif (a > 1) {",
                                "\t\t\t\t\ta =  0.5;",
                                "\t\t\t\t}",
                                "\t\t\t\tif (b > 1) {",
                                "\t\t\t\t\tb =  0.5;",
                                "\t\t\t\t}",
                                "\t\t\t\tif (c < 1) {",
                                "\t\t\t\t\tc =  4;",
                                "\t\t\t\t}",
                                "\t\t\t\tif (d < 1) {",
                                "\t\t\t\t\td =  4;",
                                "\t\t\t\t}",
                                "\t\t\t\tif (c > 10) {",
                                "\t\t\t\t\tc = 4;",
                                "\t\t\t\t}",
                                "\t\t\t\tif (d > 10) {",
                                "\t\t\t\t\td = 4;",
                                "\t\t\t\t}",
                                "\t\t\t}",
                                "",
                                "",
                                ""
                              ]
                            }
                          },
                          {
                            "TimeSensor": {
                              "@DEF": "DECLFlowerProto_INSTANCE2000_TourTime",
                              "@cycleInterval": 5,
                              "@loop": true
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE2000_TourTime",
                              "@fromField": "fraction_changed",
                              "@toNode": "DECLFlowerProto_INSTANCE2000_Animate",
                              "@toField": "set_fraction"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE2000_Animate",
                              "@fromField": "translation_changed",
                              "@toNode": "DECLFlowerProto_INSTANCE2000_transform",
                              "@toField": "set_translation"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE2000_Animate",
                              "@fromField": "a",
                              "@toNode": "DECLFlowerProto_INSTANCE2000_shader",
                              "@toField": "a"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE2000_Animate",
                              "@fromField": "b",
                              "@toNode": "DECLFlowerProto_INSTANCE2000_shader",
                              "@toField": "b"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE2000_Animate",
                              "@fromField": "c",
                              "@toNode": "DECLFlowerProto_INSTANCE2000_shader",
                              "@toField": "c"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE2000_Animate",
                              "@fromField": "d",
                              "@toNode": "DECLFlowerProto_INSTANCE2000_shader",
                              "@toField": "d"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE2000_Animate",
                              "@fromField": "tdelta",
                              "@toNode": "DECLFlowerProto_INSTANCE2000_shader",
                              "@toField": "tdelta"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE2000_Animate",
                              "@fromField": "pdelta",
                              "@toNode": "DECLFlowerProto_INSTANCE2000_shader",
                              "@toField": "pdelta"
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "Group": {
                  "-children": [
                    {
                      "Transform": {
                        "@DEF": "DECLFlowerProto_INSTANCE4000_transform",
                        "-children": [
                          {
                            "Shape": {
                              "-appearance": {
                                "Appearance": {
                                  "-material": {
                                    "Material": {
                                      "@diffuseColor": [
                                        0.7,
                                        0.7,
                                        0.7
                                      ],
                                      "@specularColor": [
                                        0.5,
                                        0.5,
                                        0.5
                                      ]
                                    }
                                  },
                                  "-texture": {
                                    "ComposedCubeMapTexture": {
                                      "@DEF": "DECLFlowerProto_INSTANCE4000_texture",
                                      "-backTexture": {
                                        "ImageTexture": {
                                          "@url": [
                                            "../resources/images/all_probes/stpeters_cross/stpeters_back.png",
                                            "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_back.png"
                                          ]
                                        }
                                      },
                                      "-bottomTexture": {
                                        "ImageTexture": {
                                          "@url": [
                                            "../resources/images/all_probes/stpeters_cross/stpeters_bottom.png",
                                            "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_bottom.png"
                                          ]
                                        }
                                      },
                                      "-frontTexture": {
                                        "ImageTexture": {
                                          "@url": [
                                            "../resources/images/all_probes/stpeters_cross/stpeters_front.png",
                                            "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_front.png"
                                          ]
                                        }
                                      },
                                      "-leftTexture": {
                                        "ImageTexture": {
                                          "@url": [
                                            "../resources/images/all_probes/stpeters_cross/stpeters_left.png",
                                            "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_left.png"
                                          ]
                                        }
                                      },
                                      "-rightTexture": {
                                        "ImageTexture": {
                                          "@url": [
                                            "../resources/images/all_probes/stpeters_cross/stpeters_right.png",
                                            "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_right.png"
                                          ]
                                        }
                                      },
                                      "-topTexture": {
                                        "ImageTexture": {
                                          "@url": [
                                            "../resources/images/all_probes/stpeters_cross/stpeters_top.png",
                                            "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_top.png"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "-shaders": [
                                    {
                                      "ComposedShader": {
                                        "@DEF": "DECLFlowerProto_INSTANCE4000_shader",
                                        "@language": "GLSL",
                                        "field": [
                                          {
                                            "@name": "cube",
                                            "@type": "SFInt32",
                                            "@accessType": "inputOutput",
                                            "@value": 0
                                          },
                                          {
                                            "@name": "chromaticDispertion",
                                            "@accessType": "initializeOnly",
                                            "@type": "SFVec3f",
                                            "@value": [
                                              0.98,
                                              1,
                                              1.033
                                            ]
                                          },
                                          {
                                            "@name": "bias",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 0.5
                                          },
                                          {
                                            "@name": "scale",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 0.5
                                          },
                                          {
                                            "@name": "power",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 2
                                          },
                                          {
                                            "@name": "a",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 10
                                          },
                                          {
                                            "@name": "b",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 1
                                          },
                                          {
                                            "@name": "c",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 20
                                          },
                                          {
                                            "@name": "d",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 20
                                          },
                                          {
                                            "@name": "tdelta",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 0
                                          },
                                          {
                                            "@name": "pdelta",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 0
                                          }
                                        ],
                                        "-children": [
                                          {
                                            "#comment": "<field name='cube' type='SFNode' accessType=\"inputOutput\"> <ComposedCubeMapTexture USE=\"texture\"/> </field>"
                                          }
                                        ],
                                        "-parts": [
                                          {
                                            "ShaderPart": {
                                              "@type": "VERTEX",
                                              "@url": [
                                                "../shaders/x3dom_flowers_chromatic.vs"
                                              ]
                                            }
                                          },
                                          {
                                            "ShaderPart": {
                                              "@type": "FRAGMENT",
                                              "@url": [
                                                "../shaders/common.fs"
                                              ]
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                }
                              },
                              "-geometry": {
                                "Sphere": {}
                              }
                            }
                          },
                          {
                            "Script": {
                              "@DEF": "DECLFlowerProto_INSTANCE4000_Animate",
                              "field": [
                                {
                                  "@name": "translation",
                                  "@accessType": "inputOutput",
                                  "@type": "SFVec3f",
                                  "@value": [
                                    0,
                                    0,
                                    0
                                  ]
                                },
                                {
                                  "@name": "velocity",
                                  "@accessType": "inputOutput",
                                  "@type": "SFVec3f",
                                  "@value": [
                                    0,
                                    0,
                                    0
                                  ]
                                },
                                {
                                  "@name": "set_fraction",
                                  "@accessType": "inputOnly",
                                  "@type": "SFFloat"
                                },
                                {
                                  "@name": "a",
                                  "@type": "SFFloat",
                                  "@accessType": "inputOutput",
                                  "@value": 0.5
                                },
                                {
                                  "@name": "b",
                                  "@type": "SFFloat",
                                  "@accessType": "inputOutput",
                                  "@value": 0.5
                                },
                                {
                                  "@name": "c",
                                  "@type": "SFFloat",
                                  "@accessType": "inputOutput",
                                  "@value": 3
                                },
                                {
                                  "@name": "d",
                                  "@type": "SFFloat",
                                  "@accessType": "inputOutput",
                                  "@value": 3
                                },
                                {
                                  "@name": "tdelta",
                                  "@type": "SFFloat",
                                  "@accessType": "inputOutput",
                                  "@value": 0.5
                                },
                                {
                                  "@name": "pdelta",
                                  "@type": "SFFloat",
                                  "@accessType": "inputOutput",
                                  "@value": 0.5
                                }
                              ],
                              "#sourceCode": [
                                "",
                                "",
                                "",
                                "ecmascript:",
                                "\t\t\tfunction initialize() {",
                                "\t\t\t    translation = new SFVec3f(0, 0, 0);",
                                "\t\t\t    velocity = new SFVec3f(",
                                "\t\t\t    \tMath.random() - 0.5,",
                                "\t\t\t\tMath.random() - 0.5,",
                                "\t\t\t\tMath.random() - 0.5);",
                                "\t\t\t}",
                                "\t\t\tfunction set_fraction() {",
                                "\t\t\t    translation = new SFVec3f(",
                                "\t\t\t    \ttranslation.x + velocity.x,",
                                "\t\t\t\ttranslation.y + velocity.y,",
                                "\t\t\t\ttranslation.z + velocity.z);",
                                "\t\t\t    for (var j = 0; j <= 2; j++) {",
                                "\t\t\t\t    if (Math.abs(translation.x) > 10) {",
                                "\t\t\t\t\tinitialize();",
                                "\t\t\t\t    } else if (Math.abs(translation.y) > 10) {",
                                "\t\t\t\t\tinitialize();",
                                "\t\t\t\t    } else if (Math.abs(translation.z) > 10) {",
                                "\t\t\t\t\tinitialize();",
                                "\t\t\t\t    } else {",
                                "\t\t\t\t\tvelocity.x += Math.random() * 0.2 - 0.1;",
                                "\t\t\t\t\tvelocity.y += Math.random() * 0.2 - 0.1;",
                                "\t\t\t\t\tvelocity.z += Math.random() * 0.2 - 0.1;",
                                "\t\t\t\t    }",
                                "\t\t\t    }",
                                "\t\t\t    animate_flowers();",
                                "\t\t\t}",
                                "",
                                "\t\t\tfunction animate_flowers(fraction, eventTime) {",
                                "\t\t\t\tvar choice = Math.floor(Math.random() * 4);",
                                "\t\t\t\tswitch (choice) {",
                                "\t\t\t\tcase 0:",
                                "\t\t\t\t\ta += Math.random() * 0.2 - 0.1;",
                                "\t\t\t\t\tbreak;",
                                "\t\t\t\tcase 1:",
                                "\t\t\t\t\tb += Math.random() * 0.2 - 0.1;",
                                "\t\t\t\t\tbreak;",
                                "\t\t\t\tcase 2:",
                                "\t\t\t\t\tc += Math.random() * 2 - 1;",
                                "\t\t\t\t\tbreak;",
                                "\t\t\t\tcase 3:",
                                "\t\t\t\t\td += Math.random() * 2 - 1;",
                                "\t\t\t\t\tbreak;",
                                "\t\t\t\t}",
                                "\t\t\t\ttdelta += 0.5;",
                                "\t\t\t\tpdelta += 0.5;",
                                "\t\t\t\tif (a > 1) {",
                                "\t\t\t\t\ta =  0.5;",
                                "\t\t\t\t}",
                                "\t\t\t\tif (b > 1) {",
                                "\t\t\t\t\tb =  0.5;",
                                "\t\t\t\t}",
                                "\t\t\t\tif (c < 1) {",
                                "\t\t\t\t\tc =  4;",
                                "\t\t\t\t}",
                                "\t\t\t\tif (d < 1) {",
                                "\t\t\t\t\td =  4;",
                                "\t\t\t\t}",
                                "\t\t\t\tif (c > 10) {",
                                "\t\t\t\t\tc = 4;",
                                "\t\t\t\t}",
                                "\t\t\t\tif (d > 10) {",
                                "\t\t\t\t\td = 4;",
                                "\t\t\t\t}",
                                "\t\t\t}",
                                "",
                                "",
                                ""
                              ]
                            }
                          },
                          {
                            "TimeSensor": {
                              "@DEF": "DECLFlowerProto_INSTANCE4000_TourTime",
                              "@cycleInterval": 5,
                              "@loop": true
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE4000_TourTime",
                              "@fromField": "fraction_changed",
                              "@toNode": "DECLFlowerProto_INSTANCE4000_Animate",
                              "@toField": "set_fraction"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE4000_Animate",
                              "@fromField": "translation_changed",
                              "@toNode": "DECLFlowerProto_INSTANCE4000_transform",
                              "@toField": "set_translation"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE4000_Animate",
                              "@fromField": "a",
                              "@toNode": "DECLFlowerProto_INSTANCE4000_shader",
                              "@toField": "a"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE4000_Animate",
                              "@fromField": "b",
                              "@toNode": "DECLFlowerProto_INSTANCE4000_shader",
                              "@toField": "b"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE4000_Animate",
                              "@fromField": "c",
                              "@toNode": "DECLFlowerProto_INSTANCE4000_shader",
                              "@toField": "c"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE4000_Animate",
                              "@fromField": "d",
                              "@toNode": "DECLFlowerProto_INSTANCE4000_shader",
                              "@toField": "d"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE4000_Animate",
                              "@fromField": "tdelta",
                              "@toNode": "DECLFlowerProto_INSTANCE4000_shader",
                              "@toField": "tdelta"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE4000_Animate",
                              "@fromField": "pdelta",
                              "@toNode": "DECLFlowerProto_INSTANCE4000_shader",
                              "@toField": "pdelta"
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "Group": {
                  "-children": [
                    {
                      "Transform": {
                        "@DEF": "DECLFlowerProto_INSTANCE6000_transform",
                        "-children": [
                          {
                            "Shape": {
                              "-appearance": {
                                "Appearance": {
                                  "-material": {
                                    "Material": {
                                      "@diffuseColor": [
                                        0.7,
                                        0.7,
                                        0.7
                                      ],
                                      "@specularColor": [
                                        0.5,
                                        0.5,
                                        0.5
                                      ]
                                    }
                                  },
                                  "-texture": {
                                    "ComposedCubeMapTexture": {
                                      "@DEF": "DECLFlowerProto_INSTANCE6000_texture",
                                      "-backTexture": {
                                        "ImageTexture": {
                                          "@url": [
                                            "../resources/images/all_probes/stpeters_cross/stpeters_back.png",
                                            "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_back.png"
                                          ]
                                        }
                                      },
                                      "-bottomTexture": {
                                        "ImageTexture": {
                                          "@url": [
                                            "../resources/images/all_probes/stpeters_cross/stpeters_bottom.png",
                                            "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_bottom.png"
                                          ]
                                        }
                                      },
                                      "-frontTexture": {
                                        "ImageTexture": {
                                          "@url": [
                                            "../resources/images/all_probes/stpeters_cross/stpeters_front.png",
                                            "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_front.png"
                                          ]
                                        }
                                      },
                                      "-leftTexture": {
                                        "ImageTexture": {
                                          "@url": [
                                            "../resources/images/all_probes/stpeters_cross/stpeters_left.png",
                                            "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_left.png"
                                          ]
                                        }
                                      },
                                      "-rightTexture": {
                                        "ImageTexture": {
                                          "@url": [
                                            "../resources/images/all_probes/stpeters_cross/stpeters_right.png",
                                            "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_right.png"
                                          ]
                                        }
                                      },
                                      "-topTexture": {
                                        "ImageTexture": {
                                          "@url": [
                                            "../resources/images/all_probes/stpeters_cross/stpeters_top.png",
                                            "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_top.png"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "-shaders": [
                                    {
                                      "ComposedShader": {
                                        "@DEF": "DECLFlowerProto_INSTANCE6000_shader",
                                        "@language": "GLSL",
                                        "field": [
                                          {
                                            "@name": "cube",
                                            "@type": "SFInt32",
                                            "@accessType": "inputOutput",
                                            "@value": 0
                                          },
                                          {
                                            "@name": "chromaticDispertion",
                                            "@accessType": "initializeOnly",
                                            "@type": "SFVec3f",
                                            "@value": [
                                              0.98,
                                              1,
                                              1.033
                                            ]
                                          },
                                          {
                                            "@name": "bias",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 0.5
                                          },
                                          {
                                            "@name": "scale",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 0.5
                                          },
                                          {
                                            "@name": "power",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 2
                                          },
                                          {
                                            "@name": "a",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 10
                                          },
                                          {
                                            "@name": "b",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 1
                                          },
                                          {
                                            "@name": "c",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 20
                                          },
                                          {
                                            "@name": "d",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 20
                                          },
                                          {
                                            "@name": "tdelta",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 0
                                          },
                                          {
                                            "@name": "pdelta",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 0
                                          }
                                        ],
                                        "-children": [
                                          {
                                            "#comment": "<field name='cube' type='SFNode' accessType=\"inputOutput\"> <ComposedCubeMapTexture USE=\"texture\"/> </field>"
                                          }
                                        ],
                                        "-parts": [
                                          {
                                            "ShaderPart": {
                                              "@type": "VERTEX",
                                              "@url": [
                                                "../shaders/x3dom_flowers_chromatic.vs"
                                              ]
                                            }
                                          },
                                          {
                                            "ShaderPart": {
                                              "@type": "FRAGMENT",
                                              "@url": [
                                                "../shaders/common.fs"
                                              ]
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                }
                              },
                              "-geometry": {
                                "Sphere": {}
                              }
                            }
                          },
                          {
                            "Script": {
                              "@DEF": "DECLFlowerProto_INSTANCE6000_Animate",
                              "field": [
                                {
                                  "@name": "translation",
                                  "@accessType": "inputOutput",
                                  "@type": "SFVec3f",
                                  "@value": [
                                    0,
                                    0,
                                    0
                                  ]
                                },
                                {
                                  "@name": "velocity",
                                  "@accessType": "inputOutput",
                                  "@type": "SFVec3f",
                                  "@value": [
                                    0,
                                    0,
                                    0
                                  ]
                                },
                                {
                                  "@name": "set_fraction",
                                  "@accessType": "inputOnly",
                                  "@type": "SFFloat"
                                },
                                {
                                  "@name": "a",
                                  "@type": "SFFloat",
                                  "@accessType": "inputOutput",
                                  "@value": 0.5
                                },
                                {
                                  "@name": "b",
                                  "@type": "SFFloat",
                                  "@accessType": "inputOutput",
                                  "@value": 0.5
                                },
                                {
                                  "@name": "c",
                                  "@type": "SFFloat",
                                  "@accessType": "inputOutput",
                                  "@value": 3
                                },
                                {
                                  "@name": "d",
                                  "@type": "SFFloat",
                                  "@accessType": "inputOutput",
                                  "@value": 3
                                },
                                {
                                  "@name": "tdelta",
                                  "@type": "SFFloat",
                                  "@accessType": "inputOutput",
                                  "@value": 0.5
                                },
                                {
                                  "@name": "pdelta",
                                  "@type": "SFFloat",
                                  "@accessType": "inputOutput",
                                  "@value": 0.5
                                }
                              ],
                              "#sourceCode": [
                                "",
                                "",
                                "",
                                "ecmascript:",
                                "\t\t\tfunction initialize() {",
                                "\t\t\t    translation = new SFVec3f(0, 0, 0);",
                                "\t\t\t    velocity = new SFVec3f(",
                                "\t\t\t    \tMath.random() - 0.5,",
                                "\t\t\t\tMath.random() - 0.5,",
                                "\t\t\t\tMath.random() - 0.5);",
                                "\t\t\t}",
                                "\t\t\tfunction set_fraction() {",
                                "\t\t\t    translation = new SFVec3f(",
                                "\t\t\t    \ttranslation.x + velocity.x,",
                                "\t\t\t\ttranslation.y + velocity.y,",
                                "\t\t\t\ttranslation.z + velocity.z);",
                                "\t\t\t    for (var j = 0; j <= 2; j++) {",
                                "\t\t\t\t    if (Math.abs(translation.x) > 10) {",
                                "\t\t\t\t\tinitialize();",
                                "\t\t\t\t    } else if (Math.abs(translation.y) > 10) {",
                                "\t\t\t\t\tinitialize();",
                                "\t\t\t\t    } else if (Math.abs(translation.z) > 10) {",
                                "\t\t\t\t\tinitialize();",
                                "\t\t\t\t    } else {",
                                "\t\t\t\t\tvelocity.x += Math.random() * 0.2 - 0.1;",
                                "\t\t\t\t\tvelocity.y += Math.random() * 0.2 - 0.1;",
                                "\t\t\t\t\tvelocity.z += Math.random() * 0.2 - 0.1;",
                                "\t\t\t\t    }",
                                "\t\t\t    }",
                                "\t\t\t    animate_flowers();",
                                "\t\t\t}",
                                "",
                                "\t\t\tfunction animate_flowers(fraction, eventTime) {",
                                "\t\t\t\tvar choice = Math.floor(Math.random() * 4);",
                                "\t\t\t\tswitch (choice) {",
                                "\t\t\t\tcase 0:",
                                "\t\t\t\t\ta += Math.random() * 0.2 - 0.1;",
                                "\t\t\t\t\tbreak;",
                                "\t\t\t\tcase 1:",
                                "\t\t\t\t\tb += Math.random() * 0.2 - 0.1;",
                                "\t\t\t\t\tbreak;",
                                "\t\t\t\tcase 2:",
                                "\t\t\t\t\tc += Math.random() * 2 - 1;",
                                "\t\t\t\t\tbreak;",
                                "\t\t\t\tcase 3:",
                                "\t\t\t\t\td += Math.random() * 2 - 1;",
                                "\t\t\t\t\tbreak;",
                                "\t\t\t\t}",
                                "\t\t\t\ttdelta += 0.5;",
                                "\t\t\t\tpdelta += 0.5;",
                                "\t\t\t\tif (a > 1) {",
                                "\t\t\t\t\ta =  0.5;",
                                "\t\t\t\t}",
                                "\t\t\t\tif (b > 1) {",
                                "\t\t\t\t\tb =  0.5;",
                                "\t\t\t\t}",
                                "\t\t\t\tif (c < 1) {",
                                "\t\t\t\t\tc =  4;",
                                "\t\t\t\t}",
                                "\t\t\t\tif (d < 1) {",
                                "\t\t\t\t\td =  4;",
                                "\t\t\t\t}",
                                "\t\t\t\tif (c > 10) {",
                                "\t\t\t\t\tc = 4;",
                                "\t\t\t\t}",
                                "\t\t\t\tif (d > 10) {",
                                "\t\t\t\t\td = 4;",
                                "\t\t\t\t}",
                                "\t\t\t}",
                                "",
                                "",
                                ""
                              ]
                            }
                          },
                          {
                            "TimeSensor": {
                              "@DEF": "DECLFlowerProto_INSTANCE6000_TourTime",
                              "@cycleInterval": 5,
                              "@loop": true
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE6000_TourTime",
                              "@fromField": "fraction_changed",
                              "@toNode": "DECLFlowerProto_INSTANCE6000_Animate",
                              "@toField": "set_fraction"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE6000_Animate",
                              "@fromField": "translation_changed",
                              "@toNode": "DECLFlowerProto_INSTANCE6000_transform",
                              "@toField": "set_translation"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE6000_Animate",
                              "@fromField": "a",
                              "@toNode": "DECLFlowerProto_INSTANCE6000_shader",
                              "@toField": "a"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE6000_Animate",
                              "@fromField": "b",
                              "@toNode": "DECLFlowerProto_INSTANCE6000_shader",
                              "@toField": "b"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE6000_Animate",
                              "@fromField": "c",
                              "@toNode": "DECLFlowerProto_INSTANCE6000_shader",
                              "@toField": "c"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE6000_Animate",
                              "@fromField": "d",
                              "@toNode": "DECLFlowerProto_INSTANCE6000_shader",
                              "@toField": "d"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE6000_Animate",
                              "@fromField": "tdelta",
                              "@toNode": "DECLFlowerProto_INSTANCE6000_shader",
                              "@toField": "tdelta"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE6000_Animate",
                              "@fromField": "pdelta",
                              "@toNode": "DECLFlowerProto_INSTANCE6000_shader",
                              "@toField": "pdelta"
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "Group": {
                  "-children": [
                    {
                      "Transform": {
                        "@DEF": "DECLFlowerProto_INSTANCE8000_transform",
                        "-children": [
                          {
                            "Shape": {
                              "-appearance": {
                                "Appearance": {
                                  "-material": {
                                    "Material": {
                                      "@diffuseColor": [
                                        0.7,
                                        0.7,
                                        0.7
                                      ],
                                      "@specularColor": [
                                        0.5,
                                        0.5,
                                        0.5
                                      ]
                                    }
                                  },
                                  "-texture": {
                                    "ComposedCubeMapTexture": {
                                      "@DEF": "DECLFlowerProto_INSTANCE8000_texture",
                                      "-backTexture": {
                                        "ImageTexture": {
                                          "@url": [
                                            "../resources/images/all_probes/stpeters_cross/stpeters_back.png",
                                            "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_back.png"
                                          ]
                                        }
                                      },
                                      "-bottomTexture": {
                                        "ImageTexture": {
                                          "@url": [
                                            "../resources/images/all_probes/stpeters_cross/stpeters_bottom.png",
                                            "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_bottom.png"
                                          ]
                                        }
                                      },
                                      "-frontTexture": {
                                        "ImageTexture": {
                                          "@url": [
                                            "../resources/images/all_probes/stpeters_cross/stpeters_front.png",
                                            "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_front.png"
                                          ]
                                        }
                                      },
                                      "-leftTexture": {
                                        "ImageTexture": {
                                          "@url": [
                                            "../resources/images/all_probes/stpeters_cross/stpeters_left.png",
                                            "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_left.png"
                                          ]
                                        }
                                      },
                                      "-rightTexture": {
                                        "ImageTexture": {
                                          "@url": [
                                            "../resources/images/all_probes/stpeters_cross/stpeters_right.png",
                                            "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_right.png"
                                          ]
                                        }
                                      },
                                      "-topTexture": {
                                        "ImageTexture": {
                                          "@url": [
                                            "../resources/images/all_probes/stpeters_cross/stpeters_top.png",
                                            "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_top.png"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "-shaders": [
                                    {
                                      "ComposedShader": {
                                        "@DEF": "DECLFlowerProto_INSTANCE8000_shader",
                                        "@language": "GLSL",
                                        "field": [
                                          {
                                            "@name": "cube",
                                            "@type": "SFInt32",
                                            "@accessType": "inputOutput",
                                            "@value": 0
                                          },
                                          {
                                            "@name": "chromaticDispertion",
                                            "@accessType": "initializeOnly",
                                            "@type": "SFVec3f",
                                            "@value": [
                                              0.98,
                                              1,
                                              1.033
                                            ]
                                          },
                                          {
                                            "@name": "bias",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 0.5
                                          },
                                          {
                                            "@name": "scale",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 0.5
                                          },
                                          {
                                            "@name": "power",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 2
                                          },
                                          {
                                            "@name": "a",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 10
                                          },
                                          {
                                            "@name": "b",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 1
                                          },
                                          {
                                            "@name": "c",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 20
                                          },
                                          {
                                            "@name": "d",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 20
                                          },
                                          {
                                            "@name": "tdelta",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 0
                                          },
                                          {
                                            "@name": "pdelta",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 0
                                          }
                                        ],
                                        "-children": [
                                          {
                                            "#comment": "<field name='cube' type='SFNode' accessType=\"inputOutput\"> <ComposedCubeMapTexture USE=\"texture\"/> </field>"
                                          }
                                        ],
                                        "-parts": [
                                          {
                                            "ShaderPart": {
                                              "@type": "VERTEX",
                                              "@url": [
                                                "../shaders/x3dom_flowers_chromatic.vs"
                                              ]
                                            }
                                          },
                                          {
                                            "ShaderPart": {
                                              "@type": "FRAGMENT",
                                              "@url": [
                                                "../shaders/common.fs"
                                              ]
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                }
                              },
                              "-geometry": {
                                "Sphere": {}
                              }
                            }
                          },
                          {
                            "Script": {
                              "@DEF": "DECLFlowerProto_INSTANCE8000_Animate",
                              "field": [
                                {
                                  "@name": "translation",
                                  "@accessType": "inputOutput",
                                  "@type": "SFVec3f",
                                  "@value": [
                                    0,
                                    0,
                                    0
                                  ]
                                },
                                {
                                  "@name": "velocity",
                                  "@accessType": "inputOutput",
                                  "@type": "SFVec3f",
                                  "@value": [
                                    0,
                                    0,
                                    0
                                  ]
                                },
                                {
                                  "@name": "set_fraction",
                                  "@accessType": "inputOnly",
                                  "@type": "SFFloat"
                                },
                                {
                                  "@name": "a",
                                  "@type": "SFFloat",
                                  "@accessType": "inputOutput",
                                  "@value": 0.5
                                },
                                {
                                  "@name": "b",
                                  "@type": "SFFloat",
                                  "@accessType": "inputOutput",
                                  "@value": 0.5
                                },
                                {
                                  "@name": "c",
                                  "@type": "SFFloat",
                                  "@accessType": "inputOutput",
                                  "@value": 3
                                },
                                {
                                  "@name": "d",
                                  "@type": "SFFloat",
                                  "@accessType": "inputOutput",
                                  "@value": 3
                                },
                                {
                                  "@name": "tdelta",
                                  "@type": "SFFloat",
                                  "@accessType": "inputOutput",
                                  "@value": 0.5
                                },
                                {
                                  "@name": "pdelta",
                                  "@type": "SFFloat",
                                  "@accessType": "inputOutput",
                                  "@value": 0.5
                                }
                              ],
                              "#sourceCode": [
                                "",
                                "",
                                "",
                                "ecmascript:",
                                "\t\t\tfunction initialize() {",
                                "\t\t\t    translation = new SFVec3f(0, 0, 0);",
                                "\t\t\t    velocity = new SFVec3f(",
                                "\t\t\t    \tMath.random() - 0.5,",
                                "\t\t\t\tMath.random() - 0.5,",
                                "\t\t\t\tMath.random() - 0.5);",
                                "\t\t\t}",
                                "\t\t\tfunction set_fraction() {",
                                "\t\t\t    translation = new SFVec3f(",
                                "\t\t\t    \ttranslation.x + velocity.x,",
                                "\t\t\t\ttranslation.y + velocity.y,",
                                "\t\t\t\ttranslation.z + velocity.z);",
                                "\t\t\t    for (var j = 0; j <= 2; j++) {",
                                "\t\t\t\t    if (Math.abs(translation.x) > 10) {",
                                "\t\t\t\t\tinitialize();",
                                "\t\t\t\t    } else if (Math.abs(translation.y) > 10) {",
                                "\t\t\t\t\tinitialize();",
                                "\t\t\t\t    } else if (Math.abs(translation.z) > 10) {",
                                "\t\t\t\t\tinitialize();",
                                "\t\t\t\t    } else {",
                                "\t\t\t\t\tvelocity.x += Math.random() * 0.2 - 0.1;",
                                "\t\t\t\t\tvelocity.y += Math.random() * 0.2 - 0.1;",
                                "\t\t\t\t\tvelocity.z += Math.random() * 0.2 - 0.1;",
                                "\t\t\t\t    }",
                                "\t\t\t    }",
                                "\t\t\t    animate_flowers();",
                                "\t\t\t}",
                                "",
                                "\t\t\tfunction animate_flowers(fraction, eventTime) {",
                                "\t\t\t\tvar choice = Math.floor(Math.random() * 4);",
                                "\t\t\t\tswitch (choice) {",
                                "\t\t\t\tcase 0:",
                                "\t\t\t\t\ta += Math.random() * 0.2 - 0.1;",
                                "\t\t\t\t\tbreak;",
                                "\t\t\t\tcase 1:",
                                "\t\t\t\t\tb += Math.random() * 0.2 - 0.1;",
                                "\t\t\t\t\tbreak;",
                                "\t\t\t\tcase 2:",
                                "\t\t\t\t\tc += Math.random() * 2 - 1;",
                                "\t\t\t\t\tbreak;",
                                "\t\t\t\tcase 3:",
                                "\t\t\t\t\td += Math.random() * 2 - 1;",
                                "\t\t\t\t\tbreak;",
                                "\t\t\t\t}",
                                "\t\t\t\ttdelta += 0.5;",
                                "\t\t\t\tpdelta += 0.5;",
                                "\t\t\t\tif (a > 1) {",
                                "\t\t\t\t\ta =  0.5;",
                                "\t\t\t\t}",
                                "\t\t\t\tif (b > 1) {",
                                "\t\t\t\t\tb =  0.5;",
                                "\t\t\t\t}",
                                "\t\t\t\tif (c < 1) {",
                                "\t\t\t\t\tc =  4;",
                                "\t\t\t\t}",
                                "\t\t\t\tif (d < 1) {",
                                "\t\t\t\t\td =  4;",
                                "\t\t\t\t}",
                                "\t\t\t\tif (c > 10) {",
                                "\t\t\t\t\tc = 4;",
                                "\t\t\t\t}",
                                "\t\t\t\tif (d > 10) {",
                                "\t\t\t\t\td = 4;",
                                "\t\t\t\t}",
                                "\t\t\t}",
                                "",
                                "",
                                ""
                              ]
                            }
                          },
                          {
                            "TimeSensor": {
                              "@DEF": "DECLFlowerProto_INSTANCE8000_TourTime",
                              "@cycleInterval": 5,
                              "@loop": true
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE8000_TourTime",
                              "@fromField": "fraction_changed",
                              "@toNode": "DECLFlowerProto_INSTANCE8000_Animate",
                              "@toField": "set_fraction"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE8000_Animate",
                              "@fromField": "translation_changed",
                              "@toNode": "DECLFlowerProto_INSTANCE8000_transform",
                              "@toField": "set_translation"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE8000_Animate",
                              "@fromField": "a",
                              "@toNode": "DECLFlowerProto_INSTANCE8000_shader",
                              "@toField": "a"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE8000_Animate",
                              "@fromField": "b",
                              "@toNode": "DECLFlowerProto_INSTANCE8000_shader",
                              "@toField": "b"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE8000_Animate",
                              "@fromField": "c",
                              "@toNode": "DECLFlowerProto_INSTANCE8000_shader",
                              "@toField": "c"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE8000_Animate",
                              "@fromField": "d",
                              "@toNode": "DECLFlowerProto_INSTANCE8000_shader",
                              "@toField": "d"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE8000_Animate",
                              "@fromField": "tdelta",
                              "@toNode": "DECLFlowerProto_INSTANCE8000_shader",
                              "@toField": "tdelta"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE8000_Animate",
                              "@fromField": "pdelta",
                              "@toNode": "DECLFlowerProto_INSTANCE8000_shader",
                              "@toField": "pdelta"
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "Group": {
                  "-children": [
                    {
                      "Transform": {
                        "@DEF": "DECLFlowerProto_INSTANCE10000_transform",
                        "-children": [
                          {
                            "Shape": {
                              "-appearance": {
                                "Appearance": {
                                  "-material": {
                                    "Material": {
                                      "@diffuseColor": [
                                        0.7,
                                        0.7,
                                        0.7
                                      ],
                                      "@specularColor": [
                                        0.5,
                                        0.5,
                                        0.5
                                      ]
                                    }
                                  },
                                  "-texture": {
                                    "ComposedCubeMapTexture": {
                                      "@DEF": "DECLFlowerProto_INSTANCE10000_texture",
                                      "-backTexture": {
                                        "ImageTexture": {
                                          "@url": [
                                            "../resources/images/all_probes/stpeters_cross/stpeters_back.png",
                                            "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_back.png"
                                          ]
                                        }
                                      },
                                      "-bottomTexture": {
                                        "ImageTexture": {
                                          "@url": [
                                            "../resources/images/all_probes/stpeters_cross/stpeters_bottom.png",
                                            "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_bottom.png"
                                          ]
                                        }
                                      },
                                      "-frontTexture": {
                                        "ImageTexture": {
                                          "@url": [
                                            "../resources/images/all_probes/stpeters_cross/stpeters_front.png",
                                            "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_front.png"
                                          ]
                                        }
                                      },
                                      "-leftTexture": {
                                        "ImageTexture": {
                                          "@url": [
                                            "../resources/images/all_probes/stpeters_cross/stpeters_left.png",
                                            "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_left.png"
                                          ]
                                        }
                                      },
                                      "-rightTexture": {
                                        "ImageTexture": {
                                          "@url": [
                                            "../resources/images/all_probes/stpeters_cross/stpeters_right.png",
                                            "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_right.png"
                                          ]
                                        }
                                      },
                                      "-topTexture": {
                                        "ImageTexture": {
                                          "@url": [
                                            "../resources/images/all_probes/stpeters_cross/stpeters_top.png",
                                            "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_top.png"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "-shaders": [
                                    {
                                      "ComposedShader": {
                                        "@DEF": "DECLFlowerProto_INSTANCE10000_shader",
                                        "@language": "GLSL",
                                        "field": [
                                          {
                                            "@name": "cube",
                                            "@type": "SFInt32",
                                            "@accessType": "inputOutput",
                                            "@value": 0
                                          },
                                          {
                                            "@name": "chromaticDispertion",
                                            "@accessType": "initializeOnly",
                                            "@type": "SFVec3f",
                                            "@value": [
                                              0.98,
                                              1,
                                              1.033
                                            ]
                                          },
                                          {
                                            "@name": "bias",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 0.5
                                          },
                                          {
                                            "@name": "scale",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 0.5
                                          },
                                          {
                                            "@name": "power",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 2
                                          },
                                          {
                                            "@name": "a",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 10
                                          },
                                          {
                                            "@name": "b",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 1
                                          },
                                          {
                                            "@name": "c",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 20
                                          },
                                          {
                                            "@name": "d",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 20
                                          },
                                          {
                                            "@name": "tdelta",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 0
                                          },
                                          {
                                            "@name": "pdelta",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 0
                                          }
                                        ],
                                        "-children": [
                                          {
                                            "#comment": "<field name='cube' type='SFNode' accessType=\"inputOutput\"> <ComposedCubeMapTexture USE=\"texture\"/> </field>"
                                          }
                                        ],
                                        "-parts": [
                                          {
                                            "ShaderPart": {
                                              "@type": "VERTEX",
                                              "@url": [
                                                "../shaders/x3dom_flowers_chromatic.vs"
                                              ]
                                            }
                                          },
                                          {
                                            "ShaderPart": {
                                              "@type": "FRAGMENT",
                                              "@url": [
                                                "../shaders/common.fs"
                                              ]
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                }
                              },
                              "-geometry": {
                                "Sphere": {}
                              }
                            }
                          },
                          {
                            "Script": {
                              "@DEF": "DECLFlowerProto_INSTANCE10000_Animate",
                              "field": [
                                {
                                  "@name": "translation",
                                  "@accessType": "inputOutput",
                                  "@type": "SFVec3f",
                                  "@value": [
                                    0,
                                    0,
                                    0
                                  ]
                                },
                                {
                                  "@name": "velocity",
                                  "@accessType": "inputOutput",
                                  "@type": "SFVec3f",
                                  "@value": [
                                    0,
                                    0,
                                    0
                                  ]
                                },
                                {
                                  "@name": "set_fraction",
                                  "@accessType": "inputOnly",
                                  "@type": "SFFloat"
                                },
                                {
                                  "@name": "a",
                                  "@type": "SFFloat",
                                  "@accessType": "inputOutput",
                                  "@value": 0.5
                                },
                                {
                                  "@name": "b",
                                  "@type": "SFFloat",
                                  "@accessType": "inputOutput",
                                  "@value": 0.5
                                },
                                {
                                  "@name": "c",
                                  "@type": "SFFloat",
                                  "@accessType": "inputOutput",
                                  "@value": 3
                                },
                                {
                                  "@name": "d",
                                  "@type": "SFFloat",
                                  "@accessType": "inputOutput",
                                  "@value": 3
                                },
                                {
                                  "@name": "tdelta",
                                  "@type": "SFFloat",
                                  "@accessType": "inputOutput",
                                  "@value": 0.5
                                },
                                {
                                  "@name": "pdelta",
                                  "@type": "SFFloat",
                                  "@accessType": "inputOutput",
                                  "@value": 0.5
                                }
                              ],
                              "#sourceCode": [
                                "",
                                "",
                                "",
                                "ecmascript:",
                                "\t\t\tfunction initialize() {",
                                "\t\t\t    translation = new SFVec3f(0, 0, 0);",
                                "\t\t\t    velocity = new SFVec3f(",
                                "\t\t\t    \tMath.random() - 0.5,",
                                "\t\t\t\tMath.random() - 0.5,",
                                "\t\t\t\tMath.random() - 0.5);",
                                "\t\t\t}",
                                "\t\t\tfunction set_fraction() {",
                                "\t\t\t    translation = new SFVec3f(",
                                "\t\t\t    \ttranslation.x + velocity.x,",
                                "\t\t\t\ttranslation.y + velocity.y,",
                                "\t\t\t\ttranslation.z + velocity.z);",
                                "\t\t\t    for (var j = 0; j <= 2; j++) {",
                                "\t\t\t\t    if (Math.abs(translation.x) > 10) {",
                                "\t\t\t\t\tinitialize();",
                                "\t\t\t\t    } else if (Math.abs(translation.y) > 10) {",
                                "\t\t\t\t\tinitialize();",
                                "\t\t\t\t    } else if (Math.abs(translation.z) > 10) {",
                                "\t\t\t\t\tinitialize();",
                                "\t\t\t\t    } else {",
                                "\t\t\t\t\tvelocity.x += Math.random() * 0.2 - 0.1;",
                                "\t\t\t\t\tvelocity.y += Math.random() * 0.2 - 0.1;",
                                "\t\t\t\t\tvelocity.z += Math.random() * 0.2 - 0.1;",
                                "\t\t\t\t    }",
                                "\t\t\t    }",
                                "\t\t\t    animate_flowers();",
                                "\t\t\t}",
                                "",
                                "\t\t\tfunction animate_flowers(fraction, eventTime) {",
                                "\t\t\t\tvar choice = Math.floor(Math.random() * 4);",
                                "\t\t\t\tswitch (choice) {",
                                "\t\t\t\tcase 0:",
                                "\t\t\t\t\ta += Math.random() * 0.2 - 0.1;",
                                "\t\t\t\t\tbreak;",
                                "\t\t\t\tcase 1:",
                                "\t\t\t\t\tb += Math.random() * 0.2 - 0.1;",
                                "\t\t\t\t\tbreak;",
                                "\t\t\t\tcase 2:",
                                "\t\t\t\t\tc += Math.random() * 2 - 1;",
                                "\t\t\t\t\tbreak;",
                                "\t\t\t\tcase 3:",
                                "\t\t\t\t\td += Math.random() * 2 - 1;",
                                "\t\t\t\t\tbreak;",
                                "\t\t\t\t}",
                                "\t\t\t\ttdelta += 0.5;",
                                "\t\t\t\tpdelta += 0.5;",
                                "\t\t\t\tif (a > 1) {",
                                "\t\t\t\t\ta =  0.5;",
                                "\t\t\t\t}",
                                "\t\t\t\tif (b > 1) {",
                                "\t\t\t\t\tb =  0.5;",
                                "\t\t\t\t}",
                                "\t\t\t\tif (c < 1) {",
                                "\t\t\t\t\tc =  4;",
                                "\t\t\t\t}",
                                "\t\t\t\tif (d < 1) {",
                                "\t\t\t\t\td =  4;",
                                "\t\t\t\t}",
                                "\t\t\t\tif (c > 10) {",
                                "\t\t\t\t\tc = 4;",
                                "\t\t\t\t}",
                                "\t\t\t\tif (d > 10) {",
                                "\t\t\t\t\td = 4;",
                                "\t\t\t\t}",
                                "\t\t\t}",
                                "",
                                "",
                                ""
                              ]
                            }
                          },
                          {
                            "TimeSensor": {
                              "@DEF": "DECLFlowerProto_INSTANCE10000_TourTime",
                              "@cycleInterval": 5,
                              "@loop": true
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE10000_TourTime",
                              "@fromField": "fraction_changed",
                              "@toNode": "DECLFlowerProto_INSTANCE10000_Animate",
                              "@toField": "set_fraction"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE10000_Animate",
                              "@fromField": "translation_changed",
                              "@toNode": "DECLFlowerProto_INSTANCE10000_transform",
                              "@toField": "set_translation"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE10000_Animate",
                              "@fromField": "a",
                              "@toNode": "DECLFlowerProto_INSTANCE10000_shader",
                              "@toField": "a"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE10000_Animate",
                              "@fromField": "b",
                              "@toNode": "DECLFlowerProto_INSTANCE10000_shader",
                              "@toField": "b"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE10000_Animate",
                              "@fromField": "c",
                              "@toNode": "DECLFlowerProto_INSTANCE10000_shader",
                              "@toField": "c"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE10000_Animate",
                              "@fromField": "d",
                              "@toNode": "DECLFlowerProto_INSTANCE10000_shader",
                              "@toField": "d"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE10000_Animate",
                              "@fromField": "tdelta",
                              "@toNode": "DECLFlowerProto_INSTANCE10000_shader",
                              "@toField": "tdelta"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE10000_Animate",
                              "@fromField": "pdelta",
                              "@toNode": "DECLFlowerProto_INSTANCE10000_shader",
                              "@toField": "pdelta"
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              {
                "Group": {
                  "-children": [
                    {
                      "Transform": {
                        "@DEF": "DECLFlowerProto_INSTANCE12000_transform",
                        "-children": [
                          {
                            "Shape": {
                              "-appearance": {
                                "Appearance": {
                                  "-material": {
                                    "Material": {
                                      "@diffuseColor": [
                                        0.7,
                                        0.7,
                                        0.7
                                      ],
                                      "@specularColor": [
                                        0.5,
                                        0.5,
                                        0.5
                                      ]
                                    }
                                  },
                                  "-texture": {
                                    "ComposedCubeMapTexture": {
                                      "@DEF": "DECLFlowerProto_INSTANCE12000_texture",
                                      "-backTexture": {
                                        "ImageTexture": {
                                          "@url": [
                                            "../resources/images/all_probes/stpeters_cross/stpeters_back.png",
                                            "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_back.png"
                                          ]
                                        }
                                      },
                                      "-bottomTexture": {
                                        "ImageTexture": {
                                          "@url": [
                                            "../resources/images/all_probes/stpeters_cross/stpeters_bottom.png",
                                            "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_bottom.png"
                                          ]
                                        }
                                      },
                                      "-frontTexture": {
                                        "ImageTexture": {
                                          "@url": [
                                            "../resources/images/all_probes/stpeters_cross/stpeters_front.png",
                                            "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_front.png"
                                          ]
                                        }
                                      },
                                      "-leftTexture": {
                                        "ImageTexture": {
                                          "@url": [
                                            "../resources/images/all_probes/stpeters_cross/stpeters_left.png",
                                            "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_left.png"
                                          ]
                                        }
                                      },
                                      "-rightTexture": {
                                        "ImageTexture": {
                                          "@url": [
                                            "../resources/images/all_probes/stpeters_cross/stpeters_right.png",
                                            "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_right.png"
                                          ]
                                        }
                                      },
                                      "-topTexture": {
                                        "ImageTexture": {
                                          "@url": [
                                            "../resources/images/all_probes/stpeters_cross/stpeters_top.png",
                                            "https://coderextreme.net/X3DJSONLD/images/all_probes/stpeters_cross/stpeters_top.png"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "-shaders": [
                                    {
                                      "ComposedShader": {
                                        "@DEF": "DECLFlowerProto_INSTANCE12000_shader",
                                        "@language": "GLSL",
                                        "field": [
                                          {
                                            "@name": "cube",
                                            "@type": "SFInt32",
                                            "@accessType": "inputOutput",
                                            "@value": 0
                                          },
                                          {
                                            "@name": "chromaticDispertion",
                                            "@accessType": "initializeOnly",
                                            "@type": "SFVec3f",
                                            "@value": [
                                              0.98,
                                              1,
                                              1.033
                                            ]
                                          },
                                          {
                                            "@name": "bias",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 0.5
                                          },
                                          {
                                            "@name": "scale",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 0.5
                                          },
                                          {
                                            "@name": "power",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 2
                                          },
                                          {
                                            "@name": "a",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 10
                                          },
                                          {
                                            "@name": "b",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 1
                                          },
                                          {
                                            "@name": "c",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 20
                                          },
                                          {
                                            "@name": "d",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 20
                                          },
                                          {
                                            "@name": "tdelta",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 0
                                          },
                                          {
                                            "@name": "pdelta",
                                            "@type": "SFFloat",
                                            "@accessType": "inputOutput",
                                            "@value": 0
                                          }
                                        ],
                                        "-children": [
                                          {
                                            "#comment": "<field name='cube' type='SFNode' accessType=\"inputOutput\"> <ComposedCubeMapTexture USE=\"texture\"/> </field>"
                                          }
                                        ],
                                        "-parts": [
                                          {
                                            "ShaderPart": {
                                              "@type": "VERTEX",
                                              "@url": [
                                                "../shaders/x3dom_flowers_chromatic.vs"
                                              ]
                                            }
                                          },
                                          {
                                            "ShaderPart": {
                                              "@type": "FRAGMENT",
                                              "@url": [
                                                "../shaders/common.fs"
                                              ]
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                }
                              },
                              "-geometry": {
                                "Sphere": {}
                              }
                            }
                          },
                          {
                            "Script": {
                              "@DEF": "DECLFlowerProto_INSTANCE12000_Animate",
                              "field": [
                                {
                                  "@name": "translation",
                                  "@accessType": "inputOutput",
                                  "@type": "SFVec3f",
                                  "@value": [
                                    0,
                                    0,
                                    0
                                  ]
                                },
                                {
                                  "@name": "velocity",
                                  "@accessType": "inputOutput",
                                  "@type": "SFVec3f",
                                  "@value": [
                                    0,
                                    0,
                                    0
                                  ]
                                },
                                {
                                  "@name": "set_fraction",
                                  "@accessType": "inputOnly",
                                  "@type": "SFFloat"
                                },
                                {
                                  "@name": "a",
                                  "@type": "SFFloat",
                                  "@accessType": "inputOutput",
                                  "@value": 0.5
                                },
                                {
                                  "@name": "b",
                                  "@type": "SFFloat",
                                  "@accessType": "inputOutput",
                                  "@value": 0.5
                                },
                                {
                                  "@name": "c",
                                  "@type": "SFFloat",
                                  "@accessType": "inputOutput",
                                  "@value": 3
                                },
                                {
                                  "@name": "d",
                                  "@type": "SFFloat",
                                  "@accessType": "inputOutput",
                                  "@value": 3
                                },
                                {
                                  "@name": "tdelta",
                                  "@type": "SFFloat",
                                  "@accessType": "inputOutput",
                                  "@value": 0.5
                                },
                                {
                                  "@name": "pdelta",
                                  "@type": "SFFloat",
                                  "@accessType": "inputOutput",
                                  "@value": 0.5
                                }
                              ],
                              "#sourceCode": [
                                "",
                                "",
                                "",
                                "ecmascript:",
                                "\t\t\tfunction initialize() {",
                                "\t\t\t    translation = new SFVec3f(0, 0, 0);",
                                "\t\t\t    velocity = new SFVec3f(",
                                "\t\t\t    \tMath.random() - 0.5,",
                                "\t\t\t\tMath.random() - 0.5,",
                                "\t\t\t\tMath.random() - 0.5);",
                                "\t\t\t}",
                                "\t\t\tfunction set_fraction() {",
                                "\t\t\t    translation = new SFVec3f(",
                                "\t\t\t    \ttranslation.x + velocity.x,",
                                "\t\t\t\ttranslation.y + velocity.y,",
                                "\t\t\t\ttranslation.z + velocity.z);",
                                "\t\t\t    for (var j = 0; j <= 2; j++) {",
                                "\t\t\t\t    if (Math.abs(translation.x) > 10) {",
                                "\t\t\t\t\tinitialize();",
                                "\t\t\t\t    } else if (Math.abs(translation.y) > 10) {",
                                "\t\t\t\t\tinitialize();",
                                "\t\t\t\t    } else if (Math.abs(translation.z) > 10) {",
                                "\t\t\t\t\tinitialize();",
                                "\t\t\t\t    } else {",
                                "\t\t\t\t\tvelocity.x += Math.random() * 0.2 - 0.1;",
                                "\t\t\t\t\tvelocity.y += Math.random() * 0.2 - 0.1;",
                                "\t\t\t\t\tvelocity.z += Math.random() * 0.2 - 0.1;",
                                "\t\t\t\t    }",
                                "\t\t\t    }",
                                "\t\t\t    animate_flowers();",
                                "\t\t\t}",
                                "",
                                "\t\t\tfunction animate_flowers(fraction, eventTime) {",
                                "\t\t\t\tvar choice = Math.floor(Math.random() * 4);",
                                "\t\t\t\tswitch (choice) {",
                                "\t\t\t\tcase 0:",
                                "\t\t\t\t\ta += Math.random() * 0.2 - 0.1;",
                                "\t\t\t\t\tbreak;",
                                "\t\t\t\tcase 1:",
                                "\t\t\t\t\tb += Math.random() * 0.2 - 0.1;",
                                "\t\t\t\t\tbreak;",
                                "\t\t\t\tcase 2:",
                                "\t\t\t\t\tc += Math.random() * 2 - 1;",
                                "\t\t\t\t\tbreak;",
                                "\t\t\t\tcase 3:",
                                "\t\t\t\t\td += Math.random() * 2 - 1;",
                                "\t\t\t\t\tbreak;",
                                "\t\t\t\t}",
                                "\t\t\t\ttdelta += 0.5;",
                                "\t\t\t\tpdelta += 0.5;",
                                "\t\t\t\tif (a > 1) {",
                                "\t\t\t\t\ta =  0.5;",
                                "\t\t\t\t}",
                                "\t\t\t\tif (b > 1) {",
                                "\t\t\t\t\tb =  0.5;",
                                "\t\t\t\t}",
                                "\t\t\t\tif (c < 1) {",
                                "\t\t\t\t\tc =  4;",
                                "\t\t\t\t}",
                                "\t\t\t\tif (d < 1) {",
                                "\t\t\t\t\td =  4;",
                                "\t\t\t\t}",
                                "\t\t\t\tif (c > 10) {",
                                "\t\t\t\t\tc = 4;",
                                "\t\t\t\t}",
                                "\t\t\t\tif (d > 10) {",
                                "\t\t\t\t\td = 4;",
                                "\t\t\t\t}",
                                "\t\t\t}",
                                "",
                                "",
                                ""
                              ]
                            }
                          },
                          {
                            "TimeSensor": {
                              "@DEF": "DECLFlowerProto_INSTANCE12000_TourTime",
                              "@cycleInterval": 5,
                              "@loop": true
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE12000_TourTime",
                              "@fromField": "fraction_changed",
                              "@toNode": "DECLFlowerProto_INSTANCE12000_Animate",
                              "@toField": "set_fraction"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE12000_Animate",
                              "@fromField": "translation_changed",
                              "@toNode": "DECLFlowerProto_INSTANCE12000_transform",
                              "@toField": "set_translation"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE12000_Animate",
                              "@fromField": "a",
                              "@toNode": "DECLFlowerProto_INSTANCE12000_shader",
                              "@toField": "a"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE12000_Animate",
                              "@fromField": "b",
                              "@toNode": "DECLFlowerProto_INSTANCE12000_shader",
                              "@toField": "b"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE12000_Animate",
                              "@fromField": "c",
                              "@toNode": "DECLFlowerProto_INSTANCE12000_shader",
                              "@toField": "c"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE12000_Animate",
                              "@fromField": "d",
                              "@toNode": "DECLFlowerProto_INSTANCE12000_shader",
                              "@toField": "d"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE12000_Animate",
                              "@fromField": "tdelta",
                              "@toNode": "DECLFlowerProto_INSTANCE12000_shader",
                              "@toField": "tdelta"
                            }
                          },
                          {
                            "ROUTE": {
                              "@fromNode": "DECLFlowerProto_INSTANCE12000_Animate",
                              "@fromField": "pdelta",
                              "@toNode": "DECLFlowerProto_INSTANCE12000_shader",
                              "@toField": "pdelta"
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ]
    }
  }
}