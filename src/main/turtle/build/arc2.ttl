@prefix :        <https://coderextreme.net/X3DJSONLD/src/main/data/arc1.ttl#> .
@prefix owl:     <http://www.w3.org/2002/07/owl#> .
@prefix rdf:     <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs:    <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema:  <http://schema.org/> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix xsd:     <http://www.w3.org/2001/XMLSchema#> .
@prefix x3d:     <https://www.web3d.org/specifications/x3d-4.0.xsd#> .
@prefix x3do:    <https://www.web3d.org/specifications/X3dOntology4.0#> .

:X3D a owl:NamedIndividual, x3do:X3D ;
  x3do:hasHead :head ;
  x3do:hasScene :Scene ;
  x3do:profile 'Immersive' ;
  x3do:version '3.3' ;
  x3do:noNamespaceSchemaLocation 'https://www.web3d.org/specifications/x3d-3.3.xsd' .
:head a owl:NamedIndividual, x3do:head ;
  x3do:hasParent :X3D ;
  x3do:hasMeta :meta_1_1, :meta_1_2, :meta_1_3, :meta_1_4, :meta_1_5 .
:meta_1_1 a owl:NamedIndividual, x3do:meta ;
  x3do:hasParent :head ;
  x3do:name 'title' ;
  x3do:content 'arc2.x3d' .
:meta_1_2 a owl:NamedIndividual, x3do:meta ;
  x3do:hasParent :head ;
  x3do:name 'creator' ;
  x3do:content 'Lost, Doug Sanden I think' .
:meta_1_3 a owl:NamedIndividual, x3do:meta ;
  x3do:hasParent :head ;
  x3do:name 'generator' ;
  x3do:content 'manual' .
:meta_1_4 a owl:NamedIndividual, x3do:meta ;
  x3do:hasParent :head ;
  x3do:name 'identifier' ;
  x3do:content 'https://coderextreme.net/X3DJSONLD/src/main/data/arc1.x3d' .
:meta_1_5 a owl:NamedIndividual, x3do:meta ;
  x3do:hasParent :head ;
  x3do:name 'description' ;
  x3do:content 'a generic proto to connect two objects' .
:meta dcterms:title "arc2.x3d" .
:meta dcterms:creator "Lost, Doug Sanden I think" .
:meta dcterms:generator "manual" .
:meta dcterms:identifier "https://coderextreme.net/X3DJSONLD/src/main/data/arc1.x3d" .
:meta dcterms:description "a generic proto to connect two objects" .
:Scene a owl:NamedIndividual, x3do:Scene ;
  x3do:hasParent :X3D ;
  x3do:hasChildren :Viewpoint_2_1, :Background_2_2, :G1, :G2, :transC1, :DECLx3dconnector_connector1_S1 ;
  x3do:hasROUTE :ROUTE_2_7, :ROUTE_2_8 .
:Viewpoint_2_1 a owl:NamedIndividual, x3do:Viewpoint ;
  x3do:hasParent :Scene ;
  x3do:position ( 0 0 5 ) ;
  x3do:description 'Only Viewpoint' .
:Background_2_2 a owl:NamedIndividual, x3do:Background ;
  x3do:hasParent :Scene ;
  x3do:skyColor ( 0.4 0.4 0.4 ) .
:G1 a owl:NamedIndividual, x3do:Transform ;
  x3do:hasParent :Scene ;
  x3do:hasChildren :DECLpoint_INSTANCE_node ;
  x3do:DEF 'G1' .
:DECLpoint_INSTANCE_node a owl:NamedIndividual, x3do:Transform ;
  x3do:hasParent :G1 ;
  x3do:hasChildren :Shape_2_3_1_1, :DECLpoint_INSTANCE_PI1, :DECLpoint_INSTANCE_MB1, :DECLpoint_INSTANCE_CL1 ;
  x3do:hasROUTE :ROUTE_2_3_1_5, :ROUTE_2_3_1_6, :ROUTE_2_3_1_7, :ROUTE_2_3_1_8, :ROUTE_2_3_1_9 ;
  x3do:DEF 'DECLpoint_INSTANCE_node' .
:Shape_2_3_1_1 a owl:NamedIndividual, x3do:Shape ;
  x3do:hasParent :DECLpoint_INSTANCE_node ;
  x3do:hasGeometry :Sphere_2_3_1_1_1 ;
  x3do:hasAppearance :Appearance_2_3_1_1_2 .
:Sphere_2_3_1_1_1 a owl:NamedIndividual, x3do:Sphere ;
  x3do:hasParent :Shape_2_3_1_1 ;
  x3do:radius 0.1 .
:Appearance_2_3_1_1_2 a owl:NamedIndividual, x3do:Appearance ;
  x3do:hasParent :Shape_2_3_1_1 ;
  x3do:hasMaterial :Material_2_3_1_1_2_1 .
:Material_2_3_1_1_2_1 a owl:NamedIndividual, x3do:Material ;
  x3do:hasParent :Appearance_2_3_1_1_2 ;
  x3do:diffuseColor ( 1 0 0 ) .
:DECLpoint_INSTANCE_PI1 a owl:NamedIndividual, x3do:PositionInterpolator ;
  x3do:hasParent :DECLpoint_INSTANCE_node ;
  x3do:DEF 'DECLpoint_INSTANCE_PI1' ;
  x3do:key ( 0 1 ) ;
  x3do:keyValue ( 0 0 0 0 5 0 ) .
:DECLpoint_INSTANCE_MB1 a owl:NamedIndividual, x3do:Script ;
  x3do:hasParent :DECLpoint_INSTANCE_node ;
  x3do:hasField :field_2_3_1_3_1, :field_2_3_1_3_2, :field_2_3_1_3_3, :field_2_3_1_3_4 ;
  x3do:DEF 'DECLpoint_INSTANCE_MB1' ;
  x3do:sourceCode """
ecmascript:
               function set_location(value) {
                    old = translation;
                    translation = new SFVec3f(Math.random()*10-5, Math.random()*10-5, Math.random()*10-5);
                    keyValue = new MFVec3f(old, translation);
               }
""" .
:field_2_3_1_3_1 a owl:NamedIndividual, x3do:field ;
  x3do:hasParent :DECLpoint_INSTANCE_MB1 ;
  x3do:name 'translation' ;
  x3do:accessType 'inputOutput' ;
  x3do:type 'SFVec3f' ;
  x3do:value ( 0 0 0 ) .
:field_2_3_1_3_2 a owl:NamedIndividual, x3do:field ;
  x3do:hasParent :DECLpoint_INSTANCE_MB1 ;
  x3do:name 'old' ;
  x3do:accessType 'inputOutput' ;
  x3do:type 'SFVec3f' ;
  x3do:value ( 0 0 0 ) .
:field_2_3_1_3_3 a owl:NamedIndividual, x3do:field ;
  x3do:hasParent :DECLpoint_INSTANCE_MB1 ;
  x3do:name 'set_location' ;
  x3do:accessType 'inputOnly' ;
  x3do:type 'SFTime' .
:field_2_3_1_3_4 a owl:NamedIndividual, x3do:field ;
  x3do:hasParent :DECLpoint_INSTANCE_MB1 ;
  x3do:name 'keyValue' ;
  x3do:accessType 'inputOutput' ;
  x3do:type 'MFVec3f' ;
  x3do:value ( 0 0 0 0 5 0 ) .
:DECLpoint_INSTANCE_CL1 a owl:NamedIndividual, x3do:TimeSensor ;
  x3do:hasParent :DECLpoint_INSTANCE_node ;
  x3do:DEF 'DECLpoint_INSTANCE_CL1' ;
  x3do:cycleInterval '3' ;
  x3do:loop true .
:ROUTE_2_3_1_5 a owl:NamedIndividual, x3do:ROUTE ;
  x3do:hasParent :DECLpoint_INSTANCE_node ;
  x3do:fromNode 'DECLpoint_INSTANCE_CL1' ;
  x3do:fromField 'cycleTime' ;
  x3do:toNode 'DECLpoint_INSTANCE_MB1' ;
  x3do:toField 'set_location' .
:ROUTE_2_3_1_6 a owl:NamedIndividual, x3do:ROUTE ;
  x3do:hasParent :DECLpoint_INSTANCE_node ;
  x3do:fromNode 'DECLpoint_INSTANCE_CL1' ;
  x3do:fromField 'fraction_changed' ;
  x3do:toNode 'DECLpoint_INSTANCE_PI1' ;
  x3do:toField 'set_fraction' .
:ROUTE_2_3_1_7 a owl:NamedIndividual, x3do:ROUTE ;
  x3do:hasParent :DECLpoint_INSTANCE_node ;
  x3do:fromNode 'DECLpoint_INSTANCE_MB1' ;
  x3do:fromField 'keyValue' ;
  x3do:toNode 'DECLpoint_INSTANCE_PI1' ;
  x3do:toField 'keyValue' .
:ROUTE_2_3_1_8 a owl:NamedIndividual, x3do:ROUTE ;
  x3do:hasParent :DECLpoint_INSTANCE_node ;
  x3do:fromNode 'DECLpoint_INSTANCE_PI1' ;
  x3do:fromField 'value_changed' ;
  x3do:toNode 'DECLpoint_INSTANCE_node' ;
  x3do:toField 'set_translation' .
:ROUTE_2_3_1_9 a owl:NamedIndividual, x3do:ROUTE ;
  x3do:hasParent :DECLpoint_INSTANCE_node ;
  x3do:fromNode 'DECLpoint_INSTANCE_MB1' ;
  x3do:fromField 'translation_changed' ;
  x3do:toNode 'DECLpoint_INSTANCE_node' ;
  x3do:toField 'set_translation' .
:G2 a owl:NamedIndividual, x3do:Transform ;
  x3do:hasParent :Scene ;
  x3do:hasChildren :DECLpoint_INSTANCE1000_node ;
  x3do:DEF 'G2' .
:DECLpoint_INSTANCE1000_node a owl:NamedIndividual, x3do:Transform ;
  x3do:hasParent :G2 ;
  x3do:hasChildren :Shape_2_4_1_1, :DECLpoint_INSTANCE1000_PI1, :DECLpoint_INSTANCE1000_MB1, :DECLpoint_INSTANCE1000_CL1 ;
  x3do:hasROUTE :ROUTE_2_4_1_5, :ROUTE_2_4_1_6, :ROUTE_2_4_1_7, :ROUTE_2_4_1_8, :ROUTE_2_4_1_9 ;
  x3do:DEF 'DECLpoint_INSTANCE1000_node' .
:Shape_2_4_1_1 a owl:NamedIndividual, x3do:Shape ;
  x3do:hasParent :DECLpoint_INSTANCE1000_node ;
  x3do:hasGeometry :Sphere_2_4_1_1_1 ;
  x3do:hasAppearance :Appearance_2_4_1_1_2 .
:Sphere_2_4_1_1_1 a owl:NamedIndividual, x3do:Sphere ;
  x3do:hasParent :Shape_2_4_1_1 ;
  x3do:radius 0.1 .
:Appearance_2_4_1_1_2 a owl:NamedIndividual, x3do:Appearance ;
  x3do:hasParent :Shape_2_4_1_1 ;
  x3do:hasMaterial :Material_2_4_1_1_2_1 .
:Material_2_4_1_1_2_1 a owl:NamedIndividual, x3do:Material ;
  x3do:hasParent :Appearance_2_4_1_1_2 ;
  x3do:diffuseColor ( 1 0 0 ) .
:DECLpoint_INSTANCE1000_PI1 a owl:NamedIndividual, x3do:PositionInterpolator ;
  x3do:hasParent :DECLpoint_INSTANCE1000_node ;
  x3do:DEF 'DECLpoint_INSTANCE1000_PI1' ;
  x3do:key ( 0 1 ) ;
  x3do:keyValue ( 0 0 0 0 5 0 ) .
:DECLpoint_INSTANCE1000_MB1 a owl:NamedIndividual, x3do:Script ;
  x3do:hasParent :DECLpoint_INSTANCE1000_node ;
  x3do:hasField :field_2_4_1_3_1, :field_2_4_1_3_2, :field_2_4_1_3_3, :field_2_4_1_3_4 ;
  x3do:DEF 'DECLpoint_INSTANCE1000_MB1' ;
  x3do:sourceCode """
ecmascript:
               function set_location(value) {
                    old = translation;
                    translation = new SFVec3f(Math.random()*10-5, Math.random()*10-5, Math.random()*10-5);
                    keyValue = new MFVec3f(old, translation);
               }
""" .
:field_2_4_1_3_1 a owl:NamedIndividual, x3do:field ;
  x3do:hasParent :DECLpoint_INSTANCE1000_MB1 ;
  x3do:name 'translation' ;
  x3do:accessType 'inputOutput' ;
  x3do:type 'SFVec3f' ;
  x3do:value ( 0 0 0 ) .
:field_2_4_1_3_2 a owl:NamedIndividual, x3do:field ;
  x3do:hasParent :DECLpoint_INSTANCE1000_MB1 ;
  x3do:name 'old' ;
  x3do:accessType 'inputOutput' ;
  x3do:type 'SFVec3f' ;
  x3do:value ( 0 0 0 ) .
:field_2_4_1_3_3 a owl:NamedIndividual, x3do:field ;
  x3do:hasParent :DECLpoint_INSTANCE1000_MB1 ;
  x3do:name 'set_location' ;
  x3do:accessType 'inputOnly' ;
  x3do:type 'SFTime' .
:field_2_4_1_3_4 a owl:NamedIndividual, x3do:field ;
  x3do:hasParent :DECLpoint_INSTANCE1000_MB1 ;
  x3do:name 'keyValue' ;
  x3do:accessType 'inputOutput' ;
  x3do:type 'MFVec3f' ;
  x3do:value ( 0 0 0 0 5 0 ) .
:DECLpoint_INSTANCE1000_CL1 a owl:NamedIndividual, x3do:TimeSensor ;
  x3do:hasParent :DECLpoint_INSTANCE1000_node ;
  x3do:DEF 'DECLpoint_INSTANCE1000_CL1' ;
  x3do:cycleInterval '3' ;
  x3do:loop true .
:ROUTE_2_4_1_5 a owl:NamedIndividual, x3do:ROUTE ;
  x3do:hasParent :DECLpoint_INSTANCE1000_node ;
  x3do:fromNode 'DECLpoint_INSTANCE1000_CL1' ;
  x3do:fromField 'cycleTime' ;
  x3do:toNode 'DECLpoint_INSTANCE1000_MB1' ;
  x3do:toField 'set_location' .
:ROUTE_2_4_1_6 a owl:NamedIndividual, x3do:ROUTE ;
  x3do:hasParent :DECLpoint_INSTANCE1000_node ;
  x3do:fromNode 'DECLpoint_INSTANCE1000_CL1' ;
  x3do:fromField 'fraction_changed' ;
  x3do:toNode 'DECLpoint_INSTANCE1000_PI1' ;
  x3do:toField 'set_fraction' .
:ROUTE_2_4_1_7 a owl:NamedIndividual, x3do:ROUTE ;
  x3do:hasParent :DECLpoint_INSTANCE1000_node ;
  x3do:fromNode 'DECLpoint_INSTANCE1000_MB1' ;
  x3do:fromField 'keyValue' ;
  x3do:toNode 'DECLpoint_INSTANCE1000_PI1' ;
  x3do:toField 'keyValue' .
:ROUTE_2_4_1_8 a owl:NamedIndividual, x3do:ROUTE ;
  x3do:hasParent :DECLpoint_INSTANCE1000_node ;
  x3do:fromNode 'DECLpoint_INSTANCE1000_PI1' ;
  x3do:fromField 'value_changed' ;
  x3do:toNode 'DECLpoint_INSTANCE1000_node' ;
  x3do:toField 'set_translation' .
:ROUTE_2_4_1_9 a owl:NamedIndividual, x3do:ROUTE ;
  x3do:hasParent :DECLpoint_INSTANCE1000_node ;
  x3do:fromNode 'DECLpoint_INSTANCE1000_MB1' ;
  x3do:fromField 'translation_changed' ;
  x3do:toNode 'DECLpoint_INSTANCE1000_node' ;
  x3do:toField 'set_translation' .
:transC1 a owl:NamedIndividual, x3do:Transform ;
  x3do:hasParent :Scene ;
  x3do:hasChildren :rotscaleC1 ;
  x3do:DEF 'transC1' .
:rotscaleC1 a owl:NamedIndividual, x3do:Transform ;
  x3do:hasParent :transC1 ;
  x3do:hasChildren :Shape_2_5_1_1 ;
  x3do:DEF 'rotscaleC1' .
:Shape_2_5_1_1 a owl:NamedIndividual, x3do:Shape ;
  x3do:hasParent :rotscaleC1 ;
  x3do:hasAppearance :Appearance_2_5_1_1_1 ;
  x3do:hasGeometry :Cylinder_2_5_1_1_2 .
:Appearance_2_5_1_1_1 a owl:NamedIndividual, x3do:Appearance ;
  x3do:hasParent :Shape_2_5_1_1 ;
  x3do:hasMaterial :Material_2_5_1_1_1_1 .
:Material_2_5_1_1_1_1 a owl:NamedIndividual, x3do:Material ;
  x3do:hasParent :Appearance_2_5_1_1_1 ;
  x3do:diffuseColor ( 0.2 0.7 0.7 ) ;
  x3do:transparency 0.5 .
:Cylinder_2_5_1_1_2 a owl:NamedIndividual, x3do:Cylinder ;
  x3do:hasParent :Shape_2_5_1_1 ;
  x3do:radius 0.05 .
:DECLx3dconnector_connector1_S1 a owl:NamedIndividual, x3do:Script ;
  x3do:hasParent :Scene ;
  x3do:hasField :field_2_6_1, :field_2_6_2, :field_2_6_3, :field_2_6_4, :field_2_6_5, :field_2_6_6 ;
  x3do:DEF 'DECLx3dconnector_connector1_S1' ;
  x3do:sourceCode """
ecmascript:
        function recompute(startpoint,endpoint){
	    if (typeof endpoint === 'undefined') {
		return;
	    }
            var dif = endpoint.subtract(startpoint);
            var dist = dif.length()*0.5;
            var dif2 = dif.multiply(0.5);
            var norm = dif.normalize();
            var transl = startpoint.add(dif2);
	    if (typeof Quaternion !== 'undefined') {
		    return {
			    scale : new SFVec3f(1.0,dist,1.0),
			    translation : transl,
			    rotation : new Quaternion.rotateFromTo(new SFVec3f(0.0,1.0,0.0), norm)
		    };
	    } else {
		    return {
			    scale : new SFVec3f(1.0,dist,1.0),
			    translation : transl,
			    rotation : new SFRotation(new SFVec3f(0.0,1.0,0.0),norm)
		    };
	    }
	}
	function recompute_and_route(startpoint, endpoint) {
	      var trafo = recompute(startpoint, endpoint);
	      transC1.translation = trafo.translation;
	      rotscaleC1.rotation = trafo.rotation;
	      rotscaleC1.scale = trafo.scale;
	}
        function initialize(){
            recompute_and_route(startnode.translation,endnode.translation);
        }
        function set_startpoint(val,t){
            recompute_and_route(val,endnode.translation);
        }
        function set_endpoint(val,t){
            recompute_and_route(startnode.translation,val);
        }
""" .
:field_2_6_1 a owl:NamedIndividual, x3do:field ;
  x3do:hasParent :DECLx3dconnector_connector1_S1 ;
  x3do:hasChildren :G1-USE-1 ;
  x3do:name 'startnode' ;
  x3do:accessType 'initializeOnly' ;
  x3do:type 'SFNode' .
:G1-USE-1 a owl:NamedIndividual, x3do:Transform ;
  x3do:hasParent :field_2_6_1 ;
  owl:sameAs :G1 . # DEF matching this USE
:field_2_6_2 a owl:NamedIndividual, x3do:field ;
  x3do:hasParent :DECLx3dconnector_connector1_S1 ;
  x3do:hasChildren :G2-USE-1 ;
  x3do:name 'endnode' ;
  x3do:accessType 'initializeOnly' ;
  x3do:type 'SFNode' .
:G2-USE-1 a owl:NamedIndividual, x3do:Transform ;
  x3do:hasParent :field_2_6_2 ;
  owl:sameAs :G2 . # DEF matching this USE
:field_2_6_3 a owl:NamedIndividual, x3do:field ;
  x3do:hasParent :DECLx3dconnector_connector1_S1 ;
  x3do:hasChildren :transC1-USE-1 ;
  x3do:name 'transC1' ;
  x3do:accessType 'initializeOnly' ;
  x3do:type 'SFNode' .
:transC1-USE-1 a owl:NamedIndividual, x3do:Transform ;
  x3do:hasParent :field_2_6_3 ;
  owl:sameAs :transC1 . # DEF matching this USE
:field_2_6_4 a owl:NamedIndividual, x3do:field ;
  x3do:hasParent :DECLx3dconnector_connector1_S1 ;
  x3do:hasChildren :rotscaleC1-USE-1 ;
  x3do:name 'rotscaleC1' ;
  x3do:accessType 'initializeOnly' ;
  x3do:type 'SFNode' .
:rotscaleC1-USE-1 a owl:NamedIndividual, x3do:Transform ;
  x3do:hasParent :field_2_6_4 ;
  owl:sameAs :rotscaleC1 . # DEF matching this USE
:field_2_6_5 a owl:NamedIndividual, x3do:field ;
  x3do:hasParent :DECLx3dconnector_connector1_S1 ;
  x3do:name 'set_startpoint' ;
  x3do:accessType 'inputOnly' ;
  x3do:type 'SFVec3f' .
:field_2_6_6 a owl:NamedIndividual, x3do:field ;
  x3do:hasParent :DECLx3dconnector_connector1_S1 ;
  x3do:name 'set_endpoint' ;
  x3do:accessType 'inputOnly' ;
  x3do:type 'SFVec3f' .
:ROUTE_2_7 a owl:NamedIndividual, x3do:ROUTE ;
  x3do:hasParent :Scene ;
  x3do:fromNode 'G1' ;
  x3do:fromField 'translation_changed' ;
  x3do:toNode 'DECLx3dconnector_connector1_S1' ;
  x3do:toField 'set_startpoint' .
:ROUTE_2_8 a owl:NamedIndividual, x3do:ROUTE ;
  x3do:hasParent :Scene ;
  x3do:fromNode 'G2' ;
  x3do:fromField 'translation_changed' ;
  x3do:toNode 'DECLx3dconnector_connector1_S1' ;
  x3do:toField 'set_endpoint' .
