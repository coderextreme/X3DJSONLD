let browser = X3D.getBrowser();
let X3D0 = {};
X3D0.profile = "Immersive";
X3D0.version = "3.1";
let WorldInfo2 = browser.currentScene.createNode("WorldInfo");
WorldInfo2.title = "CreateX3DFromStringRandomSpheres.x3d";
browser.currentScene.children = new MFNode();

browser.currentScene.children[0] = WorldInfo2;

let NavigationInfo3 = browser.currentScene.createNode("NavigationInfo");
NavigationInfo3.avatarSize = new MFFloat(new float[0.1,1.6,2]);
NavigationInfo3.headlight = False;
NavigationInfo3.speed = 5;
NavigationInfo3.type = new MFString(new java.lang.String["EXAMINE","WALK","ANY"]);
browser.currentScene.children[1] = NavigationInfo3;

let Background4 = browser.currentScene.createNode("Background");
Background4.skyAngle = new MFFloat(new float[1.1,1.57]);
Background4.skyColor = new MFColor(new float[0.3,0.3,1,0.4,0.4,1,0.7,0.7,0.9]);
browser.currentScene.children[2] = Background4;

let DirectionalLight5 = browser.currentScene.createNode("DirectionalLight");
DirectionalLight5.direction = new SFVec3f(new float[0,-0.5,-1]);
browser.currentScene.children[3] = DirectionalLight5;

let DirectionalLight6 = browser.currentScene.createNode("DirectionalLight");
DirectionalLight6.direction = new SFVec3f(new float[-1,-0.5,0.5]);
DirectionalLight6.intensity = 0.9;
browser.currentScene.children[4] = DirectionalLight6;

let DirectionalLight7 = browser.currentScene.createNode("DirectionalLight");
DirectionalLight7.direction = new SFVec3f(new float[1,-0.5,0.5]);
DirectionalLight7.intensity = 0.8;
browser.currentScene.children[5] = DirectionalLight7;

let Viewpoint8 = browser.currentScene.createNode("Viewpoint");
Viewpoint8.description = "Interaction view";
Viewpoint8.position = new SFVec3f(new float[50,1.6,150]);
browser.currentScene.children[6] = Viewpoint8;

let Viewpoint9 = browser.currentScene.createNode("Viewpoint");
Viewpoint9.description = "Plan (top-down) view";
Viewpoint9.orientation = new SFRotation(new float[1,0,0,-1.54]);
Viewpoint9.position = new SFVec3f(new float[50,200,50]);
browser.currentScene.children[7] = Viewpoint9;

let Shape10 = browser.currentScene.createNode("Shape");
let Appearance11 = browser.currentScene.createNode("Appearance");
let Material12 = browser.currentScene.createNode("Material");
Material12.diffuseColor = new SFColor(new float[0.3,0.3,1]);
Material12.transparency = 0.5;
Appearance11.material = Material12;

Shape10.appearance = Appearance11;

let Box13 = browser.currentScene.createNode("Box");
Box13.size = new SFVec3f(new float[1000,0.01,1000]);
Shape10.geometry = Box13;

browser.currentScene.children[8] = Shape10;

let Transform14 = browser.currentScene.createNode("Transform");
Transform14.translation = new SFVec3f(new float[50,1.6,140]);
//the following is a common interaction design pattern in X3D
let Billboard15 = browser.currentScene.createNode("Billboard");
let Shape16 = browser.currentScene.createNode("Shape");
let Appearance17 = browser.currentScene.createNode("Appearance");
let Material18 = browser.currentScene.createNode("Material");
Material18.diffuseColor = new SFColor(new float[0.1,0.3,0.2]);
Material18.emissiveColor = new SFColor(new float[0.3,0.6,0.9]);
Appearance17.material = Material18;

Shape16.appearance = Appearance17;

let Text19 = browser.currentScene.createNode("Text");
Text19.string = new MFString(new java.lang.String["Ten random spheres","computed at runtime"]);
let FontStyle20 = browser.currentScene.createNode("FontStyle");
FontStyle20.justify = new MFString(new java.lang.String["MIDDLE","MIDDLE"]);
Text19.fontStyle = FontStyle20;

Shape16.geometry = Text19;

Billboard15.children = new MFNode();

Billboard15.children[0] = Shape16;

let TouchSensor21 = browser.currentScene.createNode("TouchSensor");
TouchSensor21.DEF = "TouchText";
TouchSensor21.description = "Touch text to recompute random spheres";
Billboard15.children[1] = TouchSensor21;

//Transparent Box makes the text much more accessible/clickable
let Shape22 = browser.currentScene.createNode("Shape");
let Box23 = browser.currentScene.createNode("Box");
Box23.size = new SFVec3f(new float[8,2,0.1]);
Shape22.geometry = Box23;

let Appearance24 = browser.currentScene.createNode("Appearance");
let Material25 = browser.currentScene.createNode("Material");
Material25.transparency = 1;
Appearance24.material = Material25;

Shape22.appearance = Appearance24;

Billboard15.children[2] = Shape22;

Transform14.children = new MFNode();

Transform14.children[0] = Billboard15;

browser.currentScene.children[9] = Transform14;

//ROOT is used at initialize time as parent for randomly generated Shape children
let Group26 = browser.currentScene.createNode("Group");
Group26.DEF = "HoldsAutogeneratedContent";
browser.currentScene.children[10] = Group26;

let Script27 = browser.currentScene.createNode("Script");
Script27.DEF = "SphereGeneratorScript";
Script27.directOutput = True;
let field28 = browser.currentScene.createNode("field");
field28.name = "ModifiableExternalNode";
field28.accessType = "initializeOnly";
field28.type = "SFNode";
let Group29 = browser.currentScene.createNode("Group");
Group29.USE = "HoldsAutogeneratedContent";
field28.children = new MFNode();

field28.children[0] = Group29;

Script27.field = new MFNode();

Script27.field[0] = field28;

let field30 = browser.currentScene.createNode("field");
field30.name = "recompute";
field30.accessType = "inputOnly";
field30.type = "SFBool";
Script27.field[1] = field30;


Script27.setSourceCode(`ecmascript:\n"+
"\n"+
"function R ()\n"+
"{\n"+
"	return Math.random();\n"+
"}\n"+
"function recompute (isActive)\n"+
"{\n"+
"	if (isActive==true) initialize();\n"+
"}\n"+
"\n"+
"function initialize()\n"+
"{\n"+
"  for (i=0; i < 10; i++)\n"+
"  {\n"+
"    rand1 = 100*R();\n"+
"    rand2 = 100*R();\n"+
"    rand3 = 20*R();\n"+
"    rand4 = 40*R();\n"+
"    rand5 = 20*R();\n"+
"    sceneString =    '<X3D version=\"3.1\" profile=\"Interchange\">\\n' +\n"+
"                     '  <Scene>\\n' +\n"+
"                     '      <Transform translation=\"' + rand1 + ' 0 ' + rand2 + '\" >\\n' +\n"+
"                     '           <Shape>\\n' +\n"+
"                     '                   <Appearance>\\n' +\n"+
"                     '                      <Material diffuseColor=\"' + R() + ' ' + R() + ' ' + R() + '\"/>\\n' +\n"+
"                     '                   </Appearance>\\n' +\n"+
"                     '                   <Sphere radius=\"' + (rand3 / 2) + '\"/>\\n' +\n"+
"                     '           </Shape>\\n' +\n"+
"                     '      </Transform>\\n' +\n"+
"                     '  </Scene>\\n' +\n"+
"                     '</X3D>\\n' +\n"+
"                     '<!--==============================================-->\\n';\n"+
"\n"+
"       Browser.print (sceneString);\n"+
"//     newNode = Browser.createVrmlFromString(sceneString);\n"+
"       newNode = Browser.createX3DFromString(sceneString);\n"+
"       ModifiableExternalNode.children[i] = newNode[0];\n"+
"  }\n"+
"}`)
browser.currentScene.children[11] = Script27;

let ROUTE31 = browser.currentScene.createNode("ROUTE");
ROUTE31.fromField = "isActive";
ROUTE31.fromNode = "TouchText";
ROUTE31.toField = "recompute";
ROUTE31.toNode = "SphereGeneratorScript";
browser.currentScene.children[12] = ROUTE31;

