{ "X3D": {
    "encoding":"UTF-8",
    "@profile":"Full",
    "@version":"3.3",
    "@xsd:noNamespaceSchemaLocation":"http://www.web3d.org/specifications/x3d-3.3.xsd",
    "JSON schema":"https://www.web3d.org/specifications/x3d-3.3-JSONSchema.json",
    "head": {
        "meta": [
          {
            "@name":"comment",
            "@content":"World of Titania"
          },
          {
            "@name":"created",
            "@content":"Fri, 28 Aug 2015 13:01:10 GMT"
          },
          {
            "@name":"creator",
            "@content":"Holger Seelig"
          },
          {
            "@name":"generator",
            "@content":"Titania V1.0.0, http://titania.create3000.de"
          },
          {
            "@name":"modified",
            "@content":"Fri, 28 Aug 2015 13:01:10 GMT"
          },
          {
            "@name":"translated",
            "@content":"05 September 2021"
          },
          {
            "@name":"generator",
            "@content":"X3dToJson.xslt, https://www.web3d.org/x3d/stylesheets/X3dToJson.html"
          },
          {
            "@name":"reference",
            "@content":"X3D JSON encoding: https://www.web3d.org/wiki/index.php/X3D_JSON_Encoding"
          }
        ]
    },
    "Scene": {
        "-children":[
          { "ProtoDeclare":
            {
              "@name":"Or",
              "ProtoInterface": {
                  "field": [
                    {
                      "@name":"value_changed",
                      "@accessType":"outputOnly",
                      "@type":"SFBool"
                    },
                    {
                      "@name":"children",
                      "@accessType":"inputOutput",
                      "@type":"MFNode"
                    }
                  ]
              },
              "ProtoBody": {
                  "-children":[
                    { "ProtoDeclare":
                      {
                        "@name":"Data",
                        "ProtoInterface": {
                            "field": [
                              {
                                "@name":"children",
                                "@accessType":"inputOutput",
                                "@type":"MFNode"
                              }
                            ]
                        },
                        "ProtoBody": {
                            "-children":[
                              { "Group":
                                {
                                  "IS": {
                                      "connect": [
                                        {
                                          "@nodeField":"children",
                                          "@protoField":"children"
                                        }
                                      ]
                                  }
                                }
                              }
                            ]
                        }
                      }
                    },
                    { "ProtoInstance":
                      {
                        "@name":"Data",
                        "@DEF":"Data",
                        "IS": {
                            "connect": [
                              {
                                "@nodeField":"children",
                                "@protoField":"children"
                              }
                            ]
                        }
                      }
                    },
                    { "Script":
                      {
                        "@DEF":"_or",
                        "@directOutput":true,
                        "field": [
                          {
                            "@name":"set_value",
                            "@accessType":"inputOnly",
                            "@type":"SFBool"
                          },
                          {
                            "@name":"set_children",
                            "@accessType":"inputOnly",
                            "@type":"MFNode"
                          },
                          {
                            "@name":"value_changed",
                            "@accessType":"outputOnly",
                            "@type":"SFBool"
                          },
                          {
                            "@name":"self",
                            "@accessType":"initializeOnly",
                            "@type":"SFNode",
                            "-children":[
                              { "Script":
                                {
                                  "@USE":"_or"
                                }
                              }
                            ]
                          },
                          {
                            "@name":"data",
                            "@accessType":"initializeOnly",
                            "@type":"SFNode",
                            "-children":[
                              { "ProtoInstance":
                                {
                                  "@USE":"Data"
                                }
                              }
                            ]
                          }
                        ],
                        "IS": {
                            "connect": [
                              {
                                "@nodeField":"value_changed",
                                "@protoField":"value_changed"
                              }
                            ]
                        },
                        "#sourceText":[
"",
"vrmlscript:",
"function set_value (value, time)",
"{",
"\t//print (time + ': _or ' + value);",
"\t",
"\t//for (var i = 0; i < data .children .length; ++i)",
"\t//\tprint (data .children [i] .value_changed);",
"}",
"",
"function set_children (value, time)",
"{",
"\tfor (var i = 0; i < value .length; ++i)",
"\t{",
"\t\tBrowser .addRoute (value [i], 'value_changed', self, 'set_value');",
"\t}",
"}",
"",
"function initialize ()",
"{",
"\tif (data .children .length)",
"\t\tset_children (data .children, 0);",
"}",
"",
"function eventsProcessed ()",
"{",
"\tvar v = FALSE;",
"\t",
"\tfor (var i = 0; i < data .children .length; ++i)",
"\t\tv = v || data .children [i] .value_changed;",
"\t\t",
"\tvalue_changed = v;",
"}",
"",
""
]
                      }
                    },
                    { "ROUTE":
                      {
                        "@fromNode":"Data",
                        "@fromField":"children_changed",
                        "@toNode":"_or",
                        "@toField":"set_children"
                      }
                    }
                  ]
              }
            }
          }
        ]
    }
  }
}