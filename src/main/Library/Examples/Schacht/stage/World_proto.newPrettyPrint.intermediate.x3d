<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE X3D PUBLIC "ISO//Web3D//DTD X3D 3.3//EN" "https://www.web3d.org/specifications/x3d-3.3.dtd">
<X3D profile='Full' version='3.3' xmlns:xsd='http://www.w3.org/2001/XMLSchema-instance' xsd:noNamespaceSchemaLocation='https://www.web3d.org/specifications/x3d-3.3.xsd'>
  <head>
    <meta content='World of Titania' name='comment'/>
    <meta content='Fri, 28 Aug 2015 13:01:10 GMT' name='created'/>
    <meta content='Holger Seelig' name='creator'/>
    <meta content='Titania V1.0.0, http://titania.create3000.de' name='generator'/>
    <meta content='Fri, 28 Aug 2015 13:01:10 GMT' name='modified'/>
  </head>
  <Scene>
    <ProtoDeclare name='World'>
      <ProtoInterface>
        <field name='enabled' accessType='inputOutput' type='SFBool' value='true'/>
        <field name='startTime' accessType='inputOutput' type='SFTime'/>
        <field name='stopTime' accessType='inputOutput' type='SFTime'/>
        <field name='isActive' accessType='outputOnly' type='SFBool'/>
        <field name='enterTime' accessType='outputOnly' type='SFTime'/>
        <field name='exitTime' accessType='outputOnly' type='SFTime'/>
        <field name='scene' accessType='inputOutput' type='MFNode'/>
        <field name='children' accessType='inputOutput' type='MFNode'/>
      </ProtoInterface>
      <ProtoBody>
        <ProtoDeclare name='Data'>
          <ProtoInterface>
            <field name='enabled' accessType='inputOutput' type='SFBool' value='true'/>
            <field name='startTime' accessType='inputOutput' type='SFTime'/>
            <field name='stopTime' accessType='inputOutput' type='SFTime'/>
            <field name='scene' accessType='inputOutput' type='MFNode'/>
            <field name='children' accessType='inputOutput' type='MFNode'/>
          </ProtoInterface>
          <ProtoBody>
            <Group>
              <IS>
                <connect nodeField='children' protoField='children'/>
              </IS>
            </Group>
          </ProtoBody>
        </ProtoDeclare>
        <ProtoInstance DEF='Data' name='Data'>
          <IS>
            <connect nodeField='enabled' protoField='enabled'/>
            <connect nodeField='startTime' protoField='startTime'/>
            <connect nodeField='stopTime' protoField='stopTime'/>
            <connect nodeField='scene' protoField='scene'/>
            <connect nodeField='children' protoField='children'/>
          </IS>
        </ProtoInstance>
        <Script DEF='_world' directOutput='true'>
          <field name='isActive' accessType='outputOnly' type='SFBool'/>
          <field name='enterTime' accessType='outputOnly' type='SFTime'/>
          <field name='exitTime' accessType='outputOnly' type='SFTime'/>
          <field name='set_startTime' accessType='inputOnly' type='SFTime'/>
          <field name='set_stopTime' accessType='inputOnly' type='SFTime'/>
          <field name='set_startTimeC' accessType='inputOnly' type='SFTime'/>
          <field name='set_stopTimeC' accessType='inputOnly' type='SFTime'/>
          <field name='set_scene' accessType='inputOnly' type='MFNode'/>
          <field name='self' accessType='initializeOnly' type='SFNode'>
            <Script USE='_world'/>
          </field>
          <field name='scene' accessType='initializeOnly' type='SFNode'/>
          <field name='data' accessType='initializeOnly' type='SFNode'>
            <ProtoInstance USE='Data'/>
          </field>
          <IS>
            <connect nodeField='isActive' protoField='isActive'/>
            <connect nodeField='enterTime' protoField='enterTime'/>
            <connect nodeField='exitTime' protoField='exitTime'/>
          </IS>
<![CDATA[
vrmlscript:
function set_startTime(value, time)
{
	if (!data.enabled) return;
	if (!scene) return;
	if (!isActive) {
		scene.set_startTime = time;
	}
}

function set_stopTime(value, time)
{
	if (!data.enabled) return;
	if (!scene) return;
	if (isActive) {
		scene.set_stopTime = time;
	}
}

function set_startTimeC(value, time)
{
	if (!data.enabled) return;
	if (!isActive) {
		isActive = TRUE;
		enterTime = time;
	}
}

function set_stopTimeC(value, time)
{
	if (!data.enabled) return;
	if (isActive) {
		exitTime = time;
		isActive = FALSE;
	}
}

function set_scene(value, time)
{
	found = FALSE;
	for (i = 0; i < value.length && !found; i++) {
		if (value[i].toString() == 'Transform { }' && value[i].children.length && value[i].children[0].toString() == 'Scene { }') {
			found = TRUE;
			scene = value[i].children[0];
		} else if (value[i].toString() == 'Scene { }') {
			found = TRUE;
			scene = value[i];
		} 
	}
	if (!found) return;
	Browser.addRoute(scene, 'enterTime', self, 'set_startTimeC');
	Browser.addRoute(scene, 'exitTime', self, 'set_stopTimeC');
	for (i = 0; i < data.children.length; i++) {
		Browser.addRoute(data.children[i],  'value_changed', scene.children[i], 'set_value');
		Browser.addRoute(scene.children[i], 'value_changed', data.children[i], 'set_value');
	}
}

function initialize()
{
	if (data.scene.length) {
		set_scene(data.scene, 0);
		if (data.startTime) data.startTime = 1;
	}
}
]]>
        </Script>
        <ROUTE fromField='startTime_changed' fromNode='Data' toField='set_startTime' toNode='_world'/>
        <ROUTE fromField='stopTime_changed' fromNode='Data' toField='set_stopTime' toNode='_world'/>
        <ROUTE fromField='scene_changed' fromNode='Data' toField='set_scene' toNode='_world'/>
      </ProtoBody>
    </ProtoDeclare>
  </Scene>
</X3D>
