{ "X3D": {
    "encoding":"UTF-8",
    "@profile":"Full",
    "@version":"3.3",
    "@xsd:noNamespaceSchemaLocation":"http://www.web3d.org/specifications/x3d-3.3.xsd",
    "JSON schema":"http://www.web3d.org/specifications/x3d-3.3-JSONSchema.json",
    "head": {
        "meta": [
          {
            "@name":"comment",
            "@content":"World of Titania"
          },
          {
            "@name":"created",
            "@content":"Fri, 28 Aug 2015 13:01:10 GMT"
          },
          {
            "@name":"creator",
            "@content":"Holger Seelig"
          },
          {
            "@name":"generator",
            "@content":"Titania V1.0.0, http://titania.create3000.de"
          },
          {
            "@name":"modified",
            "@content":"Fri, 28 Aug 2015 13:01:10 GMT"
          },
          {
            "@name":"translated",
            "@content":"25 May 2018"
          },
          {
            "@name":"generator",
            "@content":"X3dToJson.xslt, http://www.web3d.org/x3d/stylesheets/X3dToJson.html"
          },
          {
            "@name":"reference",
            "@content":"X3D JSON encoding: http://www.web3d.org/wiki/index.php/X3D_JSON_Encoding"
          }
        ]
    },
    "Scene": {
        "-children":[
          { "ProtoDeclare":
            {
              "@name":"Random",
              "ProtoInterface": {
                  "field": [
                    {
                      "@name":"value",
                      "@accessType":"inputOutput",
                      "@type":"SFInt32"
                    },
                    {
                      "@name":"numValues",
                      "@accessType":"inputOutput",
                      "@type":"SFInt32"
                    },
                    {
                      "@name":"startTime",
                      "@accessType":"inputOutput",
                      "@type":"SFTime"
                    },
                    {
                      "@name":"stopTime",
                      "@accessType":"inputOutput",
                      "@type":"SFTime"
                    },
                    {
                      "@name":"whichChoice_changed",
                      "@accessType":"outputOnly",
                      "@type":"SFInt32"
                    },
                    {
                      "@name":"fraction_changed",
                      "@accessType":"outputOnly",
                      "@type":"SFFloat"
                    }
                  ]
              },
              "ProtoBody": {
                  "-children":[
                    { "ProtoDeclare":
                      {
                        "@name":"Data",
                        "ProtoInterface": {
                            "field": [
                              {
                                "@name":"value",
                                "@accessType":"inputOutput",
                                "@type":"SFInt32"
                              },
                              {
                                "@name":"numValues",
                                "@accessType":"inputOutput",
                                "@type":"SFInt32"
                              },
                              {
                                "@name":"startTime",
                                "@accessType":"inputOutput",
                                "@type":"SFTime"
                              },
                              {
                                "@name":"stopTime",
                                "@accessType":"inputOutput",
                                "@type":"SFTime"
                              }
                            ]
                        },
                        "ProtoBody": {
                            "-children":[
                              { "Group":
                                {
                                }
                              }
                            ]
                        }
                      }
                    },
                    { "Script":
                      {
                        "@DEF":"_random",
                        "@directOutput":true,
                        "field": [
                          {
                            "@name":"set_value",
                            "@accessType":"inputOnly",
                            "@type":"SFInt32"
                          },
                          {
                            "@name":"set_numValues",
                            "@accessType":"inputOnly",
                            "@type":"SFInt32"
                          },
                          {
                            "@name":"set_startTime",
                            "@accessType":"inputOnly",
                            "@type":"SFTime"
                          },
                          {
                            "@name":"set_stopTime",
                            "@accessType":"inputOnly",
                            "@type":"SFTime"
                          },
                          {
                            "@name":"whichChoice_changed",
                            "@accessType":"outputOnly",
                            "@type":"SFInt32"
                          },
                          {
                            "@name":"fraction_changed",
                            "@accessType":"outputOnly",
                            "@type":"SFFloat"
                          },
                          {
                            "@name":"values",
                            "@accessType":"initializeOnly",
                            "@type":"MFInt32"
                          },
                          {
                            "@name":"vi",
                            "@accessType":"initializeOnly",
                            "@type":"SFInt32"
                          },
                          {
                            "@name":"data",
                            "@accessType":"initializeOnly",
                            "@type":"SFNode",
                            "-children":[
                              { "ProtoInstance":
                                {
                                  "@name":"Data",
                                  "@DEF":"Data",
                                  "IS": {
                                      "connect": [
                                        {
                                          "@nodeField":"value",
                                          "@protoField":"value"
                                        },
                                        {
                                          "@nodeField":"numValues",
                                          "@protoField":"numValues"
                                        },
                                        {
                                          "@nodeField":"startTime",
                                          "@protoField":"startTime"
                                        },
                                        {
                                          "@nodeField":"stopTime",
                                          "@protoField":"stopTime"
                                        }
                                      ]
                                  }
                                }
                              }
                            ]
                          }
                        ],
                        "IS": {
                            "connect": [
                              {
                                "@nodeField":"whichChoice_changed",
                                "@protoField":"whichChoice_changed"
                              },
                              {
                                "@nodeField":"fraction_changed",
                                "@protoField":"fraction_changed"
                              }
                            ]
                        },
                        "#sourceText":[
"",
"vrmlscript:",
"function rand(value) { return Math.round(Math.random() * value); }",
"function isIn(value) {",
"\tfor (i = 0; i < values.length; ++i) {",
"\t\tif (value == values[i]) return TRUE;",
"\t}",
"\treturn FALSE;",
"}",
"function set_value(value, time) {",
"\tif (value < 0) data.value = 0;",
"\telse if (value < data.numValues) data.numValues = value;",
"}",
"function set_numValues(value, time) {",
"\tif (value < 0) data.numValues = 0;",
"\telse if (value > data.value) data.numValues = data.value;",
"}",
"function set_startTime(value, time)",
"{",
"\twhichChoice = rand(data.value);",
"\twhile (isIn(whichChoice)) {",
"\t\twhichChoice = rand(data.value);",
"\t}",
"\twhichChoice_changed = whichChoice;",
"\tfraction_changed = whichChoice / data.value;",
"",
"\tif (values.length < data.numValues) ++values.length;",
"\tvalues[vi++] = whichChoice;",
"\tif (vi >= data.numValues) vi = 0;",
"}",
"function set_stopTime(value, time) { values = new MFInt32(); vi = 0; }",
"function initialize() {",
"\tset_numValues(data.numValues, 0);",
"\tset_value(data.numValues, 0);",
"\tif (data.startTime) set_startTime(1, 0);",
"}",
"\t ",
""
]
                      }
                    },
                    { "ROUTE":
                      {
                        "@fromNode":"Data",
                        "@fromField":"value_changed",
                        "@toNode":"_random",
                        "@toField":"set_value"
                      }
                    },
                    { "ROUTE":
                      {
                        "@fromNode":"Data",
                        "@fromField":"numValues_changed",
                        "@toNode":"_random",
                        "@toField":"set_numValues"
                      }
                    },
                    { "ROUTE":
                      {
                        "@fromNode":"Data",
                        "@fromField":"startTime_changed",
                        "@toNode":"_random",
                        "@toField":"set_startTime"
                      }
                    },
                    { "ROUTE":
                      {
                        "@fromNode":"Data",
                        "@fromField":"stopTime_changed",
                        "@toNode":"_random",
                        "@toField":"set_stopTime"
                      }
                    }
                  ]
              }
            }
          }
        ]
    }
  }
}