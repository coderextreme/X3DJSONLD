<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE X3D PUBLIC "ISO//Web3D//DTD X3D 3.3//EN" "https://www.web3d.org/specifications/x3d-3.3.dtd">
<X3D xmlns:xsd="http://www.w3.org/2001/XMLSchema-instance" profile="Full" version="3.3" xsd:noNamespaceSchemaLocation="http://www.web3d.org/specifications/x3d-3.3.xsd" ><head><meta name="comment" content="World of Titania"></meta>
<meta name="created" content="Fri, 28 Aug 2015 13:01:10 GMT"></meta>
<meta name="creator" content="Holger Seelig"></meta>
<meta name="generator" content="Titania V1.0.0, http://titania.create3000.de"></meta>
<meta name="modified" content="Fri, 28 Aug 2015 13:01:10 GMT"></meta>
</head>
<Scene><ProtoDeclare name="Counter"><ProtoInterface><field name="value" accessType="inputOutput" type="SFInt32"></field>
<field name="offset" accessType="inputOutput" type="SFInt32"></field>
<field name="startTime" accessType="inputOutput" type="SFTime"></field>
<field name="stopTime" accessType="inputOutput" type="SFTime"></field>
<field name="isActive" accessType="outputOnly" type="SFBool"></field>
<field name="enterTime" accessType="outputOnly" type="SFTime"></field>
<field name="exitTime" accessType="outputOnly" type="SFTime"></field>
<field name="whichChoice_changed" accessType="outputOnly" type="SFInt32"></field>
<field name="fraction_changed" accessType="outputOnly" type="SFFloat"></field>
</ProtoInterface>
<ProtoBody><ProtoDeclare name="Data"><ProtoInterface><field name="value" accessType="inputOutput" type="SFInt32"></field>
<field name="offset" accessType="inputOutput" type="SFInt32"></field>
<field name="startTime" accessType="inputOutput" type="SFTime"></field>
<field name="stopTime" accessType="inputOutput" type="SFTime"></field>
</ProtoInterface>
<ProtoBody><Group></Group>
</ProtoBody>
</ProtoDeclare>
<Script DEF="_counter" directOutput="true"><field name="isActive" accessType="outputOnly" type="SFBool"></field>
<field name="enterTime" accessType="outputOnly" type="SFTime"></field>
<field name="exitTime" accessType="outputOnly" type="SFTime"></field>
<field name="whichChoice_changed" accessType="outputOnly" type="SFInt32"></field>
<field name="fraction_changed" accessType="outputOnly" type="SFFloat"></field>
<field name="set_offset" accessType="inputOnly" type="SFInt32"></field>
<field name="set_startTime" accessType="inputOnly" type="SFTime"></field>
<field name="set_stopTime" accessType="inputOnly" type="SFTime"></field>
<field name="offset" accessType="initializeOnly" type="SFInt32"></field>
<field name="data" accessType="initializeOnly" type="SFNode"><ProtoInstance name="Data" DEF="Data"><IS><connect nodeField="value" protoField="value"></connect>
<connect nodeField="offset" protoField="offset"></connect>
<connect nodeField="startTime" protoField="startTime"></connect>
<connect nodeField="stopTime" protoField="stopTime"></connect>
</IS>
</ProtoInstance>
</field>
<IS><connect nodeField="isActive" protoField="isActive"></connect>
<connect nodeField="enterTime" protoField="enterTime"></connect>
<connect nodeField="exitTime" protoField="exitTime"></connect>
<connect nodeField="whichChoice_changed" protoField="whichChoice_changed"></connect>
<connect nodeField="fraction_changed" protoField="fraction_changed"></connect>
</IS>
<![CDATA[vrmlscript:
function set_offset(value, time)
{
	if (value < 0) {
		offset = 0;
	} else if (value > data.value) {
		offset = data.value;
	} else {
		offset = value;
	}
}
function set_startTime(value, time)
{
	if (!isActive) {
		isActive = TRUE;
		enterTime = time;
		offset = 0;
	} else {
		++offset;
		if (offset >= data.value) {
			isActive = FALSE;
			exitTime = time;
		}
	}
	whichChoice_changed = offset;
	fraction_changed = offset / data.value;
}
function set_stopTime(value, time) {
	if (isActive) {
		isActive = FALSE;
		exitTime = time;
	}
}
function initialize() { if (data.startTime) data.startTime = 1; }]]></Script>
<ROUTE fromNode="Data" fromField="offset_changed" toNode="_counter" toField="set_offset"></ROUTE>
<ROUTE fromNode="Data" fromField="startTime_changed" toNode="_counter" toField="set_startTime"></ROUTE>
<ROUTE fromNode="Data" fromField="stopTime_changed" toNode="_counter" toField="set_stopTime"></ROUTE>
</ProtoBody>
</ProtoDeclare>
</Scene>
</X3D>