<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE X3D PUBLIC "ISO//Web3D//DTD X3D 3.3//EN" "http://www.web3d.org/specifications/x3d-3.3.dtd">
<X3D profile='Full' version='3.3' xmlns:xsd='http://www.w3.org/2001/XMLSchema-instance' xsd:noNamespaceSchemaLocation='http://www.web3d.org/specifications/x3d-3.3.xsd'>
  <head>
    <meta name='comment' content='World of Titania'/>
    <meta name='created' content='Thu, 23 Apr 2015 06:07:16 GMT'/>
    <meta name='creator' content='Holger Seelig'/>
    <meta name='generator' content='Titania V0.7.8, http://titania.create3000.de'/>
    <meta name='modified' content='Thu, 23 Apr 2015 06:07:16 GMT'/>
  </head>
  <Scene>
    <ProtoDeclare name='ToggleAnim'>
      <ProtoInterface>
        <field accessType='inputOutput' type='SFBool' name='direction'/>
        <field accessType='inputOnly' type='SFTime' name='startTime'/>
        <field accessType='inputOnly' type='SFTime' name='forward'/>
        <field accessType='inputOnly' type='SFTime' name='back'/>
        <field accessType='outputOnly' type='SFBool' name='state_changed'/>
        <field accessType='inputOnly' type='SFBool' name='set_isActive'/>
        <field accessType='initializeOnly' type='SFNode' name='forwardTimer'>
          <TimeSensor DEF='_1'/>
        </field>
        <field accessType='initializeOnly' type='SFNode' name='backTimer'>
          <TimeSensor DEF='_2'/>
        </field>
      </ProtoInterface>
      <ProtoBody>
        <ProtoDeclare name='Data'>
          <ProtoInterface>
            <field accessType='inputOutput' type='SFBool' name='direction'/>
          </ProtoInterface>
          <ProtoBody>
            <Group/>
          </ProtoBody>
        </ProtoDeclare>
        <Group>
          <Script DEF='_toggleAnimScript'
              directOutput='true'
              mustEvaluate='true'>
            <field accessType='outputOnly' type='SFBool' name='state_changed'/>
            <field accessType='inputOnly' type='SFTime' name='startTime'/>
            <field accessType='inputOnly' type='SFTime' name='forward'/>
            <field accessType='inputOnly' type='SFTime' name='back'/>
            <field accessType='inputOnly' type='SFBool' name='set_direction'/>
            <field accessType='inputOnly' type='SFBool' name='set_isActive'/>
            <field accessType='initializeOnly' type='SFBool' name='direction'/>
            <field accessType='initializeOnly' type='SFNode' name='forwardTimer'/>
            <field accessType='initializeOnly' type='SFNode' name='backTimer'/>
            <field accessType='initializeOnly' type='SFBool' name='isActive'/>
            <field accessType='initializeOnly' type='SFBool' name='next'/>
            <field accessType='initializeOnly' type='SFNode' name='data'>
              <ProtoInstance name='Data' DEF='Data_1'>
                <IS>
                  <connect nodeField='direction' protoField='direction'/>
                </IS>
              </ProtoInstance>
            </field>
            <IS>
              <connect nodeField='state_changed' protoField='state_changed'/>
              <connect nodeField='startTime' protoField='startTime'/>
              <connect nodeField='forward' protoField='forward'/>
              <connect nodeField='back' protoField='back'/>
              <connect nodeField='set_isActive' protoField='set_isActive'/>
              <connect nodeField='forwardTimer' protoField='forwardTimer'/>
              <connect nodeField='backTimer' protoField='backTimer'/>
            </IS>
<![CDATA[vrmlscript:
function initialize()
{
	forwardTimer.stopTime = 0;
	backTimer.stopTime    = 0;
	direction = data.direction;
	state_changed = direction;
}

function set_direction(value, time)
{
	if (value == direction) return;
	direction = value;
	if (direction == state_changed) {
		next = TRUE;
	} else {
		next = FALSE;
		if (direction) {
			forwardTimer.enabled   = TRUE;
			forwardTimer.startTime = time;			
		} else {
			backTimer.enabled	= TRUE;
			backTimer.startTime = time;
		}
	}
}

function startTime(value, time)
{
	if (!next) set_direction(!direction, time);
}

function forward(value, time)
{
	set_direction(TRUE, time);
}

function back(value, time)
{
	 set_direction(FALSE, time);
}

function set_isActive(value, time)
{
	isActive = value;
	if (!isActive) {
		if (next) {
			direction = !direction;
			state_changed = direction;
			set_direction(!direction, time);
		} else {
			state_changed = direction;
			forwardTimer.enabled = FALSE;
			backTimer.enabled	 = FALSE;			
		}
	}
}

]]> 
          </Script>
        </Group>
        <ROUTE fromNode='Data_1' fromField='direction_changed' toNode='_toggleAnimScript' toField='set_direction'/>
      </ProtoBody>
    </ProtoDeclare>
  </Scene>
</X3D>
