<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE X3D PUBLIC "ISO//Web3D//DTD X3D 3.3//EN" "https://www.web3d.org/specifications/x3d-3.3.dtd">
<X3D xmlns:xsd="http://www.w3.org/2001/XMLSchema-instance" profile="Full" version="3.3" xsd:noNamespaceSchemaLocation="http://www.web3d.org/specifications/x3d-3.3.xsd" ><head><meta name="comment" content="World of Titania"></meta>
<meta name="created" content="Thu, 23 Apr 2015 06:07:16 GMT"></meta>
<meta name="creator" content="Holger Seelig"></meta>
<meta name="generator" content="Titania V0.7.8, http://titania.create3000.de"></meta>
<meta name="modified" content="Thu, 23 Apr 2015 06:07:16 GMT"></meta>
</head>
<Scene><ProtoDeclare name="ToggleAnim"><ProtoInterface><field name="direction" accessType="inputOutput" type="SFBool"></field>
<field name="startTime" accessType="inputOnly" type="SFTime"></field>
<field name="forward" accessType="inputOnly" type="SFTime"></field>
<field name="back" accessType="inputOnly" type="SFTime"></field>
<field name="state_changed" accessType="outputOnly" type="SFBool"></field>
<field name="set_isActive" accessType="inputOnly" type="SFBool"></field>
<field name="forwardTimer" accessType="initializeOnly" type="SFNode"><TimeSensor DEF="_1"></TimeSensor>
</field>
<field name="backTimer" accessType="initializeOnly" type="SFNode"><TimeSensor DEF="_2"></TimeSensor>
</field>
</ProtoInterface>
<ProtoBody><ProtoDeclare name="Data"><ProtoInterface><field name="direction" accessType="inputOutput" type="SFBool"></field>
</ProtoInterface>
<ProtoBody><Group></Group>
</ProtoBody>
</ProtoDeclare>
<Group><Script DEF="_toggleAnimScript" directOutput="true" mustEvaluate="true"><field name="state_changed" accessType="outputOnly" type="SFBool"></field>
<field name="startTime" accessType="inputOnly" type="SFTime"></field>
<field name="forward" accessType="inputOnly" type="SFTime"></field>
<field name="back" accessType="inputOnly" type="SFTime"></field>
<field name="set_direction" accessType="inputOnly" type="SFBool"></field>
<field name="set_isActive" accessType="inputOnly" type="SFBool"></field>
<field name="direction" accessType="initializeOnly" type="SFBool"></field>
<field name="forwardTimer" accessType="initializeOnly" type="SFNode"></field>
<field name="backTimer" accessType="initializeOnly" type="SFNode"></field>
<field name="isActive" accessType="initializeOnly" type="SFBool"></field>
<field name="next" accessType="initializeOnly" type="SFBool"></field>
<field name="data" accessType="initializeOnly" type="SFNode"><ProtoInstance name="Data" DEF="Data_1"><IS><connect nodeField="direction" protoField="direction"></connect>
</IS>
</ProtoInstance>
</field>
<IS><connect nodeField="state_changed" protoField="state_changed"></connect>
<connect nodeField="startTime" protoField="startTime"></connect>
<connect nodeField="forward" protoField="forward"></connect>
<connect nodeField="back" protoField="back"></connect>
<connect nodeField="set_isActive" protoField="set_isActive"></connect>
<connect nodeField="forwardTimer" protoField="forwardTimer"></connect>
<connect nodeField="backTimer" protoField="backTimer"></connect>
</IS>
<![CDATA[vrmlscript:
function initialize()
{
	forwardTimer.stopTime = 0;
	backTimer.stopTime    = 0;
	direction = data.direction;
	state_changed = direction;
}

function set_direction(value, time)
{
	if (value == direction) return;
	direction = value;
	if (direction == state_changed) {
		next = TRUE;
	} else {
		next = FALSE;
		if (direction) {
			forwardTimer.enabled   = TRUE;
			forwardTimer.startTime = time;			
		} else {
			backTimer.enabled	= TRUE;
			backTimer.startTime = time;
		}
	}
}

function startTime(value, time)
{
	if (!next) set_direction(!direction, time);
}

function forward(value, time)
{
	set_direction(TRUE, time);
}

function back(value, time)
{
	 set_direction(FALSE, time);
}

function set_isActive(value, time)
{
	isActive = value;
	if (!isActive) {
		if (next) {
			direction = !direction;
			state_changed = direction;
			set_direction(!direction, time);
		} else {
			state_changed = direction;
			forwardTimer.enabled = FALSE;
			backTimer.enabled	 = FALSE;			
		}
	}
}]]></Script>
</Group>
<ROUTE fromNode="Data_1" fromField="direction_changed" toNode="_toggleAnimScript" toField="set_direction"></ROUTE>
</ProtoBody>
</ProtoDeclare>
</Scene>
</X3D>