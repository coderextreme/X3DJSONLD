<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE X3D PUBLIC "ISO//Web3D//DTD X3D 3.3//EN" "http://www.web3d.org/specifications/x3d-3.3.dtd">
<X3D profile='Full' version='3.3' xmlns:xsd='http://www.w3.org/2001/XMLSchema-instance' xsd:noNamespaceSchemaLocation='http://www.web3d.org/specifications/x3d-3.3.xsd'>
  <head>
    <meta name='comment' content='World of Titania'/>
    <meta name='created' content='Thu, 23 Apr 2015 06:06:56 GMT'/>
    <meta name='creator' content='Holger Seelig'/>
    <meta name='generator' content='Titania V0.7.8, http://titania.create3000.de'/>
    <meta name='modified' content='Thu, 23 Apr 2015 06:06:56 GMT'/>
  </head>
  <Scene>
    <ProtoDeclare name='AutoViewpoint'>
      <ProtoInterface>
        <field accessType='inputOutput' type='SFTime' name='startTime'/>
        <field accessType='inputOnly' type='SFBool' name='set_isActive'/>
        <field accessType='initializeOnly' type='SFNode' name='proximitySensor'>
          <ProximitySensor DEF='_1'/>
        </field>
        <field accessType='initializeOnly' type='SFNode' name='timeSensor'>
          <TimeSensor DEF='_2'/>
        </field>
        <field accessType='initializeOnly' type='SFNode' name='positionInterpolator'>
          <PositionInterpolator DEF='_3'/>
        </field>
        <field accessType='initializeOnly' type='SFNode' name='orientationInterpolator'>
          <OrientationInterpolator DEF='_4'/>
        </field>
        <field accessType='initializeOnly' type='SFNode' name='scalarInterpolator'>
          <ScalarInterpolator DEF='_5'/>
        </field>
        <field accessType='initializeOnly' type='SFNode' name='autoViewpoint'>
          <Viewpoint DEF='_6'/>
        </field>
        <field accessType='initializeOnly' type='SFNode' name='viewpoint'>
          <Viewpoint DEF='_7'/>
        </field>
      </ProtoInterface>
      <ProtoBody>
        <ProtoDeclare name='Data'>
          <ProtoInterface>
            <field accessType='inputOutput' type='SFTime' name='startTime'/>
          </ProtoInterface>
          <ProtoBody>
            <Group/>
          </ProtoBody>
        </ProtoDeclare>
        <Group>
          <Script DEF='avp'
              directOutput='true'
              mustEvaluate='true'>
            <field accessType='inputOnly' type='SFTime' name='set_startTime'/>
            <field accessType='inputOnly' type='SFBool' name='set_isActive'/>
            <field accessType='initializeOnly' type='SFNode' name='proximitySensor'/>
            <field accessType='initializeOnly' type='SFNode' name='timeSensor'/>
            <field accessType='initializeOnly' type='SFNode' name='positionInterpolator'/>
            <field accessType='initializeOnly' type='SFNode' name='orientationInterpolator'/>
            <field accessType='initializeOnly' type='SFNode' name='scalarInterpolator'/>
            <field accessType='initializeOnly' type='SFNode' name='autoViewpoint'/>
            <field accessType='initializeOnly' type='SFNode' name='viewpoint'/>
            <field accessType='initializeOnly' type='SFNode' name='data'>
              <ProtoInstance name='Data' DEF='Data'>
                <IS>
                  <connect nodeField='startTime' protoField='startTime'/>
                </IS>
              </ProtoInstance>
            </field>
            <IS>
              <connect nodeField='set_isActive' protoField='set_isActive'/>
              <connect nodeField='proximitySensor' protoField='proximitySensor'/>
              <connect nodeField='timeSensor' protoField='timeSensor'/>
              <connect nodeField='positionInterpolator' protoField='positionInterpolator'/>
              <connect nodeField='orientationInterpolator' protoField='orientationInterpolator'/>
              <connect nodeField='scalarInterpolator' protoField='scalarInterpolator'/>
              <connect nodeField='autoViewpoint' protoField='autoViewpoint'/>
              <connect nodeField='viewpoint' protoField='viewpoint'/>
            </IS>
<![CDATA[vrmlscript:
function initialize()
{
	timeSensor.enabled  = FALSE;
	timeSensor.stopTime = 0;

	if (positionInterpolator) {
		positionInterpolator.key      = new MFFloat(0, 1);
		positionInterpolator.keyValue = new MFVec3f(
			new SFVec3f(0, 0, 0),
			viewpoint.position
		);
	}

	if (orientationInterpolator) {
		orientationInterpolator.key      = new MFFloat(0, 1);
		orientationInterpolator.keyValue = new MFRotation(
			new SFRotation(0, 0, 1, 0),
			viewpoint.orientation
		);
	}

	if (scalarInterpolator) {
		scalarInterpolator.key		= new MFFloat(0, 1);
		scalarInterpolator.keyValue = new MFFloat(
			autoViewpoint.fieldOfView,
			viewpoint.fieldOfView
		);
	}
	autoViewpoint.jump = FALSE;
}

function set_startTime(value, time)
{
	if (timeSensor.isActive) return;

	timeSensor.enabled = TRUE;

	autoViewpoint.position    = proximitySensor.position_changed;
	autoViewpoint.orientation = proximitySensor.orientation_changed;

	if (positionInterpolator)    positionInterpolator.keyValue[0]    = autoViewpoint.position;
	if (orientationInterpolator) orientationInterpolator.keyValue[0] = autoViewpoint.orientation;

	autoViewpoint.set_bind = TRUE;
	timeSensor.startTime   = time;
}

function set_isActive(value, time)
{
	if (!value) {
		timeSensor.enabled = FALSE;
		if (autoViewpoint.isBound) {
			//autoViewpoint.set_bind = FALSE;
			viewpoint.set_bind = TRUE;
		}
	}
}
]]> 
          </Script>
        </Group>
        <ROUTE fromNode='Data' fromField='startTime_changed' toNode='avp' toField='set_startTime'/>
      </ProtoBody>
    </ProtoDeclare>
  </Scene>
</X3D>
