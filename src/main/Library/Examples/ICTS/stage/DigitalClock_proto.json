{ "X3D": {
    "encoding":"UTF-8",
    "@profile":"Full",
    "@version":"3.3",
    "@xsd:noNamespaceSchemaLocation":"http://www.web3d.org/specifications/x3d-3.3.xsd",
    "JSON schema":"https://www.web3d.org/specifications/x3d-3.3-JSONSchema.json",
    "head": {
        "meta": [
          {
            "@name":"comment",
            "@content":"World of Titania"
          },
          {
            "@name":"created",
            "@content":"Thu, 23 Apr 2015 06:07:01 GMT"
          },
          {
            "@name":"creator",
            "@content":"Holger Seelig"
          },
          {
            "@name":"generator",
            "@content":"Titania V0.7.8, http://titania.create3000.de"
          },
          {
            "@name":"modified",
            "@content":"Thu, 23 Apr 2015 06:07:01 GMT"
          },
          {
            "@name":"translated",
            "@content":"05 September 2021"
          },
          {
            "@name":"generator",
            "@content":"X3dToJson.xslt, https://www.web3d.org/x3d/stylesheets/X3dToJson.html"
          },
          {
            "@name":"reference",
            "@content":"X3D JSON encoding: https://www.web3d.org/wiki/index.php/X3D_JSON_Encoding"
          }
        ]
    },
    "Scene": {
        "-children":[
          { "ProtoDeclare":
            {
              "@name":"DigitalClock",
              "ProtoInterface": {
                  "field": [
                    {
                      "@name":"time",
                      "@accessType":"inputOutput",
                      "@type":"SFTime"
                    },
                    {
                      "@name":"children",
                      "@accessType":"initializeOnly",
                      "@type":"MFNode",
                      "-children":[
                        { "Switch":
                          {
                            "@DEF":"_1",
                            "@whichChoice":-1
                          }
                        },
                        { "Switch":
                          {
                            "@DEF":"_2",
                            "@whichChoice":-1
                          }
                        }
                      ]
                    },
                    {
                      "@name":"fraction",
                      "@accessType":"initializeOnly",
                      "@type":"MFNode",
                      "-children":[
                        { "Switch":
                          {
                            "@DEF":"_3",
                            "@whichChoice":-1
                          }
                        },
                        { "Switch":
                          {
                            "@DEF":"_4",
                            "@whichChoice":-1
                          }
                        }
                      ]
                    }
                  ]
              },
              "ProtoBody": {
                  "-children":[
                    { "ProtoDeclare":
                      {
                        "@name":"Data",
                        "ProtoInterface": {
                            "field": [
                              {
                                "@name":"time",
                                "@accessType":"inputOutput",
                                "@type":"SFTime"
                              }
                            ]
                        },
                        "ProtoBody": {
                            "-children":[
                              { "Group":
                                {
                                }
                              }
                            ]
                        }
                      }
                    },
                    { "Script":
                      {
                        "@DEF":"_digitalClock",
                        "@directOutput":true,
                        "field": [
                          {
                            "@name":"set_time",
                            "@accessType":"inputOnly",
                            "@type":"SFTime"
                          },
                          {
                            "@name":"sec",
                            "@accessType":"initializeOnly",
                            "@type":"SFInt32",
                            "@value":-1
                          },
                          {
                            "@name":"min",
                            "@accessType":"initializeOnly",
                            "@type":"SFInt32",
                            "@value":-1
                          },
                          {
                            "@name":"hour",
                            "@accessType":"initializeOnly",
                            "@type":"SFInt32",
                            "@value":-1
                          },
                          {
                            "@name":"l",
                            "@accessType":"initializeOnly",
                            "@type":"SFInt32"
                          },
                          {
                            "@name":"children",
                            "@accessType":"initializeOnly",
                            "@type":"MFNode"
                          },
                          {
                            "@name":"fraction",
                            "@accessType":"initializeOnly",
                            "@type":"MFNode"
                          },
                          {
                            "@name":"data",
                            "@accessType":"initializeOnly",
                            "@type":"SFNode",
                            "-children":[
                              { "ProtoInstance":
                                {
                                  "@name":"Data",
                                  "@DEF":"_5",
                                  "IS": {
                                      "connect": [
                                        {
                                          "@nodeField":"time",
                                          "@protoField":"time"
                                        }
                                      ]
                                  }
                                }
                              }
                            ]
                          }
                        ],
                        "IS": {
                            "connect": [
                              {
                                "@nodeField":"children",
                                "@protoField":"children"
                              },
                              {
                                "@nodeField":"fraction",
                                "@protoField":"fraction"
                              }
                            ]
                        },
                        "#sourceText":[
"",
"vrmlscript:",
"function  set_time(value, time)",
"{",
"    t = Math.floor(value);",
"        f = (value - t);",
"   for (i = 0; i < fraction.length; i++) {",
"                f *= 10;",
"                whichChoice = Math.floor(f);",
"                fraction[i].whichChoice = whichChoice;",
"        f -= whichChoice;",
"    }",
"    if (l > 0) {",
"        if (t != sec && l) {",
"                sec = t;",
"                s = sec % 60; t =  sec / 60;",
"                e = s % 10;",
"                children[0].whichChoice = e;",
"                if (l > 1) {",
"                        z = s / 10;",
"                        children[1].whichChoice = z;",
"                        if (t != min && l > 2) {",
"                                min = t;",
"                                m = min % 60; t = min / 60;",
"                                e = m % 10;",
"                                children[2].whichChoice = e;",
"                                if (l > 2) {",
"                                        z = m / 10;",
"                                        children[3].whichChoice = z;",
"                                        if (t != hour && l > 4) {",
"                                                hour = t;",
"                                                h = hour % 24; t = hour / 24;",
"                                                e = h  % 10;",
"                                                children[4].whichChoice = e;",
"                                                if (l > 5) {",
"                                                        z = h  / 10;",
"                                                        children[5].whichChoice = z;",
"                                                }",
"                                        }",
"                                }",
"                        }",
"                }",
"        }",
"    }",
"}",
"function  initialize()",
"{",
"    set_time(data.time, 0);",
"        l = children.length;",
"}",
"",
""
]
                      }
                    },
                    { "ROUTE":
                      {
                        "@fromNode":"_5",
                        "@fromField":"time_changed",
                        "@toNode":"_digitalClock",
                        "@toField":"set_time"
                      }
                    }
                  ]
              }
            }
          }
        ]
    }
  }
}