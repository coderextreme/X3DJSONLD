#VRML V2.0 utf8


WorldInfo{
 info[
 "CosmoWorlds VlipArt (c)1997 guided penguin - pioneer@sgi.com"
 ]
}
PROTO X [
 exposedField  SFVec3f    T 0 0 0
 exposedField  SFVec3f    S 1 1 1
 exposedField  SFRotation R 0 1 0 0
 exposedField  SFRotation O 0 1 0 0
 exposedField  SFColor    C .01 .01 .01
 field         SFNode     G Sphere{}
]{
 Transform{
  translation IS T
  rotation    IS R
  scale       IS S
  scaleOrientation IS O
  children[
   Shape{
    appearance Appearance{
     material Material{
      diffuseColor IS C
      emissiveColor .1 .1 .1
      specularColor .8 .8 .8
      shininess .5
     }
    }
    geometry IS G
   }
  ]
 }
}
PROTO Y[
 exposedField  SFVec3f    T 0 0 0
 exposedField  SFRotation R 0 1 0 0
 exposedField  MFNode     H []
]{
 Transform{
  translation IS T
  rotation IS R
  children IS H
 }
}

DEF Nav0 NavigationInfo{type "NONE"}
DEF BGX3 Transform{
 children[
  DEF BG3 Background {
   skyColor[1 1 0, 0 0 1]
   skyAngle[1.7]
   groundColor[0 .8 0, .2 .3 .2]
   groundAngle[1.5]
  }
 ]
}
DEF Light0 DirectionalLight{direction -1 -1    -1 intensity .5}
DEF Light0 DirectionalLight{direction .5 -.01 -.5 intensity .5}

DEF Penguin Y{H[Y{T 0 1.1 0 H[
 DEF Rock Y{T 0 -.7 -.5 H[
 Y{T 0 .7 .5  H[
 DEF UpperBody Y{H[
  Y{T 0 2.6 1 H[
   DEF Hat Y{T 0 .52 -.12 R 1 0 0 -.2 H[
    X{S .2 .25 .3 G Cylinder{}} X{T 0 -.25 0 S .3 .05 .4}
   ]}
   DEF Cheek X{S .22 .18 .2 C .95 .8 .01}
   DEF Face Y{H[
    DEF Beak X{T 0 0 .4 R 1 0 0 1.57 S .2 .35 .18 C .95 .8 .01 G Cone{}}
    DEF RightEye X{T -.08 .2 .1 R 0 0 1 -.3 S .09 .11 .08 C 1 1 1}
    DEF LeftEye X{T .08 .2 .1 R 0 0 1 .3 S .09 .11 .08 C 1 1 1}
    DEF RightPup X{T -.06 .2 .15 S .05 .05 .05}
    DEF LeftPup X{T .06 .2 .15 S .05 .05 .05}
   ]}
  ]}
  DEF Neck X{T 0 1.8 .5 O 1 0 0 0.573 S 0.862 2 .715 G Cone{}}
  DEF Tie Y{H[
   X{T -.1 .6 1 R 0 0 1 -1.57 S .15 .2 .05 G Cone{}}
   X{T .1 .6 1 R 0 0 1 1.57 S .15 .2 .05 G Cone{}}
  ]}
 ]}
 Y{H[
  DEF Belly X{S .85 1.2 .7 R 1 0 0 .8 C 1 1 1}]}]}
 ]}
 Y{T 0 -1 -.2 H[
  DEF Feet Y{H[
   DEF RightFoot Y{H[
    X{T -.5 0 .4 R 0 1 0 -.5 C .9 .5 .1 S .35 .1 1}
   ]}
   DEF LeftFoot Y{H[
    X{T .5 0 .4 R 0 1 0 .4 C .9 .5 .1 S .35 .1 1}
   ]}
  ]}
 ]}
]}]}


DEF StepT TimeSensor{cycleInterval 1}
DEF Step0 OrientationInterpolator{
 key[0, .25, .75, 1]
 keyValue[0 1 0 0, 0 1 0 .8, 0 1 0 -.8, 0 1 0 0]
}
DEF Step1 OrientationInterpolator{
 key[.25, .75, .8]
 keyValue[1 0 0 0, 1 0 0 -.5, 1 0 0 0]
}
DEF Step2 OrientationInterpolator{
 key[0, .25, .3]
 keyValue[1 0 0 0, 1 0 0 -.5, 1 0 0 0]
}
DEF Step3 PositionInterpolator{
 key[0, 1]
 keyValue[0 0 0, 0 0 2]
}
DEF Step4 OrientationInterpolator{
 key[0, .25, .75, 1]
 keyValue[0 0 1 0, 0 0 1 -.1, 0 0 1 .1, 0 0 1 0]
}
DEF StepS Script{
 eventIn  SFBool  XXX
 field    SFNode  step3 USE Step3
 field    SFNode  penguin USE Penguin
 field    SFNode  stept USE StepT
 field    SFVec3f tBuff 0 0 0
 directOutput TRUE
 url "vrmlscript:
  function XXX(v,ts){
   if(v==TRUE){
    x = penguin.T[0];
    z = penguin.T[2];
    theta = penguin.R[3];
    tBuff[0] = x+2*Math.sin(theta);
    tBuff[2] = z+2*Math.cos(theta);
    step3.keyValue[0] = penguin.T;
    step3.keyValue[1] = tBuff;
    stept.startTime = ts;
   }
  }
 "
}

ROUTE StepT.fraction_changed TO Step0.set_fraction
ROUTE StepT.fraction_changed TO Step1.set_fraction
ROUTE StepT.fraction_changed TO Step2.set_fraction
ROUTE StepT.fraction_changed TO Step3.set_fraction
ROUTE StepT.fraction_changed TO Step4.set_fraction
ROUTE Step0.value_changed TO Feet.set_R
ROUTE Step1.value_changed TO LeftFoot.set_R
ROUTE Step2.value_changed TO RightFoot.set_R
ROUTE Step3.value_changed TO Penguin.set_T
ROUTE Step4.value_changed TO Rock.set_R


DEF RightT TimeSensor{cycleInterval 1}
DEF Right0 OrientationInterpolator{
 key[0, .25, .75, 1]
 keyValue[0 1 0 0, 0 1 0 .8, 0 1 0 -.8, 0 1 0 0]
}
DEF Right1 OrientationInterpolator{
 key[.25, .75, .8]
 keyValue[1 0 0 0, 1 0 0 -.5, 1 0 0 0]
}
DEF Right2 OrientationInterpolator{
 key[0, .25, .3]
 keyValue[1 0 0 0, 1 0 0 -.5, 1 0 0 0]
}
DEF Right3 OrientationInterpolator{
 key[0, 1]
 keyValue[0 1 0 0, 0 1 0 1.57079]
}
DEF Right4 OrientationInterpolator{
 key[0, .25, .75, 1]
 keyValue[0 0 1 0, 0 0 1 -.2, 0 0 1 .1, 0 0 1 0]
}
DEF RightS Script{
 eventIn  SFBool  XXX
 field    SFNode  right3 USE Right3
 field    SFNode  penguin USE Penguin
 field    SFNode  rightt USE RightT
 field    SFRotation rBuff 0 1 0 0
 directOutput TRUE
 url "vrmlscript:
  function XXX(v,ts){
   if(v==TRUE){
    rBuff[3] = penguin.R[3]-Math.PI/4;
    right3.keyValue[0] = penguin.R;
    right3.keyValue[1] = rBuff;
    rightt.startTime = ts;
   }
  }
 "
}
ROUTE RightT.fraction_changed TO Right0.set_fraction
ROUTE RightT.fraction_changed TO Right1.set_fraction
ROUTE RightT.fraction_changed TO Right2.set_fraction
ROUTE RightT.fraction_changed TO Right3.set_fraction
ROUTE RightT.fraction_changed TO Right4.set_fraction
#ROUTE Right0.value_changed TO Feet.set_R
ROUTE Right1.value_changed TO LeftFoot.set_R
ROUTE Right2.value_changed TO RightFoot.set_R
ROUTE Right3.value_changed TO Penguin.set_R
ROUTE Right4.value_changed TO Rock.set_R


DEF LeftT TimeSensor{cycleInterval 1}
DEF Left0 OrientationInterpolator{
 key[0, .25, .75, 1]
 keyValue[0 1 0 0, 0 1 0 .8, 0 1 0 -.8, 0 1 0 0]
}
DEF Left1 OrientationInterpolator{
 key[.25, .75, .8]
 keyValue[1 0 0 0, 1 0 0 -.5, 1 0 0 0]
}
DEF Left2 OrientationInterpolator{
 key[0, .25, .3]
 keyValue[1 0 0 0, 1 0 0 -.5, 1 0 0 0]
}
DEF Left3 OrientationInterpolator{
 key[0, 1]
 keyValue[0 1 0 0, 0 1 0 1.57079]
}
DEF Left4 OrientationInterpolator{
 key[0, .25, .75, 1]
 keyValue[0 0 1 0, 0 0 1 .2, 0 0 1 -.1, 0 0 1 0]
}
DEF LeftS Script{
 eventIn  SFBool  XXX
 field    SFNode  left3 USE Left3
 field    SFNode  penguin USE Penguin
 field    SFNode  leftt USE LeftT
 field    SFRotation rBuff 0 1 0 0
 directOutput TRUE
 url "vrmlscript:
  function XXX(v,ts){
   if(v==TRUE){
    rBuff[3] = penguin.R[3]+Math.PI/4;
    left3.keyValue[0] = penguin.R;
    left3.keyValue[1] = rBuff;
    leftt.startTime = ts;
   }
  }
 "
}
ROUTE LeftT.fraction_changed TO Left0.set_fraction
ROUTE LeftT.fraction_changed TO Left1.set_fraction
ROUTE LeftT.fraction_changed TO Left2.set_fraction
ROUTE LeftT.fraction_changed TO Left3.set_fraction
ROUTE LeftT.fraction_changed TO Left4.set_fraction
#ROUTE Left0.value_changed TO Feet.set_R
ROUTE Left1.value_changed TO RightFoot.set_R
ROUTE Left2.value_changed TO LeftFoot.set_R
ROUTE Left3.value_changed TO Penguin.set_R
ROUTE Left4.value_changed TO Rock.set_R


DEF LookT TimeSensor{cycleInterval .5}
DEF Look0 OrientationInterpolator{
 key[0, .25, .75, 1]
 keyValue[0 1 0 0, 0 1 0 -.5, 0 1 0 .5, 0 1 0 0]
}
DEF LookS Script{
 eventIn SFBool XXX
 field   SFNode lookt USE LookT
 directOutput TRUE
 url "vrmlscript:
  function XXX(v,ts){
   if(v==TRUE){
    lookt.set_startTime = ts;
   }
  }
 "
}
ROUTE LookT.fraction_changed TO Look0.set_fraction
ROUTE Look0.value_changed TO Face.set_R

DEF PeckT TimeSensor{cycleInterval 1.5}
DEF Peck0 OrientationInterpolator{
 key[0, .2, .8, 1]
 keyValue[1 0 0 0, 1 0 0 .5, 1 0 0 .5, 1 0 0 0]
}
DEF Peck1 OrientationInterpolator{
 key[.2, .4, .5, .6 .8]
 keyValue[1 0 0 0, 1 0 0 .5, 1 0 0 .45, 1 0 0 .5, 1 0 0 0]
}
DEF PeckS Script{
 eventIn SFBool XXX
 field   SFNode peckt USE PeckT
 directOutput TRUE
 url "vrmlscript:
  function XXX(v,ts){
   if(v==TRUE){
    peckt.set_startTime = ts;
   }
  }
 "
}
ROUTE PeckT.fraction_changed TO Peck0.set_fraction
ROUTE PeckT.fraction_changed TO Peck1.set_fraction
ROUTE Peck0.value_changed TO Rock.set_R
ROUTE Peck1.value_changed TO UpperBody.set_R

DEF ViewTx TimeSensor{cycleInterval 9.887 loop TRUE}
DEF View1x OrientationInterpolator{
 key[0, .5, 1]
 keyValue[1 0 0 .05, 1 0 0 -.2, 1 0 0 .05]
}
DEF View2x PositionInterpolator{
 key[0, .5, 1]
 keyValue[0 1 10, 0 5 12, 0 1 10]
}
DEF View0 Y{H[
 DEF View0x Viewpoint{
  position 0 3 11
 }
 DEF View0xx Viewpoint{
  position 0 3 -11
  orientation 0 1 0 3.14159
 }
]}

ROUTE ViewTx.fraction_changed TO View1x.set_fraction
ROUTE ViewTx.fraction_changed TO View2x.set_fraction
ROUTE View1x.value_changed TO View0x.set_orientation
ROUTE View2x.value_changed TO View0x.set_position

DEF ViewT TimeSensor{cycleInterval 3 loop TRUE}
DEF View1 OrientationInterpolator{
 key[0, 1]
 keyValue[0 1 0 0, 0 1 0 0]
}
DEF View2 PositionInterpolator{
 key[0, 1]
 keyValue[0 0 0, 0 0 0]
}
ROUTE ViewT.fraction_changed TO View1.set_fraction
ROUTE ViewT.fraction_changed TO View2.set_fraction
ROUTE View1.value_changed TO View0.set_R
ROUTE View2.value_changed TO View0.set_T
DEF ViewS Script{
 eventIn  SFTime  XXX
 eventIn  SFInt32 YYY
 field    SFNode  p0 USE Penguin
 field    SFNode  view0 USE View0
 field    SFNode  view1 USE View1
 field    SFNode  view2 USE View2
 field    MFNode  viewX [USE View0x, USE View0xx ]
 field    SFRotation rBuff 0 1 0 0
 field    SFVec3f tBuff 0 6 0
 directOutput TRUE
 url "vrmlscript:
  function XXX(v){
   view1.keyValue[0] = view1.keyValue[1];
   view2.keyValue[0] = view2.keyValue[1];
   view1.keyValue[1] = p0.R;
   view2.keyValue[1] = p0.T;
  }
  function YYY(v){
   viewX[v].set_bind = true;
  }
 "
}
ROUTE ViewT.cycleTime TO ViewS.XXX

DEF MoveS Script{
 eventIn SFInt32 XXX
 field   MFNode sss[USE StepS, USE RightS, USE LookS, USE LeftS, USE PeckS ]
 field   MFNode ttt[USE StepT, USE RightT, USE LookT, USE LeftT, USE PeckT ]
 directOutput TRUE
 url "vrmlscript:
  function XXX(v){
   for(i=0;i<ttt.length;i++){
    if(ttt[i].isActive==TRUE){
     return;
    }
   }
   sss[v].XXX = true;
  }
 "
}

