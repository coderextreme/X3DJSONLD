<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE X3D PUBLIC "ISO//Web3D//DTD X3D 3.3//EN" "https://www.web3d.org/specifications/x3d-3.3.dtd">
<X3D xmlns:xsd="http://www.w3.org/2001/XMLSchema-instance" profile="Full" version="3.3" xsd:noNamespaceSchemaLocation="http://www.web3d.org/specifications/x3d-3.3.xsd" ><head><meta name="comment" content="World of Titania"></meta>
<meta name="created" content="Sat, 25 Apr 2015 12:38:22 GMT"></meta>
<meta name="creator" content="Holger Seelig"></meta>
<meta name="generator" content="Titania V0.7.8, http://titania.create3000.de"></meta>
<meta name="modified" content="Sat, 25 Apr 2015 12:38:22 GMT"></meta>
</head>
<Scene><ProtoDeclare name="Import"><ProtoInterface><field name="url" accessType="inputOutput" type="MFString" value="&quot;&quot;"></field>
<field name="startTime" accessType="inputOutput" type="SFTime"></field>
<field name="isActive" accessType="outputOnly" type="SFBool"></field>
<field name="exitTime" accessType="outputOnly" type="SFTime"></field>
<field name="parameter" accessType="inputOutput" type="MFNode"></field>
<field name="children" accessType="inputOutput" type="MFNode"></field>
</ProtoInterface>
<ProtoBody><ProtoDeclare name="Data"><ProtoInterface><field name="url" accessType="inputOutput" type="MFString" value="&quot;&quot;"></field>
<field name="startTime" accessType="inputOutput" type="SFTime"></field>
<field name="parameter" accessType="inputOutput" type="MFNode"></field>
<field name="children" accessType="inputOutput" type="MFNode"></field>
</ProtoInterface>
<ProtoBody><Group><IS><connect nodeField="children" protoField="children"></connect>
</IS>
</Group>
</ProtoBody>
</ProtoDeclare>
<ProtoInstance name="Data" DEF="Data"><IS><connect nodeField="url" protoField="url"></connect>
<connect nodeField="startTime" protoField="startTime"></connect>
<connect nodeField="parameter" protoField="parameter"></connect>
<connect nodeField="children" protoField="children"></connect>
</IS>
</ProtoInstance>
<Script DEF="_import" directOutput="true" mustEvaluate="true"><field name="isActive" accessType="outputOnly" type="SFBool"></field>
<field name="exitTime" accessType="outputOnly" type="SFTime"></field>
<field name="set_startTime" accessType="inputOnly" type="SFTime"></field>
<field name="set_children" accessType="inputOnly" type="MFNode"></field>
<field name="set_url" accessType="inputOnly" type="MFString"></field>
<field name="self" accessType="initializeOnly" type="SFNode"><Script USE="_import"></Script>
</field>
<field name="data" accessType="initializeOnly" type="SFNode"><ProtoInstance USE="Data"></ProtoInstance>
</field>
<IS><connect nodeField="isActive" protoField="isActive"></connect>
<connect nodeField="exitTime" protoField="exitTime"></connect>
</IS>
<![CDATA[vrmlscript:
function query() {
	q = '';
	for (i = 0; i < data.parameter.length; i++) {
		q += ';' + data.parameter[i].name;
		if (data.parameter[i].value.length) {
			q += '=' + data.parameter[i].value[0];
		}
	}
	if (q.length > 1) return q.substring(1, q.length);
	return '';
}
function url() {
	q = query();
	u = new MFString();
	u.length = data.url.length;

	if (q == '') return data.url;
	for (i = 0; i < u.length; i++) {
		u[i] = data.url[i] + (data.url[i].indexOf('?') > -1 ? (data.url[i].indexOf('?') == data.url[i].length-1  ? '' : (q.length ? (data.url[i].indexOf(';') == data.url[i].length-1  ? '' : ';') : '') ) : '?') + q;
	}
	return u;
}
function loadUrl() {
	if(data.url.length && !isActive) {
		isActive = TRUE;
		Browser.createVrmlFromURL(url(), self, "set_children");
	}
}
function set_url(value, time) { loadUrl(); }
function set_startTime(value, time) { loadUrl(); }
function set_children(value, time) {
	if(isActive){
		if (value.toString() == "Group { }") {
			data.children = value[0].children;
		} else {
			data.children = value;
		}
		isActive = FALSE;
		exitTime = time;
	}
}
function initialize() { if (data.startTime) loadUrl(); }]]></Script>
<ROUTE fromNode="Data" fromField="url_changed" toNode="_import" toField="set_url"></ROUTE>
<ROUTE fromNode="Data" fromField="startTime_changed" toNode="_import" toField="set_startTime"></ROUTE>
</ProtoBody>
</ProtoDeclare>
</Scene>
</X3D>