<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE X3D PUBLIC "ISO//Web3D//DTD X3D 3.3//EN" "https://www.web3d.org/specifications/x3d-3.3.dtd">
<X3D xmlns:xsd="http://www.w3.org/2001/XMLSchema-instance" profile="Full" version="3.3" xsd:noNamespaceSchemaLocation="http://www.web3d.org/specifications/x3d-3.3.xsd" ><head><meta name="comment" content="World of Titania"></meta>
<meta name="created" content="Fri, 11 Sep 2015 17:20:16 GMT"></meta>
<meta name="creator" content="Holger Seelig"></meta>
<meta name="generator" content="Titania V1.2.2, http://titania.create3000.de"></meta>
<meta name="modified" content="Wed, 06 Jan 2016 23:48:58 GMT"></meta>
<meta name="title" content="Text"></meta>
</head>
<Scene><ProtoDeclare name="LineRectangle2D"><ProtoBody><IndexedLineSet coordIndex="0 1 2 3 0 -1"><Coordinate containerField="coord" point="-0.5 -0.5 0 0.5 -0.5 0 0.5 0.5 0 -0.5 0.5 0"></Coordinate>
</IndexedLineSet>
</ProtoBody>
</ProtoDeclare>
<ProtoDeclare name="BBox2"><ProtoInterface><field name="translation" accessType="inputOutput" type="SFVec3f"></field>
<field name="scale" accessType="inputOutput" type="SFVec3f" value="1 1 1"></field>
<field name="color" accessType="inputOutput" type="SFColor" value="1 1 1"></field>
</ProtoInterface>
<ProtoBody><Transform><IS><connect nodeField="translation" protoField="translation"></connect>
<connect nodeField="scale" protoField="scale"></connect>
</IS>
<Transform translation="0.5 -0.5 0"><Shape><Appearance><Material><IS><connect nodeField="emissiveColor" protoField="color"></connect>
</IS>
</Material>
</Appearance>
<ProtoInstance containerField="geometry" name="LineRectangle2D"></ProtoInstance>
</Shape>
</Transform>
</Transform>
</ProtoBody>
</ProtoDeclare>
<WorldInfo title="Vertical Text"><MetadataSet containerField="metadata" name="Titania" DEF="Titania" reference="http://titania.create3000.de"><MetadataSet name="NavigationInfo" DEF="NavigationInfo" reference="http://titania.create3000.de" containerField="value"><MetadataString name="type" DEF="type" reference="http://titania.create3000.de" value="&quot;EXAMINE&quot;" containerField="value"></MetadataString>
</MetadataSet>
<MetadataSet name="Viewpoint" DEF="Viewpoint" reference="http://titania.create3000.de"><MetadataDouble name="position" DEF="position" reference="http://titania.create3000.de" value="-0.0552061013877392 6.52955007553101 27.0410003662109" containerField="value"></MetadataDouble>
<MetadataDouble name="orientation" DEF="orientation" reference="http://titania.create3000.de" value="0 0 1 0"></MetadataDouble>
<MetadataDouble name="centerOfRotation" DEF="centerOfRotation" reference="http://titania.create3000.de" value="-0.0552061013877392 6.52955007553101 0"></MetadataDouble>
</MetadataSet>
</MetadataSet>
</WorldInfo>
<Background skyColor="0.2 0.2 0.2"></Background>
<Viewpoint description="Viewpoint" position="-0.0552061 6.52955 27.041" centerOfRotation="-0.0552061 6.52955 0"></Viewpoint>
<Transform DEF="RedBox" translation="-0.5 0.5 0"><Shape><Appearance><Material diffuseColor="1 0 0" transparency="0.5"></Material>
</Appearance>
<Box containerField="geometry" size="1 1 1"></Box>
</Shape>
</Transform>
<Transform DEF="GreenBox" translation="-0.5 -0.5 0"><Shape><Appearance><Material diffuseColor="0 1 0" transparency="0.5"></Material>
</Appearance>
<Box containerField="geometry" size="1 1 1"></Box>
</Shape>
</Transform>
<Transform DEF="BlueBox" translation="-0.5 -1.5 0"><Shape><Appearance><Material diffuseColor="0 0 1" transparency="0.5"></Material>
</Appearance>
<Box containerField="geometry" size="1 1 1"></Box>
</Shape>
</Transform>
<Transform DEF="YellowBox" translation="6 1.5 0" scale="12 1 1"><Shape><Appearance><Material diffuseColor="1 1 0" transparency="0.49"></Material>
</Appearance>
<Box containerField="geometry" size="1 1 1"></Box>
</Shape>
</Transform>
<Transform DEF="LineBounds" translation="0 16.5214 0"><ProtoInstance name="BBox2"><fieldValue name="scale" value="0.862813 16.5559 1"></fieldValue>
<fieldValue name="color" value="1 0 1"></fieldValue>
</ProtoInstance>
<ProtoInstance name="BBox2"><fieldValue name="translation" value="0.862813 -0.799453 0"></fieldValue>
<fieldValue name="scale" value="1.25 15.7564 1"></fieldValue>
<fieldValue name="color" value="0 1 0"></fieldValue>
</ProtoInstance>
<ProtoInstance name="BBox2"><fieldValue name="translation" value="2.11281 -0.00585938 0"></fieldValue>
<fieldValue name="scale" value="1.25 16.55 1"></fieldValue>
<fieldValue name="color" value="0 0 1"></fieldValue>
</ProtoInstance>
<ProtoInstance name="BBox2"><fieldValue name="translation" value="3.36281 -10.5263 0"></fieldValue>
<fieldValue name="scale" value="1.25 6.02953 1"></fieldValue>
<fieldValue name="color" value="1 1 0"></fieldValue>
</ProtoInstance>
</Transform>
<Transform DEF="TextBounds" translation="0 16.5214 0" scale="4.21559 16.5559 1"><ProtoInstance name="BBox2"></ProtoInstance>
</Transform>
<Script DEF="Bounds"><field name="set_lineBounds" accessType="inputOnly" type="MFVec2f"></field>
<field name="set_textBounds" accessType="inputOnly" type="SFVec2f"></field>
<field name="translation_changed" accessType="outputOnly" type="SFVec3f"></field>
<field name="scale_changed" accessType="outputOnly" type="SFVec3f"></field>
<field name="lineBounds" accessType="initializeOnly" type="SFNode"><Transform USE="LineBounds"></Transform>
</field>
<field name="color" accessType="initializeOnly" type="MFColor" value="1 0 1 0 1 0 0 0 1 1 1 0 0 1 1 1 0 0"></field>
<field name="text" accessType="initializeOnly" type="SFNode"><Text DEF="Geo" string="&quot;, &quot; &quot;&#19978;&#28023;&#24066;&#31532;&#20108;&#20013;&#32423;&#20154;&#27665;&#27861;&#38498;2&#26376;18&#26085;&#23545;&#8220;&#22797;&#26086;&#25237;&#27602;&#26696;&#8221;&#20381;&#27861;&#20844;&#24320;, &quot; &quot;&#19968;&#23457;&#23459;&#21028;&#65292;&#34987;&#21578;&#20154;&#26519;&#26862;&#28009;&#29359;&#25925;&#24847;&#26432;&#20154;&#32618;&#34987;&#21028;&#27515;&#21009;&#65292;&#21093;&#22842;&#25919;&#27835;, &quot; &quot;&#26435;&#21033;&#32456;&#36523;&#12290;2013&#24180;4&#26376;&#65292;&#22797;&#26086;&#22823;&#23398;&#30740;&#31350;&#29983;&#40644;&#27915;&#22240;&#33293;&#21451;&#25237;&#27602;&#27515;&#20129;&#65292;&#24180;&#20165;28&#23681;&#12290;!&quot;" length="17.1814 15.7539 16.5724 5.99508" maxExtent="16.55"><FontStyle DEF="_1" family="&quot;, &quot; &quot;Arial Unicode MSARIALUNI.TTF&quot;" size="0.5" spacing="2.5" horizontal="false" justify="&quot;, &quot; &quot;ENDBEGIN&quot;"></FontStyle>
</Text>
</field>
<![CDATA[javascript:

var
	BEGIN  = 0,
	FIRST  = 1,
	MIDDLE = 2,
	END    = 3;

function get_normalizedMajorAlignment (majorAlignment, normal)
{
	if (majorAlignment == 'END')
		return normal ? END : BEGIN;

	if (majorAlignment == 'MIDDLE')
		return MIDDLE;

	return normal ? BEGIN : END;

}

function get_majorAlignment (index)
{
	if (text .fontStyle .horizontal)
	{
		var major = get_normalizedMajorAlignment (text .fontStyle .justify [0], text .fontStyle .leftToRight);
	
		if (major == END)
			return text .textBounds .x - text .lineBounds [index] .x;

		if (major == MIDDLE)
			return (text .textBounds .x - text .lineBounds [index] .x) / 2;

		return 0;
	}

	var major = get_normalizedMajorAlignment (text .fontStyle .justify [0], text .fontStyle .topToBottom);
	
	if (major == END)
		return -text .textBounds .y + text .lineBounds [index] .y;

	if (major == MIDDLE)
		return (-text .textBounds .y + text .lineBounds [index] .y) / 2;

	return 0;
}

function set_lineBounds (value, time)
{
	var transforms = new MFNode ();
	
	var
		x = 0,
		y = 0;
		
	for (var i = 0; i < value .length; ++ i)
	{
		var transform = Browser .currentScene .createProto ('BBox2');
		
		if (text .fontStyle .horizontal)
		{
			transform .translation = new SFVec3f (get_majorAlignment (i),
			                                      text .fontStyle .topToBottom ? y : y - text .textBounds .y,
			                                      0);
			y += text .fontStyle .topToBottom ? -value [i] .y : value [i] .y;

			transform .scale = new SFVec3f (value [i] .x,
			                                text .fontStyle .topToBottom ? value [i] .y : -value [i] .y,
			                                1);
		}
		else
		{
			transform .translation = new SFVec3f (text .fontStyle .leftToRight ? x : x + text .textBounds .x,
			                                      get_majorAlignment (i),
			                                      0);
		
			x += text .fontStyle .leftToRight ? value [i] .x : -value [i] .x;

			transform .scale = new SFVec3f (text .fontStyle .leftToRight ? value [i] .x : -value [i] .x,
			                                value [i] .y,
			                                1);
		}

		transform .color = color [i % color .length];

		transforms [transforms .length] = transform;
	}

	lineBounds .children = transforms;
}

function set_textBounds (value, time)
{
	scale_changed = new SFVec3f (value .x, value .y, 1);
}]]></Script>
<Transform DEF="Text"><Shape DEF="Shape"><Appearance><Material diffuseColor="1 0 0" specularColor="0 1 0"></Material>
</Appearance>
<Text containerField="geometry" USE="Geo"></Text>
</Shape>
</Transform>
<ROUTE fromNode="Bounds" fromField="scale_changed" toNode="TextBounds" toField="set_scale"></ROUTE>
<ROUTE fromNode="Geo" fromField="origin" toNode="LineBounds" toField="set_translation"></ROUTE>
<ROUTE fromNode="Geo" fromField="origin" toNode="TextBounds" toField="set_translation"></ROUTE>
<ROUTE fromNode="Geo" fromField="textBounds" toNode="Bounds" toField="set_textBounds"></ROUTE>
<ROUTE fromNode="Geo" fromField="lineBounds" toNode="Bounds" toField="set_lineBounds"></ROUTE>
</Scene>
</X3D>