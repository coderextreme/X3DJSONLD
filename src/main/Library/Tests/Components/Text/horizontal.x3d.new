<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE X3D PUBLIC "ISO//Web3D//DTD X3D 3.3//EN" "https://www.web3d.org/specifications/x3d-3.3.dtd">
<X3D xmlns:xsd="http://www.w3.org/2001/XMLSchema-instance" profile="Full" version="3.3" xsd:noNamespaceSchemaLocation="http://www.web3d.org/specifications/x3d-3.3.xsd" ><head><meta name="comment" content="World of Titania"></meta>
<meta name="created" content="Fri, 11 Sep 2015 17:20:16 GMT"></meta>
<meta name="creator" content="Holger Seelig"></meta>
<meta name="generator" content="Titania V1.4.9, http://titania.create3000.de"></meta>
<meta name="identifier" content="file:///home/holger/Projekte/Cobweb/excite/tests/Components/Text/horizontal.x3d"></meta>
<meta name="modified" content="Tue, 30 Aug 2016 04:07:18 GMT"></meta>
<meta name="title" content="Text"></meta>
</head>
<Scene><ProtoDeclare name="LineRectangle2D"><ProtoBody><IndexedLineSet coordIndex="0 1 2 3 0 -1"><Coordinate containerField="coord" point="-0.5 -0.5 0 0.5 -0.5 0 0.5 0.5 0 -0.5 0.5 0"></Coordinate>
</IndexedLineSet>
</ProtoBody>
</ProtoDeclare>
<ProtoDeclare name="BBox2"><ProtoInterface><field name="translation" accessType="inputOutput" type="SFVec3f"></field>
<field name="scale" accessType="inputOutput" type="SFVec3f" value="1 1 1"></field>
<field name="color" accessType="inputOutput" type="SFColor" value="1 1 1"></field>
</ProtoInterface>
<ProtoBody><Transform><IS><connect nodeField="translation" protoField="translation"></connect>
<connect nodeField="scale" protoField="scale"></connect>
</IS>
<Transform translation="0.5 -0.5 0"><Shape><Appearance><Material><IS><connect nodeField="emissiveColor" protoField="color"></connect>
</IS>
</Material>
</Appearance>
<ProtoInstance containerField="geometry" name="LineRectangle2D"></ProtoInstance>
</Shape>
</Transform>
</Transform>
</ProtoBody>
</ProtoDeclare>
<WorldInfo title="Horizontal Text"><MetadataSet containerField="metadata" name="Titania" DEF="Titania" reference="http://titania.create3000.de"><MetadataSet name="NavigationInfo" DEF="NavigationInfo" reference="http://titania.create3000.de" containerField="value"><MetadataString name="type" DEF="type" reference="http://titania.create3000.de" value="&quot;EXAMINE&quot;" containerField="value"></MetadataString>
</MetadataSet>
<MetadataSet name="Viewpoint" DEF="Viewpoint" reference="http://titania.create3000.de"><MetadataDouble name="position" DEF="position" reference="http://titania.create3000.de" value="0.228690132498741 -0.0604688674211502 1.71641170978546" containerField="value"></MetadataDouble>
<MetadataDouble name="orientation" DEF="orientation" reference="http://titania.create3000.de" value="0.872291021747068 0.488929089099191 0.00753121584411764 0.0424616187810779"></MetadataDouble>
<MetadataDouble name="centerOfRotation" DEF="centerOfRotation" reference="http://titania.create3000.de" value="0.192951887845993 0.00326720159500837 -0.000781742099206895"></MetadataDouble>
</MetadataSet>
<MetadataSet name="Selection" DEF="Selection" reference="http://titania.create3000.de"><MetadataSet name="previous" DEF="previous" reference="http://titania.create3000.de" containerField="value"></MetadataSet>
</MetadataSet>
<MetadataSet name="AngleGrid" DEF="AngleGrid" reference="http://titania.create3000.de"><MetadataBoolean name="enabled" DEF="enabled" reference="http://titania.create3000.de" value="false" containerField="value"></MetadataBoolean>
</MetadataSet>
<MetadataSet name="Grid" DEF="Grid" reference="http://titania.create3000.de"><MetadataBoolean name="enabled" DEF="enabled_1" reference="http://titania.create3000.de" value="true" containerField="value"></MetadataBoolean>
<MetadataFloat name="rotation" DEF="rotation" reference="http://titania.create3000.de" value="1 0 0 1.5708"></MetadataFloat>
</MetadataSet>
</MetadataSet>
</WorldInfo>
<Background skyColor="0.2 0.2 0.2"></Background>
<Viewpoint description="Viewpoint" position="0.365518 -0.30449 8.30129" orientation="0.872291021747068 0.488929089099191 0.00753121584411764 0.0424616187810779" centerOfRotation="0.192952 0.0032672 -0.000781742"></Viewpoint>
<Transform DEF="Text"><Shape><Appearance><Material diffuseColor="1 0 0" emissiveColor="1 1 1"></Material>
<ImageTexture containerField="texture" url="&quot;, &quot; &quot;http://cdn.rawgit.com/create3000/Library/master/Textures/Miscellaneous/lena.jpg, &quot; &quot;https://cdn.rawgit.com/create3000/Library/master/Textures/Miscellaneous/lena.jpg, &quot; &quot;http://rawgit.com/create3000/Library/master/Textures/Miscellaneous/lena.jpghttps://rawgit.com/create3000/Library/master/Textures/Miscellaneous/lena.jpg&quot;"></ImageTexture>
</Appearance>
<Text containerField="geometry" DEF="Text_1" string="&quot;, &quot; &quot;Bgre, &quot; &quot;good old, &quot; &quot;Textstoday!&quot;" length="1.66694 2.95728 1.82503 2.17687" maxExtent="4.477"><FontStyle family="&quot;, &quot; &quot;UbuntuSANS&quot;" style="BOLDITALIC" justify="&quot;, &quot; &quot;MIDDLEFIRST&quot;"></FontStyle>
</Text>
</Shape>
</Transform>
<Transform DEF="RedBox" translation="-0.5 0.5 0"><Shape><Appearance><Material diffuseColor="1 0 0" transparency="0.854167"></Material>
</Appearance>
<Box containerField="geometry" size="1 1 1"></Box>
</Shape>
</Transform>
<Transform DEF="GreenBox" translation="-0.5 -0.5 0"><Shape><Appearance><Material diffuseColor="0 1 0" transparency="0.916667"></Material>
</Appearance>
<Box containerField="geometry" size="1 1 1"></Box>
</Shape>
</Transform>
<Transform DEF="BlueBox" translation="-0.5 -1.5 0"><Shape><Appearance><Material diffuseColor="0 0 1" transparency="0.5"></Material>
</Appearance>
<Box containerField="geometry" size="1 1 1"></Box>
</Shape>
</Transform>
<Transform DEF="YellowBox" translation="6 1.5 0" scale="12 1 1"><Shape><Appearance><Material diffuseColor="1 1 0" transparency="0.49"></Material>
</Appearance>
<Box containerField="geometry" size="1 1 1"></Box>
</Shape>
</Transform>
<Transform DEF="LineBounds" translation="-1.47864 0.700938 0"><ProtoInstance name="BBox2"><fieldValue name="translation" value="0.64517 0 0"></fieldValue>
<fieldValue name="scale" value="1.66694 0.889938 1"></fieldValue>
<fieldValue name="color" value="1 0 1"></fieldValue>
</ProtoInstance>
<ProtoInstance name="BBox2"><fieldValue name="translation" value="0 -0.889938 0"></fieldValue>
<fieldValue name="scale" value="2.95728 1 1"></fieldValue>
<fieldValue name="color" value="0 1 0"></fieldValue>
</ProtoInstance>
<ProtoInstance name="BBox2"><fieldValue name="translation" value="0.566125 -1.88994 0"></fieldValue>
<fieldValue name="scale" value="1.82503 1 1"></fieldValue>
<fieldValue name="color" value="0 0 1"></fieldValue>
</ProtoInstance>
<ProtoInstance name="BBox2"><fieldValue name="translation" value="0.390205 -2.88994 0"></fieldValue>
<fieldValue name="scale" value="2.17687 1 1"></fieldValue>
<fieldValue name="color" value="1 1 0"></fieldValue>
</ProtoInstance>
</Transform>
<Transform DEF="TextBounds" translation="-1.47864 0.700938 0" scale="2.95728 3.88594 1"><ProtoInstance name="BBox2"></ProtoInstance>
</Transform>
<Script DEF="Bounds"><field name="set_lineBounds" accessType="inputOnly" type="MFVec2f"></field>
<field name="set_textBounds" accessType="inputOnly" type="SFVec2f"></field>
<field name="translation_changed" accessType="outputOnly" type="SFVec3f"></field>
<field name="scale_changed" accessType="outputOnly" type="SFVec3f"></field>
<field name="lineBounds" accessType="initializeOnly" type="SFNode"><Transform USE="LineBounds"></Transform>
</field>
<field name="color" accessType="initializeOnly" type="MFColor" value="1 0 1 0 1 0 0 0 1 1 1 0 0 1 1 1 0 0"></field>
<field name="text" accessType="initializeOnly" type="SFNode"><Text USE="Text_1"></Text>
</field>
<![CDATA[javascript:

var
	BEGIN  = 0,
	FIRST  = 1,
	MIDDLE = 2,
	END    = 3;

function get_normalizedMajorAlignment (majorAlignment, normal)
{
	if (majorAlignment == 'END')
		return normal ? END : BEGIN;

	if (majorAlignment == 'MIDDLE')
		return MIDDLE;

	return normal ? BEGIN : END;

}

function get_majorAlignment (index)
{
	if (text .fontStyle .horizontal)
	{
		var major = get_normalizedMajorAlignment (text .fontStyle .justify [0], text .fontStyle .leftToRight);
	
		if (major == END)
			return text .textBounds .x - text .lineBounds [index] .x;

		if (major == MIDDLE)
			return (text .textBounds .x - text .lineBounds [index] .x) / 2;

		return 0;
	}

	var major = get_normalizedMajorAlignment (text .fontStyle .justify [0], text .fontStyle .topToBottom);
	
	if (major == END)
		return -text .textBounds .y + text .lineBounds [index] .y;

	if (major == MIDDLE)
		return (-text .textBounds .y + text .lineBounds [index] .y) / 2;

	return 0;
}

function set_lineBounds (value, time)
{
	var transforms = new MFNode ();
	
	var
		x = 0,
		y = 0;
		
	for (var i = 0; i < value .length; ++ i)
	{
		var transform = Browser .currentScene .createProto ('BBox2');
		
		if (text .fontStyle .horizontal)
		{
			transform .translation = new SFVec3f (get_majorAlignment (i),
			                                      text .fontStyle .topToBottom ? y : y - text .textBounds .y,
			                                      0);
			y += text .fontStyle .topToBottom ? -value [i] .y : value [i] .y;

			transform .scale = new SFVec3f (value [i] .x,
			                                text .fontStyle .topToBottom ? value [i] .y : -value [i] .y,
			                                1);
		}
		else
		{
			transform .translation = new SFVec3f (text .fontStyle .leftToRight ? x : x + text .textBounds .x,
			                                      get_majorAlignment (i),
			                                      0);
		
			x += text .fontStyle .leftToRight ? value [i] .x : -value [i] .x;

			transform .scale = new SFVec3f (text .fontStyle .leftToRight ? value [i] .x : -value [i] .x,
			                                value [i] .y,
			                                1);
		}

		transform .color = color [i % color .length];

		transforms [transforms .length] = transform;
	}

	lineBounds .children = transforms;
}

function set_textBounds (value, time)
{
	scale_changed = new SFVec3f (value .x, value .y, 1);
}]]></Script>
<ROUTE fromNode="Text_1" fromField="origin" toNode="LineBounds" toField="set_translation"></ROUTE>
<ROUTE fromNode="Text_1" fromField="lineBounds" toNode="Bounds" toField="set_lineBounds"></ROUTE>
<ROUTE fromNode="Text_1" fromField="textBounds" toNode="Bounds" toField="set_textBounds"></ROUTE>
<ROUTE fromNode="Text_1" fromField="origin" toNode="TextBounds" toField="set_translation"></ROUTE>
<ROUTE fromNode="Bounds" fromField="scale_changed" toNode="TextBounds" toField="set_scale"></ROUTE>
</Scene>
</X3D>