<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE X3D PUBLIC "ISO//Web3D//DTD X3D 3.3//EN" "https://www.web3d.org/specifications/x3d-3.3.dtd">
<X3D xmlns:xsd="http://www.w3.org/2001/XMLSchema-instance" profile="Full" version="3.3" xsd:noNamespaceSchemaLocation="http://www.web3d.org/specifications/x3d-3.3.xsd" ><head><meta name="comment" content="World of Titania"></meta>
<meta name="created" content="Sat, 26 Dec 2015 20:37:24 GMT"></meta>
<meta name="creator" content="Holger Seelig"></meta>
<meta name="generator" content="Titania V4.0.6a, http://titania.create3000.de"></meta>
<meta name="identifier" content="file:///home/holger/Projekte/Library/Tests/Components/Shaders/Fields.x3d"></meta>
<meta name="modified" content="Sun, 25 Feb 2018 11:11:42 GMT"></meta>
</head>
<Scene><WorldInfo><MetadataSet containerField="metadata" name="Titania" DEF="Titania" reference="http://titania.create3000.de"><MetadataSet name="NavigationInfo" DEF="NavigationInfo" reference="http://titania.create3000.de" containerField="value"><MetadataString name="type" DEF="type" reference="http://titania.create3000.de" value="&quot;EXAMINE&quot;" containerField="value"></MetadataString>
</MetadataSet>
<MetadataSet name="Viewpoint" DEF="Viewpoint" reference="http://titania.create3000.de"><MetadataDouble name="position" DEF="position" reference="http://titania.create3000.de" value="0 0 10" containerField="value"></MetadataDouble>
<MetadataDouble name="orientation" DEF="orientation" reference="http://titania.create3000.de" value="0 0 1 0"></MetadataDouble>
<MetadataDouble name="centerOfRotation" DEF="centerOfRotation" reference="http://titania.create3000.de" value="0 0 0"></MetadataDouble>
</MetadataSet>
<MetadataSet name="Selection" DEF="Selection" reference="http://titania.create3000.de"><MetadataBoolean name="selectGeometry" DEF="selectGeometry" reference="http://titania.create3000.de" value="false" containerField="value"></MetadataBoolean>
<MetadataSet name="nodes" DEF="nodes" reference="http://titania.create3000.de"><ShaderPart DEF="CobwebFragment" type="FRAGMENT" containerField="value"><![CDATA[data:text/plain,

precision mediump float;

uniform int       sfbool;
uniform vec3      sfcolor;
uniform vec4      sfcolorrgba;
uniform float     sfdouble;
uniform float     sffloat;
uniform int       sfimage [18];
uniform int       sfint32;
uniform mat3      sfmatrix3d;
uniform mat3      sfmatrix3f;
uniform mat4      sfmatrix4d;
uniform mat4      sfmatrix4f;
uniform sampler2D sfnode;
uniform mat3      sfrotation;
uniform float     sftime;
uniform vec2      sfvec2d;
uniform vec2      sfvec2f;
uniform vec3      sfvec3d;
uniform vec3      sfvec3f;
uniform vec4      sfvec4d;
uniform vec4      sfvec4f;
uniform int       mfbool [2];
uniform vec3      mfcolor [2];
uniform vec4      mfcolorrgba [2];
uniform float     mfdouble [2];
uniform float     mffloat [2];
uniform int       mfimage [36];
uniform int       mfint32 [2];
uniform mat3      mfmatrix3d [2];
uniform mat3      mfmatrix3f [2];
uniform mat4      mfmatrix4d [2];
uniform mat4      mfmatrix4f [2];
uniform sampler2D mfnode [2];
uniform mat3      mfrotation [2];
uniform vec4      mfstring [2];
uniform float     mftime [2];
uniform vec2      mfvec2d [2];
uniform vec2      mfvec2f [2];
uniform vec3      mfvec3d [2];
uniform vec3      mfvec3f [2];
uniform vec4      mfvec4d [2];
uniform vec4      mfvec4f [2];






varying vec4 texCoord;

void
main ()
{
	float x = 0.0;

	x += float (sfbool);
	x += sfcolor .r;
	x += sfcolorrgba .r;
	x += sfdouble;
	x += sffloat;
	x += float (sfimage [0]);
	x += float (sfint32);
	x += sfmatrix3d [0] .x;
	x += sfmatrix3f [0] .x;
	x += sfmatrix4d [0] .x;
	x += sfmatrix4f [0] .x;
	x += texture2D (sfnode, vec2 (0, 0)) .r;
	x += sfrotation [0] [0];
	x += sftime;
	x += sfvec2d [0];
	x += sfvec2f [0];
	x += sfvec3d [0];
	x += sfvec3f [0];
	x += sfvec4d [0];
	x += sfvec4f [0];
	x += float (mfbool [0]);
	x += mfcolor [0] .r;
	x += mfcolorrgba [0] .r;
	x += mfdouble [0];
	x += mffloat [0];
	x += float (mfimage [0]);
	x += float (mfint32 [0]);
	x += mfmatrix3d [0] [0] .x;
	x += mfmatrix3f [0] [0] .x;
	x += mfmatrix4d [0] [0] .x;
	x += mfmatrix4f [0] [0] .x;
	x += texture2D (mfnode [0], vec2 (0, 0)) .r;
	x += mfrotation [0] [0] [0];
	x += mftime [0];
	x += mfvec2d [0] [0];
	x += mfvec2f [0] [0];
	x += mfvec3d [0] [0];
	x += mfvec3f [0] [0];
	x += mfvec4d [0] [0];
	x += mfvec4f [0] [0];


	x *= 0.00001;



	vec3 color   = vec3 (texture2D (mfnode [0], texCoord .st));
	gl_FragColor = vec4 (color, 1.0 + x);
}]]></ShaderPart>
</MetadataSet>
</MetadataSet>
<MetadataSet name="Page" DEF="Page" reference="http://titania.create3000.de"><MetadataInteger name="activeView" DEF="activeView" reference="http://titania.create3000.de" value="1" containerField="value"></MetadataInteger>
<MetadataInteger name="multiView" DEF="multiView" reference="http://titania.create3000.de" value="0"></MetadataInteger>
</MetadataSet>
</MetadataSet>
</WorldInfo>
<Transform DEF="Sphere"><Shape><Appearance><ComposedShader DEF="CobwebShader" language="GLSL"><field name="sfbool" accessType="initializeOnly" type="SFBool"></field>
<field name="sfcolor" accessType="initializeOnly" type="SFColor"></field>
<field name="sfcolorrgba" accessType="initializeOnly" type="SFColorRGBA"></field>
<field name="sfdouble" accessType="initializeOnly" type="SFDouble"></field>
<field name="sffloat" accessType="initializeOnly" type="SFFloat"></field>
<field name="sfimage" accessType="initializeOnly" type="SFImage" value="3 5 2 65535 65535 65535 0 0 65535 65535 65535 65535 0 0 65535 65535 65535 65535"></field>
<field name="sfint32" accessType="initializeOnly" type="SFInt32"></field>
<field name="sfmatrix3d" accessType="initializeOnly" type="SFMatrix3d"></field>
<field name="sfmatrix3f" accessType="initializeOnly" type="SFMatrix3f"></field>
<field name="sfmatrix4d" accessType="initializeOnly" type="SFMatrix4d"></field>
<field name="sfmatrix4f" accessType="initializeOnly" type="SFMatrix4f"></field>
<field name="sfnode" accessType="initializeOnly" type="SFNode"><ImageTexture DEF="_1" url="&quot;../images/ubuntu.png&quot;"></ImageTexture>
</field>
<field name="sfrotation" accessType="initializeOnly" type="SFRotation"></field>
<field name="sfstring" accessType="initializeOnly" type="SFString"></field>
<field name="sftime" accessType="initializeOnly" type="SFTime"></field>
<field name="sfvec2d" accessType="initializeOnly" type="SFVec2d"></field>
<field name="sfvec2f" accessType="initializeOnly" type="SFVec2f"></field>
<field name="sfvec3d" accessType="initializeOnly" type="SFVec3d"></field>
<field name="sfvec3f" accessType="initializeOnly" type="SFVec3f"></field>
<field name="sfvec4d" accessType="initializeOnly" type="SFVec4d"></field>
<field name="sfvec4f" accessType="initializeOnly" type="SFVec4f"></field>
<field name="mfbool" accessType="initializeOnly" type="MFBool"></field>
<field name="mfcolor" accessType="initializeOnly" type="MFColor"></field>
<field name="mfcolorrgba" accessType="initializeOnly" type="MFColorRGBA"></field>
<field name="mfdouble" accessType="initializeOnly" type="MFDouble"></field>
<field name="mffloat" accessType="initializeOnly" type="MFFloat"></field>
<field name="mfimage" accessType="initializeOnly" type="MFImage" value="3 5 2 65535 65535 65535 0 0 65535 65535 65535 65535 0 0 65535 65535 65535 65535"></field>
<field name="mfint32" accessType="initializeOnly" type="MFInt32"></field>
<field name="mfmatrix3d" accessType="initializeOnly" type="MFMatrix3d"></field>
<field name="mfmatrix3f" accessType="initializeOnly" type="MFMatrix3f"></field>
<field name="mfmatrix4d" accessType="initializeOnly" type="MFMatrix4d"></field>
<field name="mfmatrix4f" accessType="initializeOnly" type="MFMatrix4f"></field>
<field name="mfnode" accessType="initializeOnly" type="MFNode"><ImageTexture USE="_1"></ImageTexture>
</field>
<field name="mfrotation" accessType="initializeOnly" type="MFRotation"></field>
<field name="mfstring" accessType="initializeOnly" type="MFString"></field>
<field name="mftime" accessType="initializeOnly" type="MFDouble"></field>
<field name="mfvec2d" accessType="initializeOnly" type="MFVec2d"></field>
<field name="mfvec2f" accessType="initializeOnly" type="MFVec2f"></field>
<field name="mfvec3d" accessType="initializeOnly" type="MFVec3d"></field>
<field name="mfvec3f" accessType="initializeOnly" type="MFVec3f"></field>
<field name="mfvec4d" accessType="initializeOnly" type="MFVec4d"></field>
<field name="mfvec4f" accessType="initializeOnly" type="MFVec4f"></field>
<ShaderPart DEF="CobweVertex" type="VERTEX"><![CDATA[data:text/plain,

precision mediump float;

uniform mat4 x3d_ProjectionMatrix;
uniform mat4 x3d_ModelViewMatrix;

attribute vec4 x3d_TexCoord;
attribute vec4 x3d_Vertex;

varying vec4 texCoord;

void
main ()
{
	gl_Position = x3d_ProjectionMatrix * x3d_ModelViewMatrix * x3d_Vertex;

	texCoord = x3d_TexCoord;
}]]></ShaderPart>
<ShaderPart USE="CobwebFragment"></ShaderPart>
</ComposedShader>
</Appearance>
<Sphere containerField="geometry"></Sphere>
</Shape>
</Transform>
</Scene>
</X3D>