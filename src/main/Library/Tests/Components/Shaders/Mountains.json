{ "X3D": {
    "encoding":"UTF-8",
    "@profile":"Full",
    "@version":"3.3",
    "@xsd:noNamespaceSchemaLocation":"http://www.web3d.org/specifications/x3d-3.3.xsd",
    "JSON schema":"https://www.web3d.org/specifications/x3d-3.3-JSONSchema.json",
    "head": {
        "meta": [
          {
            "@name":"comment",
            "@content":"World of Titania"
          },
          {
            "@name":"created",
            "@content":"Tue, 11 Apr 2017 00:24:19 GMT"
          },
          {
            "@name":"creator",
            "@content":"Holger Seelig"
          },
          {
            "@name":"generator",
            "@content":"Titania V3.0.2, http://titania.create3000.de"
          },
          {
            "@name":"identifier",
            "@content":"file:///home/holger/Projekte/Cobweb/excite/tests/Components/Shaders/Mountains.x3d"
          },
          {
            "@name":"modified",
            "@content":"Sun, 16 Apr 2017 03:38:37 GMT"
          },
          {
            "@name":"outputStyle",
            "@content":"Nicest"
          },
          {
            "@name":"translated",
            "@content":"06 September 2021"
          },
          {
            "@name":"generator",
            "@content":"X3dToJson.xslt, https://www.web3d.org/x3d/stylesheets/X3dToJson.html"
          },
          {
            "@name":"reference",
            "@content":"X3D JSON encoding: https://www.web3d.org/wiki/index.php/X3D_JSON_Encoding"
          }
        ]
    },
    "Scene": {
        "-children":[
          { "ExternProtoDeclare":
            {
              "@name":"SFNode",
              "@url":[", ","https://cdn.rawgit.com/create3000/Library/master/Prototypes/1/1.0/Fields/SFNode.x3dv, ","http://cdn.rawgit.com/create3000/Library/master/Prototypes/1/1.0/Fields/SFNode.x3dv, ","https://rawgit.com/create3000/Library/master/Prototypes/1/1.0/Fields/SFNode.x3dvhttp://rawgit.com/create3000/Library/master/Prototypes/1/1.0/Fields/SFNode.x3dv"],
              "field": [
                {
                  "@name":"set_triggerTime",
                  "@accessType":"inputOnly",
                  "@type":"SFTime"
                },
                {
                  "@name":"keyValue",
                  "@accessType":"inputOutput",
                  "@type":"SFNode"
                },
                {
                  "@name":"value_changed",
                  "@accessType":"outputOnly",
                  "@type":"SFNode"
                }
              ]
            }
          },
          { "WorldInfo":
            {
              "-metadata":
                { "MetadataSet":
                  {
                    "@name":"Titania",
                    "@DEF":"Titania",
                    "@reference":"http://titania.create3000.de",
                    "-value":[
                      { "MetadataSet":
                        {
                          "@name":"AngleGrid",
                          "@DEF":"AngleGrid",
                          "@reference":"http://titania.create3000.de",
                          "-value":[
                            { "MetadataBoolean":
                              {
                                "@name":"enabled",
                                "@DEF":"enabled",
                                "@reference":"http://titania.create3000.de",
                                "@value":[false]
                              }
                            }
                          ]
                        }
                      },
                      { "MetadataSet":
                        {
                          "@name":"Grid",
                          "@DEF":"Grid",
                          "@reference":"http://titania.create3000.de",
                          "-value":[
                            { "MetadataBoolean":
                              {
                                "@name":"enabled",
                                "@DEF":"enabled_1",
                                "@reference":"http://titania.create3000.de",
                                "@value":[false]
                              }
                            }
                          ]
                        }
                      },
                      { "MetadataSet":
                        {
                          "@name":"NavigationInfo",
                          "@DEF":"NavigationInfo",
                          "@reference":"http://titania.create3000.de",
                          "-value":[
                            { "MetadataString":
                              {
                                "@name":"type",
                                "@DEF":"type",
                                "@reference":"http://titania.create3000.de",
                                "@value":["NONE"]
                              }
                            }
                          ]
                        }
                      },
                      { "MetadataSet":
                        {
                          "@name":"Viewpoint",
                          "@DEF":"Viewpoint",
                          "@reference":"http://titania.create3000.de",
                          "-value":[
                            { "MetadataDouble":
                              {
                                "@name":"position",
                                "@DEF":"position",
                                "@reference":"http://titania.create3000.de",
                                "@value":[0,0,10]
                              }
                            },
                            { "MetadataDouble":
                              {
                                "@name":"orientation",
                                "@DEF":"orientation",
                                "@reference":"http://titania.create3000.de",
                                "@value":[0,0,1,0]
                              }
                            },
                            { "MetadataDouble":
                              {
                                "@name":"centerOfRotation",
                                "@DEF":"centerOfRotation",
                                "@reference":"http://titania.create3000.de",
                                "@value":[0,0,0]
                              }
                            }
                          ]
                        }
                      },
                      { "MetadataSet":
                        {
                          "@name":"Selection",
                          "@DEF":"Selection",
                          "@reference":"http://titania.create3000.de",
                          "-value":[
                            { "MetadataSet":
                              {
                                "@name":"previous",
                                "@DEF":"previous",
                                "@reference":"http://titania.create3000.de",
                                "-value":[
                                  { "Transform":
                                    {
                                      "@DEF":"Header",
                                      "@translation":[-1.6905,0.857504,-1],
                                      "@scale":[0.0672307,0.0672307,0.0672307],
                                      "-children":[
                                        { "Shape":
                                          {
                                            "-appearance":
                                              { "Appearance":
                                                {
                                                  "-material":
                                                    { "Material":
                                                      {
                                                        "@emissiveColor":[1,1,1]
                                                      }
                                                    }
                                                }
                                              },
                                            "-geometry":
                                              { "Text":
                                                {
                                                  "@string":["Mountains"],
                                                  "@solid":true,
                                                  "-fontStyle":
                                                    { "FontStyle":
                                                      {
                                                        "@family":[", ","UbuntuSANS"],
                                                        "@size":1.61,
                                                        "@justify":[", ","BEGINFIRST"]
                                                      }
                                                    }
                                                }
                                              }
                                          }
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            },
                            { "MetadataSet":
                              {
                                "@name":"nodes",
                                "@DEF":"nodes",
                                "@reference":"http://titania.create3000.de"
                              }
                            }
                          ]
                        }
                      },
                      { "MetadataSet":
                        {
                          "@name":"AxonometricGrid",
                          "@DEF":"AxonometricGrid",
                          "@reference":"http://titania.create3000.de",
                          "-value":[
                            { "MetadataBoolean":
                              {
                                "@name":"enabled",
                                "@DEF":"enabled_2",
                                "@reference":"http://titania.create3000.de",
                                "@value":[false]
                              }
                            }
                          ]
                        }
                      },
                      { "MetadataSet":
                        {
                          "@name":"LayerSet",
                          "@DEF":"LayerSet",
                          "@reference":"http://titania.create3000.de",
                          "-value":[
                            { "MetadataInteger":
                              {
                                "@name":"activeLayer",
                                "@DEF":"activeLayer",
                                "@reference":"http://titania.create3000.de",
                                "@value":[2]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
            }
          },
          { "LayerSet":
            {
              "@order":[1,2],
              "-layers":[
                { "LayoutLayer":
                  {
                    "-layout":
                      { "Layout":
                        {
                          "@size":[1]
                        }
                      },
                    "-children":[
                      { "NavigationInfo":
                        {
                          "@type":["NONE"]
                        }
                      },
                      { "TimeSensor":
                        {
                          "@DEF":"Timer",
                          "@cycleInterval":10000,
                          "@loop":true
                        }
                      },
                      { "ScalarInterpolator":
                        {
                          "@DEF":"_1",
                          "@key":[0,1],
                          "@keyValue":[0,10000]
                        }
                      },
                      { "Transform":
                        {
                          "@DEF":"Rectangle2D",
                          "-children":[
                            { "Shape":
                              {
                                "-appearance":
                                  { "Appearance":
                                    {
                                      "-material":
                                        { "Material":
                                          {
                                          }
                                        },
                                      "-shaders":[
                                        { "ComposedShader":
                                          {
                                            "@DEF":"WaterShader",
                                            "@language":"GLSL",
                                            "field": [
                                              {
                                                "@name":"time",
                                                "@accessType":"inputOutput",
                                                "@type":"SFFloat"
                                              },
                                              {
                                                "@name":"postEffects",
                                                "@accessType":"inputOutput",
                                                "@type":"SFBool",
                                                "@value":true
                                              },
                                              {
                                                "@name":"moveCamera",
                                                "@accessType":"inputOutput",
                                                "@type":"SFBool",
                                                "@value":true
                                              },
                                              {
                                                "@name":"cameraPos",
                                                "@accessType":"inputOutput",
                                                "@type":"SFVec3f",
                                                "@value":[0,2,0]
                                              },
                                              {
                                                "@name":"cameraLookat",
                                                "@accessType":"inputOutput",
                                                "@type":"SFVec3f",
                                                "@value":[-2,-30,-80]
                                              },
                                              {
                                                "@name":"sunDir",
                                                "@accessType":"inputOutput",
                                                "@type":"SFVec3f",
                                                "@value":[3.2,1,-4]
                                              },
                                              {
                                                "@name":"sunColour",
                                                "@accessType":"inputOutput",
                                                "@type":"SFColor",
                                                "@value":[1,1,0.6]
                                              },
                                              {
                                                "@name":"ambient",
                                                "@accessType":"inputOutput",
                                                "@type":"SFFloat",
                                                "@value":0.1
                                              },
                                              {
                                                "@name":"ao",
                                                "@accessType":"inputOutput",
                                                "@type":"SFBool"
                                              },
                                              {
                                                "@name":"shadows",
                                                "@accessType":"inputOutput",
                                                "@type":"SFBool",
                                                "@value":true
                                              },
                                              {
                                                "@name":"fog",
                                                "@accessType":"inputOutput",
                                                "@type":"SFBool",
                                                "@value":true
                                              },
                                              {
                                                "@name":"fogC",
                                                "@accessType":"inputOutput",
                                                "@type":"SFFloat",
                                                "@value":0.14
                                              },
                                              {
                                                "@name":"fogB",
                                                "@accessType":"inputOutput",
                                                "@type":"SFFloat",
                                                "@value":0.28
                                              },
                                              {
                                                "@name":"snowLevel",
                                                "@accessType":"inputOutput",
                                                "@type":"SFFloat",
                                                "@value":0.276017
                                              },
                                              {
                                                "@name":"grassLevel",
                                                "@accessType":"inputOutput",
                                                "@type":"SFFloat",
                                                "@value":0.234662
                                              },
                                              {
                                                "@name":"offset",
                                                "@accessType":"inputOutput",
                                                "@type":"SFFloat",
                                                "@value":2.15753
                                              },
                                              {
                                                "@name":"param",
                                                "@accessType":"inputOutput",
                                                "@type":"SFFloat",
                                                "@value":0.1
                                              },
                                              {
                                                "@name":"texture0",
                                                "@accessType":"initializeOnly",
                                                "@type":"SFNode",
                                                "-children":[
                                                  { "ImageTexture":
                                                    {
                                                      "@url":["ggreynoise512.png"]
                                                    }
                                                  }
                                                ]
                                              }
                                            ],
                                            "-parts":[
                                              { "ShaderPart":
                                                {
                                                  "@DEF":"WaterVertexShader",
                                                  "@type":"VERTEX",
                                                  "#sourceText":[
"",
"data:text/plain,",
"",
"precision mediump float;",
"",
"uniform mat4 x3d_ProjectionMatrix;",
"uniform mat4 x3d_ModelViewMatrix;",
"",
"attribute vec4 x3d_Vertex;",
"",
"varying vec4 vertex;",
"",
"void main ()",
"{",
"\tvertex = x3d_ModelViewMatrix * x3d_Vertex;",
"",
"\tgl_Position = x3d_ProjectionMatrix * vertex;",
"}",
"",
""
]
                                                }
                                              },
                                              { "ShaderPart":
                                                {
                                                  "@DEF":"WaterFragmentShader",
                                                  "@type":"FRAGMENT",
                                                  "#sourceText":[
"",
"data:text/plain,",
"",
"precision mediump float;",
"",
"uniform float time;",
"uniform vec3 cameraPos;",
"uniform vec3 cameraLookat;",
"uniform vec3 sunDir;",
"uniform vec3 sunColour;",
"uniform float ambient;",
"uniform bool ao;",
"uniform bool shadows;",
"uniform bool postEffects;",
"uniform bool moveCamera;",
"uniform bool fog;",
"uniform float fogC;",
"uniform float fogB;",
"uniform float snowLevel;",
"uniform float grassLevel;",
"uniform float offset;",
"uniform float param;",
"uniform sampler2D texture0;",
"",
"uniform ivec4 x3d_Viewport;",
"",
"vec2 resolution = vec2 (0.0);",
"",
"//#define AA",
"",
"#define GAMMA 0.8",
"#define CONTRAST 1.2",
"#define SATURATION 1.4",
"#define BRIGHTNESS 1.4",
"#define SHADOW_RAY_DEPTH 64",
"#define AO_SAMPLES 4",
"#ifndef AA",
"#define RAY_DEPTH 200",
"#define MAX_DEPTH 40.0",
"#define FRACT_NOISE_DEPTH 7",
"#define DISTANCE_MIN 0.003",
"#else",
"#define RAY_DEPTH 250",
"#define MAX_DEPTH 50.0",
"#define FRACT_NOISE_DEPTH 9",
"#define DISTANCE_MIN 0.002",
"#endif",
"#define PI 3.14159265",
"",
"const vec2 delta = vec2(DISTANCE_MIN, 0.);",
"",
"const vec3 skyColour = vec3(.1, .2, .3);",
"const vec3 horizColour = vec3(.38, .36, .32);",
"",
"#define TEXTURESIZE 512.0",
"",
"float NoiseL(in vec2 x) ",
"{",
"   return texture2D(texture0,(x+vec2(0.5,0.5))/TEXTURESIZE,-100.0).x;",
"}",
"",
"float Noise(in vec2 x)",
"{",
"   vec2 p = floor(x);",
"   vec2 f = fract(x);",
"   f = f*f*(3.0-2.0*f);",
"   float n = p.x + p.y*57.0;",
"   float res = mix(mix( texture2D(texture0,(n+vec2(0.5,0.5))/TEXTURESIZE,-100.0).x, texture2D(texture0,(n+1.0+vec2(0.5,0.5))/TEXTURESIZE,-100.0).x,f.x),",
"                   mix( texture2D(texture0,(n+57.0+vec2(0.5,0.5))/TEXTURESIZE,-100.0).x, texture2D(texture0,(n+58.0+vec2(0.5,0.5))/TEXTURESIZE,-100.0).x,f.x),f.y);",
"   return res;",
"}",
"",
"const mat2 octave_m = mat2(2.5,0.6,-0.6,2.5);",
"#define AMPLITUDE 0.5",
"#define LACUNARITY 2.333",
"// ridge offset - see http://thebookofshaders.com/13/",
"#define OFFSET 1.55",
"float FractalNoiseM(in vec2 xy)",
"{",
"   mat2 oct = octave_m;",
"   float a = AMPLITUDE;",
"   float f = 0.0;",
"   float n = 0.0;",
"   for (int i = 0; i < FRACT_NOISE_DEPTH - 1; i++)",
"   {",
"      n = Noise(xy);",
"      n = offset - n - (float(i) * 0.2);",
"      f += n * n * a;",
"      a *= 0.5;",
"      xy *= LACUNARITY;",
"   }",
"   return f;",
"}",
"",
"float FractalNoiseH(in vec2 xy)",
"{",
"   mat2 oct = octave_m;",
"   float a = AMPLITUDE;",
"   float f = 0.0;",
"   float n = 0.0;",
"   for (int i = 0; i < FRACT_NOISE_DEPTH; i++)",
"   {",
"      n = Noise(xy);",
"      // create small details on the larger surface",
"      //n = offset - n - (float(FRACT_NOISE_DEPTH - i) * 0.2);",
"      // creates interesting larger detail - but smoother overall",
"      n = offset - n - (float(i) * 0.2);",
"      f += n * n * a;",
"      a *= 0.5;",
"      xy *= LACUNARITY;",
"   }",
"   return f;",
"}",
"",
"float Terrain(vec2 pos)",
"{",
"   return FractalNoiseH(pos.yx*0.571)*0.693 - Noise(cos(pos.yx*0.6)+sin(pos.xy*0.6));",
"}",
"",
"float TerrainM(vec2 pos)",
"{",
"   return FractalNoiseM(pos.yx*0.571)*0.693 - Noise(cos(pos.yx*0.6)+sin(pos.xy*0.6));",
"}",
"",
"// This should return continuous positive values when outside and negative values inside,",
"// which roughly indicate the distance of the nearest surface.",
"// NOTE! for increased performance, but lower Shadow/AO/intersect accuracy, change Terrain() to TerrainM() here",
"float Dist(vec3 pos)",
"{",
"   return pos.y - TerrainM(pos.xz);",
"}",
"",
"vec3 CalcNormal(in vec3 pos, float t)",
"{",
"   // NOTE: subtle changes to this value affect the sharpness of the normal - 0.001 is about same as GetNormal() usually",
"   vec2 eps = vec2(0.001*t, 0.0);",
"   return normalize( vec3( Terrain(pos.xz-eps.xy) - Terrain(pos.xz+eps.xy),",
"                           2.0*eps.x,",
"                           Terrain(pos.xz-eps.yx) - Terrain(pos.xz+eps.yx) ) );",
"}",
"",
"vec3 Sky(in vec3 ro, in vec3 rd)",
"{",
"   // background sky     ",
"   vec3 col = 0.9*vec3(0.4,0.5,0.70) - rd.y*vec3(0.4,0.36,0.45);",
"   col = mix(col, vec3(1.0, 0.9, 0.9), 0.4);",
"",
"   // sun glare    ",
"   float sun = clamp( dot(normalize (sunDir),rd), 0.0, 1.0 );",
"   col += 0.6*vec3(1.0,0.6,0.3)*pow( sun, 64.0 );",
"",
"   return col;",
"}",
"",
"vec3 DepthFog(in vec3  rgb,in float distance, in vec3 rd, in vec3 ro)",
"{",
"   float fogAmount = 0.0;",
"   if (fog) fogAmount = fogC * exp(-ro.y*fogB) * (1.0-exp(-distance*rd.y*fogB))/rd.y;",
"   return mix(rgb, Sky(ro, rd), clamp(fogAmount, 0.0, 1.0));",
"}",
"",
"// Based on original code by IQ",
"const float spread = 16.0;",
"float SoftShadow(vec3 ro, vec3 rd)",
"{",
"   float res = 1.0;",
"   float t = 0.01;    // min-t see http://www.iquilezles.org/www/articles/rmshadows/rmshadows.htm",
"   for (int i=0; i<SHADOW_RAY_DEPTH; i++)",
"   {",
"      if (t < 16.0)  // max-t",
"      {",
"         float h = Dist(ro + rd * t);",
"         res = min(res, spread*h/t);",
"         t += h;",
"      }",
"   }",
"   return clamp(res, 0.0, 1.0);",
"}",
"",
"// Based on original code by IQ",
"float CalcAO(vec3 p, vec3 n)",
"{",
"   float r = 0.0;",
"   float w = 1.0;",
"   for (int i=1; i<=AO_SAMPLES; i++)",
"   {",
"      float d0 = float(i) * 0.2;",
"      r += w * (d0 - Dist(p + n * d0));",
"      w *= 0.5;",
"   }",
"   return 1.0 - clamp(r,0.0,1.0);",
"}",
"",
"// \"Natural light\" shading - main sun light with soft shadows, sky light with AO and indirect sun bounce light with AO",
"// see http://iquilezles.org/www/articles/outdoorslighting/outdoorslighting.htm",
"const vec3 rockColour = vec3(0.8, 0.82, 0.82);",
"const vec3 peaksColour = vec3(1.5);",
"const vec3 grassColour = vec3(0.8, 0.9, 0.3);  //(0.1,0.7,0.2);",
"const float specularHardness = 64.0;",
"const float specular = 1.00;",
"vec3 Shading(vec3 pos, vec3 rd, vec3 norm, vec3 ro)",
"{",
"   float sun = clamp(dot(norm, normalize (sunDir)), 0.0, 1.0);",
"   vec3 heading = normalize(-rd + normalize (sunDir));",
"",
"   // start with rock colour, add in snow on peaks and grass in valleys",
"   float dif = 0.5;",
"   float snow = NoiseL(norm.yz*2.111) - snowLevel;",
"   float grass = NoiseL(norm.xy*0.973) + grassLevel;",
"",
"   vec3 colour = rockColour;",
"",
"   // give a more abrubt cut-off where snow is mixed into rock colour",
"   // snow also has a specular reflective component",
"   float mixSnow = smoothstep(0.05, 0.4, pos.y - snow);",
"   colour = mix(colour, peaksColour, mixSnow);",
"   float spec = mix(0.0, pow(max(0.0, dot(heading, norm)), specularHardness), mixSnow);",
"   dif = mix(dif, 0.9, mixSnow);",
"",
"   // mix grass colour",
"   float mixGrass = 1.0 - clamp(pos.y + grass - norm.y, 0.0, 1.0);",
"   colour = mix(colour, grassColour, mixGrass);",
"   dif = mix(dif, 0.8, mixGrass);",
"",
"   vec3 light = sun * sunColour * dif + (spec * specular);",
"",
"   if (shadows) {",
"      // colorize penumbras",
"      light *= pow(vec3(SoftShadow(pos, normalize (sunDir))), vec3(1.0, 1.2, 1.5));",
"   }",
"",
"   // sky light with AO",
"   float occ = ambient;",
"   if (ao) occ = CalcAO(pos, norm) * ambient;",
"   float sky = clamp(0.5 + 0.5 * norm.y, 0.0, 1.0);",
"   light += sky * vec3(0.24, 0.20, 0.24) * occ;",
"",
"   // indirect light with AO",
"   float ind = clamp(dot(norm, normalize(normalize (sunDir) * vec3(-1.0,0.0,-1.0))), 0.0, 1.0);",
"   light += ind * colour * 0.3 * occ;",
"",
"   colour *= light;",
"",
"   // fogging",
"   colour = DepthFog(colour, length(ro-pos), rd, ro);",
"",
"   return colour;",
"}",
"",
"// Original method by David Hoskins",
"vec3 PostEffects(vec3 rgb, vec2 xy)",
"{",
"   rgb = pow(rgb, vec3(GAMMA));",
"   rgb = mix(vec3(.5), mix(vec3(dot(vec3(.2125, .7154, .0721), rgb*BRIGHTNESS)), rgb*BRIGHTNESS, SATURATION), CONTRAST);",
"   rgb *= .4+0.5*pow(40.0*xy.x*xy.y*(1.0-xy.x)*(1.0-xy.y), 0.2 ); ",
"   return rgb;",
"}",
"",
"// Camera function by TekF",
"// Compute ray from camera parameters",
"vec3 GetRay(vec3 dir, vec2 pos)",
"{",
"   pos = pos - 0.5;",
"   pos.x *= resolution.x/resolution.y;",
"",
"   dir = normalize(dir);",
"   vec3 right = normalize(cross(vec3(0.,1.,0.),dir));",
"   vec3 up = normalize(cross(dir,right));",
"",
"   return dir + right*pos.x + up*pos.y;",
"}",
"",
"#define ANTIALIAS_SAMPLES 8",
"void main()",
"{",
"   resolution = vec2 (x3d_Viewport .zw);",
"",
"   vec3 off = vec3(0.0);",
"   if (moveCamera) {",
"      off.z -= time*1.0;",
"      off.y += cos(time*0.5)*0.5;",
"   }",
"",
"   vec4 res = vec4(0.0);",
"",
"#ifndef AA",
"   // position and ray direction",
"   vec2 p = gl_FragCoord.xy / resolution.xy;",
"   vec3 ro = cameraPos + off;",
"   vec3 rd = normalize(GetRay((cameraLookat-off)-cameraPos+off, p));",
"",
"   // march ray",
"   float t = 0.0;",
"   float d = 0.0;",
"   for (int i=0; i<RAY_DEPTH; i++)",
"   {",
"      vec3 p = ro + rd * t;",
"      d = Dist(p);",
"      if (d < DISTANCE_MIN)",
"      {",
"         res = vec4(p, 1.0);  // HIT",
"         break;",
"      }",
"      // this is subtle - but makes a huge difference to the quality of the hit accuracy",
"      // ensure we walk a distance that is small enough to not miss the peaks as we get closer",
"      //t += d * min( max(0.2, (p.y-d)), 0.8 );",
"      t += d * 0.5;",
"      if (t > MAX_DEPTH) break;",
"   }",
"",
"   if (res.a == 0.0)",
"   {",
"      res.rgb = Sky(ro, rd);",
"   }",
"   else",
"   {",
"      res.rgb = Shading(res.rgb, rd, CalcNormal(res.rgb, t), ro).rgb;",
"   }",
"#else",
"   vec2 p;",
"   float d_ang = 2.*PI / float(ANTIALIAS_SAMPLES);",
"   float ang = d_ang * 0.33333;",
"   float r = 0.3;",
"   for (int i = 0; i < ANTIALIAS_SAMPLES; i++)",
"   {",
"      p = vec2((gl_FragCoord.x + cos(ang)*r) / resolution.x, (gl_FragCoord.y + sin(ang)*r) / resolution.y);",
"      vec3 ro = cameraPos + off;",
"      vec3 rd = normalize(GetRay((cameraLookat-off)-cameraPos+off, p));",
"      vec4 _res = vec4(0.0);",
"      float t = 0.0;",
"      float d = 1.0;",
"      for (int i=0; i<RAY_DEPTH; i++)",
"      {",
"         vec3 p = ro + rd * t;",
"         d = Dist(p);",
"         if (d < DISTANCE_MIN)",
"         {",
"            _res = vec4(p, 1.0);  // HIT",
"            break;",
"         }",
"         t += d * 0.5;",
"         if (t > MAX_DEPTH) break;",
"      }",
"",
"      if (_res.a == 0.0)",
"      {",
"         res.rgb += Sky(ro, rd);",
"      }",
"      else",
"      {",
"         res.rgb += Shading(_res.rgb, rd, CalcNormal(_res.rgb, t), ro).rgb;",
"      }",
"      ang += d_ang;",
"   }",
"   res.rgb /= float(ANTIALIAS_SAMPLES);",
"#endif",
"",
"   if (postEffects) res.rgb = PostEffects(res.rgb, p);",
"",
"   gl_FragColor = vec4(res.rgb, 1.0);",
"}",
"",
""
]
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      ]
                                    }
                                  },
                                "-geometry":
                                  { "Rectangle2D":
                                    {
                                      "@size":[1,1]
                                    }
                                  }
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                { "Layer":
                  {
                    "@DEF":"HUD",
                    "-metadata":
                      { "MetadataSet":
                        {
                          "@name":"Titania",
                          "@DEF":"Titania_1",
                          "@reference":"http://titania.create3000.de",
                          "-value":[
                            { "MetadataSet":
                              {
                                "@name":"AngleGrid",
                                "@DEF":"AngleGrid_1",
                                "@reference":"http://titania.create3000.de",
                                "-value":[
                                  { "MetadataBoolean":
                                    {
                                      "@name":"enabled",
                                      "@DEF":"enabled_3",
                                      "@reference":"http://titania.create3000.de",
                                      "@value":[false]
                                    }
                                  }
                                ]
                              }
                            },
                            { "MetadataSet":
                              {
                                "@name":"Grid",
                                "@DEF":"Grid_1",
                                "@reference":"http://titania.create3000.de",
                                "-value":[
                                  { "MetadataBoolean":
                                    {
                                      "@name":"enabled",
                                      "@DEF":"enabled_4",
                                      "@reference":"http://titania.create3000.de",
                                      "@value":[false]
                                    }
                                  },
                                  { "MetadataFloat":
                                    {
                                      "@name":"scale",
                                      "@DEF":"scale",
                                      "@reference":"http://titania.create3000.de",
                                      "@value":[0.05,0.05,0.05]
                                    }
                                  },
                                  { "MetadataInteger":
                                    {
                                      "@name":"dimension",
                                      "@DEF":"dimension",
                                      "@reference":"http://titania.create3000.de",
                                      "@value":[89,10,40]
                                    }
                                  },
                                  { "MetadataDouble":
                                    {
                                      "@name":"rotation",
                                      "@DEF":"rotation",
                                      "@reference":"http://titania.create3000.de",
                                      "@value":[1,0,0,1.5707963267949]
                                    }
                                  }
                                ]
                              }
                            },
                            { "MetadataSet":
                              {
                                "@name":"AxonometricGrid",
                                "@DEF":"AxonometricGrid_1",
                                "@reference":"http://titania.create3000.de",
                                "-value":[
                                  { "MetadataBoolean":
                                    {
                                      "@name":"enabled",
                                      "@DEF":"enabled_5",
                                      "@reference":"http://titania.create3000.de",
                                      "@value":[false]
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                    "-children":[
                      { "NavigationInfo":
                        {
                          "@type":["NONE"],
                          "@headlight":false
                        }
                      },
                      { "OrthoViewpoint":
                        {
                        }
                      },
                      { "Transform":
                        {
                          "@USE":"Header"
                        }
                      },
                      { "Transform":
                        {
                          "@DEF":"Header_1",
                          "@translation":[1.675,-0.65,-1],
                          "@scale":[0.0672307,0.0672307,0.0672307],
                          "-children":[
                            { "Shape":
                              {
                                "-appearance":
                                  { "Appearance":
                                    {
                                      "-material":
                                        { "Material":
                                          {
                                            "@DEF":"Artdeco31",
                                            "@ambientIntensity":0,
                                            "@diffuseColor":[0,0,0],
                                            "@emissiveColor":[1,1,1],
                                            "@shininess":0
                                          }
                                        }
                                    }
                                  },
                                "-geometry":
                                  { "Text":
                                    {
                                      "@string":["Camera"],
                                      "@solid":true,
                                      "-fontStyle":
                                        { "FontStyle":
                                          {
                                            "@family":[", ","UbuntuSANS"],
                                            "@style":"BOLD",
                                            "@size":0.68,
                                            "@justify":["END"]
                                          }
                                        }
                                    }
                                  }
                              }
                            }
                          ]
                        }
                      },
                      { "Group":
                        {
                          "@DEF":"Fields",
                          "-children":[
                            { "Transform":
                              {
                                "@DEF":"XSlider",
                                "@translation":[0.275,-0.723,1.66533e-16],
                                "@center":[0,-0.027,0],
                                "-children":[
                                  { "Transform":
                                    {
                                      "@DEF":"IndexedLineSet",
                                      "-children":[
                                        { "Shape":
                                          {
                                            "-appearance":
                                              { "Appearance":
                                                {
                                                  "-lineProperties":
                                                    { "LineProperties":
                                                      {
                                                        "@linewidthScaleFactor":2
                                                      }
                                                    },
                                                  "-material":
                                                    { "Material":
                                                      {
                                                        "@DEF":"Artdeco31_1",
                                                        "@emissiveColor":[1,1,1]
                                                      }
                                                    }
                                                }
                                              },
                                            "-geometry":
                                              { "IndexedLineSet":
                                                {
                                                  "@colorPerVertex":false,
                                                  "@coordIndex":[0,1,-1],
                                                  "-coord":
                                                    { "Coordinate":
                                                      {
                                                        "@point":[0,0,0,1,0,0]
                                                      }
                                                    }
                                                }
                                              }
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  { "Transform":
                                    {
                                      "-children":[
                                        { "Transform":
                                          {
                                            "@DEF":"Rectangle2D_1",
                                            "@translation":[0.276017,0,0],
                                            "@scale":[0.027,0.0267372,0.0267372],
                                            "-children":[
                                              { "Shape":
                                                {
                                                  "-appearance":
                                                    { "Appearance":
                                                      {
                                                        "-material":
                                                          { "Material":
                                                            {
                                                              "@emissiveColor":[1,1,1]
                                                            }
                                                          }
                                                      }
                                                    },
                                                  "-geometry":
                                                    { "Disk2D":
                                                      {
                                                      }
                                                    }
                                                }
                                              }
                                            ]
                                          }
                                        },
                                        { "PlaneSensor":
                                          {
                                            "@DEF":"_2",
                                            "@offset":[0.276017,0,0],
                                            "@maxPosition":[1,0]
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  { "Script":
                                    {
                                      "@DEF":"XScript",
                                      "field": [
                                        {
                                          "@name":"set_translation",
                                          "@accessType":"inputOnly",
                                          "@type":"SFVec3f"
                                        },
                                        {
                                          "@name":"description",
                                          "@accessType":"inputOutput",
                                          "@type":"SFString",
                                          "@value":"snow"
                                        },
                                        {
                                          "@name":"minValue",
                                          "@accessType":"inputOutput",
                                          "@type":"SFFloat"
                                        },
                                        {
                                          "@name":"maxValue",
                                          "@accessType":"inputOutput",
                                          "@type":"SFFloat",
                                          "@value":1
                                        },
                                        {
                                          "@name":"value_changed",
                                          "@accessType":"outputOnly",
                                          "@type":"SFFloat"
                                        },
                                        {
                                          "@name":"string_changed",
                                          "@accessType":"outputOnly",
                                          "@type":"MFString"
                                        },
                                        {
                                          "@name":"currentValue",
                                          "@accessType":"initializeOnly",
                                          "@type":"SFFloat",
                                          "@value":0.28
                                        }
                                      ],
                                      "#sourceText":[
"",
"ecmascript:",
"",
"function initialized ()",
"{",
"\tset_value (currentValue);",
"}",
"",
"function set_translation (value)",
"{",
"\tset_value (minValue + (value .x * (maxValue - minValue)));",
"}",
"",
"function set_value (value)",
"{",
"\tvar rounded = value .toFixed (2);",
"",
"\tif (rounded == currentValue)",
"\t\treturn;",
"",
"\tcurrentValue       = rounded;",
"\tstring_changed [0] = description + \" \" + rounded;",
"\tvalue_changed      = value;",
"}",
"",
""
]
                                    }
                                  }
                                ]
                              }
                            },
                            { "Transform":
                              {
                                "@DEF":"XText",
                                "@translation":[1.675,-0.750004,-2.02108e-06],
                                "@scale":[0.0672307,0.0672307,0.0672307],
                                "-children":[
                                  { "Shape":
                                    {
                                      "-appearance":
                                        { "Appearance":
                                          {
                                            "-material":
                                              { "Material":
                                                {
                                                  "@emissiveColor":[1,1,1]
                                                }
                                              }
                                          }
                                        },
                                      "-geometry":
                                        { "Text":
                                          {
                                            "@DEF":"_3",
                                            "@string":["snow 0.28"],
                                            "@solid":true,
                                            "-fontStyle":
                                              { "FontStyle":
                                                {
                                                  "@family":[", ","UbuntuSANS"],
                                                  "@justify":["END"]
                                                }
                                              }
                                          }
                                        }
                                    }
                                  }
                                ]
                              }
                            },
                            { "Transform":
                              {
                                "@DEF":"YSlider",
                                "@translation":[0.275,-0.823,1.88738e-16],
                                "@center":[0,-0.027,0],
                                "-children":[
                                  { "Transform":
                                    {
                                      "@DEF":"IndexedLineSet_1",
                                      "-children":[
                                        { "Shape":
                                          {
                                            "-appearance":
                                              { "Appearance":
                                                {
                                                  "-lineProperties":
                                                    { "LineProperties":
                                                      {
                                                        "@linewidthScaleFactor":2
                                                      }
                                                    },
                                                  "-material":
                                                    { "Material":
                                                      {
                                                        "@DEF":"Artdeco31_2",
                                                        "@emissiveColor":[1,1,1]
                                                      }
                                                    }
                                                }
                                              },
                                            "-geometry":
                                              { "IndexedLineSet":
                                                {
                                                  "@colorPerVertex":false,
                                                  "@coordIndex":[0,1,-1],
                                                  "-coord":
                                                    { "Coordinate":
                                                      {
                                                        "@point":[0,0,0,1,0,0]
                                                      }
                                                    }
                                                }
                                              }
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  { "Transform":
                                    {
                                      "-children":[
                                        { "Transform":
                                          {
                                            "@DEF":"Rectangle2D_2",
                                            "@translation":[0.234662,0,0],
                                            "@scale":[0.027,0.0267372,0.0267372],
                                            "-children":[
                                              { "Shape":
                                                {
                                                  "-appearance":
                                                    { "Appearance":
                                                      {
                                                        "-material":
                                                          { "Material":
                                                            {
                                                              "@emissiveColor":[1,1,1]
                                                            }
                                                          }
                                                      }
                                                    },
                                                  "-geometry":
                                                    { "Disk2D":
                                                      {
                                                      }
                                                    }
                                                }
                                              }
                                            ]
                                          }
                                        },
                                        { "PlaneSensor":
                                          {
                                            "@DEF":"_4",
                                            "@offset":[0.234662,0,0],
                                            "@maxPosition":[1,0]
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  { "Script":
                                    {
                                      "@DEF":"YScript",
                                      "field": [
                                        {
                                          "@name":"set_translation",
                                          "@accessType":"inputOnly",
                                          "@type":"SFVec3f"
                                        },
                                        {
                                          "@name":"description",
                                          "@accessType":"inputOutput",
                                          "@type":"SFString",
                                          "@value":"grass"
                                        },
                                        {
                                          "@name":"minValue",
                                          "@accessType":"inputOutput",
                                          "@type":"SFFloat"
                                        },
                                        {
                                          "@name":"maxValue",
                                          "@accessType":"inputOutput",
                                          "@type":"SFFloat",
                                          "@value":1
                                        },
                                        {
                                          "@name":"value_changed",
                                          "@accessType":"outputOnly",
                                          "@type":"SFFloat"
                                        },
                                        {
                                          "@name":"string_changed",
                                          "@accessType":"outputOnly",
                                          "@type":"MFString"
                                        },
                                        {
                                          "@name":"currentValue",
                                          "@accessType":"initializeOnly",
                                          "@type":"SFFloat",
                                          "@value":0.23
                                        }
                                      ],
                                      "#sourceText":[
"",
"ecmascript:",
"",
"function initialized ()",
"{",
"\tset_value (currentValue);",
"}",
"",
"function set_translation (value)",
"{",
"\tset_value (minValue + (value .x * (maxValue - minValue)));",
"}",
"",
"function set_value (value)",
"{",
"\tvar rounded = value .toFixed (2);",
"",
"\tif (rounded == currentValue)",
"\t\treturn;",
"",
"\tcurrentValue       = rounded;",
"\tstring_changed [0] = description + \" \" + rounded;",
"\tvalue_changed      = value;",
"}",
"",
""
]
                                    }
                                  }
                                ]
                              }
                            },
                            { "Transform":
                              {
                                "@DEF":"YText",
                                "@translation":[1.675,-0.850004,-2.38855e-06],
                                "@scale":[0.0672307,0.0672307,0.0672307],
                                "-children":[
                                  { "Shape":
                                    {
                                      "-appearance":
                                        { "Appearance":
                                          {
                                            "-material":
                                              { "Material":
                                                {
                                                  "@emissiveColor":[1,1,1]
                                                }
                                              }
                                          }
                                        },
                                      "-geometry":
                                        { "Text":
                                          {
                                            "@DEF":"_5",
                                            "@string":["grass 0.23"],
                                            "@solid":true,
                                            "-fontStyle":
                                              { "FontStyle":
                                                {
                                                  "@family":[", ","UbuntuSANS"],
                                                  "@justify":["END"]
                                                }
                                              }
                                          }
                                        }
                                    }
                                  }
                                ]
                              }
                            },
                            { "Transform":
                              {
                                "@DEF":"ZText",
                                "@translation":[1.675,-0.950004,-2.75602e-06],
                                "@scale":[0.0672307,0.0672307,0.0672307],
                                "-children":[
                                  { "Shape":
                                    {
                                      "-appearance":
                                        { "Appearance":
                                          {
                                            "-material":
                                              { "Material":
                                                {
                                                  "@emissiveColor":[1,1,1]
                                                }
                                              }
                                          }
                                        },
                                      "-geometry":
                                        { "Text":
                                          {
                                            "@DEF":"_6",
                                            "@string":["noise 2.16"],
                                            "@solid":true,
                                            "-fontStyle":
                                              { "FontStyle":
                                                {
                                                  "@family":[", ","UbuntuSANS"],
                                                  "@justify":["END"]
                                                }
                                              }
                                          }
                                        }
                                    }
                                  }
                                ]
                              }
                            },
                            { "Transform":
                              {
                                "@DEF":"ZSlider",
                                "@translation":[0.275,-0.923,2.10943e-16],
                                "@center":[0,-0.027,0],
                                "-children":[
                                  { "Transform":
                                    {
                                      "@DEF":"IndexedLineSet_2",
                                      "-children":[
                                        { "Shape":
                                          {
                                            "-appearance":
                                              { "Appearance":
                                                {
                                                  "-lineProperties":
                                                    { "LineProperties":
                                                      {
                                                        "@linewidthScaleFactor":2
                                                      }
                                                    },
                                                  "-material":
                                                    { "Material":
                                                      {
                                                        "@DEF":"Artdeco31_3",
                                                        "@emissiveColor":[1,1,1]
                                                      }
                                                    }
                                                }
                                              },
                                            "-geometry":
                                              { "IndexedLineSet":
                                                {
                                                  "@colorPerVertex":false,
                                                  "@coordIndex":[0,1,-1],
                                                  "-coord":
                                                    { "Coordinate":
                                                      {
                                                        "@point":[0,0,0,1,0,0]
                                                      }
                                                    }
                                                }
                                              }
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  { "Transform":
                                    {
                                      "-children":[
                                        { "Transform":
                                          {
                                            "@DEF":"Rectangle2D_3",
                                            "@translation":[0.759294,0,0],
                                            "@scale":[0.027,0.0267372,0.0267372],
                                            "-children":[
                                              { "Shape":
                                                {
                                                  "-appearance":
                                                    { "Appearance":
                                                      {
                                                        "-material":
                                                          { "Material":
                                                            {
                                                              "@emissiveColor":[1,1,1]
                                                            }
                                                          }
                                                      }
                                                    },
                                                  "-geometry":
                                                    { "Disk2D":
                                                      {
                                                      }
                                                    }
                                                }
                                              }
                                            ]
                                          }
                                        },
                                        { "PlaneSensor":
                                          {
                                            "@DEF":"_7",
                                            "@offset":[0.759294,0,0],
                                            "@maxPosition":[1,0]
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  { "Script":
                                    {
                                      "@DEF":"ZScript",
                                      "field": [
                                        {
                                          "@name":"set_translation",
                                          "@accessType":"inputOnly",
                                          "@type":"SFVec3f"
                                        },
                                        {
                                          "@name":"description",
                                          "@accessType":"inputOutput",
                                          "@type":"SFString",
                                          "@value":"noise"
                                        },
                                        {
                                          "@name":"minValue",
                                          "@accessType":"inputOutput",
                                          "@type":"SFFloat",
                                          "@value":-0.5
                                        },
                                        {
                                          "@name":"maxValue",
                                          "@accessType":"inputOutput",
                                          "@type":"SFFloat",
                                          "@value":3
                                        },
                                        {
                                          "@name":"value_changed",
                                          "@accessType":"outputOnly",
                                          "@type":"SFFloat"
                                        },
                                        {
                                          "@name":"string_changed",
                                          "@accessType":"outputOnly",
                                          "@type":"MFString"
                                        },
                                        {
                                          "@name":"currentValue",
                                          "@accessType":"initializeOnly",
                                          "@type":"SFFloat",
                                          "@value":2.16
                                        }
                                      ],
                                      "#sourceText":[
"",
"ecmascript:",
"",
"function initialized ()",
"{",
"\tset_value (currentValue);",
"}",
"",
"function set_translation (value)",
"{",
"\tset_value (minValue + (value .x * (maxValue - minValue)));",
"}",
"",
"function set_value (value)",
"{",
"\tvar rounded = value .toFixed (2);",
"",
"\tif (rounded == currentValue)",
"\t\treturn;",
"",
"\tcurrentValue       = rounded;",
"\tstring_changed [0] = description + \" \" + rounded;",
"\tvalue_changed      = value;",
"}",
"",
""
]
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          },
          { "ROUTE":
            {
              "@fromNode":"_1",
              "@fromField":"value_changed",
              "@toNode":"WaterShader",
              "@toField":"set_time"
            }
          },
          { "ROUTE":
            {
              "@fromNode":"Timer",
              "@fromField":"fraction_changed",
              "@toNode":"_1",
              "@toField":"set_fraction"
            }
          },
          { "ROUTE":
            {
              "@fromNode":"_7",
              "@fromField":"translation_changed",
              "@toNode":"ZScript",
              "@toField":"set_translation"
            }
          },
          { "ROUTE":
            {
              "@fromNode":"_7",
              "@fromField":"translation_changed",
              "@toNode":"Rectangle2D_3",
              "@toField":"set_translation"
            }
          },
          { "ROUTE":
            {
              "@fromNode":"ZScript",
              "@fromField":"string_changed",
              "@toNode":"_6",
              "@toField":"set_string"
            }
          },
          { "ROUTE":
            {
              "@fromNode":"YScript",
              "@fromField":"string_changed",
              "@toNode":"_5",
              "@toField":"set_string"
            }
          },
          { "ROUTE":
            {
              "@fromNode":"_4",
              "@fromField":"translation_changed",
              "@toNode":"YScript",
              "@toField":"set_translation"
            }
          },
          { "ROUTE":
            {
              "@fromNode":"_4",
              "@fromField":"translation_changed",
              "@toNode":"Rectangle2D_2",
              "@toField":"set_translation"
            }
          },
          { "ROUTE":
            {
              "@fromNode":"XScript",
              "@fromField":"string_changed",
              "@toNode":"_3",
              "@toField":"set_string"
            }
          },
          { "ROUTE":
            {
              "@fromNode":"_2",
              "@fromField":"translation_changed",
              "@toNode":"XScript",
              "@toField":"set_translation"
            }
          },
          { "ROUTE":
            {
              "@fromNode":"_2",
              "@fromField":"translation_changed",
              "@toNode":"Rectangle2D_1",
              "@toField":"set_translation"
            }
          },
          { "ROUTE":
            {
              "@fromNode":"XScript",
              "@fromField":"value_changed",
              "@toNode":"WaterShader",
              "@toField":"set_snowLevel"
            }
          },
          { "ROUTE":
            {
              "@fromNode":"YScript",
              "@fromField":"value_changed",
              "@toNode":"WaterShader",
              "@toField":"set_grassLevel"
            }
          },
          { "ROUTE":
            {
              "@fromNode":"ZScript",
              "@fromField":"value_changed",
              "@toNode":"WaterShader",
              "@toField":"set_offset"
            }
          }
        ]
    }
  }
}