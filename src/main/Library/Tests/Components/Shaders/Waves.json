{ "X3D": {
    "encoding":"UTF-8",
    "@profile":"Full",
    "@version":"3.3",
    "@xsd:noNamespaceSchemaLocation":"http://www.web3d.org/specifications/x3d-3.3.xsd",
    "JSON schema":"https://www.web3d.org/specifications/x3d-3.3-JSONSchema.json",
    "head": {
        "meta": [
          {
            "@name":"comment",
            "@content":"World of Titania"
          },
          {
            "@name":"created",
            "@content":"Tue, 11 Apr 2017 00:24:19 GMT"
          },
          {
            "@name":"creator",
            "@content":"Holger Seelig"
          },
          {
            "@name":"generator",
            "@content":"Titania V3.0.2, http://titania.create3000.de"
          },
          {
            "@name":"identifier",
            "@content":"file:///home/holger/Projekte/Cobweb/excite/tests/Components/Shaders/Waves.x3d"
          },
          {
            "@name":"modified",
            "@content":"Sun, 16 Apr 2017 03:33:15 GMT"
          },
          {
            "@name":"outputStyle",
            "@content":"Nicest"
          },
          {
            "@name":"translated",
            "@content":"06 September 2021"
          },
          {
            "@name":"generator",
            "@content":"X3dToJson.xslt, https://www.web3d.org/x3d/stylesheets/X3dToJson.html"
          },
          {
            "@name":"reference",
            "@content":"X3D JSON encoding: https://www.web3d.org/wiki/index.php/X3D_JSON_Encoding"
          }
        ]
    },
    "Scene": {
        "-children":[
          { "ExternProtoDeclare":
            {
              "@name":"SFNode",
              "@url":[", ","https://cdn.rawgit.com/create3000/Library/master/Prototypes/1/1.0/Fields/SFNode.x3dv, ","http://cdn.rawgit.com/create3000/Library/master/Prototypes/1/1.0/Fields/SFNode.x3dv, ","https://rawgit.com/create3000/Library/master/Prototypes/1/1.0/Fields/SFNode.x3dvhttp://rawgit.com/create3000/Library/master/Prototypes/1/1.0/Fields/SFNode.x3dv"],
              "field": [
                {
                  "@name":"set_triggerTime",
                  "@accessType":"inputOnly",
                  "@type":"SFTime"
                },
                {
                  "@name":"keyValue",
                  "@accessType":"inputOutput",
                  "@type":"SFNode"
                },
                {
                  "@name":"value_changed",
                  "@accessType":"outputOnly",
                  "@type":"SFNode"
                }
              ]
            }
          },
          { "WorldInfo":
            {
              "-metadata":
                { "MetadataSet":
                  {
                    "@name":"Titania",
                    "@DEF":"Titania",
                    "@reference":"http://titania.create3000.de",
                    "-value":[
                      { "MetadataSet":
                        {
                          "@name":"AngleGrid",
                          "@DEF":"AngleGrid",
                          "@reference":"http://titania.create3000.de",
                          "-value":[
                            { "MetadataBoolean":
                              {
                                "@name":"enabled",
                                "@DEF":"enabled",
                                "@reference":"http://titania.create3000.de",
                                "@value":[false]
                              }
                            }
                          ]
                        }
                      },
                      { "MetadataSet":
                        {
                          "@name":"Grid",
                          "@DEF":"Grid",
                          "@reference":"http://titania.create3000.de",
                          "-value":[
                            { "MetadataBoolean":
                              {
                                "@name":"enabled",
                                "@DEF":"enabled_1",
                                "@reference":"http://titania.create3000.de",
                                "@value":[false]
                              }
                            }
                          ]
                        }
                      },
                      { "MetadataSet":
                        {
                          "@name":"NavigationInfo",
                          "@DEF":"NavigationInfo",
                          "@reference":"http://titania.create3000.de",
                          "-value":[
                            { "MetadataString":
                              {
                                "@name":"type",
                                "@DEF":"type",
                                "@reference":"http://titania.create3000.de",
                                "@value":["EXAMINE"]
                              }
                            }
                          ]
                        }
                      },
                      { "MetadataSet":
                        {
                          "@name":"Viewpoint",
                          "@DEF":"Viewpoint",
                          "@reference":"http://titania.create3000.de",
                          "-value":[
                            { "MetadataDouble":
                              {
                                "@name":"position",
                                "@DEF":"position",
                                "@reference":"http://titania.create3000.de",
                                "@value":[0,0,10]
                              }
                            },
                            { "MetadataDouble":
                              {
                                "@name":"orientation",
                                "@DEF":"orientation",
                                "@reference":"http://titania.create3000.de",
                                "@value":[0,0,1,0]
                              }
                            },
                            { "MetadataDouble":
                              {
                                "@name":"centerOfRotation",
                                "@DEF":"centerOfRotation",
                                "@reference":"http://titania.create3000.de",
                                "@value":[0,0,0]
                              }
                            }
                          ]
                        }
                      },
                      { "MetadataSet":
                        {
                          "@name":"Selection",
                          "@DEF":"Selection",
                          "@reference":"http://titania.create3000.de",
                          "-value":[
                            { "MetadataSet":
                              {
                                "@name":"previous",
                                "@DEF":"previous",
                                "@reference":"http://titania.create3000.de"
                              }
                            },
                            { "MetadataSet":
                              {
                                "@name":"nodes",
                                "@DEF":"nodes",
                                "@reference":"http://titania.create3000.de",
                                "-value":[
                                  { "ShaderPart":
                                    {
                                      "@DEF":"WaterFragmentShader",
                                      "@type":"FRAGMENT",
                                      "#sourceText":[
"",
"data:text/plain,",
"",
"precision mediump float;",
"",
"uniform float time;",
"uniform vec3 cameraPos;",
"uniform vec3 cameraLookat;",
"uniform vec3 lightDir;",
"uniform vec3 lightColour;",
"uniform float specular;",
"uniform float specularHardness;",
"uniform vec3 diffuse;",
"uniform bool postEffects;",
"uniform bool moveCamera;",
"uniform bool reflections;",
"uniform float seaHeight;",
"",
"uniform ivec4 x3d_Viewport;",
"",
"vec2 resolution = vec2 (0.0);",
"",
"#define GAMMA 0.8",
"#define CONTRAST 1.1",
"#define SATURATION 1.3",
"#define BRIGHTNESS 1.3",
"#define RAY_DEPTH 256",
"#define MAX_DEPTH 200.0",
"#define DISTANCE_MIN 0.001",
"#define PI 3.14159265",
"",
"const vec2 delta = vec2(DISTANCE_MIN, 0.);",
"",
"float Hash(in float n)",
"{",
"    return fract(sin(n)*43758.5453123);",
"}",
"",
"float Noise(in vec2 x)",
"{",
"    vec2 p = floor(x);",
"    vec2 f = fract(x);",
"    f = f*f*(3.0-2.0*f);",
"    float n = p.x + p.y*57.0;",
"    float res = mix(mix( Hash(n+  0.0), Hash(n+  1.0),f.x),",
"                    mix( Hash(n+ 57.0), Hash(n+ 58.0),f.x),f.y);",
"    return res;",
"}",
"",
"// Octave transform matrix from Alexander Alekseev aka TDM ",
"mat2 octave_m = mat2(1.6,1.2,-1.2,1.6);",
"",
"float FractalNoise(in vec2 xy)",
"{",
"   float m = 1.5;",
"   float w = 0.5;",
"   float f = 0.0;",
"   for (int i = 0; i < 6; i++)",
"   {",
"      f += Noise(xy+time*0.511) * m * 0.15;",
"      f += Noise(xy.yx-time*0.333) * w * 0.25;",
"      w *= 0.5;",
"      m *= 0.25;",
"      xy *= octave_m;",
"   }",
"   return f;",
"}",
"",
"// This should return continuous positive values when outside and negative values inside,",
"// which roughly indicate the distance of the nearest surface.",
"float Dist(vec3 pos)",
"{",
"   return dot(pos-vec3(0.,-FractalNoise(pos.xz),0.), vec3(0.,1.,0.));",
"}",
"",
"vec3 GetNormal(vec3 pos)",
"{",
"   vec3 n;",
"   n.x = Dist( pos + delta.xyy ) - Dist( pos - delta.xyy );",
"   n.y = Dist( pos + delta.yxy ) - Dist( pos - delta.yxy );",
"   n.z = Dist( pos + delta.yyx ) - Dist( pos - delta.yyx );",
"",
"   return normalize(n);",
"}",
"",
"// Original method by David Hoskins",
"vec3 Sky(in vec3 rd)",
"{",
"   float sunAmount = max(dot(rd, normalize (lightDir)), 0.0);",
"   float v = pow(1.0 - max(rd.y,0.0),6.);",
"   vec3 sky = mix(vec3(.1, .2, .4), vec3(.32, .32, .32), v);",
"   sky += lightColour * sunAmount * sunAmount * .25 + lightColour * min(pow(sunAmount, 800.0)*1.5, .3);",
"",
"   return clamp(sky, 0.0, 1.0);",
"}",
"",
"// Fog routine - original by IQ",
"vec3 Fog(vec3 rgb, vec3 rd, float distance)   // camera to point distance",
"{",
"   const float b = 0.10;",
"   float fogAmount = 1.0 - exp(-distance*b*b);",
"   vec3  fogColor = Sky(rd);",
"   return mix(rgb, fogColor, fogAmount);",
"}",
"",
"const vec3 WATER_COLOR = vec3(0.6,0.9,0.6);",
"vec3 Shading(vec3 pos, vec3 rd, vec3 norm, vec3 ro)",
"{",
"   vec3 light = lightColour * max(0.0, dot(norm, normalize (lightDir)));",
"   vec3 view = normalize(-rd);",
"   vec3 heading = normalize(view + normalize (lightDir));",
"   float spec = pow(max(0.0, dot(heading, norm)), specularHardness);",
"",
"   float fresnel = 0.0;",
"   if (reflections)",
"   {",
"      fresnel = pow(1.0 - dot(view, norm), 5.0);",
"      fresnel = mix(0.0, 1.0, min(1.0, fresnel));",
"   }",
"",
"   light = (diffuse * light) + (spec * specular * lightColour) * (1.0-fresnel);",
"",
"   if (fresnel > 0.0)",
"   {",
"      vec3 refrd = reflect(rd, norm);",
"      light += Sky(refrd) * fresnel;",
"   }",
"",
"   // attenuation",
"   vec3 dist = pos - ro;",
"   float atten = max(1.0 - dot(dist,dist) * 0.001, 0.0);",
"   light += WATER_COLOR * (pos.y - seaHeight) * 0.20 * atten;",
"",
"   light = Fog(light, rd, length(ro-pos));",
"",
"   return light;",
"}",
"",
"// Original method by David Hoskins",
"vec3 PostEffects(vec3 rgb, vec2 xy)",
"{",
"   rgb = pow(rgb, vec3(GAMMA));",
"   rgb = mix(vec3(.5), mix(vec3(dot(vec3(.2125, .7154, .0721), rgb*BRIGHTNESS)), rgb*BRIGHTNESS, SATURATION), CONTRAST);",
"   rgb *= .4+0.5*pow(40.0*xy.x*xy.y*(1.0-xy.x)*(1.0-xy.y), 0.2 ); ",
"   return rgb;",
"}",
"",
"// Camera function by TekF",
"// Compute ray from camera parameters",
"vec3 GetRay(vec3 dir, vec2 pos)",
"{",
"   pos = pos - 0.5;",
"   pos.x *= resolution.x/resolution.y;",
"",
"   dir = normalize(dir);",
"   vec3 right = normalize(cross(vec3(0.,1.,0.),dir));",
"   vec3 up = normalize(cross(dir,right));",
"",
"   return dir + right*pos.x + up*pos.y;",
"}",
"",
"vec4 March(vec3 ro, vec3 rd)",
"{",
"   float t = 0.0;",
"   float d = 1.0;",
"   for (int i=0; i<RAY_DEPTH; i++)",
"   {",
"      vec3 p = ro + rd * t;",
"      d = Dist(p);",
"      if (abs(d) < DISTANCE_MIN)",
"      {",
"         return vec4(p, 1.0);",
"      }",
"      t += d;",
"      if (t >= MAX_DEPTH) break;",
"   }",
"   return vec4(0.0);",
"}",
"",
"void main()",
"{",
"   resolution = vec2 (x3d_Viewport .zw);",
"",
"   vec3 off = vec3(0.0);",
"   if (moveCamera) off.z -= time*0.5;",
"",
"   vec2 p = gl_FragCoord.xy / resolution.xy;",
"   vec3 ro = cameraPos + off;",
"   vec3 rd = normalize(GetRay((cameraLookat-off)-cameraPos+off, p));",
"",
"   vec4 res = March(ro, rd);",
"   if (res.a == 1.0) res.rgb = Shading(res.rgb, rd, GetNormal(res.rgb), ro).rgb;",
"   else res.rgb = Sky(rd);",
"   if (postEffects) res.rgb = PostEffects(res.rgb, p);",
"",
"   gl_FragColor = vec4(res.rgb, 1.0);",
"}",
"",
""
]
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      { "MetadataSet":
                        {
                          "@name":"AxonometricGrid",
                          "@DEF":"AxonometricGrid",
                          "@reference":"http://titania.create3000.de",
                          "-value":[
                            { "MetadataBoolean":
                              {
                                "@name":"enabled",
                                "@DEF":"enabled_2",
                                "@reference":"http://titania.create3000.de",
                                "@value":[false]
                              }
                            }
                          ]
                        }
                      },
                      { "MetadataSet":
                        {
                          "@name":"LayerSet",
                          "@DEF":"LayerSet",
                          "@reference":"http://titania.create3000.de",
                          "-value":[
                            { "MetadataInteger":
                              {
                                "@name":"activeLayer",
                                "@DEF":"activeLayer",
                                "@reference":"http://titania.create3000.de",
                                "@value":[2]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
            }
          },
          { "LayerSet":
            {
              "@order":[1,2],
              "-layers":[
                { "LayoutLayer":
                  {
                    "-layout":
                      { "Layout":
                        {
                          "@size":[1]
                        }
                      },
                    "-children":[
                      { "NavigationInfo":
                        {
                          "@type":["NONE"]
                        }
                      },
                      { "TimeSensor":
                        {
                          "@DEF":"Timer",
                          "@cycleInterval":10000,
                          "@loop":true
                        }
                      },
                      { "ScalarInterpolator":
                        {
                          "@DEF":"_1",
                          "@key":[0,1],
                          "@keyValue":[0,10000]
                        }
                      },
                      { "Transform":
                        {
                          "@DEF":"Rectangle2D",
                          "-children":[
                            { "Shape":
                              {
                                "-appearance":
                                  { "Appearance":
                                    {
                                      "-material":
                                        { "Material":
                                          {
                                          }
                                        },
                                      "-shaders":[
                                        { "ComposedShader":
                                          {
                                            "@DEF":"WaterShader",
                                            "@language":"GLSL",
                                            "field": [
                                              {
                                                "@name":"time",
                                                "@accessType":"inputOutput",
                                                "@type":"SFFloat"
                                              },
                                              {
                                                "@name":"diffuse",
                                                "@accessType":"inputOutput",
                                                "@type":"SFColor",
                                                "@value":[0.1,0.1,0.1]
                                              },
                                              {
                                                "@name":"specular",
                                                "@accessType":"inputOutput",
                                                "@type":"SFFloat",
                                                "@value":8
                                              },
                                              {
                                                "@name":"specularHardness",
                                                "@accessType":"inputOutput",
                                                "@type":"SFFloat",
                                                "@value":512
                                              },
                                              {
                                                "@name":"postEffects",
                                                "@accessType":"inputOutput",
                                                "@type":"SFBool",
                                                "@value":true
                                              },
                                              {
                                                "@name":"moveCamera",
                                                "@accessType":"inputOutput",
                                                "@type":"SFBool",
                                                "@value":true
                                              },
                                              {
                                                "@name":"reflections",
                                                "@accessType":"inputOutput",
                                                "@type":"SFBool",
                                                "@value":true
                                              },
                                              {
                                                "@name":"seaHeight",
                                                "@accessType":"inputOutput",
                                                "@type":"SFFloat",
                                                "@value":-0.5
                                              },
                                              {
                                                "@name":"cameraPos",
                                                "@accessType":"inputOutput",
                                                "@type":"SFVec3f",
                                                "@value":[0,5,0]
                                              },
                                              {
                                                "@name":"cameraLookat",
                                                "@accessType":"inputOutput",
                                                "@type":"SFVec3f",
                                                "@value":[-155.152,-100,-100]
                                              },
                                              {
                                                "@name":"lightDir",
                                                "@accessType":"inputOutput",
                                                "@type":"SFVec3f",
                                                "@value":[-1,0.8,-1]
                                              },
                                              {
                                                "@name":"lightColour",
                                                "@accessType":"inputOutput",
                                                "@type":"SFVec3f",
                                                "@value":[0.7,0.8,0.9]
                                              }
                                            ],
                                            "-parts":[
                                              { "ShaderPart":
                                                {
                                                  "@DEF":"WaterVertexShader",
                                                  "@type":"VERTEX",
                                                  "#sourceText":[
"",
"data:text/plain,",
"",
"precision mediump float;",
"",
"uniform mat4 x3d_ProjectionMatrix;",
"uniform mat4 x3d_ModelViewMatrix;",
"",
"attribute vec4 x3d_Vertex;",
"",
"varying vec4 vertex;",
"",
"void main ()",
"{",
"\tvertex = x3d_ModelViewMatrix * x3d_Vertex;",
"",
"\tgl_Position = x3d_ProjectionMatrix * vertex;",
"}",
"",
""
]
                                                }
                                              },
                                              { "ShaderPart":
                                                {
                                                  "@USE":"WaterFragmentShader"
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      ]
                                    }
                                  },
                                "-geometry":
                                  { "Rectangle2D":
                                    {
                                      "@size":[1,1]
                                    }
                                  }
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                { "Layer":
                  {
                    "@DEF":"HUD",
                    "-metadata":
                      { "MetadataSet":
                        {
                          "@name":"Titania",
                          "@DEF":"Titania_1",
                          "@reference":"http://titania.create3000.de",
                          "-value":[
                            { "MetadataSet":
                              {
                                "@name":"AngleGrid",
                                "@DEF":"AngleGrid_1",
                                "@reference":"http://titania.create3000.de",
                                "-value":[
                                  { "MetadataBoolean":
                                    {
                                      "@name":"enabled",
                                      "@DEF":"enabled_3",
                                      "@reference":"http://titania.create3000.de",
                                      "@value":[false]
                                    }
                                  }
                                ]
                              }
                            },
                            { "MetadataSet":
                              {
                                "@name":"Grid",
                                "@DEF":"Grid_1",
                                "@reference":"http://titania.create3000.de",
                                "-value":[
                                  { "MetadataBoolean":
                                    {
                                      "@name":"enabled",
                                      "@DEF":"enabled_4",
                                      "@reference":"http://titania.create3000.de",
                                      "@value":[false]
                                    }
                                  },
                                  { "MetadataFloat":
                                    {
                                      "@name":"scale",
                                      "@DEF":"scale",
                                      "@reference":"http://titania.create3000.de",
                                      "@value":[0.05,0.05,0.05]
                                    }
                                  },
                                  { "MetadataInteger":
                                    {
                                      "@name":"dimension",
                                      "@DEF":"dimension",
                                      "@reference":"http://titania.create3000.de",
                                      "@value":[89,10,40]
                                    }
                                  },
                                  { "MetadataDouble":
                                    {
                                      "@name":"rotation",
                                      "@DEF":"rotation",
                                      "@reference":"http://titania.create3000.de",
                                      "@value":[1,0,0,1.5707963267949]
                                    }
                                  }
                                ]
                              }
                            },
                            { "MetadataSet":
                              {
                                "@name":"AxonometricGrid",
                                "@DEF":"AxonometricGrid_1",
                                "@reference":"http://titania.create3000.de",
                                "-value":[
                                  { "MetadataBoolean":
                                    {
                                      "@name":"enabled",
                                      "@DEF":"enabled_5",
                                      "@reference":"http://titania.create3000.de",
                                      "@value":[false]
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                    "-children":[
                      { "NavigationInfo":
                        {
                          "@type":["NONE"],
                          "@headlight":false
                        }
                      },
                      { "OrthoViewpoint":
                        {
                        }
                      },
                      { "Transform":
                        {
                          "@DEF":"Header",
                          "@translation":[-1.6905,0.857504,-1],
                          "@scale":[0.0672307,0.0672307,0.0672307],
                          "-children":[
                            { "Shape":
                              {
                                "-appearance":
                                  { "Appearance":
                                    {
                                      "-material":
                                        { "Material":
                                          {
                                            "@emissiveColor":[1,1,1]
                                          }
                                        }
                                    }
                                  },
                                "-geometry":
                                  { "Text":
                                    {
                                      "@string":["Waves"],
                                      "@solid":true,
                                      "-fontStyle":
                                        { "FontStyle":
                                          {
                                            "@family":[", ","UbuntuSANS"],
                                            "@size":1.61,
                                            "@justify":[", ","BEGINFIRST"]
                                          }
                                        }
                                    }
                                  }
                              }
                            }
                          ]
                        }
                      },
                      { "Transform":
                        {
                          "@DEF":"Header_1",
                          "@translation":[1.675,-0.65,-1],
                          "@scale":[0.0672307,0.0672307,0.0672307],
                          "-children":[
                            { "Shape":
                              {
                                "-appearance":
                                  { "Appearance":
                                    {
                                      "-material":
                                        { "Material":
                                          {
                                            "@DEF":"Artdeco31",
                                            "@ambientIntensity":0,
                                            "@diffuseColor":[0,0,0],
                                            "@emissiveColor":[1,1,1],
                                            "@shininess":0
                                          }
                                        }
                                    }
                                  },
                                "-geometry":
                                  { "Text":
                                    {
                                      "@string":["Camera"],
                                      "@solid":true,
                                      "-fontStyle":
                                        { "FontStyle":
                                          {
                                            "@family":[", ","UbuntuSANS"],
                                            "@style":"BOLD",
                                            "@size":0.68,
                                            "@justify":["END"]
                                          }
                                        }
                                    }
                                  }
                              }
                            }
                          ]
                        }
                      },
                      { "Group":
                        {
                          "@DEF":"Fields",
                          "-children":[
                            { "Transform":
                              {
                                "@DEF":"XSlider",
                                "@translation":[0.275,-0.723,1.66533e-16],
                                "@center":[0,-0.027,0],
                                "-children":[
                                  { "Transform":
                                    {
                                      "@DEF":"IndexedLineSet",
                                      "-children":[
                                        { "Shape":
                                          {
                                            "-appearance":
                                              { "Appearance":
                                                {
                                                  "-lineProperties":
                                                    { "LineProperties":
                                                      {
                                                        "@linewidthScaleFactor":2
                                                      }
                                                    },
                                                  "-material":
                                                    { "Material":
                                                      {
                                                        "@DEF":"Artdeco31_1",
                                                        "@emissiveColor":[1,1,1]
                                                      }
                                                    }
                                                }
                                              },
                                            "-geometry":
                                              { "IndexedLineSet":
                                                {
                                                  "@colorPerVertex":false,
                                                  "@coordIndex":[0,1,-1],
                                                  "-coord":
                                                    { "Coordinate":
                                                      {
                                                        "@point":[0,0,0,1,0,0]
                                                      }
                                                    }
                                                }
                                              }
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  { "Transform":
                                    {
                                      "-children":[
                                        { "Transform":
                                          {
                                            "@DEF":"Rectangle2D_1",
                                            "@translation":[0.196969,0,0],
                                            "@scale":[0.027,0.0267372,0.0267372],
                                            "-children":[
                                              { "Shape":
                                                {
                                                  "-appearance":
                                                    { "Appearance":
                                                      {
                                                        "-material":
                                                          { "Material":
                                                            {
                                                              "@emissiveColor":[1,1,1]
                                                            }
                                                          }
                                                      }
                                                    },
                                                  "-geometry":
                                                    { "Disk2D":
                                                      {
                                                      }
                                                    }
                                                }
                                              }
                                            ]
                                          }
                                        },
                                        { "PlaneSensor":
                                          {
                                            "@DEF":"_2",
                                            "@offset":[0.196969,0,0],
                                            "@maxPosition":[1,0]
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  { "Script":
                                    {
                                      "@DEF":"XScript",
                                      "field": [
                                        {
                                          "@name":"set_translation",
                                          "@accessType":"inputOnly",
                                          "@type":"SFVec3f"
                                        },
                                        {
                                          "@name":"description",
                                          "@accessType":"inputOutput",
                                          "@type":"SFString",
                                          "@value":"x"
                                        },
                                        {
                                          "@name":"minValue",
                                          "@accessType":"inputOutput",
                                          "@type":"SFFloat",
                                          "@value":-256
                                        },
                                        {
                                          "@name":"maxValue",
                                          "@accessType":"inputOutput",
                                          "@type":"SFFloat",
                                          "@value":256
                                        },
                                        {
                                          "@name":"value_changed",
                                          "@accessType":"outputOnly",
                                          "@type":"SFFloat"
                                        },
                                        {
                                          "@name":"string_changed",
                                          "@accessType":"outputOnly",
                                          "@type":"MFString"
                                        },
                                        {
                                          "@name":"currentValue",
                                          "@accessType":"initializeOnly",
                                          "@type":"SFFloat",
                                          "@value":-155.15
                                        }
                                      ],
                                      "#sourceText":[
"",
"ecmascript:",
"",
"function initialized ()",
"{",
"\tset_value (currentValue);",
"}",
"",
"function set_translation (value)",
"{",
"\tset_value (minValue + (value .x * (maxValue - minValue)));",
"}",
"",
"function set_value (value)",
"{",
"\tvar rounded = value .toFixed (2);",
"",
"\tif (rounded == currentValue)",
"\t\treturn;",
"",
"\tcurrentValue       = rounded;",
"\tstring_changed [0] = description + \" \" + rounded;",
"\tvalue_changed      = value;",
"}",
"",
""
]
                                    }
                                  }
                                ]
                              }
                            },
                            { "Transform":
                              {
                                "@DEF":"XText",
                                "@translation":[1.675,-0.750004,-2.02108e-06],
                                "@scale":[0.0672307,0.0672307,0.0672307],
                                "-children":[
                                  { "Shape":
                                    {
                                      "-appearance":
                                        { "Appearance":
                                          {
                                            "-material":
                                              { "Material":
                                                {
                                                  "@emissiveColor":[1,1,1]
                                                }
                                              }
                                          }
                                        },
                                      "-geometry":
                                        { "Text":
                                          {
                                            "@DEF":"_3",
                                            "@string":["x -155.15"],
                                            "@solid":true,
                                            "-fontStyle":
                                              { "FontStyle":
                                                {
                                                  "@family":[", ","UbuntuSANS"],
                                                  "@justify":["END"]
                                                }
                                              }
                                          }
                                        }
                                    }
                                  }
                                ]
                              }
                            },
                            { "Transform":
                              {
                                "@DEF":"YSlider",
                                "@translation":[0.275,-0.823,1.88738e-16],
                                "@center":[0,-0.027,0],
                                "-children":[
                                  { "Transform":
                                    {
                                      "@DEF":"IndexedLineSet_1",
                                      "-children":[
                                        { "Shape":
                                          {
                                            "-appearance":
                                              { "Appearance":
                                                {
                                                  "-lineProperties":
                                                    { "LineProperties":
                                                      {
                                                        "@linewidthScaleFactor":2
                                                      }
                                                    },
                                                  "-material":
                                                    { "Material":
                                                      {
                                                        "@DEF":"Artdeco31_2",
                                                        "@emissiveColor":[1,1,1]
                                                      }
                                                    }
                                                }
                                              },
                                            "-geometry":
                                              { "IndexedLineSet":
                                                {
                                                  "@colorPerVertex":false,
                                                  "@coordIndex":[0,1,-1],
                                                  "-coord":
                                                    { "Coordinate":
                                                      {
                                                        "@point":[0,0,0,1,0,0]
                                                      }
                                                    }
                                                }
                                              }
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  { "Transform":
                                    {
                                      "-children":[
                                        { "Transform":
                                          {
                                            "@DEF":"Rectangle2D_2",
                                            "@scale":[0.027,0.0267372,0.0267372],
                                            "-children":[
                                              { "Shape":
                                                {
                                                  "-appearance":
                                                    { "Appearance":
                                                      {
                                                        "-material":
                                                          { "Material":
                                                            {
                                                              "@emissiveColor":[1,1,1]
                                                            }
                                                          }
                                                      }
                                                    },
                                                  "-geometry":
                                                    { "Disk2D":
                                                      {
                                                      }
                                                    }
                                                }
                                              }
                                            ]
                                          }
                                        },
                                        { "PlaneSensor":
                                          {
                                            "@DEF":"_4",
                                            "@maxPosition":[1,0]
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  { "Script":
                                    {
                                      "@DEF":"YScript",
                                      "field": [
                                        {
                                          "@name":"set_translation",
                                          "@accessType":"inputOnly",
                                          "@type":"SFVec3f"
                                        },
                                        {
                                          "@name":"description",
                                          "@accessType":"inputOutput",
                                          "@type":"SFString",
                                          "@value":"y"
                                        },
                                        {
                                          "@name":"minValue",
                                          "@accessType":"inputOutput",
                                          "@type":"SFFloat",
                                          "@value":-100
                                        },
                                        {
                                          "@name":"maxValue",
                                          "@accessType":"inputOutput",
                                          "@type":"SFFloat",
                                          "@value":100
                                        },
                                        {
                                          "@name":"value_changed",
                                          "@accessType":"outputOnly",
                                          "@type":"SFFloat"
                                        },
                                        {
                                          "@name":"string_changed",
                                          "@accessType":"outputOnly",
                                          "@type":"MFString"
                                        },
                                        {
                                          "@name":"currentValue",
                                          "@accessType":"initializeOnly",
                                          "@type":"SFFloat",
                                          "@value":-100
                                        }
                                      ],
                                      "#sourceText":[
"",
"ecmascript:",
"",
"function initialized ()",
"{",
"\tset_value (currentValue);",
"}",
"",
"function set_translation (value)",
"{",
"\tset_value (minValue + (value .x * (maxValue - minValue)));",
"}",
"",
"function set_value (value)",
"{",
"\tvar rounded = value .toFixed (2);",
"",
"\tif (rounded == currentValue)",
"\t\treturn;",
"",
"\tcurrentValue       = rounded;",
"\tstring_changed [0] = description + \" \" + rounded;",
"\tvalue_changed      = value;",
"}",
"",
""
]
                                    }
                                  }
                                ]
                              }
                            },
                            { "Transform":
                              {
                                "@DEF":"YText",
                                "@translation":[1.675,-0.850004,-2.38855e-06],
                                "@scale":[0.0672307,0.0672307,0.0672307],
                                "-children":[
                                  { "Shape":
                                    {
                                      "-appearance":
                                        { "Appearance":
                                          {
                                            "-material":
                                              { "Material":
                                                {
                                                  "@emissiveColor":[1,1,1]
                                                }
                                              }
                                          }
                                        },
                                      "-geometry":
                                        { "Text":
                                          {
                                            "@DEF":"_5",
                                            "@string":["y -100.00"],
                                            "@solid":true,
                                            "-fontStyle":
                                              { "FontStyle":
                                                {
                                                  "@family":[", ","UbuntuSANS"],
                                                  "@justify":["END"]
                                                }
                                              }
                                          }
                                        }
                                    }
                                  }
                                ]
                              }
                            },
                            { "Transform":
                              {
                                "@DEF":"ZText",
                                "@translation":[1.675,-0.950004,-2.75602e-06],
                                "@scale":[0.0672307,0.0672307,0.0672307],
                                "-children":[
                                  { "Shape":
                                    {
                                      "-appearance":
                                        { "Appearance":
                                          {
                                            "-material":
                                              { "Material":
                                                {
                                                  "@emissiveColor":[1,1,1]
                                                }
                                              }
                                          }
                                        },
                                      "-geometry":
                                        { "Text":
                                          {
                                            "@DEF":"_6",
                                            "@string":["z -100.00"],
                                            "@solid":true,
                                            "-fontStyle":
                                              { "FontStyle":
                                                {
                                                  "@family":[", ","UbuntuSANS"],
                                                  "@justify":["END"]
                                                }
                                              }
                                          }
                                        }
                                    }
                                  }
                                ]
                              }
                            },
                            { "Transform":
                              {
                                "@DEF":"ZSlider",
                                "@translation":[0.275,-0.923,2.10943e-16],
                                "@center":[0,-0.027,0],
                                "-children":[
                                  { "Transform":
                                    {
                                      "@DEF":"IndexedLineSet_2",
                                      "-children":[
                                        { "Shape":
                                          {
                                            "-appearance":
                                              { "Appearance":
                                                {
                                                  "-lineProperties":
                                                    { "LineProperties":
                                                      {
                                                        "@linewidthScaleFactor":2
                                                      }
                                                    },
                                                  "-material":
                                                    { "Material":
                                                      {
                                                        "@DEF":"Artdeco31_3",
                                                        "@emissiveColor":[1,1,1]
                                                      }
                                                    }
                                                }
                                              },
                                            "-geometry":
                                              { "IndexedLineSet":
                                                {
                                                  "@colorPerVertex":false,
                                                  "@coordIndex":[0,1,-1],
                                                  "-coord":
                                                    { "Coordinate":
                                                      {
                                                        "@point":[0,0,0,1,0,0]
                                                      }
                                                    }
                                                }
                                              }
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  { "Transform":
                                    {
                                      "-children":[
                                        { "Transform":
                                          {
                                            "@DEF":"Rectangle2D_3",
                                            "@scale":[0.027,0.0267372,0.0267372],
                                            "-children":[
                                              { "Shape":
                                                {
                                                  "-appearance":
                                                    { "Appearance":
                                                      {
                                                        "-material":
                                                          { "Material":
                                                            {
                                                              "@emissiveColor":[1,1,1]
                                                            }
                                                          }
                                                      }
                                                    },
                                                  "-geometry":
                                                    { "Disk2D":
                                                      {
                                                      }
                                                    }
                                                }
                                              }
                                            ]
                                          }
                                        },
                                        { "PlaneSensor":
                                          {
                                            "@DEF":"_7",
                                            "@maxPosition":[1,0]
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  { "Script":
                                    {
                                      "@DEF":"ZScript",
                                      "field": [
                                        {
                                          "@name":"set_translation",
                                          "@accessType":"inputOnly",
                                          "@type":"SFVec3f"
                                        },
                                        {
                                          "@name":"description",
                                          "@accessType":"inputOutput",
                                          "@type":"SFString",
                                          "@value":"z"
                                        },
                                        {
                                          "@name":"minValue",
                                          "@accessType":"inputOutput",
                                          "@type":"SFFloat",
                                          "@value":-100
                                        },
                                        {
                                          "@name":"maxValue",
                                          "@accessType":"inputOutput",
                                          "@type":"SFFloat",
                                          "@value":100
                                        },
                                        {
                                          "@name":"value_changed",
                                          "@accessType":"outputOnly",
                                          "@type":"SFFloat"
                                        },
                                        {
                                          "@name":"string_changed",
                                          "@accessType":"outputOnly",
                                          "@type":"MFString"
                                        },
                                        {
                                          "@name":"currentValue",
                                          "@accessType":"initializeOnly",
                                          "@type":"SFFloat",
                                          "@value":-100
                                        }
                                      ],
                                      "#sourceText":[
"",
"ecmascript:",
"",
"function initialized ()",
"{",
"\tset_value (currentValue);",
"}",
"",
"function set_translation (value)",
"{",
"\tset_value (minValue + (value .x * (maxValue - minValue)));",
"}",
"",
"function set_value (value)",
"{",
"\tvar rounded = value .toFixed (2);",
"",
"\tif (rounded == currentValue)",
"\t\treturn;",
"",
"\tcurrentValue       = rounded;",
"\tstring_changed [0] = description + \" \" + rounded;",
"\tvalue_changed      = value;",
"}",
"",
""
]
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      { "Script":
                        {
                          "@DEF":"CamLookAtScript",
                          "field": [
                            {
                              "@name":"x",
                              "@accessType":"inputOutput",
                              "@type":"SFFloat",
                              "@value":-155.152
                            },
                            {
                              "@name":"y",
                              "@accessType":"inputOutput",
                              "@type":"SFFloat",
                              "@value":-100
                            },
                            {
                              "@name":"z",
                              "@accessType":"inputOutput",
                              "@type":"SFFloat",
                              "@value":-100
                            },
                            {
                              "@name":"cameraLookAt_changed",
                              "@accessType":"outputOnly",
                              "@type":"SFVec3f"
                            }
                          ],
                          "#sourceText":[
"",
"ecmascript:",
"",
"function eventsProcessed ()",
"{",
"\tcameraLookAt_changed = new SFVec3f (x, y, z);",
"}",
""
]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          },
          { "ROUTE":
            {
              "@fromNode":"_1",
              "@fromField":"value_changed",
              "@toNode":"WaterShader",
              "@toField":"set_time"
            }
          },
          { "ROUTE":
            {
              "@fromNode":"Timer",
              "@fromField":"fraction_changed",
              "@toNode":"_1",
              "@toField":"set_fraction"
            }
          },
          { "ROUTE":
            {
              "@fromNode":"_7",
              "@fromField":"translation_changed",
              "@toNode":"ZScript",
              "@toField":"set_translation"
            }
          },
          { "ROUTE":
            {
              "@fromNode":"_7",
              "@fromField":"translation_changed",
              "@toNode":"Rectangle2D_3",
              "@toField":"set_translation"
            }
          },
          { "ROUTE":
            {
              "@fromNode":"ZScript",
              "@fromField":"string_changed",
              "@toNode":"_6",
              "@toField":"set_string"
            }
          },
          { "ROUTE":
            {
              "@fromNode":"YScript",
              "@fromField":"string_changed",
              "@toNode":"_5",
              "@toField":"set_string"
            }
          },
          { "ROUTE":
            {
              "@fromNode":"_4",
              "@fromField":"translation_changed",
              "@toNode":"YScript",
              "@toField":"set_translation"
            }
          },
          { "ROUTE":
            {
              "@fromNode":"_4",
              "@fromField":"translation_changed",
              "@toNode":"Rectangle2D_2",
              "@toField":"set_translation"
            }
          },
          { "ROUTE":
            {
              "@fromNode":"XScript",
              "@fromField":"string_changed",
              "@toNode":"_3",
              "@toField":"set_string"
            }
          },
          { "ROUTE":
            {
              "@fromNode":"_2",
              "@fromField":"translation_changed",
              "@toNode":"XScript",
              "@toField":"set_translation"
            }
          },
          { "ROUTE":
            {
              "@fromNode":"_2",
              "@fromField":"translation_changed",
              "@toNode":"Rectangle2D_1",
              "@toField":"set_translation"
            }
          },
          { "ROUTE":
            {
              "@fromNode":"CamLookAtScript",
              "@fromField":"cameraLookAt_changed",
              "@toNode":"WaterShader",
              "@toField":"set_cameraLookat"
            }
          },
          { "ROUTE":
            {
              "@fromNode":"ZScript",
              "@fromField":"value_changed",
              "@toNode":"CamLookAtScript",
              "@toField":"set_z"
            }
          },
          { "ROUTE":
            {
              "@fromNode":"YScript",
              "@fromField":"value_changed",
              "@toNode":"CamLookAtScript",
              "@toField":"set_y"
            }
          },
          { "ROUTE":
            {
              "@fromNode":"XScript",
              "@fromField":"value_changed",
              "@toNode":"CamLookAtScript",
              "@toField":"set_x"
            }
          }
        ]
    }
  }
}