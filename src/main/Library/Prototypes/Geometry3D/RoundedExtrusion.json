{ "X3D": {
    "encoding":"UTF-8",
    "@profile":"Full",
    "@version":"3.3",
    "@xsd:noNamespaceSchemaLocation":"http://www.web3d.org/specifications/x3d-3.3.xsd",
    "JSON schema":"http://www.web3d.org/specifications/x3d-3.3-JSONSchema.json",
    "head": {
        "meta": [
          {
            "@name":"comment",
            "@content":"World of Titania"
          },
          {
            "@name":"created",
            "@content":"Sun, 03 Apr 2016 04:01:10 GMT"
          },
          {
            "@name":"creator",
            "@content":"Holger Seelig"
          },
          {
            "@name":"generator",
            "@content":"Titania V1.4.0, http://titania.create3000.de"
          },
          {
            "@name":"identifier",
            "@content":"file:///home/holger/Projekte/Library/Prototypes/1/1.0/Geometry3D/RoundedExtrusion.x3d"
          },
          {
            "@name":"modified",
            "@content":"Mon, 04 Apr 2016 00:05:23 GMT"
          },
          {
            "@name":"translated",
            "@content":"24 May 2018"
          },
          {
            "@name":"generator",
            "@content":"X3dToJson.xslt, http://www.web3d.org/x3d/stylesheets/X3dToJson.html"
          },
          {
            "@name":"reference",
            "@content":"X3D JSON encoding: http://www.web3d.org/wiki/index.php/X3D_JSON_Encoding"
          }
        ]
    },
    "Scene": {
        "-children":[
          { "ProtoDeclare":
            {
              "@name":"RoundedExtrusion",
              "ProtoInterface": {
                  "field": [
                    {
                      "@name":"beginCap",
                      "@accessType":"initializeOnly",
                      "@type":"SFBool",
                      "@value":true
                    },
                    {
                      "@name":"endCap",
                      "@accessType":"initializeOnly",
                      "@type":"SFBool",
                      "@value":true
                    },
                    {
                      "@name":"solid",
                      "@accessType":"initializeOnly",
                      "@type":"SFBool",
                      "@value":true
                    },
                    {
                      "@name":"ccw",
                      "@accessType":"initializeOnly",
                      "@type":"SFBool",
                      "@value":true
                    },
                    {
                      "@name":"convex",
                      "@accessType":"initializeOnly",
                      "@type":"SFBool",
                      "@value":true
                    },
                    {
                      "@name":"creaseAngle",
                      "@accessType":"initializeOnly",
                      "@type":"SFFloat"
                    },
                    {
                      "@name":"crossSection",
                      "@accessType":"inputOutput",
                      "@type":"MFVec2f",
                      "@value":[1,1,1,-1,-1,-1,-1,1,1,1]
                    },
                    {
                      "@name":"orientation",
                      "@accessType":"inputOutput",
                      "@type":"MFRotation",
                      "@value":[0,0,1,0]
                    },
                    {
                      "@name":"scale",
                      "@accessType":"inputOutput",
                      "@type":"MFVec2f",
                      "@value":[1,1]
                    },
                    {
                      "@name":"spine",
                      "@accessType":"inputOutput",
                      "@type":"MFVec3f",
                      "@value":[0,0,0,0,1,0]
                    },
                    {
                      "@name":"cornerRadius",
                      "@accessType":"inputOutput",
                      "@type":"SFFloat",
                      "@value":1
                    },
                    {
                      "@name":"cornerDimension",
                      "@accessType":"inputOutput",
                      "@type":"SFInt32",
                      "@value":16
                    }
                  ]
              },
              "ProtoBody": {
                  "-children":[
                    { "Extrusion":
                      {
                        "@DEF":"_1",
                        "IS": {
                            "connect": [
                              {
                                "@nodeField":"beginCap",
                                "@protoField":"beginCap"
                              },
                              {
                                "@nodeField":"endCap",
                                "@protoField":"endCap"
                              },
                              {
                                "@nodeField":"solid",
                                "@protoField":"solid"
                              },
                              {
                                "@nodeField":"ccw",
                                "@protoField":"ccw"
                              },
                              {
                                "@nodeField":"convex",
                                "@protoField":"convex"
                              },
                              {
                                "@nodeField":"creaseAngle",
                                "@protoField":"creaseAngle"
                              },
                              {
                                "@nodeField":"crossSection",
                                "@protoField":"crossSection"
                              },
                              {
                                "@nodeField":"orientation",
                                "@protoField":"orientation"
                              },
                              {
                                "@nodeField":"scale",
                                "@protoField":"scale"
                              }
                            ]
                        }
                      }
                    },
                    { "Script":
                      {
                        "@DEF":"RoundedExtrusionScript",
                        "field": [
                          {
                            "@name":"spine",
                            "@accessType":"inputOutput",
                            "@type":"MFVec3f"
                          },
                          {
                            "@name":"cornerRadius",
                            "@accessType":"inputOutput",
                            "@type":"SFFloat"
                          },
                          {
                            "@name":"cornerDimension",
                            "@accessType":"inputOutput",
                            "@type":"SFInt32"
                          },
                          {
                            "@name":"geometry",
                            "@accessType":"initializeOnly",
                            "@type":"SFNode",
                            "-children":[
                              { "Extrusion":
                                {
                                  "@USE":"_1"
                                }
                              }
                            ]
                          }
                        ],
                        "IS": {
                            "connect": [
                              {
                                "@nodeField":"spine",
                                "@protoField":"spine"
                              },
                              {
                                "@nodeField":"cornerRadius",
                                "@protoField":"cornerRadius"
                              },
                              {
                                "@nodeField":"cornerDimension",
                                "@protoField":"cornerDimension"
                              }
                            ]
                        },
                        "#sourceText":[
"",
"ecmascript:",
"",
"var",
"\tidentity = new SFRotation (),",
"\tcenter   = new SFVec3f ();",
"",
"function initialize ()",
"{",
"\teventsProcessed ();",
"}",
"",
"function eventsProcessed ()",
"{",
"\tvar roundedSpine = new MFVec3f ();",
"",
"\tif (spine .length)",
"\t\troundedSpine [0] = spine [0];",
"",
"\tfor (var i = 1, length = spine .length - 1; i < length; ++ i)",
"\t{",
"\t\tvar",
"\t\t\tvector1    = spine [i - 1] .subtract (spine [i]),",
"\t\t\tvector2    = spine [i + 1] .subtract (spine [i]),",
"\t\t\tnormal1    = vector1 .normalize (),",
"\t\t\tnormal2    = vector2 .normalize (),",
"\t\t\tnormal     = normal1 .cross (normal2) .normalize (), // plane normal",
"\t\t\tdirection1 = normal1 .cross (normal),                // line direction",
"\t\t\tdirection2 = normal2 .cross (normal),                // line direction",
"\t\t\tlength1    = vector1 .length (),",
"\t\t\tlength2    = vector2 .length (),",
"\t\t\tradius1    = cornerRadius < length1 / 2 ? cornerRadius : length1 / 2,",
"\t\t\tradius2    = cornerRadius < length2 / 2 ? cornerRadius : length2 / 2,",
"\t\t\tradius     = Math .min (radius1, radius2);",
"",
"\t\tvar",
"\t\t\tstartPoint = spine [i] .add (normal1 .multiply (radius)),",
"\t\t\tendPoint   = spine [i] .add (normal2 .multiply (radius)),",
"\t\t\ttheta      = get_closest_point (startPoint, direction1, endPoint, direction2, center);",
"",
"\t\tif (Math .abs (theta) >= 1)",
"\t\t\troundedSpine [roundedSpine .length] = spine [i];",
"",
"\t\telse",
"\t\t{",
"\t\t   var",
"\t\t      segment1  = startPoint .subtract (center),",
"\t\t      segment2  = endPoint   .subtract (center),",
"\t\t      rotation  = new SFRotation (segment1, segment2);",
"\t\t\t\tangle     = Math .PI - Math .acos (clamp (normal1 .dot (normal2), -1, 1)),",
"\t\t\t\tdimension = Math .round (angle / (2 * Math .PI) * cornerDimension);",
"\t\t\t",
"\t\t\tif (dimension)",
"\t\t\t{",
"\t\t\t\troundedSpine [roundedSpine .length] = startPoint;",
"",
"\t\t\t\tfor (var d = 1;  d < dimension; ++ d)",
"\t\t\t\t{",
"\t\t\t\t   var r = identity .slerp (rotation, d / dimension);",
"",
"\t\t\t\t\troundedSpine [roundedSpine .length] = center .add (r .multVec (segment1));",
"\t\t\t\t}",
"",
"\t\t\t\troundedSpine [roundedSpine .length] = endPoint;",
"\t\t\t}",
"\t\t\telse",
"\t\t\t   roundedSpine [roundedSpine .length] = spine [i];",
"\t\t}",
"\t}",
"",
"\tif (spine .length > 1)",
"\t\troundedSpine [roundedSpine .length] = spine [spine .length - 1];",
"",
"\tgeometry .spine = roundedSpine;",
"}",
"",
"function get_closest_point (point1, direction1, point2, direction2, closestPoint)",
"{",
"\tvar",
"\t\ttheta = direction1 .dot (direction2), // angle between both lines",
"\t\tu     = point2 .subtract (point1),",
"\t\tt     = (u .dot (direction1) - theta * u .dot (direction2)) / (1 - theta * theta);",
"",
"\tvar point = point1 .add (direction1 .multiply (t));",
"",
"\tclosestPoint .x = point .x;",
"\tclosestPoint .y = point .y;",
"\tclosestPoint .z = point .z;",
"",
"\treturn theta;",
"}",
"",
"function clamp (value, min, max)",
"{",
"\treturn value < min ? min : (value > max ? max : value);",
"}",
"",
""
]
                      }
                    }
                  ]
              }
            }
          },
          { "WorldInfo":
            {
              "-metadata":
                { "MetadataSet":
                  {
                    "@name":"Titania",
                    "@DEF":"Titania",
                    "@reference":"http://titania.create3000.de",
                    "-value":[
                      { "MetadataSet":
                        {
                          "@name":"AngleGrid",
                          "@DEF":"AngleGrid",
                          "@reference":"http://titania.create3000.de",
                          "-value":[
                            { "MetadataBoolean":
                              {
                                "@name":"enabled",
                                "@DEF":"enabled",
                                "@reference":"http://titania.create3000.de",
                                "@value":[false]
                              }
                            }
                          ]
                        }
                      },
                      { "MetadataSet":
                        {
                          "@name":"Grid",
                          "@DEF":"Grid",
                          "@reference":"http://titania.create3000.de",
                          "-value":[
                            { "MetadataBoolean":
                              {
                                "@name":"enabled",
                                "@DEF":"enabled_1",
                                "@reference":"http://titania.create3000.de",
                                "@value":[true]
                              }
                            }
                          ]
                        }
                      },
                      { "MetadataSet":
                        {
                          "@name":"NavigationInfo",
                          "@DEF":"NavigationInfo",
                          "@reference":"http://titania.create3000.de",
                          "-value":[
                            { "MetadataString":
                              {
                                "@name":"type",
                                "@DEF":"type",
                                "@reference":"http://titania.create3000.de",
                                "@value":["EXAMINE"]
                              }
                            }
                          ]
                        }
                      },
                      { "MetadataSet":
                        {
                          "@name":"Viewpoint",
                          "@DEF":"Viewpoint",
                          "@reference":"http://titania.create3000.de",
                          "-value":[
                            { "MetadataDouble":
                              {
                                "@name":"position",
                                "@DEF":"position",
                                "@reference":"http://titania.create3000.de",
                                "@value":[4.40744414009736,3.83242587352295,11.2482717533919]
                              }
                            },
                            { "MetadataDouble":
                              {
                                "@name":"orientation",
                                "@DEF":"orientation",
                                "@reference":"http://titania.create3000.de",
                                "@value":[-0.654276237355678,0.756188680690693,0.0100640164430718,0.478951594373692]
                              }
                            },
                            { "MetadataDouble":
                              {
                                "@name":"centerOfRotation",
                                "@DEF":"centerOfRotation",
                                "@reference":"http://titania.create3000.de",
                                "@value":[0,0,0]
                              }
                            }
                          ]
                        }
                      },
                      { "MetadataSet":
                        {
                          "@name":"Selection",
                          "@DEF":"Selection",
                          "@reference":"http://titania.create3000.de",
                          "-value":[
                            { "MetadataSet":
                              {
                                "@name":"previous",
                                "@DEF":"previous",
                                "@reference":"http://titania.create3000.de"
                              }
                            },
                            { "MetadataSet":
                              {
                                "@name":"children",
                                "@DEF":"children",
                                "@reference":"http://titania.create3000.de"
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
            }
          }
        ]
    }
  }
}