{ "X3D": {
    "encoding":"UTF-8",
    "@profile":"Full",
    "@version":"3.3",
    "@xsd:noNamespaceSchemaLocation":"http://www.web3d.org/specifications/x3d-3.3.xsd",
    "JSON schema":"https://www.web3d.org/specifications/x3d-3.3-JSONSchema.json",
    "head": {
        "meta": [
          {
            "@name":"comment",
            "@content":"World of Titania"
          },
          {
            "@name":"created",
            "@content":"Sun, 20 Sep 2015 06:48:35 GMT"
          },
          {
            "@name":"creator",
            "@content":"Holger Seelig"
          },
          {
            "@name":"generator",
            "@content":"Titania V1.1.0, http://titania.create3000.de"
          },
          {
            "@name":"modified",
            "@content":"Sun, 20 Sep 2015 06:48:35 GMT"
          },
          {
            "@name":"translated",
            "@content":"06 September 2021"
          },
          {
            "@name":"generator",
            "@content":"X3dToJson.xslt, https://www.web3d.org/x3d/stylesheets/X3dToJson.html"
          },
          {
            "@name":"reference",
            "@content":"X3D JSON encoding: https://www.web3d.org/wiki/index.php/X3D_JSON_Encoding"
          }
        ]
    },
    "Scene": {
        "-children":[
          { "ProtoDeclare":
            {
              "@name":"Torus",
              "ProtoInterface": {
                  "field": [
                    {
                      "@name":"minorRadius",
                      "@accessType":"inputOutput",
                      "@type":"SFFloat",
                      "@value":1
                    },
                    {
                      "@name":"majorRadius",
                      "@accessType":"inputOutput",
                      "@type":"SFFloat",
                      "@value":1
                    },
                    {
                      "@name":"minorDimension",
                      "@accessType":"inputOutput",
                      "@type":"SFInt32",
                      "@value":10
                    },
                    {
                      "@name":"majorDimension",
                      "@accessType":"inputOutput",
                      "@type":"SFInt32",
                      "@value":10
                    },
                    {
                      "@name":"solid",
                      "@accessType":"initializeOnly",
                      "@type":"SFBool",
                      "@value":true
                    }
                  ]
              },
              "ProtoBody": {
                  "-children":[
                    { "Extrusion":
                      {
                        "@DEF":"Geometry",
                        "@beginCap":false,
                        "@endCap":false,
                        "@creaseAngle":3.14159,
                        "IS": {
                            "connect": [
                              {
                                "@nodeField":"solid",
                                "@protoField":"solid"
                              }
                            ]
                        }
                      }
                    },
                    { "Script":
                      {
                        "@directOutput":true,
                        "field": [
                          {
                            "@name":"minorRadius",
                            "@accessType":"inputOutput",
                            "@type":"SFFloat"
                          },
                          {
                            "@name":"majorRadius",
                            "@accessType":"inputOutput",
                            "@type":"SFFloat"
                          },
                          {
                            "@name":"minorDimension",
                            "@accessType":"inputOutput",
                            "@type":"SFInt32"
                          },
                          {
                            "@name":"majorDimension",
                            "@accessType":"inputOutput",
                            "@type":"SFInt32"
                          },
                          {
                            "@name":"geometry",
                            "@accessType":"initializeOnly",
                            "@type":"SFNode",
                            "-children":[
                              { "Extrusion":
                                {
                                  "@USE":"Geometry"
                                }
                              }
                            ]
                          }
                        ],
                        "IS": {
                            "connect": [
                              {
                                "@nodeField":"minorRadius",
                                "@protoField":"minorRadius"
                              },
                              {
                                "@nodeField":"majorRadius",
                                "@protoField":"majorRadius"
                              },
                              {
                                "@nodeField":"minorDimension",
                                "@protoField":"minorDimension"
                              },
                              {
                                "@nodeField":"majorDimension",
                                "@protoField":"majorDimension"
                              }
                            ]
                        },
                        "#sourceText":[
"",
"ecmascript:",
"",
"function initialize ()",
"{",
"\teventsProcessed ();",
"}",
"",
"function eventsProcessed ()",
"{",
"\tvar spine        = new MFVec3f ();",
"\tvar crossSection = new MFVec2f ();",
"",
"\tvar i = 0;",
"\t",
"\t// CrossSection",
"\t",
"\tfor (i = 0; i < minorDimension; ++ i)",
"\t{",
"\t\tvar x = Math .sin (2 * Math .PI * i / minorDimension);",
"\t\tvar y = Math .cos (2 * Math .PI * i / minorDimension);",
"\t",
"\t\tcrossSection [i] = new SFVec2f (x, y) .multiply (minorRadius);",
"\t}",
"",
"\tcrossSection [i] = crossSection [0];",
"\t",
"\t// Spine",
"\t",
"\tfor (i = 0; i < majorDimension; ++ i)",
"\t{",
"\t\tvar x = Math .sin (2 * Math .PI * i / majorDimension);",
"\t\tvar z = Math .cos (2 * Math .PI * i / majorDimension);",
"\t",
"\t\tspine [i] = new SFVec3f (x, 0, z) .multiply (majorRadius);",
"\t}",
"\t",
"\tspine [i] = spine [0];",
"",
"\tgeometry .set_crossSection = crossSection;",
"\tgeometry .set_spine        = spine;",
"}",
"",
""
]
                      }
                    }
                  ]
              }
            }
          }
        ]
    }
  }
}