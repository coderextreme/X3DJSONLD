{ "X3D": {
    "encoding":"UTF-8",
    "@profile":"Full",
    "@version":"3.3",
    "@xsd:noNamespaceSchemaLocation":"https://www.web3d.org/specifications/x3d-3.3.xsd",
    "JSON schema":"https://www.web3d.org/specifications/x3d-3.3-JSONSchema.json",
    "head": {
        "meta": [
          {
            "@name":"comment",
            "@content":"World of Titania"
          },
          {
            "@name":"created",
            "@content":"Sun, 20 Sep 2015 06:48:36 GMT"
          },
          {
            "@name":"creator",
            "@content":"Holger Seelig"
          },
          {
            "@name":"generator",
            "@content":"Titania V4.3.6, http://titania.create3000.de"
          },
          {
            "@name":"identifier",
            "@content":"file:///home/holger/Projekte/Library/Prototypes/Geometry2D/RoundedRectangle2D.x3d"
          },
          {
            "@name":"modified",
            "@content":"Fri, 21 Dec 2018 14:50:04 GMT"
          },
          {
            "@name":"translated",
            "@content":"05 September 2021"
          },
          {
            "@name":"generator",
            "@content":"X3dToJson.xslt, https://www.web3d.org/x3d/stylesheets/X3dToJson.html"
          },
          {
            "@name":"reference",
            "@content":"X3D JSON encoding: https://www.web3d.org/wiki/index.php/X3D_JSON_Encoding"
          }
        ]
    },
    "Scene": {
        "-children":[
          { "ProtoDeclare":
            {
              "@name":"RoundedRectangle2D",
              "ProtoInterface": {
                  "field": [
                    {
                      "@name":"cornerRadius",
                      "@accessType":"inputOutput",
                      "@type":"SFFloat",
                      "@value":1.0
                    },
                    {
                      "@name":"size",
                      "@accessType":"inputOutput",
                      "@type":"SFVec2f",
                      "@value":[2,2]
                    },
                    {
                      "@name":"solid",
                      "@accessType":"initializeOnly",
                      "@type":"SFBool"
                    }
                  ]
              },
              "ProtoBody": {
                  "-children":[
                    { "IndexedFaceSet":
                      {
                        "@DEF":"Geometry",
                        "@normalPerVertex":false,
                        "-coord":
                          { "Coordinate":
                            {
                            }
                          },
                        "-texCoord":
                          { "TextureCoordinate":
                            {
                            }
                          }
                      }
                    },
                    { "Script":
                      {
                        "@DEF":"RoundedRectangle2D",
                        "@directOutput":true,
                        "field": [
                          {
                            "@name":"cornerRadius",
                            "@accessType":"inputOutput",
                            "@type":"SFFloat"
                          },
                          {
                            "@name":"size",
                            "@accessType":"inputOutput",
                            "@type":"SFVec2f"
                          },
                          {
                            "@name":"cornerDimension",
                            "@accessType":"initializeOnly",
                            "@type":"SFFloat",
                            "@value":10.0
                          },
                          {
                            "@name":"solid",
                            "@accessType":"inputOutput",
                            "@type":"SFBool"
                          },
                          {
                            "@name":"geometry",
                            "@accessType":"initializeOnly",
                            "@type":"SFNode",
                            "-children":[
                              { "IndexedFaceSet":
                                {
                                  "@USE":"Geometry"
                                }
                              }
                            ]
                          }
                        ],
                        "IS": {
                            "connect": [
                              {
                                "@nodeField":"cornerRadius",
                                "@protoField":"cornerRadius"
                              },
                              {
                                "@nodeField":"size",
                                "@protoField":"size"
                              },
                              {
                                "@nodeField":"solid",
                                "@protoField":"solid"
                              }
                            ]
                        },
                        "#sourceText":[
"",
"",
"ecmascript:",
"",
"function initialize ()",
"{",
"\teventsProcessed ();",
"}",
"",
"function eventsProcessed ()",
"{",
"\tvar radius = Math .min (Math .min (cornerRadius, size .x / 2), size .y / 2);",
"",
"\tvar",
"\t\tpoint         = new SFVec3f (radius, 0, 0),",
"\t\tstartRotation = new SFRotation (0, 0, 1, 0),",
"\t\tendRotation   = new SFRotation (0, 0, 1, Math .PI / 2),",
"\t\tmaxSize       = Math .max (size .x, size .y),",
"\t\tcorner        = new MFVec3f (),",
"\t\tcoordIndex    = new MFInt32 (),",
"\t\tcoord         = geometry .coord .point,",
"\t\ttexCoord      = geometry .texCoord .point;",
"",
"\tcoord    .length = 0;",
"\ttexCoord .length = 0;",
"",
"\tfor (var i = 0, length = cornerDimension * 4; i < length; ++ i)",
"\t\tcoordIndex [coordIndex .length] = i;",
"\t\t",
"\tcoordIndex [coordIndex .length] = -1;",
"",
"\tfor (var i = 0; i < cornerDimension; ++i)",
"\t\tcorner [i] = startRotation .slerp (endRotation, i / (cornerDimension - 1)) .multVec (point);",
"\t",
"\tvar translation = new SFVec3f (size .x / 2 - radius, size .y / 2 - radius, 0);",
"",
"\tfor (var i = 0; i < cornerDimension; ++ i)",
"\t\tcoord [coord .length] = corner [i] .add (translation);",
"",
"\tvar",
"\t\ttranslation = new SFVec3f (-size .x / 2 + radius, size .y / 2 - radius, 0),",
"\t\trotation    = new SFRotation (0, 0, 1, Math .PI * 0.5);",
"",
"\tfor (var i = 0; i < cornerDimension; ++ i)",
"\t\tcoord [coord .length] = rotation .multVec (corner [i]) .add (translation);",
"",
"\tvar",
"\t\ttranslation = new SFVec3f (-size .x / 2 + radius, -size .y / 2 + radius, 0),",
"\t\trotation    = new SFRotation (0, 0, 1, Math .PI);",
"",
"\tfor (var i = 0; i < cornerDimension; ++ i)",
"\t\tcoord [coord .length] = rotation .multVec (corner [i]) .add (translation);",
"",
"\tvar",
"\t\ttranslation = new SFVec3f (size .x / 2 - radius, -size .y / 2 + radius, 0),",
"\t\trotation    = new SFRotation (0, 0, 1, Math .PI * 1.5);",
"",
"\tfor (var i = 0; i < cornerDimension; ++ i)",
"\t\tcoord [coord .length] = rotation .multVec (corner [i]) .add (translation);",
"",
"\tvar maxSize1_2 = new SFVec3f (maxSize / 2, maxSize / 2, 0);",
"",
"\tfor (var i = 0, length = coord .length; i < length; ++ i)",
"\t{",
"\t\tvar tex = coord [i] .add (maxSize1_2) .divide (maxSize);",
"",
"\t\ttexCoord [i] = new SFVec2f (tex .x, tex .y);",
"\t}",
"",
"\tif (! solid)",
"\t{",
"\t\tfor (var i = 0, length = cornerDimension * 4; i < length; ++ i)",
"\t\t\tcoordIndex [coordIndex .length] = length - 1 - i;",
"",
"\t\tcoordIndex [coordIndex .length] = -1;",
"\t}",
"",
"\tgeometry .set_coordIndex = coordIndex;",
"}",
"",
""
]
                      }
                    }
                  ]
              }
            }
          },
          { "WorldInfo":
            {
              "@title":"RoundedRectangle2D",
              "-metadata":
                { "MetadataSet":
                  {
                    "@name":"Titania",
                    "@DEF":"Titania",
                    "@reference":"http://titania.create3000.de",
                    "-value":[
                      { "MetadataSet":
                        {
                          "@name":"Page",
                          "@DEF":"Page",
                          "@reference":"http://titania.create3000.de",
                          "-value":[
                            { "MetadataInteger":
                              {
                                "@name":"activeView",
                                "@DEF":"activeView",
                                "@reference":"http://titania.create3000.de",
                                "@value":[1]
                              }
                            },
                            { "MetadataInteger":
                              {
                                "@name":"multiView",
                                "@DEF":"multiView",
                                "@reference":"http://titania.create3000.de",
                                "@value":[1]
                              }
                            }
                          ]
                        }
                      },
                      { "MetadataSet":
                        {
                          "@name":"Selection",
                          "@DEF":"Selection",
                          "@reference":"http://titania.create3000.de",
                          "-value":[
                            { "MetadataBoolean":
                              {
                                "@name":"selectGeometry",
                                "@DEF":"selectGeometry",
                                "@reference":"http://titania.create3000.de",
                                "@value":[false]
                              }
                            },
                            { "MetadataSet":
                              {
                                "@name":"nodes",
                                "@DEF":"nodes",
                                "@reference":"http://titania.create3000.de"
                              }
                            }
                          ]
                        }
                      },
                      { "MetadataSet":
                        {
                          "@name":"Grid",
                          "@DEF":"Grid",
                          "@reference":"http://titania.create3000.de",
                          "-value":[
                            { "MetadataBoolean":
                              {
                                "@name":"enabled",
                                "@DEF":"enabled",
                                "@reference":"http://titania.create3000.de",
                                "@value":[true]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
            }
          }
        ]
    }
  }
}