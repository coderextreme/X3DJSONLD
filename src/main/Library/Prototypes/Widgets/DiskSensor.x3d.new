<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE X3D PUBLIC "ISO//Web3D//DTD X3D 3.3//EN" "https://www.web3d.org/specifications/x3d-3.3.dtd">
<X3D xmlns:xsd="http://www.w3.org/2001/XMLSchema-instance" profile="Full" version="3.3" xsd:noNamespaceSchemaLocation="http://www.web3d.org/specifications/x3d-3.3.xsd" ><head><meta name="comment" content="World of Titania"></meta>
<meta name="created" content="Sun, 20 Sep 2015 06:48:14 GMT"></meta>
<meta name="creator" content="Holger Seelig"></meta>
<meta name="generator" content="Titania V1.1.0, http://titania.create3000.de"></meta>
<meta name="modified" content="Sun, 20 Sep 2015 06:48:14 GMT"></meta>
</head>
<Scene><ProtoDeclare name="DiskSensor"><ProtoInterface><field name="enabled" accessType="inputOutput" type="SFBool" value="true"></field>
<field name="description" accessType="inputOutput" type="SFString"></field>
<field name="axisRotation" accessType="inputOutput" type="SFRotation"></field>
<field name="factor" accessType="inputOutput" type="SFFloat" value="0.159155"></field>
<field name="minValue" accessType="inputOutput" type="SFFloat"></field>
<field name="maxValue" accessType="inputOutput" type="SFFloat" value="-1"></field>
<field name="offset" accessType="inputOutput" type="SFFloat"></field>
<field name="autoOffset" accessType="inputOutput" type="SFBool" value="true"></field>
<field name="isActive" accessType="outputOnly" type="SFBool"></field>
<field name="isOver" accessType="outputOnly" type="SFBool"></field>
<field name="trackPoint_changed" accessType="outputOnly" type="SFVec3f"></field>
<field name="rotation_changed" accessType="outputOnly" type="SFRotation"></field>
<field name="value_changed" accessType="outputOnly" type="SFFloat"></field>
</ProtoInterface>
<ProtoBody><CylinderSensor DEF="CylinderTouch" diskAngle="1.5708"><IS><connect nodeField="enabled" protoField="enabled"></connect>
<connect nodeField="description" protoField="description"></connect>
<connect nodeField="axisRotation" protoField="axisRotation"></connect>
<connect nodeField="autoOffset" protoField="autoOffset"></connect>
<connect nodeField="trackPoint_changed" protoField="trackPoint_changed"></connect>
<connect nodeField="isOver" protoField="isOver"></connect>
<connect nodeField="isActive" protoField="isActive"></connect>
</IS>
</CylinderSensor>
<Script DEF="DiskSensorScript" directOutput="true"><field name="set_rotation" accessType="inputOnly" type="SFRotation"></field>
<field name="set_active" accessType="inputOnly" type="SFBool"></field>
<field name="factor" accessType="inputOutput" type="SFFloat"></field>
<field name="minValue" accessType="inputOutput" type="SFFloat"></field>
<field name="maxValue" accessType="inputOutput" type="SFFloat"></field>
<field name="offset" accessType="inputOutput" type="SFFloat"></field>
<field name="rotation_changed" accessType="outputOnly" type="SFRotation"></field>
<field name="value_changed" accessType="outputOnly" type="SFFloat"></field>
<field name="startVector" accessType="initializeOnly" type="SFVec3f" value="0 0 1"></field>
<field name="value" accessType="initializeOnly" type="SFFloat"></field>
<field name="sensor" accessType="initializeOnly" type="SFNode"><CylinderSensor USE="CylinderTouch"></CylinderSensor>
</field>
<IS><connect nodeField="factor" protoField="factor"></connect>
<connect nodeField="minValue" protoField="minValue"></connect>
<connect nodeField="maxValue" protoField="maxValue"></connect>
<connect nodeField="offset" protoField="offset"></connect>
<connect nodeField="rotation_changed" protoField="rotation_changed"></connect>
<connect nodeField="value_changed" protoField="value_changed"></connect>
</IS>
<![CDATA[ecmascript:

function initialize ()
{
	set_offset ();
}

function set_factor ()
{
	set_offset ();
}

function set_offset ()
{
	value          = offset;
	sensor .offset = offset / factor;
}

function set_rotation (rotation)
{
	var endVector     = rotation .multVec (sensor .axisRotation .multVec (new SFVec3f (0, 0, 1)));
	var deltaRotation = new SFRotation (startVector, endVector);

	startVector = endVector;

	var axis  = sensor .axisRotation .multVec (new SFVec3f (0, 1, 0));
	var angle = axis .dot (deltaRotation .getAxis ());
	var sign  = angle > 0 ? 1 : -1;

	value += sign * deltaRotation .angle * factor;

	if (minValue > maxValue || (value > minValue && value < maxValue))
	{
		rotation_changed = rotation_changed .multiply (deltaRotation);
		value_changed    = value;
	}
	else
	{
		value = Math .max (minValue, Math .min (maxValue, value));

		if (value != value_changed)
		{
			var axis = sensor .axisRotation .multVec (new SFVec3f (0, 1, 0));
			
			rotation_changed = new SFRotation (axis, -value / factor);
			value_changed    = value;
		}
	}
}

function set_active (active)
{
	if (active)
	{
		var axis = sensor .axisRotation .multVec (new SFVec3f (0, 1, 0));

		rotation_changed = new SFRotation (axis, sensor .offset);
		startVector      = rotation_changed .multVec (sensor .axisRotation .multVec (new SFVec3f (0, 0, 1)));
		value            = offset;
	}
	else
	{
		if (sensor .autoOffset)
			offset = value;
	}
}]]></Script>
<ROUTE fromNode="CylinderTouch" fromField="rotation_changed" toNode="DiskSensorScript" toField="set_rotation"></ROUTE>
<ROUTE fromNode="CylinderTouch" fromField="isActive" toNode="DiskSensorScript" toField="set_active"></ROUTE>
</ProtoBody>
</ProtoDeclare>
</Scene>
</X3D>