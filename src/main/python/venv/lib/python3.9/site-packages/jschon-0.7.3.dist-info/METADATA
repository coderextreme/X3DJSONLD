Metadata-Version: 2.1
Name: jschon
Version: 0.7.3
Summary: A pythonic, extensible JSON Schema implementation.
Home-page: https://github.com/marksparkza/jschon
Author: Mark Jacobson
Author-email: mark@saeon.ac.za
License: MIT
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Topic :: Software Development :: Libraries
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Requires-Python: ~=3.8
Description-Content-Type: text/x-rst
License-File: LICENSE
Requires-Dist: rfc3986
Provides-Extra: dev
Requires-Dist: pytest ; extra == 'dev'
Requires-Dist: coverage ; extra == 'dev'
Requires-Dist: hypothesis ; extra == 'dev'
Requires-Dist: pytest-benchmark ; extra == 'dev'
Provides-Extra: doc
Requires-Dist: sphinx ; extra == 'doc'
Requires-Dist: sphinx-rtd-theme ; extra == 'doc'
Provides-Extra: test
Requires-Dist: tox ; extra == 'test'

Welcome to jschon!
==================

|tests| |codecov| |pypi| |python| |docs| |license|

jschon is a pythonic and extensible implementation of the
`JSON Schema <https://json-schema.org/>`_ specification.

Features
--------
* JSON Schema validator implementation (2019-09, 2020-12)

  * Format assertion supported via plug-in callables
  * Schema compilation and indexing
  * $ref loading from local and (coming soon!) remote sources
  * Support for custom keywords, vocabularies and meta-schemas

* JSON class implementing the JSON data model
* JSON pointer implementation (`RFC 6901 <https://tools.ietf.org/html/rfc6901>`_)

Installation
------------
::

    pip install jschon

Usage
-----
Create a JSON schema:

.. code-block:: python

    from jschon import create_catalog, JSON, JSONSchema

    create_catalog('2020-12')

    demo_schema = JSONSchema({
        "$id": "https://example.com/demo",
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "type": "array",
        "items": {
            "anyOf": [
                {
                    "type": "string",
                    "description": "Cool! We got a string here!"
                },
                {
                    "type": "integer",
                    "description": "Hey! We got an integer here!"
                }
            ]
        }
    })

Validate JSON data:

.. code-block:: python

    result = demo_schema.evaluate(
        JSON([12, "Monkeys"])
    )

Generate JSON Schema-conformant output:

>>> result.output('basic')
{
    "valid": True,
    "annotations": [
        {
            "instanceLocation": "",
            "keywordLocation": "/items",
            "absoluteKeywordLocation": "https://example.com/demo#/items",
            "annotation": True
        },
        {
            "instanceLocation": "/0",
            "keywordLocation": "/items/anyOf/1/description",
            "absoluteKeywordLocation": "https://example.com/demo#/items/anyOf/1/description",
            "annotation": "Hey! We got an integer here!"
        },
        {
            "instanceLocation": "/1",
            "keywordLocation": "/items/anyOf/0/description",
            "absoluteKeywordLocation": "https://example.com/demo#/items/anyOf/0/description",
            "annotation": "Cool! We got a string here!"
        }
    ]
}

Links
-----
* Documentation: https://jschon.readthedocs.io
* GitHub repository: https://github.com/marksparkza/jschon
* PyPI package: https://pypi.org/project/jschon
* Online validator: https://jschon.dev

.. |tests| image:: https://github.com/marksparkza/jschon/actions/workflows/tests.yml/badge.svg
    :target: https://github.com/marksparkza/jschon/actions/workflows/tests.yml
    :alt: Test Status

.. |codecov| image:: https://codecov.io/gh/marksparkza/jschon/branch/main/graph/badge.svg
    :target: https://codecov.io/gh/marksparkza/jschon
    :alt: Code Coverage

.. |pypi| image:: https://img.shields.io/pypi/v/jschon
    :target: https://pypi.org/project/jschon
    :alt: PyPI Package Version

.. |python| image:: https://img.shields.io/pypi/pyversions/jschon
    :target: https://pypi.org/project/jschon
    :alt: Python Versions

.. |docs| image:: https://readthedocs.org/projects/jschon/badge/?version=latest
    :target: https://jschon.readthedocs.io/en/latest/?badge=latest
    :alt: Documentation Status

.. |license| image:: https://img.shields.io/github/license/marksparkza/jschon
    :target: https://github.com/marksparkza/jschon/blob/main/LICENSE
    :alt: License


