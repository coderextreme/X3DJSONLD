###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_411',geoSystem=['GDC'],position=(1.2908486746019459,103.92018578496744,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.2908486746019459,103.92018578496744,0.0),range=4101.627,child1Url=['../../tiles/5/singapore8-22.x3d'],child2Url=['../../tiles/5/singapore8-23.x3d'],child3Url=['../../tiles/5/singapore9-22.x3d'],child4Url=['../../tiles/5/singapore9-23.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore4-11.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.2821169622239519,103.90582275083842,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[6,6,8,9,10,10,9,9,8,9,17,27,30,21,9,3,3,2,2,2,0,0,0,0,-1,-1,-2,-1,2,17,28,27,15,8,12,15,17,5,7,8,10,10,9,9,8,8,12,22,29,26,14,5,3,2,2,2,1,0,0,0,-1,-1,-2,-2,0,9,23,29,22,11,7,12,16,13,6,8,9,10,10,9,9,8,9,17,27,30,21,9,3,3,2,2,2,0,0,0,-1,-1,-2,-2,-1,2,15,28,28,17,9,6,11,15,8,9,11,10,10,9,9,8,8,12,22,29,26,14,5,3,2,2,2,1,0,0,0,-1,-1,-2,-1,0,7,20,27,23,14,11,8,6,10,5,12,14,10,10,9,9,8,9,16,27,30,21,9,3,3,2,2,2,0,0,0,-1,-1,-2,-2,0,3,12,23,24,18,12,13,10,2,4,2,15,16,11,9,9,8,8,12,22,29,26,15,5,3,2,2,2,1,0,0,0,-1,-1,-2,0,2,7,14,20,21,17,11,12,10,2,-1,0,18,18,12,9,9,8,8,17,27,30,21,9,3,3,2,2,2,0,0,0,-1,-1,-2,-2,0,6,12,14,17,18,18,12,11,11,4,-5,-1,19,16,11,9,9,10,11,21,29,26,15,5,3,2,2,2,1,0,0,0,-1,-1,-2,0,3,9,13,13,15,16,17,14,9,12,11,-1,1,19,13,9,10,11,12,13,26,30,21,8,3,3,2,2,2,0,0,0,-1,-1,-2,-2,0,6,12,13,13,13,14,16,16,7,13,18,4,5,17,11,9,10,11,12,12,20,22,14,5,3,2,2,2,1,0,0,0,-1,-1,-2,0,3,9,13,13,13,13,13,13,13,7,12,15,2,1,13,9,10,11,12,12,9,12,12,7,3,3,2,2,2,0,0,0,-1,-1,-2,-2,0,6,12,13,13,13,13,12,11,9,6,10,9,0,-4,11,9,10,11,12,10,7,8,8,5,3,4,4,2,1,0,0,0,-1,-1,-2,0,3,9,13,13,13,13,13,12,10,5,5,8,5,-1,-6,9,10,11,12,12,8,5,5,5,5,4,6,6,3,0,0,0,-1,-1,-2,-2,0,6,12,13,13,13,13,13,12,10,2,4,5,0,-3,-8,9,10,11,12,10,6,5,5,5,5,7,11,9,5,2,0,0,-1,-1,-2,0,3,9,13,13,13,13,13,13,12,9,2,3,3,0,-4,-8,10,11,12,12,8,5,5,5,5,5,10,17,14,8,3,0,-1,-1,-2,-2,0,7,12,13,13,13,13,13,13,12,7,4,1,2,0,-4,-9,10,11,12,10,6,5,5,5,5,7,14,18,13,8,5,1,0,-1,-2,0,3,10,13,13,13,13,13,13,12,10,7,3,1,1,0,-5,-9,11,12,12,8,5,5,5,5,5,10,18,16,10,8,7,3,0,-2,-2,0,7,12,13,13,13,13,13,13,12,9,7,3,1,1,0,-5,-9,11,12,10,6,5,5,5,5,7,14,18,13,8,8,8,5,2,0,0,3,10,13,13,13,13,13,13,12,11,9,6,3,2,1,0,-5,-9,12,12,8,5,5,5,5,5,10,18,16,10,8,8,8,7,6,4,5,8,11,13,13,13,13,13,13,12,10,9,6,3,2,1,0,-4,-8,12,10,6,5,5,5,5,7,14,18,13,8,8,8,8,8,8,8,10,11,12,13,13,13,13,13,13,12,10,8,6,3,2,1,0,-2,-5,12,8,5,5,5,5,5,10,18,16,10,8,8,8,8,8,10,13,15,14,13,13,13,13,13,13,12,11,10,8,6,3,2,1,0,0,-1,10,6,5,5,5,5,7,14,18,13,9,8,8,8,8,9,12,15,16,14,13,13,13,13,13,13,12,11,10,8,4,2,1,0,0,0,0,8,5,5,5,5,5,10,17,16,10,8,8,8,8,8,10,14,17,16,13,13,13,13,13,13,12,12,11,9,7,2,0,0,0,0,0,0,7,5,5,5,5,7,14,18,13,9,8,8,8,8,9,12,15,17,15,13,13,13,13,13,13,12,12,11,9,6,1,0,0,-1,-1,-1,-1,7,5,5,5,5,10,18,16,10,8,8,8,8,8,10,14,17,16,14,13,13,13,13,13,12,12,11,10,8,4,0,0,-1,-1,-1,-1,-1,6,5,5,5,7,14,19,14,9,8,8,8,8,9,12,15,17,15,13,13,13,13,13,13,12,12,11,10,7,2,0,0,-1,-1,-1,-1,-1,6,5,5,5,10,17,17,11,8,8,8,8,8,10,14,17,16,14,13,13,13,13,13,12,12,11,11,9,5,0,0,0,0,-1,-1,-1,-1,6,5,5,7,14,19,15,10,8,8,8,8,9,12,15,17,14,13,13,13,13,13,13,12,12,11,10,7,2,0,0,0,0,-1,-1,-1,-1,6,5,5,10,17,17,13,9,8,8,8,8,10,14,17,16,13,13,13,13,13,13,12,12,11,11,9,5,1,0,0,0,0,0,-1,-1,-1,6,5,7,14,19,16,11,9,8,8,8,9,12,15,17,14,13,13,13,13,12,12,11,11,11,10,8,3,0,0,0,0,0,0,0,-1,-1,6,5,10,17,19,14,11,9,8,8,8,10,14,17,16,13,13,13,13,13,11,10,9,9,9,10,6,1,0,0,0,0,0,0,0,0,0,6,7,14,20,18,13,11,9,8,8,9,12,15,17,14,13,13,13,13,12,10,8,8,8,10,10,6,0,0,0,0,0,0,0,0,0,0,6,10,17,19,16,14,11,9,8,8,10,14,17,16,13,13,13,13,13,11,9,8,8,9,11,12,8,1,0,0,0,0,0,0,0,0,0,7,14,20,19,16,14,11,9,8,9,12,15,17,14,13,13,13,13,12,10,8,8,8,10,13,14,10,2,0,0,0,0,0,0,0,0,0,10,17,20,18,16,14,11,9,8,10,14,17,16,13,13,13,13,13,11,9,8,8,9,11,14,15,12,4,0,0,0,0,0,0,0,0,0,14,20,19,18,16,14,11,9,8,12,15,17,14,13,14,13,13,12,10,8,8,8,10,13,14,15,13,7,0,0,0,0,0,0,0,0,0,18,19,19,18,17,14,11,9,10,14,16,16,13,13,13,13,13,11,9,8,8,9,11,14,15,15,14,9,3,0,0,0,0,0,0,0,0,20,18,19,18,17,14,11,9,12,15,17,14,13,14,13,13,12,10,8,8,8,10,13,14,15,14,14,12,6,0,0,0,0,0,0,0,0,18,17,19,19,17,15,10,9,14,16,16,13,13,13,13,13,11,9,8,8,9,11,14,15,15,14,14,14,10,3,0,0,0,0,0,0,0,14,16,19,19,17,15,9,10,15,17,14,13,14,13,13,13,10,8,8,8,10,13,14,15,14,13,14,15,13,6,0,0,0,0,0,0,0,13,13,16,19,17,14,8,12,16,16,13,13,14,13,13,12,9,8,8,8,11,14,15,14,13,12,14,15,15,10,2,0,0,0,0,0,0,12,10,13,18,17,12,7,13,16,14,12,13,14,13,13,10,8,8,8,10,13,14,15,13,11,12,14,16,17,14,5,0,0,0,0,0,0,12,10,13,19,17,12,8,14,15,12,12,14,14,13,12,10,8,8,8,11,14,15,14,11,10,12,14,16,17,16,9,0,0,0,0,0,0,12,12,14,20,16,12,9,14,12,10,12,14,15,13,11,9,8,8,9,12,14,15,13,10,10,12,14,16,18,17,13,0,0,0,0,0,0],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
