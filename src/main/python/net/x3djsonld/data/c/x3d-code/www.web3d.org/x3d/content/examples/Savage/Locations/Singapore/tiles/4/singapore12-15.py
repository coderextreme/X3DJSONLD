###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_1215',geoSystem=['GDC'],position=(1.4305560726498494,104.0350900579996,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.4305560726498494,104.0350900579996,0.0),range=4101.627,child1Url=['../../tiles/5/singapore24-30.x3d'],child2Url=['../../tiles/5/singapore24-31.x3d'],child3Url=['../../tiles/5/singapore25-30.x3d'],child4Url=['../../tiles/5/singapore25-31.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore12-15.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.4218243602718554,104.02072702387058,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=36,xSpacing=8.207448E-4,zDimension=44,zSpacing=4.0612617E-4,height=[13,13,12,15,17,17,12,6,4,4,4,4,4,5,10,11,12,12,12,12,11,11,11,11,11,11,11,11,10,9,10,10,10,10,10,10,11,13,13,13,15,17,15,8,4,4,4,4,4,4,7,11,12,12,12,12,12,11,11,11,11,11,11,11,10,7,9,10,10,10,10,10,10,13,13,12,14,17,17,11,5,4,4,4,4,4,5,10,11,12,12,12,12,11,11,11,11,11,11,11,9,6,9,9,10,10,10,10,10,11,13,13,12,15,17,14,8,4,4,4,4,4,4,7,11,12,12,12,12,12,11,11,11,11,11,11,7,2,6,9,10,10,10,10,9,10,13,13,12,14,17,17,11,5,4,4,4,4,4,5,10,12,12,12,12,12,11,11,11,11,11,11,6,0,3,9,9,10,10,10,8,10,11,13,13,12,15,17,14,8,4,4,4,4,4,4,7,11,12,12,12,12,12,11,11,11,11,11,6,0,1,6,9,10,10,10,7,9,10,13,12,11,14,17,17,11,5,4,4,4,4,4,5,10,12,12,12,12,12,11,11,11,11,11,6,-1,0,3,9,9,10,10,7,8,9,9,8,8,12,15,17,14,8,4,4,4,4,4,4,7,11,12,12,12,12,12,11,11,11,11,6,-1,-1,1,6,9,10,10,6,7,9,5,5,6,11,14,17,17,11,5,4,4,4,4,4,5,10,12,12,12,12,12,12,11,11,11,6,-1,-2,0,3,9,9,10,3,3,3,2,2,3,7,12,15,17,14,8,4,4,4,4,4,4,7,11,12,12,12,12,12,11,11,11,6,-1,-2,-1,1,6,9,10,0,0,0,0,0,0,4,10,14,17,17,11,5,4,4,4,4,4,5,10,12,12,12,12,12,12,11,11,6,-1,-2,-2,0,3,9,9,0,0,0,0,0,0,2,7,12,15,17,14,8,5,4,4,4,4,4,7,11,12,12,12,12,12,11,11,6,-1,-2,-2,-1,1,6,9,0,0,0,0,0,0,0,3,10,14,17,17,11,5,4,4,4,4,4,5,10,12,12,12,12,12,12,10,6,-1,-2,-2,-2,0,3,9,0,0,0,0,0,0,0,1,7,12,15,17,14,8,5,4,4,4,4,4,7,11,12,12,12,12,12,10,5,-1,-2,-2,-2,-1,1,6,0,0,0,0,0,0,0,0,3,10,14,17,17,12,5,4,4,4,4,4,5,10,12,12,12,12,12,9,3,0,-1,-2,-2,-2,0,3,0,0,0,0,0,0,0,0,1,7,12,15,17,14,8,5,4,4,4,4,4,8,11,12,12,12,12,8,1,0,-1,-2,-2,-2,-1,1,0,0,0,0,0,0,0,0,0,3,10,14,16,17,12,5,4,4,4,4,4,5,10,12,12,12,12,7,0,0,-1,-1,-2,-2,-2,0,1,1,1,0,0,0,0,0,0,1,7,12,15,17,14,8,5,4,4,4,4,4,8,11,12,12,12,7,0,0,0,-1,-2,-2,-2,-1,3,2,2,1,1,1,1,1,1,0,3,10,14,16,17,12,5,4,4,4,4,4,5,9,12,12,12,7,0,-1,0,-1,-1,-2,-2,-2,3,3,2,2,1,1,1,1,1,0,1,7,12,15,17,14,8,5,4,4,4,4,4,8,11,12,12,7,0,0,0,0,-1,-2,-2,-2,2,3,3,3,2,2,2,2,1,1,0,3,10,14,16,17,12,5,4,4,4,4,4,5,9,12,12,7,0,0,-1,0,-1,-1,-2,-2,0,3,4,3,3,2,2,2,1,1,0,1,7,12,15,17,14,8,5,4,4,4,4,4,7,11,12,7,0,0,0,0,0,-1,-2,-2,0,2,4,4,4,3,3,2,2,1,1,0,3,10,14,16,17,12,5,4,4,4,4,4,5,9,12,6,0,0,0,-1,0,-1,-1,-2,0,0,3,4,4,3,3,2,2,1,1,0,1,7,12,15,17,14,8,5,4,4,4,4,4,7,10,6,1,0,0,0,0,0,-1,-2,0,0,2,4,4,4,3,3,2,2,1,1,0,4,10,14,16,17,12,6,4,4,4,4,4,5,7,6,3,0,0,0,-1,0,-1,-1,1,0,0,3,4,4,3,3,2,2,1,1,0,1,7,12,15,17,14,8,5,4,4,4,4,4,5,5,4,1,0,0,0,0,0,-1,3,0,0,2,4,4,4,3,3,2,2,1,1,0,4,10,14,16,17,12,6,4,4,4,4,4,4,5,5,3,0,0,0,-1,0,-1,6,1,0,0,3,4,4,3,3,2,2,1,1,0,1,7,12,15,17,14,8,5,4,4,4,4,4,5,5,4,1,0,0,0,0,0,10,3,0,0,2,4,4,4,3,3,2,2,1,1,0,4,10,14,16,17,12,6,4,4,4,4,4,5,5,5,3,0,0,0,-1,0,11,6,1,0,0,3,4,4,3,3,2,2,1,1,0,1,7,12,15,17,14,8,5,4,4,4,4,5,5,5,4,1,0,0,0,0,11,10,3,0,0,2,4,4,4,3,3,2,2,1,1,0,4,9,14,16,17,12,6,4,4,4,4,5,5,5,5,3,0,0,0,-1,11,11,6,1,0,0,3,4,4,3,3,2,2,1,1,0,1,7,12,15,17,14,8,4,4,4,4,5,5,5,5,4,1,0,0,0,9,11,10,3,0,0,2,4,4,4,3,3,2,2,1,1,0,4,9,14,16,16,12,6,4,4,4,5,5,5,5,5,3,0,0,0,8,11,11,5,1,0,0,3,4,4,3,3,2,2,1,1,0,1,7,12,15,16,13,7,5,5,5,5,5,5,5,5,4,1,0,0,6,9,11,10,3,0,0,2,4,4,4,3,3,2,2,1,1,0,4,10,14,15,13,9,8,8,7,6,5,5,5,5,5,3,0,0,4,8,11,11,5,1,0,0,3,4,4,3,3,2,2,1,1,0,1,7,12,14,13,11,10,10,8,6,5,5,5,5,5,4,1,0,4,6,9,11,10,3,0,0,2,3,4,4,3,3,2,2,1,1,0,5,10,13,11,10,10,10,9,7,6,5,5,5,5,5,3,0,3,4,8,11,12,5,1,0,0,3,4,4,3,3,2,2,1,1,0,3,9,12,11,10,10,10,10,8,6,5,5,5,5,5,4,1,1,4,6,9,11,10,3,0,0,2,3,4,4,3,3,2,2,1,1,3,9,13,11,10,10,10,10,9,7,6,5,5,5,5,5,3,0,3,4,8,11,12,5,1,0,0,3,4,4,3,3,2,2,1,1,3,9,12,12,11,10,10,10,10,8,6,5,5,5,5,5,4,0,1,4,6,9,11,9,3,0,0,2,3,4,4,3,3,2,2,2,3,7,11,13,11,10,10,10,10,9,7,6,5,5,5,5,5,0,0,3,4,8,11,12,5,1,0,0,3,4,4,3,3,2,2,2,3,6,10,13,12,11,10,10,10,10,8,6,5,5,5,5,5,0,0,1,4,6,9,11,9,3,0,0,2,3,4,4,3,3,2,2,4,5,8,11,13,11,10,10,10,10,9,7,6,5,5,5,5,0,0,0,3,4,8,11,12,5,1,0,0,3,4,4,3,3,2,3,5,5,6,10,13,12,11,10,10,10,10,8,6,5,5,5,5],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
