###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoLOD(center=(41.59732330603777,-71.35152298924505,0.0),range=24601.38,child1Url=['../../tiles/3/newport4-4.x3d'],child2Url=['../../tiles/3/newport4-5.x3d'],child3Url=['../../tiles/3/newport5-4.x3d'],child4Url=['../../tiles/3/newport5-5.x3d'],
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(41.5,-71.5,0),geoSystem=['GDC']),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0,0.05,0)),
            texture=ImageTexture(url=['../../images/2/newport2-2.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(41.50056356421022,-71.43945829755604,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=53,xSpacing=0.0033821273,zDimension=52,zSpacing=0.0037944997,height=[0,0,0,0,0,0,-8,-10,-18,-12,-5,-10,-10,-7,-5,-4,0,0,0,0,0,0,-4,-14,-32,-34,-37,-41,-7,0,-5,-8,-12,-7,-3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-5,-13,-14,-9,-3,0,0,-9,-8,-4,-4,0,0,0,0,0,0,0,-15,-35,-39,-34,-21,-3,-11,-2,-7,-3,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-13,-11,-8,-13,0,0,-5,-8,-4,-4,0,-1,0,0,0,0,0,-9,-24,-41,-32,-25,-18,-12,-12,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-4,-15,-11,-13,-13,-8,-5,-7,-4,0,0,0,0,0,0,0,0,-6,-24,-36,-33,-26,-24,-11,-10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-16,-11,-14,-19,-15,-10,-1,0,0,0,0,0,0,0,-4,-9,-13,-28,-36,-34,-28,-28,-18,-11,-4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-8,-9,-12,-19,-23,-10,0,0,0,0,0,0,0,0,0,-9,-19,-25,-27,-33,-32,-32,-22,-8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-4,-9,-8,-16,-25,-13,0,0,0,0,0,0,0,0,0,-3,-19,-23,-21,-25,-30,-31,-34,-24,-6,0,0,-6,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-5,-4,-5,-7,-20,-12,0,0,0,0,0,0,0,0,0,-2,-20,-24,-22,-21,-25,-32,-32,-31,-23,-16,-13,-11,-8,-3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-6,-4,-5,-6,-9,-13,-2,0,0,0,0,0,0,0,0,-4,-22,-24,-20,-13,0,-34,-33,-29,-20,-16,-11,-11,-11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-3,-5,-7,-9,-13,-16,-7,0,0,0,0,0,0,0,0,-14,-23,-19,-20,-9,0,-26,-34,-30,-21,-16,-15,-12,-7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3,-5,-7,-9,-8,-12,-14,-5,-1,0,0,0,0,0,0,-1,-15,-22,-20,-18,-8,-3,-18,-27,-27,-23,-18,-17,-13,-7,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-4,-5,-5,-6,-8,-8,-7,-12,-12,-5,-3,0,0,0,0,0,0,-1,-12,-18,-19,-18,-19,-14,-13,-18,-23,-23,-20,-16,-17,-11,-7,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,-3,-4,-5,-7,-7,-9,-7,-13,-12,-5,-2,0,0,0,0,0,0,0,-7,-19,-18,-18,-17,-13,-13,-16,-20,-22,-21,-18,-16,-16,-6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,-1,0,-2,-6,-6,-8,-9,-8,-14,-9,-8,-4,0,0,0,0,0,0,0,0,-18,-18,-16,-15,-13,-12,-14,-18,-20,-23,-21,-16,-16,-13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,-2,-3,-3,-3,-9,-8,-9,-9,-7,-9,-10,-6,0,0,0,0,0,0,0,0,-16,-17,-14,-13,-12,-12,-13,-16,-19,-21,-24,-18,-15,-16,-4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-4,-5,-5,-8,-8,-8,-8,-9,-11,-10,-11,-8,0,0,0,0,0,0,0,0,-14,-16,-13,-12,-12,-11,-12,-14,-16,-18,-22,-24,-16,-14,-13,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3,-4,-4,-5,-6,-7,-6,-7,-7,-8,-9,-9,-10,-10,-2,0,0,0,0,0,0,-1,-13,-14,-12,-11,-11,-10,-10,-12,-14,-19,-22,-31,-18,-15,-13,-11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-4,-4,-4,-5,-5,-6,-5,-6,-7,-7,-8,-8,-9,-9,-8,-3,0,0,0,0,0,-6,-12,-12,-11,-10,-10,-10,-10,-5,-15,-16,-21,-27,-25,-16,-17,-13,-7,0,0,0,0,0,0,0,0,0,0,0,0,-1,-2,-4,-4,-4,-5,-5,-5,-5,-6,-6,-7,-7,-8,-8,-8,-8,-8,0,0,0,0,0,-10,-12,-11,-10,-10,-9,-9,-9,-10,-7,-17,-17,-25,-32,-18,-17,-14,-7,-3,0,0,0,0,0,0,0,0,0,0,0,-1,-3,-4,-4,-4,-4,-4,-5,-3,-6,-6,-7,-7,-7,-7,-7,-7,-7,-7,0,0,0,-3,-14,-11,-10,-9,-9,-8,-8,-8,-8,-9,-10,-14,-21,-32,-28,-15,-9,-4,-4,-2,0,0,0,0,0,0,0,0,0,0,-1,-2,-3,-4,-4,-4,-4,-4,-3,-6,-6,-7,-7,-8,-7,-7,-7,-7,-7,-7,-7,-6,-11,-11,-10,-9,-9,-9,-9,-9,-8,-8,-8,-11,-13,-17,-35,-29,-19,-6,-3,-5,-13,-8,-5,0,0,0,0,0,0,0,0,-1,0,-2,-3,-3,-3,-3,-4,-3,-5,-8,-7,-4,-7,-7,-7,-8,-11,-10,-11,-11,-7,-7,-8,-8,-9,-9,-9,-9,-10,-9,-7,0,0,-4,-9,-25,-30,-21,-10,-1,0,-14,-13,-6,-1,0,0,0,0,0,0,0,0,0,0,0,0,-4,-4,-3,-3,-7,-11,-11,-11,-10,-11,-8,-7,-7,-7,-7,-6,-6,-7,-7,-8,-8,-9,-9,-10,-13,-9,-1,0,0,0,0,-2,-29,-23,-15,-4,0,-14,-14,-5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-11,-11,-11,-11,-10,-8,-8,-8,-9,-7,-8,-5,-6,-6,-7,-7,-8,-8,-9,-10,-15,-2,0,0,0,0,0,0,-16,-34,-25,-9,-6,-9,-13,-6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-7,-8,-10,-8,-8,-8,-7,-6,-7,-6,-7,-6,-6,-7,-8,-8,-9,-10,-13,0,0,0,0,0,0,0,0,-22,-31,-10,-16,-13,-13,-9,-3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-7,-8,-10,-8,-8,-8,-8,-6,-6,-7,-7,-6,-6,-7,-7,-8,-8,-9,-12,0,0,0,0,0,0,0,0,-7,-31,-19,-23,-18,-16,-11,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-4,-7,-9,-8,-8,-9,-8,-8,-7,0,-3,-7,-7,-8,-8,-8,-8,-8,-11,-6,0,0,0,0,0,0,0,0,-13,-11,-24,-21,-20,-14,-7,-6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-4,-6,-11,-7,-7,-7,-9,-10,-9,-2,0,-4,-8,-11,-9,-8,-8,-8,-9,-8,0,0,0,0,0,0,0,0,0,-14,-11,-23,-19,-15,-10,-8,-6,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-2,-3,-4,-5,-9,-7,-6,-7,-8,-8,-8,-2,-6,0,-8,-13,-10,-8,-7,-7,-8,-9,-2,0,0,0,0,0,0,0,0,-3,-24,-25,-21,-12,-10,-8,-7,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,-4,-8,-9,-8,-7,-7,-7,-7,-7,-7,-6,-6,-7,-8,-11,-8,-8,-7,-7,-7,-7,-7,0,0,0,0,0,0,0,0,-14,-19,-20,-22,-16,-11,-9,-7,-4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-7,-3,-4,-6,-7,-7,-7,-7,-7,-7,-6,-6,-6,-7,-8,-8,-7,-7,-7,-7,-7,-7,-5,0,0,0,0,0,0,0,-15,-18,-12,-18,-15,-13,-8,-7,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,-3,-6,-6,-7,-7,-7,-7,-6,-6,-6,-6,-7,-7,-7,-6,-6,-6,-6,-6,-6,-6,0,0,0,0,0,0,0,-19,-17,-18,-15,-16,-13,-7,-5,-1,0,0,0,0,0,0,0,0,0,0,0,0,-2,-2,0,0,-2,-4,-6,-8,-8,-7,-7,-6,-6,-6,-6,-7,-7,-7,-6,-6,-6,-6,-6,-6,-5,-1,0,0,0,0,0,0,-14,-15,-17,-14,-15,-14,-14,-8,-3,0,0,0,0,0,0,0,0,0,0,0,-2,-1,0,0,0,0,-3,-8,-8,-8,-7,-7,-6,-6,-6,-6,-7,-7,-7,-7,-6,-6,-6,-6,-4,-1,0,0,0,0,0,0,-1,-20,-14,-15,-12,-10,-11,-21,-23,-11,-4,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-4,-6,-7,-9,-7,-6,-6,-6,-6,-6,-7,-7,-7,-7,-5,-4,-3,-1,0,0,0,0,0,0,-2,-5,-11,-15,-18,-17,-10,-8,-8,-9,-11,-10,-18,-15,-8,-6,0,0,0,0,0,0,0,0,0,0,0,-2,-4,-6,-8,-7,-6,-7,-6,-6,-6,-6,-7,-7,-8,-7,-1,0,0,0,0,0,-1,-2,-3,-3,-3,-5,-9,-11,-15,-21,-6,-5,-4,-3,-4,-6,-5,-4,-13,-16,-12,0,0,0,0,0,0,0,0,0,0,0,-3,-4,-6,-7,-6,-7,-9,-6,-4,-6,-4,-7,-7,-7,-4,0,0,0,0,-1,-4,-5,-5,-6,-6,-7,-7,-11,-12,-19,-12,-6,-8,-5,0,-2,-1,0,-1,-11,-14,-18,0,0,0,0,0,0,0,0,0,0,0,-3,-5,-6,-7,-6,-6,-7,-4,-5,-6,-4,-5,-5,-6,-2,0,0,-1,-3,-3,-4,-5,-6,-6,-7,-8,-9,-10,-13,-12,-8,-7,-6,-2,0,0,0,-2,-6,-6,-6,-6,0,0,0,0,0,0,0,0,0,0,0,-3,-5,-5,-6,-6,-5,-7,-4,-5,-7,-5,-5,-5,-4,-1,0,0,0,-1,-1,0,-4,-6,-6,-7,-8,-8,-10,-11,-9,-7,-7,-7,0,0,0,0,-2,-7,-5,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,-3,-5,-6,-5,-5,-6,-4,-8,-7,-5,-6,-4,-2,0,0,0,0,0,0,-3,-6,-6,-6,-7,-8,-9,-11,-10,-6,-3,-7,-7,-4,-1,0,-2,-5,-7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,-3,-4,-5,-4,-4,-5,-4,-12,-7,-5,-1,0,0,-2,0,0,0,0,-4,-6,-6,-6,-6,-7,-8,-10,-11,-9,0,0,-7,-7,-6,-2,-2,-4,-6,-4,0,0,0,0,0,0,0,0,0,0,0,0,-1,-1,-2,-2,-1,-3,-4,-5,-4,-7,-19,-3,-4,0,0,0,0,0,0,0,0,-2,-6,-6,-6,-7,-7,-7,-10,-12,-3,0,0,-5,-6,-8,-6,-2,-5,-6,-4,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-1,-2,-2,-3,-4,-4,-4,-15,-14,-4,-2,0,0,0,-3,0,0,0,-1,-5,-6,-6,-6,-6,-7,-7,-11,-10,-2,0,0,0,0,-3,-7,-3,-5,-6,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-1,-2,-3,-4,-6,-6,-7,-15,-16,-6,-4,-3,-3,-5,-3,0,-1,-5,-6,-6,-6,-6,-6,-7,-7,-12,-9,-2,0,0,0,0,-4,-5,-5,-5,-1,0,0,0,0,-1,-1,0,0,0,0,0,-1,-1,-1,-2,-2,-2,-4,-7,-11,-4,0,0,-3,-5,-14,-14,-7,-8,-8,-6,-2,-3,-6,-6,-6,-6,-6,-6,-6,-7,-13,-8,-1,0,0,0,0,-2,-4,-5,0,0,0,0,0,0,0,-2,-3,-2,0,-2,-2,-3,-3,-3,-3,-4,-4,-4,-3,0,0,0,0,0,-4,-6,-5,-7,-11,-10,-8,-3,-6,-6,-6,-6,-6,-6,-6,-6,-7,-12,-7,0,0,0,0,0,0,-4,-4,0,0,0,0,0,0,0,-3,-3,-3,-3,-4,-4,-4,-5,-5,-3,-3,-3,-2,-1,0,0,0,0,0,-6,-4,-4,-8,-4,-8,-10,-4,-7,-6,-6,-5,-5,-5,-6,-6,-7,-13,-7,-2,0,0,0,0,0,-4,-3,0,0,0,0,0,0,-2,-3,-3,-3,-3,-3,-3,-4,-2,-1,-2,-1,-1,0,-1,0,0,0,0,0,-4,-5,-4,-5,-4,-6,-8,-10,-7,-6,-6,-5,-5,-5,-6,-6,-7,-12,-7,-5,0,-1,-1,0,-1,-3,0,0,0,0,0,0,0,-3,-3,-3,-3,-2,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,-3,-4,-4,-4,-6,-6,-7,-7,-6,-5,-5,-5,-5,-4,-6,-7,-11,-7,-6,-2,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3,-4,-4,-5,-5,-6,-6,-5,-5,-5,-5,-5,-5,-6,-8,-11,-6,-5,-5,-5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,-3,-4,-5,-6,-6,-6,-6,-5,-5,-5,-5,-5,-6,-11,-8,-6,-5,-5,-5,-4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,-3,-4,-5,-6,-6,-6,-6,-5,-5,-5,-5,-5,-6,-11,-8,-6,-5,-5,-5,-4,0,0,0,0,0,0,0,0,0,0],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
