###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    Shape(
      appearance=Appearance(
        material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0,0.05,0)),
        texture=ImageTexture(url=['../../images/4/world13-8.jpg'],repeatS=False,repeatT=False)),
      geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(56.20833769188965,-0.04166130228196607,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=22,xSpacing=1.0714287,zDimension=24,zSpacing=0.48913044,height=[151,-25,-30,-50,-37,-37,-33,-35,-30,6,42,-21,40,6,-22,34,136,187,3,103,88,118,-48,-49,-26,-24,-41,-46,-39,-37,-15,16,-23,-5,-21,3,-98,-77,-28,47,-26,-25,29,31,-126,-83,-42,-25,-39,-42,-42,-29,-21,23,8,-24,-7,-30,-60,-97,-50,-49,-86,-56,-35,4,-70,-70,-69,-50,-39,-42,-48,-32,-28,61,1,4,0,54,-23,-64,-65,-63,-88,-85,-18,82,-68,-80,-87,-74,-67,-45,-47,-35,-6,49,54,-16,14,96,28,-7,-32,-64,-118,-70,-13,117,-67,-88,-96,-69,-65,-57,-38,-43,-19,3,19,-2,-51,155,177,113,4,-46,-105,-134,-8,113,-67,-88,-98,-71,-59,-49,-42,-58,-22,1,30,-22,32,172,258,203,-2,-88,-56,-173,-40,43,-92,-91,-92,-69,-70,-73,-90,-236,-223,-33,11,-7,133,187,345,246,-1,-83,-5,-142,-50,9,-106,-146,-108,-61,-89,-158,-325,12,10,-607,-182,-4,87,200,88,180,35,-128,-77,-149,-68,-42,-125,-139,-122,-96,-147,-255,144,479,384,-10,-199,13,67,169,105,101,19,-36,-154,-119,-81,-30,-135,-136,-117,-117,-236,-259,-19,852,686,66,41,67,157,44,112,85,54,22,-2,-89,-137,-148,-129,-125,-109,-115,-254,-128,338,903,558,368,156,164,209,109,261,68,28,53,0,-13,-32,-15,-107,-123,-96,-101,-290,-289,100,1380,1297,395,140,136,180,242,316,103,55,42,0,-1,-14,0,-85,-144,-124,-102,-300,3,440,240,1827,158,490,123,353,550,284,190,41,-1,-6,-3,-1,1,-142,-147,-146,-211,-346,0,59,36,1250,520,816,500,600,575,162,319,128,-52,-54,-34,-14,33,-188,-190,-172,-370,-359,0,113,1566,1550,1380,652,780,864,500,532,337,265,-54,-115,-136,-3,29,-632,-419,-371,-408,-249,-134,680,440,1700,560,1020,960,813,609,375,431,226,-166,-108,-23,-19,72,-1381,-901,-709,-468,-276,-175,-7,30,800,1120,1020,816,1009,670,450,383,271,116,-236,-200,-7,81,-1645,-1382,-1117,-939,-992,-648,-157,-55,360,500,340,547,1100,778,388,446,320,1,-62,-251,-4,20,-2230,-2028,-1594,-1330,-1358,-1258,-305,-264,-327,80,150,360,626,550,450,325,237,323,236,-4,-4,-60,-2566,-2399,-2222,-1949,-1651,-1331,-526,-300,-349,0,112,20,580,940,779,447,361,433,375,121,-5,-20,-2731,-2636,-2777,-2446,-1834,-1203,-374,-272,-227,-190,-326,50,220,580,583,395,322,500,286,265,57,-66,-2957,-2715,-2870,-2627,-1227,-847,-506,-303,-225,-277,-224,-4,50,400,956,663,540,281,404,321,117,-3,-2956,-2884,-2876,-2554,-1219,-847,-543,-285,-247,-291,-180,-4,-2,380,792,960,541,338,333,313,151,-3],
        geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(0.0,0.0,-6378137.0),geoSystem=['GDC'])))])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
