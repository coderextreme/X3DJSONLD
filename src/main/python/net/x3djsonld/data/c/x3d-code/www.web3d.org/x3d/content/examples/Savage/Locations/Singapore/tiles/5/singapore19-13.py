###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    Shape(
      appearance=Appearance(
        material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
        texture=ImageTexture(url=['../../images/5/singapore19-13.jpg'],repeatS=False,repeatT=False)),
      geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.3781657983818856,103.77655544367725,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=3.9897318E-4,zDimension=22,zSpacing=4.1579583E-4,height=[50,51,52,53,51,49,50,50,52,54,55,57,60,63,67,70,71,71,71,74,74,70,69,69,68,66,64,61,60,63,66,69,71,72,72,71,69,53,54,55,55,53,50,50,51,53,56,58,60,62,64,68,72,72,72,73,74,73,69,68,68,67,66,63,58,57,60,63,66,68,70,73,74,74,53,55,54,54,54,54,52,51,52,54,56,58,60,62,65,69,69,68,69,72,70,67,66,66,66,65,63,57,55,57,60,64,68,72,76,78,80,54,56,55,54,56,58,54,51,51,52,54,57,58,59,61,65,64,63,64,67,67,65,63,64,64,63,62,57,54,56,59,64,69,74,78,81,82,55,57,56,55,59,62,57,53,50,49,51,54,55,56,57,58,57,55,57,60,62,62,61,61,61,60,59,56,56,59,63,67,71,75,78,79,80,56,59,58,57,60,63,58,54,50,46,48,50,51,52,53,53,52,51,53,56,58,59,60,59,59,57,56,55,56,60,64,68,71,73,75,75,76,58,62,60,59,59,59,55,52,48,44,45,45,47,48,49,51,51,53,55,57,59,60,60,60,59,57,54,53,52,56,60,62,64,65,66,68,69,59,64,62,60,57,55,52,49,46,43,42,41,43,45,47,49,51,55,58,60,61,60,59,60,59,56,53,49,48,52,56,56,58,58,60,62,65,60,63,60,56,54,52,49,46,43,40,39,37,40,43,47,49,54,59,62,63,62,60,58,58,56,53,49,44,43,46,49,51,54,57,61,63,66,60,62,58,54,51,49,46,43,40,38,36,35,38,42,47,51,56,63,64,64,63,60,57,54,52,50,46,41,39,41,44,49,53,59,64,66,67,60,61,57,55,51,48,46,43,41,38,36,35,38,42,47,51,57,62,63,62,59,56,54,51,49,47,44,41,39,41,44,50,56,63,69,68,68,59,59,57,55,51,48,47,44,42,40,37,35,38,41,46,52,57,61,61,58,55,53,51,48,46,44,42,41,40,42,46,53,60,67,73,70,68,55,57,56,54,51,48,48,46,45,44,41,37,39,40,46,53,56,57,56,53,50,50,49,48,46,44,42,42,42,46,51,58,65,70,73,69,66,53,56,55,52,51,49,49,49,49,49,45,40,39,39,45,52,54,53,50,48,47,48,49,48,47,44,42,42,45,50,56,62,67,70,71,67,63,55,58,56,53,52,51,53,54,54,54,50,44,41,38,43,50,50,48,45,45,46,49,50,50,48,44,43,43,46,53,59,64,67,67,67,63,60,58,61,58,55,55,54,56,59,59,59,54,48,43,37,40,46,46,43,42,43,46,50,52,52,49,45,43,44,47,54,60,63,65,63,61,59,57,61,65,62,59,59,58,59,61,60,59,54,48,43,38,39,42,41,40,40,42,46,50,52,51,49,45,43,44,47,53,57,58,58,58,56,56,55,64,68,65,62,62,60,60,61,60,59,54,49,44,39,38,38,38,39,40,43,47,51,52,51,48,45,43,44,47,49,52,52,52,53,53,53,54,65,68,67,65,62,59,59,59,59,58,54,49,45,39,38,38,38,39,41,44,48,52,52,51,48,44,42,43,43,45,47,48,49,51,53,54,55,64,68,67,67,62,56,56,56,57,57,54,50,45,40,38,38,39,40,43,45,48,52,53,51,48,43,41,40,40,41,43,46,49,52,55,56,58,62,66,65,65,58,52,53,54,56,58,55,51,46,41,38,38,38,40,42,45,48,52,53,50,47,42,40,40,40,43,45,48,50,55,59,60,62,58,63,62,61,54,49,50,52,55,58,55,51,46,41,38,37,37,39,41,44,47,51,52,49,46,41,40,41,44,47,49,51,53,58,62,64,66],
        geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])))])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
