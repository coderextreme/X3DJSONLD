###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    Shape(
      appearance=Appearance(
        material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0,0.05,0)),
        texture=ImageTexture(url=['../../images/4/world13-7.jpg'],repeatS=False,repeatT=False)),
      geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(56.20833769188965,-22.54166197283422,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=22,xSpacing=1.0714287,zDimension=24,zSpacing=0.48913044,height=[-3759,-3695,-2813,-1341,-1926,-2460,-2345,-2864,-3015,-1609,-966,-242,-1,268,126,193,-32,10,-48,260,23,151,-3328,-3345,-2926,-1374,-1196,-1476,-2366,-2473,-2803,-2927,-2976,-1162,-101,-65,164,89,55,-15,39,138,55,-48,-3005,-2933,-2753,-1643,-1311,-876,-1695,-2434,-2685,-2859,-2892,-2766,-207,-93,38,209,-133,166,19,275,-27,-126,-2078,-1538,-2144,-1372,-1390,-966,-464,-838,-2370,-2796,-2875,-2631,-2244,-80,-79,-69,-46,1,265,68,-49,-70,-2287,-1252,-1560,-1512,-1377,-1149,-503,-254,-1225,-2563,-2725,-2588,-2029,-161,-106,-115,85,377,89,-11,-86,-68,-2590,-2079,-1598,-1360,-1321,-1162,-569,-388,-291,-2212,-2410,-2516,-1890,-159,-81,-5,39,414,151,-41,-90,-67,-3201,-2495,-2040,-870,-1272,-1300,-930,-920,-138,-483,-2048,-2303,-2186,-216,-107,-142,169,444,836,91,-75,-67,-3018,-3021,-2189,-1124,-738,-1266,-1220,-1093,-201,-191,-1817,-752,-1989,-144,-90,-94,0,185,63,75,-86,-92,-3093,-2973,-2693,-1700,-837,-692,-1152,-933,-324,-328,-1640,-1950,-1979,-236,-54,52,-72,264,-58,-69,-78,-106,-2922,-2959,-2888,-2075,-883,-863,-1165,-1143,-1264,-1520,-1662,-1832,-1812,-930,-181,-88,-132,-36,77,-70,-109,-125,-2678,-2855,-2878,-2874,-1888,-904,-995,-1182,-829,-1453,-1633,-2067,-982,-1625,-1327,-166,-75,-94,-77,-6,-101,-135,-2332,-2738,-2838,-2742,-2719,-2322,-1557,-1496,-1390,-1246,-1288,-1569,-1433,-1415,-986,-907,-123,-89,-137,-78,-86,-129,-2423,-2668,-2788,-2699,-2699,-2673,-2456,-2145,-1609,-719,-712,-1181,-1063,-1315,-829,-815,-1005,-293,-137,-95,-2,-107,-2126,-2522,-2628,-2484,-2510,-2550,-2670,-2185,-1786,-1252,-369,-916,-220,-174,-947,-443,-688,-1086,-488,-150,132,-85,-1917,-2042,-2246,-2418,-2558,-2507,-2519,-2344,-1918,-1700,-1473,-992,-1096,-185,-418,-169,-275,-1018,-1138,-609,-154,-142,-1790,-1732,-2176,-2137,-2123,-2344,-2393,-2394,-1986,-1556,-1434,-1153,-1294,-790,-334,1,-243,-504,-1286,-1473,-559,-188,-1577,-1585,-1622,-1764,-1841,-1998,-2259,-2241,-1792,-1298,-1069,-1052,-866,-430,-106,131,-144,-255,-705,-1647,-1389,-632,-1189,-1300,-1353,-1675,-1646,-1765,-1921,-2059,-1626,-1092,-906,-686,-565,-545,-201,-128,-206,-583,-742,-796,-1683,-1381,-919,-620,-436,-1133,-1128,-937,-1440,-1685,-1651,-847,-447,-447,-466,-490,-667,-1203,-1918,-2318,-2177,-2030,-1803,-1645,-175,-141,-72,182,172,-89,-63,-164,-1197,-854,-415,-288,-524,-612,-873,-1535,-2058,-2432,-2989,-2827,-2418,-2230,-94,0,103,598,576,798,1196,-132,-169,-178,-450,-346,-631,-914,-1356,-2546,-3490,-3106,-3029,-2865,-2600,-2566,-82,19,968,418,599,1518,1359,1452,0,-123,-192,-418,-583,-1667,-2305,-2238,-2670,-3302,-3141,-2985,-2867,-2731,-4,-130,276,616,735,699,756,615,868,-75,-206,-585,-595,-1149,-1112,-1958,-3747,-3084,-3284,-3155,-3006,-2957,-3,215,188,479,610,792,793,699,681,-95,-208,-618,-666,-753,-1290,-2029,-3012,-2939,-3323,-3093,-3057,-2956],
        geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(0.0,0.0,-6378137.0),geoSystem=['GDC'])))])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
