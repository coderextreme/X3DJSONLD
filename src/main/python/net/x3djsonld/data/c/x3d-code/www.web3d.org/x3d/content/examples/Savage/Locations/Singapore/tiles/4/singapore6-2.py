###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_62',geoSystem=['GDC'],position=(1.3257755241139217,103.6616511706451,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.3257755241139217,103.6616511706451,0.0),range=4101.627,child1Url=['../../tiles/5/singapore12-4.x3d'],child2Url=['../../tiles/5/singapore12-5.x3d'],child3Url=['../../tiles/5/singapore13-4.x3d'],child4Url=['../../tiles/5/singapore13-5.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore6-2.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.3170438117359278,103.64728813651608,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[9,9,8,8,9,10,9,8,9,10,13,13,14,16,13,10,9,8,12,13,13,11,11,12,14,15,16,14,14,15,14,10,9,10,11,12,13,9,9,9,9,9,9,8,9,9,10,13,12,12,15,15,10,7,7,9,10,12,10,11,13,13,14,16,14,14,15,13,11,10,10,12,12,12,9,9,9,9,9,8,8,9,9,10,12,12,12,14,15,11,7,7,8,9,11,10,11,12,13,14,15,13,13,14,12,11,10,11,13,13,12,8,8,10,10,10,8,9,10,10,10,11,12,12,14,15,12,9,9,9,9,11,11,11,12,14,15,13,10,12,14,11,11,10,12,14,14,13,7,9,11,11,9,8,8,11,11,10,10,12,13,14,14,13,10,10,10,9,13,13,12,12,13,14,13,9,12,14,11,12,11,12,15,15,14,6,9,12,11,8,7,8,10,11,10,10,12,13,14,13,14,12,11,10,12,15,16,16,12,12,13,13,9,12,14,13,12,12,12,14,15,15,6,8,12,11,8,7,8,10,11,10,10,12,12,13,12,14,13,13,10,13,17,18,17,13,11,13,14,10,12,14,14,13,12,13,14,15,14,7,7,10,11,9,7,8,10,11,10,10,13,11,12,11,12,13,13,11,14,16,17,18,14,11,15,15,12,13,13,13,13,13,14,14,13,12,7,7,10,12,10,8,8,10,12,10,10,12,11,12,11,12,12,13,12,14,15,15,16,14,13,16,16,12,13,13,13,13,14,15,15,13,12,8,8,10,13,11,8,8,10,12,10,9,11,11,12,11,11,10,11,13,14,13,13,13,13,15,17,16,12,13,12,13,13,14,15,15,14,13,9,8,10,13,11,8,9,11,12,10,9,10,11,12,11,10,9,10,13,14,10,11,12,12,15,17,15,13,12,12,13,13,14,16,16,16,15,8,9,10,12,11,9,10,10,9,9,10,11,10,11,10,9,8,11,14,13,6,10,12,11,12,13,16,14,12,12,14,14,13,16,18,20,20,8,9,11,11,10,10,11,11,9,10,11,11,10,11,10,9,8,12,15,12,4,9,13,11,10,11,15,15,12,13,15,14,13,16,19,21,22,9,9,11,11,10,9,12,14,10,10,12,11,10,10,11,11,10,14,14,9,3,8,14,12,8,10,13,14,13,14,15,14,13,16,18,19,19,10,10,11,10,9,9,12,15,12,11,12,10,9,10,12,12,12,15,13,7,3,7,15,11,8,11,13,14,13,14,15,14,14,15,17,17,17,11,10,11,10,9,8,10,14,13,11,12,10,9,9,12,13,13,15,11,6,4,6,12,9,11,14,13,14,13,15,16,14,14,15,17,17,16,10,10,10,10,9,8,8,12,13,11,13,10,9,8,12,13,13,14,10,6,5,5,10,9,13,16,14,15,12,14,16,14,14,15,17,17,15,9,9,10,10,9,8,8,10,12,11,12,11,10,9,12,13,12,12,10,7,7,7,9,11,14,16,15,15,12,13,15,13,14,14,16,16,15,9,8,9,10,10,9,8,9,11,12,12,11,11,9,12,13,12,10,10,8,9,9,9,14,15,16,16,16,12,12,13,12,13,14,15,15,15,9,9,9,11,10,10,8,10,11,11,11,11,10,9,11,13,11,11,11,9,9,10,10,14,16,15,15,16,13,11,12,12,13,14,15,15,15,10,9,10,11,11,10,9,10,12,11,11,10,9,9,10,13,11,12,10,10,10,10,12,14,16,15,15,15,13,11,11,12,13,14,15,15,15,11,10,10,10,10,10,9,10,11,11,11,10,9,9,10,12,13,12,8,8,9,11,13,13,15,14,14,14,12,11,11,12,13,15,15,15,15,12,11,10,10,10,11,10,10,11,11,12,11,9,9,10,12,16,12,7,6,8,11,13,12,14,13,14,13,12,12,11,12,13,14,15,14,14,11,11,11,10,10,11,10,10,10,10,11,11,9,7,9,12,17,13,8,6,8,12,14,11,12,12,14,12,12,13,12,12,12,13,14,13,13,11,10,11,10,10,10,10,10,9,9,10,11,9,7,8,11,17,15,10,6,8,12,13,10,10,11,13,12,12,14,13,12,11,11,13,13,13,11,10,11,11,10,10,9,10,8,7,10,11,10,7,8,11,17,15,12,8,9,12,10,9,9,10,12,12,13,14,13,12,11,11,13,14,13,11,11,11,11,10,10,9,10,8,6,9,11,11,9,8,10,14,13,14,9,10,11,7,9,9,10,11,12,13,13,13,13,12,12,14,15,14,12,12,12,11,10,9,9,9,8,6,8,11,11,10,8,9,9,11,13,9,10,10,5,9,10,10,10,11,13,13,13,13,13,13,15,14,14,12,13,11,11,10,9,8,9,8,7,8,11,11,10,7,8,4,10,11,9,9,8,3,10,11,10,10,11,12,14,13,13,13,14,15,14,14,11,11,10,10,10,9,8,9,10,8,8,11,12,9,7,8,7,11,10,8,9,8,5,10,11,10,10,12,15,17,15,14,15,16,15,14,14,9,9,9,9,10,9,9,10,12,9,9,11,13,9,7,9,13,12,10,8,9,9,8,9,10,11,12,15,19,21,18,16,17,17,16,15,15,9,9,8,9,11,10,10,11,12,10,9,11,13,11,10,8,12,10,10,8,9,10,9,9,10,12,15,18,26,29,26,22,20,20,18,17,17,10,10,9,10,11,11,12,12,12,11,9,10,12,14,14,7,9,6,9,9,10,12,10,10,10,15,18,21,32,39,36,28,24,22,20,20,20,10,10,10,10,10,12,12,13,11,12,10,9,12,14,14,7,9,7,8,9,10,12,11,12,13,21,25,24,34,43,40,29,23,22,21,22,22,11,11,11,10,10,12,12,12,10,13,12,10,14,12,12,9,11,10,7,8,9,11,12,15,17,28,33,28,33,43,40,27,20,20,21,22,22,11,11,11,11,11,12,13,12,10,14,12,11,14,10,10,10,11,11,7,8,9,12,13,19,21,30,38,32,31,40,37,26,20,20,20,21,21,12,11,10,12,12,12,13,12,10,14,10,12,13,7,8,10,10,9,8,9,12,15,15,25,25,30,41,35,28,34,33,25,20,21,20,19,19,11,11,10,12,13,12,13,11,10,12,8,12,12,7,7,9,9,8,7,8,12,16,18,31,33,32,41,35,27,29,29,24,21,21,19,18,19,11,11,11,12,12,11,12,10,9,9,5,10,10,9,8,8,9,8,7,6,11,15,20,37,43,36,38,32,25,25,24,23,21,21,18,18,20,11,11,11,11,10,10,11,11,8,7,6,12,11,11,8,8,9,8,7,7,13,17,24,41,50,42,36,28,23,22,22,22,21,21,19,19,21,11,12,12,10,9,8,10,11,8,5,9,17,12,13,7,7,9,8,8,9,17,22,28,42,54,47,34,23,20,22,23,22,22,22,21,21,21,11,13,13,11,8,8,10,12,8,4,10,17,13,13,6,8,9,8,10,13,24,28,30,40,50,46,31,19,17,21,24,22,21,23,23,21,22,12,14,15,12,9,8,12,12,7,5,10,12,14,11,8,9,9,8,13,19,32,35,31,33,41,39,28,16,15,20,23,22,20,24,25,22,22,12,14,16,13,10,9,13,13,8,6,11,10,13,9,9,9,9,9,18,26,39,41,33,30,34,33,25,14,14,19,23,22,21,26,26,23,23],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
