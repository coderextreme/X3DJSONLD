###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Interchange',version='3.0',
  head=head(
    children=[
    meta(content='CenterPost.x3d',name='title'),
    meta(content='Upper optical deck center post of MSADS Assembly',name='description'),
    meta(content='Ron Hatt',name='creator'),
    meta(content='17 September 2006',name='created'),
    meta(content='22 February 2010',name='modified'),
    meta(content='https://savage.nps.edu/Savage/Space/SatelliteLab/CenterPost.x3d',name='identifier'),
    meta(content='Wings3D, VizX3D',name='generator'),
    meta(content='X3D-Edit 3.2, https://savage.nps.edu/X3D-Edit',name='generator'),
    meta(content='../../license.html',name='license')]),
  Scene=Scene(
    children=[
    Shape(DEF='CenterPost',
      appearance=Appearance(
        material=Material(),),
      geometry=IndexedFaceSet(coordIndex=[0,1,33,-1,0,33,32,-1,0,31,30,-1,0,30,29,-1,0,29,28,-1,0,28,27,-1,0,27,26,-1,0,26,25,-1,0,25,24,-1,0,24,23,-1,0,23,22,-1,0,22,21,-1,0,21,20,-1,0,20,19,-1,0,19,18,-1,0,18,17,-1,0,17,16,-1,0,16,15,-1,0,15,14,-1,0,14,13,-1,0,13,12,-1,0,12,11,-1,0,11,10,-1,0,10,9,-1,0,9,8,-1,0,8,7,-1,0,7,6,-1,0,6,5,-1,0,5,4,-1,0,4,3,-1,0,3,2,-1,0,2,1,-1,0,32,63,-1,0,63,31,-1,1,2,34,-1,1,34,33,-1,2,3,35,-1,2,35,34,-1,3,4,36,-1,3,36,35,-1,4,5,37,-1,4,37,36,-1,5,6,38,-1,5,38,37,-1,6,7,39,-1,6,39,38,-1,7,8,40,-1,7,40,39,-1,8,9,41,-1,8,41,40,-1,9,10,42,-1,9,42,41,-1,10,11,43,-1,10,43,42,-1,11,12,44,-1,11,44,43,-1,12,13,45,-1,12,45,44,-1,13,14,46,-1,13,46,45,-1,14,15,47,-1,14,47,46,-1,15,16,48,-1,15,48,47,-1,16,17,49,-1,16,49,48,-1,17,18,50,-1,17,50,49,-1,18,19,51,-1,18,51,50,-1,19,20,52,-1,19,52,51,-1,20,21,53,-1,20,53,52,-1,21,22,54,-1,21,54,53,-1,22,23,55,-1,22,55,54,-1,23,24,56,-1,23,56,55,-1,24,25,57,-1,24,57,56,-1,25,26,58,-1,25,58,57,-1,26,27,59,-1,26,59,58,-1,27,28,60,-1,27,60,59,-1,28,29,61,-1,28,61,60,-1,29,30,62,-1,29,62,61,-1,30,31,63,-1,30,63,62,-1,32,33,34,-1,32,34,35,-1,32,35,36,-1,32,36,37,-1,32,37,38,-1,32,38,39,-1,32,39,40,-1,32,40,41,-1,32,41,42,-1,32,42,43,-1,32,43,44,-1,32,44,45,-1,32,45,46,-1,32,46,47,-1,32,47,48,-1,32,48,49,-1,32,49,50,-1,32,50,51,-1,32,51,52,-1,32,52,53,-1,32,53,54,-1,32,54,55,-1,32,55,56,-1,32,56,57,-1,32,57,58,-1,32,58,59,-1,32,59,60,-1,32,60,61,-1,32,61,62,-1,32,62,63,-1,64,65,97,-1,64,97,96,-1,64,95,94,-1,64,94,93,-1,64,93,92,-1,64,92,91,-1,64,91,90,-1,64,90,89,-1,64,89,88,-1,64,88,87,-1,64,87,86,-1,64,86,85,-1,64,85,84,-1,64,84,83,-1,64,83,82,-1,64,82,81,-1,64,81,80,-1,64,80,79,-1,64,79,78,-1,64,78,77,-1,64,77,76,-1,64,76,75,-1,64,75,74,-1,64,74,73,-1,64,73,72,-1,64,72,71,-1,64,71,70,-1,64,70,69,-1,64,69,68,-1,64,68,67,-1,64,67,66,-1,64,66,65,-1,64,96,127,-1,64,127,95,-1,65,66,98,-1,65,98,97,-1,66,67,99,-1,66,99,98,-1,67,68,100,-1,67,100,99,-1,68,69,101,-1,68,101,100,-1,69,70,102,-1,69,102,101,-1,70,71,103,-1,70,103,102,-1,71,72,104,-1,71,104,103,-1,72,73,105,-1,72,105,104,-1,73,74,106,-1,73,106,105,-1,74,75,107,-1,74,107,106,-1,75,76,108,-1,75,108,107,-1,76,77,109,-1,76,109,108,-1,77,78,110,-1,77,110,109,-1,78,79,111,-1,78,111,110,-1,79,80,112,-1,79,112,111,-1,80,81,113,-1,80,113,112,-1,81,82,114,-1,81,114,113,-1,82,83,115,-1,82,115,114,-1,83,84,116,-1,83,116,115,-1,84,85,117,-1,84,117,116,-1,85,86,118,-1,85,118,117,-1,86,87,119,-1,86,119,118,-1,87,88,120,-1,87,120,119,-1,88,89,121,-1,88,121,120,-1,89,90,122,-1,89,122,121,-1,90,91,123,-1,90,123,122,-1,91,92,124,-1,91,124,123,-1,92,93,125,-1,92,125,124,-1,93,94,126,-1,93,126,125,-1,94,95,127,-1,94,127,126,-1,96,97,98,-1,96,98,99,-1,96,99,100,-1,96,100,101,-1,96,101,102,-1,96,102,103,-1,96,103,104,-1,96,104,105,-1,96,105,106,-1,96,106,107,-1,96,107,108,-1,96,108,109,-1,96,109,110,-1,96,110,111,-1,96,111,112,-1,96,112,113,-1,96,113,114,-1,96,114,115,-1,96,115,116,-1,96,116,117,-1,96,117,118,-1,96,118,119,-1,96,119,120,-1,96,120,121,-1,96,121,122,-1,96,122,123,-1,96,123,124,-1,96,124,125,-1,96,125,126,-1,96,126,127,-1,128,129,149,-1,128,149,148,-1,128,131,142,-1,128,142,141,-1,128,132,135,-1,128,135,131,-1,128,141,154,-1,128,154,153,-1,128,148,151,-1,128,151,132,-1,128,153,152,-1,128,152,129,-1,129,130,134,-1,129,134,133,-1,129,133,150,-1,129,150,149,-1,129,140,143,-1,129,143,130,-1,129,152,155,-1,129,155,140,-1,130,131,147,-1,130,147,146,-1,130,136,139,-1,130,139,134,-1,130,143,142,-1,130,142,131,-1,130,146,145,-1,130,145,136,-1,131,135,138,-1,131,138,137,-1,131,137,144,-1,131,144,147,-1,132,133,157,-1,132,157,156,-1,132,151,164,-1,132,164,167,-1,132,156,159,-1,132,159,135,-1,132,167,166,-1,132,166,133,-1,133,134,158,-1,133,158,157,-1,133,166,165,-1,133,165,150,-1,134,135,159,-1,134,159,158,-1,134,139,162,-1,134,162,161,-1,134,161,160,-1,134,160,135,-1,135,160,163,-1,135,163,138,-1,136,137,138,-1,136,138,139,-1,136,145,144,-1,136,144,137,-1,138,163,162,-1,138,162,139,-1,140,141,142,-1,140,142,143,-1,140,155,154,-1,140,154,141,-1,144,145,146,-1,144,146,147,-1,148,149,150,-1,148,150,151,-1,150,165,164,-1,150,164,151,-1,152,153,154,-1,152,154,155,-1,156,157,158,-1,156,158,159,-1,160,161,162,-1,160,162,163,-1,164,165,166,-1,164,166,167,-1,168,169,201,-1,168,201,200,-1,168,199,198,-1,168,198,197,-1,168,197,196,-1,168,196,195,-1,168,195,194,-1,168,194,193,-1,168,193,192,-1,168,192,191,-1,168,191,190,-1,168,190,189,-1,168,189,188,-1,168,188,187,-1,168,187,186,-1,168,186,185,-1,168,185,184,-1,168,184,183,-1,168,183,182,-1,168,182,181,-1,168,181,180,-1,168,180,179,-1,168,179,178,-1,168,178,177,-1,168,177,176,-1,168,176,175,-1,168,175,174,-1,168,174,173,-1,168,173,172,-1,168,172,171,-1,168,171,170,-1,168,170,169,-1,168,200,231,-1,168,231,199,-1,169,170,202,-1,169,202,201,-1,170,171,203,-1,170,203,202,-1,171,172,204,-1,171,204,203,-1,172,173,205,-1,172,205,204,-1,173,174,206,-1,173,206,205,-1,174,175,207,-1,174,207,206,-1,175,176,208,-1,175,208,207,-1,176,177,209,-1,176,209,208,-1,177,178,210,-1,177,210,209,-1,178,179,211,-1,178,211,210,-1,179,180,212,-1,179,212,211,-1,180,181,213,-1,180,213,212,-1,181,182,214,-1,181,214,213,-1,182,183,215,-1,182,215,214,-1,183,184,216,-1,183,216,215,-1,184,185,217,-1,184,217,216,-1,185,186,218,-1,185,218,217,-1,186,187,219,-1,186,219,218,-1,187,188,220,-1,187,220,219,-1,188,189,221,-1,188,221,220,-1,189,190,222,-1,189,222,221,-1,190,191,223,-1,190,223,222,-1,191,192,224,-1,191,224,223,-1,192,193,225,-1,192,225,224,-1,193,194,226,-1,193,226,225,-1,194,195,227,-1,194,227,226,-1,195,196,228,-1,195,228,227,-1,196,197,229,-1,196,229,228,-1,197,198,230,-1,197,230,229,-1,198,199,231,-1,198,231,230,-1,200,201,202,-1,200,202,203,-1,200,203,204,-1,200,204,205,-1,200,205,206,-1,200,206,207,-1,200,207,208,-1,200,208,209,-1,200,209,210,-1,200,210,211,-1,200,211,212,-1,200,212,213,-1,200,213,214,-1,200,214,215,-1,200,215,216,-1,200,216,217,-1,200,217,218,-1,200,218,219,-1,200,219,220,-1,200,220,221,-1,200,221,222,-1,200,222,223,-1,200,223,224,-1,200,224,225,-1,200,225,226,-1,200,226,227,-1,200,227,228,-1,200,228,229,-1,200,229,230,-1,200,230,231,-1,232,233,265,-1,232,265,264,-1,232,263,262,-1,232,262,261,-1,232,261,260,-1,232,260,259,-1,232,259,258,-1,232,258,257,-1,232,257,256,-1,232,256,255,-1,232,255,254,-1,232,254,253,-1,232,253,252,-1,232,252,251,-1,232,251,250,-1,232,250,249,-1,232,249,248,-1,232,248,247,-1,232,247,246,-1,232,246,245,-1,232,245,244,-1,232,244,243,-1,232,243,242,-1,232,242,241,-1,232,241,240,-1,232,240,239,-1,232,239,238,-1,232,238,237,-1,232,237,236,-1,232,236,235,-1,232,235,234,-1,232,234,233,-1,232,264,295,-1,232,295,263,-1,233,234,266,-1,233,266,265,-1,234,235,267,-1,234,267,266,-1,235,236,268,-1,235,268,267,-1,236,237,269,-1,236,269,268,-1,237,238,270,-1,237,270,269,-1,238,239,271,-1,238,271,270,-1,239,240,272,-1,239,272,271,-1,240,241,273,-1,240,273,272,-1,241,242,274,-1,241,274,273,-1,242,243,275,-1,242,275,274,-1,243,244,276,-1,243,276,275,-1,244,245,277,-1,244,277,276,-1,245,246,278,-1,245,278,277,-1,246,247,279,-1,246,279,278,-1,247,248,280,-1,247,280,279,-1,248,249,281,-1,248,281,280,-1,249,250,282,-1,249,282,281,-1,250,251,283,-1,250,283,282,-1,251,252,284,-1,251,284,283,-1,252,253,285,-1,252,285,284,-1,253,254,286,-1,253,286,285,-1,254,255,287,-1,254,287,286,-1,255,256,288,-1,255,288,287,-1,256,257,289,-1,256,289,288,-1,257,258,290,-1,257,290,289,-1,258,259,291,-1,258,291,290,-1,259,260,292,-1,259,292,291,-1,260,261,293,-1,260,293,292,-1,261,262,294,-1,261,294,293,-1,262,263,295,-1,262,295,294,-1,264,265,266,-1,264,266,267,-1,264,267,268,-1,264,268,269,-1,264,269,270,-1,264,270,271,-1,264,271,272,-1,264,272,273,-1,264,273,274,-1,264,274,275,-1,264,275,276,-1,264,276,277,-1,264,277,278,-1,264,278,279,-1,264,279,280,-1,264,280,281,-1,264,281,282,-1,264,282,283,-1,264,283,284,-1,264,284,285,-1,264,285,286,-1,264,286,287,-1,264,287,288,-1,264,288,289,-1,264,289,290,-1,264,290,291,-1,264,291,292,-1,264,292,293,-1,264,293,294,-1,264,294,295,-1],creaseAngle=0.785,
        coord=Coordinate(point=[(.52,1.08,0),(.51001,1.08,.10145),(.48042,1.08,.199),(.43236,1.08,.2889),(.3677,1.08,.3677),(.2889,1.08,.43236),(.199,1.08,.48042),(.10145,1.08,.51001),(0,1.08,.52),(-.10145,1.08,.51001),(-.199,1.08,.48042),(-.2889,1.08,.43236),(-.3677,1.08,.3677),(-.43236,1.08,.2889),(-.48042,1.08,.199),(-.51001,1.08,.10145),(-.52,1.08,0),(-.51001,1.08,-.10145),(-.48042,1.08,-.199),(-.43236,1.08,-.2889),(-.3677,1.08,-.3677),(-.2889,1.08,-.43236),(-.199,1.08,-.48042),(-.10145,1.08,-.51001),(-0,1.08,-.52),(.10145,1.08,-.51001),(.199,1.08,-.48042),(.2889,1.08,-.43236),(.3677,1.08,-.3677),(.43236,1.08,-.2889),(.48042,1.08,-.199),(.51001,1.08,-.10145),(.52,.98,0),(.51001,.98,.10145),(.48042,.98,.199),(.43236,.98,.2889),(.3677,.98,.3677),(.2889,.98,.43236),(.199,.98,.48042),(.10145,.98,.51001),(0,.98,.52),(-.10145,.98,.51001),(-.199,.98,.48042),(-.2889,.98,.43236),(-.3677,.98,.3677),(-.43236,.98,.2889),(-.48042,.98,.199),(-.51001,.98,.10145),(-.52,.98,0),(-.51001,.98,-.10145),(-.48042,.98,-.199),(-.43236,.98,-.2889),(-.3677,.98,-.3677),(-.2889,.98,-.43236),(-.199,.98,-.48042),(-.10145,.98,-.51001),(-0,.98,-.52),(.10145,.98,-.51001),(.199,.98,-.48042),(.2889,.98,-.43236),(.3677,.98,-.3677),(.43236,.98,-.2889),(.48042,.98,-.199),(.51001,.98,-.10145),(.52,1.6,0),(.51001,1.6,.10145),(.48042,1.6,.199),(.43236,1.6,.2889),(.3677,1.6,.3677),(.2889,1.6,.43236),(.199,1.6,.48042),(.10145,1.6,.51001),(0,1.6,.52),(-.10145,1.6,.51001),(-.199,1.6,.48042),(-.2889,1.6,.43236),(-.3677,1.6,.3677),(-.43236,1.6,.2889),(-.48042,1.6,.199),(-.51001,1.6,.10145),(-.52,1.6,0),(-.51001,1.6,-.10145),(-.48042,1.6,-.199),(-.43236,1.6,-.2889),(-.3677,1.6,-.3677),(-.2889,1.6,-.43236),(-.199,1.6,-.48042),(-.10145,1.6,-.51001),(-0,1.6,-.52),(.10145,1.6,-.51001),(.199,1.6,-.48042),(.2889,1.6,-.43236),(.3677,1.6,-.3677),(.43236,1.6,-.2889),(.48042,1.6,-.199),(.51001,1.6,-.10145),(.52,1.5,0),(.51001,1.5,.10145),(.48042,1.5,.199),(.43236,1.5,.2889),(.3677,1.5,.3677),(.2889,1.5,.43236),(.199,1.5,.48042),(.10145,1.5,.51001),(0,1.5,.52),(-.10145,1.5,.51001),(-.199,1.5,.48042),(-.2889,1.5,.43236),(-.3677,1.5,.3677),(-.43236,1.5,.2889),(-.48042,1.5,.199),(-.51001,1.5,.10145),(-.52,1.5,0),(-.51001,1.5,-.10145),(-.48042,1.5,-.199),(-.43236,1.5,-.2889),(-.3677,1.5,-.3677),(-.2889,1.5,-.43236),(-.199,1.5,-.48042),(-.10145,1.5,-.51001),(-0,1.5,-.52),(.10145,1.5,-.51001),(.199,1.5,-.48042),(.2889,1.5,-.43236),(.3677,1.5,-.3677),(.43236,1.5,-.2889),(.48042,1.5,-.199),(.51001,1.5,-.10145),(-.5,1.08,.5),(-.5,1.5,.5),(.5,1.5,.5),(.5,1.08,.5),(-.5,1.08,-.5),(-.5,1.5,-.5),(.5,1.5,-.5),(.5,1.08,-.5),(1.18983,1.5,.5),(1.18983,1.08,.5),(1.18983,1.08,-.5),(1.18983,1.5,-.5),(-.5,1.5,1.27671),(-.5,1.08,1.27671),(.5,1.08,1.27671),(.5,1.5,1.27671),(1.18983,1.08,1.27671),(1.18983,1.5,1.27671),(.5,1.5,1.27671),(.5,1.08,1.27671),(-.79269,1.08,.5),(-.79269,1.5,.5),(-.79269,1.5,-.5),(-.79269,1.08,-.5),(-.79269,1.5,.5),(-.79269,1.08,.5),(-.79269,1.08,1.27671),(-.79269,1.5,1.27671),(-.5,1.08,-.59722),(-.5,1.5,-.59722),(.5,1.5,-.59722),(.5,1.08,-.59722),(.5,1.08,-.59722),(.5,1.5,-.59722),(1.18983,1.5,-.59722),(1.18983,1.08,-.59722),(-.79269,1.08,-.59722),(-.79269,1.5,-.59722),(-.5,1.5,-.59722),(-.5,1.08,-.59722),(.44,.98028,0),(.43155,.98028,.08584),(.40651,.98028,.16838),(.36585,.98028,.24445),(.31113,.98028,.31113),(.24445,.98028,.36585),(.16838,.98028,.40651),(.08584,.98028,.43155),(0,.98028,.44),(-.08584,.98028,.43155),(-.16838,.98028,.40651),(-.24445,.98028,.36585),(-.31113,.98028,.31113),(-.36585,.98028,.24445),(-.40651,.98028,.16838),(-.43155,.98028,.08584),(-.44,.98028,0),(-.43155,.98028,-.08584),(-.40651,.98028,-.16838),(-.36585,.98028,-.24445),(-.31113,.98028,-.31113),(-.24445,.98028,-.36585),(-.16838,.98028,-.40651),(-.08584,.98028,-.43155),(-0,.98028,-.44),(.08584,.98028,-.43155),(.16838,.98028,-.40651),(.24445,.98028,-.36585),(.31113,.98028,-.31113),(.36585,.98028,-.24445),(.40651,.98028,-.16838),(.43155,.98028,-.08584),(.44,.10028,0),(.43155,.10028,.08584),(.40651,.10028,.16838),(.36585,.10028,.24445),(.31113,.10028,.31113),(.24445,.10028,.36585),(.16838,.10028,.40651),(.08584,.10028,.43155),(0,.10028,.44),(-.08584,.10028,.43155),(-.16838,.10028,.40651),(-.24445,.10028,.36585),(-.31113,.10028,.31113),(-.36585,.10028,.24445),(-.40651,.10028,.16838),(-.43155,.10028,.08584),(-.44,.10028,0),(-.43155,.10028,-.08584),(-.40651,.10028,-.16838),(-.36585,.10028,-.24445),(-.31113,.10028,-.31113),(-.24445,.10028,-.36585),(-.16838,.10028,-.40651),(-.08584,.10028,-.43155),(-0,.10028,-.44),(.08584,.10028,-.43155),(.16838,.10028,-.40651),(.24445,.10028,-.36585),(.31113,.10028,-.31113),(.36585,.10028,-.24445),(.40651,.10028,-.16838),(.43155,.10028,-.08584),(.52,.1,0),(.51001,.1,.10145),(.48042,.1,.199),(.43236,.1,.2889),(.3677,.1,.3677),(.2889,.1,.43236),(.199,.1,.48042),(.10145,.1,.51001),(0,.1,.52),(-.10145,.1,.51001),(-.199,.1,.48042),(-.2889,.1,.43236),(-.3677,.1,.3677),(-.43236,.1,.2889),(-.48042,.1,.199),(-.51001,.1,.10145),(-.52,.1,0),(-.51001,.1,-.10145),(-.48042,.1,-.199),(-.43236,.1,-.2889),(-.3677,.1,-.3677),(-.2889,.1,-.43236),(-.199,.1,-.48042),(-.10145,.1,-.51001),(-0,.1,-.52),(.10145,.1,-.51001),(.199,.1,-.48042),(.2889,.1,-.43236),(.3677,.1,-.3677),(.43236,.1,-.2889),(.48042,.1,-.199),(.51001,.1,-.10145),(.52,0,0),(.51001,0,.10145),(.48042,0,.199),(.43236,0,.2889),(.3677,0,.3677),(.2889,0,.43236),(.199,0,.48042),(.10145,0,.51001),(0,0,.52),(-.10145,0,.51001),(-.199,0,.48042),(-.2889,0,.43236),(-.3677,0,.3677),(-.43236,0,.2889),(-.48042,0,.199),(-.51001,0,.10145),(-.52,0,0),(-.51001,0,-.10145),(-.48042,0,-.199),(-.43236,0,-.2889),(-.3677,0,-.3677),(-.2889,0,-.43236),(-.199,0,-.48042),(-.10145,0,-.51001),(-0,0,-.52),(.10145,0,-.51001),(.199,0,-.48042),(.2889,0,-.43236),(.3677,0,-.3677),(.43236,0,-.2889),(.48042,0,-.199),(.51001,0,-.10145)])))])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful for CenterPost.py")
