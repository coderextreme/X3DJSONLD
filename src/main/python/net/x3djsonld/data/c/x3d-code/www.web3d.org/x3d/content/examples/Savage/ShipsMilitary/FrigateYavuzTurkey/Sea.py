###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.0',
  head=head(
    children=[
    meta(content='Sea.x3d',name='title'),
    meta(content='Sea surface.',name='description'),
    meta(content='Modified with a different color and value by Ozan APAYDIN',name='description'),
    meta(content='Keith J Ho',name='creator'),
    meta(content='25 January 2001',name='created'),
    meta(content='2 January 2019',name='modified'),
    meta(content='https://savage.nps.edu/Savage/ShipsMilitary/FrigateYavuzTurkey/Sea.x3d',name='identifier'),
    meta(content='X3D-Edit 3.2, https://savage.nps.edu/X3D-Edit',name='generator'),
    meta(content='../../license.html',name='license')]),
  Scene=Scene(
    children=[
    Viewpoint(position=(0,0,20)),
    Group(
      children=[
      Transform(scale=(1,.5,1),
        children=[
        Transform(translation=(0,35,100),
          children=[
          Transform(rotation=(0,1,0,-1.57),
            children=[
            Transform(translation=(0,150,0),
              children=[
              Transform(rotation=(1,0,0,-1.57),scale=(100,100,10),translation=(-150,-200,150),
                children=[
                Group(
                  children=[
                  Transform(
                    children=[
                    Shape(
                      geometry=Extrusion(DEF='flag',crossSection=[(0,3),(0,-3)],solid=False,spine=[(0,0,0.00),(0,0.2,0.10),(0,0.4,0.19),(0,0.6,0.28),(0,0.8,0.36),(0,1,0.42),(0,1.2,0.47),(0,1.4,0.49),(0,1.6,0.50),(0,1.8,0.49),(0,2,0.45),(0,2.2,0.40),(0,2.4,0.34),(0,2.6,0.26),(0,2.8,0.17),(0,3,0.07),(0,3.2,-0.03),(0,3.4,-0.13),(0,3.6,-0.22),(0,3.8,-0.31),(0,4,-0.38),(0,4.2,-0.44),(0,4.4,-0.48),(0,4.6,-0.50),(0,4.8,-0.50),(0,5,-0.48),(0,5.2,-0.44),(0,5.4,-0.39),(0,5.6,-0.32),(0,5.8,-0.23),(0,6,-0.14),(0,6.2,-0.04),(0,6.4,0.06),(0,6.6,0.16),(0,6.8,0.25),(0,7,0.33),(0,7.2,0.40),(0,7.4,0.45),(0,7.6,0.48),(0,7.8,0.50),(0,8,0.49),(0,8.2,0.47),(0,8.4,0.43),(0,8.6,0.37),(0,8.8,0.29),(0,9,0.21),(0,9.2,0.11),(0,9.4,0.01),(0,9.6,-0.09),(0,9.8,-0.18),(0,10,-0.27),(0,10.2,-0.35),(0,10.4,-0.41),(0,10.6,-0.46),(0,10.8,-0.49),(0,11,-0.50),(0,11.2,-0.49),(0,11.4,-0.46),(0,11.6,-0.41)]),
                      appearance=Appearance(
                        material=Material(emissiveColor=(0.1,0.4,1.0),shininess=0.7)))])])])])])])])]),
    TimeSensor(DEF='flagclock',cycleInterval=10,loop=True),
    CoordinateInterpolator(DEF='flagflutter',key=[0.0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1.0],keyValue=[(0,0,0.00),(0,0.2,0.10),(0,0.4,0.19),(0,0.6,0.28),(0,0.8,0.36),(0,1,0.42),(0,1.2,0.47),(0,1.4,0.49),(0,1.6,0.50),(0,1.8,0.49),(0,2,0.45),(0,2.2,0.40),(0,2.4,0.34),(0,2.6,0.26),(0,2.8,0.17),(0,3,0.07),(0,3.2,-0.03),(0,3.4,-0.13),(0,3.6,-0.22),(0,3.8,-0.31),(0,4,-0.38),(0,4.2,-0.44),(0,4.4,-0.48),(0,4.6,-0.50),(0,4.8,-0.50),(0,5,-0.48),(0,5.2,-0.44),(0,5.4,-0.39),(0,5.6,-0.32),(0,5.8,-0.23),(0,6,-0.14),(0,6.2,-0.04),(0,6.4,0.06),(0,6.6,0.16),(0,6.8,0.25),(0,7,0.33),(0,7.2,0.40),(0,7.4,0.45),(0,7.6,0.48),(0,7.8,0.50),(0,8,0.49),(0,8.2,0.47),(0,8.4,0.43),(0,8.6,0.37),(0,8.8,0.29),(0,9,0.21),(0,9.2,0.11),(0,9.4,0.01),(0,9.6,-0.09),(0,9.8,-0.18),(0,10,-0.27),(0,10.2,-0.35),(0,10.4,-0.41),(0,10.6,-0.46),(0,10.8,-0.49),(0,11,-0.50),(0,11.2,-0.49),(0,11.4,-0.46),(0,11.6,-0.41),(0,0,-0.29),(0,0.2,-0.21),(0,0.4,-0.11),(0,0.6,-0.01),(0,0.8,0.09),(0,1,0.18),(0,1.2,0.27),(0,1.4,0.35),(0,1.6,0.41),(0,1.8,0.46),(0,2,0.49),(0,2.2,0.50),(0,2.4,0.49),(0,2.6,0.46),(0,2.8,0.41),(0,3,0.35),(0,3.2,0.27),(0,3.4,0.18),(0,3.6,0.08),(0,3.8,-0.02),(0,4,-0.11),(0,4.2,-0.21),(0,4.4,-0.29),(0,4.6,-0.37),(0,4.8,-0.43),(0,5,-0.47),(0,5.2,-0.50),(0,5.4,-0.50),(0,5.6,-0.48),(0,5.8,-0.45),(0,6,-0.40),(0,6.2,-0.33),(0,6.4,-0.24),(0,6.6,-0.15),(0,6.8,-0.06),(0,7,0.04),(0,7.2,0.14),(0,7.4,0.23),(0,7.6,0.32),(0,7.8,0.39),(0,8,0.44),(0,8.2,0.48),(0,8.4,0.50),(0,8.6,0.50),(0,8.8,0.47),(0,9,0.43),(0,9.2,0.38),(0,9.4,0.30),(0,9.6,0.22),(0,9.8,0.13),(0,10,0.03),(0,10.2,-0.07),(0,10.4,-0.17),(0,10.6,-0.26),(0,10.8,-0.34),(0,11,-0.41),(0,11.2,-0.46),(0,11.4,-0.49),(0,11.6,-0.50),(0,0,-0.48),(0,0.2,-0.44),(0,0.4,-0.38),(0,0.6,-0.30),(0,0.8,-0.22),(0,1,-0.13),(0,1.2,-0.03),(0,1.4,0.07),(0,1.6,0.17),(0,1.8,0.26),(0,2,0.34),(0,2.2,0.40),(0,2.4,0.46),(0,2.6,0.49),(0,2.8,0.50),(0,3,0.49),(0,3.2,0.47),(0,3.4,0.42),(0,3.6,0.36),(0,3.8,0.28),(0,4,0.19),(0,4.2,0.10),(0,4.4,0.00),(0,4.6,-0.10),(0,4.8,-0.20),(0,5,-0.28),(0,5.2,-0.36),(0,5.4,-0.42),(0,5.6,-0.47),(0,5.8,-0.49),(0,6,-0.50),(0,6.2,-0.49),(0,6.4,-0.45),(0,6.6,-0.40),(0,6.8,-0.34),(0,7,-0.26),(0,7.2,-0.17),(0,7.4,-0.07),(0,7.6,0.03),(0,7.8,0.13),(0,8,0.22),(0,8.2,0.31),(0,8.4,0.38),(0,8.6,0.44),(0,8.8,0.48),(0,9,0.50),(0,9.2,0.50),(0,9.4,0.48),(0,9.6,0.44),(0,9.8,0.39),(0,10,0.31),(0,10.2,0.23),(0,10.4,0.14),(0,10.6,0.04),(0,10.8,-0.06),(0,11,-0.16),(0,11.2,-0.25),(0,11.4,-0.33),(0,11.6,-0.40),(0,0,-0.48),(0,0.2,-0.50),(0,0.4,-0.50),(0,0.6,-0.48),(0,0.8,-0.44),(0,1,-0.39),(0,1.2,-0.32),(0,1.4,-0.23),(0,1.6,-0.14),(0,1.8,-0.04),(0,2,0.06),(0,2.2,0.16),(0,2.4,0.25),(0,2.6,0.33),(0,2.8,0.40),(0,3,0.45),(0,3.2,0.48),(0,3.4,0.50),(0,3.6,0.49),(0,3.8,0.47),(0,4,0.43),(0,4.2,0.37),(0,4.4,0.29),(0,4.6,0.21),(0,4.8,0.11),(0,5,0.01),(0,5.2,-0.09),(0,5.4,-0.18),(0,5.6,-0.27),(0,5.8,-0.35),(0,6,-0.41),(0,6.2,-0.46),(0,6.4,-0.49),(0,6.6,-0.50),(0,6.8,-0.49),(0,7,-0.46),(0,7.2,-0.41),(0,7.4,-0.35),(0,7.6,-0.27),(0,7.8,-0.18),(0,8,-0.08),(0,8.2,0.02),(0,8.4,0.12),(0,8.6,0.21),(0,8.8,0.30),(0,9,0.37),(0,9.2,0.43),(0,9.4,0.47),(0,9.6,0.50),(0,9.8,0.50),(0,10,0.48),(0,10.2,0.45),(0,10.4,0.39),(0,10.6,0.33),(0,10.8,0.24),(0,11,0.15),(0,11.2,0.05),(0,11.4,-0.05),(0,11.6,-0.14),(0,0,-0.29),(0,0.2,-0.37),(0,0.4,-0.43),(0,0.6,-0.47),(0,0.8,-0.50),(0,1,-0.50),(0,1.2,-0.48),(0,1.4,-0.45),(0,1.6,-0.40),(0,1.8,-0.33),(0,2,-0.24),(0,2.2,-0.15),(0,2.4,-0.06),(0,2.6,0.04),(0,2.8,0.14),(0,3,0.23),(0,3.2,0.32),(0,3.4,0.39),(0,3.6,0.44),(0,3.8,0.48),(0,4,0.50),(0,4.2,0.50),(0,4.4,0.48),(0,4.6,0.43),(0,4.8,0.38),(0,5,0.30),(0,5.2,0.22),(0,5.4,0.13),(0,5.6,0.03),(0,5.8,-0.07),(0,6,-0.17),(0,6.2,-0.26),(0,6.4,-0.34),(0,6.6,-0.41),(0,6.8,-0.46),(0,7,-0.49),(0,7.2,-0.50),(0,7.4,-0.49),(0,7.6,-0.47),(0,7.8,-0.42),(0,8,-0.36),(0,8.2,-0.28),(0,8.4,-0.19),(0,8.6,-0.10),(0,8.8,0.00),(0,9,0.10),(0,9.2,0.20),(0,9.4,0.28),(0,9.6,0.36),(0,9.8,0.42),(0,10,0.47),(0,10.2,0.49),(0,10.4,0.50),(0,10.6,0.49),(0,10.8,0.45),(0,11,0.40),(0,11.2,0.34),(0,11.4,0.26),(0,11.6,0.17),(0,0,0.00),(0,0.2,-0.10),(0,0.4,-0.20),(0,0.6,-0.28),(0,0.8,-0.36),(0,1,-0.42),(0,1.2,-0.47),(0,1.4,-0.49),(0,1.6,-0.50),(0,1.8,-0.49),(0,2,-0.45),(0,2.2,-0.40),(0,2.4,-0.34),(0,2.6,-0.26),(0,2.8,-0.17),(0,3,-0.07),(0,3.2,0.03),(0,3.4,0.13),(0,3.6,0.22),(0,3.8,0.31),(0,4,0.38),(0,4.2,0.44),(0,4.4,0.48),(0,4.6,0.50),(0,4.8,0.50),(0,5,0.48),(0,5.2,0.44),(0,5.4,0.39),(0,5.6,0.32),(0,5.8,0.23),(0,6,0.14),(0,6.2,0.04),(0,6.4,-0.06),(0,6.6,-0.16),(0,6.8,-0.25),(0,7,-0.33),(0,7.2,-0.40),(0,7.4,-0.45),(0,7.6,-0.48),(0,7.8,-0.50),(0,8,-0.49),(0,8.2,-0.47),(0,8.4,-0.43),(0,8.6,-0.37),(0,8.8,-0.29),(0,9,-0.21),(0,9.2,-0.11),(0,9.4,-0.01),(0,9.6,0.09),(0,9.8,0.18),(0,10,0.27),(0,10.2,0.35),(0,10.4,0.41),(0,10.6,0.46),(0,10.8,0.49),(0,11,0.50),(0,11.2,0.49),(0,11.4,0.46),(0,11.6,0.41),(0,0,0.29),(0,0.2,0.21),(0,0.4,0.11),(0,0.6,0.01),(0,0.8,-0.09),(0,1,-0.18),(0,1.2,-0.27),(0,1.4,-0.35),(0,1.6,-0.41),(0,1.8,-0.46),(0,2,-0.49),(0,2.2,-0.50),(0,2.4,-0.49),(0,2.6,-0.46),(0,2.8,-0.41),(0,3,-0.35),(0,3.2,-0.27),(0,3.4,-0.18),(0,3.6,-0.08),(0,3.8,0.02),(0,4,0.11),(0,4.2,0.21),(0,4.4,0.30),(0,4.6,0.37),(0,4.8,0.43),(0,5,0.47),(0,5.2,0.50),(0,5.4,0.50),(0,5.6,0.48),(0,5.8,0.45),(0,6,0.39),(0,6.2,0.33),(0,6.4,0.24),(0,6.6,0.15),(0,6.8,0.05),(0,7,-0.05),(0,7.2,-0.14),(0,7.4,-0.24),(0,7.6,-0.32),(0,7.8,-0.39),(0,8,-0.44),(0,8.2,-0.48),(0,8.4,-0.50),(0,8.6,-0.50),(0,8.8,-0.47),(0,9,-0.43),(0,9.2,-0.38),(0,9.4,-0.30),(0,9.6,-0.22),(0,9.8,-0.12),(0,10,-0.03),(0,10.2,0.07),(0,10.4,0.17),(0,10.6,0.26),(0,10.8,0.34),(0,11,0.41),(0,11.2,0.46),(0,11.4,0.49),(0,11.6,0.50),(0,0,0.48),(0,0.2,0.43),(0,0.4,0.38),(0,0.6,0.30),(0,0.8,0.22),(0,1,0.13),(0,1.2,0.03),(0,1.4,-0.07),(0,1.6,-0.17),(0,1.8,-0.26),(0,2,-0.34),(0,2.2,-0.41),(0,2.4,-0.46),(0,2.6,-0.49),(0,2.8,-0.50),(0,3,-0.49),(0,3.2,-0.47),(0,3.4,-0.42),(0,3.6,-0.36),(0,3.8,-0.28),(0,4,-0.19),(0,4.2,-0.10),(0,4.4,0.00),(0,4.6,0.10),(0,4.8,0.20),(0,5,0.28),(0,5.2,0.36),(0,5.4,0.42),(0,5.6,0.47),(0,5.8,0.49),(0,6,0.50),(0,6.2,0.49),(0,6.4,0.45),(0,6.6,0.40),(0,6.8,0.34),(0,7,0.26),(0,7.2,0.17),(0,7.4,0.07),(0,7.6,-0.03),(0,7.8,-0.13),(0,8,-0.22),(0,8.2,-0.31),(0,8.4,-0.38),(0,8.6,-0.44),(0,8.8,-0.48),(0,9,-0.50),(0,9.2,-0.50),(0,9.4,-0.48),(0,9.6,-0.44),(0,9.8,-0.39),(0,10,-0.31),(0,10.2,-0.23),(0,10.4,-0.14),(0,10.6,-0.04),(0,10.8,0.06),(0,11,0.16),(0,11.2,0.25),(0,11.4,0.33),(0,11.6,0.40),(0,0,0.48),(0,0.2,0.50),(0,0.4,0.50),(0,0.6,0.48),(0,0.8,0.44),(0,1,0.39),(0,1.2,0.32),(0,1.4,0.23),(0,1.6,0.14),(0,1.8,0.04),(0,2,-0.06),(0,2.2,-0.16),(0,2.4,-0.25),(0,2.6,-0.33),(0,2.8,-0.40),(0,3,-0.45),(0,3.2,-0.48),(0,3.4,-0.50),(0,3.6,-0.49),(0,3.8,-0.47),(0,4,-0.43),(0,4.2,-0.37),(0,4.4,-0.29),(0,4.6,-0.21),(0,4.8,-0.11),(0,5,-0.01),(0,5.2,0.09),(0,5.4,0.18),(0,5.6,0.27),(0,5.8,0.35),(0,6,0.41),(0,6.2,0.46),(0,6.4,0.49),(0,6.6,0.50),(0,6.8,0.49),(0,7,0.46),(0,7.2,0.41),(0,7.4,0.35),(0,7.6,0.27),(0,7.8,0.18),(0,8,0.08),(0,8.2,-0.02),(0,8.4,-0.12),(0,8.6,-0.21),(0,8.8,-0.30),(0,9,-0.37),(0,9.2,-0.43),(0,9.4,-0.47),(0,9.6,-0.50),(0,9.8,-0.50),(0,10,-0.48),(0,10.2,-0.45),(0,10.4,-0.39),(0,10.6,-0.32),(0,10.8,-0.24),(0,11,-0.15),(0,11.2,-0.05),(0,11.4,0.05),(0,11.6,0.14),(0,0,0.30),(0,0.2,0.37),(0,0.4,0.43),(0,0.6,0.47),(0,0.8,0.50),(0,1,0.50),(0,1.2,0.48),(0,1.4,0.45),(0,1.6,0.39),(0,1.8,0.33),(0,2,0.24),(0,2.2,0.15),(0,2.4,0.06),(0,2.6,-0.04),(0,2.8,-0.14),(0,3,-0.24),(0,3.2,-0.32),(0,3.4,-0.39),(0,3.6,-0.44),(0,3.8,-0.48),(0,4,-0.50),(0,4.2,-0.50),(0,4.4,-0.47),(0,4.6,-0.43),(0,4.8,-0.38),(0,5,-0.30),(0,5.2,-0.22),(0,5.4,-0.12),(0,5.6,-0.03),(0,5.8,0.07),(0,6,0.17),(0,6.2,0.26),(0,6.4,0.34),(0,6.6,0.41),(0,6.8,0.46),(0,7,0.49),(0,7.2,0.50),(0,7.4,0.49),(0,7.6,0.46),(0,7.8,0.42),(0,8,0.36),(0,8.2,0.28),(0,8.4,0.19),(0,8.6,0.10),(0,8.8,0.00),(0,9,-0.10),(0,9.2,-0.20),(0,9.4,-0.28),(0,9.6,-0.36),(0,9.8,-0.42),(0,10,-0.47),(0,10.2,-0.49),(0,10.4,-0.50),(0,10.6,-0.49),(0,10.8,-0.45),(0,11,-0.40),(0,11.2,-0.34),(0,11.4,-0.26),(0,11.6,-0.16),(0,0,0.00),(0,0.2,0.10),(0,0.4,0.20),(0,0.6,0.28),(0,0.8,0.36),(0,1,0.42),(0,1.2,0.47),(0,1.4,0.49),(0,1.6,0.50),(0,1.8,0.49),(0,2,0.45),(0,2.2,0.40),(0,2.4,0.34),(0,2.6,0.26),(0,2.8,0.17),(0,3,0.07),(0,3.2,-0.03),(0,3.4,-0.13),(0,3.6,-0.22),(0,3.8,-0.31),(0,4,-0.38),(0,4.2,-0.44),(0,4.4,-0.48),(0,4.6,-0.50),(0,4.8,-0.50),(0,5,-0.48),(0,5.2,-0.44),(0,5.4,-0.39),(0,5.6,-0.31),(0,5.8,-0.23),(0,6,-0.14),(0,6.2,-0.04),(0,6.4,0.06),(0,6.6,0.16),(0,6.8,0.25),(0,7,0.33),(0,7.2,0.40),(0,7.4,0.45),(0,7.6,0.48),(0,7.8,0.50),(0,8,0.49),(0,8.2,0.47),(0,8.4,0.43),(0,8.6,0.37),(0,8.8,0.29),(0,9,0.20),(0,9.2,0.11),(0,9.4,0.01),(0,9.6,-0.09),(0,9.8,-0.18),(0,10,-0.27),(0,10.2,-0.35),(0,10.4,-0.41),(0,10.6,-0.46),(0,10.8,-0.49),(0,11,-0.50),(0,11.2,-0.49),(0,11.4,-0.46),(0,11.6,-0.41)]),
    ROUTE(fromField='fraction_changed',fromNode='flagclock',toField='set_fraction',toNode='flagflutter'),
    ROUTE(fromField='value_changed',fromNode='flagflutter',toField='set_spine',toNode='flag')])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful for Sea.py")
