###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    Shape(
      appearance=Appearance(
        material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0,0.05,0)),
        texture=ImageTexture(url=['../../images/4/world14-0.jpg'],repeatS=False,repeatT=False)),
      geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(67.45833802716578,-180.0416666667,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=22,xSpacing=1.0714287,zDimension=24,zSpacing=0.48913044,height=[60,-53,-43,-80,58,206,233,85,-39,-32,-56,-55,-60,60,60,448,329,28,128,602,236,38,57,-41,87,255,340,99,131,79,347,-57,-3,3,85,174,153,228,90,365,111,125,185,161,499,49,338,384,296,320,133,360,312,1,-37,-41,-40,-40,11,-67,-63,52,425,120,194,121,351,451,503,400,250,-76,82,303,-57,-58,-32,-31,-34,-21,-18,-23,-26,1,60,20,40,151,516,143,184,157,152,-7,-23,-33,-25,-34,-51,-37,-43,-28,-32,1,34,111,105,29,46,37,830,147,189,33,21,-30,-48,-56,-45,-50,-64,-51,-51,-35,-22,180,30,624,464,689,374,465,1051,504,14,-29,-30,-46,-40,-43,-50,-61,-62,-58,-45,141,124,610,425,230,730,435,396,607,273,14,-50,-38,-39,-39,-51,-68,-72,-55,-51,-48,-37,351,200,165,514,572,877,674,584,550,-67,-68,-74,-61,-50,-62,-75,-78,-65,-55,-52,-52,-42,-27,-22,-129,141,301,431,411,330,335,-120,-79,-64,-64,-72,-81,-72,-59,-51,-51,-54,-50,-43,-31,-32,-36,20,60,75,121,112,120,-99,-59,-48,-60,-85,-81,-61,-46,-44,-41,-37,-40,-47,-45,-42,-31,-22,13,27,31,35,38,-78,-73,-37,-31,-55,-64,-47,-41,-35,-38,-40,-43,-47,-43,-43,-46,-40,-39,-26,20,18,25,280,303,81,-26,-28,-52,-45,-45,-45,-46,-45,-47,-45,-41,-40,-42,-43,-45,-51,-58,-35,-35,-52,-18,-81,-92,-54,-55,-51,-51,-49,-49,-47,-45,-45,-43,-42,-41,-43,-47,-49,-52,-55,-66,-44,-47,-51,-61,-79,-59,-53,-59,-62,-58,-53,-50,-50,-45,-44,-39,-35,-30,-41,-48,-62,-74,-49,-57,-67,-69,-95,-77,-59,-69,-57,-66,-78,-58,-52,-54,-57,-54,-49,-46,-53,-84,-172,-362,-67,-75,-82,-90,-116,-117,-74,-98,-67,-97,-101,-68,-61,-59,-70,-82,-120,-201,-236,-723,-1829,-2529,-89,-95,-107,-127,-160,-152,-176,-152,-146,-132,-125,-157,-141,-97,-138,-173,-174,-295,-1626,-2688,-3006,-3180,-116,-134,-158,-183,-199,-198,-207,-199,-188,-180,-183,-204,-234,-243,-250,-295,-763,-1001,-580,-989,-3413,-3744,-133,-169,-198,-214,-223,-232,-244,-270,-233,-224,-198,-238,-376,-398,-394,-1019,-1652,-1785,-1252,-1638,-958,-1649,-589,-551,-508,-402,-339,-298,-338,-423,-422,-318,-226,-164,-263,-507,-601,-1582,-1984,-2037,-1983,-1077,-1050,-1823,-1007,-1022,-1150,-1418,-1744,-1802,-1759,-1622,-1496,-1104,-254,-193,-229,-501,-526,-1812,-1990,-1083,-2006,-1152,-741,-965,-1092,-1010,-976,-1788,-2019,-2182,-2192,-2112,-2086,-1942,-1834,-784,-298,-421,-538,-774,-1732,-1891,-2018,-1193,-604,-588,-1100,-974,-945,-1647,-2031,-2199,-2200,-2191,-2186,-2076,-2040,-1136,-357,-602,-588,-794,-2014,-1423,-2066,-1290,-654,-573],
        geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(0.0,0.0,-6378137.0),geoSystem=['GDC'])))])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
