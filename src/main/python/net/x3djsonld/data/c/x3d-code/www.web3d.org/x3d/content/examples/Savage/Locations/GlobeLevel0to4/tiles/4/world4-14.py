###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    Shape(
      appearance=Appearance(
        material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0,0.05,0)),
        texture=ImageTexture(url=['../../images/4/world4-14.jpg'],repeatS=False,repeatT=False)),
      geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(-45.04166532559549,134.95834272103156,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=22,xSpacing=1.0714287,zDimension=24,zSpacing=0.48913044,height=[-4465,-4321,-4227,-4138,-4028,-4671,-4593,-4398,-4680,-4770,-2609,-2021,-2871,-3869,-3488,-4618,-4870,-4522,-4380,-4585,-4656,-4606,-4430,-4538,-4487,-4387,-4242,-4651,-4299,-4551,-4685,-4832,-2630,-2877,-2976,-4035,-4072,-4219,-4241,-4670,-4715,-4677,-4693,-5217,-4618,-4586,-4576,-4507,-4095,-4487,-4685,-4653,-4612,-4906,-3741,-3496,-2728,-3272,-3721,-3040,-3185,-4650,-4977,-4621,-4898,-4707,-4724,-4596,-4609,-4618,-4461,-4738,-5050,-4675,-4898,-4802,-4321,-2167,-1102,-2795,-3557,-2622,-3222,-4599,-4745,-4654,-4990,-4965,-4788,-4840,-4624,-4667,-4639,-4607,-4502,-4691,-4842,-4777,-3414,-1260,-25,-415,-3586,-2702,-2964,-4585,-4639,-4649,-4721,-5086,-4875,-4861,-4703,-4781,-4705,-4507,-4412,-4677,-4662,-4499,-2956,3,463,169,-3250,-3223,-3988,-4539,-4646,-4655,-4529,-4588,-4878,-4779,-4680,-4923,-4813,-4491,-4746,-4710,-4915,-4500,-1879,78,150,127,-2854,-4046,-4232,-4576,-4662,-4534,-4513,-4657,-5072,-4905,-4899,-4927,-4905,-4933,-4791,-4813,-4967,-4071,-840,648,822,421,-2042,-4346,-4575,-4779,-4680,-4743,-4471,-4579,-5124,-5024,-4975,-4971,-4947,-4874,-5138,-5094,-4772,-3477,-117,560,584,352,-2166,-4350,-4718,-4673,-4740,-4712,-4443,-4388,-5164,-5099,-5040,-4907,-4986,-5174,-5250,-4982,-4115,-2260,-13,289,3,465,-2525,-4298,-4613,-4846,-4967,-4788,-4362,-4416,-5308,-5292,-5166,-5160,-4943,-5250,-5224,-4840,-3705,-147,2,-71,-65,-29,-2333,-4138,-4677,-4684,-3187,-4690,-4371,-4441,-5386,-5287,-5338,-5297,-5067,-4820,-4918,-4344,-2882,-85,-55,-83,-67,-2,-1746,-4265,-4673,-4653,-4439,-4751,-4503,-4445,-5570,-5391,-5461,-5331,-5244,-5363,-4931,-3536,-1791,-9,-60,-70,-83,-11,-2108,-4232,-4664,-4664,-4584,-4364,-4654,-4618,-5613,-5545,-5415,-5422,-5321,-5261,-4004,-2547,-987,-91,-65,-78,-67,-48,-1627,-4201,-4566,-4668,-4538,-4549,-4595,-5048,-5522,-5511,-5479,-5467,-5224,-4935,-2612,-162,-127,355,-80,0,3,-63,-2906,-4135,-4590,-4649,-4664,-4679,-4601,-4510,-5551,-5532,-5469,-5454,-5331,-2579,-192,111,101,122,28,39,36,-48,-132,-1431,-4575,-4582,-4676,-4599,-4502,-4473,-5563,-5484,-5327,-5287,-4766,-926,27,99,293,438,147,1003,666,154,87,-126,-4682,-5017,-4552,-4375,-4612,-3982,-5487,-5558,-5257,-4365,-858,-67,31,158,605,290,600,425,722,1264,801,-23,-4692,-4756,-4664,-4506,-4639,-4392,-5423,-5274,-3705,-111,-61,-3,34,150,143,266,173,225,522,1048,955,-95,-4596,-4711,-4739,-4436,-4616,-236,-4302,-3971,-169,-3,-51,-54,29,143,102,107,100,123,293,274,824,113,-4376,-4888,-4649,-4657,-4701,-4712,-2022,-2031,-108,21,-20,39,76,94,82,80,88,117,188,686,928,102,-4021,-4855,-4840,-4866,-4670,-4275,-1125,-221,-115,72,-36,25,91,62,59,67,84,108,207,396,573,611,-1624,-4970,-4880,-4871,-4536,-4605,-125,-69,-4,-26,-24,103,72,72,50,64,86,116,168,454,587,616,-228,-4880,-4869,-4962,-4680,-4643,-109,-64,-33,-27,-37,158,58,74,53,67,85,116,178,341,670,594,-200,-4779,-4852,-4940,-4645,-4613],
        geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(0.0,0.0,-6378137.0),geoSystem=['GDC'])))])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
