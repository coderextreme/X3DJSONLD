###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    meta(content='Six.x3d',name='title'),
    meta(content='3D Hull Number',name='description'),
    meta(content='Patrick Sullivan',name='creator'),
    meta(content='20 February 2006',name='created'),
    meta(content='14 January 2014',name='modified'),
    meta(content='1.0',name='version'),
    meta(content='Hull Numbers, ship markings',name='subject'),
    meta(content='https://savage.nps.edu/Savage/ModelDetailing/HullNumbers/Six.x3d',name='identifier'),
    meta(content='../../license.html',name='license')]),
  Scene=Scene(
    children=[
    Group(DEF='Six',
      children=[
      Transform(DEF='dad_HullNumber6_copy17',
        children=[
        Shape(DEF='HullNumber6_copy17',
          appearance=Appearance(
            material=Material(DEF='white2_mat',ambientIntensity=1,diffuseColor=(1,1,1),shininess=0,specularColor=(1,1,1))),
          geometry=IndexedFaceSet(coordIndex=[0,1,2,-1,0,2,3,-1,0,3,4,-1,0,4,5,-1,0,5,6,-1,0,6,1,-1,1,6,7,-1,1,7,2,-1,2,8,9,-1,2,9,3,-1,2,7,10,-1,2,10,8,-1,8,11,12,-1,8,12,9,-1,8,10,13,-1,8,13,11,-1,11,14,15,-1,11,15,12,-1,11,13,16,-1,11,16,14,-1,14,17,18,-1,14,18,15,-1,14,16,19,-1,14,19,17,-1,17,20,21,-1,17,21,18,-1,17,19,22,-1,17,22,20,-1,20,23,24,-1,20,24,21,-1,20,22,25,-1,20,25,23,-1,23,26,27,-1,23,27,24,-1,23,25,28,-1,23,28,26,-1,26,29,30,-1,26,30,27,-1,26,28,31,-1,26,31,29,-1,29,32,33,-1,29,33,34,-1,29,34,35,-1,29,35,30,-1,29,31,36,-1,29,36,32,-1,32,37,38,-1,32,38,33,-1,32,36,39,-1,32,39,37,-1,37,40,38,-1,37,39,41,-1,37,41,40,-1,40,42,43,-1,40,43,38,-1,40,41,44,-1,40,44,42,-1,42,45,46,-1,42,46,43,-1,42,44,47,-1,42,47,45,-1,45,48,49,-1,45,49,46,-1,45,47,50,-1,45,50,48,-1,48,51,52,-1,48,52,49,-1,48,50,53,-1,48,53,51,-1,51,54,55,-1,51,55,52,-1,51,53,56,-1,51,56,54,-1,54,57,55,-1,54,56,58,-1,54,58,57,-1,57,59,60,-1,57,60,55,-1,57,58,61,-1,57,61,59,-1,59,62,60,-1,59,61,63,-1,59,63,62,-1,62,64,65,-1,62,65,60,-1,62,63,66,-1,62,66,64,-1,64,67,68,-1,64,68,65,-1,64,66,69,-1,64,69,67,-1,67,70,71,-1,67,71,68,-1,67,69,72,-1,67,72,70,-1,70,73,71,-1,70,72,74,-1,70,74,73,-1,73,75,76,-1,73,76,71,-1,73,74,77,-1,73,77,75,-1,75,78,79,-1,75,79,76,-1,75,77,80,-1,75,80,78,-1,78,81,79,-1,78,80,82,-1,78,82,81,-1,81,83,84,-1,81,84,79,-1,81,82,85,-1,81,85,83,-1,83,30,35,-1,83,35,84,-1,83,85,86,-1,83,86,30,-1,30,86,87,-1,30,87,27,-1,27,87,88,-1,27,88,24,-1,24,88,89,-1,24,89,21,-1,21,89,90,-1,21,90,18,-1,18,90,91,-1,18,91,15,-1,15,91,92,-1,15,92,12,-1,12,92,93,-1,12,93,9,-1,9,94,3,-1,9,93,95,-1,9,95,94,-1,94,95,4,-1,94,4,3,-1,33,38,96,-1,33,96,97,-1,33,97,98,-1,33,98,34,-1,34,98,99,-1,34,99,35,-1,35,99,100,-1,35,100,84,-1,84,100,101,-1,84,101,79,-1,79,101,102,-1,79,102,76,-1,76,102,103,-1,76,103,71,-1,71,103,104,-1,71,104,68,-1,68,104,105,-1,68,105,65,-1,65,105,106,-1,65,106,60,-1,60,106,107,-1,60,107,55,-1,55,107,108,-1,55,108,52,-1,52,108,109,-1,52,109,49,-1,49,109,110,-1,49,110,46,-1,46,110,111,-1,46,111,43,-1,43,111,96,-1,43,96,38,-1,5,4,7,-1,5,7,6,-1,7,4,93,-1,7,93,10,-1,10,93,92,-1,10,92,13,-1,13,92,91,-1,13,91,16,-1,16,91,90,-1,16,90,19,-1,19,90,89,-1,19,89,22,-1,22,89,88,-1,22,88,25,-1,25,88,87,-1,25,87,28,-1,28,87,86,-1,28,86,31,-1,31,86,99,-1,31,99,98,-1,31,98,97,-1,31,97,36,-1,36,97,96,-1,36,96,39,-1,39,96,41,-1,41,96,111,-1,41,111,44,-1,44,111,110,-1,44,110,47,-1,47,110,109,-1,47,109,50,-1,50,109,108,-1,50,108,53,-1,53,108,107,-1,53,107,56,-1,56,107,58,-1,58,107,106,-1,58,106,61,-1,61,106,63,-1,63,106,105,-1,63,105,66,-1,66,105,104,-1,66,104,69,-1,69,104,103,-1,69,103,72,-1,72,103,74,-1,74,103,102,-1,74,102,77,-1,77,102,101,-1,77,101,80,-1,80,101,82,-1,82,101,100,-1,82,100,85,-1,85,100,99,-1,85,99,86,-1,93,4,95,-1],creaseAngle=0.524,
            coord=Coordinate(point=[(.49347,1.1273,-.04102),(.45148,1.23277,-.04102),(.39386,1.31871,-.04102),(.29571,1.10289,-.04102),(.28569,1.09971,-.2),(.48345,1.12412,-.2),(.44145,1.22959,-.2),(.38384,1.31553,-.2),(.32,1.38573,-.04102),(.07709,1.14928,-.04102),(.30998,1.38254,-.2),(.22931,1.43443,-.04102),(.04571,1.19566,-.04102),(.21929,1.43125,-.2),(.11224,1.4641,-.04102),(.00482,1.2213,-.04102),(.10222,1.46091,-.2),(-.04071,1.47398,-.04102),(-.04462,1.22984,-.04102),(-.05073,1.4708,-.2),(-.29828,1.42894,-.04102),(-.13056,1.20543,-.04102),(-.3083,1.42576,-.2),(-.49286,1.29381,-.04102),(-.19501,1.13219,-.04102),(-.50288,1.29062,-.2),(-.61518,1.06175,-.04102),(-.22895,1.02184,-.04102),(-.6252,1.05857,-.2),(-.65595,.72594,-.04102),(-.25263,.83141,-.04102),(-.66597,.72275,-.2),(-.63654,.48729,-.04102),(-.23896,.48961,-.04102),(-.22492,.59068,-.04102),(-.1828,.66539,-.04102),(-.64656,.48411,-.2),(-.57831,.30064,-.04102),(-.22431,.38597,-.04102),(-.58833,.29746,-.2),(-.48761,.16185,-.04102),(-.49763,.15867,-.2),(-.37079,.06676,-.04102),(-.18036,.30748,-.04102),(-.38081,.06357,-.2),(-.21967,.01183,-.04102),(-.11518,.25804,-.04102),(-.22969,.00864,-.2),(-.02606,-.00649,-.04102),(-.03681,.24156,-.04102),(-.03609,-.00967,-.2),(.13763,.00853,-.04102),(.03497,.25645,-.04102),(.12761,.00535,-.2),(.2713,.05357,-.04102),(.09405,.30113,-.04102),(.26128,.05039,-.2),(.37701,.12791,-.04102),(.36699,.12473,-.2),(.45685,.23082,-.04102),(.1336,.37535,-.04102),(.44682,.22764,-.2),(.50702,.35411,-.04102),(.497,.35093,-.2),(.52374,.48961,-.04102),(.14679,.47887,-.04102),(.51372,.48643,-.2),(.49066,.68126,-.04102),(.13312,.58556,-.04102),(.48064,.67808,-.2),(.39142,.83629,-.04102),(.0921,.66344,-.04102),(.38139,.8331,-.2),(.24432,.93883,-.04102),(.2343,.93564,-.2),(.06769,.97301,-.04102),(.03082,.71104,-.04102),(.05766,.96982,-.2),(-.02509,.96434,-.04102),(-.04364,.72691,-.04102),(-.03511,.96116,-.2),(-.10614,.93834,-.04102),(-.11616,.93516,-.2),(-.18036,.89427,-.04102),(-.11994,.71153,-.04102),(-.19038,.89109,-.2),(-.26265,.82822,-.2),(-.23897,1.01865,-.2),(-.20503,1.129,-.2),(-.14058,1.20225,-.2),(-.05464,1.22666,-.2),(-.0052,1.21811,-.2),(.03569,1.19248,-.2),(.06706,1.14609,-.2),(.09796,1.07848,-.04102),(.08794,1.07529,-.2),(-.23433,.38279,-.2),(-.24898,.48643,-.2),(-.23494,.5875,-.2),(-.19282,.66221,-.2),(-.12996,.70835,-.2),(-.05366,.72373,-.2),(.0208,.70786,-.2),(.08208,.66025,-.2),(.12309,.58237,-.2),(.13677,.47568,-.2),(.12358,.37217,-.2),(.08403,.29795,-.2),(.02495,.25327,-.2),(-.04683,.23838,-.2),(-.1252,.25486,-.2),(-.19038,.3043,-.2)])))]),
      Transform(DEF='dad_HullNumber6',
        children=[
        Shape(DEF='HullNumber6',
          appearance=Appearance(
            material=Material(DEF='main_mat',ambientIntensity=0.001,diffuseColor=(.001,.001,.001),shininess=0,specularColor=(.001,.001,.001))),
          geometry=IndexedFaceSet(coordIndex=[0,1,2,-1,0,2,3,-1,0,3,4,-1,0,4,5,-1,0,5,6,-1,0,6,1,-1,1,6,7,-1,1,7,2,-1,2,8,9,-1,2,9,3,-1,2,7,10,-1,2,10,8,-1,8,11,12,-1,8,12,9,-1,8,10,13,-1,8,13,11,-1,11,14,15,-1,11,15,12,-1,11,13,16,-1,11,16,14,-1,14,17,18,-1,14,18,15,-1,14,16,19,-1,14,19,17,-1,17,20,21,-1,17,21,18,-1,17,19,22,-1,17,22,20,-1,20,23,24,-1,20,24,21,-1,20,22,25,-1,20,25,23,-1,23,26,27,-1,23,27,24,-1,23,25,28,-1,23,28,26,-1,26,29,30,-1,26,30,27,-1,26,28,31,-1,26,31,29,-1,29,32,33,-1,29,33,34,-1,29,34,35,-1,29,35,30,-1,29,31,36,-1,29,36,32,-1,32,37,38,-1,32,38,33,-1,32,36,39,-1,32,39,37,-1,37,40,38,-1,37,39,41,-1,37,41,40,-1,40,42,43,-1,40,43,38,-1,40,41,44,-1,40,44,42,-1,42,45,46,-1,42,46,43,-1,42,44,47,-1,42,47,45,-1,45,48,49,-1,45,49,46,-1,45,47,50,-1,45,50,48,-1,48,51,52,-1,48,52,49,-1,48,50,53,-1,48,53,51,-1,51,54,55,-1,51,55,52,-1,51,53,56,-1,51,56,54,-1,54,57,55,-1,54,56,58,-1,54,58,57,-1,57,59,60,-1,57,60,55,-1,57,58,61,-1,57,61,59,-1,59,62,60,-1,59,61,63,-1,59,63,62,-1,62,64,65,-1,62,65,60,-1,62,63,66,-1,62,66,64,-1,64,67,68,-1,64,68,65,-1,64,66,69,-1,64,69,67,-1,67,70,71,-1,67,71,68,-1,67,69,72,-1,67,72,70,-1,70,73,71,-1,70,72,74,-1,70,74,73,-1,73,75,76,-1,73,76,71,-1,73,74,77,-1,73,77,75,-1,75,78,79,-1,75,79,76,-1,75,77,80,-1,75,80,78,-1,78,81,79,-1,78,80,82,-1,78,82,81,-1,81,83,84,-1,81,84,79,-1,81,82,85,-1,81,85,83,-1,83,30,35,-1,83,35,84,-1,83,85,86,-1,83,86,30,-1,30,86,87,-1,30,87,27,-1,27,87,88,-1,27,88,24,-1,24,88,89,-1,24,89,21,-1,21,89,90,-1,21,90,18,-1,18,90,91,-1,18,91,15,-1,15,91,92,-1,15,92,12,-1,12,92,93,-1,12,93,9,-1,9,94,3,-1,9,93,95,-1,9,95,94,-1,94,95,4,-1,94,4,3,-1,33,38,96,-1,33,96,97,-1,33,97,98,-1,33,98,34,-1,34,98,99,-1,34,99,35,-1,35,99,100,-1,35,100,84,-1,84,100,101,-1,84,101,79,-1,79,101,102,-1,79,102,76,-1,76,102,103,-1,76,103,71,-1,71,103,104,-1,71,104,68,-1,68,104,105,-1,68,105,65,-1,65,105,106,-1,65,106,60,-1,60,106,107,-1,60,107,55,-1,55,107,108,-1,55,108,52,-1,52,108,109,-1,52,109,49,-1,49,109,110,-1,49,110,46,-1,46,110,111,-1,46,111,43,-1,43,111,96,-1,43,96,38,-1,5,4,7,-1,5,7,6,-1,7,4,93,-1,7,93,10,-1,10,93,92,-1,10,92,13,-1,13,92,91,-1,13,91,16,-1,16,91,90,-1,16,90,19,-1,19,90,89,-1,19,89,22,-1,22,89,88,-1,22,88,25,-1,25,88,87,-1,25,87,28,-1,28,87,86,-1,28,86,31,-1,31,86,99,-1,31,99,98,-1,31,98,97,-1,31,97,36,-1,36,97,96,-1,36,96,39,-1,39,96,41,-1,41,96,111,-1,41,111,44,-1,44,111,110,-1,44,110,47,-1,47,110,109,-1,47,109,50,-1,50,109,108,-1,50,108,53,-1,53,108,107,-1,53,107,56,-1,56,107,58,-1,58,107,106,-1,58,106,61,-1,61,106,63,-1,63,106,105,-1,63,105,66,-1,66,105,104,-1,66,104,69,-1,69,104,103,-1,69,103,72,-1,72,103,74,-1,74,103,102,-1,74,102,77,-1,77,102,101,-1,77,101,80,-1,80,101,82,-1,82,101,100,-1,82,100,85,-1,85,100,99,-1,85,99,86,-1,93,4,95,-1],creaseAngle=0.524,
            coord=Coordinate(point=[(.63883,1.11256,-.08798),(.59684,1.21803,-.08798),(.53922,1.30396,-.08798),(.44107,1.08814,-.08798),(.43105,1.08496,-.24696),(.62881,1.10938,-.24696),(.58681,1.21484,-.24696),(.5292,1.30078,-.24696),(.46537,1.37098,-.08798),(.22245,1.13453,-.08798),(.45535,1.3678,-.24696),(.37467,1.41969,-.08798),(.19107,1.18092,-.08798),(.36465,1.4165,-.24696),(.2576,1.44935,-.08798),(.15018,1.20655,-.08798),(.24758,1.44617,-.24696),(.10465,1.45924,-.08798),(.10074,1.2151,-.08798),(.09463,1.45605,-.24696),(-.15292,1.41419,-.08798),(.01481,1.19068,-.08798),(-.16294,1.41101,-.24696),(-.3475,1.27906,-.08798),(-.04965,1.11744,-.08798),(-.35752,1.27588,-.24696),(-.46981,1.04701,-.08798),(-.08358,1.00709,-.08798),(-.47984,1.04382,-.24696),(-.51058,.71119,-.08798),(-.10727,.81666,-.08798),(-.52061,.70801,-.24696),(-.49118,.47254,-.08798),(-.09359,.47486,-.08798),(-.07956,.57594,-.08798),(-.03744,.65064,-.08798),(-.5012,.46936,-.24696),(-.43295,.2859,-.08798),(-.07894,.37123,-.08798),(-.44297,.28271,-.24696),(-.34225,.1471,-.08798),(-.35227,.14392,-.24696),(-.22543,.05201,-.08798),(-.035,.29273,-.08798),(-.23545,.04883,-.24696),(-.07431,-.00292,-.08798),(.03019,.2433,-.08798),(-.08433,-.0061,-.24696),(.1193,-.02123,-.08798),(.10856,.22682,-.08798),(.10928,-.02441,-.24696),(.28299,-.00622,-.08798),(.18033,.24171,-.08798),(.27297,-.0094,-.24696),(.41666,.03883,-.08798),(.23941,.28639,-.08798),(.40664,.03564,-.24696),(.52237,.11317,-.08798),(.51235,.10999,-.24696),(.60221,.21607,-.08798),(.27897,.36061,-.08798),(.59218,.21289,-.24696),(.65238,.33937,-.08798),(.64236,.33618,-.24696),(.6691,.47486,-.08798),(.29215,.46412,-.08798),(.65908,.47168,-.24696),(.63602,.66651,-.08798),(.27848,.57081,-.08798),(.626,.66333,-.24696),(.53678,.82154,-.08798),(.23746,.64869,-.08798),(.52676,.81836,-.24696),(.38968,.92408,-.08798),(.37966,.9209,-.24696),(.21305,.95826,-.08798),(.17618,.6963,-.08798),(.20303,.95508,-.24696),(.12027,.94959,-.08798),(.10172,.71217,-.08798),(.11025,.94641,-.24696),(.03922,.92359,-.08798),(.0292,.92041,-.24696),(-.035,.87953,-.08798),(.02543,.69679,-.08798),(-.04502,.87634,-.24696),(-.11729,.81348,-.24696),(-.09361,1.00391,-.24696),(-.05967,1.11426,-.24696),(.00478,1.1875,-.24696),(.09072,1.21191,-.24696),(.14016,1.20337,-.24696),(.18105,1.17773,-.24696),(.21243,1.13135,-.24696),(.24332,1.06373,-.08798),(.2333,1.06055,-.24696),(-.08897,.36804,-.24696),(-.10362,.47168,-.24696),(-.08958,.57275,-.24696),(-.04746,.64746,-.24696),(.0154,.6936,-.24696),(.0917,.70898,-.24696),(.16616,.69312,-.24696),(.22744,.64551,-.24696),(.26846,.56763,-.24696),(.28213,.46094,-.24696),(.26894,.35742,-.24696),(.22939,.2832,-.24696),(.17031,.23852,-.24696),(.09853,.22363,-.24696),(.02016,.24011,-.24696),(-.04502,.28955,-.24696)])))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful for Six.py")
