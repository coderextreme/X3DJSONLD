###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.0',
  head=head(
    children=[
    meta(content='HeloHanger.x3d',name='title'),
    meta(content='Initial DDG-51 Flight IIA',name='description'),
    meta(content='LT Joe Sears, USN',name='creator'),
    meta(content='8 August 2003',name='created'),
    meta(content='14 January 2014',name='modified'),
    meta(content='https://savage.nps.edu/Savage/ShipsMilitary/DDG51FlightIIaUnitedStates/HeloHanger.x3d',name='identifier'),
    meta(content='http://combatindex.com/store/3d',name='reference'),
    meta(content='http://www.fas.org/man/dod-101/sys/ship/ddg-51.htm',name='drawing'),
    meta(content='X3D-Edit 3.2, https://savage.nps.edu/X3D-Edit',name='generator'),
    meta(content='../../license.html',name='license')]),
  Scene=Scene(
    children=[
    Viewpoint(description='STBD side',orientation=(-0.059,0.997,0.057,1.3894),position=(45.9,7.4,-14.1)),
    Viewpoint(description='Flight Deck Aft',orientation=(-0.999,0.016,0.037,0.1347),position=(0,5.4,16.8)),
    Viewpoint(description='Flight Deck Look Down',orientation=(0.009,0.707,0.707,3.1336),position=(-0.1,60.6,-24.1)),
    Group(DEF='HeloHangerFacilities',
      children=[
      Transform(DEF='HeloHanger',
        children=[
        Group(DEF='DeckAssembly',
          children=[
          Transform(DEF='Deck',
            children=[
            Shape(
              geometry=Extrusion(creaseAngle=.85,crossSection=[(-9.352,0),(9.352,0),(9.352,-.01),(-9.352,-.01),(-9.352,0)],scale=[(.666,.0001),(.68,1),(1,1),(1,1)],spine=[(0,0,0),(0,0,-1),(0,0,-23),(0,0,-45)]),
              appearance=Appearance(
                texture=ImageTexture(DEF='NONSKID',url=["nonskid.jpg","https://savage.nps.edu/Savage/ShipsMilitary/DDGArleighBurkeUnitedStates/nonskid.jpg"])))]),
          Transform(DEF='PortSideRastTrack',translation=(-6,.1,-5),
            children=[
            Shape(
              geometry=Extrusion(creaseAngle=3,crossSection=[(-.25,0),(.25,0),(.25,.05),(-.25,.05),(-.25,0)],scale=[(1,1),(1,1),(1,1),(1,1)],spine=[(6,0,2),(1,0,-13),(0,0,-18),(0,0,-34)]),
              appearance=Appearance(DEF='HazeGray',
                material=Material(specularColor=(.4,.4,.4))))]),
          Transform(DEF='StarboardSideRastTrack',translation=(6,.1,-5),
            children=[
            Shape(
              appearance=Appearance(USE='HazeGray'),
              geometry=Extrusion(creaseAngle=3,crossSection=[(-.25,0),(.25,0),(.25,.05),(-.25,.05),(-.25,0)],scale=[(1,1),(1,1),(1,1),(1,1)],spine=[(-6,0,2),(-1,0,-13),(0,0,-18),(0,0,-34)]))]),
          Group(DEF='StarboardRast',
            children=[
            Transform(DEF='StarboardSideRast',translation=(6,.25,-39),
              children=[
              Shape(
                appearance=Appearance(
                  material=Material(emissiveColor=(0.20,0.20,0.20))),
                geometry=Box(size=(1,.25,2))),
              Switch(DEF='RastChoice',whichChoice=0,
                children=[
                Group(DEF='Out',
                  children=[
                  Shape(DEF='STBDRastTouchSensor1',
                    appearance=Appearance(
                      material=Material(DEF='Transparent',emissiveColor=(1,1,1),transparency=1.0)),
                    geometry=Sphere(),),
                  TouchSensor(DEF='STBDRastTouchSensorOut',description='CickToMove RastOut'),
                  PositionInterpolator(DEF='STBDRASTPathInterpolatorOut',key=[0,.33,.66,1],keyValue=[(6,.25,-39),(6,.25,-23),(5,.25,-18),(2,.25,-9)]),
                  OrientationInterpolator(DEF='STBDRastOrientationInterpolatorOut',key=[0,.28,.35,1],keyValue=[(0,0,0,0),(0,0,0,0),(0,1,0,-.15),(0,1,0,-.33)]),
                  TimeSensor(DEF='STBDRASTClockOut',cycleInterval=3),
                  ROUTE(fromField='fraction_changed',fromNode='STBDRASTClockOut',toField='set_fraction',toNode='STBDRASTPathInterpolatorOut'),
                  ROUTE(fromField='fraction_changed',fromNode='STBDRASTClockOut',toField='set_fraction',toNode='STBDRastOrientationInterpolatorOut'),
                  ROUTE(fromField='value_changed',fromNode='STBDRASTPathInterpolatorOut',toField='translation',toNode='StarboardSideRast'),
                  ROUTE(fromField='value_changed',fromNode='STBDRastOrientationInterpolatorOut',toField='set_rotation',toNode='StarboardSideRast'),
                  ROUTE(fromField='touchTime',fromNode='STBDRastTouchSensorOut',toField='set_startTime',toNode='STBDRASTClockOut')]),
                Group(DEF='In',
                  children=[
                  Shape(USE='STBDRastTouchSensor1'),
                  TouchSensor(DEF='STBDRastTouchSensorIn',description='ClickToMoveRastIn'),
                  PositionInterpolator(DEF='STBDRASTPathInterpolatorIn',key=[0,.33,.66,1],keyValue=[(2,.25,-9),(5,.25,-18),(6,.25,-23),(6,.25,-39)]),
                  OrientationInterpolator(DEF='STBDRastOrientationInterpolatorIn',key=[0,.8,.8,1],keyValue=[(0,1,0,-.33),(0,1,0,-.15),(0,0,0,0),(0,0,0,0)]),
                  TimeSensor(DEF='STBDRASTClockIn',cycleInterval=3),
                  ROUTE(fromField='fraction_changed',fromNode='STBDRASTClockIn',toField='set_fraction',toNode='STBDRASTPathInterpolatorIn'),
                  ROUTE(fromField='fraction_changed',fromNode='STBDRASTClockIn',toField='set_fraction',toNode='STBDRastOrientationInterpolatorIn'),
                  ROUTE(fromField='value_changed',fromNode='STBDRASTPathInterpolatorIn',toField='translation',toNode='StarboardSideRast'),
                  ROUTE(fromField='value_changed',fromNode='STBDRastOrientationInterpolatorIn',toField='set_rotation',toNode='StarboardSideRast'),
                  ROUTE(fromField='touchTime',fromNode='STBDRastTouchSensorIn',toField='set_startTime',toNode='STBDRASTClockIn'),
                  ROUTE(fromField='touchTime',fromNode='STBDRastTouchSensorIn',toField='set_stopTime',toNode='STBDRASTClockIn')])])]),
            Group(DEF='STBDRastAnimationControl',
              children=[
              IntegerTrigger(DEF='RastIn',integerKey=0),
              IntegerTrigger(DEF='RastOut',integerKey=1),
              ROUTE(fromField='isActive',fromNode='STBDRastTouchSensorOut',toField='set_boolean',toNode='RastOut'),
              ROUTE(fromField='isActive',fromNode='STBDRastTouchSensorIn',toField='set_boolean',toNode='RastIn'),
              ROUTE(fromField='triggerValue',fromNode='RastOut',toField='whichChoice',toNode='RastChoice'),
              ROUTE(fromField='triggerValue',fromNode='RastIn',toField='whichChoice',toNode='RastChoice')])]),
          Group(DEF='PortRast',
            children=[
            Transform(DEF='PortSideRast',translation=(-6,.25,-39),
              children=[
              Shape(
                appearance=Appearance(
                  material=Material(emissiveColor=(0.20,0.20,0.20))),
                geometry=Box(size=(1,.25,2))),
              Transform(rotation=(0,1,0,1.57),scale=(1.8,1.8,1.8),translation=(0,.9,0),
                children=[
                Inline(url=["SH60SeahawkMaintenance.x3d","https://savage.nps.edu/Savage/ShipsMilitary/DDG51FlightIIaUnitedStates/SH60SeahawkMaintenance.x3d","SH60SeahawkMaintenance.wrl","https://savage.nps.edu/Savage/ShipsMilitary/DDG51FlightIIaUnitedStates/SH60SeahawkMaintenance.wrl"])]),
              Switch(DEF='PortRastChoice',whichChoice=0,
                children=[
                Group(DEF='PortOut',
                  children=[
                  Shape(DEF='PortRastTouchSensor1',
                    appearance=Appearance(
                      material=Material(USE='Transparent')),
                    geometry=Box(size=(4,6,15))),
                  TouchSensor(DEF='PortRastTouchSensorOut',description='CickToMove RastOut'),
                  PositionInterpolator(DEF='PortRASTPathInterpolatorOut',key=[0,.33,.66,1],keyValue=[(-6,.25,-39),(-6,.25,-23),(-5,.25,-18),(-2,.25,-9)]),
                  OrientationInterpolator(DEF='PortRastOrientationInterpolatorOut',key=[0,.28,.35,1],keyValue=[(0,0,0,0),(0,0,0,0),(0,1,0,.15),(0,1,0,.33)]),
                  TimeSensor(DEF='PortRASTClockOut',cycleInterval=3),
                  ROUTE(fromField='fraction_changed',fromNode='PortRASTClockOut',toField='set_fraction',toNode='PortRASTPathInterpolatorOut'),
                  ROUTE(fromField='fraction_changed',fromNode='PortRASTClockOut',toField='set_fraction',toNode='PortRastOrientationInterpolatorOut'),
                  ROUTE(fromField='value_changed',fromNode='PortRASTPathInterpolatorOut',toField='translation',toNode='PortSideRast'),
                  ROUTE(fromField='value_changed',fromNode='PortRastOrientationInterpolatorOut',toField='set_rotation',toNode='PortSideRast'),
                  ROUTE(fromField='touchTime',fromNode='PortRastTouchSensorOut',toField='set_startTime',toNode='PortRASTClockOut')]),
                Group(DEF='PortIn',
                  children=[
                  Shape(USE='PortRastTouchSensor1'),
                  TouchSensor(DEF='PortRastTouchSensorIn',description='ClickToMoveRastIn'),
                  PositionInterpolator(DEF='PortRASTPathInterpolatorIn',key=[0,.33,.66,1],keyValue=[(-2,.25,-9),(-5,.25,-18),(-6,.25,-23),(-6,.25,-39)]),
                  OrientationInterpolator(DEF='PortRastOrientationInterpolatorIn',key=[0,.8,.8,1],keyValue=[(0,1,0,.33),(0,1,0,.15),(0,0,0,0),(0,0,0,0)]),
                  TimeSensor(DEF='PortRASTClockIn',cycleInterval=3),
                  ROUTE(fromField='fraction_changed',fromNode='PortRASTClockIn',toField='set_fraction',toNode='PortRASTPathInterpolatorIn'),
                  ROUTE(fromField='fraction_changed',fromNode='PortRASTClockIn',toField='set_fraction',toNode='PortRastOrientationInterpolatorIn'),
                  ROUTE(fromField='value_changed',fromNode='PortRASTPathInterpolatorIn',toField='translation',toNode='PortSideRast'),
                  ROUTE(fromField='value_changed',fromNode='PortRastOrientationInterpolatorIn',toField='set_rotation',toNode='PortSideRast'),
                  ROUTE(fromField='touchTime',fromNode='PortRastTouchSensorIn',toField='set_startTime',toNode='PortRASTClockIn'),
                  ROUTE(fromField='touchTime',fromNode='PortRastTouchSensorIn',toField='set_stopTime',toNode='PortRASTClockIn')])])]),
            Group(DEF='PortRastAnimationControl',
              children=[
              IntegerTrigger(DEF='PortRastIn',integerKey=0),
              IntegerTrigger(DEF='PortRastOut',integerKey=1),
              ROUTE(fromField='isActive',fromNode='PortRastTouchSensorOut',toField='set_boolean',toNode='PortRastOut'),
              ROUTE(fromField='isActive',fromNode='PortRastTouchSensorIn',toField='set_boolean',toNode='PortRastIn'),
              ROUTE(fromField='triggerValue',fromNode='PortRastOut',toField='whichChoice',toNode='PortRastChoice'),
              ROUTE(fromField='triggerValue',fromNode='PortRastIn',toField='whichChoice',toNode='PortRastChoice')])]),
          Transform(DEF='FlightDeckMarkings',scale=(.8,.8,.8),translation=(0,0.001,-3.75),
            children=[
            Shape(
              appearance=Appearance(
                texture=ImageTexture(DEF='FLTDECK',url=["nsflightdeck.jpg","https://savage.nps.edu/Savage/DestroyerGuidedMissile-UnitedStates-ArleighBurke/nsflightdeck.jpg"])),
              geometry=IndexedFaceSet(coordIndex=[2,3,0,1],solid=False,texCoordIndex=[3,2,1,0],
                coord=Coordinate(point=[(7.5,.05,4.2),(-7.5,.05,4.2),(-9.375,.05,-24.1),(9.375,.05,-24.1)]),
                texCoord=TextureCoordinate(point=[(1,0),(1,1),(0,1),(0,0)])))])]),
        Transform(DEF='ForwardBulkhead',translation=(0,3.5,-45),
          children=[
          Shape(
            geometry=Box(size=(18.704,7,.05)),
            appearance=Appearance(USE='HazeGray'))]),
        Transform(DEF='HangerOverhead',translation=(0,7,-34.5),
          children=[
          Shape(
            appearance=Appearance(
              texture=ImageTexture(USE='NONSKID')),
            geometry=Box(size=(18.704,.05,21)))]),
        Transform(DEF='PortSideCenterLineBulkhead',translation=(-3.5,3.5,-34.5),
          children=[
          Shape(
            appearance=Appearance(USE='HazeGray'),
            geometry=Box(size=(.05,7,21)))]),
        Transform(DEF='StarboardSideCenterLineBulkhead',translation=(3.5,3.5,-34.5),
          children=[
          Shape(
            appearance=Appearance(USE='HazeGray'),
            geometry=Box(size=(.05,7,21)))]),
        Transform(DEF='PortSideExteriorBulkhead',translation=(0,0,-24),
          children=[
          Shape(
            geometry=Extrusion(crossSection=[(0,0),(0,7),(-.64,3.45),(0,0)],solid=False,spine=[(-9.352,0,0),(-9.352,0,-21)]),
            appearance=Appearance(USE='HazeGray'))]),
        Transform(DEF='StarboardSideExteriorBulkhead',translation=(0,0,-24),
          children=[
          Shape(
            geometry=Extrusion(crossSection=[(0,0),(0,7),(.64,3.45),(0,0)],solid=False,spine=[(9.352,0,0),(9.352,0,-21)]),
            appearance=Appearance(USE='HazeGray'))]),
        Transform(DEF='AftBulkhead',translation=(0,0,-23),
          children=[
          Shape(
            appearance=Appearance(USE='HazeGray'),
            geometry=Extrusion(crossSection=[(0,0),(-9.35,0),(-9.99,3.45),(-9.35,7),(9.35,7),(9.99,3.45),(9.35,0),(8.05,0),(8.05,6),(3.53,6),(3.53,0),(-3.53,0),(-3.53,6),(-8.05,6),(-8.05,0),(0,0)],orientation=[(1,0,0,-.142),(0,0,0,0)],scale=[(1,1),(1,1)],spine=[(0,0,0),(0,0,-1)]))])]),
      Group(DEF='StarboardHeloDoor',
        children=[
        Transform(DEF='STBDHeloDoor',rotation=(1,0,0,-.14),translation=(5.785,0,-23.02),
          children=[
          Transform(DEF='HangerDoorSTBD1',translation=(0,5.5,0),
            children=[
            Shape(DEF='HangerDoor',
              appearance=Appearance(USE='HazeGray'),
              geometry=Box(DEF='HeloDoorFrame',size=(4.5,.99,.05)))]),
          Transform(DEF='HangerDoorSTBD2',translation=(0,4.5,0),
            children=[
            Shape(USE='HangerDoor')]),
          Transform(DEF='HangerDoorSTBD3',translation=(0,3.5,0),
            children=[
            Shape(USE='HangerDoor')]),
          Transform(DEF='HangerDoorSTBD4',translation=(0,2.5,0),
            children=[
            Shape(USE='HangerDoor')]),
          Transform(DEF='HangerDoorSTBD5',translation=(0,1.5,0),
            children=[
            Shape(USE='HangerDoor')]),
          Transform(DEF='HangerDoorSTBD6',translation=(0,.5,0),
            children=[
            Shape(USE='HangerDoor')]),
          Switch(DEF='STBDHeloDoorSwitch',whichChoice=0,
            children=[
            Group(DEF='STBDHangerDoorsUp',
              children=[
              Transform(translation=(0,3,0),
                children=[
                Shape(DEF='STBDHangerDoorTouchSensor1',
                  appearance=Appearance(
                    material=Material(USE='Transparent')),
                  geometry=Box(size=(5,6,.2)))]),
              TouchSensor(DEF='STBDHeloDoorTouchSensor',description='Raise STBD Helo Door'),
              TimeSensor(DEF='STBDHeloDoorClockOut',cycleInterval=3),
              PositionInterpolator(DEF='STBDHeloDoor1PathInterpolatorOut',key=[0,1],keyValue=[(0,5.5,0),(0,5.95,0)]),
              OrientationInterpolator(DEF='STBDHeloDoor1OrientationInterpolatorOut',key=[0,1],keyValue=[(1,0,0,0),(1,0,0,-1.43)]),
              PositionInterpolator(DEF='STBDHeloDoor2PathInterpolatorOut',key=[0,.85,1],keyValue=[(0,4.5,0),(0,5.5,0),(0,5.88,0)]),
              OrientationInterpolator(DEF='STBDHeloDoor2OrientationInterpolatorOut',key=[0,.85,1],keyValue=[(1,0,0,0),(1,0,0,1.3),(1,0,0,1.71)]),
              PositionInterpolator(DEF='STBDHeloDoor3PathInterpolatorOut',key=[0,.6,.95,1],keyValue=[(0,3.5,0),(0,4.5,0),(0,5.5,0),(0,5.81,0)]),
              OrientationInterpolator(DEF='STBDHeloDoor3OrientationInterpolatorOut',key=[0,.6,.95,1],keyValue=[(1,0,0,0),(1,0,0,-.6),(1,0,0,-1),(1,0,0,-1.43)]),
              PositionInterpolator(DEF='STBDHeloDoor4PathInterpolatorOut',key=[0,.5,.86,.99,1],keyValue=[(0,2.5,0),(0,3.5,0),(0,4.5,0),(0,5.5,0),(0,5.74,0)]),
              OrientationInterpolator(DEF='STBDHeloDoor4OrientationInterpolatorOut',key=[0,.5,.86,.99,1],keyValue=[(1,0,0,0),(1,0,0,.4),(1,0,0,.8),(1,0,0,1.10),(1,0,0,1.71)]),
              PositionInterpolator(DEF='STBDHeloDoor5PathInterpolatorOut',key=[0,.45,.80,.94,.99,1],keyValue=[(0,1.5,0),(0,2.5,0),(0,3.5,0),(0,4.5,0),(0,5.5,0),(0,5.67,0)]),
              OrientationInterpolator(DEF='STBDHeloDoor5OrientationInterpolatorOut',key=[0,.45,.80,.94,.99,1],keyValue=[(1,0,0,0),(1,0,0,-.2),(1,0,0,-.4),(1,0,0,-.6),(1,0,0,-1),(1,0,0,-1.43)]),
              PositionInterpolator(DEF='STBDHeloDoor6PathInterpolatorOut',key=[0,.45,.75,.90,.98,.99,1],keyValue=[(0,.5,0),(0,1.5,0),(0,2.5,0),(0,3.5,0),(0,4.5,0),(0,5.5,0),(0,5.61,0)]),
              OrientationInterpolator(DEF='STBDHeloDoor6OrientationInterpolatorOut',key=[0,.45,.75,.90,.98,.99,1],keyValue=[(1,0,0,0),(1,0,0,.2),(1,0,0,.4),(1,0,0,.8),(1,0,0,1.10),(1,0,0,1.4),(1,0,0,1.71)]),
              #  STBD Helo Door Clock to movement 
              ROUTE(fromField='fraction_changed',fromNode='STBDHeloDoorClockOut',toField='set_fraction',toNode='STBDHeloDoor1PathInterpolatorOut'),
              ROUTE(fromField='fraction_changed',fromNode='STBDHeloDoorClockOut',toField='set_fraction',toNode='STBDHeloDoor1OrientationInterpolatorOut'),
              ROUTE(fromField='fraction_changed',fromNode='STBDHeloDoorClockOut',toField='set_fraction',toNode='STBDHeloDoor2PathInterpolatorOut'),
              ROUTE(fromField='fraction_changed',fromNode='STBDHeloDoorClockOut',toField='set_fraction',toNode='STBDHeloDoor2OrientationInterpolatorOut'),
              ROUTE(fromField='fraction_changed',fromNode='STBDHeloDoorClockOut',toField='set_fraction',toNode='STBDHeloDoor3PathInterpolatorOut'),
              ROUTE(fromField='fraction_changed',fromNode='STBDHeloDoorClockOut',toField='set_fraction',toNode='STBDHeloDoor3OrientationInterpolatorOut'),
              ROUTE(fromField='fraction_changed',fromNode='STBDHeloDoorClockOut',toField='set_fraction',toNode='STBDHeloDoor4PathInterpolatorOut'),
              ROUTE(fromField='fraction_changed',fromNode='STBDHeloDoorClockOut',toField='set_fraction',toNode='STBDHeloDoor4OrientationInterpolatorOut'),
              ROUTE(fromField='fraction_changed',fromNode='STBDHeloDoorClockOut',toField='set_fraction',toNode='STBDHeloDoor5PathInterpolatorOut'),
              ROUTE(fromField='fraction_changed',fromNode='STBDHeloDoorClockOut',toField='set_fraction',toNode='STBDHeloDoor5OrientationInterpolatorOut'),
              ROUTE(fromField='fraction_changed',fromNode='STBDHeloDoorClockOut',toField='set_fraction',toNode='STBDHeloDoor6PathInterpolatorOut'),
              ROUTE(fromField='fraction_changed',fromNode='STBDHeloDoorClockOut',toField='set_fraction',toNode='STBDHeloDoor6OrientationInterpolatorOut'),
              #  STBD Helo Door movement to geometry 
              ROUTE(fromField='value_changed',fromNode='STBDHeloDoor1PathInterpolatorOut',toField='set_translation',toNode='HangerDoorSTBD1'),
              ROUTE(fromField='value_changed',fromNode='STBDHeloDoor1OrientationInterpolatorOut',toField='set_rotation',toNode='HangerDoorSTBD1'),
              ROUTE(fromField='value_changed',fromNode='STBDHeloDoor2PathInterpolatorOut',toField='set_translation',toNode='HangerDoorSTBD2'),
              ROUTE(fromField='value_changed',fromNode='STBDHeloDoor2OrientationInterpolatorOut',toField='set_rotation',toNode='HangerDoorSTBD2'),
              ROUTE(fromField='value_changed',fromNode='STBDHeloDoor3PathInterpolatorOut',toField='set_translation',toNode='HangerDoorSTBD3'),
              ROUTE(fromField='value_changed',fromNode='STBDHeloDoor3OrientationInterpolatorOut',toField='set_rotation',toNode='HangerDoorSTBD3'),
              ROUTE(fromField='value_changed',fromNode='STBDHeloDoor4PathInterpolatorOut',toField='set_translation',toNode='HangerDoorSTBD4'),
              ROUTE(fromField='value_changed',fromNode='STBDHeloDoor4OrientationInterpolatorOut',toField='set_rotation',toNode='HangerDoorSTBD4'),
              ROUTE(fromField='value_changed',fromNode='STBDHeloDoor5PathInterpolatorOut',toField='set_translation',toNode='HangerDoorSTBD5'),
              ROUTE(fromField='value_changed',fromNode='STBDHeloDoor5OrientationInterpolatorOut',toField='set_rotation',toNode='HangerDoorSTBD5'),
              ROUTE(fromField='value_changed',fromNode='STBDHeloDoor6PathInterpolatorOut',toField='set_translation',toNode='HangerDoorSTBD6'),
              ROUTE(fromField='value_changed',fromNode='STBDHeloDoor6OrientationInterpolatorOut',toField='set_rotation',toNode='HangerDoorSTBD6'),
              #  STBD Helo Door Sensor to clock 
              ROUTE(fromField='touchTime',fromNode='STBDHeloDoorTouchSensor',toField='set_startTime',toNode='STBDHeloDoorClockOut')]),
            Group(DEF='STBDHangerDoorsDown',
              children=[
              Transform(translation=(0,5.75,0),
                children=[
                Shape(DEF='STBDHangerDoorTouchSensorDn',
                  appearance=Appearance(
                    material=Material(USE='Transparent')),
                  geometry=Box(size=(5,1,1.2)))]),
              TouchSensor(DEF='STBDHeloDoorTouchSensorDown',description='LowerSTBDHeloDoor'),
              TimeSensor(DEF='STBDHeloDoorClockDown',cycleInterval=3),
              PositionInterpolator(DEF='STBDHeloDoor1PathInterpolatorDown',key=[0,1],keyValue=[(0,5.95,0),(0,5.5,0)]),
              OrientationInterpolator(DEF='STBDHeloDoor1OrientationInterpolatorDown',key=[0,1],keyValue=[(1,0,0,-1.43),(1,0,0,0)]),
              PositionInterpolator(DEF='STBDHeloDoor2PathInterpolatorDown',key=[0,.14,1],keyValue=[(0,5.88,0),(0,5.5,0),(0,4.5,0)]),
              OrientationInterpolator(DEF='STBDHeloDoor2OrientationInterpolatorDown',key=[0,.14,1],keyValue=[(1,0,0,1.71),(1,0,0,1.3),(1,0,0,0)]),
              PositionInterpolator(DEF='STBDHeloDoor3PathInterpolatorDown',key=[0,.08,.55,1],keyValue=[(0,5.81,0),(0,5.5,0),(0,4.5,0),(0,3.5,0)]),
              OrientationInterpolator(DEF='STBDHeloDoor3OrientationInterpolatorDown',key=[0,.6,.95,1],keyValue=[(1,0,0,-1.43),(1,0,0,-1),(1,0,0,-.6),(1,0,0,0)]),
              PositionInterpolator(DEF='STBDHeloDoor4PathInterpolatorDown',key=[0,.06,.4,.75,1],keyValue=[(0,5.74,0),(0,5.5,0),(0,4.5,0),(0,3.5,0),(0,2.5,0)]),
              OrientationInterpolator(DEF='STBDHeloDoor4OrientationInterpolatorDown',key=[0,.5,.86,.95,1],keyValue=[(1,0,0,1.71),(1,0,0,1.10),(1,0,0,.8),(1,0,0,.4),(1,0,0,0)]),
              PositionInterpolator(DEF='STBDHeloDoor5PathInterpolatorDown',key=[0,.04,.3,.55,.85,1],keyValue=[(0,5.67,0),(0,5.5,0),(0,4.5,0),(0,3.5,0),(0,2.5,0),(0,1.5,0)]),
              OrientationInterpolator(DEF='STBDHeloDoor5OrientationInterpolatorDown',key=[0,.45,.80,.94,.99,1],keyValue=[(1,0,0,-1.43),(1,0,0,-1),(1,0,0,-.6),(1,0,0,-.4),(1,0,0,-.2),(1,0,0,0)]),
              PositionInterpolator(DEF='STBDHeloDoor6PathInterpolatorDown',key=[0,.03,.25,.45,.68,.9,1],keyValue=[(0,5.61,0),(0,5.5,0),(0,4.5,0),(0,3.5,0),(0,2.5,0),(0,1.5,0),(0,.5,0)]),
              OrientationInterpolator(DEF='STBDHeloDoor6OrientationInterpolatorDown',key=[0,.45,.75,.8,.93,.98,1],keyValue=[(1,0,0,1.71),(1,0,0,1.4),(1,0,0,1.1),(1,0,0,.8),(1,0,0,.4),(1,0,0,.2),(1,0,0,0)]),
              #  STBD Helo Door Clock to movement 
              ROUTE(fromField='fraction_changed',fromNode='STBDHeloDoorClockDown',toField='set_fraction',toNode='STBDHeloDoor1PathInterpolatorDown'),
              ROUTE(fromField='fraction_changed',fromNode='STBDHeloDoorClockDown',toField='set_fraction',toNode='STBDHeloDoor1OrientationInterpolatorDown'),
              ROUTE(fromField='fraction_changed',fromNode='STBDHeloDoorClockDown',toField='set_fraction',toNode='STBDHeloDoor2PathInterpolatorDown'),
              ROUTE(fromField='fraction_changed',fromNode='STBDHeloDoorClockDown',toField='set_fraction',toNode='STBDHeloDoor2OrientationInterpolatorDown'),
              ROUTE(fromField='fraction_changed',fromNode='STBDHeloDoorClockDown',toField='set_fraction',toNode='STBDHeloDoor3PathInterpolatorDown'),
              ROUTE(fromField='fraction_changed',fromNode='STBDHeloDoorClockDown',toField='set_fraction',toNode='STBDHeloDoor3OrientationInterpolatorDown'),
              ROUTE(fromField='fraction_changed',fromNode='STBDHeloDoorClockDown',toField='set_fraction',toNode='STBDHeloDoor4PathInterpolatorDown'),
              ROUTE(fromField='fraction_changed',fromNode='STBDHeloDoorClockDown',toField='set_fraction',toNode='STBDHeloDoor4OrientationInterpolatorDown'),
              ROUTE(fromField='fraction_changed',fromNode='STBDHeloDoorClockDown',toField='set_fraction',toNode='STBDHeloDoor5PathInterpolatorDown'),
              ROUTE(fromField='fraction_changed',fromNode='STBDHeloDoorClockDown',toField='set_fraction',toNode='STBDHeloDoor5OrientationInterpolatorDown'),
              ROUTE(fromField='fraction_changed',fromNode='STBDHeloDoorClockDown',toField='set_fraction',toNode='STBDHeloDoor6PathInterpolatorDown'),
              ROUTE(fromField='fraction_changed',fromNode='STBDHeloDoorClockDown',toField='set_fraction',toNode='STBDHeloDoor6OrientationInterpolatorDown'),
              #  STBD Helo Door movement to geometry 
              ROUTE(fromField='value_changed',fromNode='STBDHeloDoor1PathInterpolatorDown',toField='set_translation',toNode='HangerDoorSTBD1'),
              ROUTE(fromField='value_changed',fromNode='STBDHeloDoor1OrientationInterpolatorDown',toField='set_rotation',toNode='HangerDoorSTBD1'),
              ROUTE(fromField='value_changed',fromNode='STBDHeloDoor2PathInterpolatorDown',toField='set_translation',toNode='HangerDoorSTBD2'),
              ROUTE(fromField='value_changed',fromNode='STBDHeloDoor2OrientationInterpolatorDown',toField='set_rotation',toNode='HangerDoorSTBD2'),
              ROUTE(fromField='value_changed',fromNode='STBDHeloDoor3PathInterpolatorDown',toField='set_translation',toNode='HangerDoorSTBD3'),
              ROUTE(fromField='value_changed',fromNode='STBDHeloDoor3OrientationInterpolatorDown',toField='set_rotation',toNode='HangerDoorSTBD3'),
              ROUTE(fromField='value_changed',fromNode='STBDHeloDoor4PathInterpolatorDown',toField='set_translation',toNode='HangerDoorSTBD4'),
              ROUTE(fromField='value_changed',fromNode='STBDHeloDoor4OrientationInterpolatorDown',toField='set_rotation',toNode='HangerDoorSTBD4'),
              ROUTE(fromField='value_changed',fromNode='STBDHeloDoor5PathInterpolatorDown',toField='set_translation',toNode='HangerDoorSTBD5'),
              ROUTE(fromField='value_changed',fromNode='STBDHeloDoor5OrientationInterpolatorDown',toField='set_rotation',toNode='HangerDoorSTBD5'),
              ROUTE(fromField='value_changed',fromNode='STBDHeloDoor6PathInterpolatorDown',toField='set_translation',toNode='HangerDoorSTBD6'),
              ROUTE(fromField='value_changed',fromNode='STBDHeloDoor6OrientationInterpolatorDown',toField='set_rotation',toNode='HangerDoorSTBD6'),
              #  STBD Helo Door Sensor to clock 
              ROUTE(fromField='touchTime',fromNode='STBDHeloDoorTouchSensorDown',toField='set_startTime',toNode='STBDHeloDoorClockDown')])])]),
        Group(DEF='STBDHeloDoorAnimationControl',
          children=[
          IntegerTrigger(DEF='STBDHeloDoorDown',integerKey=0),
          IntegerTrigger(DEF='STBDHeloDoorUp',integerKey=1),
          ROUTE(fromField='isActive',fromNode='STBDHeloDoorTouchSensor',toField='set_boolean',toNode='STBDHeloDoorUp'),
          ROUTE(fromField='isActive',fromNode='STBDHeloDoorTouchSensorDown',toField='set_boolean',toNode='STBDHeloDoorDown'),
          ROUTE(fromField='triggerValue',fromNode='STBDHeloDoorUp',toField='whichChoice',toNode='STBDHeloDoorSwitch'),
          ROUTE(fromField='triggerValue',fromNode='STBDHeloDoorDown',toField='whichChoice',toNode='STBDHeloDoorSwitch')])]),
      Group(DEF='PortHeloDoor',
        children=[
        Transform(DEF='PortHeloDoor1',rotation=(1,0,0,-.14),translation=(-5.785,0,-23.02),
          children=[
          Transform(DEF='HangerDoorPort1',translation=(0,5.5,0),
            children=[
            Shape(USE='HangerDoor')]),
          Transform(DEF='HangerDoorPort2',translation=(0,4.5,0),
            children=[
            Shape(USE='HangerDoor')]),
          Transform(DEF='HangerDoorPort3',translation=(0,3.5,0),
            children=[
            Shape(USE='HangerDoor')]),
          Transform(DEF='HangerDoorPort4',translation=(0,2.5,0),
            children=[
            Shape(USE='HangerDoor')]),
          Transform(DEF='HangerDoorPort5',translation=(0,1.5,0),
            children=[
            Shape(USE='HangerDoor')]),
          Transform(DEF='HangerDoorPort6',translation=(0,.5,0),
            children=[
            Shape(USE='HangerDoor')]),
          Switch(DEF='PortHeloDoorSwitch',whichChoice=0,
            children=[
            Group(DEF='PortHangerDoorsUp',
              children=[
              Transform(translation=(0,3,0),
                children=[
                Shape(DEF='PortHangerDoorTouchSensor1',
                  appearance=Appearance(
                    material=Material(USE='Transparent')),
                  geometry=Box(size=(5,6,.2)))]),
              TouchSensor(DEF='PortHeloDoorTouchSensor',description='Raise Port Helo Door'),
              TimeSensor(DEF='PortHeloDoorClockOut',cycleInterval=3),
              PositionInterpolator(DEF='PortHeloDoor1PathInterpolatorOut',key=[0,1],keyValue=[(0,5.5,0),(0,5.95,0)]),
              OrientationInterpolator(DEF='PortHeloDoor1OrientationInterpolatorOut',key=[0,1],keyValue=[(1,0,0,0),(1,0,0,-1.43)]),
              PositionInterpolator(DEF='PortHeloDoor2PathInterpolatorOut',key=[0,.85,1],keyValue=[(0,4.5,0),(0,5.5,0),(0,5.88,0)]),
              OrientationInterpolator(DEF='PortHeloDoor2OrientationInterpolatorOut',key=[0,.85,1],keyValue=[(1,0,0,0),(1,0,0,1.3),(1,0,0,1.71)]),
              PositionInterpolator(DEF='PortHeloDoor3PathInterpolatorOut',key=[0,.6,.95,1],keyValue=[(0,3.5,0),(0,4.5,0),(0,5.5,0),(0,5.81,0)]),
              OrientationInterpolator(DEF='PortHeloDoor3OrientationInterpolatorOut',key=[0,.6,.95,1],keyValue=[(1,0,0,0),(1,0,0,-.6),(1,0,0,-1),(1,0,0,-1.43)]),
              PositionInterpolator(DEF='PortHeloDoor4PathInterpolatorOut',key=[0,.5,.86,.99,1],keyValue=[(0,2.5,0),(0,3.5,0),(0,4.5,0),(0,5.5,0),(0,5.74,0)]),
              OrientationInterpolator(DEF='PortHeloDoor4OrientationInterpolatorOut',key=[0,.5,.86,.99,1],keyValue=[(1,0,0,0),(1,0,0,.4),(1,0,0,.8),(1,0,0,1.10),(1,0,0,1.71)]),
              PositionInterpolator(DEF='PortHeloDoor5PathInterpolatorOut',key=[0,.45,.80,.94,.99,1],keyValue=[(0,1.5,0),(0,2.5,0),(0,3.5,0),(0,4.5,0),(0,5.5,0),(0,5.67,0)]),
              OrientationInterpolator(DEF='PortHeloDoor5OrientationInterpolatorOut',key=[0,.45,.80,.94,.99,1],keyValue=[(1,0,0,0),(1,0,0,-.2),(1,0,0,-.4),(1,0,0,-.6),(1,0,0,-1),(1,0,0,-1.43)]),
              PositionInterpolator(DEF='PortHeloDoor6PathInterpolatorOut',key=[0,.45,.75,.90,.98,.99,1],keyValue=[(0,.5,0),(0,1.5,0),(0,2.5,0),(0,3.5,0),(0,4.5,0),(0,5.5,0),(0,5.61,0)]),
              OrientationInterpolator(DEF='PortHeloDoor6OrientationInterpolatorOut',key=[0,.45,.75,.90,.98,.99,1],keyValue=[(1,0,0,0),(1,0,0,.2),(1,0,0,.4),(1,0,0,.8),(1,0,0,1.10),(1,0,0,1.4),(1,0,0,1.71)]),
              #  STBD Helo Door Clock to movement 
              ROUTE(fromField='fraction_changed',fromNode='PortHeloDoorClockOut',toField='set_fraction',toNode='PortHeloDoor1PathInterpolatorOut'),
              ROUTE(fromField='fraction_changed',fromNode='PortHeloDoorClockOut',toField='set_fraction',toNode='PortHeloDoor1OrientationInterpolatorOut'),
              ROUTE(fromField='fraction_changed',fromNode='PortHeloDoorClockOut',toField='set_fraction',toNode='PortHeloDoor2PathInterpolatorOut'),
              ROUTE(fromField='fraction_changed',fromNode='PortHeloDoorClockOut',toField='set_fraction',toNode='PortHeloDoor2OrientationInterpolatorOut'),
              ROUTE(fromField='fraction_changed',fromNode='PortHeloDoorClockOut',toField='set_fraction',toNode='PortHeloDoor3PathInterpolatorOut'),
              ROUTE(fromField='fraction_changed',fromNode='PortHeloDoorClockOut',toField='set_fraction',toNode='PortHeloDoor3OrientationInterpolatorOut'),
              ROUTE(fromField='fraction_changed',fromNode='PortHeloDoorClockOut',toField='set_fraction',toNode='PortHeloDoor4PathInterpolatorOut'),
              ROUTE(fromField='fraction_changed',fromNode='PortHeloDoorClockOut',toField='set_fraction',toNode='PortHeloDoor4OrientationInterpolatorOut'),
              ROUTE(fromField='fraction_changed',fromNode='PortHeloDoorClockOut',toField='set_fraction',toNode='PortHeloDoor5PathInterpolatorOut'),
              ROUTE(fromField='fraction_changed',fromNode='PortHeloDoorClockOut',toField='set_fraction',toNode='PortHeloDoor5OrientationInterpolatorOut'),
              ROUTE(fromField='fraction_changed',fromNode='PortHeloDoorClockOut',toField='set_fraction',toNode='PortHeloDoor6PathInterpolatorOut'),
              ROUTE(fromField='fraction_changed',fromNode='PortHeloDoorClockOut',toField='set_fraction',toNode='PortHeloDoor6OrientationInterpolatorOut'),
              #  STBD Helo Door movement to geometry 
              ROUTE(fromField='value_changed',fromNode='PortHeloDoor1PathInterpolatorOut',toField='set_translation',toNode='HangerDoorPort1'),
              ROUTE(fromField='value_changed',fromNode='PortHeloDoor1OrientationInterpolatorOut',toField='set_rotation',toNode='HangerDoorPort1'),
              ROUTE(fromField='value_changed',fromNode='PortHeloDoor2PathInterpolatorOut',toField='set_translation',toNode='HangerDoorPort2'),
              ROUTE(fromField='value_changed',fromNode='PortHeloDoor2OrientationInterpolatorOut',toField='set_rotation',toNode='HangerDoorPort2'),
              ROUTE(fromField='value_changed',fromNode='PortHeloDoor3PathInterpolatorOut',toField='set_translation',toNode='HangerDoorPort3'),
              ROUTE(fromField='value_changed',fromNode='PortHeloDoor3OrientationInterpolatorOut',toField='set_rotation',toNode='HangerDoorPort3'),
              ROUTE(fromField='value_changed',fromNode='PortHeloDoor4PathInterpolatorOut',toField='set_translation',toNode='HangerDoorPort4'),
              ROUTE(fromField='value_changed',fromNode='PortHeloDoor4OrientationInterpolatorOut',toField='set_rotation',toNode='HangerDoorPort4'),
              ROUTE(fromField='value_changed',fromNode='PortHeloDoor5PathInterpolatorOut',toField='set_translation',toNode='HangerDoorPort5'),
              ROUTE(fromField='value_changed',fromNode='PortHeloDoor5OrientationInterpolatorOut',toField='set_rotation',toNode='HangerDoorPort5'),
              ROUTE(fromField='value_changed',fromNode='PortHeloDoor6PathInterpolatorOut',toField='set_translation',toNode='HangerDoorPort6'),
              ROUTE(fromField='value_changed',fromNode='PortHeloDoor6OrientationInterpolatorOut',toField='set_rotation',toNode='HangerDoorPort6'),
              #  STBD Helo Door Sensor to clock 
              ROUTE(fromField='touchTime',fromNode='PortHeloDoorTouchSensor',toField='set_startTime',toNode='PortHeloDoorClockOut')]),
            Group(DEF='PortHangerDoorsDown',
              children=[
              Transform(translation=(0,5.75,0),
                children=[
                Shape(DEF='PortHangerDoorTouchSensorDn',
                  appearance=Appearance(
                    material=Material(USE='Transparent')),
                  geometry=Box(size=(5,1,1.2)))]),
              TouchSensor(DEF='PortHeloDoorTouchSensorDown',description='LowerPortHeloDoor'),
              TimeSensor(DEF='PortHeloDoorClockDown',cycleInterval=3),
              PositionInterpolator(DEF='PortHeloDoor1PathInterpolatorDown',key=[0,1],keyValue=[(0,5.95,0),(0,5.5,0)]),
              OrientationInterpolator(DEF='PortHeloDoor1OrientationInterpolatorDown',key=[0,1],keyValue=[(1,0,0,-1.43),(1,0,0,0)]),
              PositionInterpolator(DEF='PortHeloDoor2PathInterpolatorDown',key=[0,.14,1],keyValue=[(0,5.88,0),(0,5.5,0),(0,4.5,0)]),
              OrientationInterpolator(DEF='PortHeloDoor2OrientationInterpolatorDown',key=[0,.14,1],keyValue=[(1,0,0,1.71),(1,0,0,1.3),(1,0,0,0)]),
              PositionInterpolator(DEF='PortHeloDoor3PathInterpolatorDown',key=[0,.08,.55,1],keyValue=[(0,5.81,0),(0,5.5,0),(0,4.5,0),(0,3.5,0)]),
              OrientationInterpolator(DEF='PortHeloDoor3OrientationInterpolatorDown',key=[0,.6,.95,1],keyValue=[(1,0,0,-1.43),(1,0,0,-1),(1,0,0,-.6),(1,0,0,0)]),
              PositionInterpolator(DEF='PortHeloDoor4PathInterpolatorDown',key=[0,.06,.4,.75,1],keyValue=[(0,5.74,0),(0,5.5,0),(0,4.5,0),(0,3.5,0),(0,2.5,0)]),
              OrientationInterpolator(DEF='PortHeloDoor4OrientationInterpolatorDown',key=[0,.5,.86,.95,1],keyValue=[(1,0,0,1.71),(1,0,0,1.10),(1,0,0,.8),(1,0,0,.4),(1,0,0,0)]),
              PositionInterpolator(DEF='PortHeloDoor5PathInterpolatorDown',key=[0,.04,.3,.55,.85,1],keyValue=[(0,5.67,0),(0,5.5,0),(0,4.5,0),(0,3.5,0),(0,2.5,0),(0,1.5,0)]),
              OrientationInterpolator(DEF='PortHeloDoor5OrientationInterpolatorDown',key=[0,.45,.80,.94,.99,1],keyValue=[(1,0,0,-1.43),(1,0,0,-1),(1,0,0,-.6),(1,0,0,-.4),(1,0,0,-.2),(1,0,0,0)]),
              PositionInterpolator(DEF='PortHeloDoor6PathInterpolatorDown',key=[0,.03,.25,.45,.68,.9,1],keyValue=[(0,5.61,0),(0,5.5,0),(0,4.5,0),(0,3.5,0),(0,2.5,0),(0,1.5,0),(0,.5,0)]),
              OrientationInterpolator(DEF='PortHeloDoor6OrientationInterpolatorDown',key=[0,.45,.75,.8,.93,.98,1],keyValue=[(1,0,0,1.71),(1,0,0,1.4),(1,0,0,1.1),(1,0,0,.8),(1,0,0,.4),(1,0,0,.2),(1,0,0,0)]),
              #  Port Helo Door Clock to movement 
              ROUTE(fromField='fraction_changed',fromNode='PortHeloDoorClockDown',toField='set_fraction',toNode='PortHeloDoor1PathInterpolatorDown'),
              ROUTE(fromField='fraction_changed',fromNode='PortHeloDoorClockDown',toField='set_fraction',toNode='PortHeloDoor1OrientationInterpolatorDown'),
              ROUTE(fromField='fraction_changed',fromNode='PortHeloDoorClockDown',toField='set_fraction',toNode='PortHeloDoor2PathInterpolatorDown'),
              ROUTE(fromField='fraction_changed',fromNode='PortHeloDoorClockDown',toField='set_fraction',toNode='PortHeloDoor2OrientationInterpolatorDown'),
              ROUTE(fromField='fraction_changed',fromNode='PortHeloDoorClockDown',toField='set_fraction',toNode='PortHeloDoor3PathInterpolatorDown'),
              ROUTE(fromField='fraction_changed',fromNode='PortHeloDoorClockDown',toField='set_fraction',toNode='PortHeloDoor3OrientationInterpolatorDown'),
              ROUTE(fromField='fraction_changed',fromNode='PortHeloDoorClockDown',toField='set_fraction',toNode='PortHeloDoor4PathInterpolatorDown'),
              ROUTE(fromField='fraction_changed',fromNode='PortHeloDoorClockDown',toField='set_fraction',toNode='PortHeloDoor4OrientationInterpolatorDown'),
              ROUTE(fromField='fraction_changed',fromNode='PortHeloDoorClockDown',toField='set_fraction',toNode='PortHeloDoor5PathInterpolatorDown'),
              ROUTE(fromField='fraction_changed',fromNode='PortHeloDoorClockDown',toField='set_fraction',toNode='PortHeloDoor5OrientationInterpolatorDown'),
              ROUTE(fromField='fraction_changed',fromNode='PortHeloDoorClockDown',toField='set_fraction',toNode='PortHeloDoor6PathInterpolatorDown'),
              ROUTE(fromField='fraction_changed',fromNode='PortHeloDoorClockDown',toField='set_fraction',toNode='PortHeloDoor6OrientationInterpolatorDown'),
              #  STBD Helo Door movement to geometry 
              ROUTE(fromField='value_changed',fromNode='PortHeloDoor1PathInterpolatorDown',toField='set_translation',toNode='HangerDoorPort1'),
              ROUTE(fromField='value_changed',fromNode='PortHeloDoor1OrientationInterpolatorDown',toField='set_rotation',toNode='HangerDoorPort1'),
              ROUTE(fromField='value_changed',fromNode='PortHeloDoor2PathInterpolatorDown',toField='set_translation',toNode='HangerDoorPort2'),
              ROUTE(fromField='value_changed',fromNode='PortHeloDoor2OrientationInterpolatorDown',toField='set_rotation',toNode='HangerDoorPort2'),
              ROUTE(fromField='value_changed',fromNode='PortHeloDoor3PathInterpolatorDown',toField='set_translation',toNode='HangerDoorPort3'),
              ROUTE(fromField='value_changed',fromNode='PortHeloDoor3OrientationInterpolatorDown',toField='set_rotation',toNode='HangerDoorPort3'),
              ROUTE(fromField='value_changed',fromNode='PortHeloDoor4PathInterpolatorDown',toField='set_translation',toNode='HangerDoorPort4'),
              ROUTE(fromField='value_changed',fromNode='PortHeloDoor4OrientationInterpolatorDown',toField='set_rotation',toNode='HangerDoorPort4'),
              ROUTE(fromField='value_changed',fromNode='PortHeloDoor5PathInterpolatorDown',toField='set_translation',toNode='HangerDoorPort5'),
              ROUTE(fromField='value_changed',fromNode='PortHeloDoor5OrientationInterpolatorDown',toField='set_rotation',toNode='HangerDoorPort5'),
              ROUTE(fromField='value_changed',fromNode='PortHeloDoor6PathInterpolatorDown',toField='set_translation',toNode='HangerDoorPort6'),
              ROUTE(fromField='value_changed',fromNode='PortHeloDoor6OrientationInterpolatorDown',toField='set_rotation',toNode='HangerDoorPort6'),
              #  STBD Helo Door Sensor to clock 
              ROUTE(fromField='touchTime',fromNode='PortHeloDoorTouchSensorDown',toField='set_startTime',toNode='PortHeloDoorClockDown')])])]),
        Group(DEF='PortHeloDoorAnimationControl',
          children=[
          IntegerTrigger(DEF='PortHeloDoorDown',integerKey=0),
          IntegerTrigger(DEF='PortHeloDoorUp',integerKey=1),
          ROUTE(fromField='isActive',fromNode='PortHeloDoorTouchSensor',toField='set_boolean',toNode='PortHeloDoorUp'),
          ROUTE(fromField='isActive',fromNode='PortHeloDoorTouchSensorDown',toField='set_boolean',toNode='PortHeloDoorDown'),
          ROUTE(fromField='triggerValue',fromNode='PortHeloDoorUp',toField='whichChoice',toNode='PortHeloDoorSwitch'),
          ROUTE(fromField='triggerValue',fromNode='PortHeloDoorDown',toField='whichChoice',toNode='PortHeloDoorSwitch')])]),
      Group(DEF='THREEGTG',
        children=[
        Transform(DEF='STACK',translation=(-3,7.4,-27),
          children=[
          Transform(
            children=[
            Shape(
              appearance=Appearance(
                material=Material(DEF='STACKCOLOR',diffuseColor=(.3,.3,.3))),
              geometry=Cylinder(bottom=False,height=1.2,radius=.75))]),
          Transform(translation=(0,.6,0),
            children=[
            Shape(
              appearance=Appearance(
                material=Material(USE='STACKCOLOR')),
              geometry=Cylinder(bottom=False,height=1))])])]),
      Group(DEF='BlastDeflector',
        children=[
        Transform(translation=(0,7,-25),
          children=[
          Shape(
            geometry=Extrusion(crossSection=[(-3.35,0),(-3,1.2),(3,1.2),(3.35,0),(-3.35,0)],orientation=[(1,0,0,-.1),(1,0,0,.1)],spine=[(0,0,0),(0,0,-.3)]),
            appearance=Appearance(USE='HazeGray'))])]),
      Group(DEF='JP5Barn',
        children=[
        Transform(translation=(0,0,-21.5),
          children=[
          Shape(
            geometry=Extrusion(crossSection=[(-2.5,0),(-2.3,2),(2.3,2),(2.5,0),(-2.5,0)],orientation=[(1,0,0,-.1),(1,0,0,0)],scale=[(.9,.7),(1,1)],spine=[(0,0,0),(0,0,-2)]),
            appearance=Appearance(USE='HazeGray'))])]),
      Group(DEF='LSOShack',
        children=[
        Transform(translation=(6.75,0,-10),
          children=[
          Shape(
            geometry=Extrusion(crossSection=[(-.75,0),(-.7,.5),(.7,.5),(.75,0),(-.7,0)],orientation=[(1,0,0,-.1),(1,0,0,.1)],scale=[(1,1),(1,1)],spine=[(0,0,0),(0,0,-2)]),
            appearance=Appearance(USE='HazeGray'))]),
        Transform(DEF='Aft',rotation=(1,0,0,-.1),translation=(6.75,.25,-10.02),
          children=[
          Shape(DEF='WindowPane',
            appearance=Appearance(DEF='WindowColor',
              material=Material(diffuseColor=(0.00,0.40,0.80))),
            geometry=Box(size=(1.3,.3,.01)))]),
        Transform(DEF='FWD',rotation=(1,0,0,.1),translation=(6.75,.25,-11.98),
          children=[
          Shape(USE='WindowPane')]),
        Transform(DEF='Port',rotation=(0,0,1,-.1),translation=(6.02,.25,-11),
          children=[
          Shape(DEF='WindowPanePort',
            appearance=Appearance(USE='WindowColor'),
            geometry=Box(size=(.01,.3,1.8)))])]),
      Group(DEF='HSOShack',
        children=[
        Transform(translation=(1.5,5.5,-23.2),
          children=[
          Shape(
            geometry=Extrusion(crossSection=[(-.75,0),(-.7,.1),(.7,.1),(.75,0),(.5,-1),(-.5,-1),(-.75,0)],orientation=[(1,0,0,.38),(1,0,0,0)],scale=[(.8,.8),(1,1.3)],spine=[(0,0,0),(0,0,-.5)]),
            appearance=Appearance(USE='HazeGray'))]),
        Transform(DEF='AftHSO',rotation=(1,0,0,.37),translation=(1.5,4.9,-23.43),
          children=[
          Shape(DEF='WindowPaneHSO',
            appearance=Appearance(USE='WindowColor'),
            geometry=Box(size=(.6,1.3,.01)))])])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful for HeloHanger.py")
