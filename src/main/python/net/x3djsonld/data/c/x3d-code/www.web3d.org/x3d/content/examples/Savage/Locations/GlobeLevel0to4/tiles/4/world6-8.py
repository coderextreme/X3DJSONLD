###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    Shape(
      appearance=Appearance(
        material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0,0.05,0)),
        texture=ImageTexture(url=['../../images/4/world6-8.jpg'],repeatS=False,repeatT=False)),
      geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(-22.541664655043235,-0.04166130228196607,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=22,xSpacing=1.0714287,zDimension=24,zSpacing=0.48913044,height=[-5181,-5454,-5293,-4945,-4479,-2854,-1904,-2981,-3744,-4581,-4187,-3446,-2104,-250,76,760,1637,1313,1283,1269,1213,1179,-4910,-5346,-4894,-5087,-4809,-3102,-2308,-2731,-4133,-4476,-4090,-3629,-2101,-286,10,1043,1811,1500,1365,1286,1243,1187,-5316,-5701,-5257,-5173,-5043,-4011,-2717,-1535,-4516,-4299,-4029,-3239,-1838,-203,15,672,1908,1562,1461,1256,1175,1107,-5401,-5410,-5525,-5234,-5007,-4544,-2983,-2992,-4173,-4159,-3863,-2906,-1160,-170,204,871,1376,1709,1569,1372,1198,1110,-5172,-5594,-5399,-5449,-4929,-4519,-4044,-3077,-3723,-4252,-3597,-2693,-973,-132,543,1191,1491,1556,1515,1338,1219,1158,-5467,-5556,-5415,-5508,-5252,-3865,-4282,-3639,-2660,-3568,-3187,-2363,-612,-60,486,1277,1463,1359,1434,1254,1091,1101,-5097,-5264,-5502,-5414,-5543,-4866,-4258,-4470,-2865,-1401,-1877,-1368,-288,153,742,1008,1506,1290,1280,1211,1025,967,-5038,-5527,-5382,-5567,-5453,-5378,-4992,-4863,-4879,-2071,-1643,-952,-318,441,957,1335,1358,1394,1269,1194,1086,958,-5056,-5260,-5550,-5587,-5422,-5270,-5240,-5172,-4954,-4183,-1422,-887,-123,785,1137,1202,1263,1632,1219,1213,1117,984,-4597,-5546,-5347,-5578,-5421,-5307,-5362,-5423,-5332,-4736,-3887,-765,-111,681,1238,1121,1100,1185,1201,1190,1065,1001,-4684,-5338,-5376,-5591,-5407,-5395,-5373,-5401,-5202,-4687,-3955,-1584,343,1069,1184,1098,1082,1152,1183,1151,1067,1024,-5273,-5633,-5244,-5546,-5671,-5527,-5555,-5242,-5031,-4603,-3907,-1341,756,859,1154,1086,1123,1144,1141,1113,1060,1043,-5281,-5226,-5328,-5698,-5631,-5623,-5555,-5227,-4893,-4491,-3782,-670,679,1094,1125,1106,1138,1161,1144,1127,1093,1043,-4920,-5588,-5512,-5687,-5679,-5562,-5449,-5138,-4930,-4486,-3718,-934,596,655,1157,1115,1150,1175,1177,1155,1081,1035,-5361,-5263,-5503,-5540,-5512,-5548,-5411,-5171,-4807,-4338,-3588,-1428,331,1062,1146,1142,1163,1192,1197,1179,1096,1042,-5267,-5207,-5575,-5459,-5501,-5509,-5393,-5222,-5023,-4457,-3837,-2271,272,1386,1243,1175,1238,1206,1215,1225,1127,1040,-5245,-5256,-5475,-5480,-5505,-5483,-5382,-5231,-4867,-4431,-3685,-2260,277,670,1326,1226,1327,1250,1254,1256,1120,1062,-5315,-5206,-5396,-5475,-5515,-5511,-5383,-5147,-4851,-4366,-3686,-2788,250,1941,1424,1278,1276,1329,1351,1227,1126,1078,-5284,-5317,-5451,-5512,-5517,-5486,-5441,-5131,-4784,-4370,-3786,-3189,91,814,1377,1439,1589,1381,1424,1283,1229,1092,-5492,-5470,-5515,-5554,-5534,-5520,-5438,-5136,-4770,-4378,-3854,-3177,-101,838,1612,1457,1547,1591,1321,1234,1246,1103,-5498,-5545,-5557,-5562,-5549,-5498,-5421,-5146,-4844,-4385,-3854,-3382,-1610,674,1316,1544,1571,1418,1418,1384,1220,1091,-5463,-5566,-5575,-5591,-5569,-5458,-5411,-5160,-4809,-4435,-3853,-3485,-2046,557,1020,1696,1586,1397,1486,1437,1202,1110,-5287,-5461,-5572,-5583,-5562,-5495,-5418,-5167,-4861,-4391,-3862,-3315,-1974,-23,1276,1796,1734,1388,1462,1232,1136,1095,-5358,-5539,-5564,-5572,-5561,-5493,-5404,-5170,-4871,-4398,-3860,-3361,-1835,-64,1663,1560,1749,1360,1460,1265,1130,1094],
        geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(0.0,0.0,-6378137.0),geoSystem=['GDC'])))])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
