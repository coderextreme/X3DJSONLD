###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_415',geoSystem=['GDC'],position=(1.2908486746019459,104.0350900579996,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.2908486746019459,104.0350900579996,0.0),range=4101.627,child1Url=['../../tiles/5/singapore8-30.x3d'],child2Url=['../../tiles/5/singapore8-31.x3d'],child3Url=['../../tiles/5/singapore9-30.x3d'],child4Url=['../../tiles/5/singapore9-31.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore4-15.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.2821169622239519,104.02072702387058,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=36,xSpacing=8.207448E-4,zDimension=44,zSpacing=4.0612617E-4,height=[1,0,2,3,-1,8,12,4,2,3,3,10,6,0,2,0,5,8,9,10,8,3,0,0,8,14,5,12,1,-25,-29,-29,-29,-29,-29,-28,1,0,1,5,6,14,13,5,2,7,4,5,5,1,2,1,5,9,11,12,9,5,3,2,6,10,7,11,3,-19,-28,-29,-29,-29,-29,-27,1,2,1,8,14,18,12,6,1,8,6,1,3,5,3,2,4,10,13,13,9,6,5,5,5,6,8,9,6,-12,-26,-28,-29,-29,-28,-24,2,5,4,9,13,12,7,7,1,4,5,1,5,8,5,3,5,11,15,14,9,6,6,6,7,9,10,9,7,-3,-18,-25,-28,-29,-27,-16,2,8,8,9,10,3,2,9,2,0,5,2,7,11,7,3,6,12,16,15,9,6,6,8,12,12,10,8,7,3,-9,-21,-27,-27,-24,-7,8,9,8,8,9,0,2,13,8,5,7,7,10,13,5,2,5,12,16,13,9,6,7,12,15,13,9,8,7,4,-2,-10,-17,-17,-13,0,14,11,7,6,8,0,2,16,15,12,9,12,13,14,3,0,5,13,14,10,8,7,8,15,18,13,9,7,6,4,2,0,-7,-6,-1,5,14,12,8,8,8,1,0,14,14,14,9,13,8,9,-1,-2,6,13,12,9,9,8,10,15,14,9,9,6,5,4,4,2,-1,0,2,6,13,12,8,12,9,4,-1,11,11,15,9,13,2,2,-6,-4,7,11,8,8,10,10,12,15,9,5,10,6,5,4,4,5,5,5,6,6,11,11,11,11,8,8,2,8,8,15,8,7,-2,1,-4,-2,9,11,7,8,10,9,10,13,7,6,11,6,5,4,4,5,7,7,6,4,8,9,13,9,7,12,10,6,4,16,7,0,-7,2,0,0,11,12,6,9,10,6,9,11,5,7,13,6,4,5,5,6,7,7,6,2,7,7,9,7,5,15,13,6,2,13,12,0,-15,-2,0,2,12,11,8,9,9,5,6,7,5,10,14,6,6,6,6,7,7,6,4,0,6,4,5,6,4,17,14,6,1,9,18,1,-25,-11,0,5,11,11,10,10,7,4,4,3,5,13,14,7,9,7,7,7,7,6,2,-1,5,2,1,6,6,15,14,7,3,11,20,5,-17,-10,-1,4,10,10,6,6,5,4,2,0,3,9,11,7,9,8,7,7,6,4,0,-1,4,0,-1,7,10,11,13,7,7,15,19,9,-2,-6,-3,3,8,8,2,0,4,5,1,-2,0,3,7,8,8,9,6,7,6,3,-1,-1,2,0,-1,8,11,10,12,8,10,15,16,7,0,-4,-4,1,6,6,0,0,3,5,1,-3,-2,0,5,8,8,8,6,6,6,1,-2,-2,1,-1,0,10,11,10,10,8,11,14,11,4,-1,-4,-4,0,4,5,1,0,2,4,1,-3,-4,-1,4,6,7,7,6,6,6,0,-3,-3,0,-1,0,8,10,10,10,9,13,14,8,2,-2,-1,-1,0,2,3,1,0,1,4,0,-2,-6,-5,5,6,7,6,5,2,-1,-4,-4,-4,0,0,0,4,10,10,9,11,14,15,5,0,-1,2,1,0,0,2,1,0,1,2,0,-2,-9,-8,6,6,6,6,4,-3,-12,-7,-5,-5,2,-1,-1,1,6,9,10,12,14,11,0,-1,0,4,3,0,0,1,1,2,2,1,0,0,-4,-3,6,6,6,4,0,-9,-16,-10,-6,-6,8,-5,-2,0,0,7,11,13,15,5,-7,-5,1,4,3,0,0,0,1,3,3,1,0,0,3,6,5,7,6,3,-5,-15,-15,-11,-8,-6,8,-4,-2,-1,0,9,13,14,12,0,-8,-2,6,8,4,0,0,0,2,4,3,0,0,0,5,10,7,9,8,3,-11,-18,-15,-12,-9,-7,4,0,-1,-2,3,13,14,15,6,-7,-5,4,13,13,7,0,-1,0,3,4,2,0,0,0,2,9,12,12,12,3,-16,-18,-15,-12,-9,-8,2,1,-1,0,7,15,15,13,0,-8,0,9,17,16,10,0,-1,0,3,4,2,0,0,0,0,9,16,14,13,5,-14,-17,-15,-12,-10,-9,1,2,-1,3,12,15,15,8,-6,-3,7,13,19,18,14,4,-2,0,4,3,3,0,-2,-2,0,10,19,17,14,8,-7,-16,-14,-12,-10,-9,3,4,0,7,15,15,15,9,-5,0,11,16,18,16,15,9,0,1,3,4,6,2,-3,-4,0,13,21,17,14,10,0,-13,-14,-12,-10,-9,6,7,4,13,15,15,14,13,1,5,11,17,15,13,14,13,5,1,2,5,12,5,-5,-6,0,17,23,15,14,12,5,-7,-13,-12,-10,-9,9,8,6,14,14,15,16,21,9,6,8,13,10,9,12,15,9,5,5,10,17,7,-5,-6,0,17,23,15,14,13,10,0,-11,-12,-10,-9,10,7,5,11,14,14,20,32,14,5,4,3,4,5,10,15,13,11,12,16,19,7,-5,-5,1,13,20,16,14,14,12,5,-5,-11,-10,-9,11,7,5,8,14,16,26,36,15,3,0,-3,0,1,9,14,16,17,18,20,18,6,-3,-2,3,8,16,17,14,14,13,10,0,-9,-10,-9,12,7,5,5,13,20,34,28,10,2,0,-6,-2,0,8,12,18,24,23,20,15,6,-1,0,4,6,11,15,14,14,14,12,6,-4,-9,-9,13,6,3,3,14,26,37,18,5,3,0,-4,-3,0,8,12,19,26,24,18,12,5,0,1,4,5,8,13,14,14,14,13,10,0,-7,-8,12,5,0,1,18,34,32,8,3,5,2,2,0,-1,9,16,19,23,21,14,9,5,3,3,5,5,6,10,13,14,14,14,12,4,-4,-7,10,3,-1,1,18,37,26,2,3,7,5,8,3,0,10,19,17,18,15,9,6,4,4,3,4,4,4,7,11,13,14,14,12,7,-1,-6,7,1,0,4,12,31,20,0,4,8,8,11,8,4,13,18,14,11,9,4,3,4,2,2,2,2,2,4,8,12,14,12,10,6,0,-5,4,1,2,7,6,21,15,1,7,10,11,11,11,9,15,16,10,3,2,2,1,3,0,0,0,0,0,2,5,9,11,10,7,6,1,-4,4,3,5,8,3,13,12,6,10,13,13,12,12,13,14,11,5,-3,-1,3,2,1,0,-2,-2,-1,-1,0,1,2,2,3,3,5,3,-2,4,6,8,9,3,7,10,12,12,16,15,13,12,14,12,6,1,-7,-3,5,3,0,-3,-5,-4,-3,-3,-2,-1,-2,-4,-3,1,5,6,0,5,8,9,9,8,4,10,15,12,15,16,14,12,14,10,4,0,-2,0,2,1,-1,-6,-6,-5,-4,-4,-3,-3,-4,-6,-4,1,6,7,3,6,9,10,9,14,4,11,16,11,12,16,15,12,13,9,3,0,3,4,0,0,-3,-8,-6,-5,-4,-4,-4,-5,-5,-6,-3,1,8,8,5,6,11,10,9,13,6,9,13,9,10,14,13,10,11,11,5,2,7,8,3,0,-4,-9,-7,-4,-4,-4,-5,-6,-6,-5,-1,5,8,8,4,6,12,8,8,10,8,6,10,8,8,11,11,7,9,12,8,4,9,12,7,0,-5,-9,-7,-4,-4,-4,-5,-6,-6,-4,1,7,8,7,2,5,13,5,5,8,7,6,9,8,8,10,8,6,7,11,11,6,8,11,8,1,-5,-9,-7,-4,-4,-5,-6,-6,-4,-1,4,8,8,5,0,3,15,2,3,6,6,7,8,8,8,10,7,6,6,10,13,7,6,8,7,3,-4,-8,-6,-5,-4,-5,-6,-6,-3,1,7,8,7,2,0],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
