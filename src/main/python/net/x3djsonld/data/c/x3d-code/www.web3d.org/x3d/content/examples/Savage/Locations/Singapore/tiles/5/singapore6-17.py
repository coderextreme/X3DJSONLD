###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    Shape(
      appearance=Appearance(
        material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
        texture=ImageTexture(url=['../../images/5/singapore6-17.jpg'],repeatS=False,repeatT=False)),
      geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.264653537467964,103.83400758019333,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=3.9897318E-4,zDimension=23,zSpacing=3.96896E-4,height=[14,13,11,11,13,15,17,19,18,17,17,18,19,20,21,21,21,19,17,15,14,13,11,8,6,6,7,8,8,7,7,8,8,7,6,6,6,18,16,13,9,10,12,13,14,15,15,16,17,18,19,20,21,21,21,18,14,12,11,9,7,6,6,6,8,8,8,7,8,7,6,5,5,6,22,20,14,9,9,10,11,11,12,14,16,18,18,19,19,20,20,21,18,12,10,10,9,7,6,6,6,8,9,8,8,8,7,6,5,5,5,22,22,16,10,10,11,11,11,12,13,16,19,20,19,17,16,17,18,15,11,9,9,9,8,8,7,8,8,9,8,8,8,7,7,6,6,5,21,22,17,12,11,11,12,13,13,14,17,20,20,19,16,12,12,14,13,10,9,9,9,9,9,9,9,9,9,9,9,8,8,8,7,7,6,17,17,15,12,10,10,15,19,19,18,19,20,19,17,14,10,10,11,11,9,9,9,8,8,8,9,9,8,8,8,9,8,8,8,8,7,6,13,12,12,11,9,9,15,22,22,20,20,20,17,15,12,8,7,9,10,10,9,8,8,7,7,8,8,7,7,7,8,8,8,8,8,8,8,10,9,10,10,8,8,11,15,15,14,15,16,14,12,9,7,7,8,9,10,10,9,8,8,8,9,9,8,7,7,8,7,7,7,7,7,8,8,6,7,8,7,6,7,8,8,9,11,12,11,8,8,7,7,8,9,10,10,10,9,9,9,10,10,9,8,8,7,7,6,6,6,7,8,7,6,6,7,7,6,6,7,8,8,8,9,9,8,8,8,9,10,10,11,11,10,10,10,10,10,9,8,8,8,7,7,7,7,6,7,8,7,6,6,7,7,6,6,7,7,8,8,7,7,8,8,9,10,11,11,11,11,11,11,10,9,9,8,8,8,7,7,7,8,8,7,7,8,7,7,6,7,7,7,7,7,7,8,8,7,7,8,8,9,9,10,10,9,10,12,12,11,9,8,7,7,7,7,7,7,7,8,8,9,9,8,7,7,7,8,8,8,7,7,8,8,8,8,8,9,9,9,9,9,7,9,12,12,12,10,7,7,7,7,6,6,6,6,8,9,10,10,9,9,8,8,9,9,9,8,8,8,9,10,10,9,8,6,7,8,9,8,9,12,12,11,10,9,8,8,8,7,6,6,6,6,7,8,9,10,10,10,9,10,11,10,9,8,9,10,11,11,10,8,5,5,8,9,9,10,11,11,10,10,9,9,9,9,8,6,6,5,5,6,7,8,11,11,11,10,10,11,11,12,12,13,13,13,12,10,9,7,6,6,8,11,13,16,15,11,9,8,8,8,8,8,7,7,6,6,7,8,9,12,12,12,11,10,11,13,15,16,17,16,15,12,9,9,10,7,3,7,13,18,21,18,12,8,6,6,6,7,8,8,8,8,8,7,8,10,13,12,12,13,13,14,16,17,16,15,16,18,15,12,11,11,10,8,12,20,23,24,21,15,11,8,7,8,8,8,7,6,5,6,8,9,10,13,12,13,15,16,18,19,20,16,11,15,20,19,15,13,13,14,14,20,28,29,26,22,19,15,11,9,10,10,7,5,2,1,4,8,10,10,14,13,14,17,20,22,24,23,14,4,8,15,16,16,15,14,15,18,23,30,28,22,19,18,16,14,12,13,12,10,8,5,5,6,9,10,11,15,14,16,20,24,26,28,25,12,-2,0,8,12,15,15,14,17,22,26,30,26,17,14,15,16,16,16,16,15,13,12,10,9,9,10,11,11,20,17,19,21,24,26,26,22,12,2,3,8,12,15,16,15,17,22,24,27,26,22,22,22,22,22,21,19,18,16,15,15,14,12,11,11,10,26,22,20,21,24,25,22,16,13,12,11,10,13,16,16,15,18,21,22,22,25,31,33,33,31,30,27,23,21,19,19,19,18,15,11,10,8],
        geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])))])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
