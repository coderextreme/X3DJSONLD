###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    meta(content='Three.x3d',name='title'),
    meta(content='3D Hull Number',name='description'),
    meta(content='Patrick Sullivan',name='creator'),
    meta(content='20 February 2006',name='created'),
    meta(content='14 January 2014',name='modified'),
    meta(content='1.0',name='version'),
    meta(content='Hull Numbers, ship markings',name='subject'),
    meta(content='https://savage.nps.edu/Savage/ModelDetailing/HullNumbers/Three.x3d',name='identifier'),
    meta(content='../../license.html',name='license')]),
  Scene=Scene(
    children=[
    Group(DEF='Three',
      children=[
      Transform(DEF='dad_HullNumber3_copy14',
        children=[
        Shape(DEF='HullNumber3_copy14',
          appearance=Appearance(
            material=Material(DEF='white2_mat',ambientIntensity=1,diffuseColor=(1,1,1),shininess=0,specularColor=(1,1,1))),
          geometry=IndexedFaceSet(coordIndex=[0,1,2,-1,0,2,3,-1,0,3,4,-1,0,4,5,-1,0,5,1,-1,1,6,7,-1,1,7,8,-1,1,8,2,-1,1,5,9,-1,1,9,6,-1,6,10,11,-1,6,11,7,-1,6,9,12,-1,6,12,10,-1,10,13,14,-1,10,14,11,-1,10,12,15,-1,10,15,13,-1,13,16,17,-1,13,17,14,-1,13,15,18,-1,13,18,16,-1,16,19,20,-1,16,20,17,-1,16,18,21,-1,16,21,19,-1,19,22,23,-1,19,23,20,-1,19,21,24,-1,19,24,22,-1,22,25,26,-1,22,26,23,-1,22,24,27,-1,22,27,25,-1,25,28,29,-1,25,29,30,-1,25,30,31,-1,25,31,26,-1,25,27,32,-1,25,32,28,-1,28,33,34,-1,28,34,29,-1,28,32,35,-1,28,35,33,-1,33,36,37,-1,33,37,38,-1,33,38,39,-1,33,39,34,-1,33,35,40,-1,33,40,36,-1,36,41,42,-1,36,42,37,-1,36,40,43,-1,36,43,41,-1,41,44,42,-1,41,43,45,-1,41,45,44,-1,44,46,42,-1,44,45,47,-1,44,47,46,-1,46,47,48,-1,46,48,42,-1,42,49,50,-1,42,50,37,-1,42,48,51,-1,42,51,49,-1,49,51,52,-1,49,52,50,-1,50,52,53,-1,50,53,37,-1,37,53,54,-1,37,54,38,-1,38,54,55,-1,38,55,39,-1,39,56,57,-1,39,57,34,-1,39,55,58,-1,39,58,56,-1,56,59,60,-1,56,60,61,-1,56,61,62,-1,56,62,63,-1,56,63,57,-1,56,58,64,-1,56,64,59,-1,59,65,66,-1,59,66,67,-1,59,67,60,-1,59,64,68,-1,59,68,65,-1,65,69,70,-1,65,70,71,-1,65,71,66,-1,65,68,72,-1,65,72,69,-1,69,73,74,-1,69,74,75,-1,69,75,70,-1,69,72,76,-1,69,76,73,-1,73,77,78,-1,73,78,74,-1,73,76,79,-1,73,79,77,-1,77,80,81,-1,77,81,78,-1,77,79,82,-1,77,82,80,-1,80,83,84,-1,80,84,81,-1,80,82,85,-1,80,85,83,-1,83,86,87,-1,83,87,84,-1,83,85,88,-1,83,88,86,-1,86,89,90,-1,86,90,91,-1,86,91,87,-1,86,88,92,-1,86,92,89,-1,89,92,93,-1,89,93,90,-1,90,94,95,-1,90,95,91,-1,90,93,96,-1,90,96,94,-1,94,96,97,-1,94,97,95,-1,95,97,98,-1,95,98,91,-1,91,98,99,-1,91,99,87,-1,87,99,100,-1,87,100,84,-1,84,100,101,-1,84,101,81,-1,81,101,102,-1,81,102,78,-1,78,102,103,-1,78,103,74,-1,74,103,104,-1,74,104,75,-1,75,104,105,-1,75,105,70,-1,70,105,106,-1,70,106,71,-1,71,106,107,-1,71,107,66,-1,66,107,108,-1,66,108,67,-1,67,108,109,-1,67,109,60,-1,60,109,110,-1,60,110,61,-1,61,110,111,-1,61,111,62,-1,62,111,112,-1,62,112,63,-1,63,112,113,-1,63,113,57,-1,57,113,114,-1,57,114,34,-1,34,114,115,-1,34,115,29,-1,29,115,116,-1,29,116,30,-1,30,116,117,-1,30,117,31,-1,31,117,118,-1,31,118,26,-1,26,118,119,-1,26,119,23,-1,23,119,120,-1,23,120,20,-1,20,120,121,-1,20,121,17,-1,17,121,122,-1,17,122,14,-1,14,122,123,-1,14,123,11,-1,11,123,124,-1,11,124,7,-1,7,124,125,-1,7,125,8,-1,8,126,2,-1,8,125,127,-1,8,127,126,-1,126,127,3,-1,126,3,2,-1,4,3,5,-1,5,124,9,-1,5,3,125,-1,5,125,124,-1,9,124,123,-1,9,123,12,-1,12,123,122,-1,12,122,15,-1,15,122,121,-1,15,121,18,-1,18,121,120,-1,18,120,21,-1,21,120,119,-1,21,119,24,-1,24,119,118,-1,24,118,27,-1,27,116,115,-1,27,115,32,-1,27,118,117,-1,27,117,116,-1,32,115,114,-1,32,114,35,-1,35,54,53,-1,35,53,40,-1,35,114,55,-1,35,55,54,-1,40,53,48,-1,40,48,43,-1,43,48,45,-1,45,48,47,-1,48,52,51,-1,48,53,52,-1,55,114,113,-1,55,113,58,-1,58,110,109,-1,58,109,64,-1,58,112,111,-1,58,111,110,-1,58,113,112,-1,64,108,107,-1,64,107,68,-1,64,109,108,-1,68,106,105,-1,68,105,72,-1,68,107,106,-1,72,104,103,-1,72,103,76,-1,72,105,104,-1,76,103,102,-1,76,102,79,-1,79,102,101,-1,79,101,82,-1,82,101,100,-1,82,100,85,-1,85,100,99,-1,85,99,88,-1,88,93,92,-1,88,99,98,-1,88,98,93,-1,93,98,97,-1,93,97,96,-1,125,3,127,-1],creaseAngle=0.524,
            coord=Coordinate(point=[(-.23581,1.03551,-.04102),(-.2131,1.12596,-.04102),(-.42379,1.0692,-.04102),(-.43382,1.06602,-.2),(-.24583,1.03232,-.2),(-.22312,1.12278,-.2),(-.17624,1.18443,-.04102),(-.43161,1.37828,-.04102),(-.5433,1.26158,-.04102),(-.18626,1.18125,-.2),(-.1257,1.21629,-.04102),(-.2706,1.45006,-.04102),(-.13572,1.21311,-.2),(-.06198,1.22691,-.04102),(-.05417,1.47398,-.04102),(-.072,1.22373,-.2),(-.00094,1.21715,-.04102),(.18729,1.44786,-.04102),(-.01097,1.21396,-.2),(.04544,1.18785,-.04102),(.35111,1.36949,-.04102),(.03542,1.18467,-.2),(.07474,1.1422,-.04102),(.44486,1.25157,-.04102),(.06472,1.13901,-.2),(.08451,1.08336,-.04102),(.47611,1.1068,-.04102),(.07448,1.08018,-.2),(.07144,1.01964,-.04102),(.36161,.86827,-.04102),(.42533,.93883,-.04102),(.46341,1.01842,-.04102),(.06142,1.01645,-.2),(.03226,.9652,-.04102),(.27201,.80699,-.04102),(.02224,.96201,-.2),(-.02646,.92784,-.04102),(-.04147,.65953,-.04102),(.03726,.64586,-.04102),(.09769,.60484,-.04102),(-.03648,.92466,-.2),(-.09811,.91539,-.04102),(-.16012,.77818,-.04102),(-.10813,.91221,-.2),(-.12033,.91661,-.04102),(-.13035,.91343,-.2),(-.14987,.92027,-.04102),(-.15989,.91709,-.2),(-.17015,.775,-.2),(-.17038,.63609,-.04102),(-.09714,.65367,-.04102),(-.1804,.63291,-.2),(-.10716,.65049,-.2),(-.05149,.65635,-.2),(.02724,.64268,-.2),(.08767,.60166,-.2),(.13614,.53892,-.04102),(.34525,.78478,-.04102),(.12612,.53574,-.2),(.14896,.45055,-.04102),(.53946,.56468,-.04102),(.5098,.64342,-.04102),(.46231,.70824,-.04102),(.39896,.75914,-.04102),(.13894,.44736,-.2),(.13565,.36266,-.04102),(.53299,.34959,-.04102),(.54935,.47203,-.04102),(.12563,.35947,-.2),(.09574,.2943,-.04102),(.40409,.13072,-.04102),(.48392,.23228,-.04102),(.08571,.29111,-.2),(.0358,.25035,-.04102),(.15311,.00902,-.04102),(.29544,.05553,-.04102),(.02578,.24717,-.2),(-.03757,.2357,-.04102),(-.0278,-.00649,-.04102),(-.04759,.23252,-.2),(-.10702,.2473,-.04102),(-.20248,.00499,-.04102),(-.11705,.24412,-.2),(-.16305,.28209,-.04102),(-.33591,.03941,-.04102),(-.17308,.27891,-.2),(-.2059,.34691,-.04102),(-.43869,.09593,-.04102),(-.21592,.34373,-.2),(-.23581,.44859,-.04102),(-.43454,.42223,-.04102),(-.52145,.17369,-.04102),(-.24583,.44541,-.2),(-.44456,.41904,-.2),(-.63327,.39586,-.04102),(-.58578,.27342,-.04102),(-.64329,.39268,-.2),(-.59581,.27024,-.2),(-.53147,.17051,-.2),(-.44871,.09275,-.2),(-.34593,.03623,-.2),(-.2125,.00181,-.2),(-.03782,-.00967,-.2),(.14309,.00583,-.2),(.28542,.05234,-.2),(.39406,.12754,-.2),(.4739,.2291,-.2),(.52297,.34641,-.2),(.53933,.46885,-.2),(.52944,.5615,-.2),(.49978,.64023,-.2),(.45229,.70505,-.2),(.38894,.75596,-.2),(.33523,.78159,-.2),(.26198,.80381,-.2),(.35158,.86509,-.2),(.4153,.93564,-.2),(.45339,1.01523,-.2),(.46609,1.10361,-.2),(.43484,1.24839,-.2),(.34109,1.36631,-.2),(.17727,1.44468,-.2),(-.06419,1.4708,-.2),(-.28062,1.44687,-.2),(-.44163,1.3751,-.2),(-.55332,1.2584,-.2),(-.61178,1.10289,-.04102),(-.62181,1.09971,-.2)])))]),
      Transform(DEF='dad_HullNumber3',
        children=[
        Shape(DEF='HullNumber3',
          appearance=Appearance(
            material=Material(DEF='main_mat',ambientIntensity=0.001,diffuseColor=(.001,.001,.001),shininess=0,specularColor=(.001,.001,.001))),
          geometry=IndexedFaceSet(coordIndex=[0,1,2,-1,0,2,3,-1,0,3,4,-1,0,4,5,-1,0,5,1,-1,1,6,7,-1,1,7,8,-1,1,8,2,-1,1,5,9,-1,1,9,6,-1,6,10,11,-1,6,11,7,-1,6,9,12,-1,6,12,10,-1,10,13,14,-1,10,14,11,-1,10,12,15,-1,10,15,13,-1,13,16,17,-1,13,17,14,-1,13,15,18,-1,13,18,16,-1,16,19,20,-1,16,20,17,-1,16,18,21,-1,16,21,19,-1,19,22,23,-1,19,23,20,-1,19,21,24,-1,19,24,22,-1,22,25,26,-1,22,26,23,-1,22,24,27,-1,22,27,25,-1,25,28,29,-1,25,29,30,-1,25,30,31,-1,25,31,26,-1,25,27,32,-1,25,32,28,-1,28,33,34,-1,28,34,29,-1,28,32,35,-1,28,35,33,-1,33,36,37,-1,33,37,38,-1,33,38,39,-1,33,39,34,-1,33,35,40,-1,33,40,36,-1,36,41,42,-1,36,42,37,-1,36,40,43,-1,36,43,41,-1,41,44,42,-1,41,43,45,-1,41,45,44,-1,44,46,42,-1,44,45,47,-1,44,47,46,-1,46,47,48,-1,46,48,42,-1,42,49,50,-1,42,50,37,-1,42,48,51,-1,42,51,49,-1,49,51,52,-1,49,52,50,-1,50,52,53,-1,50,53,37,-1,37,53,54,-1,37,54,38,-1,38,54,55,-1,38,55,39,-1,39,56,57,-1,39,57,34,-1,39,55,58,-1,39,58,56,-1,56,59,60,-1,56,60,61,-1,56,61,62,-1,56,62,63,-1,56,63,57,-1,56,58,64,-1,56,64,59,-1,59,65,66,-1,59,66,67,-1,59,67,60,-1,59,64,68,-1,59,68,65,-1,65,69,70,-1,65,70,71,-1,65,71,66,-1,65,68,72,-1,65,72,69,-1,69,73,74,-1,69,74,75,-1,69,75,70,-1,69,72,76,-1,69,76,73,-1,73,77,78,-1,73,78,74,-1,73,76,79,-1,73,79,77,-1,77,80,81,-1,77,81,78,-1,77,79,82,-1,77,82,80,-1,80,83,84,-1,80,84,81,-1,80,82,85,-1,80,85,83,-1,83,86,87,-1,83,87,84,-1,83,85,88,-1,83,88,86,-1,86,89,90,-1,86,90,91,-1,86,91,87,-1,86,88,92,-1,86,92,89,-1,89,92,93,-1,89,93,90,-1,90,94,95,-1,90,95,91,-1,90,93,96,-1,90,96,94,-1,94,96,97,-1,94,97,95,-1,95,97,98,-1,95,98,91,-1,91,98,99,-1,91,99,87,-1,87,99,100,-1,87,100,84,-1,84,100,101,-1,84,101,81,-1,81,101,102,-1,81,102,78,-1,78,102,103,-1,78,103,74,-1,74,103,104,-1,74,104,75,-1,75,104,105,-1,75,105,70,-1,70,105,106,-1,70,106,71,-1,71,106,107,-1,71,107,66,-1,66,107,108,-1,66,108,67,-1,67,108,109,-1,67,109,60,-1,60,109,110,-1,60,110,61,-1,61,110,111,-1,61,111,62,-1,62,111,112,-1,62,112,63,-1,63,112,113,-1,63,113,57,-1,57,113,114,-1,57,114,34,-1,34,114,115,-1,34,115,29,-1,29,115,116,-1,29,116,30,-1,30,116,117,-1,30,117,31,-1,31,117,118,-1,31,118,26,-1,26,118,119,-1,26,119,23,-1,23,119,120,-1,23,120,20,-1,20,120,121,-1,20,121,17,-1,17,121,122,-1,17,122,14,-1,14,122,123,-1,14,123,11,-1,11,123,124,-1,11,124,7,-1,7,124,125,-1,7,125,8,-1,8,126,2,-1,8,125,127,-1,8,127,126,-1,126,127,3,-1,126,3,2,-1,4,3,5,-1,5,124,9,-1,5,3,125,-1,5,125,124,-1,9,124,123,-1,9,123,12,-1,12,123,122,-1,12,122,15,-1,15,122,121,-1,15,121,18,-1,18,121,120,-1,18,120,21,-1,21,120,119,-1,21,119,24,-1,24,119,118,-1,24,118,27,-1,27,116,115,-1,27,115,32,-1,27,118,117,-1,27,117,116,-1,32,115,114,-1,32,114,35,-1,35,54,53,-1,35,53,40,-1,35,114,55,-1,35,55,54,-1,40,53,48,-1,40,48,43,-1,43,48,45,-1,45,48,47,-1,48,52,51,-1,48,53,52,-1,55,114,113,-1,55,113,58,-1,58,110,109,-1,58,109,64,-1,58,112,111,-1,58,111,110,-1,58,113,112,-1,64,108,107,-1,64,107,68,-1,64,109,108,-1,68,106,105,-1,68,105,72,-1,68,107,106,-1,72,104,103,-1,72,103,76,-1,72,105,104,-1,76,103,102,-1,76,102,79,-1,79,102,101,-1,79,101,82,-1,82,101,100,-1,82,100,85,-1,85,100,99,-1,85,99,88,-1,88,93,92,-1,88,99,98,-1,88,98,93,-1,93,98,97,-1,93,97,96,-1,125,3,127,-1],creaseAngle=0.524,
            coord=Coordinate(point=[(-.09045,1.02076,-.08798),(-.06774,1.11122,-.08798),(-.27843,1.05445,-.08798),(-.28846,1.05127,-.24696),(-.10047,1.01758,-.24696),(-.07776,1.10803,-.24696),(-.03088,1.16969,-.08798),(-.28625,1.36353,-.08798),(-.39794,1.24684,-.08798),(-.0409,1.1665,-.24696),(.01966,1.20155,-.08798),(-.12524,1.43531,-.08798),(.00964,1.19836,-.24696),(.08338,1.21217,-.08798),(.09119,1.45924,-.08798),(.07336,1.20898,-.24696),(.14442,1.2024,-.08798),(.33265,1.43312,-.08798),(.13439,1.19922,-.24696),(.1908,1.17311,-.08798),(.49647,1.35475,-.08798),(.18078,1.16992,-.24696),(.2201,1.12745,-.08798),(.59022,1.23683,-.08798),(.21008,1.12427,-.24696),(.22987,1.06861,-.08798),(.62147,1.09205,-.08798),(.21984,1.06543,-.24696),(.21681,1.00489,-.08798),(.50697,.85352,-.08798),(.57069,.92408,-.08798),(.60877,1.00367,-.08798),(.20678,1.00171,-.24696),(.17762,.95045,-.08798),(.41737,.79225,-.08798),(.1676,.94727,-.24696),(.11891,.91309,-.08798),(.10389,.64479,-.08798),(.18263,.63111,-.08798),(.24305,.5901,-.08798),(.10888,.90991,-.24696),(.04725,.90064,-.08798),(-.01476,.76344,-.08798),(.03723,.89746,-.24696),(.02503,.90187,-.08798),(.01501,.89868,-.24696),(-.00451,.90553,-.08798),(-.01453,.90234,-.24696),(-.02478,.76025,-.24696),(-.02502,.62135,-.08798),(.04823,.63893,-.08798),(-.03504,.61816,-.24696),(.0382,.63574,-.24696),(.09387,.6416,-.24696),(.1726,.62793,-.24696),(.23303,.58691,-.24696),(.2815,.52418,-.08798),(.49061,.77003,-.08798),(.27148,.521,-.24696),(.29432,.4358,-.08798),(.68482,.54994,-.08798),(.65516,.62867,-.08798),(.60767,.69349,-.08798),(.54432,.74439,-.08798),(.2843,.43262,-.24696),(.28101,.34791,-.08798),(.67835,.33485,-.08798),(.69471,.45729,-.08798),(.27099,.34473,-.24696),(.2411,.27955,-.08798),(.54945,.11598,-.08798),(.62928,.21754,-.08798),(.23108,.27637,-.24696),(.18116,.23561,-.08798),(.29847,-.00573,-.08798),(.4408,.04078,-.08798),(.17114,.23242,-.24696),(.1078,.22096,-.08798),(.11756,-.02123,-.08798),(.09777,.21777,-.24696),(.03834,.23255,-.08798),(-.05712,-.00976,-.08798),(.02832,.22937,-.24696),(-.01769,.26734,-.08798),(-.19054,.02467,-.08798),(-.02771,.26416,-.24696),(-.06054,.33216,-.08798),(-.29333,.08119,-.08798),(-.07056,.32898,-.24696),(-.09045,.43385,-.08798),(-.28918,.40748,-.08798),(-.37609,.15895,-.08798),(-.10047,.43066,-.24696),(-.2992,.4043,-.24696),(-.48791,.38111,-.08798),(-.44042,.25868,-.08798),(-.49793,.37793,-.24696),(-.45044,.25549,-.24696),(-.38611,.15576,-.24696),(-.30335,.078,-.24696),(-.20057,.02148,-.24696),(-.06714,-.01294,-.24696),(.10754,-.02441,-.24696),(.28845,-.00891,-.24696),(.43078,.0376,-.24696),(.53943,.11279,-.24696),(.61926,.21435,-.24696),(.66833,.33166,-.24696),(.68469,.4541,-.24696),(.6748,.54675,-.24696),(.64514,.62549,-.24696),(.59765,.69031,-.24696),(.5343,.74121,-.24696),(.48059,.76685,-.24696),(.40734,.78906,-.24696),(.49694,.85034,-.24696),(.56066,.9209,-.24696),(.59875,1.00049,-.24696),(.61145,1.08887,-.24696),(.5802,1.23364,-.24696),(.48645,1.35156,-.24696),(.32263,1.42993,-.24696),(.08117,1.45605,-.24696),(-.13526,1.43213,-.24696),(-.29627,1.36035,-.24696),(-.40796,1.24365,-.24696),(-.46642,1.08814,-.08798),(-.47645,1.08496,-.24696)])))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful for Three.py")
