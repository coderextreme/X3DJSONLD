###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_713',geoSystem=['GDC'],position=(1.3432389488699097,103.97763792148352,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.3432389488699097,103.97763792148352,0.0),range=4101.627,child1Url=['../../tiles/5/singapore14-26.x3d'],child2Url=['../../tiles/5/singapore14-27.x3d'],child3Url=['../../tiles/5/singapore15-26.x3d'],child4Url=['../../tiles/5/singapore15-27.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore7-13.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.3345072364919157,103.9632748873545,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[11,11,11,10,11,10,9,10,11,10,10,10,10,9,11,11,14,12,9,10,11,11,11,10,9,8,6,4,2,4,7,5,6,7,9,6,7,11,12,11,11,11,12,10,9,10,10,10,11,11,10,10,9,14,14,9,9,12,12,12,9,6,8,7,4,3,5,7,4,5,7,9,7,8,11,12,12,12,12,12,10,9,10,10,10,11,12,11,9,9,14,15,10,9,12,13,13,8,5,6,6,5,4,6,7,4,5,6,8,8,8,11,13,12,12,12,11,10,9,9,9,10,10,11,12,10,9,14,16,11,10,13,14,14,7,5,4,4,5,6,6,7,4,6,6,7,8,7,11,13,13,13,12,11,10,9,8,8,9,10,11,13,10,10,13,16,12,12,13,15,14,8,6,4,3,6,7,7,6,5,6,6,7,8,7,11,13,15,15,12,11,11,9,8,7,8,10,11,12,9,9,12,14,14,14,13,14,14,10,7,6,5,6,6,6,6,6,6,5,6,8,7,12,13,15,15,12,11,11,9,7,7,8,11,12,11,8,8,11,12,14,15,13,12,14,11,8,7,6,6,6,6,6,7,6,5,6,9,8,13,12,13,15,10,9,11,9,7,8,10,11,12,11,8,8,9,9,12,13,12,11,13,11,7,7,8,7,5,5,6,6,6,6,6,9,9,13,12,12,14,9,9,10,10,7,9,11,11,12,11,8,6,5,5,9,12,11,10,12,9,6,8,8,7,5,5,5,6,6,7,6,8,9,14,12,12,13,10,9,10,10,8,9,10,11,12,12,8,4,1,1,4,9,10,10,11,8,6,7,7,8,7,5,4,6,7,6,5,7,8,14,13,13,13,11,10,10,11,10,9,9,11,12,12,8,3,-1,-1,2,8,9,9,10,7,6,7,7,8,8,5,4,6,7,6,5,7,8,14,14,14,13,12,11,12,12,10,9,9,11,11,11,7,2,-2,-1,3,8,7,8,9,7,6,6,7,9,8,5,4,6,7,6,5,6,8,15,15,14,14,13,12,13,12,10,9,10,11,11,10,6,2,-2,0,5,7,6,7,8,7,6,6,9,10,7,5,5,6,7,7,5,5,8,16,15,14,13,12,13,13,12,10,10,11,11,11,10,7,5,0,1,6,5,5,7,8,7,6,8,10,11,7,6,6,6,6,6,5,5,7,16,15,14,13,12,13,13,12,11,12,12,11,10,9,8,7,2,3,6,4,5,7,8,6,7,9,12,12,6,6,7,6,6,6,5,5,6,16,15,15,13,12,12,12,12,12,13,12,10,9,7,6,8,4,5,6,4,5,8,8,6,6,10,14,12,6,6,6,5,5,5,5,5,6,14,15,16,14,13,12,12,12,12,14,12,9,7,5,4,7,6,6,7,5,5,8,9,6,6,11,14,11,6,7,6,5,5,5,6,5,5,12,13,16,14,14,13,13,12,14,14,12,8,6,5,4,6,6,6,7,6,6,9,9,7,7,12,12,9,6,7,6,5,5,6,6,5,5,12,11,15,13,14,15,14,13,15,14,11,7,6,5,4,6,5,5,8,6,5,8,9,7,8,11,10,6,6,7,6,5,5,6,6,5,5,15,11,13,12,14,16,15,15,14,13,10,8,7,6,5,6,5,5,7,5,4,7,8,7,8,9,7,6,6,7,7,6,5,7,6,5,6,19,13,13,12,14,18,16,16,15,12,10,9,8,6,6,7,5,5,6,4,3,6,7,6,7,6,5,5,7,7,7,7,6,7,7,6,7,20,15,14,16,17,21,18,15,16,14,11,10,9,7,7,8,6,5,7,4,1,4,6,6,7,6,4,4,7,7,7,7,6,7,8,6,7,19,17,17,21,22,23,18,13,16,16,12,12,11,7,7,9,7,6,8,5,0,2,6,7,8,6,4,4,6,7,7,8,7,7,8,6,6,19,19,20,23,24,21,15,11,14,14,11,12,11,7,7,8,8,6,8,6,1,3,6,7,8,6,4,5,5,6,7,8,7,7,9,6,7,20,21,22,24,25,16,12,11,11,11,10,11,10,7,6,7,9,7,7,6,3,4,7,7,8,6,5,6,4,4,8,8,8,7,9,8,8,20,23,24,25,24,14,10,10,10,9,9,10,10,7,6,7,8,8,7,6,5,5,7,7,7,6,6,8,7,4,8,9,8,8,9,9,9,21,25,26,26,22,13,9,9,10,9,8,9,9,7,6,7,8,10,8,6,6,6,7,8,7,6,7,10,11,6,7,8,9,8,8,10,9,22,27,29,27,20,12,10,10,10,9,8,9,9,7,6,7,7,9,7,6,7,7,7,8,7,6,7,10,11,5,4,8,11,9,8,9,9,23,30,32,27,16,13,14,13,11,9,8,9,10,7,6,8,7,7,5,5,8,9,8,7,8,7,7,9,9,4,0,8,13,10,8,7,8,24,31,32,25,15,14,16,15,12,10,8,10,11,8,6,7,8,6,5,5,9,11,8,8,10,9,9,9,7,4,0,9,15,11,8,6,8,25,30,30,23,16,16,17,16,12,11,9,12,13,9,5,7,9,8,6,6,8,10,8,9,13,12,12,11,8,6,2,11,16,12,8,5,6,27,28,27,19,17,18,18,17,14,13,10,12,14,10,6,7,7,8,7,7,8,9,8,10,15,13,14,14,9,8,6,13,17,12,9,4,5,28,24,23,16,18,20,19,18,17,16,12,11,12,10,7,6,4,5,6,7,7,8,8,10,13,14,15,16,12,9,11,17,19,13,9,4,4,27,21,21,15,19,22,20,19,20,19,14,11,11,10,8,6,5,5,5,7,8,7,8,9,12,14,17,18,15,11,14,20,21,15,8,4,3,25,21,19,18,20,22,21,21,23,23,16,12,12,10,9,8,8,7,5,7,9,8,7,7,10,14,19,20,17,11,13,22,26,19,7,5,5,23,20,19,21,20,23,22,23,25,25,17,13,13,9,9,10,10,8,5,8,10,9,6,5,8,14,19,18,17,11,13,22,29,21,7,5,6,20,21,20,22,22,23,23,24,26,24,16,13,14,9,7,9,9,7,6,9,12,10,5,3,7,13,14,11,13,10,13,21,30,21,10,8,9,19,21,21,24,24,24,25,24,25,22,17,13,13,8,7,9,8,7,7,9,12,10,4,3,7,12,12,9,12,11,13,19,29,22,11,9,10,19,22,23,27,27,27,27,23,23,20,18,11,11,8,8,10,8,8,8,8,9,9,5,3,7,11,14,12,15,15,14,18,24,22,10,9,7,20,22,24,29,29,29,28,23,21,19,18,10,10,8,10,10,8,9,10,8,7,7,4,3,7,10,15,15,16,16,14,16,21,21,10,9,6,21,21,25,29,28,29,28,23,20,19,16,11,11,10,12,12,8,8,10,9,7,6,1,1,7,10,14,14,14,13,14,15,19,18,10,10,7,22,23,27,28,28,28,28,24,21,19,16,12,12,12,13,13,9,8,10,10,8,5,0,0,6,9,13,14,12,10,14,15,17,15,10,11,8,23,27,29,28,27,28,29,25,22,20,17,13,12,12,12,14,11,8,10,11,9,4,0,-2,4,8,10,12,11,10,14,14,13,14,11,10,10,24,30,31,29,27,28,29,26,23,20,18,14,12,13,12,15,12,9,10,11,9,4,0,-2,3,8,8,10,9,10,14,15,12,14,12,10,10],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
