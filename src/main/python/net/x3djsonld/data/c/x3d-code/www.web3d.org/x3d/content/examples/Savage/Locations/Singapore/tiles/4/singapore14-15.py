###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_1415',geoSystem=['GDC'],position=(1.4654829221618253,104.0350900579996,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.4654829221618253,104.0350900579996,0.0),range=4101.627,child1Url=['../../tiles/5/singapore28-30.x3d'],child2Url=['../../tiles/5/singapore28-31.x3d'],child3Url=['../../tiles/5/singapore29-30.x3d'],child4Url=['../../tiles/5/singapore29-31.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore14-15.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.4567512097838313,104.02072702387058,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=36,xSpacing=8.207448E-4,zDimension=44,zSpacing=4.0612617E-4,height=[7,6,6,6,6,6,0,-3,-4,-5,-5,-6,-6,-7,-7,-3,0,0,0,0,0,3,3,1,0,0,1,2,4,5,6,12,14,12,7,8,6,6,6,6,6,6,0,-3,-4,-5,-5,-6,-6,-7,-7,-6,-2,0,0,0,0,1,3,2,0,0,1,1,4,7,10,14,14,10,7,8,6,6,6,6,6,6,0,-3,-4,-4,-5,-5,-6,-6,-7,-7,-4,0,0,0,0,0,3,3,1,0,1,1,4,10,15,16,14,9,7,8,6,6,6,6,6,6,0,-2,-4,-4,-5,-5,-6,-6,-7,-7,-6,-2,0,0,0,0,1,3,2,0,1,1,4,12,15,14,11,8,7,8,6,6,6,6,6,6,0,-2,-3,-4,-4,-5,-5,-6,-6,-7,-6,-4,0,0,0,0,0,3,3,1,0,1,4,14,15,11,8,7,7,8,6,6,6,6,6,6,1,-2,-3,-4,-4,-5,-5,-6,-6,-7,-7,-5,-2,0,0,0,0,1,3,2,0,2,6,13,13,9,7,7,7,8,6,6,6,6,6,6,1,-2,-3,-3,-4,-4,-5,-5,-6,-6,-7,-6,-4,0,0,0,0,0,3,4,2,2,10,13,11,8,7,7,7,7,6,6,6,6,6,6,1,-1,-3,-3,-4,-4,-5,-5,-6,-6,-7,-7,-5,-2,0,0,0,0,1,4,3,4,10,11,10,8,7,7,7,7,6,6,6,6,6,6,1,-1,-3,-3,-3,-4,-4,-5,-5,-6,-6,-7,-6,-4,0,0,0,0,0,2,4,7,10,9,9,8,9,7,7,7,6,6,6,6,6,6,1,-1,-2,-3,-3,-4,-4,-5,-5,-6,-6,-7,-7,-6,-2,0,0,0,0,2,5,8,11,8,8,8,9,8,7,7,6,6,6,6,6,6,1,-1,-2,-2,-3,-3,-4,-4,-5,-5,-6,-6,-7,-6,-4,0,0,0,0,1,6,10,11,8,8,7,8,8,7,7,6,6,6,6,6,6,1,0,-2,-2,-3,-3,-4,-4,-5,-5,-6,-6,-7,-7,-6,-2,0,0,0,1,7,11,12,9,7,7,8,9,8,8,6,6,6,6,6,6,1,0,-2,-2,-2,-3,-3,-4,-4,-5,-5,-6,-6,-7,-6,-4,0,0,0,2,8,12,13,10,7,7,10,10,10,7,6,6,6,6,6,6,1,0,-1,-2,-2,-3,-3,-4,-4,-5,-5,-6,-6,-7,-7,-5,-2,0,0,2,11,15,14,10,7,7,10,11,10,7,6,6,6,6,6,6,2,0,-1,-2,-2,-2,-3,-3,-4,-4,-5,-5,-6,-6,-7,-6,-3,0,0,5,14,17,16,10,6,7,10,10,10,7,6,6,6,6,6,6,2,0,-1,-1,-2,-2,-3,-3,-4,-4,-5,-5,-5,-6,-6,-7,-5,0,1,7,18,20,15,10,6,7,10,10,10,7,6,6,6,6,6,6,2,0,-1,-1,-2,-2,-2,-3,-3,-4,-4,-4,-5,-5,-6,-6,-5,-2,2,10,21,21,15,9,7,8,10,10,10,7,6,6,6,6,6,6,2,0,-1,-1,-1,-2,-2,-3,-3,-4,-4,-4,-4,-5,-5,-5,-6,-4,2,12,22,22,16,11,8,9,10,11,10,7,6,6,6,6,6,6,2,0,-1,-1,-1,-2,-2,-2,-3,-3,-3,-3,-3,-4,-4,-4,-5,-4,0,13,22,22,18,15,11,10,10,10,10,8,6,6,6,6,6,6,2,0,-1,-1,-1,-1,-2,-2,-3,-3,-3,-3,-3,-3,-4,-4,-4,-4,0,12,20,22,20,20,15,12,11,10,11,9,6,6,6,6,6,6,2,0,-1,-1,-1,-1,-2,-2,-2,-2,-2,-2,-2,-2,-3,-3,-3,-2,1,10,17,22,23,25,20,15,12,11,12,10,6,6,6,6,6,6,2,0,-1,-1,-1,-1,-1,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-1,1,7,14,21,25,30,26,18,13,13,13,11,6,6,6,6,6,6,2,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,3,10,19,27,35,32,22,15,14,14,11,6,6,6,6,6,6,2,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,-1,1,7,16,25,35,35,26,18,16,15,12,6,6,6,6,6,6,2,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,2,6,11,18,27,32,30,23,18,16,13,6,6,6,6,6,6,2,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,3,6,8,12,20,27,30,27,21,17,14,6,6,6,6,6,6,1,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,4,6,5,8,15,19,27,28,25,19,14,6,6,6,6,6,5,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,2,5,5,4,6,12,13,23,28,28,20,15,6,6,6,6,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,4,5,4,3,6,11,13,17,23,26,21,17,6,6,6,6,5,0,-3,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,2,5,5,3,3,7,11,13,12,17,22,22,19,6,6,6,6,2,-1,-3,-3,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,4,5,4,3,4,9,11,10,8,12,17,20,18,6,6,6,5,0,-3,-3,-4,-3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,3,5,5,3,2,5,10,12,7,4,8,12,17,17,6,6,6,2,-1,-3,-4,-5,-4,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,4,5,4,2,2,7,11,10,5,4,6,9,14,16,6,6,5,0,-3,-3,-4,-5,-5,-3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,3,5,5,3,2,4,9,12,7,4,4,6,7,10,15,6,6,2,-1,-3,-4,-5,-5,-5,-4,-2,-1,-1,-1,-1,-1,-1,-1,-1,0,1,4,5,4,2,2,6,11,10,5,4,5,5,5,9,13,6,5,0,-3,-3,-4,-5,-5,-6,-6,-2,-1,-1,-1,-1,-1,-1,-1,-1,0,3,5,5,3,2,3,8,12,7,3,4,5,3,4,7,12,6,2,-1,-3,-4,-5,-5,-5,-6,-6,-2,-1,-1,-1,-1,-1,-1,-1,0,1,4,5,4,2,2,5,10,10,5,3,4,3,1,2,6,11,5,0,-3,-3,-4,-5,-5,-6,-6,-7,-2,-1,-1,-1,-1,-1,-1,-1,0,3,5,5,3,2,3,8,12,7,3,4,4,1,0,0,5,10,3,-1,-3,-4,-5,-5,-6,-6,-6,-7,-2,-1,-1,-1,-1,-1,-1,0,1,4,5,4,2,2,5,10,10,5,3,4,2,0,0,0,6,9,0,-3,-3,-4,-5,-5,-6,-6,-7,-7,-2,-1,-1,-1,-1,-1,-1,0,3,5,5,3,2,3,8,12,7,4,4,4,0,0,-1,2,7,9,0,-3,-4,-5,-5,-5,-6,-6,-7,-7,-2,-1,-1,-1,-1,-1,0,1,4,5,4,2,2,5,10,10,5,4,4,2,0,0,0,1,5,7,-3,-3,-4,-5,-5,-6,-6,-7,-7,-7,-2,-1,-1,-1,-1,-1,0,3,5,5,3,2,3,8,12,7,3,4,4,0,0,-1,0,1,2,7,-3,-4,-5,-5,-6,-6,-6,-7,-7,-7,-2,-1,-1,-1,-1,0,1,4,5,4,2,2,5,10,10,5,3,4,2,0,-1,-1,0,0,0,4,-3,-4,-5,-5,-6,-6,-7,-7,-7,-7,-2,-1,-1,-1,-1,0,3,5,5,3,2,3,9,12,7,3,4,3,0,0,-1,0,0,0,0,2],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
