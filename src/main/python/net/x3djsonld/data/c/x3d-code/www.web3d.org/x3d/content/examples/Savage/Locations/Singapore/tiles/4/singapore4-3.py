###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_43',geoSystem=['GDC'],position=(1.2908486746019459,103.69037723890314,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.2908486746019459,103.69037723890314,0.0),range=4101.627,child1Url=['../../tiles/5/singapore8-6.x3d'],child2Url=['../../tiles/5/singapore8-7.x3d'],child3Url=['../../tiles/5/singapore9-6.x3d'],child4Url=['../../tiles/5/singapore9-7.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore4-3.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.2821169622239519,103.67601420477412,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[9,5,0,0,1,4,4,10,12,11,8,11,14,13,13,12,8,11,15,14,15,17,16,8,3,6,9,9,7,11,10,10,10,10,8,9,11,7,3,0,0,1,4,5,9,11,12,10,11,14,11,11,10,9,11,14,14,15,16,11,5,3,6,8,10,8,10,9,9,9,10,9,9,10,5,2,1,0,1,4,6,8,10,13,12,11,13,10,9,9,10,11,12,13,14,14,7,2,3,5,7,10,9,9,7,9,8,11,10,9,9,4,2,2,1,2,5,6,7,8,13,14,11,10,9,11,10,10,12,13,13,15,12,4,2,3,4,5,6,8,7,6,9,9,11,10,8,7,4,2,2,1,3,6,7,7,6,11,15,12,8,8,12,12,10,13,14,14,15,10,2,2,3,3,3,2,4,4,6,9,9,11,10,6,4,4,2,2,2,3,6,7,7,3,6,11,10,7,6,10,12,13,15,16,17,16,11,4,2,3,3,1,-1,-2,-1,3,8,9,10,10,4,1,4,2,2,2,4,7,8,8,1,1,6,8,6,5,8,12,15,17,19,19,17,13,6,2,3,2,0,-5,-10,-8,0,7,9,10,9,2,0,4,2,2,2,5,7,8,6,2,1,5,7,5,4,6,10,15,17,20,20,17,13,7,2,3,1,-3,-11,-16,-14,-5,3,8,9,8,1,-1,4,2,2,2,5,7,8,4,3,2,5,5,3,4,5,8,14,16,19,21,16,13,8,3,2,0,-8,-17,-20,-20,-12,0,7,8,6,0,0,4,2,2,3,6,7,5,1,0,2,7,5,3,5,5,8,12,11,14,16,13,11,7,4,1,-4,-14,-19,-22,-20,-14,-6,3,7,3,0,0,4,2,2,4,7,8,2,0,-4,1,8,4,3,7,5,9,11,7,7,9,9,9,7,5,0,-10,-18,-21,-21,-19,-17,-12,-1,6,1,0,0,4,2,3,6,7,5,0,-2,-4,2,8,7,7,8,5,9,9,6,4,5,7,8,7,7,1,-12,-20,-22,-21,-19,-17,-14,-5,5,1,0,0,4,2,4,7,8,2,-2,-5,-3,2,8,10,12,10,7,9,8,8,3,2,5,7,8,9,3,-13,-21,-21,-20,-19,-17,-15,-11,4,1,0,0,7,6,7,7,5,0,-4,-5,-1,4,8,12,13,13,10,8,7,8,5,3,6,7,9,11,5,-10,-22,-21,-20,-19,-17,-15,-8,4,3,1,1,10,11,10,8,2,-2,-6,-4,0,6,8,13,14,17,14,7,7,8,7,6,7,8,10,11,8,-6,-21,-21,-20,-19,-17,-14,-3,4,5,2,2,12,13,13,10,1,-4,-6,-2,2,7,8,13,13,17,15,8,6,8,8,8,7,9,11,12,10,-1,-16,-19,-20,-18,-16,-10,0,4,5,4,3,12,14,15,13,2,-5,-5,0,6,8,10,13,12,16,14,8,6,7,10,9,8,10,11,12,10,4,-8,-17,-20,-18,-15,-6,1,4,5,5,4,12,14,15,14,4,-4,-3,2,7,9,12,19,14,14,13,8,6,8,9,9,8,10,11,11,9,5,-3,-11,-16,-17,-11,-3,1,3,4,5,4,13,14,16,15,7,-2,-1,6,9,10,16,26,17,13,11,7,7,8,9,9,9,10,12,9,8,5,0,-3,-12,-16,-8,0,0,1,3,5,4,13,14,16,16,10,0,2,8,10,13,21,28,19,12,9,6,6,8,8,8,8,9,9,7,6,3,1,0,-7,-12,-5,0,0,0,1,3,3,13,15,16,16,13,6,6,9,10,16,27,27,18,11,7,3,5,6,6,6,6,7,6,5,4,2,2,1,-2,-7,-3,-2,-2,-1,-1,0,1,13,15,16,16,14,9,9,10,13,22,30,26,17,10,6,2,4,6,6,5,5,5,3,3,2,2,2,1,0,-4,-4,-4,-4,-5,-5,-5,-3,13,15,15,15,14,11,10,10,17,27,30,23,14,8,5,3,3,5,5,5,5,4,1,2,2,2,2,2,1,-3,-6,-7,-7,-8,-9,-12,-11,14,16,15,14,13,11,10,13,22,30,29,20,11,6,4,3,3,4,5,6,7,5,1,2,2,2,2,2,1,-3,-8,-9,-10,-11,-13,-16,-14,15,14,14,13,12,10,10,17,27,31,25,15,8,5,3,3,3,4,5,8,10,8,3,2,3,3,3,2,1,-5,-11,-11,-13,-14,-16,-16,-13,14,14,13,12,11,7,8,16,27,29,21,11,6,4,3,3,3,3,7,11,13,11,5,3,4,4,3,3,1,-4,-13,-13,-15,-15,-17,-14,-11,12,13,12,11,9,4,4,11,21,23,16,8,5,3,3,3,3,3,8,14,16,13,6,5,5,5,4,4,2,-3,-15,-15,-16,-17,-17,-12,-9,11,12,11,10,7,3,1,6,15,19,14,8,6,4,3,3,3,4,10,16,17,13,8,7,6,5,5,4,4,0,-13,-16,-17,-18,-15,-9,-6,11,11,11,8,5,2,0,2,10,17,16,11,8,6,5,5,5,5,11,18,17,13,9,8,7,6,5,6,7,4,-9,-17,-18,-17,-13,-6,-4,11,11,9,6,4,2,0,0,7,16,18,14,11,9,8,7,7,7,12,18,16,12,9,8,8,7,6,7,10,9,-4,-17,-18,-16,-10,-4,-1,10,10,7,5,4,2,0,0,6,16,18,15,13,12,11,9,8,7,11,16,16,12,9,8,8,7,8,9,11,11,1,-17,-17,-14,-7,-1,0,9,7,4,4,4,3,0,0,6,16,18,16,15,14,13,11,9,7,9,12,13,11,10,10,9,9,9,11,12,14,16,2,5,4,4,0,1,8,1,1,4,5,3,0,1,6,14,18,16,15,14,13,11,9,7,7,7,7,8,11,13,13,13,13,13,13,18,42,54,60,48,29,4,1,7,-2,0,6,7,3,0,3,6,12,17,17,15,14,14,12,9,7,5,3,2,5,14,19,18,17,15,14,13,25,65,97,107,89,60,24,17,6,-2,-2,8,8,2,2,5,6,12,16,18,14,14,14,12,9,7,4,2,1,5,17,24,22,20,17,14,16,37,78,109,120,112,95,71,57,6,0,-2,9,7,1,4,7,7,12,15,17,13,13,14,12,9,6,4,1,1,6,19,28,26,22,17,14,19,47,87,112,123,124,121,112,95,5,1,1,6,5,1,8,8,7,15,16,15,10,10,11,9,9,7,4,1,2,8,19,28,28,23,17,14,22,52,90,115,125,128,128,123,113,5,2,5,4,2,2,10,8,7,16,19,13,7,8,8,7,8,7,3,1,4,10,18,25,28,23,17,14,24,54,92,118,127,128,128,125,122,9,4,5,3,2,3,9,7,7,14,23,13,5,7,8,9,9,5,2,3,8,13,15,21,27,24,15,14,22,54,95,121,127,128,127,125,124,13,6,4,3,3,4,7,6,7,12,25,13,3,7,9,10,8,4,2,5,12,14,13,17,25,25,14,15,18,52,100,125,128,128,125,123,122,16,7,3,3,3,5,7,6,6,10,18,9,4,6,6,8,7,4,4,9,14,12,10,13,21,24,17,16,14,44,110,127,128,127,125,121,112,18,8,3,3,4,6,7,6,4,9,10,5,6,6,3,5,7,5,5,12,14,10,8,10,17,23,20,16,10,37,118,127,128,125,124,116,99,16,9,5,5,5,7,10,8,4,9,8,5,6,5,3,5,7,6,6,11,12,8,7,8,13,18,17,13,9,36,103,124,128,124,122,102,83,14,9,7,7,7,9,13,10,3,9,9,7,7,5,4,6,8,6,6,8,9,8,6,6,10,14,12,8,10,35,79,117,127,123,117,85,67],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
