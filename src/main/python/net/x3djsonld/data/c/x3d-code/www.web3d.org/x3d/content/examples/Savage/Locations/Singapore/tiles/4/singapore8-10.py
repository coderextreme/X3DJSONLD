###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_810',geoSystem=['GDC'],position=(1.3607023736258976,103.8914597167094,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.3607023736258976,103.8914597167094,0.0),range=4101.627,child1Url=['../../tiles/5/singapore16-20.x3d'],child2Url=['../../tiles/5/singapore16-21.x3d'],child3Url=['../../tiles/5/singapore17-20.x3d'],child4Url=['../../tiles/5/singapore17-21.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore8-10.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.3519706612479037,103.87709668258039,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[23,23,26,27,23,22,23,25,26,25,20,23,20,22,26,24,24,22,21,21,18,17,17,18,18,18,16,16,16,19,23,33,24,15,13,14,15,24,22,23,24,22,20,22,23,22,22,19,22,18,19,22,22,22,21,22,20,17,17,17,18,18,18,17,17,17,19,22,28,25,16,12,15,16,26,23,22,23,21,20,21,22,20,20,19,20,17,17,20,20,20,20,21,19,17,17,17,18,18,18,18,18,18,20,21,23,24,16,11,15,16,28,25,24,25,23,23,23,23,20,19,17,18,17,16,19,20,19,19,20,19,16,16,17,18,18,18,18,18,20,20,19,20,20,14,13,14,14,30,27,26,27,25,25,26,25,22,19,17,18,18,16,18,20,19,17,18,18,16,16,16,18,17,17,19,18,20,21,18,18,18,13,13,12,12,32,29,28,28,27,27,28,28,25,22,19,18,18,16,18,21,19,17,17,17,15,15,15,16,15,16,18,17,20,20,18,18,16,14,13,11,10,33,31,29,29,29,29,29,30,28,25,21,19,18,17,18,22,19,17,16,15,14,14,13,14,13,15,17,17,19,19,18,18,16,14,13,9,9,34,32,30,29,30,30,30,30,29,27,22,20,19,17,17,20,18,16,15,14,14,13,12,12,12,14,16,17,18,19,18,17,16,13,11,9,10,34,33,30,29,30,31,30,30,30,28,23,21,20,18,17,19,16,15,13,13,14,12,12,12,12,13,15,16,17,18,17,16,15,12,10,10,11,33,33,30,29,29,30,29,29,31,29,24,21,21,18,17,18,16,15,14,13,14,12,12,12,12,13,13,13,15,17,15,15,15,12,10,11,12,32,33,30,28,28,29,29,29,31,30,24,22,22,19,18,17,16,16,15,13,14,13,12,12,12,12,12,10,13,15,13,13,14,13,11,12,13,31,32,30,28,27,28,29,29,30,29,24,22,22,19,18,17,15,16,14,12,14,12,12,12,12,11,11,9,10,11,10,10,14,15,14,14,14,30,31,30,27,26,28,29,29,28,26,24,22,22,20,18,16,15,16,13,11,13,12,11,11,11,11,10,8,9,8,8,8,12,18,17,15,15,29,29,29,27,25,26,27,26,25,24,23,20,20,19,19,15,15,16,14,11,12,11,10,11,10,9,9,8,8,7,7,7,10,16,16,15,15,28,28,28,27,25,25,25,23,22,22,21,18,18,19,19,15,16,16,15,12,11,10,10,10,9,8,8,8,7,8,8,7,9,13,15,15,14,27,26,25,25,23,22,23,21,20,20,19,16,17,19,18,14,15,15,16,12,10,9,9,9,9,8,8,8,7,8,9,8,9,13,15,14,14,27,25,22,22,20,19,20,20,20,18,17,15,16,17,17,14,15,15,15,11,10,8,8,8,8,9,8,9,7,8,9,8,9,13,16,14,13,25,24,21,20,18,17,18,18,18,16,15,14,14,16,15,13,14,14,15,11,10,7,7,7,8,8,8,9,7,8,8,8,9,12,14,14,14,24,23,20,18,17,16,16,16,15,12,12,12,12,14,14,13,13,13,14,12,10,7,7,7,7,8,9,9,8,8,7,8,8,10,12,13,14,23,23,21,18,17,16,15,15,13,11,10,11,12,12,13,12,12,11,12,12,10,7,7,7,7,8,8,10,8,9,7,7,8,8,10,12,13,24,24,22,21,19,16,15,14,12,10,10,11,12,12,13,12,12,11,10,11,9,7,7,9,8,7,8,9,8,8,8,7,7,7,8,10,12,26,26,24,24,22,18,16,14,13,11,11,12,12,13,13,12,13,11,10,10,9,7,8,9,9,7,8,9,7,8,8,7,7,6,7,10,12,28,29,28,27,24,20,17,15,15,14,13,13,13,14,14,14,16,13,10,10,8,7,7,8,9,8,8,8,6,8,8,7,7,7,8,11,13,29,29,29,29,25,21,18,17,18,17,15,14,15,16,15,15,17,15,12,9,8,8,7,8,9,8,9,7,6,8,7,8,7,7,8,12,15,27,28,29,28,24,21,18,19,20,19,17,15,17,17,16,16,18,16,14,10,9,9,8,9,8,8,9,7,7,8,7,9,9,7,9,13,16,27,27,28,27,23,19,18,20,22,21,18,17,18,17,16,17,18,18,15,10,10,9,8,9,8,8,8,7,7,7,6,9,9,7,9,13,15,27,26,26,25,22,17,16,20,23,21,19,19,19,15,15,17,19,20,15,11,10,8,7,8,7,8,7,6,6,6,5,6,8,7,8,11,13,27,25,24,24,21,17,17,20,23,21,20,20,19,15,15,17,19,21,15,12,11,9,7,8,7,8,8,6,6,6,5,5,8,7,7,10,12,28,26,24,23,21,18,19,21,22,21,21,21,18,16,15,15,17,20,16,14,13,12,8,8,8,9,10,9,7,6,5,5,6,7,8,11,12,28,26,24,23,21,20,22,22,22,20,20,20,18,16,15,14,16,19,16,14,14,14,11,9,9,9,12,11,9,7,5,5,6,6,8,11,12,27,26,25,24,23,22,22,21,21,19,18,18,18,16,14,16,16,17,16,14,13,15,14,13,12,10,11,13,12,9,5,6,7,7,9,10,12,26,26,25,24,23,23,22,20,20,18,17,17,18,16,14,17,17,17,16,14,13,15,16,15,13,11,10,14,14,10,6,8,7,8,9,10,12,25,25,23,22,22,22,20,19,20,19,17,16,17,17,16,18,18,16,16,15,14,15,15,14,14,13,11,12,12,9,7,8,7,8,8,9,11,24,23,21,20,20,20,19,17,18,19,17,16,17,17,16,18,18,15,16,16,15,15,14,14,14,14,12,12,11,10,9,9,8,8,8,9,10,21,21,20,18,18,18,17,15,15,17,16,16,17,16,16,17,16,14,15,17,17,16,15,15,16,15,14,12,10,11,11,12,10,8,8,9,11,20,20,19,17,17,17,15,13,13,16,15,16,16,15,16,16,13,13,15,18,18,17,16,15,16,16,15,12,10,11,13,15,12,9,8,9,11,21,21,19,17,16,15,14,12,12,14,14,15,13,12,14,15,12,12,14,19,19,17,17,16,16,17,16,12,11,11,14,16,14,11,9,10,11,23,21,19,17,16,15,13,12,12,13,13,13,11,10,12,14,11,11,14,19,19,17,18,18,16,17,17,14,13,11,14,17,16,12,9,10,11,25,22,20,18,16,15,14,12,14,15,15,12,10,9,11,12,12,12,13,17,19,18,19,21,18,17,18,16,14,10,12,16,16,13,9,9,11,27,23,20,19,17,16,15,13,16,18,16,11,10,9,11,12,11,13,13,16,19,19,20,23,19,16,18,18,15,9,11,15,17,14,9,9,11,27,23,21,20,18,18,17,15,19,22,19,11,10,9,11,12,11,13,14,16,19,21,19,23,18,15,17,16,14,8,10,14,18,15,10,10,12,27,23,21,21,19,20,19,18,22,26,21,13,10,9,11,13,11,14,16,17,20,22,19,21,17,15,17,15,13,8,9,14,18,15,11,11,12,26,23,23,22,21,21,20,20,22,26,22,16,12,11,12,14,13,17,19,17,20,21,18,20,17,16,18,16,13,9,9,13,16,14,11,11,12,26,24,25,24,22,22,21,22,22,25,22,19,14,12,12,16,15,20,21,16,20,20,18,18,17,17,19,17,14,11,10,12,14,14,12,12,13],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
