###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_612',geoSystem=['GDC'],position=(1.3257755241139217,103.94891185322548,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.3257755241139217,103.94891185322548,0.0),range=4101.627,child1Url=['../../tiles/5/singapore12-24.x3d'],child2Url=['../../tiles/5/singapore12-25.x3d'],child3Url=['../../tiles/5/singapore13-24.x3d'],child4Url=['../../tiles/5/singapore13-25.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore6-12.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.3170438117359278,103.93454881909646,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[6,8,13,18,19,17,20,25,29,29,29,28,22,11,9,11,11,12,15,15,13,10,10,9,7,8,9,11,14,12,10,8,6,4,6,8,8,8,9,13,18,20,19,21,26,29,28,27,27,21,12,10,10,10,12,16,16,15,11,11,9,8,9,9,10,11,10,10,7,5,4,5,6,6,10,10,13,18,21,21,22,26,27,26,25,24,19,13,11,10,9,13,16,18,17,13,12,11,9,10,9,11,10,9,7,6,5,5,6,7,6,13,11,13,19,22,23,22,25,25,23,23,21,17,16,13,10,10,15,18,20,18,15,14,12,10,10,10,12,12,8,2,4,4,6,8,8,8,15,13,13,18,21,22,22,24,22,21,21,18,15,16,13,10,10,16,19,19,17,16,15,13,11,10,12,11,9,6,0,4,6,8,10,10,10,15,14,13,16,19,20,21,23,20,19,20,17,14,15,12,11,11,16,19,17,15,14,15,14,11,11,13,9,5,4,0,5,8,10,11,13,14,15,15,13,15,17,18,20,21,19,19,20,16,13,14,10,9,11,16,19,16,14,12,15,14,10,12,12,8,4,3,1,6,9,8,11,14,16,16,16,15,15,16,17,20,21,19,19,19,15,15,15,11,8,11,14,17,14,12,11,13,12,9,11,11,8,6,4,6,8,7,3,8,16,19,16,17,17,17,18,18,19,20,19,19,18,14,16,16,11,7,11,12,15,13,11,10,12,11,9,10,10,9,7,5,7,8,5,2,11,19,20,15,17,20,21,21,18,16,20,20,17,17,14,17,18,11,7,11,11,13,12,11,10,10,11,11,10,10,9,7,5,6,6,3,5,16,20,19,15,17,21,23,23,19,15,20,22,16,17,16,19,20,11,9,11,10,12,12,10,10,9,11,11,10,11,10,8,6,5,4,3,7,17,19,17,14,17,22,25,24,19,16,21,23,16,19,18,20,21,12,13,11,10,11,12,10,9,8,9,10,9,12,11,9,8,7,4,4,9,14,15,14,14,17,21,24,22,18,17,20,22,17,20,19,20,20,14,17,12,10,11,13,9,8,8,9,9,7,10,11,9,8,7,5,5,10,13,12,11,14,16,19,21,19,16,18,17,17,20,21,19,16,19,19,21,15,10,11,14,10,8,8,8,7,6,8,10,8,8,7,6,6,11,14,12,10,14,15,17,18,16,14,17,16,14,20,22,17,13,18,22,23,17,11,12,15,11,9,9,8,6,6,8,9,7,8,7,7,7,11,13,12,9,14,14,15,15,15,14,16,16,13,17,21,15,12,19,22,23,18,13,13,17,14,10,9,9,6,7,8,8,7,8,6,6,8,10,11,12,11,14,14,14,14,14,14,16,15,13,15,20,14,12,20,22,21,20,15,15,19,16,11,9,9,7,8,7,7,8,8,6,6,8,9,10,11,11,13,13,14,14,14,16,15,14,12,16,17,12,12,21,21,20,20,18,17,20,16,12,9,8,6,9,7,7,8,7,6,6,7,8,10,10,10,13,13,15,14,15,16,14,12,12,16,15,11,12,21,20,20,20,19,19,21,17,12,9,8,6,10,8,7,9,8,6,6,6,8,9,9,9,15,14,14,14,15,15,13,12,11,13,15,12,13,20,20,20,20,20,21,22,17,12,9,7,7,12,10,8,9,9,6,6,6,7,8,9,9,16,16,15,14,15,14,12,11,10,11,14,13,13,19,18,19,19,21,22,22,16,11,9,7,8,13,11,9,10,10,7,5,5,6,7,8,9,16,17,17,16,15,13,12,11,10,11,15,13,12,17,15,17,18,21,21,20,14,11,9,8,9,12,11,10,11,10,9,6,5,5,5,6,7,16,18,19,18,16,13,12,12,10,12,16,12,10,13,12,14,16,20,20,17,12,11,9,9,10,11,10,10,12,11,9,8,6,5,5,5,5,16,18,21,19,17,15,14,13,12,14,16,9,7,10,9,10,13,17,19,15,11,11,9,8,9,11,10,9,12,11,10,9,8,6,5,4,4,17,17,21,19,17,16,16,14,13,16,14,7,5,8,7,7,9,14,16,14,11,11,10,8,8,10,10,9,13,11,10,10,9,6,6,5,4,19,17,20,18,16,17,16,14,14,17,13,5,5,8,7,6,7,12,13,13,11,13,11,10,8,9,9,9,13,11,8,10,9,6,6,5,4,21,17,18,16,16,18,16,14,14,17,13,5,6,9,8,7,6,10,9,12,12,14,13,11,8,8,9,10,13,10,7,9,8,5,6,5,5,21,18,17,16,17,18,16,15,16,17,14,7,8,10,9,8,7,9,8,10,11,13,14,10,7,7,8,10,11,8,7,8,7,5,5,6,6,20,18,17,16,18,19,16,17,18,17,15,11,10,11,10,9,9,9,8,8,10,12,13,8,5,6,7,9,8,7,7,7,7,6,6,7,8,20,19,17,18,18,18,16,19,21,19,18,15,13,13,13,12,10,10,8,7,10,10,11,7,5,5,6,8,7,6,5,5,7,6,9,10,10,20,19,18,19,19,17,16,22,24,22,22,19,16,16,16,15,12,11,9,8,9,8,8,7,5,4,5,8,7,5,4,4,7,8,12,15,13,20,18,18,18,19,18,17,23,26,24,23,21,19,19,19,17,13,13,10,9,10,8,9,7,4,4,5,6,6,4,4,6,11,11,14,16,15,20,18,17,16,19,19,18,23,27,26,23,21,20,22,20,17,14,14,10,10,10,8,10,8,4,4,5,5,4,4,4,10,17,14,14,16,16,22,19,17,16,18,19,17,21,25,25,22,21,21,23,21,17,15,14,11,12,11,8,10,9,5,3,6,5,5,5,6,11,17,15,13,15,15,23,21,18,17,18,17,15,18,22,23,20,20,22,23,22,18,14,13,11,13,12,9,11,11,8,3,7,7,7,7,9,12,15,13,13,14,14,22,20,18,18,17,16,15,18,20,21,18,19,22,22,21,17,14,13,11,12,12,9,9,10,9,4,8,8,9,9,12,12,13,12,12,13,13,19,19,18,18,18,15,17,19,20,21,17,19,22,21,18,15,13,12,10,10,11,9,8,8,8,6,9,9,11,11,14,12,12,13,12,11,12,18,17,17,19,18,14,17,21,21,20,16,18,21,20,17,14,11,10,10,8,11,9,9,8,9,7,8,8,11,13,16,13,11,11,11,11,11,17,16,16,19,17,13,16,21,22,19,16,16,19,19,16,14,9,9,10,7,13,9,11,9,9,6,6,7,9,13,18,14,10,8,8,10,11,16,15,16,18,18,14,15,19,21,18,16,15,17,16,14,12,9,9,10,7,14,10,12,10,8,5,4,5,8,12,16,15,10,7,7,10,11,16,16,17,18,18,15,13,16,19,18,15,13,13,13,11,10,9,9,9,9,14,13,14,10,7,2,2,2,7,9,13,14,11,8,7,9,11,17,17,18,18,18,16,13,15,18,18,14,11,11,11,9,9,9,10,9,9,13,13,13,9,5,1,2,1,7,8,9,13,13,9,7,9,10,19,19,19,19,19,18,15,15,17,17,14,11,8,7,8,9,8,10,9,6,10,12,11,8,4,3,3,1,8,9,6,12,14,10,8,10,11,21,20,20,21,21,19,16,14,15,16,13,10,8,6,7,9,8,10,8,6,10,11,11,8,6,6,4,2,7,8,3,10,13,11,9,10,11],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
