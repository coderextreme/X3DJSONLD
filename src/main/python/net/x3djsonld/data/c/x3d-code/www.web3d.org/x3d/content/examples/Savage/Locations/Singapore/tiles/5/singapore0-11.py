###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    Shape(
      appearance=Appearance(
        material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
        texture=ImageTexture(url=['../../images/5/singapore0-11.jpg'],repeatS=False,repeatT=False)),
      geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.2122632632,103.74782937541922,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=3.9897318E-4,zDimension=22,zSpacing=4.1579583E-4,height=[2,0,-2,-2,0,1,4,8,12,10,6,3,2,3,5,5,5,4,2,1,0,-1,-4,-7,-9,-10,-8,-5,1,7,8,9,7,5,4,4,4,1,0,-3,-3,-2,0,3,6,9,8,6,4,2,3,5,5,5,5,5,4,2,0,-3,-4,-5,-5,-5,-4,0,6,7,7,6,4,4,3,3,0,0,-3,-4,-4,-2,0,1,4,4,2,1,0,2,4,6,8,9,9,7,3,0,-1,-2,-2,-2,-3,-2,1,6,6,6,4,3,3,2,1,0,-1,-4,-5,-5,-4,-2,-1,0,0,-1,-1,0,0,3,7,11,13,13,11,4,0,0,-1,-2,-2,0,0,3,6,6,5,3,2,2,2,-1,0,-1,-2,-4,-5,-4,-3,-2,0,-1,-1,-2,-1,0,1,4,9,12,13,11,5,0,0,-1,-3,-3,0,1,4,6,6,5,4,3,4,4,0,0,0,-1,-3,-5,-4,-2,0,0,0,-1,-2,-2,-2,-1,1,5,8,10,10,5,1,0,-3,-6,-6,-1,1,4,6,6,5,4,4,7,8,3,1,0,0,-1,-2,-1,0,0,0,0,0,-2,-3,-4,-4,-1,2,6,8,9,5,2,0,-3,-4,-4,0,2,5,6,6,5,4,3,5,7,4,2,1,0,0,0,1,3,2,1,0,0,-1,-4,-6,-7,-5,0,3,6,8,5,2,-1,-3,-2,0,0,3,5,6,6,6,3,1,2,3,2,1,1,0,0,0,2,4,3,2,0,-1,-2,-4,-6,-7,-7,-3,0,3,5,3,1,-1,-2,0,1,2,4,6,7,9,9,3,0,1,2,0,0,0,0,0,1,2,5,5,4,1,-2,-4,-5,-5,-6,-7,-7,-5,0,1,1,1,0,0,1,2,4,5,6,8,12,14,4,-3,0,1,0,-1,0,0,0,1,3,5,6,6,1,-3,-5,-4,-4,-5,-6,-7,-7,-4,-1,0,0,0,0,2,3,4,4,6,8,13,15,6,-1,0,0,0,-1,0,0,1,3,4,5,6,6,1,-3,-5,-3,-3,-3,-4,-5,-6,-7,-6,-2,0,0,0,1,2,2,3,5,8,12,14,8,4,1,0,0,0,0,0,1,2,5,7,9,10,6,0,-1,-1,-3,-2,-3,-4,-5,-7,-7,-3,-2,-1,0,0,0,1,2,5,8,11,12,9,7,3,0,0,0,0,0,0,1,5,11,16,19,16,12,6,0,-2,-2,-2,-3,-4,-5,-5,-4,-4,-3,-3,-3,-2,0,2,5,7,9,11,10,9,5,3,1,1,0,0,2,6,15,25,31,35,33,27,18,7,0,0,-2,-2,-3,-4,-5,-6,-7,-7,-6,-6,-6,-4,-3,0,2,7,11,11,10,8,5,2,3,1,1,9,19,34,48,56,59,55,46,35,22,11,2,-1,-1,-2,-3,-4,-8,-10,-11,-11,-11,-11,-15,-16,-12,-7,2,10,10,10,10,8,6,4,4,7,19,35,49,64,70,74,69,61,51,39,25,11,2,0,-2,-2,-4,-10,-14,-15,-15,-15,-18,-22,-24,-22,-17,-4,6,8,11,11,10,9,5,10,18,35,51,61,67,70,72,71,70,64,56,43,28,14,3,-1,-2,-6,-13,-17,-18,-18,-20,-22,-24,-26,-27,-26,-14,-4,3,10,10,11,13,8,20,33,49,63,68,69,71,72,73,75,73,68,58,45,28,12,1,-2,-8,-16,-21,-21,-22,-24,-26,-27,-28,-31,-32,-23,-14,-2,6,9,12,16,20,36,50,59,65,68,69,70,72,73,74,74,73,68,61,47,30,12,-2,-13,-18,-22,-23,-24,-26,-28,-30,-31,-33,-33,-29,-25,-13,-2,6,15,20,34,49,63,66,67,68,69,70,71,73,74,75,75,75,72,62,47,24,-2,-17,-21,-24,-25,-27,-28,-29,-32,-34,-34,-34,-33,-31,-19,-6,7,20,23,50,58,65,66,67,68,69,70,71,72,73,74,75,75,74,70,60,36,-1,-21,-23,-25,-27,-28,-30,-32,-33,-33,-33,-33,-33,-30,-13,1,15,28,27],
        geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])))])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
