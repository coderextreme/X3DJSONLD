###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    Shape(
      appearance=Appearance(
        material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
        texture=ImageTexture(url=['../../images/5/singapore9-12.jpg'],repeatS=False,repeatT=False)),
      geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.2908486746019459,103.76219240954823,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=36,xSpacing=4.103724E-4,zDimension=22,zSpacing=4.1579583E-4,height=[4,5,6,6,8,9,9,8,6,4,4,6,6,6,7,7,7,9,10,12,12,12,12,13,14,13,12,11,10,11,12,14,17,21,26,26,4,5,5,5,7,9,8,7,5,3,4,6,6,7,7,7,7,9,10,12,13,14,15,15,16,16,15,14,13,13,14,17,20,26,31,30,6,7,6,5,6,8,8,7,5,2,4,6,8,8,8,9,9,9,10,13,16,17,19,19,19,19,19,18,18,17,18,21,24,30,35,33,7,8,6,5,5,7,7,7,5,4,5,8,9,9,9,10,10,9,11,14,17,20,22,23,23,23,23,23,23,22,22,24,27,32,36,34,7,8,6,5,5,6,6,7,7,8,9,11,11,10,10,10,10,10,12,15,19,22,25,28,28,26,25,27,28,27,27,27,28,33,36,34,6,7,6,4,4,4,5,6,8,9,10,12,11,11,10,10,11,11,13,17,20,24,29,31,32,29,29,30,31,30,30,28,28,33,37,36,5,4,4,3,3,2,4,6,8,10,10,10,11,11,11,10,11,12,14,18,22,27,33,35,36,34,33,32,31,31,30,29,29,34,38,38,4,4,3,3,2,2,4,6,8,10,10,10,11,12,12,11,11,13,15,18,23,29,34,36,38,39,39,36,33,31,29,29,29,35,41,42,6,5,4,4,4,4,5,7,8,10,10,10,11,13,14,12,12,13,15,18,22,27,33,36,39,44,46,43,39,31,26,28,31,38,45,49,8,8,7,6,6,5,6,8,9,9,9,10,11,14,14,13,13,14,15,18,21,26,31,35,40,46,50,48,44,33,25,29,34,42,49,57,9,11,10,9,8,6,7,8,7,6,8,10,12,14,13,11,10,12,14,17,21,26,31,35,40,46,50,49,46,37,31,33,38,46,56,64,10,13,12,12,9,6,7,7,6,5,7,10,12,13,12,9,9,12,14,17,22,27,31,35,39,45,49,49,47,42,38,40,43,52,61,66,8,13,12,12,10,8,8,9,8,6,7,10,11,12,11,9,10,14,17,20,24,29,33,35,38,43,46,49,49,49,48,50,52,58,64,63,6,11,12,11,10,9,9,9,9,8,8,10,11,12,11,10,12,16,20,22,26,32,35,36,38,42,45,49,52,55,57,58,59,61,63,56,5,8,9,10,10,9,9,7,9,10,11,10,11,13,14,13,15,18,21,24,29,34,38,39,40,43,46,50,54,60,64,62,60,59,55,47,5,7,8,8,9,9,8,6,8,11,12,11,12,15,17,17,19,21,23,27,32,37,41,42,44,46,48,51,54,61,66,63,58,53,46,38,7,9,8,7,7,7,7,5,8,12,12,12,13,16,18,21,23,25,28,31,35,40,45,46,47,48,49,49,50,56,59,54,49,45,39,33,9,11,9,7,7,7,6,5,8,12,12,12,14,16,19,23,27,30,32,35,38,44,49,50,51,49,48,46,45,48,49,44,40,37,33,29,10,13,10,8,8,9,9,8,9,12,12,11,12,15,19,25,28,31,34,36,40,45,50,52,51,48,44,41,39,40,40,36,34,32,29,26,12,14,12,9,10,11,11,10,11,12,11,11,12,14,19,26,29,32,34,37,41,46,50,51,50,45,40,36,33,33,32,30,29,28,26,22,13,14,11,8,9,10,11,11,12,12,12,12,14,17,22,27,30,31,32,36,40,43,47,48,46,41,36,33,29,28,27,26,26,24,21,16,14,13,10,7,7,9,11,12,12,13,13,14,18,22,26,28,30,30,31,33,37,40,44,43,41,35,32,29,27,24,23,23,23,20,16,11],
        geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])))])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
