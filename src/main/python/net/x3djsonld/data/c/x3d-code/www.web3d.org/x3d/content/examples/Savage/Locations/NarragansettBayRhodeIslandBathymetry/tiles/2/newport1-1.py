###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoLOD(center=(41.40380382238266,-71.52739360586703,0.0),range=24601.38,child1Url=['../../tiles/3/newport2-2.x3d'],child2Url=['../../tiles/3/newport2-3.x3d'],child3Url=['../../tiles/3/newport3-2.x3d'],child4Url=['../../tiles/3/newport3-3.x3d'],
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(41.5,-71.5,0),geoSystem=['GDC']),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0,0.05,0)),
            texture=ImageTexture(url=['../../images/2/newport1-1.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(41.30704408055511,-71.61532891417802,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=53,xSpacing=0.0033821273,zDimension=52,zSpacing=0.0037944997,height=[-23,-22,-22,-22,-22,-24,-27,-29,-30,-31,-32,-33,-34,-31,-33,-37,-37,-37,-37,-37,-37,-38,-34,-33,-33,-34,-32,-30,-29,-29,-29,-28,-28,-27,-25,-19,-21,-22,-21,-21,-21,-21,-20,-19,-19,-20,-19,-20,-20,-19,-18,-19,-20,-21,-21,-21,-21,-21,-21,-21,-24,-25,-28,-29,-30,-30,-29,-34,-36,-36,-37,-37,-37,-37,-37,-37,-32,-32,-30,-29,-29,-28,-28,-28,-26,-25,-25,-23,-22,-21,-19,-16,-19,-18,-18,-18,-19,-19,-19,-19,-19,-19,-19,-20,-20,-20,-20,-20,-20,-21,-21,-22,-22,-23,-24,-26,-26,-27,-27,-29,-33,-34,-35,-35,-35,-34,-34,-34,-32,-30,-29,-29,-28,-27,-27,-26,-26,-25,-24,-23,-21,-21,-20,-18,-18,-20,-18,-18,-18,-17,-19,-19,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-21,-21,-22,-22,-22,-23,-24,-24,-24,-25,-28,-31,-31,-31,-31,-31,-30,-29,-29,-28,-28,-27,-27,-26,-26,-25,-25,-25,-23,-23,-21,-20,-19,-19,-19,-19,-18,-18,-17,-17,-17,-18,-19,-20,-20,-20,-20,-19,-20,-21,-19,-20,-20,-20,-21,-21,-21,-22,-23,-23,-23,-23,-23,-26,-27,-27,-27,-27,-27,-27,-26,-26,-26,-25,-25,-25,-26,-25,-25,-24,-23,-22,-20,-19,-19,-18,-19,-18,-18,-18,-17,-16,-16,-16,-17,-19,-20,-20,-20,-20,-21,-21,-21,-18,-18,-18,-20,-19,-17,-19,-21,-21,-22,-22,-22,-23,-25,-25,-25,-26,-26,-25,-25,-25,-24,-24,-23,-24,-24,-24,-23,-23,-22,-21,-20,-19,-15,-18,-18,-17,-17,-8,-17,-15,-15,-15,-16,-17,-19,-20,-20,-21,-21,-21,-21,-22,-17,-17,-17,-19,-18,-16,-18,-19,-20,-20,-20,-20,-21,-23,-23,-23,-23,-24,-24,-24,-23,-21,-22,-22,-22,-22,-22,-21,-21,-20,-19,-18,-17,-17,-16,-17,-16,-15,-15,-14,-14,-15,-15,-14,-17,-19,-20,-21,-21,-22,-22,-23,-23,-17,-17,-18,-19,-18,-17,-15,-17,-18,-18,-18,-19,-18,-19,-20,-21,-21,-22,-22,-22,-21,-20,-20,-20,-20,-19,-19,-19,-18,-18,-17,-16,-16,-16,-16,-16,-16,-10,-14,-13,-13,-14,-16,-16,-18,-20,-21,-22,-22,-23,-24,-24,-24,-16,-16,-17,-17,-17,-16,-15,-16,-15,-16,-17,-15,-16,-16,-17,-11,-19,-19,-19,-19,-19,-19,-19,-18,-18,-18,-18,-18,-17,-16,-15,-15,-15,-15,-15,-15,-14,-14,-13,-13,-13,-14,-14,-16,-19,-21,-22,-23,-23,-24,-25,-26,-26,-15,-15,-15,-15,-16,-15,-16,-16,-14,-14,-13,-14,-14,-15,-16,-15,-17,-17,-18,-17,-17,-17,-18,-17,-17,-17,-17,-16,-15,-14,-14,-13,-13,-14,-7,-14,-14,-13,-13,-13,-13,-15,-13,-16,-20,-21,-21,-23,-23,-25,-26,-27,-27,-15,-15,-15,-15,-15,-14,-15,-14,-13,-12,-12,-12,-11,-12,-13,-13,-15,-15,-16,-16,-16,-16,-17,-16,-15,-15,-16,-15,-14,-14,-13,-8,-13,-13,-12,-12,-12,-13,-15,-15,-15,-14,-14,-17,-19,-21,-22,-23,-24,-25,-26,-27,-27,-13,-13,-14,-14,-13,-13,-13,-13,-12,-11,-11,-12,-11,-13,-12,-10,-13,-13,-15,-15,-14,-14,-15,-15,-14,-14,-14,-13,-13,-12,-12,-11,-10,-11,-11,-10,-10,-11,-13,-14,-13,-12,-15,-16,-19,-21,-22,-23,-24,-24,-24,-26,-26,-12,-11,-11,-12,-12,-11,-11,-11,-11,-10,-10,-9,-8,-9,-11,-11,-11,-12,-13,-13,-14,-13,-14,-14,-13,-13,-12,-12,-11,-10,-8,-6,-8,-7,-9,-10,-9,-8,-8,-10,-11,-11,-14,-18,-20,-21,-22,-23,-24,-25,-25,-25,-26,-11,-10,-10,-10,-10,-10,-10,-10,-8,-9,-9,-8,-8,-9,-10,-11,-10,-11,-12,-13,-13,-13,-13,-13,-12,-11,-10,-9,-7,-9,-6,-6,-6,-8,-10,-10,-10,-8,-8,-7,-7,-10,-14,-17,-19,-21,-23,-24,-25,-25,-25,-24,-24,-8,-7,-4,-7,-4,-5,-8,-8,-8,-8,-9,-9,-9,-8,-8,-8,-8,-10,-11,-12,-12,-11,-11,-12,-11,-10,-10,-10,-9,-7,-5,-8,-8,-9,-8,-8,-4,-5,-3,0,-3,-8,-10,-17,-19,-22,-24,-26,-26,-25,-25,-24,-23,0,0,0,0,-1,0,-3,-6,-7,-8,-8,-8,-7,-8,-8,-7,-7,-9,-10,-10,-11,-11,-10,-9,-10,-10,-10,-9,-7,-6,-7,-6,-7,-7,-7,-4,-3,0,0,0,-4,-10,-11,-15,-17,-22,-24,-26,-27,-27,-25,-23,-22,-1,0,-1,-1,-1,0,0,0,0,-3,-5,-6,-6,-6,-6,-6,-7,-8,-8,-9,-8,-6,-8,-8,-8,-8,-8,-7,-6,-4,-5,-5,-6,-5,-3,-1,0,0,0,-2,-4,-7,-9,-11,-17,-21,-23,-25,-23,-26,-27,-24,-23,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-3,-4,-5,-5,-4,-1,-1,-2,-3,-3,-6,-6,-6,-4,-1,-3,-3,-2,0,0,0,0,0,-1,-4,-6,-8,-13,-17,-20,-22,-24,-24,-26,-27,-24,-24,0,-1,-1,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,-3,-3,-3,-2,0,0,0,0,0,0,0,0,0,0,0,-2,-4,-6,-9,-12,-19,-22,-22,-22,-23,-25,-22,-22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,-3,0,0,0,0,0,0,0,0,0,0,-2,-5,-7,-13,-19,-21,-21,-21,-21,-21,-20,-20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,0,-1,0,0,0,0,-2,0,0,0,0,0,0,0,0,0,0,0,-1,-3,-4,-10,-17,-20,-21,-20,-21,-21,-23,-26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,-1,0,0,0,-2,0,0,0,0,0,0,0,0,0,0,0,0,-2,-3,-6,-17,-20,-23,-25,-26,-27,-28,-28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,-1,-7,-14,-19,-22,-24,-25,-27,-28,-28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-5,-1,0,0,0,0,0,-1,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,-9,-15,-20,-22,-25,-26,-27,-27,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-1,-1,-1,-1,0,0,0,0,0,0,0,0,0,-2,-12,-17,-21,-23,-25,-26,-27,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-1,-2,0,0,0,0,0,0,0,0,0,0,0,0,-1,-7,-13,-18,-22,-24,-26,-26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,-2,-1,0,-1,0,0,0,0,0,0,0,0,0,0,0,-8,-15,-21,-24,-25,-25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,-2,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,-14,-20,-22,-24,-24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-1,-2,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,-13,-18,-21,-23,-23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,-2,0,-1,0,0,0,0,0,0,0,0,0,0,0,-13,-17,-19,-21,-21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,-1,0,0,0,0,0,0,0,0,0,0,0,-1,-11,-16,-18,-20,-20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,-4,-10,-14,-16,-17,-18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,-3,-9,-12,-13,-14,-15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,-6,-9,-11,-12,-12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-5,-7,-9,-9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-1,0,0,0,0,0,0,-1,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-1,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-1,0,0,0],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
