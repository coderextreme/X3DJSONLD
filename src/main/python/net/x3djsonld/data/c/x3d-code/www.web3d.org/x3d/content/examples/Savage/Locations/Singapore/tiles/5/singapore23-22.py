###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    Shape(
      appearance=Appearance(
        material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
        texture=ImageTexture(url=['../../images/5/singapore23-22.jpg'],repeatS=False,repeatT=False)),
      geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.4130926478938615,103.90582275083842,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=36,xSpacing=4.103724E-4,zDimension=23,zSpacing=3.96896E-4,height=[35,35,34,31,28,26,25,25,26,27,26,24,20,17,13,11,9,9,9,9,9,8,7,7,8,8,9,8,3,1,6,9,9,8,7,6,30,30,29,26,23,22,21,22,24,27,29,27,24,21,17,14,12,10,9,9,9,8,7,7,8,9,10,8,3,2,6,9,7,6,4,3,24,25,24,22,20,19,19,20,23,27,30,30,27,26,23,21,17,13,10,8,9,9,8,8,9,8,8,7,5,5,7,6,1,-1,-1,0,19,19,19,19,17,17,17,19,21,26,30,31,30,30,30,27,23,17,11,8,8,9,9,10,9,8,6,6,7,8,7,3,-4,-10,-7,-4,15,15,17,18,19,20,21,22,23,26,29,30,29,30,31,29,25,20,13,9,8,9,12,12,9,7,5,5,7,7,3,0,-6,-10,-9,-8,12,13,14,18,22,24,25,26,26,26,26,27,27,29,30,29,26,21,14,9,7,9,14,15,9,6,5,5,7,5,0,-4,-6,-7,-10,-12,11,12,15,20,24,27,28,27,25,24,22,22,22,24,26,25,22,18,12,8,7,8,13,14,10,6,5,5,5,3,0,-4,-5,-6,-9,-12,10,13,17,22,27,30,30,27,23,20,17,16,16,17,19,19,17,13,8,5,6,8,10,11,9,7,6,5,3,2,0,-1,-4,-6,-8,-10,11,14,18,23,29,31,31,28,22,17,13,11,10,12,14,14,12,9,6,6,8,10,10,9,7,6,4,3,2,1,0,-1,-3,-6,-7,-8,12,15,18,24,29,32,31,28,22,16,11,7,6,7,9,9,8,7,6,8,11,12,11,8,6,4,2,0,0,0,0,-1,-2,-4,-6,-7,12,14,17,22,27,29,29,27,22,17,12,8,6,6,7,7,7,6,6,9,13,15,11,8,4,2,0,0,0,0,0,-1,-2,-4,-5,-6,10,11,13,18,23,26,27,25,21,19,16,12,9,7,7,7,7,7,7,10,14,15,12,7,3,0,0,0,0,0,0,0,-2,-4,-4,-5,9,10,11,16,21,23,24,23,21,20,18,15,10,7,6,6,7,8,10,12,16,16,11,6,2,0,-1,-1,0,0,0,0,-2,-3,-4,-5,9,10,12,16,20,22,22,21,20,19,18,15,10,8,6,6,7,9,14,16,16,15,10,4,0,-2,-1,-1,-1,-1,-1,-1,-2,-2,-4,-4,9,10,12,16,19,20,20,20,19,18,18,15,11,9,7,6,7,12,21,23,20,16,9,3,0,-2,-2,-1,-1,-1,-1,-1,-2,-2,-3,-4,11,12,14,17,19,19,18,17,16,16,16,14,12,10,8,6,8,16,31,35,28,19,9,2,0,-1,-2,-2,-2,-2,-2,-2,-2,-2,-2,-3,12,12,13,15,16,15,15,14,13,13,14,13,12,10,8,6,7,18,34,39,31,22,11,3,1,0,-1,-2,-2,-2,-2,-2,-2,-2,-2,-3,10,10,10,10,10,10,10,10,9,9,10,10,10,9,7,5,7,14,28,33,29,24,15,8,3,0,-1,-2,-2,-3,-3,-3,-3,-3,-2,-2,9,8,7,5,4,4,5,5,6,6,7,8,9,7,5,4,5,11,20,25,25,23,17,11,5,0,0,-1,-2,-3,-3,-3,-3,-3,-2,-2,7,6,5,2,0,0,0,2,4,5,5,6,6,5,3,3,4,7,11,15,17,18,16,13,8,3,0,-1,-2,-2,-3,-3,-3,-3,-3,-3,6,5,3,0,-2,-2,-2,0,2,4,4,4,4,3,3,3,4,4,5,7,11,14,14,13,9,5,2,0,-1,-2,-3,-3,-3,-3,-3,-3,5,6,5,2,0,0,0,0,1,3,4,4,4,3,3,3,4,4,5,6,7,8,10,10,9,6,3,0,0,-2,-2,-3,-3,-3,-3,-3,5,5,5,3,1,0,0,0,0,2,4,4,4,3,3,3,4,4,4,4,5,5,7,8,8,7,5,2,0,-1,-2,-3,-3,-3,-3,-3],
        geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])))])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
