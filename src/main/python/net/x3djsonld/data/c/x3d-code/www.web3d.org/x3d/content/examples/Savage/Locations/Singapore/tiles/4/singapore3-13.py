###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_313',geoSystem=['GDC'],position=(1.273385249845958,103.97763792148352,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.273385249845958,103.97763792148352,0.0),range=4101.627,child1Url=['../../tiles/5/singapore6-26.x3d'],child2Url=['../../tiles/5/singapore6-27.x3d'],child3Url=['../../tiles/5/singapore7-26.x3d'],child4Url=['../../tiles/5/singapore7-27.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore3-13.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.264653537467964,103.9632748873545,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[4,7,6,10,14,6,10,6,3,4,7,5,7,10,4,3,2,6,11,12,12,10,8,5,4,6,1,2,7,8,0,-3,3,6,9,11,12,7,6,2,10,11,4,10,7,5,4,5,6,7,8,4,3,3,6,11,11,9,7,6,5,9,12,7,6,10,8,2,0,1,8,9,9,9,9,4,0,10,9,2,10,10,8,5,4,7,6,5,4,4,5,6,10,11,7,5,4,5,12,16,10,8,11,8,4,2,0,9,8,9,7,8,3,2,9,9,3,9,16,11,7,4,4,2,3,4,5,8,10,9,9,8,4,2,6,14,15,9,8,8,5,7,3,0,5,8,11,8,7,3,3,7,9,5,8,19,11,8,5,2,0,2,5,6,10,12,8,8,8,5,2,6,13,11,7,8,7,4,11,5,0,2,8,12,9,5,3,4,6,9,9,9,13,4,5,7,2,0,3,8,9,10,12,11,10,8,6,5,7,7,4,6,8,9,6,14,8,9,3,7,12,9,3,5,5,5,8,13,10,6,-2,3,9,3,0,4,10,10,10,11,12,11,8,7,8,8,2,0,5,8,11,9,14,11,16,6,7,11,10,4,7,4,5,9,12,10,9,0,6,12,6,1,5,9,9,10,10,10,10,7,7,7,6,3,0,4,5,9,8,9,7,16,9,8,17,13,5,9,4,6,10,11,9,10,1,9,15,9,5,7,8,8,9,8,7,8,6,7,7,4,4,1,2,3,7,7,4,4,14,12,10,20,15,7,8,6,6,10,9,6,7,2,6,14,8,6,11,10,8,7,4,3,6,7,7,7,4,4,2,2,5,6,3,1,4,10,13,12,15,13,9,8,8,7,9,8,3,5,3,2,11,7,7,14,12,8,6,0,0,5,9,8,6,3,4,3,3,8,6,0,0,4,7,14,14,8,10,9,8,5,5,8,7,5,6,5,2,7,5,4,12,11,6,5,2,0,6,9,8,7,4,4,3,2,7,6,0,-3,5,8,14,20,10,10,9,9,2,3,6,6,7,9,6,2,3,3,2,10,10,3,4,4,2,7,9,9,9,5,4,4,2,5,5,0,-4,7,9,15,27,14,11,9,9,2,3,3,6,9,8,4,3,4,5,6,12,10,6,5,4,5,8,9,10,12,7,4,4,4,6,8,0,-2,9,10,18,25,15,15,9,10,4,5,1,5,11,6,1,5,6,8,10,14,10,9,7,3,8,10,8,12,15,9,4,5,8,8,12,3,1,11,11,22,21,15,18,8,13,7,8,2,7,14,6,2,8,6,7,10,11,8,9,6,2,8,10,10,14,13,7,5,10,10,10,13,10,7,12,13,25,21,14,20,8,16,9,11,5,10,17,5,4,10,6,5,9,7,6,8,4,2,7,9,13,16,11,3,5,15,13,12,14,18,13,13,15,28,21,14,22,10,16,10,10,9,9,13,5,6,10,7,9,7,2,2,4,2,1,4,8,12,13,8,3,6,15,14,13,14,19,10,10,21,26,21,14,21,12,15,11,8,13,8,8,4,6,8,9,14,6,-2,0,0,0,1,2,8,11,8,5,4,8,15,14,13,15,19,6,6,27,23,20,15,19,11,13,12,9,13,8,6,2,3,6,9,14,5,0,0,2,2,1,0,4,5,3,7,7,7,12,14,15,15,17,8,11,30,23,18,14,14,8,10,14,9,13,8,4,0,0,4,8,12,5,2,3,6,5,1,-1,0,-2,0,10,10,6,9,13,17,15,14,11,19,33,24,16,12,9,6,8,12,9,4,5,5,0,0,3,7,9,5,5,6,7,6,3,0,0,-2,0,11,11,7,7,10,16,13,10,16,26,32,24,16,7,4,4,6,8,8,-4,1,6,2,0,2,6,6,5,9,8,6,7,5,3,3,0,2,11,12,9,6,7,14,10,7,20,30,29,23,16,1,0,4,7,10,11,0,0,3,2,1,3,9,7,4,9,8,6,8,6,6,5,0,1,7,6,4,4,7,13,8,5,22,29,26,22,15,4,4,4,10,13,16,11,0,0,3,5,7,14,10,3,8,8,8,8,6,7,6,0,1,1,-2,-3,2,8,14,7,4,24,25,23,23,12,13,11,5,7,12,16,16,2,0,6,8,8,13,1,-1,5,8,11,10,7,8,6,2,0,0,-4,-5,0,6,11,8,9,27,25,23,22,7,14,13,5,2,9,13,19,7,7,10,12,8,9,-13,-7,2,10,16,13,7,9,7,4,2,0,-3,-5,0,4,6,11,16,30,27,25,19,1,9,10,5,2,7,10,15,9,10,12,11,8,3,-20,-9,3,11,15,12,6,8,7,5,3,0,1,-1,1,9,14,18,21,30,28,25,14,0,8,10,5,5,7,6,8,9,10,12,6,8,-3,-21,-9,5,10,11,9,3,6,7,6,4,1,7,7,7,18,30,27,25,28,26,23,8,2,10,13,6,6,8,5,4,8,12,27,12,9,-3,-15,-5,7,6,4,4,2,6,8,7,5,2,8,10,8,19,32,30,25,25,25,21,6,6,12,13,7,5,9,7,4,8,16,52,24,11,0,-6,0,6,0,-5,1,3,7,9,8,5,2,6,9,5,13,24,29,21,22,22,19,8,9,14,14,7,4,8,9,4,8,17,54,26,9,3,0,2,8,-1,-18,-8,4,9,9,9,7,2,5,8,5,10,18,24,19,21,21,16,9,10,12,12,3,3,5,10,5,8,16,34,19,6,6,0,1,12,0,-36,-22,2,10,7,10,10,2,5,7,7,10,16,17,16,20,20,13,8,8,7,8,4,3,5,9,6,8,14,16,13,2,6,1,2,13,4,-33,-23,1,9,6,9,13,5,6,7,8,10,15,13,15,18,18,10,4,8,3,7,10,5,7,5,9,7,10,6,8,0,3,3,6,10,8,-9,-8,1,7,5,7,14,9,6,6,6,7,12,12,14,15,12,5,0,11,2,6,14,7,9,5,11,6,7,1,4,0,1,4,7,6,9,7,1,1,6,4,7,14,10,6,6,5,6,9,12,13,12,7,6,0,12,3,5,15,9,12,8,12,6,5,0,2,1,1,4,7,2,6,11,4,1,6,7,8,11,10,9,10,7,5,6,12,12,10,5,13,8,14,7,7,14,11,12,11,13,7,5,2,1,4,2,4,5,0,3,12,6,2,6,11,11,10,10,10,10,7,4,3,9,11,9,4,16,14,15,8,7,12,11,10,13,16,10,8,6,3,5,6,5,4,-3,0,11,8,3,8,15,15,10,10,10,6,3,2,2,5,9,8,4,13,11,15,7,4,10,10,8,15,19,13,9,8,6,6,7,5,4,-5,0,11,11,5,9,17,18,12,11,10,1,0,0,1,1,7,7,3,9,6,14,6,2,8,5,7,13,19,12,8,8,8,6,4,4,6,-2,0,11,14,7,5,15,21,15,11,8,0,-4,-2,0,0,4,4,2,3,4,14,6,2,6,2,8,13,19,10,7,8,9,5,0,3,8,0,0,12,16,9,2,10,21,16,10,6,-2,-9,-6,-1,0,2,3,1,0,2,13,6,2,5,6,10,15,18,13,10,8,6,4,0,4,8,1,3,13,14,9,1,3,11,11,8,5,-3,-11,-7,-1,0,2,4,0,-1,2,11,7,2,5,10,14,18,17,14,12,8,5,3,4,6,7,2,6,14,12,9,1,-2,2,4,5,3,-5,-12,-7,-1,0,2,5,0,-1,3,9,8,3],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
