###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_913',geoSystem=['GDC'],position=(1.3781657983818856,103.97763792148352,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.3781657983818856,103.97763792148352,0.0),range=4101.627,child1Url=['../../tiles/5/singapore18-26.x3d'],child2Url=['../../tiles/5/singapore18-27.x3d'],child3Url=['../../tiles/5/singapore19-26.x3d'],child4Url=['../../tiles/5/singapore19-27.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore9-13.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.3694340860038916,103.9632748873545,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[19,15,18,23,19,20,21,20,20,21,21,22,25,26,24,23,23,23,24,25,28,27,24,21,17,13,9,8,9,6,8,7,3,3,2,4,8,19,14,17,21,17,19,20,18,18,20,20,21,24,26,25,24,22,22,24,25,27,25,22,21,19,14,9,7,8,7,7,6,4,3,3,5,9,19,14,18,19,16,19,19,17,16,18,18,20,23,26,25,24,21,21,24,27,27,23,21,22,20,15,10,6,7,8,7,6,5,3,5,6,9,18,13,17,17,16,19,19,16,15,17,18,18,19,24,24,23,20,21,25,28,28,24,21,22,21,16,11,6,6,7,7,7,5,4,7,7,9,17,12,15,15,18,19,19,15,15,15,17,16,16,22,22,21,20,22,26,28,30,26,21,23,21,17,13,7,5,6,6,7,5,5,8,8,9,16,10,12,13,17,18,16,15,14,14,16,14,14,18,20,19,19,21,25,27,29,26,23,23,21,16,13,7,5,6,6,7,3,5,8,7,8,16,9,9,12,16,15,14,14,14,13,14,14,11,15,18,18,18,20,24,26,27,26,25,22,19,14,12,7,6,6,6,5,2,5,8,7,7,17,9,9,11,13,13,12,14,14,13,13,12,10,12,16,16,17,20,22,24,25,27,26,22,17,12,10,7,6,6,6,5,2,5,7,7,8,18,10,10,11,11,12,12,14,14,14,12,11,10,11,13,15,17,20,21,22,24,26,26,22,15,10,8,6,6,6,6,6,4,5,5,8,8,19,11,10,11,10,11,12,13,13,13,12,10,10,11,12,15,17,19,21,21,22,24,24,19,12,9,7,6,6,6,6,6,5,4,4,9,9,19,11,10,11,11,11,12,13,11,11,12,10,11,12,12,14,17,19,23,21,19,20,19,14,9,8,7,6,6,5,5,5,5,3,4,9,8,19,12,10,11,11,10,12,13,11,11,12,11,11,11,12,14,17,19,23,21,16,16,14,10,7,6,7,6,6,5,4,4,5,2,3,6,5,18,14,11,11,11,10,11,12,12,12,13,12,11,11,12,14,17,20,21,19,14,12,10,7,5,5,7,6,7,5,3,2,5,2,3,2,0,15,14,11,12,11,10,10,11,12,13,13,13,12,11,11,13,16,19,20,17,12,10,8,5,5,5,7,6,7,5,3,2,5,2,3,0,-3,12,13,12,12,13,11,9,10,12,14,14,15,14,11,11,12,13,16,19,17,12,10,7,6,6,7,8,8,7,6,4,3,3,3,3,0,-5,10,13,11,11,13,11,9,10,12,15,15,16,14,11,11,12,13,15,18,15,11,10,7,6,7,7,8,11,10,7,5,3,2,2,2,1,-4,11,12,11,10,12,12,10,11,14,17,16,17,14,11,12,13,14,14,15,12,9,8,6,6,7,7,8,14,15,10,7,3,3,1,2,4,-1,11,12,10,10,12,12,10,11,15,17,15,15,13,11,12,13,13,13,13,10,7,7,7,7,8,8,10,16,19,13,8,4,3,1,2,6,0,11,12,10,11,12,11,10,11,16,16,14,12,11,10,10,11,11,11,12,10,8,7,7,8,9,9,13,18,21,16,10,4,3,3,3,6,2,10,12,10,11,12,10,10,11,16,16,13,10,9,9,9,10,10,11,12,10,8,7,7,9,11,12,15,20,22,17,11,4,3,3,3,5,4,8,11,10,11,11,9,10,11,16,15,11,9,9,8,9,9,10,11,12,10,7,6,7,9,13,16,18,21,21,18,12,4,2,3,2,4,5,8,11,11,11,11,9,11,12,15,13,10,8,8,8,9,9,10,10,11,10,8,8,7,9,15,19,20,21,22,20,13,4,2,3,2,3,5,10,12,14,11,10,8,11,13,14,10,9,8,8,8,9,10,10,9,10,10,11,12,10,11,17,21,22,23,25,24,14,5,4,3,3,3,5,11,13,16,12,9,8,10,13,13,8,8,8,8,9,10,11,10,8,9,11,13,16,14,14,19,23,24,25,28,26,15,6,5,4,3,3,5,12,13,14,12,9,7,10,12,11,8,8,9,10,10,11,11,11,8,8,11,15,20,19,16,21,25,27,28,30,27,17,8,6,5,4,4,4,11,13,13,13,9,7,9,11,9,8,8,9,11,12,11,11,11,8,8,12,17,22,22,18,22,26,29,31,31,27,18,9,6,6,6,4,3,10,13,14,14,8,6,8,9,8,9,9,10,11,12,11,11,10,7,8,13,18,22,24,20,22,24,28,31,31,26,18,11,5,6,6,3,4,9,12,14,14,7,6,8,8,8,9,9,9,11,12,11,11,9,7,9,14,17,21,24,22,21,22,26,31,31,26,19,12,5,6,7,2,3,8,9,12,12,6,5,8,8,7,8,8,9,11,12,11,11,9,7,10,15,16,19,21,22,21,19,21,28,32,28,20,14,6,6,6,1,3,7,7,9,9,7,5,8,8,7,8,8,9,10,11,12,12,9,8,11,15,16,17,20,22,20,16,16,27,33,31,22,15,8,6,6,2,4,7,6,7,7,8,7,7,7,7,9,9,9,9,10,12,12,9,10,13,16,18,17,20,23,20,15,16,27,32,32,26,19,10,6,6,5,5,7,5,4,4,8,9,7,7,7,9,9,9,9,9,11,11,10,11,15,18,20,19,21,24,21,17,18,26,30,32,28,21,12,7,6,8,6,6,4,3,3,7,8,7,6,7,9,9,9,9,9,10,10,11,13,17,21,22,23,24,26,27,27,25,23,23,28,26,21,12,7,7,7,7,5,3,2,3,5,7,7,6,7,8,9,9,9,9,10,9,10,14,19,23,26,27,26,29,33,36,32,21,18,22,22,19,12,6,6,6,6,4,4,4,6,6,7,6,6,7,8,8,9,9,9,9,8,9,14,20,26,30,31,29,31,38,42,38,24,15,18,17,14,10,6,5,5,5,4,4,5,8,6,6,5,6,7,8,8,9,9,10,8,7,8,13,21,29,33,35,32,33,40,44,41,27,14,14,13,9,8,6,4,5,5,4,4,4,6,6,5,4,5,7,9,8,9,9,9,8,7,7,11,20,29,36,38,34,32,39,41,41,30,16,12,10,9,8,6,4,5,5,4,4,3,3,6,4,4,5,7,9,8,9,9,9,7,6,7,10,18,28,37,40,35,31,36,37,38,32,18,12,10,9,8,7,5,5,5,4,3,2,1,6,5,7,6,7,8,7,8,9,8,6,6,7,10,15,24,36,40,33,29,31,32,34,31,18,11,10,9,8,8,6,5,5,3,3,1,0,6,8,9,6,4,4,4,8,9,8,5,5,8,9,12,20,33,38,30,26,26,26,29,28,16,12,11,9,8,7,6,6,6,3,2,0,0,2,10,5,2,-3,0,4,7,9,7,4,5,7,9,10,17,28,32,27,23,23,20,22,22,14,12,11,8,7,7,6,6,6,3,0,0,0,0,10,0,-4,-16,-5,3,6,8,7,4,5,7,9,10,15,22,26,23,21,21,16,16,17,13,12,12,8,6,7,6,6,5,2,0,0,0,-1,5,-3,-14,-28,-10,1,1,5,6,5,6,8,9,11,15,20,24,22,21,19,15,14,15,14,13,13,9,6,7,7,5,5,0,0,0,0,0,-2,-8,-27,-38,-14,-2,-6,1,6,6,8,9,11,15,18,22,25,23,21,20,16,15,16,15,14,14,11,8,8,8,5,6],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
