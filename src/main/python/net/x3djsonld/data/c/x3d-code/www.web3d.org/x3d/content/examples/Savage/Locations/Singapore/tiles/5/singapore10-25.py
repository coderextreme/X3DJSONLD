###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    Shape(
      appearance=Appearance(
        material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
        texture=ImageTexture(url=['../../images/5/singapore10-25.jpg'],repeatS=False,repeatT=False)),
      geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.2995803869799398,103.94891185322548,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=3.9897318E-4,zDimension=23,zSpacing=3.96896E-4,height=[8,7,3,0,0,0,0,1,1,2,2,3,3,3,3,3,2,2,1,1,0,0,0,1,1,2,2,3,3,3,3,2,1,1,0,-1,-4,9,8,4,0,0,0,1,1,2,3,3,3,3,3,3,2,2,2,1,1,0,0,0,1,1,2,2,3,3,2,2,1,0,0,0,-2,-4,9,8,4,0,0,1,1,2,2,3,3,3,3,3,2,2,2,2,1,1,0,0,0,1,1,2,2,2,2,1,1,1,0,0,0,-1,-2,9,8,5,2,1,1,2,3,3,3,3,3,3,2,2,2,2,1,1,1,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,1,10,9,6,3,3,2,2,3,3,3,3,3,2,2,2,2,1,1,1,1,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,3,6,10,9,7,4,3,3,3,3,3,3,3,2,2,2,2,1,1,1,1,0,0,0,0,0,1,1,1,1,1,0,0,0,0,1,4,8,13,10,9,7,5,4,3,3,3,3,3,2,2,2,2,1,1,1,1,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,4,9,14,20,13,11,9,7,5,4,3,3,3,2,2,2,2,1,1,1,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,2,5,9,15,19,22,19,14,12,9,7,6,4,3,2,2,2,2,1,1,1,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,5,10,15,21,22,23,21,16,15,13,11,8,7,5,5,4,4,5,4,4,4,4,4,4,3,2,1,0,0,1,1,0,0,0,0,2,5,10,15,20,23,21,19,20,18,18,17,14,11,10,9,9,9,9,9,9,9,9,9,9,9,8,7,4,2,1,1,0,0,0,0,1,6,10,16,21,23,23,17,11,20,18,18,17,14,12,11,11,11,11,11,11,12,13,14,15,15,15,14,12,9,6,4,3,2,2,2,2,5,11,16,20,23,21,19,12,6,19,18,16,14,13,11,11,11,11,11,12,12,14,17,19,21,22,21,20,19,16,12,9,7,5,5,5,7,10,16,21,23,23,17,11,7,3,18,17,15,12,12,11,11,11,11,12,12,13,16,20,23,25,25,25,24,22,19,16,13,10,8,8,8,9,12,17,21,21,19,12,6,3,1,16,14,13,11,11,11,11,11,12,12,14,16,19,23,25,26,26,25,24,23,21,18,15,13,11,10,10,11,12,15,17,15,12,7,3,1,1,14,12,12,11,11,11,11,12,12,13,16,19,22,25,26,27,27,26,25,23,21,19,16,14,13,12,11,12,12,13,13,11,8,4,1,1,1,13,11,11,11,11,11,12,12,13,15,18,21,24,25,27,28,28,27,26,23,21,19,16,14,13,12,12,12,12,12,11,9,5,3,1,1,1,12,11,11,11,11,12,12,13,15,17,20,23,25,26,27,28,28,28,26,24,21,19,16,14,13,12,12,12,12,11,10,7,4,2,1,1,1,11,11,11,11,12,12,13,14,16,19,21,23,25,27,28,29,29,28,27,24,22,19,16,14,13,12,12,12,11,11,10,8,5,3,1,0,0,11,11,11,12,12,12,14,16,18,20,22,23,25,27,29,30,30,29,27,25,22,19,16,14,13,12,12,12,11,10,10,8,6,4,2,2,2,11,11,12,12,12,14,15,17,19,20,22,23,26,28,30,31,31,30,28,25,22,18,16,14,13,12,11,11,11,10,9,8,7,6,5,5,5,11,12,12,12,13,15,17,18,19,21,22,23,25,28,31,32,32,31,29,25,21,18,16,14,13,12,11,10,10,9,8,8,8,9,9,10,11,12,12,12,12,14,16,17,19,20,21,21,22,25,28,31,33,34,33,29,25,21,18,15,14,12,11,11,10,9,8,8,8,8,11,14,17,18],
        geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])))])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
