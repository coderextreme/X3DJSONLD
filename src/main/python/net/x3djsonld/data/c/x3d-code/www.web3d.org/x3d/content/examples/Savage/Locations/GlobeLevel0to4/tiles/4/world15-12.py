###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    Shape(
      appearance=Appearance(
        material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0,0.05,0)),
        texture=ImageTexture(url=['../../images/4/world15-12.jpg'],repeatS=False,repeatT=False)),
      geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(78.7083383624419,89.95834137992705,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=22,xSpacing=1.0714287,zDimension=24,zSpacing=0.48913044,height=[-50,-26,-44,-31,-33,-31,32,43,-60,0,9,47,69,37,119,212,302,154,171,363,346,35,-14,-34,-31,-24,-55,-14,-37,-51,0,-28,-26,-6,77,261,174,200,118,-10,-6,1,4,1,-14,-9,-27,-59,-66,-59,-66,-57,-67,-125,-79,-34,43,170,161,24,-10,1,-41,-45,-41,-43,-46,-39,-22,-36,-60,-89,-79,-54,-102,-107,-102,-139,-128,-147,-54,-143,-149,-191,-234,-252,-267,-263,-101,-54,-40,-19,-20,-35,-31,-102,-163,-183,0,178,52,50,-59,-132,8,-20,-32,-50,-70,-299,-142,-99,-65,-79,-89,-59,-87,-63,-49,-32,-173,360,619,360,629,32,-190,-207,-268,-224,-255,-425,-168,-128,-113,-100,-66,6,710,564,122,559,0,-277,1,1,-90,-150,-223,-316,-398,-1078,-1776,-2050,-105,-97,-11,1,0,193,146,15,58,463,25,-180,-220,-252,-336,-401,-448,-774,-1768,-2253,-2609,-2777,-204,-145,-52,1,23,362,269,306,-94,-90,-43,-50,-92,-194,-668,-1196,-1940,-2330,-2549,-2804,-3025,-3199,-205,-127,-100,-37,6,485,562,206,18,-46,-108,-201,-350,-852,-1750,-2495,-2824,-2885,-3111,-3145,-3398,-3406,-111,-49,-25,-103,-72,-168,63,-51,-199,-315,-389,-958,-1788,-2061,-2370,-2631,-3014,-3212,-3375,-3414,-3436,-3450,-158,-85,-97,-148,-211,-118,-634,-1345,-1730,-1893,-2326,-2513,-2685,-2888,-3169,-3259,-3343,-3402,-3399,-3430,-3464,-3486,-1580,-1847,-2150,-2285,-2317,-2381,-2450,-2759,-3000,-2971,-3009,-3109,-3188,-3235,-3308,-3373,-3410,-3472,-3538,-3571,-3558,-3555,-2624,-2777,-2965,-3008,-3039,-3144,-3167,-3202,-3190,-3209,-3280,-3346,-3396,-3411,-3466,-3537,-3571,-3590,-3600,-3601,-3575,-3533,-3153,-3170,-3310,-3394,-3401,-3400,-3408,-3405,-3399,-3420,-3455,-3446,-3458,-3504,-3545,-3570,-3562,-3525,-3311,-3366,-3596,-3527,-3590,-3597,-3600,-3600,-3600,-3600,-3608,-3618,-3608,-3604,-3606,-3612,-3621,-3610,-3605,-3595,-3556,-3556,-3563,-3157,-3143,-3458,-3576,-3579,-3591,-3611,-3639,-3673,-3653,-3640,-3630,-3638,-3605,-3581,-3615,-3700,-3801,-3608,-3833,-3989,-4171,-4198,-4130,-4085,-3466,-3419,-3379,-3423,-3610,-3244,-3114,-3283,-3740,-3843,-3847,-4054,-4218,-4130,-3964,-3769,-3785,-3839,-3774,-3759,-3825,-3892,-3840,-3218,-3579,-3645,-3951,-4158,-3871,-3805,-3699,-3361,-3161,-2878,-3485,-3944,-3980,-3610,-3927,-3994,-4254,-4251,-4218,-4190,-3806,-3879,-3944,-3835,-3804,-3799,-3802,-3837,-3868,-3907,-4093,-4196,-3920,-4262,-4225,-4400,-4258,-4398,-4459,-4284,-4404,-4419,-4077,-4178,-4377,-4392,-4296,-4146,-4264,-4257,-4252,-4254,-4255,-4216,-4075,-4266,-4265,-4247,-4268,-4271,-4270,-4270,-4270,-4270,-4273,-4249,-4057,-3906,-3896,-4053,-4181,-4247,-4266,-4276,-4279,-4279,-4277,-4274,-4271,-4267,-4264,-4264,-4268,-4273,-4277,-4280,-4313,-4266,-4231,-4243,-4260,-4266,-4269,-4270,-4270,-4276,-4282,-4290,-4304,-4326,-4335,-4203,-4225,-4248,-4270,-4305,-4325,-4330,-4295,-4265,-4252,-4251,-4254,-4257,-4260,-4260,-4259,-4259,-4258,-4260,-4262,-4262,-4263,-4302,-4305,-4255,-4252,-4326,-4303,-4296],
        geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(0.0,0.0,-6378137.0),geoSystem=['GDC'])))])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
