###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    Shape(
      appearance=Appearance(
        material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0,0.05,0)),
        texture=ImageTexture(url=['../../images/4/world9-4.jpg'],repeatS=False,repeatT=False)),
      geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(11.208336350785146,-90.04166398449098,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=22,xSpacing=1.0714287,zDimension=24,zSpacing=0.48913044,height=[-3695,-3472,-3286,-3154,-2298,20,1590,-606,-2462,-1578,-661,-1856,-3053,-214,251,117,1881,-81,25,892,299,505,-3825,-3355,-3267,-3177,-125,378,175,-1417,-2684,-3376,-2785,-2384,-2875,-1467,11,106,2669,8,353,626,408,462,-3730,-3466,-2866,-4497,-191,148,16,-1880,-2833,-3455,-3540,-3476,-3317,-2678,51,243,203,75,377,992,311,-233,-3673,-3487,-3644,-657,-85,31,-18,-2261,-2883,-3336,-3400,-3551,-3402,-2897,-909,241,47,2,-14,169,80,-1161,-3638,-4016,-3505,-65,90,178,34,-1578,-2608,-3463,-2667,-3734,-3586,-3200,-3139,-1642,-10,58,-97,-6,-1277,-1641,-4623,-3467,-370,-22,79,255,29,-29,-1239,-2966,-3279,-3101,-3763,-3530,-3708,-3676,-860,-4,-42,-278,-1594,-2641,-2669,-296,-114,106,517,264,49,-3,-1560,-1760,-3306,-3440,-3875,-3734,-3869,-3915,-2770,-808,-107,-1265,-2646,-3923,-153,-12,496,458,1004,105,20,-3,-1840,-2151,-3303,-3773,-3988,-3931,-3961,-3905,-2827,-1956,-2065,-3076,-4001,-4122,-19,1344,873,893,975,129,9,-17,-935,-1712,-2528,-2393,-4022,-4055,-4007,-4088,-4099,-4246,-4609,-4920,-5193,-5060,608,707,1540,1190,928,365,49,-3,-805,-1449,-2424,-1846,-4085,-4105,-4094,-3924,-3562,-3101,-3628,-4552,-4710,-5157,883,691,447,821,347,150,49,-7,-113,-1871,-2341,-2179,-4017,-4115,-4192,-4162,-3226,-3222,-3913,-4009,-4499,-4715,1530,339,729,1044,813,347,9,-3,-1,-1284,-1984,-2287,-3000,-3387,-4105,-4161,-3278,-3705,-4207,-3788,-4358,-4579,328,550,-155,7,31,953,-22,-4,-110,-1185,-1934,-2211,-2784,-2732,-3205,-4154,-3011,-3372,-4021,-3776,-4095,-4586,130,444,-308,-2295,-1263,-1077,-594,-46,-89,-1,-1214,-1287,-2227,-1942,-2534,-3994,-4061,-3101,-3994,-4051,-4163,-4487,152,388,0,-3391,-5048,-1333,-1652,-659,-278,-11,-1059,-539,-1948,-2053,-1945,-3135,-4349,-1515,-4057,-4389,-4634,-4745,81,174,-3,-3365,-4353,-4624,-2063,-1973,-1070,-961,-1557,-280,-377,-2061,-1789,-3344,-4259,-4268,-3889,-5048,-5444,-4769,162,109,-4,-3755,-4359,-4906,-5597,-5801,-4203,-1864,-1358,-1067,-45,-859,-1040,-3350,-3475,-4289,-3686,-1923,-2072,-2590,74,224,3,-2324,-4534,-2864,-5299,-4317,-5181,-4809,-4332,-575,743,-2060,-846,109,460,481,-614,-1379,2,-516,76,184,1,-1622,-4549,-3747,-1602,-3935,-6300,-4351,-4888,-5012,-4675,-2731,-1911,-3388,42,609,765,51,85,-924,12,97,31,-1449,-4585,-4583,-2936,-3691,-1532,-3090,-7261,-5736,-4989,-3308,-3052,-1644,-1519,747,536,5,-2342,-5374,13,92,22,-1169,-4620,-4573,-4019,-3344,-3163,-2713,-952,-1107,-2965,-6260,-3702,-3413,318,-18,136,-4014,-4054,-8347,3,28,31,-46,-3726,-4717,-4022,-4235,-2938,-2058,-2773,-1775,-6,117,143,-312,-1915,-2926,-4182,-1692,-4903,-5219,5,17,24,11,-1233,-4508,-4530,-4539,-3889,-3853,-3479,-1,9,80,-594,-1679,-1165,-4153,-733,-587,-5172,-5262,4,18,22,17,-1225,-4522,-4445,-4582,-4119,-4000,-3535,-9,27,131,-1044,-1597,-1345,-3133,-94,-2386,-5229,-5348],
        geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(0.0,0.0,-6378137.0),geoSystem=['GDC'])))])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
