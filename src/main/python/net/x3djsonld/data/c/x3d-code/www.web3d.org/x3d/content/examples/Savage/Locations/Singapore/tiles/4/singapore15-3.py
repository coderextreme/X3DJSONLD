###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_153',geoSystem=['GDC'],position=(1.4829463469178132,103.69037723890314,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.4829463469178132,103.69037723890314,0.0),range=4101.627,child1Url=['../../tiles/5/singapore30-6.x3d'],child2Url=['../../tiles/5/singapore30-7.x3d'],child3Url=['../../tiles/5/singapore31-6.x3d'],child4Url=['../../tiles/5/singapore31-7.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore15-3.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.4742146345398193,103.67601420477412,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[17,15,9,10,11,13,15,14,18,18,16,17,17,16,14,12,10,10,12,13,14,14,12,10,9,7,7,7,9,10,13,14,16,18,14,12,11,16,14,10,10,11,13,15,15,17,18,17,17,18,16,13,12,11,10,11,12,13,14,13,12,11,9,7,8,10,11,13,14,16,18,14,11,10,16,14,12,11,11,13,16,16,17,17,17,17,18,15,12,12,11,11,10,10,12,14,13,14,13,10,7,8,11,13,14,15,16,17,12,11,10,15,14,13,12,11,13,15,16,16,16,17,17,17,15,12,12,12,11,10,10,11,14,14,14,13,11,8,9,12,13,14,14,15,14,9,8,8,14,15,14,12,11,12,14,15,15,15,17,16,15,14,12,13,13,12,11,11,12,13,13,12,12,11,10,9,12,14,13,13,14,11,5,4,4,12,13,12,10,10,13,14,14,15,15,17,15,14,14,13,13,14,12,12,11,11,12,12,12,12,12,12,9,11,14,13,12,13,10,3,3,4,10,10,10,8,10,14,14,13,14,16,16,14,14,15,14,14,13,13,12,10,10,11,11,11,12,13,13,10,9,13,12,12,12,11,3,4,5,9,8,9,9,12,16,14,13,14,16,16,14,15,15,15,15,15,14,12,10,10,11,11,12,14,15,14,11,10,13,12,12,11,9,3,4,5,9,8,8,10,15,17,15,13,15,17,16,16,16,16,16,17,17,15,13,10,11,11,12,14,16,16,16,14,13,14,13,13,10,7,2,4,6,8,8,9,12,16,18,16,13,14,17,16,17,18,17,17,18,18,16,13,12,13,13,14,16,17,17,17,14,15,15,14,13,8,5,2,5,7,8,9,11,14,16,16,15,13,14,16,16,18,20,20,19,20,19,16,14,14,16,16,16,17,17,18,17,15,15,15,14,11,6,4,3,7,7,7,10,13,15,15,15,15,14,14,16,17,19,21,21,20,20,17,15,14,16,17,17,18,19,18,18,17,14,15,15,13,9,6,4,3,8,8,7,12,14,15,14,14,15,17,17,16,19,21,22,23,21,17,15,14,15,16,17,19,20,21,18,17,16,13,13,13,12,7,6,4,3,8,9,9,14,15,16,14,14,16,19,18,17,20,22,24,24,21,17,14,14,15,17,19,20,23,22,18,16,15,13,12,12,10,7,6,4,4,8,9,11,15,16,14,14,15,17,19,20,19,21,23,25,25,22,17,14,14,16,19,21,23,24,22,17,15,14,12,11,10,8,7,5,4,5,7,8,12,16,16,13,15,17,19,20,21,21,21,24,26,26,23,18,15,16,18,21,22,24,24,22,17,14,13,11,10,8,7,6,5,4,5,7,7,14,16,16,13,15,18,20,21,22,22,22,24,26,25,22,18,17,19,21,22,23,24,23,21,17,14,12,11,10,7,5,5,5,4,4,7,7,15,17,16,13,16,18,21,22,23,23,23,24,26,25,22,18,19,22,24,23,23,24,23,20,16,13,12,11,10,7,5,5,5,4,3,7,8,17,17,16,13,16,19,23,23,24,24,24,25,26,24,22,20,21,23,25,23,23,24,22,19,14,12,11,10,9,7,5,5,5,4,4,7,8,18,17,16,14,16,20,24,25,24,24,24,26,26,24,22,21,22,24,24,23,22,23,21,17,13,11,10,9,9,7,6,6,4,2,5,7,8,18,18,18,16,16,20,24,25,25,25,25,26,26,24,23,23,23,24,24,23,22,21,19,16,13,10,9,9,9,8,7,6,3,-1,4,6,7,17,19,20,17,16,20,24,26,26,26,26,26,26,25,24,24,24,24,24,22,21,19,17,15,12,9,9,9,9,8,8,5,1,-1,4,5,6,16,19,22,20,17,20,23,25,26,28,28,27,27,27,25,25,24,24,24,22,20,18,15,13,11,9,9,9,8,7,8,4,-1,-1,4,4,5,14,19,23,22,19,20,22,25,27,29,29,28,28,28,27,25,25,24,23,22,20,17,13,11,9,8,9,9,7,7,8,3,-1,1,3,3,3,12,17,22,23,19,19,22,26,28,29,30,30,29,29,28,26,25,25,24,21,20,17,13,10,8,8,9,8,7,7,8,5,-1,2,3,3,4,10,16,22,23,19,19,22,26,28,29,32,31,30,30,30,27,26,26,24,21,20,17,12,9,8,8,9,8,8,8,8,8,3,4,4,3,4,10,17,22,21,19,20,23,28,29,30,32,32,31,31,30,28,27,26,25,22,21,18,13,9,8,8,9,9,8,7,8,8,5,5,5,4,4,12,19,23,21,19,21,24,30,30,31,32,32,32,30,30,28,27,27,25,24,22,20,13,9,8,8,8,10,8,6,7,8,7,6,5,5,4,16,20,24,20,19,21,24,29,30,31,32,32,31,30,30,28,28,27,25,24,23,19,12,8,8,8,9,10,8,6,6,7,7,7,6,5,3,19,22,25,21,19,21,24,28,30,31,31,31,30,29,29,29,29,27,25,23,22,18,11,6,8,8,9,10,9,7,6,6,7,6,7,4,2,21,23,25,20,19,21,24,28,30,31,30,30,29,29,29,29,27,27,25,21,19,16,10,7,8,8,8,8,9,7,6,6,7,6,6,3,1,22,24,25,18,19,21,24,28,31,30,29,29,28,28,29,29,26,24,24,19,16,12,8,8,8,7,6,7,9,7,6,6,8,6,4,3,-1,21,24,25,20,20,22,26,29,31,30,29,29,28,26,27,26,22,21,20,16,13,10,7,8,8,7,6,7,8,7,6,6,6,5,4,3,1,19,24,25,22,21,23,27,29,31,31,29,28,27,24,23,23,18,16,16,13,11,8,6,8,8,7,7,7,8,7,6,5,4,5,4,4,4,18,23,25,24,22,24,28,30,31,32,29,28,26,23,21,21,16,13,12,10,9,7,8,9,7,5,5,6,9,7,6,3,4,7,6,3,4,18,23,25,25,23,26,30,31,32,32,30,28,26,22,19,19,14,10,9,9,7,7,9,10,6,3,4,4,9,7,5,1,4,11,9,2,3,18,24,27,27,25,26,30,31,33,33,30,27,25,21,18,17,12,8,8,8,7,6,7,7,4,3,4,2,4,4,3,2,3,9,8,3,4,20,26,29,29,26,27,29,29,34,33,30,27,24,20,16,15,11,8,7,7,8,5,4,4,1,2,3,-1,-1,-1,2,4,3,5,6,6,6,22,27,32,31,27,27,29,29,32,31,28,26,24,19,16,13,10,8,7,7,8,6,4,4,1,2,3,-1,-1,-1,-1,4,4,4,6,6,7,24,28,34,32,28,28,29,29,30,29,26,26,23,18,15,13,9,8,7,7,7,6,5,5,3,2,2,-1,-1,-1,-1,3,5,5,6,5,6,25,29,34,33,29,28,29,30,30,27,25,24,22,17,15,12,9,7,7,7,6,6,7,7,6,4,3,1,-1,1,1,3,6,6,7,6,7,26,29,35,34,29,29,30,30,30,27,25,23,20,16,15,12,8,6,7,7,4,4,9,9,9,7,5,4,5,4,3,4,6,7,8,8,8,28,29,35,35,30,29,30,30,29,26,24,22,19,15,15,11,7,6,7,7,3,3,8,9,8,7,6,5,6,6,5,5,7,8,9,9,9,29,29,35,35,31,30,30,28,27,25,22,21,18,14,15,11,6,6,8,7,3,1,6,8,7,6,5,4,5,6,6,6,8,8,10,9,10],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
