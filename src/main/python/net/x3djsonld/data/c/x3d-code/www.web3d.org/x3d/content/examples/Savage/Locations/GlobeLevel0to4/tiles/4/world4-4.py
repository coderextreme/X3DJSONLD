###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    Shape(
      appearance=Appearance(
        material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0,0.05,0)),
        texture=ImageTexture(url=['../../images/4/world4-4.jpg'],repeatS=False,repeatT=False)),
      geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(-45.04166532559549,-90.04166398449098,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=22,xSpacing=1.0714287,zDimension=24,zSpacing=0.48913044,height=[-3973,-3963,-3829,-4157,-4097,-4298,-3447,-3530,-3605,-3366,-3105,-2384,-2922,-2519,-208,22,163,810,627,389,263,669,-4133,-4034,-4080,-3782,-3856,-3497,-3907,-3619,-3313,-3600,-3256,-2509,-2969,-3318,-805,-8,505,430,711,877,766,624,-4185,-4056,-3965,-3793,-3755,-3623,-3182,-3378,-3094,-2877,-4066,-2759,-2913,-3276,-6,135,686,860,736,843,758,653,-4152,-4021,-3897,-3648,-3576,-3589,-3528,-3067,-3182,-3512,-3485,-3355,-3444,-3259,-941,-1,890,593,851,1100,469,412,-4212,-4097,-3642,-3465,-3428,-3499,-3274,-2519,-3174,-3431,-3537,-3472,-3313,-3483,-714,-141,-6,695,949,694,488,343,-4055,-3989,-3801,-3459,-3579,-3304,-2948,-2699,-3222,-3417,-3409,-3593,-3205,-3407,-879,181,-97,656,627,1161,555,290,-3893,-3874,-3858,-3617,-3391,-3125,-2687,-2878,-3287,-3352,-3390,-3581,-3579,-3643,-1423,107,-2,968,844,432,1378,1294,-3689,-3519,-3631,-3628,-3323,-2891,-2363,-3265,-3349,-3486,-3469,-3720,-3429,-3659,-2097,55,-276,859,906,881,1738,1207,-3344,-3307,-3004,-3647,-3026,-3695,-2874,-3635,-3626,-3219,-3567,-3640,-3673,-3535,-2409,-153,-12,791,1220,1223,1008,1003,-3994,-3227,-3750,-2969,-3471,-3467,-3286,-3899,-4028,-3720,-3610,-3596,-3665,-3800,-2771,-170,116,2481,1164,1149,897,863,-3390,-3474,-3678,-3725,-3268,-3141,-3768,-4322,-3958,-4189,-3929,-3547,-3808,-3812,-4108,-169,86,1362,1021,1258,1097,866,-3488,-3668,-3794,-3834,-4215,-4383,-4204,-4197,-4217,-4359,-4225,-4653,-4133,-3808,-4201,-420,246,590,859,810,998,714,-3096,-3413,-3584,-3810,-4108,-4263,-3988,-3736,-4018,-3988,-4121,-3881,-3837,-3887,-4414,-715,19,324,1091,523,673,588,-3167,-3387,-3484,-3779,-3952,-4387,-4121,-3927,-3618,-3910,-3934,-4128,-3809,-4058,-4357,-1029,23,1006,1548,920,320,463,-3227,-3492,-3457,-3610,-3723,-4163,-4046,-3921,-3878,-3973,-4103,-4123,-3955,-4118,-4372,-998,51,743,1733,740,525,317,-3266,-3437,-3552,-3571,-3077,-4233,-3890,-3950,-4095,-3966,-4132,-4207,-4119,-3992,-4337,-534,206,1065,1639,604,334,367,-3816,-3626,-4328,-4158,-3651,-4101,-4054,-4031,-4051,-4035,-4023,-4146,-4096,-4125,-4352,-1616,775,310,1592,1257,892,397,-3624,-4185,-4255,-3984,-3973,-4120,-4105,-3743,-3920,-4032,-4038,-4092,-4094,-4012,-4199,-1622,211,361,1551,1089,911,590,-3710,-3742,-3991,-3962,-3821,-3849,-3903,-3213,-3891,-4071,-4118,-4006,-4059,-3913,-4022,-4104,-67,259,1918,990,1078,713,-3799,-3721,-3631,-3861,-4477,-3754,-4106,-3973,-3879,-4063,-4023,-4040,-4035,-4005,-4142,-3999,-102,163,1627,1431,1580,767,-3828,-3858,-3870,-3877,-4052,-3893,-3837,-3719,-3985,-3982,-3961,-4004,-4101,-4180,-4213,-5005,-158,505,2060,2317,2238,764,-3675,-3842,-3781,-4167,-4011,-3872,-3955,-3723,-3755,-3790,-3944,-4096,-3965,-4123,-4207,-4925,-1287,392,1896,1841,1308,497,-3532,-3917,-3966,-3747,-3932,-3951,-3892,-3872,-3522,-3815,-4019,-3999,-3999,-3930,-3968,-4201,-2603,99,656,3006,1092,534,-3440,-4021,-3919,-3845,-3920,-3944,-3797,-3845,-3606,-3841,-4072,-4145,-3970,-3948,-3843,-4318,-2730,127,1266,2937,1018,533],
        geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(0.0,0.0,-6378137.0),geoSystem=['GDC'])))])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
