###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoLOD(center=(41.633608209223105,-71.25259576739519,0.0),range=3075.1726,child1Url=['../../tiles/6/newport42-48.x3d'],child2Url=['../../tiles/6/newport42-49.x3d'],child3Url=['../../tiles/6/newport43-48.x3d'],child4Url=['../../tiles/6/newport43-49.x3d'],
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(41.5,-71.5,0),geoSystem=['GDC']),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0,0.05,0)),
            texture=ImageTexture(url=['../../images/5/newport21-24.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(41.62151324149466,-71.26358768093407,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=54,xSpacing=4.147892E-4,zDimension=60,zSpacing=4.099989E-4,height=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-1,-2,-2,-1,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,-2,-2,-2,-3,-1,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3,-2,-2,-3,-8,-1,-1,-2,0,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-4,-3,-3,-4,-7,-3,-3,-2,-2,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-4,-4,-3,-5,-8,-5,-4,-3,-3,-2,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-4,-4,-4,-5,-8,-6,-4,-4,-3,-3,-2,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-5,-4,-4,-5,-8,-6,-5,-4,-4,-3,-3,-2,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-6,-5,-5,-7,-8,-7,-5,-5,-4,-4,-3,-2,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-9,-8,-8,-8,-8,-7,-7,-6,-5,-4,-4,-3,-2,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-12,-11,-10,-9,-9,-8,-7,-6,-6,-5,-4,-3,-2,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-13,-12,-11,-10,-10,-9,-8,-7,-7,-6,-6,-4,-3,-2,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-14,-13,-12,-11,-11,-10,-9,-8,-8,-7,-7,-6,-5,-3,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-16,-14,-13,-12,-11,-11,-10,-9,-8,-8,-7,-7,-6,-4,-3,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-19,-16,-14,-13,-12,-11,-11,-11,-9,-8,-8,-7,-6,-5,-3,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-21,-19,-17,-14,-12,-11,-10,-10,-9,-9,-8,-7,-7,-6,-4,-2,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-22,-21,-20,-16,-13,-11,-9,-9,-9,-9,-8,-7,-6,-5,-4,-2,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-23,-22,-21,-19,-16,-13,-10,-9,-9,-9,-8,-7,-5,-5,-3,-2,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-22,-23,-23,-22,-19,-14,-12,-10,-10,-9,-8,-7,-5,-5,-4,-2,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-21,-23,-23,-23,-22,-18,-15,-13,-11,-10,-9,-7,-6,-5,-4,-3,-2,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-18,-22,-23,-23,-23,-21,-18,-16,-13,-12,-10,-9,-7,-6,-4,-3,-2,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-16,-19,-22,-23,-23,-23,-21,-18,-15,-13,-11,-9,-8,-6,-4,-3,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-15,-16,-19,-22,-23,-23,-23,-22,-19,-15,-11,-8,-7,-6,-4,-3,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-14,-15,-17,-19,-22,-23,-24,-23,-22,-18,-15,-10,-6,-5,-4,-3,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-13,-15,-16,-18,-19,-22,-23,-24,-24,-22,-18,-13,-8,-5,-5,-3,-2,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-13,-14,-16,-17,-17,-19,-23,-24,-24,-24,-21,-18,-13,-9,-6,-3,-2,-1,-1,0,0,0,-1,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-12,-13,-14,-15,-15,-17,-20,-23,-24,-24,-23,-21,-17,-14,-10,-6,-2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-12,-13,-13,-13,-14,-15,-17,-21,-23,-24,-24,-23,-20,-17,-13,-9,-4,-3,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-1,0,-1,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-11,-12,-12,-13,-13,-14,-15,-18,-20,-23,-24,-24,-22,-18,-16,-13,-11,-8,-6,-5,-5,-5,-4,-3,-3,-3,-3,-2,-2,-2,-2,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-11,-11,-12,-12,-13,-14,-14,-15,-17,-20,-24,-24,-24,-21,-17,-16,-15,-13,-10,-8,-6,-6,-5,-4,-4,-4,-3,-3,-3,-2,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-10,-11,-11,-12,-13,-14,-14,-14,-14,-16,-18,-24,-24,-23,-20,-18,-17,-15,-13,-11,-8,-7,-6,-5,-5,-5,-4,-3,-3,-3,-3,-2,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-10,-10,-11,-11,-12,-12,-13,-13,-13,-14,-16,-22,-24,-24,-22,-20,-19,-18,-16,-14,-12,-10,-8,-7,-7,-6,-5,-4,-4,-4,-3,-2,-2,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-9,-10,-10,-10,-11,-11,-12,-13,-12,-12,-15,-20,-23,-24,-23,-22,-21,-20,-19,-17,-15,-13,-11,-9,-8,-7,-6,-5,-5,-4,-4,-3,-2,-2,-2,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-8,-9,-10,-10,-10,-10,-11,-11,-11,-12,-13,-16,-20,-22,-23,-24,-23,-22,-21,-20,-18,-17,-14,-13,-10,-8,-8,-7,-6,-6,-5,-4,-4,-3,-2,-1,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-7,-8,-8,-9,-9,-9,-9,-9,-10,-11,-11,-13,-16,-19,-22,-23,-24,-24,-24,-23,-22,-20,-19,-16,-14,-12,-10,-9,-8,-7,-7,-6,-4,-3,-3,-2,-2,-2,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-7,-7,-7,-8,-8,-8,-8,-8,-8,-9,-10,-11,-12,-14,-17,-21,-23,-23,-24,-24,-24,-23,-21,-20,-17,-15,-13,-11,-9,-9,-8,-7,-6,-4,-3,-3,-3,-2,-2,-2,-1,-1,0,0,0,0,0,0,-1,0,0,0,0,-1,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-8,-9,-11,-12,-13,-15,-18,-20,-23,-24,-24,-24,-23,-22,-20,-18,-15,-13,-11,-10,-9,-9,-7,-6,-4,-4,-3,-3,-3,-3,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-2,-7,-7,-7,-7,-6,-6,-6,-6,-6,-6,-7,-8,-9,-10,-11,-12,-13,-15,-20,-22,-23,-24,-23,-23,-21,-20,-18,-16,-14,-12,-11,-10,-9,-7,-6,-5,-4,-4,-4,-3,-3,-3,-2,-2,-3,-3,-3,-3,-3,-3,-3,-3,-3,-3,-7,-7,-7,-6,-6,-5,-5,-5,-5,-5,-6,-6,-7,-8,-10,-11,-12,-13,-16,-17,-20,-22,-23,-23,-22,-21,-19,-18,-16,-14,-13,-11,-10,-8,-7,-6,-5,-4,-4,-4,-4,-3,-3,-3,-3,-3,-4,-4,-5,-4,-4,-4,-4,-4,-7,-7,-6,-6,-5,-4,-4,-4,-4,-4,-5,-5,-6,-6,-7,-8,-10,-11,-14,-14,-16,-18,-22,-23,-23,-22,-21,-19,-18,-16,-15,-13,-11,-9,-8,-7,-6,-5,-5,-5,-4,-4,-4,-4,-4,-4,-4,-5,-5,-5,-5,-5,-5,-5,-7,-6,-6,-5,-4,-4,-4,-3,-3,-3,-3,-3,-3,-3,-4,-5,-6,-6,-10,-12,-14,-17,-20,-23,-24,-23,-22,-21,-19,-18,-16,-15,-13,-11,-9,-8,-7,-6,-6,-5,-5,-5,-5,-5,-5,-5,-4,-4,-5,-5,-5,-5,-5,-5,-7,-6,-5,-4,-3,-2,-2,-2,-2,-2,-2,-2,-2,-1,-1,-1,-2,-4,-7,-10,-12,-14,-19,-22,-24,-24,-23,-22,-21,-19,-17,-16,-14,-13,-10,-9,-8,-7,-6,-6,-6,-6,-6,-6,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-6,-6,-5,-3,-2,-1,-2,-1,-2,-2,-2,-1,-1,-1,-1,0,-1,-3,-6,-9,-12,-14,-18,-22,-24,-24,-23,-22,-21,-20,-18,-16,-15,-13,-11,-9,-8,-7,-7,-7,-7,-6,-6,-6,-6,-6,-6,-6,-5,-5,-5,-5,-5,-6],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
