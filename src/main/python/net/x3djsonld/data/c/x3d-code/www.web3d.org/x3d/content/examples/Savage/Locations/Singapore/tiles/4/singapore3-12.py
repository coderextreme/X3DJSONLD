###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_312',geoSystem=['GDC'],position=(1.273385249845958,103.94891185322548,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.273385249845958,103.94891185322548,0.0),range=4101.627,child1Url=['../../tiles/5/singapore6-24.x3d'],child2Url=['../../tiles/5/singapore6-25.x3d'],child3Url=['../../tiles/5/singapore7-24.x3d'],child4Url=['../../tiles/5/singapore7-25.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore3-12.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.264653537467964,103.93454881909646,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[3,2,3,4,6,8,9,8,7,9,10,4,5,7,10,6,17,31,31,6,6,7,9,10,14,6,1,-2,0,2,3,11,5,4,5,4,4,5,4,5,4,5,8,5,6,8,7,8,3,4,5,9,10,17,43,51,12,5,5,8,9,8,-2,-2,-3,1,0,2,11,6,5,8,8,7,5,5,6,4,4,6,3,4,7,5,6,3,4,3,8,12,17,44,56,17,5,5,8,8,3,-5,-3,-3,3,0,1,11,7,7,11,11,9,3,5,4,3,4,5,3,5,5,5,5,5,7,5,7,12,15,25,34,19,7,6,8,6,4,0,0,0,7,1,1,9,6,10,14,11,8,2,4,3,3,5,5,4,5,5,4,4,6,10,7,7,10,11,9,15,20,10,8,8,4,6,7,4,4,10,3,2,6,6,12,14,10,7,5,5,4,4,5,6,6,4,3,5,5,6,11,6,7,8,7,5,11,18,13,7,5,2,9,9,7,5,9,6,2,3,5,8,9,6,5,9,6,5,6,6,7,7,3,3,5,7,6,11,6,8,4,3,4,10,15,16,6,1,0,11,10,8,5,7,9,3,1,3,5,5,3,3,9,7,5,6,6,5,5,3,3,5,10,10,9,7,9,2,3,7,10,10,8,5,0,0,8,8,6,4,5,10,4,0,1,2,6,6,4,10,8,5,4,5,4,3,4,2,4,12,12,8,8,9,1,4,10,10,6,2,4,1,0,7,6,3,3,4,12,6,0,1,1,7,9,5,12,11,9,4,4,7,6,6,3,4,8,8,5,5,10,5,7,10,12,7,4,8,6,3,8,8,2,3,3,12,9,2,2,2,5,8,7,13,12,12,5,3,9,8,8,4,4,5,4,3,2,10,10,9,10,12,7,7,10,10,7,11,9,0,3,3,12,11,4,5,5,3,6,9,12,12,13,5,1,8,7,7,5,7,7,5,5,2,6,9,7,9,7,5,6,9,8,7,11,8,3,7,7,11,9,3,4,5,1,5,9,10,11,14,6,0,5,6,6,6,10,11,7,6,3,4,8,5,8,3,2,5,7,6,7,9,6,5,11,11,10,7,3,3,4,0,4,9,5,10,14,6,0,4,4,6,7,9,9,6,7,8,2,7,5,8,5,2,3,4,9,6,5,2,8,11,11,9,8,4,2,2,1,5,9,0,9,14,7,3,4,2,6,8,7,7,5,7,14,0,6,6,8,7,2,2,1,12,5,1,0,9,10,11,9,9,6,1,0,2,6,9,-1,3,8,6,5,7,5,5,7,5,7,6,13,19,0,6,6,6,6,4,3,-10,11,5,4,1,7,11,15,11,9,4,0,0,3,6,8,-2,-1,2,5,7,11,9,5,7,4,7,7,20,24,1,7,6,3,3,8,4,-25,9,5,8,6,6,14,19,12,8,2,-1,0,3,6,8,1,0,2,6,5,9,9,6,7,6,8,9,19,19,4,3,5,3,4,8,7,-12,7,6,10,11,9,15,22,11,6,5,3,3,3,7,10,6,0,5,9,2,4,8,6,8,10,8,10,17,13,6,0,4,5,4,8,11,4,7,8,13,16,12,17,24,9,3,8,10,6,4,8,12,4,0,8,10,4,4,8,5,6,10,10,15,18,15,8,-3,1,4,4,5,7,5,7,6,11,14,10,12,17,5,1,5,9,6,4,9,11,1,2,11,12,6,5,8,4,3,10,12,20,19,18,11,-6,-2,1,5,1,2,3,6,3,8,10,5,6,8,1,0,1,5,6,6,8,8,2,4,10,10,7,4,5,4,1,8,17,26,16,19,10,-4,-1,0,5,2,1,1,7,5,8,7,2,4,5,1,0,2,6,6,6,6,6,4,5,7,7,6,2,2,4,0,5,23,31,13,17,8,0,0,0,6,4,0,0,8,9,7,3,0,3,4,2,0,4,9,7,4,4,4,4,3,6,6,6,2,2,6,0,9,27,34,15,15,5,0,0,1,6,3,4,2,8,8,6,4,0,3,2,3,0,6,18,11,3,4,4,3,0,3,5,6,2,5,9,2,14,30,36,19,14,0,0,0,2,6,1,9,8,8,4,2,6,3,2,0,4,0,9,30,16,3,4,4,2,-1,1,4,3,3,6,10,8,19,29,28,18,12,0,0,-1,3,4,-1,11,8,5,1,4,9,5,4,5,6,-3,0,20,15,4,4,5,1,-5,-2,1,1,4,7,12,15,22,27,14,12,10,1,1,-3,3,2,-2,10,6,0,-1,7,11,8,7,12,10,-6,-16,0,9,6,5,5,3,-2,-4,0,1,6,7,11,15,25,25,7,9,7,0,0,-3,3,3,-3,7,7,2,1,10,13,9,7,13,11,-4,-16,-5,6,7,5,5,5,2,-3,-4,3,8,8,8,10,29,22,4,7,4,-1,-3,0,5,7,-4,3,10,11,6,12,15,11,4,9,12,0,-5,-1,3,7,6,5,6,4,-2,-4,4,10,11,10,12,29,19,3,7,2,-2,-4,2,6,8,0,4,9,13,8,13,22,15,5,7,12,3,3,3,4,8,7,6,5,3,0,-1,5,13,14,16,18,27,15,5,7,0,-1,-4,6,6,5,4,10,5,11,9,14,31,22,9,8,9,4,11,9,6,9,9,7,4,2,0,0,8,15,15,19,23,26,15,8,9,0,0,-3,9,7,3,3,9,1,10,10,14,34,27,12,9,7,5,12,9,5,7,8,7,4,3,2,2,11,19,14,18,27,24,18,14,11,3,1,-2,9,8,1,-2,3,-1,10,11,13,31,31,14,10,4,3,9,5,1,3,3,3,3,3,3,5,13,17,13,16,24,23,19,14,11,5,2,0,11,9,2,-4,0,-2,11,11,11,25,27,12,9,2,4,7,4,0,0,2,4,1,3,4,7,11,12,11,14,17,22,17,9,8,3,2,1,13,8,4,-2,0,0,12,10,11,16,15,7,6,0,5,7,7,2,-2,3,10,1,3,5,9,11,9,10,12,12,20,14,5,5,2,4,4,16,10,6,0,2,2,11,6,7,10,7,4,4,-1,4,6,9,5,0,6,14,2,4,7,11,13,9,9,12,9,15,12,5,2,4,7,8,18,13,9,1,5,3,6,1,3,6,6,4,2,0,1,1,9,10,5,10,15,4,5,8,12,14,11,8,12,8,10,9,5,0,5,9,12,16,12,11,1,5,4,0,-4,0,5,7,6,2,0,0,0,7,11,9,11,14,7,9,9,11,17,14,9,12,9,7,5,3,-4,3,9,16,8,7,12,-1,3,4,-4,-15,-4,6,8,8,1,3,3,0,5,8,7,10,12,11,13,10,9,16,15,10,12,9,4,3,2,-5,1,8,15,4,4,12,-1,1,3,-7,-21,-5,7,9,10,4,5,6,0,2,5,6,9,10,14,17,9,4,10,10,9,12,9,3,6,2,-3,1,7,6,6,6,9,1,2,3,-5,-15,-2,10,11,13,11,8,6,0,0,6,7,7,8,16,19,7,0,4,6,8,12,7,3,7,2,-1,3,8,1,10,10,8,5,4,3,-2,-7,0,12,12,14,14,8,9,2,1,9,9,6,6,18,19,4,-3,0,4,9,13,8,0,4,0,-1,8,14,6,14,13,13,10,7,4,0,-1,2,11,11,7,7,7,15,9,5,11,8,4,5,17,16,1,-7,-2,3,10,13,8,0,2,0,0,11,18,10,15,14,16,14,9,4,1,0,4,10,8,1,2,6,19,14,9,13,8,3,5],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
