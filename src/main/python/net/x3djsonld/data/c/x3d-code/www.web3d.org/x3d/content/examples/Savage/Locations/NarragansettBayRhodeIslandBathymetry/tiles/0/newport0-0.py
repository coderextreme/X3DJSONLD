###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_0_00',geoSystem=['GDC'],position=(41.50056356421022,-71.43945829755604,82004.60226151336),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(41.5,-71.5,0),geoSystem=['GDC'])),
    GeoLOD(center=(41.50056356421022,-71.43945829755604,0.0),range=98405.52,child1Url=['../../tiles/1/newport0-0.x3d'],child2Url=['../../tiles/1/newport0-1.x3d'],child3Url=['../../tiles/1/newport1-0.x3d'],child4Url=['../../tiles/1/newport1-1.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0,0.05,0)),
            texture=ImageTexture(url=['../../images/0/newport0-0.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(41.1135245969,-71.7911995308,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=52,xSpacing=0.013793774,zDimension=52,zSpacing=0.015177999,height=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-18,-19,-22,-21,-18,-19,-41,-33,-24,-13,-13,-19,-17,-18,-21,-21,-19,-21,-23,-29,-29,-26,-26,-26,-28,-28,-32,-32,-32,-32,-34,-38,-38,-46,-51,-58,-45,-37,-34,-33,-32,-31,-31,-31,-34,-38,-41,-35,-33,-31,0,0,-24,-22,-25,-27,-27,-22,-31,-36,-27,-22,-17,-13,-13,-8,-5,-10,-11,-11,-19,-29,-29,-30,-29,-28,-27,-28,-29,-37,-30,-31,-34,-36,-40,-44,-49,-51,-59,-50,-42,-38,-38,-36,-34,-36,-37,-42,-40,-37,-35,-32,0,0,-31,-30,-30,-25,-21,-20,-31,-37,-21,-18,-22,-21,-13,0,0,0,0,0,-10,-28,-27,-27,-28,-25,-23,-22,-21,-41,-35,-32,-34,-38,-39,-42,-44,-48,-51,-52,-47,-43,-40,-37,-39,-38,-39,-45,-34,-33,-35,-34,0,0,-29,-34,-30,-27,-25,-21,-22,-44,-32,-28,-29,-32,-21,0,0,0,0,-4,-22,-36,-33,-32,-32,-25,-17,-24,-33,-42,-37,-33,-34,-36,-37,-39,-41,-43,-46,-49,-46,-42,-38,-36,-39,-41,-40,-40,-37,-36,-36,-36,0,0,-41,-33,-30,-31,-31,-31,-39,-38,-36,-34,-36,-33,-32,-21,-1,-2,0,-14,-25,-36,-38,-37,-35,-31,-31,-33,-38,-40,-37,-36,-35,-34,-36,-37,-37,-38,-41,-44,-46,-48,-46,-41,-39,-39,-41,-38,-36,-36,-38,-37,0,0,-35,-32,-30,-33,-33,-32,-35,-35,-36,-36,-34,-31,-31,-31,-13,-2,0,-7,-16,-36,-39,-36,-34,-32,-32,-33,-37,-36,-35,-34,-33,-31,-33,-35,-36,-36,-39,-39,-40,-43,-47,-47,-44,-41,-39,-36,-34,-34,-37,-38,0,0,-33,-34,-33,-34,-35,-35,-35,-35,-35,-34,-33,-33,-31,-31,-30,-8,0,-8,-26,-36,-38,-36,-37,-36,-34,-33,-35,-38,-37,-36,-35,-34,-34,-35,-35,-38,-38,-37,-38,-38,-41,-44,-45,-43,-42,-40,-36,-36,-38,-39,0,0,-31,-32,-33,-33,-33,-32,-33,-33,-33,-33,-33,-35,-36,-34,-31,-12,-16,-27,-36,-34,-33,-36,-37,-37,-37,-36,-34,-35,-36,-37,-37,-35,-34,-39,-38,-36,-37,-39,-37,-36,-37,-38,-42,-43,-40,-43,-46,-45,-41,-39,0,0,-35,-36,-36,-36,-36,-35,-34,-34,-34,-33,-34,-41,-41,-36,-37,-42,-20,-36,-28,-32,-41,-42,-40,-39,-37,-35,-35,-35,-36,-36,-36,-35,-35,-36,-35,-35,-36,-36,-36,-37,-40,-38,-39,-40,-40,-40,-42,-44,-43,-40,0,0,-38,-37,-42,-38,-38,-37,-37,-37,-37,-37,-36,-39,-43,-41,-32,-28,-33,-50,-46,-45,-43,-42,-42,-42,-39,-39,-37,-38,-37,-37,-38,-38,-38,-39,-36,-34,-32,-33,-38,-38,-38,-36,-34,-34,-37,-38,-38,-40,-40,-40,0,0,-36,-34,-34,-34,-34,-36,-36,-35,-36,-38,-37,-37,-36,-34,-27,-37,-42,-44,-41,-43,-44,-41,-34,-28,-26,-26,-28,-33,-37,-37,-35,-35,-35,-35,-36,-39,-36,-35,-34,-34,-35,-36,-35,-30,-31,-33,-33,-35,-36,-37,0,0,-23,-24,-23,-28,-33,-33,-35,-31,-29,-28,-28,-27,-26,-30,-36,-37,-36,-41,-37,-38,-33,-28,-23,-21,-19,-20,-24,-27,-35,-36,-34,-33,-31,-31,-32,-34,-36,-35,-33,-33,-33,-35,-35,-31,-27,-27,-30,-32,-30,-27,0,0,-11,-13,-17,-19,-22,-25,-23,-28,-27,-26,-25,-25,-20,-20,-22,-26,-33,-35,-32,-28,-26,-21,-19,-18,-20,-20,-23,-32,-34,-35,-34,-34,-30,-29,-30,-30,-33,-34,-35,-32,-31,-31,-33,-32,-29,-29,-29,-31,-25,-25,0,0,-1,0,-1,-1,-6,-4,-6,-8,-9,-12,-14,-17,-19,-17,-18,-20,-23,-24,-22,-22,-19,-16,-14,-15,-21,-23,-28,-32,-33,-34,-35,-30,-29,-28,-28,-29,-30,-31,-33,-34,-36,-34,-31,-33,-34,-29,-31,-29,-27,-21,0,0,0,0,0,0,0,-1,0,0,-5,-10,-9,-10,-14,-15,-15,-12,-13,-16,-17,-15,-13,-12,-15,-15,-23,-27,-30,-32,-33,-34,-34,-33,-34,-31,-29,-29,-29,-28,-29,-29,-29,-30,-31,-32,-31,-28,-28,-26,-26,-29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-5,-6,-7,-8,-9,-11,-11,-11,-7,-9,0,-15,-25,-24,-30,-32,-33,-34,-34,-34,-34,-33,-32,-33,-32,-30,-29,-27,-27,-27,-27,-26,-27,-30,-30,-28,-23,-23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,-1,0,0,-3,-1,0,0,-7,-22,-23,-30,-32,-32,-33,-32,-32,-33,-34,-33,-32,-32,-29,-28,-28,-26,-26,-25,-25,-24,-25,-26,-26,-25,-23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-21,-27,-30,-31,-31,-32,-31,-31,-31,-32,-30,-28,-30,-28,-27,-27,-26,-26,-24,-23,-22,-21,-21,-22,-24,-23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-6,-25,-29,-30,-31,-31,-30,-30,-28,-31,-32,-30,-29,-26,-25,-26,-23,-22,-24,-23,-22,-21,-21,-21,-20,-21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,-19,-23,-26,-29,-28,-28,-26,-24,-28,-29,-27,-25,-24,-24,-23,-21,-21,-21,-22,-23,-24,-21,-19,-19,-19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-8,-18,-21,-25,-20,-25,-13,-16,-18,-24,-25,-24,-23,-23,-21,-21,-19,-19,-18,-17,-19,-21,-20,-17,-18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,-6,-16,0,-36,-24,0,-3,-4,-9,-16,-20,-19,-15,-19,-17,-18,-4,-10,-17,-16,-19,-20,-19,-18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-5,-12,-7,0,-28,-20,0,0,0,0,-13,-16,-10,-13,-17,-16,-12,0,0,-9,-15,-16,-18,-19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-8,-5,-1,0,-4,-30,-3,0,0,-4,0,-6,0,-11,-13,-9,0,0,0,0,-11,-14,-14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-16,-9,0,0,-34,-3,-10,0,0,0,0,0,0,-8,-9,0,0,0,0,0,0,0,-5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-13,-15,0,0,-13,-28,0,0,0,0,0,0,0,-5,-7,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3,-8,0,0,-23,-5,-19,-10,0,0,0,0,0,0,-8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-6,-13,0,0,-20,-12,-22,-12,0,0,0,0,0,-5,-6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-4,-6,-9,-3,0,-13,-11,-16,-16,0,0,0,0,0,-8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-4,-3,-7,-7,-7,-10,-9,-9,-34,-5,0,0,0,0,-2,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-8,-8,-6,-7,-11,0,0,-7,0,0,0,0,-3,-3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-5,-7,-5,-13,-8,0,0,-26,-11,0,0,0,-3,-6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3,-2,-8,-6,-7,-6,-4,0,-14,-16,0,0,0,-1,-7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-4,-7,-6,-7,0,-5,-7,-18,-2,0,-3,0,0,-8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3,-4,-7,0,0,-6,-8,0,-3,-7,0,-18,-7,-9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-2,-5,-5,-8,-4,-6,-9,0,-4,0,0,-1,-10,-5,-8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,-3,0,0,0,-2,-4,-6,-5,-9,-1,0,0,0,0,-4,-3,-7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-4,-5,-5,-6,-3,0,0,0,-2,-4,-4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-8,-4,-4,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-7,-1,0,0,0,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
