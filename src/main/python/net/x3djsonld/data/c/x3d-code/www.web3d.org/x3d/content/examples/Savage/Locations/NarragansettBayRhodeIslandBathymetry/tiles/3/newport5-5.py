###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoLOD(center=(41.64570317695155,-71.30755533508956,0.0),range=12300.69,child1Url=['../../tiles/4/newport10-10.x3d'],child2Url=['../../tiles/4/newport10-11.x3d'],child3Url=['../../tiles/4/newport11-10.x3d'],child4Url=['../../tiles/4/newport11-11.x3d'],
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(41.5,-71.5,0),geoSystem=['GDC']),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0,0.05,0)),
            texture=ImageTexture(url=['../../images/3/newport5-5.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(41.59732330603777,-71.35152298924505,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=55,xSpacing=0.0016284316,zDimension=52,zSpacing=0.0018972498,height=[-7,-8,-8,-8,-8,-9,-11,-13,-11,-5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-17,-29,-28,-19,-20,-24,-22,-19,-18,-17,-15,-14,-7,-1,-2,-1,-1,0,0,0,0,0,0,0,0,0,0,0,-7,-8,-8,-8,-8,-8,-10,-11,-11,-7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-5,-20,-23,-20,-23,-26,-24,-22,-19,-19,-18,-15,-7,-3,-5,-5,-4,0,0,0,0,0,0,0,0,0,0,0,-8,-8,-8,-8,-8,-8,-9,-11,-11,-8,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-8,-18,-12,-13,-20,-24,-22,-21,-20,-19,-19,-8,-6,-7,-7,-6,-3,0,0,0,0,0,0,0,0,0,0,-8,-8,-8,-8,-8,-8,-9,-10,-10,-8,-6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-14,-14,-9,-12,-21,-23,-22,-19,-19,-17,-8,-9,-9,-8,-8,-6,-1,0,0,0,0,0,0,0,0,0,-8,-8,-8,-8,-7,-8,-8,-9,-10,-9,-7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-8,-14,-16,-10,-18,-23,-23,-20,-18,-16,-13,-11,-9,-8,-8,-8,-5,0,0,0,0,0,0,0,0,0,-9,-8,-8,-8,-7,-8,-8,-8,-9,-9,-8,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,-11,-25,-18,-20,-24,-23,-22,-19,-17,-11,-11,-9,-8,-8,-8,-7,-4,0,0,0,0,0,0,0,0,-8,-8,-8,-7,-7,-7,-7,-8,-8,-9,-9,-7,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3,-27,-26,-24,-24,-24,-22,-20,-17,-11,-11,-10,-9,-8,-8,-7,-6,-2,0,0,0,0,0,0,0,-8,-8,-8,-7,-7,-7,-7,-7,-8,-8,-8,-8,-6,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-10,-24,-23,-23,-22,-23,-23,-22,-18,-14,-12,-10,-9,-9,-8,-7,-6,-2,0,0,0,0,0,0,0,-8,-8,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-10,-20,-19,-18,-19,-20,-21,-21,-20,-16,-13,-11,-10,-9,-7,-7,-6,-4,-1,0,0,0,0,0,0,-7,-7,-7,-7,-7,-7,-7,-7,-8,-8,-7,-7,-7,-6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-9,-20,-19,-14,-13,-17,-19,-19,-17,-17,-14,-12,-11,-8,-7,-7,-4,-2,0,0,0,0,0,0,0,-7,-7,-7,-7,-6,-7,-7,-7,-7,-7,-7,-7,-7,-7,-3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-10,-20,-18,-15,-11,-14,-17,-17,-16,-14,-14,-11,-9,-8,-8,-7,-5,-1,0,0,0,0,0,0,0,-7,-7,-6,-6,-6,-7,-7,-6,-6,-6,-6,-6,-7,-7,-5,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-11,-19,-18,-18,-15,-13,-14,-16,-16,-14,-13,-10,-8,-7,-6,-5,-4,-1,0,0,0,0,0,0,0,-7,-6,-7,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-16,-16,-16,-17,-18,-17,-15,-16,-18,-16,-14,-12,-9,-7,-6,-5,-3,0,0,0,0,0,0,0,0,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-5,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-13,-14,-16,-17,-17,-17,-16,-17,-18,-17,-14,-13,-13,-10,-8,-6,-4,0,0,0,0,0,0,0,0,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-5,-4,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,-6,-14,-14,-15,-15,-17,-15,-14,-15,-14,-15,-16,-15,-13,-14,-13,-7,-7,-4,0,0,0,0,0,0,0,-6,-7,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-5,-3,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-7,-17,-17,-14,-12,-16,-14,-14,-14,-12,-10,-14,-19,-21,-20,-18,-13,-10,-6,-2,0,0,0,0,0,0,-7,-7,-6,-6,-6,-6,-6,-6,-6,-6,-5,-4,-3,-2,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,-1,-7,-20,-18,-14,-14,-16,-14,-12,-11,-10,-10,-11,-12,-15,-20,-22,-23,-19,-11,-6,-5,-4,-2,-1,0,-1,-7,-7,-7,-4,-6,-6,-5,-4,-4,-3,-2,-1,-1,-1,0,0,0,0,0,-1,-1,0,0,0,-1,-1,-2,-4,-6,-7,-13,-18,-17,-17,-18,-15,-12,-10,-9,-9,-9,-10,-10,-12,-15,-16,-17,-23,-26,-17,-9,-5,-4,-7,-4,-7,-7,-6,-5,-3,-4,-3,-2,-2,-1,0,-1,0,0,0,0,0,0,0,0,-1,0,0,-1,-3,-3,-5,-8,-11,-15,-18,-18,-17,-19,-18,-14,-11,-10,-9,-8,-8,-8,-9,-9,-10,-11,-11,-9,-7,-13,-24,-17,-12,-9,-8,-7,-5,-1,0,-1,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,-3,-3,-4,-8,-9,-10,-13,-14,-16,-19,-19,-13,-9,-8,-6,-5,-4,-4,-5,-5,-7,-8,-8,-9,-7,-4,-4,-9,-22,-20,-11,-10,-3,0,0,0,0,0,0,0,0,0,0,0,0,-1,-1,-2,-3,-4,-3,-3,-4,-4,-4,-4,-5,-6,-9,-10,-11,-12,-14,-19,-21,-17,-7,-7,-5,-5,-4,-3,-3,-2,-3,-4,-4,-5,-5,-4,-3,-3,-7,-12,-22,-21,-17,-1,0,0,0,0,0,0,0,0,0,-1,-2,-2,-3,-3,-4,-4,-4,-5,-5,-5,-6,-6,-5,-6,-9,-11,-10,-11,-13,-18,-20,-18,-10,-8,-7,-9,-7,-5,-4,-2,-1,-2,-3,-2,-3,-3,-2,-1,-1,-6,-9,-14,-20,-23,0,0,0,0,0,0,0,0,0,-2,-3,-4,-4,-4,-5,-5,-5,-5,-6,-6,-6,-7,-7,-7,-7,-12,-11,-11,-11,-16,-18,-16,-13,-10,-6,-8,-8,-7,-6,-4,0,0,0,-1,0,0,0,0,0,-1,-7,-11,-11,-14,-14,0,0,0,0,0,0,0,0,-2,-3,-4,-4,-4,-4,-5,-5,-5,-6,-6,-6,-6,-7,-7,-8,-10,-10,-10,-11,-13,-15,-14,-13,-10,-8,-7,-7,-7,-6,-5,-3,-1,0,0,0,0,0,0,-1,0,-4,-8,-7,-8,-9,-9,0,0,0,0,0,0,-1,-2,-3,-2,-1,-3,-5,-5,-5,-5,-6,-6,-6,-6,-7,-7,-8,-9,-9,-11,-11,-11,-12,-12,-12,-10,-9,-7,-7,-7,-7,-6,-3,-1,0,0,0,0,0,0,0,-2,-2,-6,-7,-7,-7,-5,-5,0,0,0,0,0,0,-1,-2,-2,-2,-2,0,-1,-2,-6,-6,-6,-6,-6,-6,-7,-7,-8,-8,-10,-9,-10,-10,-11,-11,-11,-9,-8,-7,-7,-7,-7,-7,-2,0,-1,0,0,0,0,0,-1,-2,-4,-7,-7,-7,-5,0,0,0,0,0,0,0,0,0,0,-1,-1,-1,0,-1,-3,-5,-6,-6,-6,-6,-6,-7,-7,-8,-8,-8,-9,-10,-11,-11,-11,-9,-8,-7,-7,-7,-7,-7,-6,-3,0,0,0,0,0,0,0,-1,-1,-5,-7,-7,-4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-2,-5,-6,-6,-6,-6,-6,-6,-7,-7,-8,-8,-9,-9,-10,-10,-10,-10,-9,-7,-6,-7,-7,-7,-7,-7,-5,-1,0,0,0,0,0,-1,-3,-4,-7,-8,-6,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,-4,-6,-6,-6,-6,-6,-6,-7,-7,-7,-8,-8,-9,-10,-11,-10,-10,-10,-7,-1,0,-5,-8,-7,-7,-7,-6,-4,-2,-1,-1,-1,-1,-3,-5,-6,-7,-7,-1,0,0,0,0,-1,0,0,0,0,-1,0,0,0,-1,-4,-4,-5,-6,-6,-6,-6,-6,-6,-7,-7,-7,-8,-8,-9,-10,-10,-10,-10,-8,-1,0,0,-1,-7,-7,-7,-7,-6,-5,-2,-2,-2,-1,-2,-5,-5,-6,-7,-5,0,0,0,0,0,-2,0,0,0,-1,0,0,0,0,-3,-5,-5,-6,-6,-6,-6,-6,-6,-6,-7,-7,-7,-8,-8,-10,-11,-11,-10,-9,-3,-1,0,0,-2,-6,-7,-7,-7,-7,-5,-2,-3,-2,-2,-4,-5,-5,-6,-7,-3,0,0,0,0,0,-3,-1,-1,-1,0,0,0,0,0,-2,-5,-5,-6,-6,-6,-6,-6,-6,-7,-7,-7,-7,-8,-9,-10,-12,-11,-10,-5,0,0,0,0,-2,-5,-6,-6,-7,-7,-8,-3,-3,-2,-2,-5,-4,-5,-6,-7,-4,0,0,0,0,0,-4,0,0,0,0,0,0,0,0,-1,-3,-6,-6,-6,-6,-6,-6,-6,-7,-7,-7,-7,-8,-9,-10,-12,-12,-10,-4,0,0,0,0,-2,-4,-5,-5,-6,-7,-8,-7,-6,-3,-2,-4,-5,-6,-6,-6,-3,-1,0,0,0,0,-2,0,0,0,0,0,0,0,0,-3,-5,-6,-6,-6,-6,-6,-6,-6,-7,-6,-7,-7,-8,-9,-11,-12,-11,-8,-1,0,0,0,0,-1,-1,-2,-1,-2,-4,-6,-8,-6,-4,-3,-5,-6,-6,-6,-5,-1,0,0,0,0,0,-3,0,0,0,0,0,0,-2,-4,-5,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-7,-7,-8,-9,-11,-12,-10,-7,-2,0,0,0,0,0,0,0,0,-1,-2,-6,-6,-7,-5,-3,-5,-6,-6,-6,-5,-1,0,0,0,0,0,-5,-2,0,0,0,0,-3,-5,-4,-5,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-7,-7,-8,-9,-12,-11,-10,-6,-2,0,0,0,0,0,0,0,0,0,-2,-4,-5,-5,-6,-6,-6,-6,-5,-3,-1,0,0,0,0,0,0,-5,-3,-1,0,0,0,-4,-5,-5,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-7,-7,-7,-9,-12,-11,-9,-5,-2,0,0,0,0,0,0,0,0,0,-1,-4,-5,-5,-5,-5,-5,-4,-2,0,0,0,0,0,0,0,0,-7,-4,-2,0,0,-2,-4,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-7,-7,-10,-13,-11,-9,-4,-1,0,0,0,0,0,0,0,0,0,0,-4,-4,-4,-4,-5,-4,-1,0,0,0,0,0,0,0,0,0,-8,-6,-3,-2,-2,-2,-5,-6,-6,-6,-6,-5,-6,-6,-6,-6,-6,-6,-6,-6,-6,-7,-7,-9,-13,-12,-8,-5,-1,0,0,0,0,0,0,0,0,0,0,-3,-4,-4,-4,-5,-4,0,0,0,0,0,0,0,0,0,0,-8,-7,-3,-2,-3,-5,-6,-6,-6,-6,-6,-5,-5,-6,-6,-6,-6,-6,-6,-6,-6,-6,-7,-9,-13,-12,-7,-5,-1,0,0,0,0,0,0,0,0,0,0,-3,-4,-4,-4,-5,-2,0,0,0,0,0,0,0,0,0,0,-9,-9,-4,-3,-4,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-7,-9,-12,-12,-7,-5,0,0,0,0,0,0,0,0,0,0,0,-1,-4,-4,-4,-4,0,0,0,0,0,0,0,0,0,0,0,-12,-10,-6,-3,-4,-7,-6,-6,-6,-6,-6,-5,-5,-6,-6,-6,-6,-5,-6,-6,-6,-6,-7,-9,-12,-11,-7,-3,-1,0,0,0,0,0,0,0,0,0,0,0,-4,-4,-4,-4,0,0,0,0,0,0,0,0,0,0,0,-12,-11,-8,-4,-7,-7,-7,-6,-6,-6,-6,-5,-5,-5,-5,-6,-6,-6,-6,-6,-6,-6,-7,-9,-13,-11,-7,-5,-4,0,0,0,0,0,-1,0,0,0,0,-1,-3,-4,-4,-3,-1,0,0,0,0,0,0,0,0,0,0,-9,-12,-11,-10,-10,-8,-7,-6,-6,-6,-6,-5,-5,-5,-5,-5,-5,-6,-6,-6,-6,-6,-7,-9,-13,-10,-7,-6,-5,-1,0,0,0,-1,-1,0,0,0,0,-2,-3,-3,-3,-1,0,0,0,0,0,0,0,0,0,0,0,-6,-7,-8,-9,-8,-7,-7,-6,-6,-6,-5,-5,-5,-5,-5,-5,-5,-6,-6,-6,-6,-6,-7,-9,-12,-9,-7,-6,-6,-1,0,0,-1,-1,0,-1,0,0,0,-1,-2,-3,-1,0,0,0,0,0,0,0,0,0,0,0,0,-6,-6,-7,-7,-7,-7,-6,-6,-6,-5,-5,-5,-5,-5,-5,-5,-5,-4,-6,-6,-6,-6,-7,-10,-11,-9,-7,-6,-6,-3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-6,-6,-6,-6,-7,-7,-6,-6,-5,-5,-5,-5,-5,-5,-5,-5,-5,-3,-5,-6,-6,-6,-7,-10,-11,-8,-7,-6,-6,-6,-3,-3,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-5,-6,-6,-6,-6,-6,-6,-6,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-6,-6,-7,-11,-12,-8,-7,-6,-6,-6,-5,-5,-4,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-5,-5,-6,-6,-6,-6,-6,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-6,-7,-8,-11,-11,-7,-6,-6,-6,-6,-5,-5,-5,-4,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-6,-6,-6,-6,-6,-6,-6,-6,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-6,-7,-10,-12,-10,-7,-6,-6,-6,-5,-5,-5,-5,-5,-4,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-6,-6,-6,-6,-6,-6,-6,-6,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-6,-9,-12,-10,-7,-6,-6,-6,-5,-5,-5,-5,-5,-5,-4,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-6,-6,-6,-6,-6,-6,-6,-6,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-6,-9,-12,-10,-7,-6,-6,-6,-5,-5,-5,-5,-5,-5,-4,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
