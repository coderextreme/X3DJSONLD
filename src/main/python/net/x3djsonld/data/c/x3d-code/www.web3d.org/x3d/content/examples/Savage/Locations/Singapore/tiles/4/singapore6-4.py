###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_64',geoSystem=['GDC'],position=(1.3257755241139217,103.71910330716118,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.3257755241139217,103.71910330716118,0.0),range=4101.627,child1Url=['../../tiles/5/singapore12-8.x3d'],child2Url=['../../tiles/5/singapore12-9.x3d'],child3Url=['../../tiles/5/singapore13-8.x3d'],child4Url=['../../tiles/5/singapore13-9.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore6-4.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.3170438117359278,103.70474027303216,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[12,21,34,51,56,43,25,14,11,12,12,12,7,9,10,11,10,8,12,15,10,8,8,8,10,10,8,5,7,6,5,8,14,15,12,11,12,11,18,30,46,56,50,33,17,12,10,11,11,8,10,12,13,11,8,11,12,10,10,8,7,9,11,8,3,5,7,5,7,12,12,9,9,10,10,16,26,40,51,49,35,20,14,11,11,12,9,11,11,14,12,9,11,12,11,10,7,5,8,9,7,4,5,8,7,8,11,10,8,8,9,10,15,23,36,43,44,34,21,17,13,11,12,11,11,9,14,12,10,11,12,10,10,6,3,6,6,5,4,6,10,10,11,10,8,7,7,8,10,14,22,32,37,38,32,23,19,15,12,13,12,10,8,13,11,9,10,11,10,10,7,4,5,4,5,5,8,11,12,12,10,8,7,7,8,10,15,21,28,32,33,31,24,21,17,15,15,12,8,9,12,9,9,10,9,8,9,8,6,6,4,5,6,9,11,11,11,9,8,6,7,8,11,16,20,24,28,29,28,24,20,19,17,15,12,7,9,10,8,9,9,8,7,8,9,7,6,4,5,7,9,9,9,9,8,8,7,7,8,14,17,19,20,24,27,25,21,18,20,18,14,11,8,9,8,8,9,9,6,6,8,10,7,6,4,7,9,8,7,7,7,7,10,9,8,8,14,16,18,19,23,26,23,21,17,19,17,14,11,9,9,8,10,9,8,6,6,7,11,7,7,4,7,10,7,6,7,7,5,8,8,7,8,11,15,18,20,24,27,23,22,18,18,15,14,11,10,9,10,12,10,8,7,6,7,11,7,8,5,8,10,7,6,7,7,4,4,5,6,8,12,15,19,21,24,25,23,24,19,18,16,14,11,11,9,11,13,11,7,7,7,7,11,8,9,6,8,9,7,6,7,8,3,2,3,5,8,15,17,19,20,22,22,23,25,21,19,18,16,12,12,11,11,13,11,5,5,6,7,11,10,9,8,9,9,7,7,9,9,5,3,2,4,7,16,17,19,20,20,20,22,25,21,20,20,17,12,12,12,11,12,10,3,5,7,8,10,11,9,9,9,8,7,7,9,9,6,5,3,4,7,14,15,18,20,20,21,22,23,21,21,22,19,13,12,13,10,11,10,3,6,9,9,8,11,10,8,7,7,6,7,8,8,6,6,6,6,7,13,14,17,19,20,21,21,21,20,22,23,20,14,12,13,10,10,10,4,8,12,9,7,10,8,7,4,5,6,7,7,7,6,7,10,10,9,13,15,17,18,19,19,19,19,19,22,22,20,17,13,13,11,10,10,6,10,12,8,9,8,3,6,2,2,6,8,8,6,6,8,14,15,12,13,15,16,18,18,18,18,18,19,21,20,19,18,14,12,12,11,10,9,12,13,8,9,6,1,6,1,0,5,9,8,6,5,8,16,16,12,13,14,16,19,19,18,18,18,19,21,18,17,17,15,12,12,11,9,13,14,14,11,8,5,3,7,3,1,5,7,7,6,5,7,13,12,9,13,13,16,19,20,19,19,19,19,20,16,15,16,14,11,11,12,8,16,15,14,12,8,5,5,8,6,5,6,6,7,6,4,5,10,9,7,12,12,15,17,18,19,18,19,18,17,14,14,16,13,10,10,12,9,17,15,11,10,9,6,7,9,9,9,8,8,9,6,3,4,9,9,7,12,11,13,15,17,18,17,18,17,14,13,15,16,12,10,10,12,10,16,15,10,9,10,7,9,9,11,12,11,11,11,7,3,4,9,9,6,10,10,11,14,16,16,14,16,15,13,13,15,14,12,11,11,13,10,12,13,11,12,12,10,12,11,13,15,14,12,11,8,5,4,8,8,5,9,8,10,13,16,15,13,15,14,13,13,14,12,11,11,12,14,10,9,11,13,15,14,12,13,13,14,15,15,12,9,9,9,5,8,7,4,8,8,11,14,17,15,13,15,13,13,13,12,10,9,10,12,13,11,10,10,13,17,16,13,14,15,13,13,14,10,8,9,10,7,10,9,5,7,8,12,15,16,15,14,15,12,12,13,10,8,8,9,11,12,13,11,11,13,17,18,15,15,17,11,11,11,9,7,9,10,8,12,11,7,8,8,12,14,14,14,15,15,12,11,13,10,7,8,9,11,12,14,12,11,12,16,19,15,14,18,11,10,10,9,7,9,8,8,12,10,6,9,9,11,13,13,12,14,15,13,10,13,11,8,9,10,12,13,14,12,11,12,14,20,15,13,17,12,9,10,9,8,9,5,6,11,8,4,10,9,10,13,12,12,13,15,13,10,12,11,10,9,11,12,13,13,12,11,14,16,21,15,12,14,12,10,11,10,7,9,5,4,7,6,4,11,10,10,12,13,12,12,14,13,11,11,10,11,10,12,13,14,13,11,11,17,20,22,16,12,12,10,10,12,10,6,9,6,3,3,4,4,10,10,9,12,13,12,12,14,13,10,9,9,12,11,12,13,14,13,10,10,17,23,22,16,13,12,10,9,12,10,6,7,7,3,2,3,4,8,9,9,12,12,10,11,13,13,9,8,9,11,11,12,12,13,12,10,9,16,24,23,16,15,14,10,9,11,10,7,5,7,4,3,4,5,8,9,9,11,13,11,11,13,13,9,8,9,10,10,11,12,13,12,11,9,15,23,21,16,17,17,12,9,10,10,8,5,6,5,4,6,7,8,8,8,11,14,12,11,12,13,9,7,9,9,8,9,12,12,13,12,10,14,21,19,17,18,20,13,9,8,9,8,6,6,5,4,8,9,8,9,10,12,16,13,11,12,13,9,8,10,9,7,9,11,11,14,12,11,14,19,19,17,18,21,14,9,7,8,8,8,7,6,5,8,11,8,9,12,15,17,14,12,12,13,9,10,11,10,8,10,11,11,14,13,12,14,18,20,18,17,21,13,7,7,7,7,11,9,7,7,9,11,8,9,12,15,16,15,12,11,12,10,10,12,10,9,10,10,11,13,12,14,16,17,21,19,18,21,14,8,7,7,8,12,8,7,7,9,11,10,9,10,12,14,14,12,11,11,9,11,11,10,10,9,10,11,11,12,16,18,19,20,20,20,20,15,8,7,10,11,11,7,5,6,8,10,11,9,9,11,12,12,11,9,9,9,10,11,11,11,10,10,11,11,14,16,19,22,23,21,21,21,16,9,8,10,13,11,6,6,7,9,10,12,11,10,10,11,11,9,8,8,8,8,11,12,11,11,11,12,13,16,16,20,26,28,21,21,22,18,11,7,10,15,11,6,9,11,11,11,11,11,10,10,11,10,8,7,7,7,6,10,12,11,12,12,12,14,16,14,19,25,28,21,21,22,19,13,8,10,15,11,4,8,12,13,14,9,8,9,9,10,9,8,8,8,7,6,9,11,9,12,12,11,14,13,12,16,19,22,20,18,19,19,15,10,10,13,11,3,5,11,15,16,10,7,7,8,9,9,8,8,9,7,7,9,10,8,12,12,11,14,12,11,14,15,18,19,18,19,20,16,11,10,12,11,3,2,9,15,17,12,8,7,7,6,8,9,9,8,6,7,9,10,9,11,11,12,14,11,12,12,12,16,19,18,21,21,15,10,11,11,9,2,0,6,13,16,15,11,8,7,5,9,10,9,8,7,8,10,10,9,10,11,12,14,11,12,13,12,16,20,20,22,21,14,9,10,10,10,5,2,6,12,14],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
