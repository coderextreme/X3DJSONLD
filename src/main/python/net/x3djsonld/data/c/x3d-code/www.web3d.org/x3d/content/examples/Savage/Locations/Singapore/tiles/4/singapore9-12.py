###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_912',geoSystem=['GDC'],position=(1.3781657983818856,103.94891185322548,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.3781657983818856,103.94891185322548,0.0),range=4101.627,child1Url=['../../tiles/5/singapore18-24.x3d'],child2Url=['../../tiles/5/singapore18-25.x3d'],child3Url=['../../tiles/5/singapore19-24.x3d'],child4Url=['../../tiles/5/singapore19-25.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore9-12.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.3694340860038916,103.93454881909646,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[14,13,13,13,15,19,20,20,21,23,27,23,17,19,16,15,12,11,18,24,19,13,14,12,11,12,17,16,17,17,18,24,23,22,22,21,19,13,12,12,13,14,18,20,20,23,26,27,22,16,18,16,14,13,11,16,22,21,14,12,11,11,14,16,15,16,17,19,25,23,23,24,22,19,12,12,11,13,15,17,19,20,24,28,26,21,17,16,15,13,14,12,15,19,22,13,11,9,11,15,17,14,15,18,20,24,23,24,26,23,19,11,11,11,13,16,17,17,19,23,26,24,18,16,15,16,13,16,14,14,17,19,11,9,9,11,16,18,14,17,21,21,23,23,23,25,22,18,11,11,11,14,17,17,16,17,21,23,21,16,14,14,16,15,19,16,14,15,14,8,7,9,11,16,18,16,20,24,22,21,22,22,24,21,17,12,12,13,15,17,16,15,15,18,21,18,14,13,14,17,17,22,16,16,16,12,8,7,10,12,15,18,16,19,23,20,19,20,21,23,20,16,14,14,15,16,17,15,13,13,15,19,17,12,13,14,19,20,23,17,18,17,13,11,8,10,12,16,17,16,18,21,19,17,18,20,22,20,16,15,16,18,19,19,17,13,10,12,16,16,12,14,15,21,22,23,16,17,16,14,14,11,11,13,18,18,18,19,21,18,16,18,20,22,20,17,16,18,20,22,22,20,14,8,10,13,15,14,15,17,23,23,21,14,14,14,16,15,13,10,13,20,18,20,22,23,19,16,18,21,23,21,18,17,18,21,24,24,21,15,8,9,11,13,16,16,17,23,24,21,13,11,13,15,15,12,9,13,20,17,19,22,23,19,17,19,21,23,21,19,17,18,20,24,24,20,16,11,10,9,12,17,17,16,20,25,23,14,11,12,12,14,11,6,13,18,14,16,20,21,19,19,21,21,22,21,19,18,18,20,24,22,18,15,12,10,9,11,16,17,15,18,26,24,16,12,13,11,13,9,5,13,16,12,13,17,19,20,20,21,21,20,20,19,20,21,21,23,21,14,12,12,11,10,10,14,17,16,18,25,24,18,13,14,11,11,8,6,12,15,11,11,14,19,20,20,21,19,17,18,18,23,22,20,21,19,12,11,13,14,10,9,13,17,17,19,23,22,18,13,14,10,10,7,7,12,13,11,10,13,19,20,20,22,19,15,15,15,24,23,20,18,17,12,11,17,18,10,8,12,17,19,21,19,18,15,11,13,10,9,7,8,12,12,11,10,15,20,20,21,25,21,14,12,12,26,23,19,16,16,12,13,20,20,11,9,11,16,20,22,16,15,13,11,12,11,9,7,9,11,11,11,10,17,23,21,22,28,23,14,10,10,27,24,19,16,15,14,15,21,19,10,9,10,12,18,20,13,13,12,11,12,12,8,7,9,10,9,9,11,20,25,23,24,29,24,15,11,11,29,25,20,17,17,17,18,22,18,10,10,9,10,16,18,12,12,12,10,12,13,9,8,10,10,9,8,12,20,23,22,24,28,25,17,12,11,31,28,23,20,21,21,20,23,20,12,11,10,9,13,15,12,13,11,10,12,14,11,10,10,10,9,9,11,16,18,18,22,27,25,19,13,11,32,29,24,21,24,24,21,24,20,14,11,11,10,11,13,12,13,12,10,11,14,14,12,11,10,10,9,11,13,13,14,19,25,26,21,14,10,32,27,22,20,23,26,23,23,21,15,11,12,13,12,12,12,13,12,9,9,13,15,13,11,10,10,9,10,11,9,11,14,20,24,20,12,8,29,24,21,20,22,26,24,22,21,16,12,14,15,12,12,12,13,13,9,8,12,15,13,11,10,10,9,10,9,7,8,10,16,22,19,11,8,24,22,20,20,21,22,22,21,21,16,13,15,17,15,14,14,12,13,9,7,11,14,13,10,10,10,8,9,9,8,8,9,13,18,16,11,10,20,19,21,22,21,20,20,20,21,17,16,17,18,17,16,14,12,13,9,7,10,12,12,9,10,10,8,9,9,8,8,9,10,14,14,11,11,17,19,23,26,25,20,19,18,20,19,19,19,20,18,18,15,13,13,9,8,11,11,9,8,10,10,7,8,8,9,9,10,9,11,11,12,12,15,20,25,29,27,20,18,18,19,21,21,22,21,19,19,16,13,13,10,9,12,9,8,8,9,10,7,8,8,9,10,10,8,8,10,11,11,16,20,26,27,25,20,18,18,21,24,24,24,22,19,18,14,12,13,10,10,11,9,7,8,8,8,7,8,8,9,8,9,8,7,9,10,10,16,21,26,26,25,22,19,19,22,26,25,25,22,19,16,12,12,13,9,11,11,9,7,9,8,7,6,7,9,9,7,8,8,7,9,9,9,18,20,23,27,28,25,21,21,22,25,24,24,22,18,15,11,11,11,8,11,10,10,8,8,7,5,3,5,9,12,6,4,6,8,10,9,8,19,19,22,27,31,28,23,22,23,25,23,22,21,17,14,11,11,9,8,10,10,10,8,7,6,3,0,4,10,13,6,2,5,9,10,9,7,20,21,24,28,31,28,22,23,25,27,24,22,19,15,13,12,11,9,9,8,10,10,5,5,4,0,0,4,10,12,6,3,5,8,10,8,7,20,21,23,28,31,27,22,23,27,28,24,22,18,13,12,13,11,10,8,6,9,9,2,3,3,0,0,3,9,10,6,3,5,7,9,8,7,19,18,21,26,27,25,23,26,30,29,23,20,18,14,14,13,10,10,4,5,9,8,3,2,2,0,-1,2,7,9,6,4,5,7,9,7,6,18,16,18,23,24,23,23,27,31,29,23,19,17,14,15,13,10,11,1,4,8,7,3,2,1,0,-1,1,5,8,6,4,5,7,8,7,5,15,15,16,20,22,20,20,24,31,28,21,17,16,13,14,12,10,16,5,2,6,6,3,2,1,0,-1,0,3,7,6,5,5,7,7,6,4,12,13,15,18,20,18,16,21,28,26,19,15,15,12,13,10,11,20,10,1,3,5,3,2,1,0,-1,-1,1,5,6,5,6,6,6,4,4,11,12,14,17,18,15,13,16,23,22,16,12,13,11,13,11,12,20,16,5,1,4,3,2,1,0,-1,-2,0,3,5,5,6,5,5,4,4,11,11,13,16,16,11,10,12,18,18,12,9,12,13,15,12,13,18,21,10,1,2,3,2,1,0,0,-2,-1,0,4,5,5,5,4,4,4,10,11,12,14,13,8,8,10,13,13,10,8,14,21,17,13,14,18,22,16,5,1,2,2,1,0,0,-1,-2,0,2,4,4,4,4,4,4,10,11,11,11,9,6,7,8,9,9,8,8,16,29,20,15,15,18,21,21,10,1,1,1,1,0,0,-1,-2,-1,0,3,4,4,4,4,3,9,10,10,9,8,6,7,7,7,7,6,6,12,27,26,18,15,17,21,22,16,5,0,0,1,0,0,-1,-2,-2,0,2,3,4,4,4,3,8,9,8,7,7,7,8,7,7,6,4,3,6,21,30,22,16,17,20,22,20,10,1,0,1,0,0,-1,-1,-2,-1,1,3,4,4,3,3,7,8,7,7,7,9,9,8,7,6,3,1,2,13,28,27,19,16,19,22,23,16,5,0,0,0,0,-1,-1,-2,-2,0,3,4,4,2,2,6,7,7,7,8,10,10,8,7,7,3,1,1,6,21,31,23,16,18,21,22,20,10,1,0,0,0,-1,-1,-1,-1,0,3,4,3,1,0],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
