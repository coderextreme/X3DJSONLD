###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.0',
  Scene=Scene(
    children=[
    Group(
      children=[
      Transform(translation=(54112.28,0.0,108224.56),
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0,0.05,0)),
            texture=ImageTexture(url=['../../images/5/PanamaCity3-2.jpg'],repeatS=False,repeatT=False)),
          geometry=ElevationGrid(xDimension=22,xSpacing=1288.3877,zDimension=22,zSpacing=1717.8502,height=[-136,-134,-132,-129,-127,-125,-122,-120,-118,-114,-114,-114,-112,-110,-107,-104,-103,-97,-96,-96,-92,-88,-140,-138,-135,-133,-130,-128,-126,-123,-121,-119,-118,-116,-113,-108,-102,-96,-96,-94,-94,-93,-89,-87,-144,-142,-139,-136,-134,-132,-130,-127,-125,-123,-121,-119,-117,-114,-112,-105,-99,-101,-91,-87,-96,-99,-147,-146,-143,-140,-138,-136,-134,-132,-130,-128,-126,-124,-121,-119,-118,-115,-114,-112,-105,-93,-95,-98,-150,-148,-147,-145,-143,-140,-138,-136,-134,-132,-131,-129,-126,-124,-122,-120,-119,-118,-115,-112,-108,-108,-154,-152,-151,-149,-147,-144,-142,-141,-138,-137,-135,-133,-130,-128,-127,-125,-123,-122,-120,-119,-116,-114,-158,-156,-156,-154,-152,-149,-146,-145,-143,-141,-140,-138,-135,-133,-130,-130,-128,-126,-124,-122,-120,-118,-162,-160,-160,-159,-156,-152,-150,-149,-147,-145,-144,-141,-139,-137,-135,-133,-132,-130,-128,-125,-123,-121,-167,-165,-164,-162,-160,-157,-155,-153,-150,-149,-148,-145,-142,-141,-139,-138,-135,-133,-131,-129,-127,-124,-172,-170,-169,-167,-164,-161,-159,-157,-155,-153,-151,-149,-146,-144,-144,-142,-139,-137,-135,-132,-130,-129,-177,-176,-175,-172,-169,-166,-164,-162,-159,-157,-156,-154,-152,-149,-147,-145,-143,-141,-139,-136,-134,-132,-184,-182,-181,-178,-175,-171,-169,-167,-165,-163,-161,-159,-156,-154,-152,-151,-148,-145,-143,-140,-137,-135,-190,-189,-186,-184,-181,-178,-175,-173,-170,-168,-167,-164,-161,-159,-157,-156,-153,-150,-147,-144,-141,-139,-197,-195,-194,-190,-187,-184,-181,-179,-176,-174,-172,-169,-166,-164,-162,-161,-158,-155,-152,-148,-146,-143,-205,-203,-200,-197,-194,-191,-188,-185,-184,-180,-178,-174,-172,-169,-168,-166,-163,-160,-156,-153,-150,-148,-214,-210,-208,-205,-202,-198,-196,-192,-188,-186,-184,-183,-179,-176,-174,-171,-168,-165,-162,-158,-155,-153,-222,-219,-216,-213,-210,-206,-204,-199,-198,-194,-192,-190,-186,-183,-180,-178,-174,-170,-167,-165,-161,-158,-231,-228,-225,-222,-219,-214,-212,-209,-205,-201,-199,-195,-192,-188,-186,-184,-180,-177,-174,-170,-167,-164,-241,-238,-234,-232,-227,-224,-220,-217,-214,-211,-208,-204,-200,-196,-194,-191,-187,-184,-180,-177,-174,-170,-251,-247,-245,-241,-237,-233,-229,-226,-223,-219,-217,-213,-209,-205,-202,-199,-195,-190,-187,-184,-181,-177,-263,-258,-254,-251,-248,-244,-240,-235,-231,-227,-224,-221,-218,-215,-211,-207,-202,-198,-194,-191,-187,-184,-263,-259,-255,-252,-248,-244,-240,-235,-231,-228,-225,-222,-218,-215,-211,-207,-203,-198,-194,-191,-187,-184]))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
