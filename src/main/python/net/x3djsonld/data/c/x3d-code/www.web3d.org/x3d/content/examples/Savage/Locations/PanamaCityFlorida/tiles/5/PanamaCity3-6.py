###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.0',
  Scene=Scene(
    children=[
    Group(
      children=[
      Transform(translation=(162336.84,0.0,108224.56),
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0,0.05,0)),
            texture=ImageTexture(url=['../../images/5/PanamaCity3-6.jpg'],repeatS=False,repeatT=False)),
          geometry=ElevationGrid(xDimension=22,xSpacing=1288.3877,zDimension=22,zSpacing=1717.8502,height=[-30,-29,-28,-27,-26,-25,-25,-25,-25,-24,-24,-24,-23,-23,-23,-22,-21,-20,-20,-17,-15,-13,-30,-30,-29,-28,-26,-25,-26,-26,-25,-25,-25,-25,-24,-24,-23,-23,-21,-21,-20,-18,-17,-14,-31,-31,-29,-28,-26,-26,-26,-26,-25,-26,-26,-26,-25,-24,-24,-23,-22,-21,-19,-19,-17,-15,-31,-31,-29,-28,-27,-27,-27,-26,-26,-26,-26,-26,-25,-24,-24,-23,-22,-20,-20,-20,-20,-18,-32,-31,-31,-29,-27,-27,-27,-27,-27,-27,-27,-26,-26,-25,-24,-24,-22,-22,-22,-21,-20,-18,-32,-32,-30,-29,-28,-29,-29,-28,-28,-27,-27,-26,-26,-25,-24,-22,-21,-23,-22,-20,-20,-19,-33,-30,-31,-30,-29,-29,-29,-28,-28,-27,-26,-26,-25,-24,-24,-23,-23,-23,-22,-21,-20,-20,-31,-31,-31,-31,-29,-29,-29,-28,-27,-28,-28,-27,-25,-24,-23,-23,-23,-23,-21,-20,-21,-21,-30,-31,-31,-31,-28,-29,-29,-28,-28,-28,-27,-25,-25,-25,-25,-24,-24,-23,-22,-21,-22,-21,-29,-28,-30,-30,-28,-28,-29,-29,-28,-26,-28,-25,-24,-25,-25,-25,-23,-22,-21,-21,-23,-21,-28,-30,-29,-29,-29,-29,-30,-29,-28,-27,-27,-25,-26,-26,-25,-24,-25,-23,-22,-22,-22,-21,-30,-30,-29,-29,-29,-29,-29,-28,-27,-27,-26,-25,-25,-25,-25,-25,-24,-23,-22,-21,-20,-19,-30,-30,-30,-29,-29,-29,-28,-28,-27,-26,-26,-25,-25,-25,-24,-24,-24,-23,-22,-21,-20,-19,-31,-30,-30,-29,-29,-28,-28,-27,-27,-26,-26,-25,-25,-24,-24,-24,-23,-22,-22,-21,-20,-19,-31,-30,-30,-29,-29,-28,-28,-27,-27,-26,-25,-25,-24,-24,-24,-23,-23,-22,-22,-21,-20,-20,-31,-31,-30,-29,-29,-28,-28,-27,-26,-26,-25,-25,-24,-24,-23,-23,-23,-22,-22,-21,-20,-20,-32,-31,-30,-29,-29,-28,-27,-27,-26,-25,-25,-24,-24,-23,-23,-23,-22,-22,-21,-20,-19,-19,-32,-31,-30,-29,-29,-28,-27,-26,-26,-25,-24,-24,-23,-23,-22,-22,-22,-21,-20,-19,-18,-18,-32,-31,-30,-30,-29,-28,-27,-26,-25,-24,-24,-23,-23,-22,-22,-22,-22,-21,-19,-18,-18,-17,-32,-31,-31,-30,-29,-28,-27,-26,-25,-24,-23,-22,-22,-21,-21,-20,-20,-20,-19,-18,-17,-17,-33,-32,-31,-30,-29,-28,-27,-25,-24,-23,-22,-21,-20,-19,-19,-20,-17,-21,-17,-16,-17,-16,-33,-32,-31,-30,-29,-28,-27,-25,-24,-23,-22,-21,-20,-19,-19,-20,-16,-21,-16,-15,-16,-17]))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
