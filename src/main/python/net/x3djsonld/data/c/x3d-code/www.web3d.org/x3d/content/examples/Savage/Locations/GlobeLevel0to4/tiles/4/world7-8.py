###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    Shape(
      appearance=Appearance(
        material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0,0.05,0)),
        texture=ImageTexture(url=['../../images/4/world7-8.jpg'],repeatS=False,repeatT=False)),
      geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(-11.291664319767108,-0.04166130228196607,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=22,xSpacing=1.0714287,zDimension=24,zSpacing=0.48913044,height=[-5358,-5539,-5564,-5572,-5561,-5493,-5404,-5170,-4871,-4398,-3860,-3361,-1835,-64,1663,1560,1749,1360,1460,1265,1130,1094,-5007,-5699,-5573,-5568,-5522,-5495,-5389,-5162,-4917,-4452,-3946,-3532,-2018,-409,889,1501,1713,1284,1438,1343,1114,1089,-4928,-5560,-5617,-5582,-5558,-5543,-5397,-5182,-4830,-4513,-4107,-3640,-2459,-355,1046,1346,1578,1141,1388,1278,1134,1090,-5196,-5593,-5615,-5627,-5573,-5520,-5366,-5186,-4862,-4612,-3838,-2292,-1504,-427,1362,1484,1241,1121,1199,1247,1112,1106,-5410,-5609,-5665,-5640,-5588,-5489,-5319,-5102,-4857,-4651,-4420,-2525,-1665,-62,761,1483,1095,1105,1231,1266,1095,1083,-4479,-3135,-5695,-5676,-5519,-5450,-5199,-5057,-4791,-4616,-4169,-2399,-1811,113,507,1280,1089,1108,964,1184,1086,1053,-5210,-5232,-5696,-5651,-5573,-5391,-5176,-4985,-4689,-4474,-4287,-2530,-1403,185,209,1041,1202,926,1070,1095,1077,967,-5174,-5061,-5579,-5570,-5452,-5343,-5129,-4865,-4624,-4525,-4096,-2479,-1432,138,284,1155,922,757,1064,1063,970,1051,-4239,-5235,-1732,-5567,-5478,-5296,-5083,-4808,-4583,-4338,-3986,-2654,-1664,58,622,1254,637,634,1169,1052,799,1018,-4909,-5238,-5611,-5339,-5369,-5268,-4994,-4721,-4452,-4222,-4021,-2216,-1243,122,657,1248,698,725,1138,1015,825,794,-4451,-5066,-5362,-5334,-5307,-5197,-4947,-4606,-4353,-4044,-3886,-1751,-355,195,658,1085,526,711,1003,744,816,820,-4207,-4892,-5545,-5524,-4706,-5078,-4877,-4572,-4266,-3911,-3430,-1392,-51,332,524,974,757,934,994,674,645,827,-4145,-4178,-5447,-5383,-5223,-5061,-4782,-4567,-4143,-3787,-3397,-807,-21,258,644,841,584,866,811,784,578,703,-3893,-4671,-4258,-5069,-5356,-5144,-4752,-4437,-4101,-3586,-2743,-1202,17,349,539,788,539,869,825,592,516,614,-3878,-3658,-2613,-4365,-5257,-5045,-4768,-4478,-4067,-3535,-2652,-1069,94,400,377,693,711,747,513,597,501,545,-4276,-4632,-5117,-5260,-2663,-4972,-4740,-4474,-4067,-3547,-2871,-462,87,690,445,512,533,433,439,587,420,531,-4846,-4466,-4692,-5061,-5085,-4916,-4764,-4430,-4053,-3566,-2569,-86,240,340,442,506,439,451,400,407,480,506,-4610,-4021,-5056,-3858,-4995,-4817,-4566,-4384,-4078,-3000,-986,59,297,393,316,673,540,377,367,400,421,450,-4412,-3447,-1820,-4573,-4722,-4707,-4467,-4274,-4189,-1961,-79,472,115,484,494,664,425,331,379,353,382,388,-4543,-4461,-4163,-3244,-4534,-4350,-4297,-4125,-3799,-833,-2,294,284,503,579,338,328,325,360,411,443,490,-4749,-4653,-4610,-3836,-4303,-3403,-3919,-3708,-3129,-4,209,152,616,545,831,630,408,298,320,335,407,522,-4820,-4500,-4655,-4035,-3821,-3613,-3565,-3409,-2582,-139,74,223,766,488,569,329,295,313,317,368,379,445,-4641,-4491,-4642,-4359,-4121,-3736,-3184,-3039,-2045,5,86,639,557,312,571,392,289,317,314,336,415,410,-4655,-4777,-4631,-4393,-4133,-3709,-3214,-3077,-1990,19,104,571,372,300,462,439,290,314,331,341,379,410],
        geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(0.0,0.0,-6378137.0),geoSystem=['GDC'])))])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
