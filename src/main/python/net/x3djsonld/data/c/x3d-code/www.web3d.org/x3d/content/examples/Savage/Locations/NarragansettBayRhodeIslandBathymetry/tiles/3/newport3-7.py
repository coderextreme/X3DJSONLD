###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoLOD(center=(41.45218369329644,-71.13168471846758,0.0),range=12300.69,child1Url=['../../tiles/4/newport6-14.x3d'],child2Url=['../../tiles/4/newport6-15.x3d'],child3Url=['../../tiles/4/newport7-14.x3d'],child4Url=['../../tiles/4/newport7-15.x3d'],
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(41.5,-71.5,0),geoSystem=['GDC']),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0,0.05,0)),
            texture=ImageTexture(url=['../../images/3/newport3-7.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(41.40380382238266,-71.17565237262308,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=55,xSpacing=0.0016284316,zDimension=52,zSpacing=0.0018972498,height=[-22,-22,-22,-22,-22,-22,-22,-22,-22,-22,-21,-21,-21,-21,-21,-21,-18,-16,-19,-21,-21,-21,-21,-21,-21,-21,-21,-21,-21,-22,-21,-22,-19,-19,-19,-20,-22,-21,-22,-22,-22,-22,-22,-23,-22,-22,-22,-22,0,0,0,0,0,0,0,-22,-22,-22,-22,-22,-22,-22,-22,-22,-21,-21,-21,-21,-21,-21,-21,-21,-21,-22,-21,-21,-21,-21,-21,-21,-21,-21,-21,-21,-21,-21,-19,-20,-19,-19,-19,-21,-21,-22,-22,-22,-22,-22,-22,-22,-22,-22,-22,0,0,0,0,0,0,0,-22,-22,-22,-22,-23,-22,-22,-22,-22,-22,-21,-21,-20,-20,-21,-21,-21,-22,-21,-21,-21,-21,-21,-21,-21,-21,-21,-21,-20,-21,-21,-21,-21,-22,-22,-22,-21,-21,-21,-21,-22,-22,-21,-21,-22,-22,-22,-22,0,0,0,0,0,0,0,-22,-22,-22,-23,-23,-22,-22,-22,-22,-22,-21,-21,-18,-18,-19,-20,-21,-21,-21,-21,-21,-21,-21,-21,-21,-20,-20,-20,-20,-21,-21,-20,-21,-22,-22,-22,-21,-20,-21,-21,-21,-20,-20,-21,-21,-20,-21,-22,0,0,0,0,0,0,0,-22,-22,-22,-23,-23,-23,-22,-22,-22,-22,-21,-21,-21,-22,-21,-21,-20,-20,-21,-21,-21,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-21,-21,-21,-21,-21,-21,-21,-21,-21,-20,-21,-20,-19,-18,-19,-20,-21,0,0,0,0,0,0,0,-22,-22,-22,-23,-23,-23,-23,-23,-22,-22,-22,-21,-22,-21,-20,-19,-19,-20,-20,-20,-21,-20,-20,-19,-20,-20,-20,-20,-20,-20,-20,-21,-21,-21,-21,-21,-21,-21,-21,-20,-20,-20,-18,-18,-19,-21,-20,-20,0,0,0,0,0,0,0,-22,-21,-19,-19,-24,-23,-23,-23,-23,-23,-22,-22,-22,-22,-22,-21,-21,-21,-20,-19,-19,-17,-17,-17,-18,-19,-19,-20,-20,-20,-20,-20,-21,-21,-21,-21,-21,-21,-21,-20,-20,-17,-20,-21,-20,-20,-20,-20,0,0,0,0,0,0,0,-20,-23,-24,-22,-24,-24,-24,-24,-24,-23,-23,-23,-23,-22,-22,-22,-21,-21,-20,-20,-17,-16,-18,-17,-19,-19,-19,-19,-19,-20,-20,-20,-20,-20,-21,-20,-20,-20,-21,-20,-20,-21,-20,-20,-20,-20,-20,-20,0,0,0,0,0,0,0,-23,-24,-24,-24,-24,-24,-24,-24,-24,-24,-24,-24,-24,-23,-22,-22,-21,-21,-20,-20,-17,-17,-16,-16,-20,-20,-19,-19,-19,-19,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-19,-20,-20,-20,-20,0,0,0,0,0,0,0,-23,-23,-23,-23,-23,-23,-24,-24,-24,-24,-24,-24,-24,-23,-23,-22,-22,-21,-20,-20,-18,-18,-18,-20,-20,-20,-19,-19,-19,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-19,-20,-20,-20,-20,-19,-19,-19,0,0,0,0,0,0,0,-23,-23,-23,-23,-23,-23,-23,-23,-24,-24,-24,-24,-24,-24,-23,-23,-22,-22,-21,-21,-21,-21,-20,-19,-20,-19,-19,-19,-19,-19,-19,-20,-19,-19,-20,-20,-18,-20,-20,-20,-19,-20,-19,-19,-19,-19,-19,-19,0,0,0,0,0,0,0,-23,-23,-23,-23,-22,-23,-22,-23,-23,-23,-24,-24,-24,-24,-23,-23,-23,-23,-23,-22,-22,-22,-22,-21,-20,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-20,-19,-19,-19,-18,-19,-19,-19,-19,0,0,0,0,0,0,0,-22,-22,-22,-22,-22,-22,-22,-22,-22,-22,-23,-23,-23,-23,-23,-23,-23,-23,-23,-22,-22,-22,-22,-22,-21,-20,-20,-19,-19,-19,-17,-19,-19,-19,-19,-18,-19,-19,-17,-18,-19,-18,-19,-19,-19,-19,-19,-19,0,0,0,0,0,0,0,-22,-22,-22,-22,-21,-21,-22,-22,-22,-22,-22,-23,-23,-23,-23,-23,-23,-23,-23,-23,-22,-22,-22,-21,-21,-20,-20,-19,-19,-17,-19,-19,-19,-18,-19,-19,-19,-20,-18,-19,-18,-17,-19,-19,-18,-17,-16,-18,0,0,0,0,0,0,0,-22,-22,-22,-21,-21,-21,-21,-21,-21,-22,-22,-22,-22,-22,-22,-22,-22,-22,-22,-22,-22,-22,-19,-16,-20,-19,-18,-19,-19,-19,-19,-19,-18,-18,-18,-19,-19,-19,-18,-18,-18,-15,-16,-16,-17,-18,-16,-19,0,0,0,0,0,0,0,-21,-21,-21,-21,-21,-20,-20,-21,-21,-21,-21,-21,-22,-22,-22,-22,-22,-22,-22,-22,-21,-21,-21,-20,-16,-16,-18,-19,-19,-18,-18,-18,-18,-18,-18,-18,-18,-18,-18,-18,-17,-14,-16,-18,-15,-16,-18,-18,0,0,0,0,0,0,0,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-21,-21,-22,-22,-22,-22,-22,-22,-21,-22,-21,-19,-18,-19,-17,-18,-18,-18,-18,-18,-18,-18,-18,-18,-18,-18,-18,-18,-18,-18,-17,-17,-16,-17,-18,-18,-18,0,0,0,0,0,0,0,-19,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-21,-21,-22,-22,-22,-22,-21,-21,-21,-21,-18,-19,-20,-20,-20,-19,-19,-18,-18,-18,-18,-18,-18,-18,-18,-18,-18,-18,-18,-19,-17,-16,-17,-15,-17,-17,0,0,0,0,0,0,0,-18,-16,-18,-20,-20,-20,-20,-18,-19,-20,-19,-20,-21,-21,-22,-22,-21,-21,-21,-21,-21,-21,-22,-22,-21,-21,-20,-20,-19,-18,-18,-18,-18,-17,-17,-17,-17,-18,-17,-18,-18,-18,-17,-19,-18,-18,-18,-17,0,0,0,0,0,0,0,-20,-20,-20,-20,-20,-20,-20,-19,-19,-15,-19,-20,-20,-20,-21,-21,-21,-21,-22,-21,-21,-21,-21,-21,-21,-21,-20,-20,-19,-19,-18,-18,-18,-18,-18,-18,-18,-18,-18,-17,-17,-17,-18,-16,-18,-18,-18,-18,0,0,0,0,0,0,0,-19,-20,-20,-19,-19,-20,-20,-20,-20,-20,-19,-18,-19,-20,-21,-21,-21,-21,-20,-20,-20,-21,-21,-21,-21,-21,-21,-20,-19,-19,-18,-18,-18,-18,-18,-17,-17,-17,-17,-17,-17,-17,-18,-18,-19,-18,-18,-17,0,0,0,0,0,0,0,-19,-18,-19,-19,-20,-20,-20,-20,-20,-19,-18,-16,-19,-20,-21,-21,-21,-21,-20,-20,-20,-20,-20,-20,-21,-20,-20,-20,-20,-19,-19,-18,-18,-18,-18,-17,-17,-17,-17,-17,-17,-17,-17,-18,-18,-18,-18,-18,0,0,0,0,0,0,0,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-15,-17,-18,-19,-20,-20,-20,-19,-20,-20,-20,-21,-21,-21,-20,-20,-20,-20,-19,-19,-18,-18,-18,-18,-18,-17,-17,-17,-17,-17,-17,-17,-18,-18,-18,-18,-17,0,0,0,0,0,0,0,-17,-18,-18,-19,-19,-19,-19,-18,-18,-18,-16,-18,-18,-18,-20,-19,-20,-20,-20,-20,-20,-21,-21,-20,-20,-20,-20,-20,-20,-19,-19,-19,-19,-18,-18,-18,-18,-18,-18,-17,-17,-17,-17,-18,-18,-18,-18,-17,0,0,0,0,0,0,0,-18,-18,-18,-18,-18,-18,-18,-18,-16,-16,-17,-19,-20,-19,-19,-19,-19,-19,-19,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-19,-19,-18,-18,-18,-18,-18,-18,-18,-18,-18,-18,-18,-18,-18,-16,0,0,0,0,0,0,0,-17,-17,-17,-18,-18,-18,-17,-18,-16,-16,-17,-18,-20,-20,-19,-19,-19,-19,-19,-19,-19,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-20,-19,-19,-19,-18,-18,-18,-18,-18,-18,-18,-18,-18,-18,-18,-16,0,0,0,0,0,0,0,-16,-16,-16,-17,-17,-16,-17,-16,-15,-16,-16,-18,-18,-18,-19,-19,-18,-19,-19,-19,-19,-19,-19,-19,-20,-20,-20,-20,-20,-20,-20,-20,-20,-19,-19,-19,-19,-18,-18,-18,-18,-18,-18,-18,-18,-18,-18,-15,0,0,0,0,0,0,0,-14,-14,-14,-15,-15,-15,-15,-14,-13,-15,-17,-17,-17,-18,-18,-18,-18,-18,-18,-18,-18,-18,-19,-19,-19,-20,-20,-20,-20,-20,-20,-20,-20,-19,-19,-19,-20,-19,-18,-19,-18,-19,-18,-18,-18,-18,-17,-15,0,0,0,0,0,0,0,-11,-11,-10,-13,-11,-12,-12,-11,-14,-17,-18,-17,-17,-17,-17,-17,-17,-17,-18,-18,-18,-18,-18,-19,-19,-19,-20,-20,-20,-20,-20,-20,-20,-19,-19,-19,-19,-19,-19,-19,-19,-18,-18,-18,-18,-18,-17,-14,0,0,0,0,0,0,0,-5,-4,-4,-5,-6,-7,-6,-8,-13,-15,-16,-17,-17,-17,-15,-17,-15,-16,-17,-17,-17,-18,-18,-17,-19,-19,-20,-20,-20,-20,-19,-19,-20,-19,-19,-19,-19,-19,-19,-19,-19,-18,-18,-18,-17,-18,-17,-14,0,0,0,0,0,0,0,0,-3,-2,-1,0,-1,-3,-9,-11,-12,-15,-16,-16,-16,-16,-16,-15,-17,-17,-17,-17,-17,-17,-18,-18,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-20,-19,-19,-19,-19,-19,-18,-18,-18,-16,-17,-17,-13,0,0,0,0,0,0,0,0,0,0,0,0,-2,-5,-8,-9,-12,-14,-14,-15,-16,-16,-16,-16,-17,-17,-17,-17,-16,-16,-18,-18,-18,-18,-18,-18,-18,-19,-19,-19,-19,-19,-19,-19,-20,-19,-20,-19,-19,-18,-18,-18,-18,-17,-13,0,0,0,0,0,0,0,0,0,0,0,0,-4,-5,-7,-11,-12,-12,-13,-14,-14,-15,-15,-16,-16,-16,-16,-17,-17,-17,-17,-18,-18,-18,-17,-18,-18,-18,-18,-18,-19,-20,-20,-20,-20,-20,-20,-20,-19,-19,-19,-19,-18,-16,-12,0,0,0,0,0,0,0,0,0,0,0,0,-2,-5,-6,-9,-10,-10,-11,-11,-13,-14,-14,-14,-15,-15,-15,-16,-17,-17,-17,-17,-17,-17,-17,-17,-18,-18,-17,-18,-18,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-18,-15,-12,0,0,0,0,0,0,0,0,0,0,0,0,-2,-4,-6,-8,-7,-7,-9,-11,-13,-13,-13,-14,-14,-15,-14,-16,-16,-16,-16,-16,-17,-16,-16,-16,-17,-17,-18,-17,-18,-18,-18,-18,-18,-19,-19,-19,-19,-19,-19,-19,-17,-15,-11,0,0,0,0,0,0,0,0,0,0,0,0,-1,-2,-1,-4,-3,-5,-8,-10,-11,-12,-12,-12,-12,-11,-14,-14,-15,-15,-16,-16,-16,-14,-15,-16,-16,-16,-16,-16,-17,-17,-15,-17,-18,-18,-18,-18,-18,-19,-19,-19,-17,-14,-11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,-2,-5,-7,-9,-10,-11,-12,-11,-10,-10,-11,-11,-12,-15,-16,-15,-14,-14,-15,-15,-15,-15,-17,-17,-17,-17,-17,-17,-17,-18,-18,-18,-18,-19,-19,-16,-14,-10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,-5,-4,-1,-7,-7,-5,-5,-7,-8,-5,-10,-12,-14,-14,-14,-13,-14,-14,-15,-16,-17,-17,-17,-17,-17,-14,-17,-17,-18,-18,-18,-18,-18,-18,-15,-13,-9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-1,-1,-2,-2,0,-2,-4,-5,-6,-11,-12,-12,-11,-12,-12,-14,-14,-14,-15,-16,-16,-16,-16,-16,-16,-16,-16,-16,-17,-17,-16,-17,-17,-15,-13,-9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-6,-9,-9,-8,-9,-11,-14,-14,-14,-15,-14,-14,-14,-15,-15,-16,-17,-16,-16,-16,-16,-16,-16,-16,-16,-14,-12,-8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,-4,-3,-5,-6,-5,-11,-13,-14,-14,-14,-14,-10,-12,-14,-15,-15,-15,-15,-16,-16,-16,-16,-16,-15,-15,-13,-12,-8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-1,0,0,-4,-7,-11,-12,-12,-13,-13,-13,-8,-9,-11,-14,-14,-14,-14,-15,-15,-15,-15,-15,-15,-15,-13,-11,-7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,-6,-8,-10,-11,-12,-13,-13,-14,-15,-14,-13,-13,-14,-14,-14,-15,-14,-14,-14,-14,-13,-12,-11,-7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,-6,-8,-10,-10,-11,-12,-12,-14,-14,-14,-14,-13,-14,-13,-13,-14,-14,-14,-13,-12,-11,-12,-10,-6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3,-6,-7,-8,-9,-10,-11,-11,-12,-12,-13,-13,-13,-13,-12,-13,-12,-12,-12,-12,-12,-12,-11,-9,-5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-4,-5,-7,-7,-8,-9,-10,-11,-11,-12,-12,-12,-12,-12,-12,-11,-10,-11,-10,-10,-10,-12,-11,-9,-5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-1,-2,-4,-6,-7,-7,-8,-9,-10,-11,-11,-11,-12,-11,-9,-7,-7,-9,-10,-8,-10,-11,-10,-8,-4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-3,-4,-5,-5,-6,-8,-8,-9,-10,-10,-10,-8,-5,-5,-5,-6,-7,-7,-8,-9,-10,-8,-4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,-4,-4,-5,-5,-6,-6,-6,-4,-2,-2,-2,-3,-6,-6,-7,-8,-9,-7,-3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-1,-1,-1,-1,0,0,-1,-1,-2,-2,-4,-2,-5,-6,-8,-7,-3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,-3,-5,-4,-5,-6,-8,-6,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,-3,-4,-4,-5,-6,-8,-6,-2,0,0,0,0,0,0,0],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
