###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    Shape(
      appearance=Appearance(
        material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
        texture=ImageTexture(url=['../../images/5/singapore20-22.jpg'],repeatS=False,repeatT=False)),
      geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.3868975107598795,103.90582275083842,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=36,xSpacing=4.103724E-4,zDimension=23,zSpacing=3.96896E-4,height=[24,23,21,19,16,15,14,12,10,10,10,10,11,10,10,9,9,9,8,7,6,6,5,5,5,7,11,17,24,31,37,41,42,43,44,43,20,20,19,17,16,15,14,13,11,11,12,12,11,10,10,9,8,8,7,6,7,7,6,5,5,6,10,15,23,31,38,43,44,45,45,44,19,17,16,14,13,12,12,12,12,13,14,13,11,9,8,7,6,6,5,6,7,8,8,8,6,6,9,13,22,30,38,44,46,47,47,45,19,16,14,12,11,10,10,11,12,14,14,12,10,8,6,5,6,6,6,7,8,9,9,8,6,6,8,11,20,29,37,45,47,48,47,44,23,18,14,11,9,8,9,10,12,13,13,11,9,7,5,5,7,8,8,9,9,9,9,8,6,5,6,10,19,27,36,44,47,49,47,43,25,21,16,12,9,8,8,10,12,13,12,11,9,7,6,6,8,9,10,10,10,10,9,8,7,6,5,8,15,23,33,41,46,48,46,42,27,24,19,14,10,10,11,12,13,13,12,11,9,9,9,9,10,10,10,10,11,10,10,9,8,6,5,6,12,19,29,37,43,46,45,41,26,24,20,15,12,12,14,14,14,14,13,12,10,9,10,11,12,11,10,10,10,11,11,10,8,7,6,6,11,16,23,31,38,43,41,37,22,19,17,15,14,15,17,17,16,15,14,12,9,8,10,11,13,13,10,10,10,11,11,10,8,8,7,8,11,15,19,25,33,38,36,31,18,16,15,14,14,17,19,18,16,15,15,12,9,8,10,12,15,15,12,11,11,10,10,10,8,8,8,9,11,13,15,19,27,32,29,24,16,14,13,13,14,17,18,17,15,15,15,12,10,9,11,13,17,17,15,13,11,10,10,9,8,7,7,7,9,11,12,16,21,24,21,17,15,14,13,14,16,17,17,15,13,13,14,12,10,10,11,14,18,18,17,14,11,10,9,9,8,7,7,7,8,9,9,12,15,17,15,12,18,17,17,18,18,17,14,12,10,11,12,11,10,9,10,12,16,18,16,14,11,9,9,9,9,8,8,8,7,7,7,8,10,12,10,9,22,21,20,21,20,16,11,9,9,10,11,10,9,9,10,12,16,17,15,13,11,9,8,8,9,9,8,8,7,7,6,6,7,9,8,7,28,27,25,23,20,16,12,10,10,11,12,11,10,11,12,14,16,17,15,13,10,9,8,8,9,8,8,7,8,8,7,7,9,10,9,8,29,28,25,23,20,16,13,12,12,12,12,12,13,14,15,16,17,16,14,11,10,9,8,8,9,8,7,7,9,9,8,8,10,11,10,8,23,21,18,18,17,16,14,14,14,14,15,16,19,20,21,20,16,14,11,10,9,9,9,9,9,8,7,6,9,9,8,7,9,11,10,9,18,16,14,15,16,16,16,16,16,16,18,20,22,24,24,21,15,11,10,9,9,9,8,9,9,8,6,6,8,9,8,7,9,10,10,10,16,17,18,19,20,18,17,18,21,22,23,23,21,20,19,17,13,11,9,8,7,7,8,8,9,8,6,6,8,8,8,8,9,10,10,9,16,18,21,23,24,21,18,20,24,27,27,24,20,17,15,13,11,10,9,8,6,6,7,8,9,8,6,6,7,8,8,9,9,9,9,9,19,22,25,27,26,23,19,20,23,24,23,22,19,17,14,12,10,8,9,8,7,7,7,8,9,8,7,7,8,8,9,9,8,7,7,7,22,26,29,30,29,25,21,21,21,20,19,18,17,16,13,10,9,8,9,9,8,8,7,7,9,9,8,8,8,9,9,9,7,6,6,6,28,30,33,34,33,30,25,21,17,15,14,14,14,13,11,10,8,8,9,9,8,8,8,8,9,9,8,8,9,9,9,9,7,6,6,6],
        geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])))])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
