###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    Shape(
      appearance=Appearance(
        material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
        texture=ImageTexture(url=['../../images/5/singapore5-20.jpg'],repeatS=False,repeatT=False)),
      geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.25592182508997,103.87709668258039,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=36,xSpacing=4.103724E-4,zDimension=23,zSpacing=3.96896E-4,height=[5,4,4,4,4,4,3,3,2,2,2,2,4,4,4,2,1,1,0,-5,-6,-3,0,7,15,25,30,29,25,19,15,17,18,19,20,23,5,5,5,5,4,4,3,3,2,2,1,0,-7,-16,-14,-4,0,2,1,-1,-1,0,1,4,14,29,38,40,36,25,17,16,16,18,19,20,7,7,7,7,6,6,5,5,4,3,-1,-8,-14,-18,-13,-3,1,5,6,5,4,4,3,4,10,20,28,32,30,21,15,13,13,14,15,14,9,9,9,8,8,8,8,7,7,5,-5,-17,-20,-16,-10,-2,3,9,12,14,13,10,7,4,5,10,16,23,23,16,11,10,10,11,10,7,10,10,9,9,9,9,9,10,10,9,1,-8,-8,-3,1,6,11,15,18,20,18,12,8,5,6,9,12,15,15,11,7,4,1,0,0,-1,10,10,10,9,9,9,10,12,14,13,8,3,5,12,15,17,19,21,24,26,23,14,8,7,8,10,11,8,6,6,4,-1,-7,-13,-15,-12,10,10,9,8,7,7,9,12,13,13,12,9,12,16,18,19,20,21,24,28,23,11,5,6,6,6,6,4,3,4,2,-2,-7,-13,-16,-15,10,9,8,7,6,6,7,9,12,14,14,14,15,17,19,19,19,20,23,28,22,7,1,3,3,1,0,0,0,1,1,-1,-4,-8,-13,-17,9,8,7,6,5,5,6,7,9,12,13,13,15,17,18,19,19,19,22,29,25,10,2,1,0,-2,-3,-1,0,0,0,0,-2,-5,-9,-14,8,7,6,5,5,5,5,5,7,9,10,10,12,15,17,19,18,18,22,30,28,15,5,0,-4,-6,-6,-4,-2,0,0,0,0,-2,-5,-9,7,6,5,5,5,5,5,5,7,8,9,9,11,13,15,16,15,12,15,23,24,19,9,-2,-8,-7,-5,-3,-1,0,0,1,1,0,-1,-5,6,5,5,5,5,5,5,5,6,7,8,8,9,10,12,13,9,4,5,13,19,22,14,-3,-10,-6,-2,0,0,2,3,3,3,1,0,-1,5,5,6,7,8,9,9,9,8,8,8,8,8,9,11,13,11,7,5,5,9,15,9,-8,-12,-3,1,2,3,5,6,5,3,2,0,0,5,5,7,10,14,16,15,13,11,9,8,8,8,8,11,15,17,17,11,0,-1,1,-2,-13,-12,0,6,6,7,8,8,5,3,2,1,0,2,3,6,11,16,19,19,17,14,11,9,8,7,7,10,15,16,14,5,-9,-16,-13,-13,-16,-11,1,8,8,7,6,4,3,1,1,0,0,-1,0,4,10,15,19,20,20,17,14,11,9,8,7,9,11,8,1,-10,-26,-33,-31,-25,-17,-7,3,8,8,5,0,-2,-1,0,0,0,0,-3,-3,0,5,11,16,19,20,19,17,14,11,8,7,7,7,1,-11,-24,-36,-41,-39,-32,-18,-6,3,8,8,5,0,-3,-3,-2,-1,-1,-1,-5,-5,-3,0,4,10,14,17,19,19,17,12,8,6,5,3,-6,-23,-34,-38,-40,-40,-33,-20,-7,3,8,9,7,2,-1,-3,-5,-5,-4,-3,-5,-5,-5,-4,0,4,9,13,16,18,16,12,8,4,3,1,-10,-30,-39,-39,-39,-39,-33,-20,-8,2,8,9,8,6,2,-2,-5,-5,-5,-5,-6,-6,-6,-5,-3,0,2,6,10,12,12,10,6,2,0,0,-11,-30,-39,-39,-39,-39,-32,-20,-8,2,9,10,9,8,5,1,-2,-5,-6,-6,-6,-6,-6,-5,-5,-4,-1,1,3,5,7,6,4,1,0,0,-10,-27,-36,-38,-39,-39,-32,-20,-8,3,9,10,9,9,8,4,1,-2,-6,-7,-6,-6,-6,-6,-6,-5,-4,-2,-1,0,1,3,3,1,0,-1,-8,-21,-29,-35,-39,-39,-32,-20,-8,3,9,10,10,10,9,8,5,1,-2,-5,-6,-6,-6,-6,-6,-5,-5,-5,-5,-3,-1,0,1,1,0,0,-5,-13,-22,-31,-36,-37,-31,-20,-8,2,8,9,10,10,9,9,8,4,1,-2],
        geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])))])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
