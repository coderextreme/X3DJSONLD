###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_128',geoSystem=['GDC'],position=(1.4305560726498494,103.83400758019333,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.4305560726498494,103.83400758019333,0.0),range=4101.627,child1Url=['../../tiles/5/singapore24-16.x3d'],child2Url=['../../tiles/5/singapore24-17.x3d'],child3Url=['../../tiles/5/singapore25-16.x3d'],child4Url=['../../tiles/5/singapore25-17.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore12-8.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.4218243602718554,103.81964454606431,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[23,20,20,23,25,26,24,23,21,18,17,18,17,17,16,18,20,20,18,14,12,15,17,16,19,15,18,21,26,26,19,18,15,14,17,18,18,23,20,19,22,25,27,26,25,22,20,19,17,17,16,16,19,21,18,16,13,11,12,15,14,18,16,17,20,24,26,20,18,16,15,17,17,17,22,19,18,21,25,27,28,26,23,21,19,17,16,16,16,20,20,17,15,12,10,11,13,12,16,16,16,19,23,26,22,18,16,16,17,17,16,23,19,17,22,26,27,28,27,24,21,18,16,15,16,15,18,19,18,15,12,10,11,12,12,14,14,16,19,27,29,24,18,17,18,19,17,15,23,20,18,22,25,26,27,26,25,21,16,15,14,16,15,16,18,18,14,12,10,12,12,11,12,12,17,21,30,32,25,18,18,19,20,17,15,22,22,21,21,23,24,23,24,24,20,16,16,15,16,15,15,16,17,14,13,12,15,13,10,10,11,17,24,35,34,25,20,19,21,20,17,16,22,23,22,21,22,23,22,22,24,20,16,18,16,17,15,15,16,17,14,14,14,18,14,9,10,11,17,27,39,35,26,21,21,22,20,18,17,21,21,20,19,21,24,23,22,23,21,19,20,19,19,18,18,18,18,17,16,15,18,16,11,13,9,16,28,37,32,26,22,22,25,24,20,20,21,20,18,18,20,24,24,23,23,23,21,22,20,20,21,20,21,19,19,18,17,19,18,13,16,7,16,27,33,30,26,23,23,27,27,23,22,21,19,17,18,20,23,24,23,23,23,22,21,19,20,20,21,22,21,22,19,18,19,19,11,14,10,15,24,24,24,23,21,19,23,25,22,21,21,18,16,18,21,23,24,23,22,22,23,20,19,19,20,21,22,22,23,20,18,18,19,10,11,13,13,20,15,17,20,19,17,20,22,20,19,20,17,16,19,21,23,24,23,21,22,24,21,19,18,18,19,19,20,23,20,16,16,19,12,9,11,12,15,14,15,18,18,18,20,22,21,19,19,16,16,20,22,23,24,22,20,21,24,22,19,17,17,18,17,18,23,20,13,14,19,14,7,10,11,11,13,13,16,17,21,21,23,21,19,19,15,14,17,20,22,23,20,19,21,24,23,20,17,16,16,17,18,19,16,13,12,17,15,8,10,13,15,15,14,18,19,20,20,22,22,20,19,14,13,15,19,22,21,18,18,21,24,24,20,17,16,15,17,18,17,13,13,12,16,15,8,11,15,18,16,16,21,21,20,20,21,22,22,19,14,13,15,19,22,19,16,17,20,23,24,20,16,16,17,20,20,16,13,14,12,13,11,10,11,17,20,18,17,22,22,20,20,21,21,21,18,14,12,15,19,21,17,14,15,19,23,23,20,15,16,19,22,22,17,14,15,13,10,8,11,12,18,22,21,19,22,22,20,19,21,20,19,17,13,12,14,18,19,15,12,14,19,22,21,20,16,17,20,24,23,17,15,17,16,12,9,12,16,17,19,21,20,18,18,17,17,18,17,16,17,13,11,13,17,18,13,11,13,19,22,19,18,17,18,22,25,24,18,16,19,20,16,11,13,22,18,16,21,21,14,13,14,14,15,13,12,16,14,12,12,15,17,13,11,13,17,19,17,17,18,21,22,25,24,19,17,20,22,20,15,16,23,21,16,20,21,14,12,12,12,13,11,10,16,14,12,12,13,15,13,10,12,15,17,16,16,20,23,23,25,24,20,17,22,24,25,20,19,24,24,17,19,19,14,11,10,12,12,10,10,14,14,12,12,13,16,13,9,11,14,16,16,17,20,23,24,26,24,21,18,22,25,25,22,22,22,24,20,17,16,14,11,9,10,11,10,10,12,12,12,12,14,16,13,9,10,14,17,16,18,19,23,24,26,25,21,19,23,26,24,23,24,19,22,21,15,13,12,10,9,9,11,10,10,10,11,12,13,14,15,12,9,10,15,19,18,20,19,22,24,25,26,22,20,22,25,22,22,24,19,19,19,13,11,12,10,9,9,11,11,11,10,11,12,13,13,13,11,8,10,17,22,21,21,20,22,24,24,27,23,20,22,23,21,20,23,18,17,15,11,11,12,11,9,10,12,12,11,11,10,11,11,12,11,10,8,11,19,26,23,23,20,22,25,24,26,23,21,23,23,21,19,22,18,16,13,10,11,12,11,9,10,12,12,12,13,10,9,9,9,9,9,7,11,22,29,24,24,21,23,25,24,25,22,21,25,23,22,19,22,17,16,12,11,12,12,11,10,10,12,13,12,16,11,9,8,9,8,7,6,11,21,27,22,23,22,23,25,23,22,20,21,25,23,23,20,21,16,16,13,11,11,11,10,9,10,11,12,12,18,13,10,10,10,7,6,6,10,17,21,19,21,21,21,23,20,19,19,22,24,24,24,22,20,17,16,15,11,11,10,10,9,9,11,12,11,20,17,12,12,11,7,6,7,10,15,18,18,19,20,20,21,18,16,18,23,25,25,24,23,20,18,16,15,13,11,10,10,9,9,11,11,11,22,21,16,13,12,8,9,9,10,15,18,18,17,18,18,18,17,16,17,26,26,26,23,22,20,20,17,15,15,13,11,11,10,10,11,11,10,24,24,18,14,13,10,12,11,11,14,17,18,16,16,15,16,17,17,18,29,27,26,22,22,20,20,17,15,16,15,12,12,10,9,10,10,10,27,26,19,15,14,13,16,14,11,11,15,17,16,14,12,16,18,19,22,34,29,23,21,22,20,19,16,14,15,15,13,11,9,9,10,10,9,28,26,19,15,14,15,17,15,11,11,14,16,15,12,11,16,19,21,24,35,29,22,19,21,19,18,16,13,14,14,12,11,8,8,9,10,9,27,24,18,15,16,16,17,15,12,12,14,13,13,13,12,17,21,21,24,32,28,21,19,20,18,17,14,13,12,11,10,9,7,7,8,10,11,26,22,17,15,16,16,17,16,13,14,15,11,12,12,12,17,21,20,24,30,28,21,19,18,18,16,13,13,11,11,10,9,8,7,8,11,12,26,23,18,15,16,18,19,17,16,17,16,11,10,11,12,16,20,19,24,33,30,23,18,17,19,17,14,13,12,12,11,11,9,8,8,12,13,26,23,18,16,17,20,20,19,18,20,18,10,10,11,12,15,18,18,24,33,31,23,18,16,19,17,14,12,12,13,13,12,10,9,8,12,13,24,22,19,18,19,22,23,21,20,22,19,13,11,10,11,14,17,18,22,28,28,22,16,15,17,16,12,11,12,14,14,12,11,9,9,13,14,23,22,20,19,21,22,24,23,21,22,19,15,12,10,10,13,17,18,19,23,23,20,15,14,16,14,11,11,12,14,14,12,10,9,9,13,14,22,23,21,20,21,22,23,22,21,22,19,15,13,12,13,14,18,19,17,17,18,17,14,14,16,13,11,11,15,14,12,10,9,9,9,12,13,21,22,22,20,20,21,23,21,21,22,19,16,14,13,14,14,19,20,14,13,14,14,14,14,17,12,11,11,18,14,12,10,9,9,9,11,11,20,21,21,21,20,20,21,20,21,23,21,18,16,13,14,13,17,17,14,14,13,14,14,16,17,14,12,13,22,17,12,11,10,9,9,9,9,19,20,20,21,19,19,19,19,22,23,23,20,17,13,13,13,15,15,14,14,13,14,14,19,17,16,13,14,25,19,13,11,10,9,9,8,8],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
