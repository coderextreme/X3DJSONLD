###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_1510',geoSystem=['GDC'],position=(1.4829463469178132,103.8914597167094,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.4829463469178132,103.8914597167094,0.0),range=4101.627,child1Url=['../../tiles/5/singapore30-20.x3d'],child2Url=['../../tiles/5/singapore30-21.x3d'],child3Url=['../../tiles/5/singapore31-20.x3d'],child4Url=['../../tiles/5/singapore31-21.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore15-10.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.4742146345398193,103.87709668258039,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[12,10,9,9,11,12,13,15,18,16,15,16,17,17,19,21,21,20,17,17,18,19,21,23,24,25,28,35,39,37,41,45,47,44,43,46,48,13,10,9,9,10,12,13,16,17,16,15,16,17,19,21,21,21,21,19,17,18,19,21,22,24,26,29,37,41,39,41,45,47,45,43,46,48,13,10,8,7,8,11,14,17,17,16,13,16,18,20,22,21,20,21,19,18,18,18,21,21,24,27,32,39,43,42,42,44,47,44,44,47,48,13,10,7,7,9,11,14,17,17,15,13,15,17,20,22,22,21,21,20,19,18,18,21,21,23,26,32,40,44,44,42,44,47,46,46,47,46,12,9,6,7,9,10,14,17,18,16,13,13,16,19,22,23,23,21,20,19,18,17,21,21,23,26,32,39,45,45,43,44,48,49,47,45,44,13,9,6,7,9,11,14,18,18,15,13,13,15,18,21,24,23,21,20,19,18,17,19,20,22,25,32,38,45,45,44,45,50,52,49,47,46,14,10,6,7,10,11,14,18,18,14,13,12,13,16,21,25,23,20,19,18,18,16,17,20,22,26,32,38,44,46,45,46,51,54,52,50,49,13,9,6,7,10,12,13,16,16,14,14,12,13,16,22,25,23,20,18,16,17,16,17,20,22,25,31,37,43,45,46,47,52,55,54,53,52,10,7,6,7,10,12,11,13,14,15,16,14,14,16,22,23,21,20,18,15,16,16,18,22,22,25,30,35,41,44,46,48,52,55,56,56,55,8,7,6,6,8,11,11,11,14,16,17,15,15,17,22,21,19,19,17,14,15,16,18,22,23,24,29,34,39,41,43,47,52,54,56,58,56,8,7,5,4,6,10,10,11,15,17,17,16,16,18,21,19,17,17,15,14,15,17,19,21,23,23,26,31,36,38,40,43,49,53,56,57,56,9,7,6,4,6,10,10,11,14,17,16,16,17,19,20,17,14,15,14,14,15,18,19,21,22,22,24,28,33,35,36,41,47,52,55,56,55,11,9,8,5,6,10,10,10,11,14,15,16,18,19,19,17,13,13,12,15,16,18,20,21,21,21,22,25,29,33,35,40,45,51,53,55,54,12,11,10,6,7,11,11,10,11,13,14,15,18,18,17,15,12,12,12,16,16,18,20,21,20,20,21,22,27,32,35,39,44,49,51,52,52,12,12,12,8,8,12,13,12,12,13,12,12,14,15,15,12,11,11,13,16,16,17,18,18,19,19,20,22,27,32,35,38,43,47,49,50,50,13,13,13,9,8,12,14,13,12,13,11,9,11,12,12,9,11,12,15,16,16,17,17,17,19,19,20,22,26,31,35,37,42,45,47,48,47,14,14,13,9,9,12,14,13,13,12,8,8,8,8,9,8,12,14,15,16,16,16,16,17,19,19,21,22,25,30,32,35,40,44,47,48,46,15,14,13,10,9,12,13,13,13,11,7,7,7,6,7,8,14,17,16,17,15,16,16,16,18,19,21,22,24,28,30,34,38,42,48,48,46,15,14,13,12,10,11,13,13,12,10,7,6,7,7,7,10,18,19,19,19,16,15,16,16,16,16,18,20,22,27,29,33,38,41,47,48,46,15,15,14,13,11,11,13,12,10,8,7,6,8,9,9,12,20,20,21,20,16,15,16,15,15,15,16,19,21,25,27,32,37,41,46,48,48,16,15,14,13,11,10,11,10,9,8,6,7,9,12,12,14,21,19,20,21,17,15,15,15,15,15,16,19,21,23,26,31,36,40,45,48,49,17,16,14,13,10,9,9,8,8,7,6,8,11,15,15,15,20,18,20,21,17,14,14,16,16,15,17,19,21,22,25,30,35,40,44,48,50,17,15,15,13,10,7,7,7,7,7,8,9,12,16,17,15,17,16,20,20,15,13,13,15,16,16,17,19,21,21,24,29,34,39,43,47,49,17,15,14,14,10,6,6,6,6,8,9,10,13,17,19,16,15,15,19,20,14,12,13,14,15,16,18,19,20,21,23,28,33,38,41,45,47,17,14,13,13,10,6,6,5,5,8,9,11,14,18,20,16,14,14,19,19,14,12,13,14,16,17,17,18,19,21,23,27,32,36,38,41,44,17,13,12,12,10,7,6,5,5,8,10,12,15,18,20,16,14,13,19,18,14,12,13,14,17,17,17,17,18,21,23,27,31,33,34,38,42,16,13,12,10,8,7,7,7,7,9,10,13,17,18,19,15,13,12,18,16,12,12,14,17,20,21,19,19,19,21,22,26,29,31,33,38,40,16,13,10,8,7,7,8,8,9,10,10,14,17,18,18,15,11,12,17,14,10,11,15,20,24,25,23,21,21,21,22,26,27,30,32,38,40,15,13,9,7,6,7,8,9,10,10,10,13,16,18,17,14,10,10,13,12,10,11,16,21,25,27,28,26,25,23,24,26,27,30,34,38,40,14,12,9,6,5,6,8,10,10,10,10,12,15,17,16,12,9,8,10,8,9,11,16,22,25,29,31,31,30,27,25,26,27,31,35,38,39,14,11,8,5,4,6,8,10,11,10,10,11,13,15,14,11,9,8,8,8,9,11,16,21,25,29,32,32,31,29,26,26,28,31,34,37,38,13,11,8,4,4,6,8,11,12,10,10,10,12,12,12,10,9,9,8,7,9,12,16,20,23,27,31,33,32,31,26,25,28,31,33,35,36,13,11,8,5,6,7,9,11,14,12,8,8,10,11,11,10,10,9,8,8,12,16,18,19,21,26,29,31,31,29,26,25,29,31,34,35,36,12,11,9,8,8,8,10,11,15,15,7,5,8,9,10,12,12,9,9,9,14,19,21,19,20,24,27,29,28,27,25,25,31,33,35,36,36,12,11,9,9,9,9,10,12,16,16,9,7,9,10,11,15,14,12,12,11,16,21,23,21,21,23,27,29,27,25,24,27,33,34,35,37,37,10,10,10,10,9,9,11,12,17,17,11,9,10,12,13,18,17,16,14,12,16,22,24,23,22,22,27,29,25,22,22,29,35,35,35,37,38,10,10,10,10,9,9,10,12,17,18,14,13,13,14,14,18,18,18,17,13,16,20,24,24,24,23,27,28,25,22,25,32,37,38,37,37,38,10,9,10,10,9,9,9,11,17,19,18,17,17,16,14,16,19,19,19,14,15,18,23,25,26,26,29,28,24,24,28,35,40,40,38,38,38,10,9,10,9,9,10,9,10,15,19,20,21,20,18,14,16,19,20,20,16,15,17,22,26,27,28,29,27,23,24,30,34,38,41,41,40,39,10,10,10,9,10,11,10,9,13,18,21,24,22,20,15,16,19,22,21,17,14,16,22,26,29,30,29,25,22,26,29,31,35,40,43,42,41,10,11,10,9,10,13,12,10,13,18,22,26,25,21,15,17,21,22,22,18,14,15,21,26,29,30,29,24,22,26,30,32,36,42,44,43,41,12,12,11,9,11,15,15,11,12,17,22,27,27,22,16,19,23,23,22,19,14,15,20,25,28,30,28,22,22,26,31,35,41,45,45,42,41,13,13,13,10,12,17,17,13,12,17,22,28,28,22,17,19,24,24,22,19,15,15,18,23,27,29,27,22,23,27,32,36,42,44,42,40,40,13,14,14,11,13,19,19,15,13,17,23,28,28,23,18,19,24,25,23,19,16,15,16,21,25,27,26,22,23,28,33,36,40,41,39,37,36],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
