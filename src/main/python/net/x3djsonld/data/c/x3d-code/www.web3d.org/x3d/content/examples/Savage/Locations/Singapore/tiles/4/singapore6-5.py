###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_65',geoSystem=['GDC'],position=(1.3257755241139217,103.74782937541922,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.3257755241139217,103.74782937541922,0.0),range=4101.627,child1Url=['../../tiles/5/singapore12-10.x3d'],child2Url=['../../tiles/5/singapore12-11.x3d'],child3Url=['../../tiles/5/singapore13-10.x3d'],child4Url=['../../tiles/5/singapore13-11.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore6-5.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.3170438117359278,103.7334663412902,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[12,12,9,8,14,18,14,11,12,11,9,6,4,4,7,10,12,13,12,11,9,6,8,10,11,14,15,17,18,16,18,19,23,24,24,19,18,10,11,9,11,17,18,11,11,12,12,10,7,4,4,8,10,14,16,16,16,14,10,10,13,13,15,16,17,17,17,17,17,20,22,21,18,17,9,10,8,11,17,17,10,10,13,13,11,9,5,5,9,10,15,20,18,16,16,11,10,13,13,15,16,17,17,17,17,17,19,22,19,17,16,8,9,7,8,14,14,11,10,14,13,11,10,8,7,9,11,17,23,19,15,14,11,10,12,11,14,16,17,18,18,17,18,19,23,19,17,16,8,8,7,8,13,13,11,10,14,13,12,11,10,9,10,11,16,22,18,13,14,11,8,9,9,13,15,17,19,18,17,19,21,23,19,18,18,8,8,8,8,12,12,12,12,14,13,13,13,11,10,10,10,14,19,16,11,14,10,5,5,6,11,14,17,18,17,17,19,23,22,19,18,20,8,9,8,9,12,13,13,13,14,13,14,13,12,12,11,11,13,17,14,11,12,10,4,4,5,10,14,16,17,17,17,20,24,22,19,19,21,8,11,10,9,12,15,14,15,15,13,15,13,12,13,14,13,12,14,12,10,11,10,5,4,6,11,14,14,15,15,17,20,24,22,19,21,21,8,12,10,9,12,16,15,16,16,14,15,14,12,14,15,14,13,13,12,10,10,10,6,5,7,11,14,12,14,15,17,20,24,22,19,21,21,8,13,11,10,12,15,14,17,16,16,17,17,13,14,14,15,15,13,12,11,11,10,8,6,8,12,14,10,13,16,18,21,23,20,19,19,21,8,13,11,10,11,13,13,16,15,16,17,18,15,14,13,14,14,13,13,11,11,10,8,7,8,11,12,10,13,16,18,20,22,18,20,19,21,7,12,10,10,10,9,12,15,13,14,16,19,16,16,14,11,12,13,13,12,12,10,7,7,8,10,9,10,13,15,16,16,19,17,22,19,21,7,11,10,10,9,8,11,14,12,13,15,18,17,17,14,9,11,13,13,12,12,10,7,7,9,9,7,10,14,14,13,12,16,16,21,19,22,7,10,11,11,9,10,13,14,13,14,15,16,16,17,14,10,13,15,14,13,13,10,8,8,9,10,7,9,13,13,11,10,15,16,18,20,22,9,9,10,11,9,12,14,14,14,15,15,15,16,18,15,12,14,16,15,14,14,11,9,8,10,12,8,8,13,12,10,10,16,16,16,19,20,12,8,9,10,8,12,15,16,15,16,16,15,18,20,18,15,15,16,15,15,15,12,10,9,12,13,10,7,12,11,9,14,19,18,16,17,17,12,8,8,9,8,12,15,17,16,16,16,15,18,22,20,17,17,17,16,16,15,12,10,9,14,15,12,8,12,9,10,18,21,18,18,18,16,9,8,7,8,8,11,14,15,14,15,17,15,17,22,20,18,19,19,18,17,15,12,11,11,15,15,14,10,11,8,12,20,20,19,21,23,18,7,8,7,7,9,11,12,13,13,15,17,15,16,19,20,20,21,20,18,18,15,12,11,12,15,14,14,12,11,8,15,20,19,19,23,27,21,7,7,7,7,10,11,12,13,13,16,18,17,15,16,20,23,23,20,18,18,15,11,9,11,13,12,12,12,12,10,15,19,20,20,20,26,21,6,6,7,7,11,10,11,13,14,17,19,20,16,15,20,25,25,21,17,17,15,11,9,10,11,11,11,11,14,13,15,18,21,21,17,23,21,5,6,7,7,9,8,10,12,15,18,20,21,20,18,21,25,27,21,17,16,12,9,9,10,11,11,10,10,14,15,15,16,22,22,16,22,20,4,5,7,8,8,8,9,13,16,19,21,23,22,21,21,24,28,21,16,15,10,8,10,11,12,11,10,8,14,16,16,16,22,23,16,22,19,5,5,7,8,9,10,12,15,19,21,24,26,23,21,20,22,25,19,15,14,10,8,10,11,13,12,11,8,12,14,18,20,23,22,16,22,19,7,4,7,8,10,13,15,18,20,24,26,28,24,20,18,20,23,18,15,13,10,8,10,12,13,13,11,8,10,12,19,25,24,21,17,21,19,6,3,7,9,12,16,18,19,21,26,29,28,25,20,18,21,22,18,15,15,12,10,11,11,12,11,10,7,8,10,19,25,25,23,18,19,18,4,1,7,10,13,18,19,20,20,27,31,29,27,20,19,22,21,18,17,17,14,11,11,11,11,10,9,7,6,10,17,24,27,25,17,18,16,4,1,5,8,13,18,18,18,18,26,32,30,27,19,18,21,17,17,20,21,16,13,12,11,12,11,9,7,6,10,16,24,29,23,15,17,16,4,2,4,5,12,17,16,16,16,23,33,30,26,16,15,18,12,15,22,23,17,14,13,13,14,12,9,7,8,10,16,25,31,20,14,16,17,4,4,4,2,11,16,15,14,15,22,31,28,22,14,13,15,10,11,18,21,17,15,14,14,15,11,8,8,9,9,15,23,26,19,14,16,17,5,7,6,1,10,15,14,13,16,21,28,25,18,12,13,13,9,8,12,17,17,16,14,15,14,10,8,8,9,9,13,20,20,18,14,17,17,7,9,8,4,10,14,13,12,19,24,28,24,17,13,14,12,9,9,11,14,17,16,14,14,13,11,10,9,9,10,14,17,18,16,15,17,16,9,10,9,8,10,12,14,12,22,27,30,24,17,16,15,12,11,13,13,13,16,16,14,14,13,14,12,8,9,11,15,16,20,15,17,16,16,11,11,10,10,11,12,14,12,20,26,26,22,19,17,14,11,11,17,19,14,14,15,14,15,14,15,13,9,8,12,16,16,22,14,17,16,16,11,13,11,10,11,12,15,13,16,21,20,20,22,19,12,10,11,22,26,17,12,13,14,17,15,15,12,11,8,11,16,18,22,13,16,15,16,11,13,12,12,11,12,15,14,15,17,16,19,21,19,14,12,13,24,31,20,11,12,13,16,13,13,12,12,8,10,15,19,22,14,16,16,17,10,11,14,17,11,13,13,15,16,14,14,18,18,18,18,17,16,24,32,23,12,12,12,13,11,10,12,13,8,8,12,20,22,18,16,18,19,10,10,15,18,11,13,11,15,18,14,14,17,16,17,19,18,17,22,32,24,11,12,12,12,11,10,12,14,10,9,11,18,20,19,17,21,21,11,11,15,16,12,14,11,15,20,17,16,14,15,15,18,16,16,20,28,21,10,11,11,13,12,10,12,13,13,13,12,14,17,19,19,24,22,14,12,14,14,12,15,13,16,21,18,16,14,13,14,18,16,15,21,26,20,11,10,11,13,13,11,12,13,15,15,12,11,17,19,20,25,24,16,15,13,12,12,18,17,18,20,17,16,15,12,13,17,16,15,22,26,20,13,11,11,14,14,11,12,12,15,16,12,10,16,20,22,24,26,17,16,13,12,14,19,18,19,20,17,16,15,11,11,15,15,16,24,27,20,13,11,12,16,14,12,12,11,15,15,12,9,16,21,23,24,28,16,17,15,15,16,20,19,18,18,18,17,15,11,10,11,14,19,26,29,22,13,11,13,18,14,11,12,11,14,14,12,10,16,23,22,25,30,14,16,16,16,17,20,18,17,17,18,17,14,11,10,11,13,21,27,28,22,13,10,14,20,14,10,11,11,14,13,12,12,16,22,22,26,33],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
