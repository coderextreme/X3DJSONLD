###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_1414',geoSystem=['GDC'],position=(1.4654829221618253,104.00636398974156,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.4654829221618253,104.00636398974156,0.0),range=4101.627,child1Url=['../../tiles/5/singapore28-28.x3d'],child2Url=['../../tiles/5/singapore28-29.x3d'],child3Url=['../../tiles/5/singapore29-28.x3d'],child4Url=['../../tiles/5/singapore29-29.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore14-14.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.4567512097838313,103.99200095561254,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[10,10,14,14,12,11,9,9,12,11,10,10,8,5,7,14,13,10,12,16,18,15,15,15,16,16,16,15,15,14,14,12,10,8,8,7,7,10,9,10,11,11,11,10,9,12,11,11,12,11,8,10,15,13,9,11,15,15,15,15,15,16,16,16,15,15,14,13,11,9,8,8,7,6,10,7,7,8,9,9,9,9,12,12,12,14,14,11,13,16,14,7,8,13,11,13,15,16,16,16,15,15,14,14,12,10,8,8,7,6,6,10,8,7,7,7,7,7,8,10,12,13,14,15,13,12,14,13,9,10,14,12,13,15,16,16,16,15,15,14,13,11,9,8,8,7,6,6,12,10,7,7,6,5,5,6,9,11,13,14,16,13,10,11,12,11,13,15,15,14,16,15,15,15,15,14,14,12,10,8,8,7,6,6,6,13,11,9,7,7,5,4,5,7,11,13,13,15,12,9,10,14,14,15,16,16,15,16,15,15,15,15,14,13,11,9,8,8,7,6,6,6,13,12,11,10,9,7,4,4,6,10,11,11,13,11,8,10,17,18,17,15,15,16,14,14,14,14,14,14,12,10,8,8,7,6,6,6,6,14,13,13,12,12,9,5,4,6,9,10,10,11,10,7,10,17,19,18,15,15,15,14,14,14,14,14,13,11,9,8,8,7,6,6,6,6,15,15,15,15,14,10,6,5,7,8,9,9,9,8,7,9,16,18,18,16,16,13,13,14,14,14,14,12,10,8,8,7,6,6,6,6,6,15,15,16,16,15,11,7,6,7,7,9,8,8,8,7,9,15,18,18,16,16,13,13,14,14,14,13,11,9,8,8,7,6,6,6,6,6,13,14,17,17,16,12,8,8,8,8,9,8,7,8,8,9,13,16,18,17,15,13,13,14,14,14,12,10,8,8,7,6,6,6,6,6,6,15,15,16,15,13,11,9,9,9,8,8,8,7,8,8,8,11,16,18,17,15,14,14,14,14,13,11,9,8,8,7,6,6,6,6,6,6,22,17,14,11,9,10,10,10,9,7,8,8,8,9,7,7,9,15,17,17,16,16,15,14,14,12,10,8,8,7,6,6,6,6,6,6,6,23,17,12,10,9,9,9,10,9,8,10,11,10,10,7,7,10,16,17,17,16,16,15,14,13,11,9,8,8,7,6,6,6,6,6,6,6,19,14,11,10,9,9,9,10,9,10,12,13,12,10,7,7,12,16,16,16,16,15,14,14,12,10,8,8,7,6,6,6,6,6,6,6,6,17,13,10,10,10,9,9,11,11,12,14,15,13,11,9,9,13,18,17,15,15,14,14,13,11,9,8,8,7,6,6,6,6,6,6,6,6,16,13,10,10,10,10,11,13,13,15,15,16,14,13,13,10,13,19,20,14,13,13,13,12,10,8,8,7,6,6,6,6,6,6,6,6,6,16,14,11,9,9,12,14,15,15,17,17,16,15,15,16,12,12,19,21,14,12,13,12,11,9,8,8,7,6,6,6,6,6,6,6,6,6,16,14,10,8,11,15,17,17,17,18,19,17,16,17,19,14,12,18,22,16,12,13,12,10,8,7,7,6,6,6,6,6,6,6,6,6,6,16,14,10,8,13,18,20,19,18,19,20,19,17,19,20,15,12,17,22,18,13,12,11,8,7,7,6,6,6,6,6,6,6,6,6,6,6,18,15,10,9,14,19,21,20,19,21,22,21,21,21,20,14,12,16,21,19,17,11,10,7,6,6,6,6,6,6,6,6,6,6,6,6,6,19,16,11,11,16,20,22,20,19,21,23,22,23,22,20,14,12,14,19,20,20,11,8,6,6,6,6,6,6,6,6,6,6,6,6,6,6,19,15,12,13,18,20,22,20,19,21,23,23,24,23,20,15,14,14,18,21,21,12,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,18,15,12,15,19,21,22,20,18,20,22,23,23,23,21,17,15,15,17,22,22,13,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,18,15,15,17,20,21,21,20,18,20,22,23,23,23,21,18,16,17,17,21,20,14,7,6,6,6,6,6,6,6,6,6,6,6,6,6,6,19,17,17,18,21,21,21,20,19,20,22,22,22,23,22,18,17,18,18,20,17,14,9,7,6,6,6,6,6,6,6,6,6,6,6,6,6,21,19,18,19,20,20,20,20,20,20,21,21,21,24,24,19,18,19,18,17,13,12,10,6,6,6,6,6,6,6,6,6,6,6,6,6,6,22,20,19,19,19,18,18,20,21,21,21,20,20,26,26,21,18,19,19,16,9,11,10,6,6,6,6,6,6,6,6,6,6,6,6,6,6,20,18,18,17,16,16,16,19,21,21,20,20,20,26,28,22,18,19,19,17,11,11,10,7,6,6,6,6,6,6,6,6,6,6,6,6,6,17,16,16,14,14,13,13,17,19,19,19,19,20,26,29,23,18,20,20,18,12,11,10,7,7,7,6,6,6,6,6,6,6,6,6,6,6,16,13,12,10,10,10,9,11,15,17,17,18,20,26,30,22,16,19,20,17,13,13,11,10,8,7,6,6,6,6,6,6,6,6,6,6,6,14,11,9,6,6,7,6,6,11,14,14,17,21,26,29,21,14,17,19,17,13,14,13,13,10,6,6,6,6,6,6,6,6,6,6,6,6,11,9,8,6,6,7,6,6,8,10,11,16,22,26,26,20,15,17,19,16,13,16,19,15,8,6,6,6,6,6,6,6,6,6,6,6,6,8,7,6,5,6,7,6,6,6,6,8,16,23,26,24,19,15,16,18,16,13,17,24,16,7,7,7,7,7,7,7,7,7,6,6,6,6,7,7,6,6,9,11,11,9,6,6,7,16,23,26,24,19,16,14,15,15,12,16,23,18,9,7,7,7,7,7,7,7,7,6,6,6,6,7,7,7,8,13,16,15,12,8,6,7,15,23,27,25,20,15,11,13,14,10,14,21,19,11,8,8,8,8,8,8,8,7,7,6,6,6,7,9,11,13,16,18,17,14,9,6,7,14,23,27,26,21,15,11,13,14,10,10,15,13,11,9,9,8,8,8,8,8,7,7,6,6,6,8,12,16,17,20,21,19,15,9,6,7,13,23,28,27,22,14,12,14,15,11,6,8,8,11,10,10,9,9,9,9,8,8,7,7,6,5,10,14,17,19,20,21,19,16,10,6,7,11,21,27,28,22,14,14,15,15,9,3,6,7,10,11,10,10,9,9,9,8,8,7,7,5,3,13,16,19,20,21,21,19,16,11,7,6,10,19,24,27,22,14,15,17,15,8,0,4,6,9,11,11,10,10,9,9,9,8,8,7,3,0,16,19,20,21,20,18,16,14,11,7,6,9,16,22,27,22,16,17,17,13,7,2,4,6,8,11,11,11,10,10,9,9,8,8,5,0,0,20,21,22,22,19,16,14,13,10,9,8,8,14,21,26,23,19,19,17,11,7,3,2,5,7,10,11,11,11,10,10,9,9,8,4,-1,-3,21,23,23,22,18,15,13,14,13,13,11,10,13,19,26,24,21,20,16,9,7,4,2,4,6,9,11,11,11,10,10,9,9,7,1,-2,-3,22,24,24,22,17,14,14,16,16,17,14,12,13,18,24,25,24,22,14,7,7,6,3,3,5,7,10,11,11,11,10,10,9,4,0,-3,-3],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
