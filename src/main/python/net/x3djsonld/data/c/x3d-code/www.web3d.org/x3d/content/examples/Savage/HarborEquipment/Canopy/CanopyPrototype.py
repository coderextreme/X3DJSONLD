###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    meta(content='CanopyPrototype.x3d',name='title'),
    meta(content='A simple canopy with tent material color exposed as a proto input',name='description'),
    meta(content='LT Patrick Sullivan',name='creator'),
    meta(content='23 March 2005',name='created'),
    meta(content='12 January 2014',name='modified'),
    meta(content='https://savage.nps.edu/Savage/HarborEquipment/Canopy/CanopyPrototype.x3d',name='identifier'),
    meta(content='X3D-Edit 3.2, https://savage.nps.edu/X3D-Edit',name='generator'),
    meta(content='VizX3D, http://www.vivaty.com/downloads/studio',name='generator'),
    meta(content='Wings3D, http://www.wings3d.com',name='generator'),
    meta(content='../../license.html',name='license')]),
  Scene=Scene(
    children=[
    ProtoDeclare(name='Canopy',
      ProtoInterface=ProtoInterface(
        field=[
        field(accessType='initializeOnly',appinfo='The color of the material of the tent that forms the canopy',name='materialColor',type='SFColor',value=(0,0,1))]),
      ProtoBody=ProtoBody(
        children=[
        Group(DEF='Canopy',
          children=[
          Transform(DEF='TentMaterial',
            children=[
            Shape(DEF='cube1',
              appearance=Appearance(
                material=Material(DEF='tentColor',
                  IS=IS(
                    connect=[
                    connect(nodeField='diffuseColor',protoField='materialColor')]))),
              geometry=IndexedFaceSet(coordIndex=[0,1,2,-1,0,2,3,-1,0,4,5,-1,0,5,6,-1,0,6,7,-1,0,7,8,-1,0,8,1,-1,0,3,9,-1,0,9,10,-1,0,10,4,-1,1,8,11,-1,1,11,2,-1,12,6,13,-1,12,13,14,-1,12,8,7,-1,12,7,6,-1,12,14,11,-1,12,11,8,-1,6,5,15,-1,6,15,16,-1,6,16,13,-1,9,17,18,-1,9,18,19,-1,9,19,16,-1,9,16,15,-1,9,15,10,-1,9,3,2,-1,9,2,17,-1,17,2,11,-1,17,11,18,-1,20,16,19,-1,20,19,18,-1,20,14,13,-1,20,13,16,-1,20,18,11,-1,20,11,14,-1,29,30,31,-1,29,31,32,-1,29,32,33,-1,29,33,34,-1,29,35,36,-1,29,36,30,-1,29,34,37,-1,29,37,35,-1,30,36,38,-1,30,38,31,-1,31,38,39,-1,31,39,32,-1,32,39,40,-1,32,40,33,-1,35,39,38,-1,35,38,36,-1,35,37,40,-1,35,40,39,-1],creaseAngle=0.524,
                coord=Coordinate(point=[(-1,.59111,1),(-.0765,1,.0765),(-.102,1,0),(-1,.59111,0),(-1,.46311,1),(1,.46311,1),(1,.59111,1),(0,.59111,1),(0,1,.102),(-1,.59111,-1),(-1,.46311,-1),(0,1,0),(.0765,1,.0765),(1,.59111,0),(.102,1,0),(1,.46311,-1),(1,.59111,-1),(-.0765,1,-.0765),(0,1,-.102),(0,.59111,-1),(.0765,1,-.0765),(-1,.46311,1),(1,.46311,1),(1,.46311,-1),(-1,.46311,-1),(-1,.46311,1),(1,.46311,1),(1,.46311,-1),(-1,.46311,-1),(-1,.59111,1),(-.102,1,.102),(.102,1,.102),(1,.59111,1),(1,.46311,1),(-1,.46311,1),(-1,.59111,-1),(-.102,1,-.102),(-1,.46311,-1),(.102,1,-.102),(1,.59111,-1),(1,.46311,-1)])))]),
          Transform(DEF='Leg1',
            children=[
            Shape(DEF='cylinder2_copy5',
              appearance=Appearance(
                material=Material(DEF='Black_mat',diffuseColor=(0,0,0))),
              geometry=IndexedFaceSet(coordIndex=[0,1,2,-1,0,2,3,-1,0,4,5,-1,0,5,6,-1,0,6,7,-1,0,7,8,-1,0,8,9,-1,0,9,10,-1,0,10,11,-1,0,11,12,-1,0,12,13,-1,0,13,14,-1,0,14,15,-1,0,15,16,-1,0,16,17,-1,0,17,1,-1,0,3,18,-1,0,18,4,-1,1,17,19,-1,1,19,2,-1,17,16,20,-1,17,20,19,-1,16,15,21,-1,16,21,20,-1,15,14,22,-1,15,22,21,-1,14,13,23,-1,14,23,22,-1,13,12,24,-1,13,24,23,-1,12,11,25,-1,12,25,24,-1,11,10,26,-1,11,26,25,-1,10,9,27,-1,10,27,26,-1,9,8,28,-1,9,28,27,-1,8,7,29,-1,8,29,28,-1,7,6,30,-1,7,30,29,-1,6,5,31,-1,6,31,30,-1,5,4,18,-1,5,18,31,-1,3,2,19,-1,3,19,20,-1,3,20,21,-1,3,21,22,-1,3,22,23,-1,3,23,24,-1,3,24,25,-1,3,25,26,-1,3,26,27,-1,3,27,28,-1,3,28,29,-1,3,29,30,-1,3,30,31,-1,3,31,18,-1],creaseAngle=0.524,
                coord=Coordinate(point=[(-.89716,.61014,-.91191),(-.89814,.61014,-.90699),(-.89814,-1,-.90699),(-.89716,-1,-.91191),(-.89814,.61014,-.91682),(-.90092,.61014,-.92099),(-.90509,.61014,-.92378),(-.91001,.61014,-.92476),(-.91493,.61014,-.92378),(-.9191,.61014,-.92099),(-.92189,.61014,-.91682),(-.92286,.61014,-.91191),(-.92189,.61014,-.90699),(-.9191,.61014,-.90282),(-.91493,.61014,-.90003),(-.91001,.61014,-.89905),(-.90509,.61014,-.90003),(-.90092,.61014,-.90282),(-.89814,-1,-.91682),(-.90092,-1,-.90282),(-.90509,-1,-.90003),(-.91001,-1,-.89905),(-.91493,-1,-.90003),(-.9191,-1,-.90282),(-.92189,-1,-.90699),(-.92286,-1,-.91191),(-.92189,-1,-.91682),(-.9191,-1,-.92099),(-.91493,-1,-.92378),(-.91001,-1,-.92476),(-.90509,-1,-.92378),(-.90092,-1,-.92099)])))]),
          Transform(DEF='Leg2',
            children=[
            Shape(DEF='cylinder2_copy4',
              appearance=Appearance(
                material=Material(USE='Black_mat')),
              geometry=IndexedFaceSet(coordIndex=[0,1,2,-1,0,2,3,-1,0,4,5,-1,0,5,6,-1,0,6,7,-1,0,7,8,-1,0,8,9,-1,0,9,10,-1,0,10,11,-1,0,11,12,-1,0,12,13,-1,0,13,14,-1,0,14,15,-1,0,15,16,-1,0,16,17,-1,0,17,1,-1,0,3,18,-1,0,18,4,-1,1,17,19,-1,1,19,2,-1,17,16,20,-1,17,20,19,-1,16,15,21,-1,16,21,20,-1,15,14,22,-1,15,22,21,-1,14,13,23,-1,14,23,22,-1,13,12,24,-1,13,24,23,-1,12,11,25,-1,12,25,24,-1,11,10,26,-1,11,26,25,-1,10,9,27,-1,10,27,26,-1,9,8,28,-1,9,28,27,-1,8,7,29,-1,8,29,28,-1,7,6,30,-1,7,30,29,-1,6,5,31,-1,6,31,30,-1,5,4,18,-1,5,18,31,-1,3,2,19,-1,3,19,20,-1,3,20,21,-1,3,21,22,-1,3,22,23,-1,3,23,24,-1,3,24,25,-1,3,25,26,-1,3,26,27,-1,3,27,28,-1,3,28,29,-1,3,29,30,-1,3,30,31,-1,3,31,18,-1],creaseAngle=0.524,
                coord=Coordinate(point=[(-.89716,.61014,.90984),(-.89814,.61014,.91476),(-.89814,-1,.91476),(-.89716,-1,.90984),(-.89814,.61014,.90492),(-.90092,.61014,.90075),(-.90509,.61014,.89797),(-.91001,.61014,.89699),(-.91493,.61014,.89797),(-.9191,.61014,.90075),(-.92189,.61014,.90492),(-.92286,.61014,.90984),(-.92189,.61014,.91476),(-.9191,.61014,.91893),(-.91493,.61014,.92172),(-.91001,.61014,.92269),(-.90509,.61014,.92172),(-.90092,.61014,.91893),(-.89814,-1,.90492),(-.90092,-1,.91893),(-.90509,-1,.92172),(-.91001,-1,.92269),(-.91493,-1,.92172),(-.9191,-1,.91893),(-.92189,-1,.91476),(-.92286,-1,.90984),(-.92189,-1,.90492),(-.9191,-1,.90075),(-.91493,-1,.89797),(-.91001,-1,.89699),(-.90509,-1,.89797),(-.90092,-1,.90075)])))]),
          Transform(DEF='Leg3',
            children=[
            Shape(DEF='cylinder2_copy3',
              appearance=Appearance(
                material=Material(USE='Black_mat')),
              geometry=IndexedFaceSet(coordIndex=[0,1,2,-1,0,2,3,-1,0,4,5,-1,0,5,6,-1,0,6,7,-1,0,7,8,-1,0,8,9,-1,0,9,10,-1,0,10,11,-1,0,11,12,-1,0,12,13,-1,0,13,14,-1,0,14,15,-1,0,15,16,-1,0,16,17,-1,0,17,1,-1,0,3,18,-1,0,18,4,-1,1,17,19,-1,1,19,2,-1,17,16,20,-1,17,20,19,-1,16,15,21,-1,16,21,20,-1,15,14,22,-1,15,22,21,-1,14,13,23,-1,14,23,22,-1,13,12,24,-1,13,24,23,-1,12,11,25,-1,12,25,24,-1,11,10,26,-1,11,26,25,-1,10,9,27,-1,10,27,26,-1,9,8,28,-1,9,28,27,-1,8,7,29,-1,8,29,28,-1,7,6,30,-1,7,30,29,-1,6,5,31,-1,6,31,30,-1,5,4,18,-1,5,18,31,-1,3,2,19,-1,3,19,20,-1,3,20,21,-1,3,21,22,-1,3,22,23,-1,3,23,24,-1,3,24,25,-1,3,25,26,-1,3,26,27,-1,3,27,28,-1,3,28,29,-1,3,29,30,-1,3,30,31,-1,3,31,18,-1],creaseAngle=0.524,
                coord=Coordinate(point=[(.91916,.61014,-.91191),(.91818,.61014,-.90699),(.91818,-1,-.90699),(.91916,-1,-.91191),(.91818,.61014,-.91682),(.9154,.61014,-.92099),(.91123,.61014,-.92378),(.90631,.61014,-.92476),(.90139,.61014,-.92378),(.89722,.61014,-.92099),(.89443,.61014,-.91682),(.89346,.61014,-.91191),(.89443,.61014,-.90699),(.89722,.61014,-.90282),(.90139,.61014,-.90003),(.90631,.61014,-.89905),(.91123,.61014,-.90003),(.9154,.61014,-.90282),(.91818,-1,-.91682),(.9154,-1,-.90282),(.91123,-1,-.90003),(.90631,-1,-.89905),(.90139,-1,-.90003),(.89722,-1,-.90282),(.89443,-1,-.90699),(.89346,-1,-.91191),(.89443,-1,-.91682),(.89722,-1,-.92099),(.90139,-1,-.92378),(.90631,-1,-.92476),(.91123,-1,-.92378),(.9154,-1,-.92099)])))]),
          Transform(DEF='Leg4',
            children=[
            Shape(DEF='cylinder2',
              appearance=Appearance(
                material=Material(USE='Black_mat')),
              geometry=IndexedFaceSet(coordIndex=[0,1,2,-1,0,2,3,-1,0,4,5,-1,0,5,6,-1,0,6,7,-1,0,7,8,-1,0,8,9,-1,0,9,10,-1,0,10,11,-1,0,11,12,-1,0,12,13,-1,0,13,14,-1,0,14,15,-1,0,15,16,-1,0,16,17,-1,0,17,1,-1,0,3,18,-1,0,18,4,-1,1,17,19,-1,1,19,2,-1,17,16,20,-1,17,20,19,-1,16,15,21,-1,16,21,20,-1,15,14,22,-1,15,22,21,-1,14,13,23,-1,14,23,22,-1,13,12,24,-1,13,24,23,-1,12,11,25,-1,12,25,24,-1,11,10,26,-1,11,26,25,-1,10,9,27,-1,10,27,26,-1,9,8,28,-1,9,28,27,-1,8,7,29,-1,8,29,28,-1,7,6,30,-1,7,30,29,-1,6,5,31,-1,6,31,30,-1,5,4,18,-1,5,18,31,-1,3,2,19,-1,3,19,20,-1,3,20,21,-1,3,21,22,-1,3,22,23,-1,3,23,24,-1,3,24,25,-1,3,25,26,-1,3,26,27,-1,3,27,28,-1,3,28,29,-1,3,29,30,-1,3,30,31,-1,3,31,18,-1],creaseAngle=0.524,
                coord=Coordinate(point=[(.91916,.61014,.90984),(.91818,.61014,.91476),(.91818,-1,.91476),(.91916,-1,.90984),(.91818,.61014,.90492),(.9154,.61014,.90075),(.91123,.61014,.89797),(.90631,.61014,.89699),(.90139,.61014,.89797),(.89722,.61014,.90075),(.89443,.61014,.90492),(.89346,.61014,.90984),(.89443,.61014,.91476),(.89722,.61014,.91893),(.90139,.61014,.92172),(.90631,.61014,.92269),(.91123,.61014,.92172),(.9154,.61014,.91893),(.91818,-1,.90492),(.9154,-1,.91893),(.91123,-1,.92172),(.90631,-1,.92269),(.90139,-1,.92172),(.89722,-1,.91893),(.89443,-1,.91476),(.89346,-1,.90984),(.89443,-1,.90492),(.89722,-1,.90075),(.90139,-1,.89797),(.90631,-1,.89699),(.91123,-1,.89797),(.9154,-1,.90075)])))])])]))])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful for CanopyPrototype.py")
