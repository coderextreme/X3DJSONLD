###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_1212',geoSystem=['GDC'],position=(1.4305560726498494,103.94891185322548,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.4305560726498494,103.94891185322548,0.0),range=4101.627,child1Url=['../../tiles/5/singapore24-24.x3d'],child2Url=['../../tiles/5/singapore24-25.x3d'],child3Url=['../../tiles/5/singapore25-24.x3d'],child4Url=['../../tiles/5/singapore25-25.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore12-12.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.4218243602718554,103.93454881909646,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[12,12,12,12,12,12,14,18,21,22,21,19,10,0,0,0,3,3,3,4,6,8,9,13,14,14,13,12,10,9,8,8,9,10,11,12,12,12,12,12,12,12,12,14,16,20,22,22,20,15,4,-1,0,2,3,3,3,5,7,9,11,14,14,13,12,10,9,8,8,9,10,11,12,13,12,12,12,12,12,12,13,15,18,21,22,21,19,10,0,0,0,3,3,3,4,6,8,9,13,14,14,12,11,9,8,8,9,10,11,12,13,12,12,12,12,12,12,13,14,17,21,22,22,20,15,4,-1,0,2,3,3,3,5,7,9,11,14,14,12,11,9,8,8,9,10,11,12,13,12,12,12,12,12,12,13,14,16,19,22,22,21,19,10,0,0,0,3,3,3,4,6,8,10,13,14,13,11,10,8,8,9,10,11,13,13,12,12,12,12,12,12,13,14,16,18,21,22,22,20,15,4,-1,0,2,3,3,3,5,7,9,11,14,13,11,10,8,8,9,10,11,13,14,12,12,12,12,12,12,13,14,15,18,20,22,22,21,19,9,0,0,0,3,3,3,4,6,8,10,13,13,12,10,8,8,9,10,12,13,14,12,12,12,12,12,12,13,14,16,17,20,21,22,22,20,14,3,-1,0,2,3,3,3,5,7,9,11,14,12,10,8,8,9,10,12,13,14,12,12,12,12,12,12,13,15,16,17,19,21,22,22,21,18,9,0,0,0,3,3,3,4,7,8,9,13,12,10,8,8,9,11,12,13,14,12,12,12,12,12,12,13,15,16,18,19,21,22,22,21,19,13,2,-1,0,2,3,3,3,5,7,9,11,13,10,8,8,9,11,11,13,14,12,12,12,12,12,12,14,15,16,18,19,21,22,22,21,20,16,7,-1,0,0,3,3,3,4,7,8,10,13,10,8,9,9,12,11,13,14,12,12,12,12,12,12,14,15,17,18,19,21,22,22,22,20,17,11,1,-1,0,2,3,3,3,6,8,9,13,13,11,10,10,12,13,15,16,11,12,12,12,12,12,14,15,17,18,19,21,22,22,22,20,18,14,5,0,0,1,3,3,3,5,7,9,12,15,13,11,11,12,15,17,17,11,12,12,12,12,12,14,16,17,19,19,22,23,22,21,21,18,15,7,1,0,0,3,3,2,4,7,10,14,16,14,12,12,13,15,17,17,11,11,12,12,12,12,14,16,17,19,19,22,23,22,21,22,18,15,10,4,0,0,3,3,2,4,6,11,16,17,14,12,13,14,16,17,18,10,11,12,12,12,12,14,16,18,19,19,21,24,22,20,20,20,15,10,6,1,0,3,4,4,5,9,13,17,17,13,12,14,15,15,17,18,9,11,12,12,12,12,14,16,18,19,19,19,24,22,20,19,21,14,10,8,4,0,4,6,6,7,12,16,17,16,11,11,15,15,14,17,18,8,10,11,12,12,12,14,16,18,18,17,17,22,23,20,18,19,17,8,9,8,3,7,7,8,10,15,17,17,14,9,9,12,13,13,16,17,8,9,11,12,12,12,14,16,18,18,14,14,19,23,20,17,17,20,6,10,11,8,10,9,10,14,18,18,15,11,7,8,10,11,12,14,16,7,8,10,11,12,12,14,17,18,16,13,13,17,21,21,16,16,16,6,11,16,13,11,10,11,16,17,18,15,9,6,7,9,12,13,14,14,5,8,9,11,12,12,13,17,18,14,13,13,15,20,22,15,14,11,8,14,19,18,13,11,12,16,16,17,14,8,6,6,8,15,15,13,13,5,7,8,10,11,13,15,17,16,13,13,13,15,18,20,14,14,12,10,16,22,21,14,12,12,15,15,16,13,8,7,6,9,16,16,12,12,5,6,8,10,11,13,17,16,14,13,13,13,15,16,16,14,15,14,14,19,24,23,14,12,11,14,14,15,13,9,8,6,9,16,16,11,11,5,6,8,9,11,14,18,17,15,15,14,14,16,15,14,13,14,15,15,19,23,23,15,12,12,14,14,14,12,9,10,8,9,15,14,10,10,5,6,8,9,11,16,19,18,17,16,16,16,15,15,15,12,12,14,16,19,21,21,15,13,13,14,15,14,11,10,11,10,9,12,11,9,10,5,6,8,9,12,17,20,19,16,16,16,15,15,15,15,12,11,13,15,17,19,19,14,13,13,14,14,13,11,9,11,10,8,10,9,8,9,5,6,8,10,14,17,21,20,15,15,15,14,14,15,15,13,10,12,13,15,16,16,14,13,12,14,14,12,10,9,10,9,7,8,8,8,8,6,8,9,11,15,19,23,20,15,14,14,14,14,15,15,14,11,12,13,14,14,14,13,12,11,14,14,12,9,9,9,8,6,8,8,7,8,9,10,11,12,17,22,24,21,14,13,14,14,15,16,15,13,12,12,14,14,12,12,12,12,11,14,15,12,8,8,8,7,7,9,9,7,7,10,10,10,12,16,23,25,21,15,13,14,14,15,16,15,12,12,13,15,13,10,11,11,10,11,14,15,11,8,8,8,6,7,9,11,8,8,9,10,8,9,14,22,24,21,16,14,13,13,15,16,14,12,11,14,15,10,7,10,10,7,10,14,14,10,8,7,9,6,8,10,12,11,10,8,9,7,6,11,19,22,21,18,15,13,13,15,17,14,12,11,13,14,9,5,9,9,6,11,14,13,9,8,7,8,7,9,11,13,12,12,8,8,6,4,7,14,21,23,21,17,13,12,14,17,14,13,11,11,12,9,5,7,7,7,13,13,12,8,8,8,8,9,11,14,14,13,12,8,8,6,4,5,11,19,24,22,18,12,11,13,16,15,14,12,9,11,9,6,8,7,7,13,13,11,7,8,8,8,9,13,17,15,14,13,8,10,8,5,6,10,19,24,22,18,11,10,11,14,15,14,13,8,10,9,10,11,8,7,10,10,10,8,8,8,8,10,14,18,15,14,13,9,11,9,6,6,10,18,25,22,17,11,10,10,14,15,14,13,8,10,9,13,13,10,8,8,10,9,8,9,8,8,10,15,17,15,14,14,8,10,9,7,7,10,19,25,22,16,12,11,11,13,15,14,12,9,9,11,14,12,9,8,8,10,8,8,11,8,9,10,14,16,14,15,15,8,9,8,8,9,11,19,25,21,15,13,12,12,13,16,14,11,10,9,13,14,11,10,9,8,11,8,8,11,9,9,10,13,15,14,16,16,5,6,8,10,11,13,20,23,19,16,14,14,13,13,17,15,10,10,11,13,14,13,12,10,10,11,9,8,10,9,8,10,12,15,16,16,16,4,4,8,12,14,16,20,20,16,16,16,15,13,14,17,16,10,10,12,13,13,14,14,12,11,11,9,8,9,9,8,10,12,15,17,17,16,3,5,13,17,19,18,16,16,14,15,15,14,13,15,17,15,11,11,12,13,13,15,15,14,12,10,9,9,8,9,11,12,14,16,17,18,17,3,7,17,22,24,21,14,13,13,14,14,13,13,15,17,15,13,12,12,12,13,16,15,17,14,10,9,9,8,9,13,15,16,16,17,19,18,3,7,18,24,25,21,16,13,12,11,10,10,13,16,15,14,13,12,12,12,13,16,16,17,15,12,12,9,9,10,14,17,17,17,18,19,18,2,8,19,25,25,22,17,14,12,10,6,6,13,16,14,14,14,11,11,12,14,15,16,17,15,14,14,10,10,10,14,18,18,18,19,19,18],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
