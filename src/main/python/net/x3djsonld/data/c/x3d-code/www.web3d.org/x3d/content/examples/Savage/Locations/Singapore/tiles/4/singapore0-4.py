###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_04',geoSystem=['GDC'],position=(1.220994975577994,103.71910330716118,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.220994975577994,103.71910330716118,0.0),range=4101.627,child1Url=['../../tiles/5/singapore0-8.x3d'],child2Url=['../../tiles/5/singapore0-9.x3d'],child3Url=['../../tiles/5/singapore1-8.x3d'],child4Url=['../../tiles/5/singapore1-9.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore0-4.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.2122632632,103.70474027303216,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[0,0,0,1,3,2,2,1,0,2,4,-3,-1,-2,0,0,-1,2,2,5,10,13,11,6,1,0,0,0,0,-4,-2,-4,0,2,0,-3,-5,-2,0,0,1,3,3,3,1,-1,1,5,0,0,-5,-2,-3,-5,2,0,3,8,9,9,4,0,0,2,-1,-4,-7,-3,-6,-3,-1,-4,-4,-3,-1,0,0,2,4,3,2,2,0,2,4,1,1,-4,0,-4,-4,1,0,2,5,6,8,4,0,0,3,0,-5,-9,-7,-7,-4,-3,-5,-3,-2,0,0,0,3,5,2,1,3,2,4,3,3,2,-2,4,-3,-1,0,-2,1,2,3,7,5,0,0,3,1,-5,-8,-10,-6,-2,-3,-4,-2,-1,0,0,0,2,4,2,2,2,3,4,2,4,3,-1,1,-3,0,1,-1,0,1,6,6,4,0,0,0,0,-2,-4,-5,-1,0,-2,-2,-1,0,1,0,1,1,3,4,3,0,2,4,2,4,4,-1,-3,-3,2,3,0,0,0,11,4,4,0,-2,-1,0,1,1,1,4,3,0,0,0,0,1,0,1,2,4,4,3,0,0,4,3,4,3,0,-4,-2,3,5,0,-3,0,12,1,2,0,-1,-1,2,4,3,5,6,4,0,0,0,0,0,0,1,4,4,4,3,0,0,5,5,3,2,0,-4,-2,5,6,-2,-8,1,13,0,0,2,0,0,5,6,5,7,4,3,1,0,0,1,0,0,2,6,5,3,2,0,0,5,6,5,2,0,-6,-1,6,7,-2,-7,4,13,2,1,5,0,0,6,7,7,8,5,2,1,0,1,1,1,1,4,8,4,1,1,2,2,4,7,7,2,-1,-8,-2,6,7,0,-2,10,13,7,5,9,2,1,6,7,8,9,6,2,2,1,1,2,1,1,4,7,3,0,1,3,3,3,5,7,2,-1,-8,-4,10,8,0,1,11,11,10,8,12,5,5,5,7,8,9,7,4,2,1,2,3,1,1,3,4,2,0,1,3,3,1,2,5,1,0,-4,-6,14,9,0,4,7,8,11,8,14,10,9,5,6,8,9,9,6,4,2,2,2,2,3,3,4,3,2,2,3,3,1,0,3,1,0,-1,-4,14,13,3,6,4,5,9,9,15,13,10,6,5,7,8,8,7,5,2,1,1,4,4,2,5,6,4,3,2,2,2,1,1,1,1,0,0,12,21,11,5,0,2,5,11,16,15,11,7,5,6,6,6,8,6,3,0,0,5,4,2,5,6,5,3,1,1,1,0,1,1,3,0,2,8,20,12,4,-1,0,2,11,14,13,8,7,6,5,4,4,7,7,3,0,0,4,4,3,5,5,4,1,0,0,0,0,2,3,5,0,3,4,10,6,3,0,-2,0,7,9,9,3,4,7,5,2,3,6,8,3,0,0,3,3,3,5,5,4,0,0,-1,0,0,2,5,6,0,3,2,4,2,1,0,-5,-1,5,5,5,1,4,9,5,0,1,6,9,4,0,0,3,3,4,5,5,4,2,1,0,0,0,2,6,5,1,4,3,4,2,0,0,-8,-3,6,2,2,4,8,13,6,0,1,6,8,6,0,-2,2,2,4,4,4,3,2,2,0,0,0,3,6,4,1,4,2,2,1,0,0,-8,-3,7,1,2,6,12,16,7,0,1,7,7,6,0,-3,1,0,2,4,3,3,1,1,0,0,1,3,4,2,0,2,-1,0,0,0,0,-3,1,8,1,6,6,15,18,7,0,2,7,5,5,1,-1,1,0,1,3,3,2,1,1,0,1,2,2,2,2,0,2,-3,-2,0,0,0,0,4,8,2,9,6,16,18,6,1,4,5,4,5,2,1,0,0,0,0,2,3,3,2,0,0,2,0,0,3,0,4,0,0,1,0,0,3,4,4,3,10,6,14,13,4,1,4,3,6,8,7,5,0,0,-1,0,0,2,3,3,0,0,2,0,0,3,1,5,3,1,1,0,0,5,5,3,4,9,6,10,9,2,1,4,2,7,11,9,9,0,0,0,0,0,1,2,1,0,0,1,0,0,1,1,2,1,2,2,0,0,5,9,10,6,3,2,5,5,3,3,4,3,9,11,8,8,0,0,0,0,0,0,2,0,0,-1,1,2,0,0,1,1,0,2,3,0,0,4,12,15,8,0,0,1,1,4,4,4,6,9,10,6,5,1,1,0,0,0,0,1,2,0,-1,1,3,1,2,2,1,2,2,1,0,0,2,8,12,11,1,1,1,1,4,6,6,6,5,8,2,-1,1,2,2,0,0,0,1,2,1,-1,1,4,2,2,3,1,2,1,0,0,0,1,5,9,12,3,2,1,1,5,8,7,6,3,7,0,-7,3,2,1,1,0,0,0,0,0,-1,0,3,3,0,0,0,1,1,0,0,0,0,4,5,8,3,2,3,4,9,12,7,4,6,8,0,-2,4,2,1,1,0,-1,-2,-1,0,-1,0,2,3,0,0,0,0,1,-2,0,0,0,2,2,6,3,2,4,6,11,14,7,2,7,8,2,1,2,1,1,1,0,0,-1,-1,0,0,1,3,2,0,0,2,2,0,-3,0,1,0,0,1,4,5,4,7,5,6,8,3,0,3,6,4,4,1,1,0,1,0,0,0,-1,0,0,2,3,2,2,0,4,4,0,-4,-2,0,0,0,0,2,7,5,9,3,1,3,0,-1,0,4,5,5,1,0,1,2,1,0,0,0,1,1,1,1,1,2,2,8,6,0,-3,-1,0,1,3,3,5,7,6,9,4,2,3,0,0,1,5,5,4,2,0,1,4,2,1,0,1,2,1,0,0,0,3,5,11,7,0,-2,0,0,2,7,6,8,7,6,9,5,1,2,1,0,3,6,5,3,2,1,2,5,4,1,0,0,4,3,0,0,2,3,5,5,2,-1,0,0,0,2,6,5,5,4,2,5,3,0,2,1,0,3,4,2,0,3,3,4,6,5,1,0,0,4,4,0,1,4,2,4,0,0,-2,4,2,1,2,5,4,3,2,0,1,1,0,2,2,1,2,2,0,0,2,4,5,4,4,3,0,0,2,2,0,0,0,0,3,0,0,-1,2,3,1,2,4,2,4,3,0,0,0,0,2,2,2,3,3,1,1,2,5,5,4,4,4,0,0,0,0,-1,-2,-4,0,2,0,0,0,0,3,2,3,3,1,4,4,1,0,0,0,2,2,4,3,3,4,5,3,5,6,4,4,4,2,0,0,0,-1,-1,-3,1,3,1,1,0,1,4,3,2,4,2,4,3,1,0,0,0,0,2,2,3,2,2,3,4,6,7,5,5,4,3,0,0,0,-1,0,-1,4,5,3,0,1,3,3,3,1,4,2,3,2,1,2,0,0,0,1,1,3,1,0,0,6,8,11,10,7,4,2,1,1,0,0,1,0,5,4,2,0,2,2,2,2,1,3,2,3,1,2,3,1,1,0,1,1,3,1,0,0,8,11,14,14,11,4,1,1,2,1,0,3,3,4,3,1,0,1,1,0,1,1,2,1,2,1,2,3,2,4,3,1,1,3,1,0,1,9,12,14,13,11,6,2,2,3,2,0,2,3,2,2,1,0,1,1,0,2,0,1,0,2,1,1,2,1,3,2,0,1,2,1,1,1,9,13,12,10,10,8,4,2,5,3,1,1,2,0,1,2,0,0,3,1,4,0,0,0,2,1,1,2,0,1,1,0,1,2,2,2,2,9,13,12,6,7,7,3,2,4,4,1,1,1,0,2,3,1,0,4,2,4,0,-2,0,4,1,1,2,0,1,2,1,1,3,3,3,2],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
