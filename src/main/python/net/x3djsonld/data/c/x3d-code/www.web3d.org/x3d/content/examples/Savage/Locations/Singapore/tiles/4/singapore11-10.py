###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_1110',geoSystem=['GDC'],position=(1.4130926478938615,103.8914597167094,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.4130926478938615,103.8914597167094,0.0),range=4101.627,child1Url=['../../tiles/5/singapore22-20.x3d'],child2Url=['../../tiles/5/singapore22-21.x3d'],child3Url=['../../tiles/5/singapore23-20.x3d'],child4Url=['../../tiles/5/singapore23-21.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore11-10.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.4043609355158675,103.87709668258039,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[12,15,16,13,9,11,16,19,19,20,19,18,13,10,0,-6,-5,-3,2,2,5,8,10,8,7,8,13,16,18,20,13,8,12,16,19,22,22,12,15,16,12,9,12,18,21,20,21,19,17,13,11,5,0,-3,-5,0,1,3,8,9,6,7,8,10,12,14,16,13,9,12,15,18,22,22,13,16,16,12,9,12,18,21,20,21,19,16,13,12,11,5,0,-4,0,1,4,8,7,4,6,8,7,9,11,13,12,11,11,13,17,22,24,15,17,17,14,11,12,16,19,21,22,20,17,14,14,13,9,4,1,1,4,7,8,6,3,4,7,6,7,7,10,11,12,11,12,16,23,26,16,18,18,15,12,13,16,19,21,22,21,18,15,15,14,11,9,5,4,5,8,7,5,3,4,6,4,5,6,8,9,12,10,11,15,23,26,15,17,16,14,14,15,17,19,20,21,22,21,17,14,13,12,10,7,7,5,5,4,3,4,4,4,5,5,5,7,7,10,8,10,15,22,25,14,16,14,13,13,15,17,19,19,21,23,22,19,14,13,12,10,9,8,5,3,2,3,4,5,4,5,5,5,6,6,8,7,9,14,21,24,13,14,12,11,12,13,14,16,18,21,23,22,20,16,14,14,10,9,8,5,1,2,6,6,6,5,6,6,4,5,7,8,8,10,14,21,24,12,12,10,9,11,11,12,14,17,21,22,22,21,18,14,15,10,10,8,5,0,2,8,6,5,6,7,6,4,5,7,9,10,11,14,21,24,10,11,10,9,10,10,10,13,16,20,21,21,20,18,15,16,12,11,9,6,4,1,5,5,4,6,5,4,5,6,7,11,15,15,17,22,24,9,10,10,9,9,9,8,12,15,18,19,20,20,18,16,16,14,12,11,8,7,0,4,4,4,6,4,3,5,7,8,12,18,18,19,23,24,9,11,12,10,8,8,8,10,11,14,15,18,21,20,18,17,16,14,12,9,7,1,6,7,6,6,5,5,6,7,8,11,17,19,20,24,26,9,12,12,11,8,8,7,8,9,11,13,17,21,21,19,17,17,16,13,10,7,2,8,9,7,6,5,5,7,8,9,11,17,19,22,25,28,8,11,11,9,8,8,8,9,9,10,13,18,21,21,18,17,16,14,12,9,7,5,9,8,7,5,5,4,6,8,9,11,16,21,25,29,31,7,10,11,9,8,9,9,9,9,10,14,18,20,22,18,16,14,13,11,9,7,8,9,7,7,5,5,4,5,8,8,10,15,23,29,33,35,8,9,10,10,9,9,10,10,10,11,17,20,22,22,17,14,12,12,11,10,7,8,10,7,8,6,5,5,6,8,8,10,17,26,32,36,38,9,9,10,10,9,10,11,10,10,13,20,22,24,22,17,12,11,11,12,10,8,9,10,8,9,8,5,6,7,9,8,11,18,29,35,39,40,10,9,10,11,10,11,12,11,12,15,21,24,27,24,19,12,10,11,13,11,8,8,9,7,6,7,6,6,8,9,8,12,20,29,36,40,41,11,9,11,12,11,12,12,10,13,17,23,25,28,26,20,11,10,11,13,12,8,8,8,6,4,7,6,7,8,9,8,13,22,29,36,41,42,11,10,10,12,11,10,9,8,12,17,21,22,24,23,18,11,10,10,11,10,8,8,7,3,0,4,6,7,7,8,7,11,21,29,34,39,41,12,10,10,12,11,8,6,7,11,15,19,19,19,19,15,11,10,9,9,9,8,7,6,2,-2,2,6,7,7,7,7,9,20,28,31,37,39,11,10,9,12,12,8,6,8,11,14,17,17,14,14,12,10,10,9,8,9,8,6,7,3,-1,1,6,8,8,7,7,8,16,22,26,32,35,11,10,8,11,12,8,7,9,11,13,15,14,10,10,9,9,10,9,8,9,8,5,8,4,0,0,6,9,9,7,7,8,12,17,21,27,30,10,9,7,9,11,9,9,9,11,13,13,11,8,9,8,8,9,10,8,9,9,8,9,6,1,1,6,10,10,7,7,8,10,14,18,23,24,9,8,7,8,10,10,10,10,11,11,11,9,8,9,8,8,8,10,8,9,10,11,10,7,3,2,6,11,11,6,7,9,10,12,16,19,19,9,8,7,8,10,10,11,11,10,11,11,9,8,9,9,8,8,11,9,10,11,11,10,8,5,3,6,11,10,7,8,10,11,12,14,15,15,9,8,8,9,10,9,10,11,10,10,11,9,9,9,11,9,10,12,11,12,12,10,9,7,8,5,5,9,9,8,9,10,11,12,12,12,12,8,7,9,12,10,7,10,10,10,10,11,10,10,11,13,11,11,12,11,12,12,10,9,9,10,7,5,8,8,7,10,10,11,11,11,10,11,8,7,10,15,10,5,8,9,11,9,10,11,12,12,14,13,13,12,11,11,11,10,9,10,12,9,5,7,8,7,9,9,10,10,10,9,10,7,6,7,12,11,6,8,9,10,9,10,12,14,14,15,13,12,11,11,11,11,10,9,10,12,10,5,7,8,7,8,8,9,9,9,9,11,6,4,3,6,11,8,8,9,8,9,11,13,15,16,15,13,12,10,11,11,11,11,10,9,11,11,5,8,9,7,8,8,8,9,8,10,12,5,3,2,7,12,11,9,9,8,9,13,15,15,15,15,13,11,10,10,11,11,12,10,9,11,11,6,9,9,7,7,7,8,8,7,10,12,5,3,5,10,15,14,11,9,8,9,15,16,16,15,14,12,11,10,10,11,12,12,10,10,11,10,6,9,10,8,7,7,7,8,8,9,10,6,5,9,14,17,14,12,10,8,9,15,16,15,15,13,12,11,10,10,11,13,12,10,11,12,10,7,10,10,8,7,6,7,9,8,8,9,8,9,13,16,17,14,12,11,9,7,13,16,15,16,13,12,11,10,10,11,14,12,11,12,13,12,9,9,9,8,7,5,7,10,8,8,9,9,12,16,17,16,14,13,12,10,7,12,16,15,16,13,12,11,9,9,11,14,12,10,12,13,12,10,9,9,7,6,5,7,11,8,8,9,11,15,18,17,15,14,13,13,13,10,11,15,15,13,13,12,10,9,9,11,13,10,10,10,12,11,11,10,8,7,6,6,7,10,7,9,11,14,16,18,17,15,14,13,14,14,11,11,15,14,12,14,12,10,9,9,11,13,10,9,10,11,10,10,10,8,6,6,6,8,9,7,9,12,17,18,17,17,16,15,14,15,13,11,11,13,14,12,13,13,10,8,9,10,11,10,9,9,11,11,10,10,7,6,6,7,9,9,8,9,10,18,18,17,17,16,15,14,14,13,11,10,11,13,12,12,13,9,8,9,9,11,11,9,8,10,11,10,10,7,6,6,7,9,9,9,9,9,16,16,17,17,16,15,14,13,12,10,9,9,11,9,10,11,9,8,9,8,10,11,9,6,8,11,11,10,8,6,6,8,9,9,9,9,7,14,15,17,16,16,15,13,12,12,10,9,8,8,8,8,9,8,7,9,8,10,12,10,5,6,10,11,10,8,6,7,9,9,9,9,7,6,13,14,16,16,16,15,12,11,13,12,10,9,7,8,8,8,7,7,9,9,10,13,10,6,5,8,11,11,9,7,9,10,10,10,9,6,5,12,14,15,15,16,15,12,11,12,12,12,9,5,7,8,8,6,7,9,9,11,12,10,7,4,6,10,11,10,8,10,10,10,9,8,5,5],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
