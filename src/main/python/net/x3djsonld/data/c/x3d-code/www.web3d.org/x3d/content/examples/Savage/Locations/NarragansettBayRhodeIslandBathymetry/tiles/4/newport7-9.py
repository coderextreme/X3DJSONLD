###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoLOD(center=(41.47637362875333,-71.3735068163228,0.0),range=6150.345,child1Url=['../../tiles/5/newport14-18.x3d'],child2Url=['../../tiles/5/newport14-19.x3d'],child3Url=['../../tiles/5/newport15-18.x3d'],child4Url=['../../tiles/5/newport15-19.x3d'],
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(41.5,-71.5,0),geoSystem=['GDC']),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0,0.05,0)),
            texture=ImageTexture(url=['../../images/4/newport7-9.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(41.45218369329644,-71.39549064340055,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=55,xSpacing=8.142158E-4,zDimension=52,zSpacing=9.486249E-4,height=[-1,-2,-6,-12,-16,-18,-19,-19,-22,-24,-25,-26,-29,-33,-36,-37,-37,-36,-36,-35,-34,-34,-33,-32,-31,-30,-29,-28,-26,-25,-25,-24,-23,-23,-23,-23,-22,-20,-20,-19,-18,-17,-16,-6,-9,-6,-4,-1,0,0,0,0,0,0,0,0,0,-1,-2,-9,-11,-18,-19,-22,-24,-25,-26,-30,-34,-36,-36,-36,-36,-36,-35,-35,-34,-34,-34,-32,-31,-30,-29,-27,-26,-25,-25,-23,-22,-22,-22,-22,-22,-21,-19,-18,-18,-15,-12,-11,-7,-5,0,0,0,0,0,0,0,0,0,0,0,0,-2,-2,-4,-11,-19,-23,-25,-26,-30,-33,-35,-36,-36,-36,-35,-35,-35,-35,-35,-34,-34,-33,-32,-31,-29,-27,-26,-26,-24,-23,-22,-22,-22,-23,-23,-20,-18,-18,-15,-12,-10,-7,-3,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-2,-7,-17,-24,-26,-30,-32,-34,-35,-35,-34,-35,-35,-35,-35,-36,-35,-35,-35,-34,-33,-31,-29,-28,-27,-26,-26,-25,-25,-25,-26,-25,-19,-18,-17,-14,-12,-12,-7,-4,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,-11,-20,-25,-29,-31,-34,-35,-34,-34,-33,-33,-34,-35,-36,-36,-37,-36,-36,-35,-33,-31,-30,-30,-29,-29,-28,-29,-28,-29,-25,-18,-18,-16,-14,-12,-11,-7,-4,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-5,-15,-23,-26,-29,-33,-35,-34,-33,-33,-32,-33,-34,-36,-36,-37,-37,-37,-37,-36,-34,-33,-33,-32,-32,-32,-33,-32,-31,-24,-18,-15,-13,-12,-10,-9,-5,-4,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-3,-11,-19,-23,-26,-30,-34,-34,-33,-32,-32,-32,-32,-34,-36,-38,-38,-38,-39,-39,-38,-36,-35,-35,-35,-36,-36,-34,-32,-22,-16,-13,-13,-10,-9,-8,-4,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3,-14,-19,-20,-23,-26,-29,-33,-33,-33,-32,-31,-31,-31,-33,-36,-38,-40,-40,-40,-40,-39,-38,-37,-36,-37,-37,-35,-30,-20,-14,-9,-6,-7,-8,-6,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,-6,-17,-19,-21,-22,-25,-31,-33,-33,-32,-30,-29,-29,-30,-32,-35,-38,-40,-41,-41,-41,-40,-38,-37,-36,-36,-36,-29,-14,-8,-4,-1,-3,-4,-3,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,-10,-14,-16,-18,-20,-22,-27,-31,-34,-32,-31,-30,-29,-29,-30,-32,-33,-36,-39,-41,-42,-41,-40,-38,-37,-36,-36,-33,-22,-10,-3,0,0,0,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,-7,-13,-14,-15,-17,-19,-22,-28,-32,-33,-31,-29,-28,-28,-29,-30,-32,-33,-35,-38,-41,-42,-41,-41,-40,-38,-36,-35,-30,-11,-4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-5,-10,-12,-13,-14,-17,-19,-24,-31,-33,-32,-30,-28,-27,-27,-28,-30,-31,-32,-34,-36,-39,-40,-42,-42,-41,-40,-39,-34,-24,-7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-4,-7,-8,-9,-8,-11,-16,-20,-26,-31,-34,-31,-29,-27,-26,-26,-27,-28,-30,-31,-32,-34,-36,-39,-41,-43,-44,-43,-41,-36,-14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-4,-5,-5,-3,0,-3,-7,-17,-23,-28,-32,-32,-30,-29,-27,-27,-27,-27,-28,-29,-30,-31,-33,-33,-33,-36,-42,-46,-46,-47,-32,-18,-4,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-1,-2,-1,0,0,0,0,0,-10,-19,-24,-30,-31,-29,-29,-28,-28,-28,-27,-28,-28,-28,-30,-31,-32,-33,-36,-40,-45,-49,-52,-55,-36,-5,0,0,0,-2,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-4,-13,-19,-26,-31,-30,-29,-29,-28,-28,-28,-28,-28,-28,-29,-31,-31,-32,-33,-37,-40,-43,-46,-48,-46,-38,-23,-13,-8,-8,0,0,0,0,0,0,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-8,-17,-21,-28,-31,-30,-29,-29,-30,-29,-29,-28,-28,-29,-29,-30,-31,-32,-33,-36,-41,-43,-45,-47,-47,-44,-38,-33,-25,-18,-6,0,0,0,0,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-14,-18,-23,-29,-30,-29,-29,-30,-30,-30,-28,-28,-28,-28,-29,-31,-32,-33,-35,-38,-41,-43,-44,-45,-46,-46,-43,-39,-32,-24,-13,0,0,0,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-9,-15,-19,-25,-28,-29,-28,-29,-30,-31,-31,-30,-29,-28,-28,-27,-30,-31,-33,-35,-37,-39,-41,-44,-45,-46,-46,-45,-42,-36,-29,-21,-8,0,0,0,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-7,-13,-17,-21,-24,-26,-27,-27,-28,-30,-32,-32,-32,-30,-27,-27,-27,-28,-30,-32,-34,-35,-38,-40,-42,-44,-47,-46,-47,-44,-41,-36,-27,-10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-8,-13,-15,-17,-20,-23,-23,-23,-25,-27,-29,-30,-32,-32,-31,-27,-26,-26,-27,-29,-32,-34,-36,-37,-38,-42,-44,-46,-48,-48,-48,-46,-44,-39,-23,-21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-6,-12,-14,-15,-17,-19,-20,-20,-20,-20,-21,-24,-26,-28,-31,-30,-27,-25,-25,-26,-28,-30,-32,-34,-37,-38,-39,-42,-46,-47,-48,-49,-49,-47,-45,-44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-7,-13,-14,-15,-16,-18,-19,-19,-17,-11,-2,-4,-18,-22,-24,-29,-29,-27,-25,-25,-26,-28,-30,-32,-33,-35,-37,-38,-39,-43,-46,-48,-49,-50,-49,-49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,-8,-13,-14,-15,-16,-16,-17,-17,-16,-14,-10,-2,-8,-9,-7,-24,-30,-30,-29,-27,-25,-26,-28,-29,-31,-34,-35,-36,-37,-39,-40,-43,-46,-48,-49,-49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-5,-11,-13,-14,-14,-14,-12,-3,-2,-4,-7,-8,-5,-1,-7,-13,-19,-24,-28,-31,-32,-31,-30,-29,-30,-31,-33,-34,-36,-35,-36,-36,-37,-40,-43,-46,-46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-4,-8,-11,-12,-13,-13,-10,-4,0,0,0,0,0,-9,-7,-8,-11,-15,-20,-22,-20,-24,-29,-31,-32,-33,-33,-34,-35,-36,-35,-35,-34,-36,-38,-38,-42,-43,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-6,-9,-11,-11,-12,-11,-8,0,0,0,0,0,-2,-7,-6,-5,-6,-13,-15,-16,-17,-17,-17,-17,-19,-25,-29,-28,-32,-34,-33,-34,-33,-32,-33,-38,-40,-40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,-7,-10,-10,-10,-10,-10,-4,0,0,0,0,0,0,-4,-3,-4,-7,-9,-6,-5,0,0,0,-3,-10,-1,-4,-16,0,0,-11,-17,-30,-30,-30,-31,-36,-37,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-4,-8,-9,-9,-9,-9,-9,-5,-1,0,0,0,0,0,0,-1,-1,0,0,0,0,0,0,0,0,-6,-1,0,-5,0,0,0,-7,-9,-11,-23,-28,-34,-35,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,-6,-7,-8,-8,-8,-8,-5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,0,0,0,0,-1,-2,-3,-5,-9,-23,-33,-33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3,-6,-7,-7,-7,-7,-7,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-9,-20,-17,-16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3,-5,-6,-6,-6,-6,-6,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,-5,-10,-6,-10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3,-4,-5,-5,-5,-5,-3,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3,-4,-4,-9,0,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3,-4,-4,-4,-4,-5,-3,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,-3,-4,-4,-5,-6,-2,-5,-5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-3,-3,-3,-3,-3,-3,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,-1,-5,-6,-6,-4,-7,-6,-7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-2,-2,-3,-3,-2,-2,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-1,-2,-2,-5,-7,-9,-11,-14,-21,-23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,-2,-2,-2,-1,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-3,-5,-8,-11,-12,-18,-23,-28,-30,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-2,-1,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,-3,-8,-11,-12,-12,-19,-24,-30,-35,-36,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-2,-4,-7,-11,-14,-17,-20,-24,-30,-35,-39,-39,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-4,-6,-10,-14,-17,-20,-23,-29,-34,-37,-37,-37,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-1,-1,-1,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,-5,-7,-12,-15,-19,-24,-28,-32,-35,-35,-33,-33,0,-1,-1,0,0,0,0,0,0,0,0,0,0,-1,-1,-1,-1,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-5,-7,-11,-16,-18,-21,-25,-31,-33,-33,-32,-31,-31,0,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,-1,-1,-1,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,-5,-7,-10,-15,-18,-20,-23,-28,-31,-32,-31,-31,-31,-31,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,-1,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,-5,-7,-9,-13,-17,-19,-21,-24,-28,-30,-31,-31,-31,-32,-32,0,-1,-1,-2,-2,-2,-2,-2,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-2,-5,-7,-9,-13,-16,-18,-19,-20,-24,-28,-30,-31,-31,-31,-32,-32,-1,-3,-4,-4,-4,-4,-4,-4,-3,-3,-2,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-3,-6,-10,-12,-15,-16,-16,-18,-20,-25,-29,-31,-31,-31,-32,-32,-32,-6,-6,-6,-6,-5,-5,-4,-4,-4,-4,-4,-3,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-4,-7,-11,-13,-15,-15,-15,-18,-21,-25,-30,-32,-32,-32,-32,-32,-33,-8,-7,-6,-6,-5,-5,-5,-4,-4,-4,-4,-4,-2,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-4,-7,-11,-13,-14,-15,-16,-18,-22,-27,-31,-34,-34,-33,-33,-33,-33,-8,-7,-7,-6,-6,-5,-5,-5,-4,-4,-4,-4,-4,-3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-3,-5,-8,-12,-14,-15,-16,-19,-23,-28,-33,-35,-35,-34,-33,-34,-34,-9,-8,-7,-7,-6,-6,-5,-5,-4,-4,-4,-4,-5,-4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-3,-7,-9,-11,-13,-15,-18,-22,-27,-33,-36,-37,-34,-33,-34,-34,-11,-10,-9,-8,-8,-6,-6,-5,-5,-4,-4,-4,-5,-5,-3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3,-6,-9,-11,-13,-15,-19,-24,-31,-36,-36,-34,-34,-34,-34,-11,-10,-9,-8,-8,-7,-6,-5,-5,-4,-4,-4,-5,-5,-3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3,-5,-8,-10,-12,-14,-18,-23,-31,-35,-35,-34,-34,-34,-34],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
