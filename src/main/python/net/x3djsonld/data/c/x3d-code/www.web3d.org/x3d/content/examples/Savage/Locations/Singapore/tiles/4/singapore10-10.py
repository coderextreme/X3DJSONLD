###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_1010',geoSystem=['GDC'],position=(1.3956292231378735,103.8914597167094,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.3956292231378735,103.8914597167094,0.0),range=4101.627,child1Url=['../../tiles/5/singapore20-20.x3d'],child2Url=['../../tiles/5/singapore20-21.x3d'],child3Url=['../../tiles/5/singapore21-20.x3d'],child4Url=['../../tiles/5/singapore21-21.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore10-10.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.3868975107598795,103.87709668258039,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=45,zSpacing=3.96896E-4,height=[15,14,12,12,9,10,15,17,15,14,15,13,11,14,19,26,28,27,26,28,23,20,25,26,24,25,25,23,21,23,26,25,23,20,20,23,24,14,13,12,12,9,10,14,14,13,13,16,13,13,16,21,26,28,28,27,31,26,20,25,25,22,25,29,27,23,25,28,28,25,20,20,21,20,13,11,12,11,9,9,12,12,13,15,17,14,15,20,22,25,26,27,28,33,27,20,23,22,20,24,32,29,24,26,29,29,27,23,24,22,19,12,10,11,10,7,8,10,11,13,17,18,16,20,24,26,24,25,26,28,32,25,20,20,19,18,24,34,29,23,26,29,28,27,26,28,23,19,11,10,9,8,7,8,9,11,14,18,19,20,27,28,29,24,23,25,28,27,20,19,17,17,16,24,34,27,22,26,28,26,25,30,31,26,23,10,9,9,8,7,7,8,11,15,18,20,24,31,30,30,23,23,26,30,26,17,18,15,15,15,23,34,28,23,27,28,24,24,31,32,28,25,10,9,9,9,7,7,9,13,16,18,20,27,32,29,27,22,25,30,33,27,16,16,16,14,15,23,33,31,26,30,28,23,25,31,29,28,27,10,9,9,9,7,7,9,13,18,23,24,28,29,27,27,24,29,33,34,28,16,17,16,13,15,22,32,34,29,30,27,23,24,27,25,26,26,10,10,10,8,7,7,8,12,19,31,33,27,21,24,28,29,34,35,34,27,17,19,17,13,15,22,31,37,32,27,24,22,21,21,21,23,22,10,11,9,8,7,7,8,11,19,33,36,28,18,23,28,30,35,35,33,28,20,20,16,13,15,21,29,38,33,25,22,21,19,17,18,19,18,10,10,9,8,7,6,7,11,16,26,34,30,21,24,26,26,31,31,31,30,24,20,14,13,16,21,28,35,30,24,21,21,19,16,16,16,16,9,9,9,8,7,6,7,10,14,20,28,27,20,22,23,23,28,28,30,32,27,20,14,13,17,22,27,32,28,23,20,21,19,17,17,16,15,8,8,8,8,8,7,6,9,12,14,19,18,15,17,19,21,26,27,31,34,30,21,15,14,18,24,27,30,27,23,21,21,20,18,20,20,18,8,8,8,8,8,7,6,8,10,10,12,13,13,14,17,21,25,29,34,34,31,22,17,16,19,25,27,28,27,23,22,22,20,18,22,23,22,9,9,8,7,8,8,7,8,8,9,10,12,14,17,20,25,26,33,37,34,27,24,21,17,19,24,26,27,27,23,23,24,19,16,21,27,28,10,10,8,7,8,8,8,7,7,8,9,12,14,18,22,25,25,33,37,31,24,24,25,20,20,23,25,25,26,24,24,25,19,16,21,28,29,11,11,10,9,9,9,8,8,6,6,8,10,12,16,21,21,20,25,29,25,20,22,28,23,21,22,22,22,23,25,25,26,20,22,25,24,23,11,11,11,11,10,9,8,8,6,5,7,9,10,14,19,17,16,20,22,20,18,21,28,25,21,21,19,20,22,27,27,26,23,28,27,21,18,12,12,12,11,10,9,7,7,5,4,6,8,10,11,16,15,16,19,20,17,17,19,24,22,18,19,18,19,24,31,33,28,27,30,27,19,16,14,14,13,11,11,9,8,7,6,4,5,6,10,10,13,14,16,18,18,15,16,17,21,19,16,17,18,19,24,34,37,29,30,30,27,18,16,16,16,15,13,13,12,10,9,8,4,3,5,12,12,12,15,19,20,18,16,16,17,20,18,16,17,21,21,22,31,37,31,29,28,24,19,19,19,18,17,16,15,14,13,11,10,5,1,4,13,13,13,16,20,21,18,17,15,17,19,18,16,17,24,23,21,28,35,31,27,25,22,21,22,23,22,21,19,18,17,15,12,10,7,2,3,9,12,13,16,20,20,17,16,15,16,18,19,18,18,23,24,20,25,33,28,23,22,25,27,28,27,25,24,22,20,19,16,13,11,9,4,2,6,12,13,16,20,19,17,16,15,15,17,19,19,19,23,25,20,22,31,24,19,19,28,33,33,28,29,27,24,19,17,16,14,12,8,3,3,6,12,14,17,19,17,15,15,16,16,17,19,18,18,20,24,23,23,25,19,17,20,31,39,38,29,30,28,24,18,16,15,13,12,7,2,4,6,11,15,17,19,16,14,15,17,16,16,19,18,17,16,24,25,22,19,15,15,21,33,42,42,26,26,25,22,17,14,14,12,11,7,2,3,5,11,15,17,19,16,14,15,15,15,15,19,17,16,14,20,23,18,15,14,13,17,30,39,39,23,23,22,21,17,13,13,12,10,7,1,3,4,10,15,17,18,16,14,14,14,14,14,18,17,15,13,17,19,15,14,14,11,13,26,35,35,23,25,25,23,20,16,14,13,10,9,3,2,3,8,14,17,16,15,14,14,14,14,15,18,17,15,11,12,15,15,14,14,11,12,23,33,35,24,27,27,25,22,18,16,13,12,10,5,2,2,6,14,17,15,14,14,13,13,13,15,18,17,15,10,9,12,15,14,14,12,12,20,31,35,26,29,28,24,21,18,16,13,11,10,7,5,4,6,13,15,14,13,13,12,12,11,12,15,16,15,12,8,10,16,14,14,12,12,17,28,32,26,28,26,22,18,17,16,13,10,9,7,8,6,6,13,13,13,13,12,11,11,10,11,13,16,16,13,8,8,15,14,13,13,13,14,24,29,22,24,21,17,15,14,14,10,9,9,8,8,6,6,11,12,13,13,11,11,10,11,11,14,18,17,15,9,8,14,13,13,14,13,13,19,22,17,18,16,12,11,11,10,7,7,8,8,7,6,6,10,10,13,14,10,11,10,13,14,16,19,19,15,11,8,13,13,13,14,13,12,13,15,13,14,12,10,9,9,9,6,6,8,8,6,6,6,10,10,13,15,10,11,11,15,17,18,19,18,14,11,8,11,12,13,14,13,12,13,13,10,11,10,10,8,7,8,6,6,8,8,6,5,6,10,10,14,16,11,11,12,17,20,19,17,16,13,11,9,9,12,14,14,13,13,14,14,10,9,8,10,9,7,8,6,7,9,8,5,4,5,10,10,13,16,11,10,13,18,22,18,15,14,12,12,10,9,13,15,14,14,14,15,15,10,9,8,10,11,9,8,8,9,10,8,5,4,4,9,10,11,13,11,10,13,18,21,17,12,12,12,14,12,9,13,16,15,14,15,16,15,11,9,9,11,12,10,8,9,12,12,10,6,4,4,9,10,9,11,9,10,12,16,19,15,12,12,14,17,14,11,14,16,15,14,15,15,15,11,10,11,13,13,10,8,11,15,15,11,8,4,4,7,8,7,8,8,9,11,14,16,12,13,14,17,20,17,13,14,16,15,13,14,15,14,12,11,12,13,12,10,10,14,17,17,14,11,6,4,3,5,6,6,6,8,10,11,13,11,13,14,19,22,19,16,14,15,16,13,14,15,15,14,12,13,12,11,11,12,16,17,18,16,13,9,6,-3,0,4,4,5,7,9,9,11,11,11,14,19,23,21,18,13,13,16,15,14,17,18,14,13,14,13,10,11,14,18,17,18,18,15,11,7,-6,-4,0,0,4,6,8,8,10,10,10,12,18,22,21,20,12,11,15,16,16,19,19,12,14,16,13,9,11,15,18,18,19,20,17,12,9,-4,-8,-3,-1,3,4,7,8,11,10,8,9,16,19,20,21,13,9,14,17,18,21,21,12,15,16,13,9,11,16,19,19,20,19,18,13,10,0,-6,-5,-3,2,2,5,8,10,8,7,8,13,16,18,20,13,8,12,16,19,22,22],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
