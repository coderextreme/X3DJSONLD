###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_147',geoSystem=['GDC'],position=(1.4654829221618253,103.80528151193529,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.4654829221618253,103.80528151193529,0.0),range=4101.627,child1Url=['../../tiles/5/singapore28-14.x3d'],child2Url=['../../tiles/5/singapore28-15.x3d'],child3Url=['../../tiles/5/singapore29-14.x3d'],child4Url=['../../tiles/5/singapore29-15.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore14-7.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.4567512097838313,103.79091847780627,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[29,29,25,24,20,13,14,14,16,18,17,17,15,15,15,14,14,12,10,10,14,16,14,13,12,12,12,10,12,14,13,12,13,18,19,17,16,27,25,21,21,18,15,16,15,16,18,16,15,15,15,15,15,15,14,11,10,13,15,14,13,12,12,12,12,12,13,12,11,13,17,20,20,19,23,20,17,18,15,17,19,18,17,16,14,14,16,16,17,16,16,16,13,11,12,13,14,13,12,11,12,14,12,11,11,10,12,15,21,24,23,22,20,17,18,16,18,19,17,15,14,12,13,14,15,17,18,17,17,15,13,13,14,14,13,12,8,8,15,14,10,11,10,12,14,18,22,20,20,20,17,17,17,19,17,15,13,12,11,12,12,13,17,19,19,18,16,15,15,16,15,15,13,5,4,17,16,9,10,10,13,14,16,20,16,20,19,15,16,19,19,16,14,11,11,11,12,12,12,15,18,18,17,15,15,16,16,16,16,15,9,9,19,15,7,8,8,14,15,16,18,15,20,17,12,14,20,18,15,13,10,10,11,12,12,12,14,16,17,14,13,14,16,17,16,15,16,13,16,21,13,5,5,6,15,18,18,15,15,17,14,11,14,22,17,14,11,10,10,12,13,12,12,12,14,15,14,12,14,15,15,16,16,17,14,16,19,13,7,5,5,11,14,15,15,15,13,11,10,13,23,17,13,10,11,10,13,14,12,11,11,13,14,14,13,13,14,14,14,16,18,15,15,15,12,9,7,5,6,8,11,16,16,11,10,10,12,20,18,14,10,11,10,13,13,11,11,11,13,12,12,13,13,13,12,12,15,16,16,16,12,11,10,6,3,6,7,9,14,14,9,9,10,11,13,19,15,10,11,11,12,10,10,11,12,12,10,11,12,12,12,11,11,12,13,18,17,11,9,10,4,1,8,10,9,11,11,9,9,9,9,12,25,19,11,11,11,11,10,10,11,12,11,10,10,12,12,12,12,11,12,13,18,16,10,10,13,8,1,10,12,9,9,9,8,8,8,8,16,32,22,13,11,11,10,10,10,11,12,10,10,11,12,12,12,13,13,13,13,17,13,10,13,17,16,4,12,14,11,8,8,7,7,5,7,16,31,20,13,12,11,10,10,11,12,11,10,10,10,12,12,13,13,13,12,12,15,12,11,16,19,16,6,12,14,9,7,7,6,6,2,5,15,27,15,12,11,12,11,9,10,11,9,9,10,10,12,13,11,11,12,11,11,14,13,13,18,20,14,8,10,10,6,6,6,6,5,2,6,13,20,11,11,11,14,12,9,10,10,8,9,10,10,11,12,11,11,11,11,12,14,14,14,18,19,14,10,9,7,6,6,5,6,4,3,8,10,12,9,10,13,18,14,10,10,10,8,9,10,10,11,11,11,11,10,11,13,15,15,16,17,17,15,14,7,3,5,9,6,5,4,5,9,9,9,8,9,13,21,17,14,12,10,8,9,10,10,11,11,11,11,10,11,13,15,16,17,15,15,15,16,7,3,7,9,7,5,4,8,9,9,9,10,8,12,23,22,20,15,11,10,10,10,12,12,12,11,11,10,11,12,14,16,18,14,13,14,17,9,5,10,9,8,5,6,9,9,10,9,11,8,11,20,23,21,17,12,11,11,11,12,13,12,11,11,10,12,11,12,15,16,12,11,14,17,11,7,11,9,8,5,8,9,9,10,12,12,8,8,14,18,19,18,12,11,11,12,12,12,12,10,10,11,12,11,11,12,14,11,10,14,16,13,7,10,10,9,6,9,9,10,12,13,13,8,6,10,13,16,17,13,11,12,13,13,12,11,10,10,12,12,11,9,11,12,10,9,15,16,14,9,10,10,10,8,9,9,11,13,13,13,8,6,8,10,12,17,14,11,11,12,12,11,10,10,10,13,12,11,10,12,12,10,10,17,16,14,12,12,11,11,9,9,11,12,14,13,12,8,6,7,8,8,15,14,11,11,11,12,11,9,10,10,12,12,11,11,13,12,10,10,17,14,13,16,13,12,11,9,9,12,13,14,13,11,8,6,7,7,5,11,12,12,12,11,11,11,9,9,10,11,12,12,11,11,11,10,11,15,12,12,17,12,12,9,9,11,13,14,13,13,10,8,6,6,6,3,7,11,12,13,11,11,10,9,9,11,10,13,14,12,11,11,10,11,13,10,11,17,12,12,9,9,12,14,14,13,12,10,8,6,6,4,3,7,9,11,12,9,8,9,10,11,12,10,13,15,14,13,11,10,10,13,10,12,15,12,12,10,10,13,14,13,13,11,10,8,6,5,3,5,7,7,9,10,7,7,8,10,12,13,12,14,16,16,14,11,11,10,13,11,12,12,12,11,10,11,14,14,13,12,11,10,8,6,3,3,6,5,0,3,5,4,6,10,10,13,15,13,13,15,16,13,9,11,10,12,12,12,11,11,9,9,12,14,13,13,12,11,9,8,5,3,4,7,3,-2,0,0,0,4,10,10,13,16,15,12,12,14,11,8,11,10,13,12,10,10,10,8,8,12,13,13,12,12,11,9,7,4,3,6,5,0,-2,-1,-1,-9,-5,1,7,12,13,13,9,5,11,12,8,10,13,16,10,9,10,10,9,7,11,12,12,12,12,10,9,5,3,4,7,2,-4,-4,-2,-5,-18,-16,-7,1,10,10,11,5,0,7,12,9,10,16,18,8,7,9,10,10,6,10,9,11,11,11,10,8,4,3,6,5,0,-9,-13,-14,-15,-21,-23,-15,-3,4,5,6,4,1,6,11,9,10,15,14,7,6,6,6,10,8,9,6,9,11,11,10,6,3,4,7,2,-5,-16,-24,-27,-27,-25,-28,-23,-9,0,1,2,3,3,6,9,10,11,14,10,5,5,3,3,9,9,7,4,5,9,10,8,4,3,6,5,0,-15,-33,-40,-42,-41,-37,-34,-24,-9,0,1,1,2,3,5,8,9,10,11,7,5,4,3,2,7,8,5,2,2,7,9,7,3,4,7,2,-4,-26,-50,-57,-56,-54,-49,-40,-25,-9,0,2,2,2,3,5,8,9,10,8,5,5,4,3,2,6,7,3,2,2,7,9,5,3,6,5,0,-16,-39,-55,-59,-58,-56,-52,-45,-30,-10,1,2,2,2,2,4,7,9,9,7,5,4,3,3,2,5,4,2,2,3,7,8,2,4,7,2,-4,-29,-51,-58,-59,-58,-56,-55,-50,-35,-10,2,3,2,2,2,3,5,8,7,5,5,4,3,2,3,4,1,2,2,5,7,8,6,6,5,0,-16,-40,-56,-59,-59,-58,-56,-52,-47,-39,-19,-1,3,3,2,2,2,4,7,6,5,4,3,3,2,3,3,1,2,3,7,7,8,11,8,2,-4,-30,-52,-58,-59,-59,-58,-57,-47,-43,-43,-28,-7,3,3,2,2,2,3,5,5,5,4,3,2,2,4,2,1,2,5,7,8,9,11,15,0,-16,-41,-56,-59,-59,-58,-57,-57,-49,-43,-43,-35,-17,0,3,3,2,2,2,4,5,4,3,3,2,3,4,2,1,3,7,7,8,11,11,22,0,-30,-52,-58,-59,-59,-58,-57,-56,-51,-45,-43,-41,-28,-6,3,3,2,2,2,4,5,4,3,2,2,4,3,2,1,5,7,8,9,11,21,42,28,-24,-54,-58,-59,-58,-57,-57,-55,-51,-46,-43,-42,-35,-16,0,3,3,2,2,3,4,3,3,2,3,4,3,1,1,7,7,8,11,11,36,65,65,-13,-53,-59,-59,-58,-56,-56,-54,-50,-46,-43,-43,-41,-28,-7,2,3,2,2,3,4,3,2,2,4,4,3,1,0],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
