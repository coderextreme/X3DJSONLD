###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_82',geoSystem=['GDC'],position=(1.3607023736258976,103.6616511706451,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.3607023736258976,103.6616511706451,0.0),range=4101.627,child1Url=['../../tiles/5/singapore16-4.x3d'],child2Url=['../../tiles/5/singapore16-5.x3d'],child3Url=['../../tiles/5/singapore17-4.x3d'],child4Url=['../../tiles/5/singapore17-5.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore8-2.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.3519706612479037,103.64728813651608,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[34,31,36,40,35,30,23,19,29,39,44,52,55,54,41,38,50,45,42,36,30,34,34,27,24,26,26,24,24,23,17,14,18,31,39,35,31,32,32,32,35,37,36,25,19,26,40,47,53,51,46,39,36,49,51,46,36,28,32,34,27,22,25,25,24,24,23,20,17,17,27,35,34,30,32,35,30,31,39,41,27,17,22,37,46,49,44,37,34,32,46,53,47,37,27,29,33,26,20,22,24,23,23,22,23,19,16,23,32,33,30,36,42,33,30,41,46,30,16,17,29,36,38,33,28,28,28,41,48,42,36,27,27,29,26,20,21,21,21,20,20,23,20,14,19,31,33,30,39,48,39,29,40,47,30,14,13,22,26,27,25,23,24,24,35,41,37,34,28,25,26,25,22,20,21,19,17,18,22,19,12,16,28,32,29,36,50,44,29,35,42,27,12,10,17,20,20,22,22,21,21,29,35,32,33,29,23,24,24,24,24,24,21,16,14,18,17,11,13,24,28,26,30,49,47,27,28,35,23,11,9,14,16,16,21,23,20,18,24,29,29,32,29,23,23,23,26,28,27,24,17,12,15,14,9,11,20,24,22,27,45,45,25,21,26,18,10,7,11,13,12,19,23,21,17,19,23,25,29,27,24,22,23,27,31,30,27,20,12,11,10,8,10,15,18,18,24,39,38,21,15,19,15,9,7,9,10,10,18,23,22,17,16,18,21,26,25,24,21,23,26,31,30,28,23,13,9,8,8,9,12,14,15,22,32,29,16,11,13,13,8,7,8,8,10,18,23,22,18,15,16,19,23,23,22,20,22,23,28,28,26,23,15,9,8,8,9,11,13,14,20,25,20,11,8,10,11,8,7,7,7,10,18,21,21,18,16,16,17,20,20,19,18,20,20,23,25,24,22,16,9,8,8,8,11,14,16,15,17,14,9,8,9,11,9,6,7,7,9,15,17,18,19,18,18,18,20,18,15,15,18,18,18,20,20,20,15,9,7,8,8,10,15,18,10,11,10,8,8,9,12,10,6,6,7,8,11,13,15,20,21,20,19,19,15,11,11,16,16,15,16,18,18,13,9,7,8,8,10,16,20,7,8,8,8,7,9,13,11,6,6,6,8,11,11,13,20,23,21,19,18,13,9,8,13,15,13,13,17,18,12,8,7,8,8,10,17,22,6,7,7,7,7,9,13,11,6,6,6,9,12,12,13,19,22,20,18,17,11,8,7,10,13,13,11,17,19,12,7,7,8,8,10,18,23,5,6,7,7,7,10,13,10,6,6,6,10,15,14,13,16,19,17,17,17,10,6,7,7,9,12,9,17,20,11,7,7,8,9,13,21,25,5,6,7,7,7,10,11,8,6,6,5,10,17,16,13,13,15,13,16,16,9,5,7,6,6,9,9,17,20,12,7,8,8,10,17,24,27,6,6,7,6,7,9,9,7,6,6,5,10,15,15,12,11,12,12,16,15,9,5,7,6,4,7,8,16,18,11,7,8,8,11,19,25,27,7,7,6,6,7,7,7,6,6,5,5,8,11,12,11,9,11,13,16,16,10,5,7,7,4,5,8,16,16,11,8,8,8,11,19,24,25,8,7,6,6,6,6,5,5,5,5,5,7,9,10,9,9,11,14,16,17,11,6,7,6,5,5,7,13,14,13,10,8,7,10,18,21,20,7,7,7,7,7,6,5,4,4,5,5,7,8,8,8,9,12,15,16,19,13,7,6,5,6,6,6,10,14,16,14,9,7,9,14,15,15,7,6,6,6,7,6,5,4,4,5,6,8,8,7,8,10,14,16,16,19,13,7,6,5,6,6,6,7,13,19,17,10,7,8,11,11,11,6,5,5,6,7,6,5,4,3,5,7,9,9,8,9,11,17,18,17,18,14,8,6,6,7,6,6,7,13,22,20,11,7,6,8,9,9,5,5,5,5,5,5,5,4,3,5,9,11,10,9,9,12,18,19,17,16,14,9,6,7,7,7,8,10,15,23,21,11,6,6,7,8,9,5,5,4,4,3,3,5,3,3,6,12,14,12,10,10,12,17,18,16,14,14,9,6,7,8,9,12,16,20,25,20,11,6,5,7,9,11,5,5,4,3,2,2,3,2,2,8,13,15,12,10,9,11,16,17,14,12,12,9,7,7,8,10,15,20,25,25,17,9,5,4,6,10,12,4,4,3,2,1,1,0,-1,2,9,13,14,10,8,9,11,14,15,13,10,10,8,8,8,7,11,16,23,29,25,13,7,4,3,5,10,13,4,4,3,2,1,0,-1,-2,2,10,14,13,9,7,7,10,12,13,12,8,8,7,8,9,7,11,17,23,30,25,11,6,4,3,5,10,15,3,3,2,1,0,0,0,0,3,9,14,11,7,7,6,9,11,13,11,7,7,8,9,9,8,11,16,20,28,25,12,6,5,4,5,10,15,3,3,2,1,0,0,0,2,5,9,13,10,7,6,6,8,12,13,11,7,7,8,9,8,8,11,16,16,25,23,12,6,5,5,5,10,17,4,2,1,0,0,1,3,4,7,9,12,10,8,8,7,11,14,14,11,8,7,8,8,8,8,11,17,13,20,19,10,6,5,4,5,12,19,4,3,2,1,1,3,6,6,9,10,10,10,8,9,9,12,16,14,11,9,7,8,8,8,8,11,17,11,16,15,9,6,5,4,7,16,24,6,6,5,3,3,5,6,7,9,9,9,9,8,9,11,12,14,12,11,8,7,8,8,8,8,10,15,10,12,12,10,7,5,5,11,24,31,8,8,6,4,4,6,6,7,8,8,8,8,8,9,12,13,13,11,10,8,7,8,8,7,7,9,15,10,9,10,9,7,5,5,15,31,36,8,8,7,5,4,5,6,6,7,7,7,8,8,8,11,15,16,12,10,7,6,7,8,6,7,9,17,12,10,9,5,5,4,6,21,35,38,8,8,7,4,3,5,6,6,7,6,7,8,8,7,10,15,17,13,8,7,5,7,7,5,6,9,17,14,11,9,3,3,4,8,25,38,38,8,8,6,2,2,4,6,7,7,6,6,8,8,8,8,12,15,12,7,5,5,7,7,5,6,8,15,17,14,11,5,3,5,11,26,38,39,8,8,5,0,0,4,6,8,7,6,6,7,9,8,7,9,12,11,6,5,5,7,7,5,6,8,12,17,16,12,7,4,7,13,25,36,38,8,8,4,-2,-2,3,6,8,7,6,6,7,9,8,8,8,10,11,7,6,6,7,7,5,6,7,10,15,16,14,9,6,9,14,23,33,35,8,8,4,-3,-5,1,6,10,8,7,7,7,9,8,9,8,9,10,8,7,7,7,7,6,6,7,8,12,16,14,11,8,10,13,20,28,32,8,8,4,-2,-6,-1,9,13,8,7,6,7,9,8,9,8,8,8,8,7,6,7,7,7,7,7,8,10,15,14,12,9,9,11,14,21,26,8,7,3,-1,-6,-2,11,15,7,7,6,8,8,8,9,8,8,8,8,7,6,7,7,7,8,8,8,10,13,13,12,9,8,8,9,16,21,7,6,4,0,-4,-1,10,12,6,6,6,7,7,7,8,8,8,8,8,6,6,7,7,8,7,7,8,10,11,12,11,9,7,7,7,12,17,6,6,4,1,-1,0,9,8,5,6,7,7,7,7,8,7,7,8,8,6,6,7,7,8,7,7,8,10,10,10,10,8,7,7,6,10,14],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
