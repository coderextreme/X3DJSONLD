###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_1013',geoSystem=['GDC'],position=(1.3956292231378735,103.97763792148352,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.3956292231378735,103.97763792148352,0.0),range=4101.627,child1Url=['../../tiles/5/singapore20-26.x3d'],child2Url=['../../tiles/5/singapore20-27.x3d'],child3Url=['../../tiles/5/singapore21-26.x3d'],child4Url=['../../tiles/5/singapore21-27.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore10-13.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.3868975107598795,103.9632748873545,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=45,zSpacing=3.96896E-4,height=[0,0,0,0,0,-2,-8,-27,-38,-14,-2,-6,1,6,6,8,9,11,15,18,22,25,23,21,20,16,15,16,15,14,14,11,8,8,8,5,6,0,0,0,0,-3,-10,-17,-38,-41,-17,-7,-14,0,6,9,13,13,15,19,23,26,28,24,22,23,20,17,16,15,16,16,12,9,9,9,6,6,0,0,0,-1,-9,-19,-29,-46,-41,-19,-12,-19,-1,8,15,19,19,20,24,28,33,31,25,24,26,24,18,16,16,18,19,13,11,12,11,7,7,0,0,0,-4,-17,-27,-37,-48,-44,-21,-14,-13,1,11,20,24,22,23,26,31,37,35,29,26,29,28,22,17,16,19,19,13,12,13,12,8,8,0,0,-1,-12,-25,-32,-40,-46,-48,-23,-10,0,6,14,25,28,25,24,26,32,39,40,33,29,32,32,25,18,17,19,18,14,13,14,13,9,9,0,0,-5,-20,-31,-36,-41,-46,-47,-22,-4,8,9,16,27,30,25,23,25,30,39,43,36,31,34,36,28,20,18,19,18,14,13,13,12,9,10,0,-1,-13,-28,-34,-37,-41,-45,-42,-19,2,10,11,17,25,28,24,22,23,27,37,44,37,31,37,39,32,22,19,19,18,14,12,12,9,9,9,0,-5,-21,-32,-36,-38,-41,-44,-35,-11,8,12,12,16,21,24,24,21,20,23,34,42,36,30,36,39,33,22,19,18,17,14,11,11,8,8,9,-1,-13,-29,-34,-36,-38,-40,-42,-26,0,10,12,12,12,13,20,25,21,18,19,29,36,32,28,32,37,33,22,18,17,15,12,9,9,8,8,8,-5,-21,-33,-36,-36,-38,-39,-36,-15,6,12,11,11,9,8,16,24,20,15,16,23,29,28,25,29,33,30,21,17,15,13,11,9,8,7,8,8,-13,-29,-35,-36,-36,-38,-39,-27,-2,10,11,10,8,6,4,13,21,17,12,13,19,23,23,24,25,27,24,19,16,14,10,8,10,9,6,8,8,-22,-35,-36,-36,-36,-37,-35,-15,6,12,11,8,5,3,1,8,16,12,8,10,15,17,19,21,22,21,18,16,14,13,9,8,10,12,6,7,8,-30,-35,-36,-36,-36,-37,-26,-1,10,11,9,6,4,2,-1,3,9,6,5,8,11,12,15,19,20,17,13,13,12,12,9,8,10,15,8,7,7,-35,-36,-36,-36,-35,-33,-14,7,12,11,7,4,3,0,-3,0,4,2,3,7,9,9,12,17,18,13,8,10,11,11,9,8,11,17,11,7,7,-36,-36,-36,-36,-35,-24,-1,10,12,9,5,3,1,-1,-2,0,2,2,4,8,8,9,12,16,16,8,3,9,11,11,9,9,11,15,15,9,8,-36,-36,-36,-35,-32,-13,8,12,12,7,4,3,0,-4,-2,0,2,3,5,7,8,9,12,15,13,4,0,6,10,10,9,9,11,14,17,12,9,-36,-36,-36,-35,-23,0,10,12,9,5,3,1,-2,-3,-1,0,2,4,6,7,8,8,11,13,7,0,-1,2,8,10,9,9,11,14,16,15,12,-36,-36,-35,-31,-13,8,12,12,7,4,3,0,-4,-3,0,1,3,5,6,7,8,8,10,10,3,-2,-2,0,6,9,9,9,11,14,16,18,15,-36,-36,-35,-23,0,10,12,9,5,3,1,-2,-4,-2,0,2,4,5,6,7,7,8,8,5,0,-2,-2,-1,2,7,9,9,11,13,16,17,16,-36,-35,-32,-14,9,12,12,7,4,3,0,-4,-4,-1,1,3,5,6,6,7,7,8,7,2,-2,-2,-2,-2,0,5,8,9,11,13,16,17,17,-36,-35,-23,0,11,12,9,5,3,1,-2,-4,-2,0,2,4,5,6,6,7,7,7,6,1,-2,-2,-2,-2,-1,1,6,9,11,13,15,17,17,-35,-32,-13,9,12,12,7,4,3,0,-4,-4,-1,1,3,5,6,6,6,6,7,7,6,1,-1,-2,-2,-2,-2,0,4,8,11,13,15,17,17,-35,-23,0,11,12,9,5,3,1,-1,-4,-3,0,2,4,5,6,6,6,6,6,7,6,3,0,-2,-2,-2,-2,-1,1,6,11,13,15,16,17,-32,-13,9,12,12,7,4,3,0,-4,-4,-2,0,3,5,6,6,6,6,6,6,7,7,5,0,-1,-2,-2,-2,-2,0,5,10,13,15,16,16,-23,0,11,12,10,5,3,1,-1,-4,-3,0,1,4,5,6,6,6,6,6,6,6,7,6,2,0,-2,-2,-2,-2,-1,1,8,13,14,16,16,-13,9,12,12,7,4,3,0,-4,-4,-2,0,3,5,6,6,6,6,6,6,6,6,7,7,5,0,-1,-2,-2,-2,-2,0,6,12,14,16,16,0,11,12,10,5,3,1,-1,-4,-3,0,1,4,5,6,6,6,6,6,6,6,6,6,7,6,2,0,-2,-2,-2,-2,-1,2,10,14,15,16,9,12,12,7,4,3,0,-4,-4,-2,0,3,5,6,6,6,6,6,6,6,6,6,6,7,7,5,0,-1,-2,-2,-2,-2,0,7,13,15,15,12,12,10,5,3,1,-2,-4,-3,0,2,4,5,6,6,6,6,6,6,6,6,6,6,6,7,6,2,0,-2,-2,-2,-2,-1,3,11,14,15,12,12,7,4,3,0,-4,-4,-2,0,3,5,6,6,6,6,6,6,6,6,6,6,6,6,7,7,5,0,-1,-2,-2,-2,-1,0,7,14,15,12,10,5,3,1,-2,-4,-3,0,1,4,5,6,6,6,6,6,6,6,6,6,6,6,6,6,7,6,2,0,-2,-2,-2,-2,-1,3,12,13,12,7,4,3,0,-4,-4,-2,0,2,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,7,5,0,-1,-2,-2,-2,-2,0,8,12,9,5,3,1,-2,-4,-3,0,2,4,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,6,2,0,-2,-2,-2,-2,-1,3,8,7,4,3,0,-4,-4,-2,0,2,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,7,5,0,-1,-2,-2,-2,-2,0,4,5,3,2,-1,-4,-3,0,2,4,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,6,2,0,-2,-2,-2,-2,-2,0,4,3,0,-4,-4,-2,0,2,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,7,5,0,-1,-2,-2,-2,-2,-1,3,2,-1,-4,-3,0,2,4,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,6,2,0,-2,-2,-2,-2,-2,3,0,-4,-4,-2,0,2,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,7,5,0,-1,-2,-2,-2,-2,2,-1,-4,-3,0,2,4,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,6,2,0,-2,-2,-2,-2,0,-4,-4,-2,0,3,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,7,5,0,-1,-2,-2,-2,-1,-5,-3,0,2,4,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,6,2,0,-2,-2,-2,-4,-4,-2,0,3,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,6,5,0,-1,-2,-2,-5,-3,0,2,3,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,6,2,0,-2,-2,-4,-2,0,2,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,7,5,0,-1,-2,-3,0,2,3,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,6,2,0,-1],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
