###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoLOD(center=(41.186094403270666,-71.59334508710027,0.0),range=6150.345,child1Url=['../../tiles/5/newport2-8.x3d'],child2Url=['../../tiles/5/newport2-9.x3d'],child3Url=['../../tiles/5/newport3-8.x3d'],child4Url=['../../tiles/5/newport3-9.x3d'],
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(41.5,-71.5,0),geoSystem=['GDC']),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0,0.05,0)),
            texture=ImageTexture(url=['../../images/4/newport1-4.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(41.16190446781378,-71.61532891417802,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=55,xSpacing=8.142158E-4,zDimension=52,zSpacing=9.486249E-4,height=[-6,-4,-3,-2,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-7,-5,-4,-3,-2,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-7,-5,-4,-3,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-8,-6,-4,-2,-2,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-8,-7,-5,-2,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-9,-7,-6,-4,-3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-9,-8,-6,-4,-2,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-9,-8,-6,-4,-3,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-9,-8,-6,-5,-3,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-10,-9,-7,-6,-4,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-10,-8,-7,-5,-4,-2,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-9,-8,-7,-6,-4,-3,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-10,-9,-7,-6,-5,-3,-2,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-10,-9,-7,-6,-5,-4,-3,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-10,-9,-8,-6,-5,-4,-3,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-10,-9,-8,-6,-5,-4,-3,-2,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,-10,-9,-8,-7,-6,-5,-4,-3,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-1,0,0,0,0,-11,-10,-9,-8,-7,-5,-4,-3,-2,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-1,-1,0,0,-12,-10,-9,-8,-7,-6,-5,-4,-3,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-12,-11,-10,-9,-8,-7,-5,-4,-3,-2,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-1,-13,-12,-11,-10,-9,-8,-7,-5,-4,-3,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-15,-14,-13,-12,-10,-9,-8,-7,-5,-4,-3,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-17,-15,-14,-13,-12,-10,-9,-8,-6,-5,-3,-2,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-2,-2,-2,-1,-3,-2,-3,-1,-1,-1,-1,-19,-17,-15,-14,-13,-11,-10,-8,-7,-5,-5,-4,-4,-2,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-3,-4,-4,-5,-5,-6,-6,-5,-4,-3,-2,-1,-1,-20,-18,-16,-14,-13,-11,-10,-8,-10,-9,-8,-7,-6,-5,-3,-2,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3,-6,-7,-7,-7,-7,-7,-6,-6,-5,-4,-3,-2,-1,-22,-19,-16,-14,-13,-13,-14,-14,-13,-12,-11,-9,-8,-6,-5,-4,-3,-2,-2,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-5,-6,-6,-6,-6,-6,-6,-6,-5,-5,-4,-3,-2,-2,-23,-19,-17,-19,-19,-18,-18,-16,-15,-14,-12,-11,-10,-8,-7,-6,-5,-4,-4,-3,-2,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-2,-2,-4,-4,-5,-5,-5,-5,-5,-4,-4,-3,-2,-2,-1,-27,-26,-24,-23,-22,-21,-20,-18,-17,-16,-14,-13,-11,-10,-9,-8,-7,-6,-6,-5,-3,-2,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-1,-1,-2,-2,-3,-3,-4,-4,-4,-4,-3,-3,-2,-1,-1,-29,-28,-27,-25,-24,-23,-21,-20,-19,-17,-16,-15,-13,-12,-11,-10,-9,-8,-7,-6,-5,-4,-3,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-2,-2,-1,-1,-1,-1,-1,-2,-2,-2,-2,-3,-2,-2,-1,-1,-1,-29,-29,-28,-27,-26,-25,-23,-22,-20,-19,-18,-16,-15,-14,-13,-12,-11,-10,-9,-8,-6,-5,-4,-3,-1,0,0,0,0,0,-1,-1,-1,-1,0,0,-1,-2,-3,-3,-2,-2,-1,-1,-1,-1,-1,-2,-1,-1,-1,-1,-1,-1,-1,-29,-29,-29,-28,-28,-26,-25,-23,-22,-21,-20,-18,-17,-16,-15,-14,-13,-12,-10,-9,-8,-6,-5,-4,-2,-1,0,0,0,0,-1,-1,-1,-1,-1,0,-1,-3,-4,-4,-3,-3,-2,-2,-1,-1,-1,-1,-1,-1,-1,-1,0,0,0,-30,-29,-29,-29,-28,-27,-26,-25,-24,-23,-21,-20,-19,-17,-16,-16,-14,-13,-12,-10,-9,-8,-6,-5,-3,-2,-2,-1,0,0,0,-1,-1,-1,-1,-2,-3,-4,-5,-5,-5,-4,-4,-3,-2,-2,-1,-1,-1,-1,-1,-1,0,0,0,-30,-30,-30,-30,-29,-28,-28,-27,-26,-25,-23,-22,-20,-19,-18,-17,-16,-14,-13,-11,-10,-9,-7,-6,-5,-4,-3,-2,0,0,0,0,-1,-1,-2,-4,-6,-6,-6,-6,-6,-5,-5,-4,-4,-3,-3,-2,-1,-1,0,0,0,0,0,-30,-30,-30,-30,-30,-29,-28,-28,-27,-26,-25,-24,-22,-21,-20,-18,-17,-15,-14,-13,-11,-10,-8,-7,-6,-5,-5,-3,-1,0,0,0,0,-1,-3,-7,-8,-7,-8,-7,-7,-6,-5,-5,-4,-3,-3,-2,-2,-1,0,0,0,0,0,-30,-30,-30,-30,-30,-29,-29,-28,-28,-27,-27,-26,-24,-23,-21,-20,-18,-16,-15,-14,-12,-11,-9,-8,-8,-7,-5,-3,-1,0,0,0,0,0,-6,-6,-5,-6,-6,-6,-6,-5,-5,-4,-3,-3,-2,-2,-1,-1,-1,0,0,0,0,-31,-30,-30,-30,-29,-29,-29,-28,-28,-27,-27,-25,-26,-25,-23,-22,-20,-18,-17,-15,-14,-12,-12,-11,-9,-7,-5,-3,-1,0,0,0,0,0,-5,-2,-2,-3,-4,-5,-5,-4,-4,-3,-3,-2,-1,-1,-1,-1,-1,-1,0,0,0,-31,-31,-30,-30,-30,-29,-29,-29,-28,-28,-27,-27,-26,-26,-24,-23,-22,-20,-19,-17,-15,-14,-13,-12,-10,-8,-6,-4,-2,0,0,0,0,-5,0,0,0,-1,-2,-3,-4,-3,-3,-2,-2,-1,-1,-1,-1,-1,-1,0,0,0,0,-31,-31,-31,-30,-30,-30,-29,-29,-29,-28,-28,-27,-27,-26,-25,-24,-23,-22,-19,-17,-15,-14,-14,-13,-11,-8,-6,-4,-2,0,0,-3,-4,0,0,0,0,0,-1,-2,-2,-2,-2,-1,-1,-1,-1,-1,-1,-1,-1,0,0,0,0,-31,-31,-31,-31,-30,-30,-30,-30,-29,-29,-28,-28,-27,-27,-25,-24,-22,-20,-18,-18,-17,-16,-15,-14,-12,-10,-8,-6,-4,-1,-6,-4,-1,-1,0,0,0,0,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,0,-31,-31,-31,-31,-31,-31,-30,-30,-30,-29,-29,-28,-28,-28,-26,-24,-23,-20,-18,-18,-18,-17,-16,-14,-12,-10,-8,-6,-5,-7,-5,-4,-3,-2,-1,0,0,0,0,0,0,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,0,0,-31,-31,-31,-31,-31,-30,-30,-30,-30,-29,-29,-29,-28,-29,-27,-26,-24,-23,-21,-20,-18,-17,-17,-15,-13,-11,-9,-6,-6,-6,-5,-4,-3,-3,-2,-1,0,0,0,0,0,-1,0,0,0,-1,-1,-1,-1,-1,0,0,0,0,0,-31,-31,-31,-31,-31,-31,-31,-31,-30,-30,-29,-29,-29,-29,-28,-27,-26,-25,-24,-22,-19,-18,-17,-16,-14,-12,-11,-10,-8,-8,-6,-5,-4,-4,-3,-2,-1,-1,0,0,0,0,0,0,0,0,0,-1,-1,0,-1,-1,0,0,0,-31,-31,-31,-31,-31,-31,-31,-31,-30,-30,-30,-29,-29,-29,-29,-28,-27,-26,-26,-23,-19,-18,-17,-16,-14,-12,-11,-10,-9,-8,-7,-6,-5,-5,-4,-3,-3,-2,-1,-1,-1,0,0,0,0,0,0,-1,-1,-1,-1,0,0,0,0,-31,-31,-31,-31,-31,-31,-31,-31,-31,-30,-30,-30,-29,-30,-29,-28,-27,-26,-26,-24,-21,-18,-16,-16,-14,-13,-11,-9,-9,-8,-7,-7,-6,-5,-4,-4,-4,-3,-3,-2,-1,-1,0,0,0,0,0,0,-1,0,0,0,0,0,0,-31,-31,-31,-31,-31,-31,-31,-31,-31,-30,-30,-30,-30,-30,-29,-29,-28,-28,-27,-24,-22,-19,-17,-15,-14,-12,-10,-10,-9,-8,-7,-7,-7,-7,-6,-6,-5,-4,-4,-3,-2,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,-31,-31,-31,-31,-31,-31,-31,-31,-31,-30,-30,-30,-30,-30,-30,-29,-29,-28,-27,-24,-22,-20,-18,-16,-14,-12,-10,-9,-10,-10,-9,-9,-9,-8,-8,-7,-6,-6,-5,-4,-3,-3,-2,-1,0,0,0,0,0,0,0,0,0,0,0,-31,-31,-32,-32,-32,-31,-31,-31,-31,-31,-31,-31,-31,-31,-30,-29,-29,-28,-27,-25,-23,-21,-19,-17,-15,-13,-12,-14,-12,-11,-11,-11,-10,-10,-9,-8,-7,-7,-6,-5,-4,-3,-2,-1,0,0,0,0,0,0,0,0,0,0,0,-31,-32,-32,-32,-32,-32,-31,-31,-31,-31,-31,-31,-31,-31,-30,-30,-29,-29,-28,-26,-24,-22,-20,-18,-16,-15,-16,-16,-14,-13,-13,-12,-11,-11,-10,-9,-8,-7,-6,-5,-5,-4,-3,-2,-1,0,0,0,0,0,0,0,0,0,0,-32,-32,-32,-32,-32,-32,-32,-32,-32,-31,-31,-31,-31,-31,-31,-30,-29,-29,-28,-27,-27,-25,-22,-20,-18,-17,-17,-16,-16,-15,-14,-13,-13,-12,-11,-10,-9,-8,-7,-6,-5,-4,-3,-2,-1,0,0,0,0,0,0,0,0,0,0,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-31,-30,-29,-29,-28,-27,-27,-26,-25,-24,-22,-21,-20,-19,-17,-16,-15,-14,-13,-12,-11,-10,-9,-8,-7,-6,-5,-4,-3,-2,0,0,0,0,0,0,0,0,0,0,0,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-31,-30,-30,-29,-29,-29,-28,-28,-27,-27,-25,-24,-22,-21,-19,-17,-16,-15,-14,-13,-12,-11,-9,-8,-7,-6,-5,-4,-3,-2,-1,0,0,0,0,0,0,0,0,0,0,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-31,-30,-30,-30,-29,-29,-28,-28,-28,-27,-26,-24,-22,-21,-19,-17,-16,-15,-14,-13,-12,-11,-9,-8,-7,-6,-5,-4,-3,-2,-1,0,0,0,0,0,0,0,0,0,0],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
