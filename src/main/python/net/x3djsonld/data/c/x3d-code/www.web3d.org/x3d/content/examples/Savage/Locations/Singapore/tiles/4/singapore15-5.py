###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_155',geoSystem=['GDC'],position=(1.4829463469178132,103.74782937541922,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.4829463469178132,103.74782937541922,0.0),range=4101.627,child1Url=['../../tiles/5/singapore30-10.x3d'],child2Url=['../../tiles/5/singapore30-11.x3d'],child3Url=['../../tiles/5/singapore31-10.x3d'],child4Url=['../../tiles/5/singapore31-11.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore15-5.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.4742146345398193,103.7334663412902,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[31,27,24,18,15,17,24,25,26,31,36,43,49,48,41,36,31,24,23,32,39,37,37,37,34,26,20,21,23,36,43,38,41,39,30,28,32,36,32,28,20,16,18,24,27,27,32,37,42,46,46,40,36,31,24,24,32,38,37,37,38,36,27,21,21,24,35,44,38,37,35,31,29,35,42,37,33,22,18,19,24,29,28,32,38,41,43,43,39,35,31,25,25,31,35,36,37,39,37,28,21,21,24,35,45,38,33,30,32,30,37,45,37,30,20,17,19,23,29,28,32,39,41,43,41,38,36,32,26,27,32,35,36,36,37,34,26,21,22,27,34,43,39,33,29,31,32,39,46,33,24,17,16,20,22,29,28,32,39,43,43,40,37,37,33,28,30,33,35,36,35,34,31,25,21,25,29,34,40,39,36,28,30,35,40,42,28,20,15,16,21,21,28,29,33,40,43,41,38,37,38,35,30,31,34,36,37,34,32,29,23,22,27,31,35,39,39,37,28,30,36,44,35,22,16,14,17,22,21,27,30,34,40,44,39,36,36,38,37,33,32,35,37,37,34,30,26,22,23,28,34,36,39,39,37,30,31,37,49,29,20,17,15,18,23,22,27,32,36,42,44,39,36,37,39,38,34,32,35,38,37,34,30,25,23,24,28,35,39,43,40,37,34,37,38,49,25,22,20,15,19,24,23,27,32,39,44,45,40,38,40,41,40,33,30,34,38,37,34,30,26,25,24,27,36,41,47,42,38,39,43,38,44,26,27,25,17,19,25,26,28,32,39,45,45,42,40,42,43,39,32,30,35,39,38,34,30,27,27,26,28,34,41,51,44,39,42,47,39,42,30,32,30,20,19,24,28,28,31,38,44,46,44,42,44,43,38,30,30,37,42,40,34,29,29,30,27,29,32,42,53,44,40,43,46,43,43,33,36,33,23,19,24,30,30,32,39,44,46,44,43,43,42,37,30,31,38,43,40,32,29,31,32,29,29,31,41,51,44,41,41,45,44,44,35,36,34,25,19,23,29,32,35,40,45,46,45,42,42,40,35,30,32,39,42,37,30,29,32,34,31,29,32,38,46,43,40,38,41,45,45,37,36,34,27,21,23,30,34,38,42,46,46,44,41,40,38,34,31,34,40,41,36,31,30,33,35,33,30,33,37,43,41,38,36,39,48,49,39,36,33,28,23,25,31,34,38,44,47,45,43,40,38,36,33,33,36,41,41,37,34,33,33,35,35,32,35,38,42,39,37,35,38,54,54,40,35,32,28,24,26,32,34,38,45,48,44,42,39,37,35,33,35,38,42,41,39,38,36,33,36,36,33,37,40,40,37,35,33,37,55,54,39,35,32,27,25,27,31,33,38,44,48,45,42,41,39,37,35,36,39,42,42,41,43,42,36,37,35,33,38,42,40,36,32,31,37,49,48,38,34,30,27,26,28,31,33,37,44,49,45,44,44,42,40,37,36,40,42,42,43,47,46,38,38,35,33,39,43,41,36,31,29,37,42,41,36,33,28,26,26,27,31,34,37,43,48,46,47,48,47,44,38,36,40,43,44,46,50,47,39,38,36,34,40,43,41,39,32,29,36,37,38,34,32,27,25,24,26,31,36,38,43,48,49,49,51,52,47,40,36,40,44,45,48,51,48,40,39,37,35,40,43,42,40,32,28,35,34,35,34,31,25,23,22,26,32,40,43,45,49,52,52,53,54,48,40,37,41,45,47,49,50,46,43,43,39,36,40,42,40,38,30,26,33,33,34,35,31,25,22,20,26,33,44,47,47,49,56,54,53,55,48,41,39,42,46,49,49,48,46,46,45,42,38,40,41,39,34,27,24,31,32,32,37,31,26,21,20,25,33,43,48,48,49,54,52,51,50,47,42,42,46,48,49,49,47,47,48,46,44,42,41,41,37,32,26,24,29,30,31,40,32,26,21,21,24,32,43,48,48,48,52,51,49,47,45,43,46,50,49,49,49,47,48,48,47,46,44,43,41,35,30,25,24,28,28,29,41,33,28,22,22,25,31,42,46,45,45,50,51,49,47,44,45,49,51,49,48,49,48,47,46,46,46,44,43,41,37,30,27,24,26,26,27,42,33,30,23,23,26,31,40,43,42,43,47,50,49,48,45,47,50,51,48,47,50,48,45,43,44,45,43,41,40,38,32,29,25,25,24,26,42,34,30,26,26,27,31,36,40,40,42,45,48,50,50,49,48,50,50,47,46,48,47,43,40,42,43,41,39,39,40,35,31,28,30,24,26,42,34,30,29,28,29,31,32,37,39,41,43,47,51,51,52,50,49,47,44,44,46,46,40,38,41,42,39,36,37,40,37,33,30,35,25,26,40,36,36,35,30,28,30,31,34,36,39,42,47,50,50,51,49,48,45,42,41,44,45,39,35,39,41,38,35,35,38,37,34,32,33,24,23,39,38,41,40,31,27,28,31,31,34,37,41,46,49,49,49,49,47,43,40,39,42,44,37,33,38,40,37,34,33,34,37,36,33,31,21,20,39,40,44,40,32,27,28,31,33,36,38,41,45,49,49,49,48,47,43,38,37,40,42,36,33,38,40,37,34,32,32,33,34,31,28,21,20,40,43,45,39,31,27,28,33,36,40,40,40,44,49,50,49,48,47,43,37,36,38,39,35,32,37,41,38,33,31,31,29,31,29,25,22,21,41,43,42,36,32,29,29,33,36,39,40,41,44,48,48,47,46,46,42,37,36,38,37,33,31,37,41,38,33,32,32,29,30,28,26,22,21,43,42,39,34,33,31,31,33,35,37,39,41,44,47,46,44,44,45,41,37,36,38,36,31,30,37,42,39,33,33,33,30,29,29,27,22,22,40,39,37,34,34,33,31,32,34,37,39,41,44,46,44,42,43,45,41,37,36,37,35,30,29,35,40,39,35,33,33,30,29,29,26,23,24,36,35,34,35,35,34,30,31,33,37,39,42,44,45,43,40,41,44,41,37,36,37,34,30,28,33,37,39,36,33,31,30,29,27,23,25,25,35,35,34,33,35,33,30,32,35,39,41,43,43,41,39,38,41,43,40,36,35,36,35,30,29,31,35,38,37,34,30,30,30,29,25,27,28,34,35,34,31,34,32,30,33,38,40,43,43,41,37,34,37,41,43,39,34,33,37,36,31,28,29,33,37,39,36,31,31,32,32,28,30,30,35,36,35,30,32,31,30,34,39,42,46,45,41,36,32,35,39,41,38,32,31,37,38,33,28,27,30,36,39,36,32,33,34,33,30,32,33,38,37,36,29,30,30,30,34,39,45,49,46,42,37,33,34,37,40,38,31,30,36,40,34,29,25,29,36,38,37,34,36,36,34,33,34,35,39,39,36,29,28,28,32,35,38,45,49,46,41,38,33,33,35,38,37,31,30,35,38,34,29,25,27,34,37,35,35,37,37,35,34,35,36,40,41,37,30,25,27,34,35,37,44,47,45,40,38,34,32,33,36,35,31,30,32,35,34,29,25,26,31,34,33,35,38,37,36,35,35,36,41,42,38,31,25,27,35,37,39,45,47,44,39,37,34,31,32,34,35,31,29,30,34,32,28,24,23,28,31,32,35,39,37,36,34,34,35,43,43,40,32,26,27,35,39,42,46,47,43,38,37,34,31,31,33,34,31,28,29,33,31,27,22,20,24,28,32,36,39,37,35,32,32,33],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
