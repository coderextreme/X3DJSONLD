###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_157',geoSystem=['GDC'],position=(1.4829463469178132,103.80528151193529,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.4829463469178132,103.80528151193529,0.0),range=4101.627,child1Url=['../../tiles/5/singapore30-14.x3d'],child2Url=['../../tiles/5/singapore30-15.x3d'],child3Url=['../../tiles/5/singapore31-14.x3d'],child4Url=['../../tiles/5/singapore31-15.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore15-7.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.4742146345398193,103.79091847780627,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[7,7,8,11,11,36,65,65,-13,-53,-59,-59,-58,-56,-56,-54,-50,-46,-43,-43,-41,-28,-7,2,3,2,2,3,4,3,2,2,4,4,3,1,0,7,8,9,11,21,48,71,76,4,-48,-59,-58,-57,-56,-55,-53,-50,-47,-44,-43,-42,-35,-18,-1,3,3,2,3,3,3,2,3,3,4,2,1,0,8,8,11,11,36,66,76,77,8,-48,-59,-58,-56,-56,-55,-53,-50,-47,-44,-43,-43,-41,-27,-7,2,3,2,3,3,2,2,4,4,4,2,1,0,8,9,11,20,51,73,76,71,19,-45,-58,-57,-56,-56,-55,-52,-50,-46,-44,-43,-43,-42,-35,-17,-1,2,3,3,3,2,3,4,4,3,2,1,0,8,11,11,34,66,75,77,61,29,-43,-58,-56,-56,-55,-54,-52,-49,-46,-44,-43,-43,-43,-40,-28,-7,2,3,3,2,2,4,4,4,3,2,1,0,9,11,19,49,72,76,71,50,30,-23,-52,-56,-56,-55,-54,-52,-49,-46,-44,-43,-43,-43,-42,-35,-16,-1,2,3,2,3,4,4,4,3,2,2,3,10,10,31,63,74,77,61,39,26,4,-43,-56,-55,-55,-54,-52,-49,-46,-44,-43,-43,-43,-43,-40,-28,-8,2,2,2,4,4,4,3,3,3,6,7,10,15,44,70,75,71,50,31,22,15,-39,-56,-55,-55,-54,-51,-49,-46,-44,-43,-43,-43,-43,-42,-35,-13,1,3,3,4,3,4,6,6,7,9,10,9,26,57,72,76,61,39,26,19,16,-39,-55,-55,-54,-53,-51,-49,-46,-44,-43,-43,-43,-43,-43,-38,-19,1,5,2,3,3,5,12,12,12,12,12,11,36,64,74,71,49,31,22,17,16,-29,-44,-45,-45,-44,-42,-40,-39,-37,-36,-36,-36,-36,-36,-32,-15,5,9,4,1,2,4,12,15,14,13,13,16,45,66,76,59,38,26,19,16,16,-11,-27,-29,-28,-28,-28,-27,-26,-25,-24,-24,-24,-24,-24,-19,-3,14,15,8,0,1,2,9,15,15,14,14,21,51,69,69,48,30,22,17,16,15,0,-10,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-7,6,18,19,12,2,0,1,5,13,15,15,14,26,52,73,54,37,25,19,17,16,13,7,4,4,3,3,1,1,0,-1,-1,-1,-1,-1,-1,3,12,19,21,16,6,0,0,3,9,15,15,15,26,45,63,42,29,21,17,16,15,11,9,12,13,12,11,10,8,6,5,4,4,4,4,6,10,16,20,22,20,11,2,0,1,5,13,15,15,19,28,36,34,24,19,16,16,13,9,9,13,15,14,13,12,10,8,6,5,5,5,5,8,12,16,20,23,22,15,6,0,0,3,9,15,16,14,17,17,26,20,17,16,15,11,7,7,12,15,15,14,12,10,8,6,5,5,5,7,10,12,16,21,24,23,19,9,1,0,1,6,13,15,13,15,13,18,18,16,15,13,9,5,5,10,14,15,14,12,10,8,6,5,5,6,8,11,12,16,21,24,24,21,12,3,0,0,3,10,13,13,15,12,12,16,15,14,11,7,4,4,7,13,15,14,13,10,8,6,5,5,7,10,11,12,16,21,25,25,22,14,6,1,0,1,7,10,13,14,11,11,15,14,12,9,6,4,4,6,11,14,14,13,11,8,6,5,5,9,11,12,12,16,21,26,27,22,15,8,2,0,0,4,7,14,14,11,11,14,14,11,7,6,3,3,5,9,13,15,13,11,8,6,5,7,10,11,12,12,15,22,28,28,23,15,9,4,0,0,2,5,14,17,17,11,13,12,9,7,7,3,3,5,8,12,14,13,11,8,6,5,8,11,12,12,12,15,22,29,29,23,15,9,5,1,0,2,4,14,19,22,10,13,11,7,7,9,5,3,5,7,10,14,14,11,8,6,7,10,12,12,12,12,15,22,30,31,24,15,9,6,2,0,1,3,12,16,22,8,13,9,7,8,13,9,4,5,7,9,11,13,12,8,6,8,11,12,13,12,12,14,22,31,33,24,14,9,6,3,1,1,3,11,12,21,6,11,8,8,9,16,12,5,5,7,8,9,13,12,7,6,9,11,13,13,12,12,13,21,32,35,25,13,9,7,4,1,1,3,10,10,14,7,10,8,8,9,17,15,8,5,8,9,8,11,9,7,8,9,12,14,13,12,11,13,20,34,40,24,12,9,7,4,2,1,3,9,9,8,7,9,9,7,9,18,17,11,5,10,10,8,8,7,8,10,9,12,15,13,12,11,13,17,33,41,21,11,9,7,5,2,2,3,9,8,7,7,8,6,5,9,17,18,13,8,11,11,8,8,8,10,11,9,12,14,13,12,12,12,12,21,27,17,12,10,8,5,4,3,4,10,8,8,7,7,3,4,9,15,18,15,11,12,12,9,8,10,11,11,11,12,13,13,13,13,10,8,8,11,13,12,11,9,7,6,4,5,10,8,8,7,5,1,2,8,14,17,14,12,12,13,10,9,11,11,11,11,12,13,13,13,12,9,7,7,11,15,13,12,11,9,7,5,7,9,9,8,8,3,0,0,8,13,15,13,12,13,13,10,10,11,12,12,11,11,12,13,12,10,8,7,8,14,18,15,12,13,11,8,6,8,9,10,7,7,3,0,0,8,12,14,13,12,14,13,10,10,11,12,12,11,11,12,12,10,9,8,8,11,15,18,15,13,13,11,8,7,10,9,11,7,6,3,1,0,8,10,13,13,14,16,13,9,9,11,10,11,12,12,13,11,9,8,8,11,14,16,17,16,14,13,10,8,9,11,8,9,6,6,4,3,2,8,10,12,13,14,16,14,10,9,11,10,10,13,13,12,9,7,8,10,14,15,16,15,14,15,13,11,9,11,12,6,6,4,5,5,4,5,8,10,12,12,13,16,15,10,8,11,10,9,13,13,10,6,5,8,13,17,16,16,13,13,16,13,11,10,12,13,6,7,6,7,6,5,6,9,10,12,12,13,16,15,11,8,11,8,8,12,12,8,5,4,10,17,22,24,21,14,12,15,14,12,11,13,14,6,10,10,9,6,6,7,10,11,11,12,14,15,14,11,9,10,7,7,10,10,7,4,4,11,22,29,33,29,16,13,15,16,14,12,13,14,6,10,11,10,7,7,7,10,11,12,13,14,16,14,11,9,9,7,6,8,9,8,4,4,12,23,32,37,27,16,14,16,17,15,13,14,15,7,9,10,10,9,7,8,10,11,12,14,15,16,15,13,9,9,7,6,7,8,8,4,4,12,23,34,40,23,17,16,18,18,16,15,15,16,8,8,9,10,10,8,8,10,11,12,14,16,17,16,13,8,8,7,6,7,8,8,5,5,13,22,30,35,21,17,17,18,18,17,16,16,16,7,7,7,9,10,9,9,9,10,11,14,16,17,15,12,7,7,7,7,8,9,9,7,7,13,19,24,26,20,18,18,19,19,19,17,15,16,7,7,7,8,9,9,9,9,10,11,14,16,17,14,10,6,6,8,8,9,10,9,8,8,12,17,21,21,19,18,19,19,20,20,18,15,15,7,6,7,8,8,9,11,10,9,11,13,16,16,12,8,6,7,10,9,9,10,10,10,9,11,16,19,19,17,17,20,20,20,20,18,15,15,8,6,7,8,8,10,17,10,9,11,13,16,15,11,8,6,8,10,11,12,11,11,12,10,11,15,17,18,17,16,20,21,21,20,18,15,15,9,7,6,10,10,14,24,11,9,11,13,14,13,9,8,7,9,11,13,14,13,13,13,12,11,13,15,17,17,17,19,20,20,20,19,17,16],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
