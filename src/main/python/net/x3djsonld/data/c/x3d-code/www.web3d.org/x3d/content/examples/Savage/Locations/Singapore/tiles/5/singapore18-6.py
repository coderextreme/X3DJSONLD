###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    Shape(
      appearance=Appearance(
        material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
        texture=ImageTexture(url=['../../images/5/singapore18-6.jpg'],repeatS=False,repeatT=False)),
      geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.3694340860038916,103.67601420477412,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=36,xSpacing=4.103724E-4,zDimension=23,zSpacing=3.96896E-4,height=[14,19,24,29,34,40,44,42,37,32,28,23,19,15,13,12,14,17,20,22,24,24,22,21,22,23,22,21,20,17,14,11,10,10,12,14,12,19,26,34,41,46,49,46,39,33,29,25,21,18,16,15,15,18,23,25,26,26,23,22,23,23,23,23,21,18,14,12,11,11,12,14,11,20,30,40,48,52,52,47,40,34,30,26,23,21,18,16,16,18,24,27,27,26,23,22,23,24,24,24,21,18,16,13,11,11,12,13,13,22,33,43,51,53,51,46,39,34,29,26,22,20,17,15,14,16,21,24,25,23,21,20,21,22,23,23,21,19,17,15,12,11,11,12,15,25,35,45,51,52,48,43,38,32,28,24,21,17,15,13,11,13,17,19,20,19,17,16,17,18,20,21,20,19,18,16,13,11,10,10,19,27,37,45,50,49,43,39,35,31,26,22,19,15,13,11,10,11,14,15,16,15,14,13,14,16,17,17,17,17,16,15,13,11,10,11,22,29,37,45,48,45,38,33,30,27,24,20,17,13,10,9,9,9,11,12,13,12,12,12,12,13,13,13,13,13,13,12,11,10,11,12,22,29,36,42,45,41,34,29,25,23,20,17,14,12,10,9,9,10,10,11,12,12,12,12,11,11,11,10,10,10,10,9,9,10,12,14,19,26,33,38,41,37,31,25,21,18,17,15,13,11,10,10,10,10,11,11,12,13,13,12,10,9,8,8,8,8,8,7,8,9,12,16,16,23,30,34,34,31,26,22,20,17,15,13,12,11,11,11,11,11,11,11,12,13,14,14,10,8,7,7,7,7,7,8,8,10,12,15,14,21,26,28,27,23,20,19,20,19,16,13,11,11,12,13,12,12,12,12,13,14,16,15,11,8,7,7,7,7,8,9,9,10,11,13,12,17,21,21,20,17,15,17,21,21,17,14,12,11,13,14,13,13,13,13,14,15,16,14,10,8,7,7,7,7,9,11,12,12,12,13,9,12,14,14,13,12,12,16,21,22,20,16,12,12,14,14,13,13,14,14,15,15,14,12,9,8,7,7,7,8,10,13,14,14,14,15,7,8,9,9,9,8,9,13,19,21,21,17,12,12,14,15,13,12,13,14,14,14,12,10,8,8,7,7,7,8,11,13,14,14,14,14,6,6,6,7,7,7,8,11,15,19,20,17,12,11,14,14,12,11,12,12,13,12,9,8,8,8,9,9,8,8,10,11,12,12,12,12,6,5,5,5,5,6,7,9,12,15,17,15,11,11,13,13,12,11,11,11,11,11,8,7,9,10,11,12,10,10,10,10,10,10,10,10,6,5,5,5,5,5,6,8,10,11,12,11,9,10,12,13,12,11,11,10,10,9,8,9,12,14,16,16,14,12,10,10,10,10,10,10,6,5,5,5,5,5,6,7,9,9,8,8,8,10,12,13,12,11,10,10,9,8,9,11,16,19,21,21,18,15,12,10,10,11,11,11,6,6,5,5,5,5,6,7,8,8,8,8,8,10,13,14,12,11,9,8,8,9,11,14,20,24,26,25,22,18,15,13,13,13,13,13,7,6,6,6,6,6,6,7,8,8,8,9,10,12,14,13,11,10,8,8,7,9,12,17,23,27,29,28,25,22,19,17,16,15,15,15,7,7,7,7,7,7,7,7,7,8,10,12,13,14,14,12,9,8,8,8,7,8,13,18,23,27,29,29,28,25,23,21,19,18,16,16,7,7,7,8,8,8,7,7,7,9,12,14,16,16,14,11,8,7,8,9,8,9,13,17,21,25,27,29,28,27,25,23,21,19,17,17,8,8,8,8,9,8,8,8,8,9,11,14,16,16,14,11,9,9,11,12,11,12,14,16,17,20,24,26,26,26,24,22,20,19,18,18],
        geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])))])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
