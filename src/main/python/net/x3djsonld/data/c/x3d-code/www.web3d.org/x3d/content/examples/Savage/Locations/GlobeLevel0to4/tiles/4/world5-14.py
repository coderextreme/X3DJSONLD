###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    Shape(
      appearance=Appearance(
        material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0,0.05,0)),
        texture=ImageTexture(url=['../../images/4/world5-14.jpg'],repeatS=False,repeatT=False)),
      geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(-33.79166499031936,134.95834272103156,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=22,xSpacing=1.0714287,zDimension=24,zSpacing=0.48913044,height=[-109,-64,-33,-27,-37,158,58,74,53,67,85,116,178,341,670,594,-200,-4779,-4852,-4940,-4645,-4613,-88,-75,130,-17,17,194,72,30,75,71,87,115,204,267,428,426,7,-4023,-4828,-4881,-4874,-4610,-102,38,106,30,248,200,64,57,49,84,90,129,245,233,641,935,191,-1899,-4864,-4765,-4693,-4877,-32,41,123,166,547,335,103,46,66,78,96,135,181,278,622,555,230,-103,-4891,-4831,-4838,-388,-7,101,150,208,260,336,257,105,60,76,89,214,257,234,388,395,42,12,-3806,-4808,-4825,-282,40,161,118,170,198,197,292,239,82,77,120,220,246,217,397,412,648,68,-2791,-4699,-4773,-4759,110,126,123,129,68,143,110,273,204,78,148,216,196,193,535,680,1358,572,-1465,-4645,-4987,-4660,140,167,157,142,61,95,32,215,255,81,99,186,234,164,367,643,585,640,-701,-4619,-4737,-4080,143,152,160,126,90,172,39,86,161,102,117,355,139,139,217,291,762,1056,-230,-4483,-4904,-1538,208,180,133,103,112,443,36,122,96,192,103,107,119,131,163,659,710,885,-54,-4593,-4806,-4811,165,161,124,5,48,105,45,175,93,170,111,130,122,138,155,246,613,399,16,-4576,-4790,-4865,175,195,119,23,3,8,41,146,79,127,124,144,134,170,160,236,520,1028,3,-3945,-4849,-4403,222,150,221,-15,6,32,41,101,88,182,147,168,149,162,179,209,367,315,435,-3793,-448,-4781,233,129,53,-15,25,20,37,131,124,161,202,190,180,201,198,228,354,647,29,-2780,-3691,-4678,294,176,80,14,7,47,44,62,123,197,217,246,218,253,252,284,372,115,-1,-2897,-4659,-4798,342,170,78,10,19,41,48,100,161,213,230,256,292,312,261,284,338,436,-5,-4651,-4786,-4716,312,222,73,34,30,30,50,122,144,166,228,297,372,420,324,330,435,420,-39,-4607,-4726,-4602,426,218,108,58,36,38,65,103,201,172,258,343,440,395,328,319,421,169,-127,-4665,-4581,-4657,405,223,128,81,45,76,58,125,120,232,291,361,420,524,467,211,132,124,-74,-4484,-4697,-4611,396,278,167,109,66,102,70,106,157,159,349,403,550,757,429,189,238,55,-9,-4078,-4627,-4484,403,281,202,125,81,78,121,150,212,228,273,323,647,755,405,188,624,-36,-19,-4229,-4397,-2885,546,336,247,158,106,123,137,127,200,180,219,353,484,341,336,116,65,-48,-999,-3936,-3627,-2072,741,518,312,191,152,188,161,112,197,226,231,304,343,248,224,195,22,-28,-637,-1202,-2021,-1811,725,548,321,196,170,190,167,108,204,210,240,379,333,227,179,112,-1,-78,-568,-914,-1814,-1946],
        geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(0.0,0.0,-6378137.0),geoSystem=['GDC'])))])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
