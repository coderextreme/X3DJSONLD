###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    Shape(
      appearance=Appearance(
        material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
        texture=ImageTexture(url=['../../images/5/singapore5-16.jpg'],repeatS=False,repeatT=False)),
      geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.25592182508997,103.81964454606431,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=36,xSpacing=4.103724E-4,zDimension=23,zSpacing=3.96896E-4,height=[12,9,9,9,9,11,12,12,12,12,11,8,4,0,4,11,12,13,17,24,29,32,31,29,27,24,23,22,18,14,10,6,5,5,5,5,10,8,8,9,10,11,14,17,16,15,11,5,1,0,5,14,15,12,17,25,30,31,29,23,21,22,23,24,20,13,7,5,5,4,4,3,9,9,10,10,10,10,13,17,15,13,10,6,4,1,5,12,13,12,17,24,27,26,23,19,18,19,21,20,16,9,5,5,5,5,5,7,9,12,12,12,10,8,12,16,13,10,9,8,7,5,5,7,9,11,16,23,23,21,18,15,15,16,17,15,12,6,3,5,6,6,8,12,10,11,11,11,10,9,13,16,14,12,12,12,11,9,8,9,10,11,14,17,18,16,14,13,13,14,14,12,10,7,6,8,10,13,16,18,10,11,9,9,10,12,14,15,15,14,15,17,15,13,11,12,12,10,11,11,12,12,12,12,12,12,12,10,9,8,10,12,15,21,26,26,14,14,12,10,11,12,13,14,15,16,12,7,7,8,9,11,11,10,10,10,10,11,11,12,12,12,12,11,10,10,13,16,21,26,29,30,18,20,16,13,12,12,13,13,16,18,8,-5,-4,1,5,10,10,9,9,10,10,11,11,11,12,13,13,13,13,12,15,20,26,29,31,34,19,20,16,13,12,12,12,13,16,17,9,-2,-1,2,6,10,10,9,9,10,11,11,11,11,12,12,12,12,12,11,12,17,23,27,31,35,19,18,16,13,11,10,12,15,16,15,11,6,5,4,7,10,10,9,9,10,11,11,11,11,10,9,9,10,9,7,8,11,17,26,32,35,17,16,14,13,12,11,11,13,12,11,10,8,7,6,8,9,10,10,10,11,11,11,11,11,10,9,8,8,9,8,8,11,15,22,27,28,14,13,12,12,12,13,11,9,7,6,7,8,8,7,8,8,10,12,12,12,12,12,11,11,11,9,8,8,8,9,11,13,15,18,19,19,13,12,11,11,11,12,10,8,7,6,7,9,7,4,5,7,9,11,12,13,13,12,12,12,10,9,8,10,11,12,13,15,15,15,15,14,13,10,10,9,9,9,8,7,7,7,8,10,6,1,2,6,8,10,11,12,12,12,12,11,10,9,10,13,15,15,15,16,16,13,12,12,13,10,9,8,7,7,7,7,7,7,8,9,4,-1,0,5,7,9,10,9,10,11,11,10,10,10,11,13,14,15,16,16,15,12,11,11,13,11,9,7,5,4,5,6,6,6,7,8,2,-4,-1,4,6,7,7,6,6,7,7,8,8,9,10,11,12,15,16,15,13,11,11,11,12,10,8,7,5,4,5,7,7,6,6,4,0,-2,0,4,6,6,5,3,3,4,6,7,8,9,10,10,11,15,16,15,13,12,11,13,10,7,7,7,6,5,6,8,9,9,6,1,0,1,3,6,6,4,2,0,1,5,7,8,9,11,11,9,11,16,19,17,15,14,15,17,8,6,6,7,6,5,6,7,8,9,5,0,1,4,5,6,5,3,1,0,2,6,8,9,10,11,11,10,11,15,18,17,16,15,16,19,6,6,6,6,6,5,6,6,7,7,3,0,1,5,5,5,4,3,3,3,5,8,10,11,11,12,12,12,12,14,15,15,16,16,16,17,4,6,6,6,6,6,6,6,6,6,3,1,2,4,5,5,5,5,5,6,7,9,10,10,11,11,11,12,12,12,13,14,14,16,17,15,6,8,8,8,6,5,5,6,6,6,4,4,4,4,6,8,8,7,7,8,8,8,8,7,7,7,8,10,11,12,12,12,13,14,15,13,7,10,9,8,7,6,6,6,6,6,6,7,6,4,7,10,10,9,9,9,9,8,7,5,5,5,6,9,11,12,12,12,12,14,15,14],
        geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])))])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
