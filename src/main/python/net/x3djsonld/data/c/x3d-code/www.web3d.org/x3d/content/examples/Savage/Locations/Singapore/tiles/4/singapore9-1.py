###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_91',geoSystem=['GDC'],position=(1.3781657983818856,103.63292510238706,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.3781657983818856,103.63292510238706,0.0),range=4101.627,child1Url=['../../tiles/5/singapore18-2.x3d'],child2Url=['../../tiles/5/singapore18-3.x3d'],child3Url=['../../tiles/5/singapore19-2.x3d'],child4Url=['../../tiles/5/singapore19-3.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore9-1.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.3694340860038916,103.61856206825804,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[11,8,7,10,10,10,10,10,9,11,11,12,11,9,7,6,7,11,16,16,12,8,6,4,4,3,4,5,5,6,7,8,8,8,8,7,6,15,10,6,9,10,9,10,10,9,11,12,11,11,9,7,6,6,9,14,16,12,8,5,4,3,3,4,5,5,6,7,8,8,8,8,6,6,21,13,6,8,10,9,10,10,9,11,11,10,10,9,7,6,6,7,11,15,13,7,5,4,3,4,5,5,6,7,8,8,8,8,7,6,6,27,17,7,8,10,10,11,10,10,10,10,9,10,8,6,5,5,6,9,13,14,9,5,3,4,4,5,5,6,7,8,7,8,8,6,6,6,32,21,8,7,10,11,11,10,11,10,9,9,9,8,6,5,5,6,7,11,14,12,7,4,5,5,5,6,7,8,8,7,8,7,6,6,6,33,22,8,7,9,10,11,11,11,10,9,9,9,7,6,5,5,6,6,9,13,14,8,5,5,5,5,6,7,8,7,7,8,6,6,6,6,30,20,9,7,8,10,11,11,11,11,10,10,9,7,6,5,6,6,6,7,12,15,11,6,5,5,6,7,8,8,7,7,7,6,6,6,6,26,18,10,8,8,10,10,10,11,10,10,10,8,7,6,5,6,6,5,6,10,14,12,8,5,6,7,7,8,7,7,6,6,6,6,6,6,20,15,11,9,8,9,10,10,10,10,10,9,7,7,6,6,6,5,5,6,8,13,14,10,6,6,7,8,7,7,7,6,6,6,6,7,7,17,14,12,9,9,9,9,10,10,10,9,8,7,6,6,6,5,5,5,6,7,13,15,12,8,7,8,8,7,7,6,6,6,6,6,7,7,16,15,11,9,10,10,9,9,10,11,9,7,6,6,6,6,5,6,6,6,7,12,16,14,11,9,8,7,7,7,6,6,6,6,7,7,7,16,14,11,8,10,9,8,9,9,10,9,7,6,6,6,6,6,6,6,6,8,13,17,16,13,10,8,7,7,6,6,6,6,6,7,7,6,16,11,9,7,9,7,7,8,8,10,10,8,7,7,7,6,7,7,7,7,10,15,17,17,14,10,7,7,7,6,6,6,7,7,7,6,6,15,9,8,7,9,7,7,8,8,9,9,8,7,8,7,6,7,7,7,7,10,15,17,17,14,10,7,6,6,6,6,6,7,7,7,6,5,13,8,7,8,9,7,7,7,7,8,8,7,8,9,7,7,8,7,7,8,9,13,14,14,12,9,6,6,6,6,6,7,7,7,7,5,4,11,8,8,9,9,7,6,7,7,7,7,7,8,9,8,7,7,7,8,8,8,11,12,11,10,7,6,5,5,6,6,7,7,7,7,4,4,9,10,9,10,9,8,6,7,7,7,7,8,8,9,8,8,6,6,9,8,8,9,9,9,8,7,5,5,5,6,7,7,7,7,7,4,4,9,11,11,11,9,9,7,7,8,7,8,8,8,9,8,8,6,7,10,9,8,9,8,7,7,7,5,5,5,6,7,7,7,7,7,4,5,11,11,13,14,11,11,9,8,8,8,9,9,9,8,8,8,7,8,11,10,9,9,8,6,6,7,6,5,6,6,7,7,7,7,7,6,7,11,11,14,15,12,12,10,9,8,8,10,9,9,8,8,8,8,9,11,10,10,9,7,5,6,8,6,6,6,7,7,7,7,7,7,7,9,10,9,13,15,12,12,12,12,10,10,10,10,10,9,10,10,9,8,8,9,10,9,6,5,6,9,8,7,7,7,6,7,7,7,7,7,9,10,8,12,15,12,12,14,14,12,12,11,10,10,9,11,13,11,8,6,7,9,8,6,4,6,10,10,9,7,7,6,7,7,6,6,7,8,9,8,12,13,12,12,13,13,13,14,12,11,10,11,14,14,12,9,7,6,7,7,5,3,7,11,10,9,7,7,6,7,6,6,5,6,7,8,8,11,11,12,11,12,13,14,14,13,12,11,13,16,15,13,11,9,6,6,7,6,4,7,11,11,9,7,6,6,7,5,5,5,5,6,10,8,11,10,11,10,13,14,14,14,13,14,15,16,18,16,13,12,10,9,8,9,8,6,8,12,14,11,8,6,7,6,5,4,4,5,6,11,8,11,10,11,10,13,14,13,13,13,15,17,18,19,17,14,13,12,11,10,10,10,8,9,13,17,14,9,5,6,4,4,4,4,5,6,10,9,10,11,11,11,13,13,12,13,14,17,18,17,18,17,15,14,13,12,11,10,10,9,10,15,21,18,10,5,4,3,3,3,4,6,7,10,9,11,12,11,12,13,12,12,13,15,17,18,17,18,18,16,14,13,12,11,10,9,9,10,17,23,21,10,4,2,3,3,3,5,7,8,11,11,12,13,11,11,12,11,12,13,14,16,17,17,18,18,16,14,12,11,10,10,8,8,10,17,23,20,10,4,2,3,3,4,6,8,9,12,12,12,13,11,11,11,10,12,13,14,15,16,17,18,19,16,14,11,10,10,10,8,7,10,16,21,19,9,5,3,4,4,5,7,9,9,14,13,13,13,11,12,9,9,12,14,15,14,15,16,18,19,17,15,12,10,10,10,8,7,10,14,18,16,9,6,7,6,6,6,8,9,9,15,14,14,13,11,13,9,8,12,14,15,14,15,15,17,17,17,15,12,10,10,10,9,8,9,11,15,14,9,8,9,7,7,7,9,9,9,14,13,13,13,11,14,11,9,10,13,15,15,14,13,13,14,16,14,11,9,11,10,9,8,8,10,13,14,10,9,10,8,8,8,9,9,8,14,12,13,12,12,14,13,9,9,11,14,14,13,11,10,11,13,12,9,9,11,10,9,8,8,9,12,13,11,10,10,9,8,9,9,8,8,14,12,13,11,11,14,14,10,9,9,11,13,12,11,10,10,10,10,9,9,10,9,8,9,8,8,11,14,11,10,10,8,8,9,9,8,7,14,12,13,11,11,14,15,11,10,9,9,11,11,11,10,9,9,8,8,9,10,9,9,9,8,9,11,14,12,10,10,8,9,9,8,7,7,14,12,14,11,11,14,14,11,9,9,8,9,10,11,10,8,9,8,7,9,9,9,10,10,10,10,11,13,13,11,10,9,9,9,8,7,6,13,11,14,11,11,13,13,10,9,9,8,8,9,10,10,8,9,8,7,8,9,9,11,12,11,11,11,13,14,12,11,10,10,8,7,6,5,12,10,13,11,11,12,12,10,10,9,9,9,10,10,9,8,9,9,8,8,9,10,13,13,12,12,11,12,14,13,12,10,9,8,7,5,5,10,10,12,11,11,11,11,10,10,9,9,10,11,10,10,8,8,9,10,9,9,10,14,15,14,12,10,11,14,15,13,10,9,8,6,5,5,9,10,11,12,12,12,11,10,9,9,10,10,11,11,11,9,8,9,11,10,9,10,14,15,14,12,11,10,14,16,14,10,9,7,5,6,7,9,10,10,12,12,12,12,11,9,10,10,10,11,12,12,10,9,9,11,11,10,11,13,15,13,13,12,12,13,16,14,10,8,6,5,7,8,10,11,11,11,11,12,11,12,9,11,11,11,11,12,13,10,9,10,12,12,12,12,13,14,13,14,13,13,13,16,15,12,9,8,6,8,9,11,12,12,11,9,10,11,12,11,12,12,11,10,12,13,10,9,11,13,13,13,13,13,13,13,15,14,14,14,16,16,14,10,10,9,10,10],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
