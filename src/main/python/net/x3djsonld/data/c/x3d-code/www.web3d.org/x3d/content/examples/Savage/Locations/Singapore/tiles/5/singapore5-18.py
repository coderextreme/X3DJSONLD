###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    Shape(
      appearance=Appearance(
        material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
        texture=ImageTexture(url=['../../images/5/singapore5-18.jpg'],repeatS=False,repeatT=False)),
      geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.25592182508997,103.84837061432235,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=36,xSpacing=4.103724E-4,zDimension=23,zSpacing=3.96896E-4,height=[17,17,17,17,17,17,18,20,22,24,25,26,27,28,28,28,28,28,27,27,26,27,28,30,34,37,39,40,41,41,41,41,41,41,41,35,30,30,30,30,30,29,29,28,28,28,27,27,27,28,28,28,28,27,26,26,26,27,30,34,38,40,40,40,41,41,41,41,41,41,41,35,32,32,32,32,32,31,31,30,29,28,28,28,28,28,28,28,27,27,26,27,28,31,34,37,39,40,41,41,41,41,41,41,41,41,41,35,32,33,33,33,32,32,31,30,29,29,28,28,28,28,28,27,26,26,26,27,30,34,38,40,40,41,41,41,41,41,41,41,41,41,41,35,33,33,34,33,33,32,31,30,30,29,28,28,28,28,27,27,26,27,28,31,34,37,39,40,41,41,41,41,41,41,41,41,41,41,41,35,34,34,34,34,33,32,31,31,30,29,28,28,28,27,26,26,26,27,30,34,38,40,40,41,41,41,41,41,41,41,41,41,41,41,41,35,36,37,37,35,34,33,32,31,30,29,28,28,27,27,26,26,28,31,34,37,40,40,41,41,41,41,41,41,41,41,41,41,41,39,36,29,39,41,40,38,34,33,32,31,30,29,28,27,26,26,26,27,30,34,38,40,40,41,41,41,41,41,41,41,41,41,41,41,41,38,31,22,43,45,44,40,36,34,33,31,29,28,26,26,26,26,28,30,34,37,40,40,41,41,41,41,41,41,41,41,41,41,41,39,36,31,22,13,48,50,47,42,38,36,34,31,29,26,25,25,25,27,30,34,38,40,40,41,41,41,41,41,41,41,41,41,41,41,41,38,31,22,13,6,48,51,49,44,39,34,31,28,26,25,25,25,27,30,33,36,39,40,41,41,41,41,41,41,41,41,41,41,41,39,36,31,22,13,6,2,46,52,52,47,41,33,26,23,21,23,25,27,29,33,37,39,40,41,41,41,41,41,41,41,41,41,41,41,41,37,30,22,13,6,2,1,42,47,47,41,34,27,22,20,21,23,25,29,33,36,39,40,40,41,41,41,41,41,41,41,41,41,41,39,36,30,22,13,6,2,1,1,36,40,39,31,23,20,19,20,22,24,26,30,36,39,40,41,41,41,41,41,41,41,41,41,41,41,41,37,30,22,12,5,2,1,1,1,30,32,30,23,16,15,16,17,19,22,26,31,36,39,40,41,41,41,41,41,41,41,41,41,41,39,37,31,22,13,6,2,1,1,1,1,27,26,22,17,13,12,13,13,12,19,27,31,33,36,39,41,41,41,41,41,41,41,41,41,41,37,30,22,12,6,3,1,1,1,1,1,25,22,16,13,10,10,11,11,11,18,26,29,30,33,36,38,40,41,41,41,41,41,41,39,37,31,22,13,6,2,1,1,1,1,1,1,23,20,14,11,9,9,9,11,15,19,23,25,26,28,31,35,39,41,41,41,41,41,41,37,30,22,12,6,3,1,1,1,1,1,1,1,20,17,12,10,9,9,10,14,18,20,21,22,23,24,26,30,35,38,40,41,41,39,37,31,22,13,6,2,1,1,1,1,1,1,1,1,13,12,9,9,9,10,12,16,19,20,20,20,20,20,21,24,29,33,39,41,41,37,31,22,12,6,3,1,1,1,1,1,1,1,1,1,9,9,8,8,9,10,12,16,19,19,17,17,17,17,17,19,22,28,35,37,37,31,22,13,5,1,1,1,1,1,1,1,1,1,1,1,7,8,8,8,9,10,12,14,16,16,14,14,15,15,15,16,17,21,27,29,28,22,13,6,2,1,1,1,1,1,1,1,1,1,1,1,6,7,8,8,9,10,12,13,14,13,12,12,13,13,14,14,14,17,20,20,19,13,6,2,1,1,1,1,1,1,1,1,1,1,1,1],
        geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])))])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
