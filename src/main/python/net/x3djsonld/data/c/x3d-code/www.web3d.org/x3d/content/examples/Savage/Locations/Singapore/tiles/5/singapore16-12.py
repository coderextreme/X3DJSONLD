###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    Shape(
      appearance=Appearance(
        material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
        texture=ImageTexture(url=['../../images/5/singapore16-12.jpg'],repeatS=False,repeatT=False)),
      geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.3519706612479037,103.76219240954823,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=36,xSpacing=4.103724E-4,zDimension=23,zSpacing=3.96896E-4,height=[44,49,53,57,62,68,78,89,96,101,98,94,87,80,73,65,58,52,48,48,49,52,59,69,79,91,104,119,128,123,117,108,103,111,121,139,38,43,45,47,54,61,69,79,87,93,94,93,87,79,71,63,56,52,49,49,50,53,60,69,79,92,106,126,137,134,130,121,115,121,128,142,34,38,39,40,47,55,63,71,79,86,90,93,87,78,69,60,53,50,48,48,51,54,61,69,79,92,108,130,145,144,143,135,129,133,137,147,32,37,38,38,46,55,63,69,78,86,90,92,86,75,66,55,50,48,47,47,50,55,63,69,79,92,107,131,149,153,156,149,143,146,150,158,32,37,39,40,49,58,64,71,79,87,89,89,82,72,62,51,47,46,46,47,51,57,65,70,80,94,110,134,152,160,165,160,156,158,161,167,31,37,42,47,54,63,68,73,80,86,85,82,75,66,58,50,46,46,46,49,54,60,67,71,81,100,118,139,156,166,172,167,165,167,170,172,31,37,45,52,60,67,72,75,79,83,80,74,68,61,55,48,45,45,46,51,56,62,68,72,83,105,125,144,159,169,175,170,168,170,172,172,31,36,45,54,62,69,72,74,77,79,75,69,63,56,51,46,44,44,45,51,56,62,68,73,85,107,126,144,158,168,174,169,165,166,166,165,31,35,44,54,61,68,70,71,72,73,69,64,59,52,48,44,43,42,45,51,56,61,67,74,86,105,122,140,153,163,169,163,159,158,157,153,31,34,44,54,59,64,65,65,65,66,63,59,54,48,45,42,41,42,45,51,56,61,66,71,81,98,113,130,143,153,159,155,152,150,147,139,32,34,43,52,55,57,57,58,58,58,56,53,49,45,42,40,40,42,45,50,55,60,64,67,75,89,103,119,132,143,150,149,147,143,137,125,34,36,42,48,48,49,50,51,52,53,51,48,44,41,38,37,38,41,44,48,52,57,60,62,69,84,98,113,126,138,147,147,145,138,129,116,35,38,40,41,41,41,43,46,47,48,47,45,41,37,35,35,36,39,42,46,50,54,57,59,67,83,98,112,125,138,147,147,145,135,123,108,36,38,37,36,35,35,37,40,42,43,43,41,38,35,33,33,35,39,43,47,51,54,58,61,70,88,103,115,126,138,146,146,143,132,119,103,36,37,34,32,31,30,32,35,37,38,39,39,36,33,32,31,34,40,46,51,55,57,62,67,77,95,110,120,129,138,145,144,140,128,115,99,37,36,33,30,29,28,29,31,33,35,37,37,35,32,31,31,34,41,47,54,58,62,68,73,84,101,114,125,133,140,144,141,136,124,112,97,37,36,33,30,28,26,27,29,32,34,35,36,35,32,31,32,35,42,49,56,63,68,75,81,91,105,117,128,137,141,143,138,132,120,108,95,37,35,32,30,28,26,27,29,32,34,35,35,34,31,32,34,38,44,51,60,68,75,82,87,95,105,116,129,138,140,140,135,128,116,104,92,35,33,30,28,27,25,27,29,33,35,36,35,33,31,32,37,41,46,54,64,73,81,87,90,94,101,111,125,135,135,134,129,123,112,100,87,32,30,28,27,25,25,27,31,35,38,37,35,33,31,34,40,44,49,56,65,73,80,85,85,87,90,98,112,122,121,120,117,113,106,97,85,28,26,26,25,25,25,28,34,38,41,39,34,32,32,35,41,46,50,56,63,69,74,76,75,74,74,79,93,102,102,101,100,99,98,95,83,26,25,25,25,25,25,29,35,39,42,39,33,31,31,34,40,44,47,52,58,62,65,66,67,66,65,69,79,85,86,86,86,87,89,89,81,27,27,28,28,27,27,30,35,39,42,39,32,29,29,32,35,38,40,44,51,55,55,57,60,63,65,68,72,74,74,75,76,77,80,81,77],
        geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])))])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
