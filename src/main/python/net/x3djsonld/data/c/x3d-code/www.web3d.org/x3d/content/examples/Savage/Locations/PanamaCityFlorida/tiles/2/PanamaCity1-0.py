###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.0',
  Scene=Scene(
    children=[
    Group(
      children=[
      LOD(center=(54112.28,0.0,108224.56),range=[108224.56],
        children=[
        Group(
          children=[
          Inline(url=['../../tiles/3/PanamaCity1-0.x3d']),
          Inline(url=['../../tiles/3/PanamaCity1-1.x3d'])]),
        Group(
          children=[
          Transform(translation=(0.0,0.0,72149.71),
            children=[
            Shape(
              appearance=Appearance(
                material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0,0.05,0)),
                texture=ImageTexture(url=['../../images/2/PanamaCity1-0.jpg'],repeatS=False,repeatT=False)),
              geometry=ElevationGrid(xDimension=22,xSpacing=5153.551,zDimension=21,zSpacing=3607.4854,height=[-26,-28,-26,-34,-29,-28,-30,-35,-31,-30,-29,-27,-32,-32,-28,-32,-31,-31,-32,-33,-32,-32,-30,-30,-32,-23,-28,-32,-35,-38,-37,-38,-37,-33,-31,-32,-31,-33,-32,-32,-32,-35,-33,-33,-28,-29,-25,-28,-32,-39,-52,-89,-77,-52,-48,-45,-41,-42,-40,-41,-39,-36,-36,-34,-32,-34,-28,-29,-29,-33,-44,-88,-95,-95,-91,-79,-59,-50,-50,-45,-48,-45,-45,-43,-39,-37,-35,-36,-31,-29,-33,-44,-62,-100,-106,-108,-103,-96,-75,-70,-51,-48,-46,-46,-48,-48,-42,-40,-38,-38,-33,-33,-42,-51,-68,-122,-124,-120,-113,-106,-100,-90,-59,-56,-52,-49,-50,-49,-45,-41,-42,-41,-33,-43,-53,-56,-74,-150,-138,-130,-124,-117,-109,-101,-75,-77,-72,-60,-54,-51,-50,-49,-46,-45,-45,-55,-60,-72,-145,-155,-145,-139,-132,-123,-116,-108,-100,-86,-77,-73,-66,-67,-61,-55,-50,-50,-56,-86,-102,-142,-162,-160,-152,-147,-139,-130,-123,-115,-107,-97,-80,-77,-73,-72,-66,-62,-54,-53,-79,-86,-143,-169,-170,-168,-159,-153,-146,-137,-129,-121,-108,-94,-79,-77,-73,-71,-70,-64,-56,-55,-77,-91,-170,-184,-180,-176,-166,-159,-152,-143,-135,-126,-116,-109,-101,-85,-74,-75,-74,-67,-57,-54,-91,-140,-188,-194,-187,-182,-175,-166,-159,-150,-142,-133,-122,-113,-95,-94,-94,-83,-78,-70,-58,-55,-145,-189,-232,-203,-195,-188,-182,-172,-166,-158,-150,-141,-133,-124,-116,-92,-100,-93,-83,-73,-60,-57,-180,-218,-224,-210,-204,-197,-188,-181,-174,-166,-157,-151,-141,-133,-125,-118,-109,-101,-89,-77,-60,-56,-209,-235,-226,-219,-213,-206,-200,-191,-183,-176,-166,-160,-149,-141,-133,-125,-116,-107,-95,-81,-59,-56,-233,-241,-236,-229,-224,-219,-211,-203,-194,-186,-176,-168,-158,-150,-141,-132,-122,-113,-101,-74,-59,-58,-250,-249,-249,-245,-240,-232,-225,-218,-209,-199,-189,-180,-168,-160,-151,-139,-128,-118,-109,-73,-62,-61,-264,-267,-266,-263,-257,-249,-241,-233,-225,-215,-204,-192,-182,-171,-161,-148,-136,-124,-114,-76,-65,-64,-283,-288,-289,-288,-280,-269,-261,-253,-244,-233,-221,-209,-198,-185,-172,-159,-146,-134,-122,-119,-88,-86,-309,-316,-319,-319,-311,-303,-290,-280,-268,-255,-240,-227,-213,-199,-186,-171,-157,-144,-131,-120,-107,-104,-310,-317,-319,-320,-312,-304,-290,-281,-268,-255,-241,-228,-214,-200,-186,-172,-158,-144,-131,-120,-107,-104]))])])])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
