###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_26',geoSystem=['GDC'],position=(1.25592182508997,103.77655544367725,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.25592182508997,103.77655544367725,0.0),range=4101.627,child1Url=['../../tiles/5/singapore4-12.x3d'],child2Url=['../../tiles/5/singapore4-13.x3d'],child3Url=['../../tiles/5/singapore5-12.x3d'],child4Url=['../../tiles/5/singapore5-13.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore2-6.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.247190112711976,103.76219240954823,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[-9,-11,-12,-13,-14,-15,-18,-15,-6,-3,-3,-3,-4,-4,-4,-3,3,11,8,8,8,8,7,5,4,6,9,11,10,4,-1,-4,-2,0,0,0,0,-3,-5,-6,-7,-8,-9,-10,-9,-5,-3,-3,-4,-4,-5,-5,-5,3,11,9,8,8,8,8,6,4,4,7,10,11,8,1,-3,-2,0,0,0,0,-1,-2,-4,-5,-5,-6,-6,-6,-4,-4,-4,-5,-5,-6,-6,-6,4,10,9,9,8,8,8,7,5,4,6,9,10,10,5,-2,-1,0,0,0,1,-1,-2,-4,-5,-5,-6,-6,-5,-4,-4,-5,-5,-6,-6,-7,-6,3,8,9,9,8,8,8,8,6,4,4,7,10,11,8,0,0,0,0,1,1,-1,-2,-4,-5,-5,-6,-6,-5,-5,-5,-6,-6,-7,-7,-7,-4,4,7,9,9,9,8,8,8,7,5,4,6,9,10,10,3,0,0,0,1,1,-1,-3,-4,-5,-6,-6,-6,-5,-5,-5,-6,-6,-7,-7,-6,-1,5,9,9,9,9,8,8,8,8,6,4,4,7,10,11,5,0,0,1,1,1,-1,-3,-4,-5,-6,-6,-6,-5,-5,-6,-6,-7,-7,-7,-4,1,7,10,9,9,9,9,8,8,8,7,5,4,6,9,10,7,1,0,1,1,1,-1,-3,-5,-5,-6,-6,-6,-6,-5,-6,-6,-7,-7,-6,-2,3,7,10,10,9,9,9,8,8,8,8,6,4,4,7,9,6,2,1,1,1,2,-1,-3,-5,-6,-6,-6,-6,-6,-6,-6,-7,-7,-7,-4,0,5,8,9,11,10,10,10,9,8,8,8,7,5,4,6,8,4,2,1,1,2,2,-2,-4,-5,-6,-6,-6,-6,-6,-6,-6,-7,-7,-6,-2,3,6,8,9,11,10,10,10,10,8,8,8,8,6,4,4,5,3,1,1,1,2,3,-2,-5,-6,-6,-6,-6,-6,-6,-6,-7,-7,-7,-4,0,5,6,7,9,10,11,11,11,10,9,8,8,8,7,5,4,4,2,1,1,2,3,4,-3,-6,-6,-6,-6,-6,-6,-6,-6,-7,-7,-6,-2,3,6,6,7,8,10,11,11,11,10,10,8,8,8,8,6,4,3,1,1,1,2,4,4,-4,-6,-7,-7,-7,-7,-7,-7,-7,-7,-7,-4,0,5,6,6,7,8,10,11,12,11,11,10,9,8,8,8,7,5,2,1,1,2,3,4,4,-6,-7,-7,-7,-7,-7,-7,-7,-7,-7,-6,-2,3,6,6,6,7,8,9,11,11,11,11,10,10,8,8,8,8,6,2,1,1,2,4,4,4,-8,-9,-8,-8,-8,-8,-8,-7,-7,-8,-5,0,5,6,6,6,7,8,9,11,11,12,11,11,10,9,8,8,8,7,3,1,2,3,4,4,5,-10,-10,-9,-9,-9,-8,-8,-7,-7,-6,-2,3,6,6,6,6,7,8,9,10,11,11,11,11,10,10,9,8,8,6,2,1,2,4,4,5,5,-13,-11,-11,-10,-10,-9,-9,-8,-8,-5,0,5,6,6,6,6,7,8,9,10,11,11,12,11,11,10,9,8,8,5,2,1,3,4,4,5,6,-14,-12,-11,-11,-10,-10,-9,-9,-6,-2,3,6,6,6,6,6,7,8,9,10,10,11,11,11,11,10,10,9,7,3,2,2,4,4,5,6,6,-15,-14,-12,-12,-11,-11,-10,-9,-5,0,5,6,6,6,6,6,7,8,9,10,10,11,11,12,11,11,10,9,7,2,2,3,4,4,5,6,6,-14,-14,-13,-12,-12,-11,-11,-9,-3,2,6,6,6,6,6,6,7,8,9,9,10,10,11,11,11,11,10,10,7,2,2,4,4,5,6,6,6,-11,-15,-14,-13,-13,-12,-12,-9,-1,5,6,6,6,6,6,6,7,8,9,9,10,10,11,11,12,11,11,10,8,3,3,4,4,5,6,6,7,-6,-14,-15,-14,-13,-13,-12,-10,-2,6,6,6,6,6,6,6,7,8,9,9,9,10,10,11,11,11,11,10,8,4,4,4,5,6,6,7,7,-1,-11,-15,-15,-14,-14,-13,-11,-3,6,6,6,6,6,6,6,7,8,8,9,9,10,10,11,11,11,11,11,9,5,4,4,5,6,6,7,7,3,-6,-13,-15,-15,-14,-14,-12,-7,2,6,6,6,6,6,6,7,8,8,9,9,9,10,10,11,11,11,11,10,6,4,5,6,6,7,7,7,8,-1,-11,-16,-15,-15,-14,-13,-10,0,6,6,6,6,6,6,7,7,8,8,9,9,10,10,11,11,11,11,11,8,5,5,6,6,7,7,7,10,3,-6,-14,-15,-15,-14,-14,-12,-5,3,6,6,6,6,6,7,7,8,8,9,9,10,10,10,11,11,11,11,8,5,6,6,7,7,7,7,13,8,-1,-11,-16,-15,-15,-14,-13,-10,0,6,6,6,6,6,6,7,7,8,8,9,9,10,10,11,11,11,11,8,4,7,7,7,7,7,7,14,10,3,-6,-14,-15,-15,-14,-13,-10,1,10,10,10,10,10,10,11,11,11,11,9,9,10,10,10,11,11,11,7,1,5,10,11,11,11,11,15,13,8,-1,-11,-16,-15,-15,-14,-10,4,16,16,16,16,16,16,16,16,16,16,10,9,10,10,10,11,11,11,6,-1,3,13,17,17,16,16,15,14,10,3,-6,-14,-15,-15,-12,-4,9,17,17,17,17,17,17,17,17,17,16,11,10,10,10,10,11,11,10,6,0,0,10,17,18,18,17,12,15,13,8,-1,-11,-15,-15,-10,2,15,18,18,18,18,18,18,18,18,17,14,11,11,10,10,10,11,12,9,6,1,-2,3,15,19,19,18,9,14,14,10,3,-5,-9,-8,-2,9,17,18,18,18,18,18,18,18,17,16,12,11,11,10,9,9,13,14,10,6,3,-1,0,10,18,19,19,5,12,15,13,7,1,0,1,7,15,18,18,18,18,18,18,18,18,17,14,11,11,10,9,8,8,16,17,13,7,5,0,-1,3,15,19,19,2,8,15,14,11,8,7,8,13,17,18,18,18,18,18,18,18,17,16,12,11,11,10,9,8,8,17,18,15,10,6,3,-1,0,10,18,18,1,4,12,16,15,15,14,15,16,18,18,18,18,18,18,18,18,17,14,11,11,10,9,8,7,9,16,19,17,13,7,5,0,-1,3,15,19,0,2,9,16,17,17,17,17,17,18,18,18,18,18,18,18,17,16,12,11,11,10,9,8,7,11,15,18,18,15,10,6,3,-1,0,10,16,0,1,5,14,18,18,18,18,18,18,18,18,18,18,18,18,17,14,11,11,10,9,8,7,7,13,15,16,18,17,13,8,5,0,-1,3,10,0,0,5,14,18,18,18,18,18,18,18,18,18,18,18,17,16,12,11,11,10,9,8,7,7,14,15,16,18,18,15,10,6,3,-1,0,3,0,0,6,14,17,18,18,18,18,18,18,18,18,18,18,17,14,11,11,10,9,8,7,7,7,13,15,15,17,18,17,13,8,5,0,-1,-1,0,0,6,15,16,18,18,18,18,18,18,18,18,18,17,16,12,11,11,10,9,8,7,7,7,12,15,15,16,18,18,16,10,6,3,-1,-2,0,0,6,13,16,17,18,18,18,18,18,18,18,18,17,14,12,11,10,9,9,7,7,7,7,11,13,15,15,17,18,17,13,8,5,0,0,0,1,6,12,15,16,18,18,18,18,18,18,18,17,16,12,11,11,10,9,8,7,7,7,8,10,12,14,15,16,18,18,16,10,6,3,1,0,1,6,10,13,16,17,18,18,18,18,18,18,17,14,12,11,10,9,9,7,7,7,7,8,10,11,13,14,15,17,18,17,13,8,4,3,0,2,5,9,12,15,16,18,18,18,18,18,17,16,12,11,11,10,9,8,7,7,7,7,9,10,11,12,14,15,16,18,18,16,10,6,5],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
