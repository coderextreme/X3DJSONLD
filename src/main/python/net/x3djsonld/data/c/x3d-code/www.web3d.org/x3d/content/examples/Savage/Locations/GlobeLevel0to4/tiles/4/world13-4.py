###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    Shape(
      appearance=Appearance(
        material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0,0.05,0)),
        texture=ImageTexture(url=['../../images/4/world13-4.jpg'],repeatS=False,repeatT=False)),
      geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(56.20833769188965,-90.04166398449098,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=22,xSpacing=1.0714287,zDimension=24,zSpacing=0.48913044,height=[211,179,134,106,117,127,108,20,-49,-34,-25,93,195,196,272,354,476,464,563,527,598,578,152,135,127,112,101,166,63,22,-36,-93,8,138,210,246,338,380,428,483,482,541,556,602,127,98,83,119,67,33,26,6,-48,-99,-37,-30,164,280,302,375,389,411,424,541,590,579,126,121,75,58,13,-41,-38,-27,-81,-97,-2,-50,31,229,283,321,427,429,479,535,456,477,177,111,39,-27,-62,-93,-86,-64,-111,-113,-2,-29,-53,63,232,235,325,348,401,419,224,337,81,44,-20,-47,-72,-141,-137,-101,-128,-118,-3,-62,-46,226,248,314,281,372,338,300,172,281,9,-70,-37,-46,-81,-112,-171,-137,-137,-86,-92,-43,-65,198,217,359,326,353,313,373,220,231,-50,-77,-58,-101,-105,-103,-172,-160,-136,-128,-71,-93,-38,157,215,252,282,344,298,217,257,266,-69,-81,-156,-155,-127,-104,-165,-152,-147,-120,-105,-67,4,147,175,213,282,220,298,284,95,132,-141,-97,-161,-175,-162,-122,-158,-160,-157,-111,-168,0,75,128,161,233,242,230,238,143,95,-12,-125,-130,-177,-189,-166,-114,-139,-199,-134,11,-89,-17,72,137,163,173,171,204,222,78,-33,-207,-145,-145,-183,-203,-179,-137,-107,-206,-128,-46,-113,-54,16,143,156,161,230,198,202,42,-36,-93,-152,-139,-183,-198,-195,-171,-151,-195,-127,-132,-147,-87,3,75,133,161,152,184,179,3,-6,-5,-134,-145,-179,-194,-174,-180,-175,-159,-115,-121,-152,-70,2,139,182,290,308,309,311,4,-33,-10,-131,-150,-169,-220,-224,-195,-190,-183,-161,-75,-151,-91,250,160,300,394,450,389,-11,-12,-252,-406,-121,-136,-174,-198,-208,-192,-197,-213,-182,-75,-86,-106,19,281,324,462,530,155,-216,-261,-271,-273,-146,-151,-140,-134,-164,-148,-75,-81,-212,-139,23,-66,168,325,422,269,363,-155,-324,-253,-144,-35,-116,-171,-117,-113,-126,-128,-14,3,-97,-194,-263,-191,-31,-276,-223,-2,-344,-349,-38,-61,339,404,-66,-137,-111,-75,-79,-21,-131,-129,-217,-232,-248,-119,-127,-229,-148,-400,-309,-95,215,189,660,-2,-2,-81,-149,2,-47,125,-32,-89,1,-11,-169,-196,1,-339,-244,-221,-125,0,225,493,-31,189,9,2,-21,-29,20,78,27,21,-8,-35,-171,-94,-145,-118,-74,-19,-1,144,315,334,293,579,94,161,101,-42,41,71,305,309,-77,-317,-213,-26,290,73,114,1,301,154,171,206,518,574,287,284,156,9,15,14,305,-172,-329,-193,-79,-40,14,50,7,38,152,132,112,366,451,472,265,270,112,8,13,4,9,-181,-348,-194,-67,-40,1,37,3,35,154,152,150,351,365,401],
        geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(0.0,0.0,-6378137.0),geoSystem=['GDC'])))])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
