###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_814',geoSystem=['GDC'],position=(1.3607023736258976,104.00636398974156,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.3607023736258976,104.00636398974156,0.0),range=4101.627,child1Url=['../../tiles/5/singapore16-28.x3d'],child2Url=['../../tiles/5/singapore16-29.x3d'],child3Url=['../../tiles/5/singapore17-28.x3d'],child4Url=['../../tiles/5/singapore17-29.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore8-14.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.3519706612479037,103.99200095561254,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[10,9,5,5,8,6,6,8,10,9,11,8,10,11,9,6,3,7,11,12,9,9,8,7,8,7,8,8,8,7,5,8,10,11,11,6,3,10,9,5,6,7,5,5,9,12,11,10,8,10,10,9,6,4,7,14,13,6,8,8,7,8,7,7,8,8,6,4,7,9,9,8,4,3,9,9,7,7,6,4,4,9,13,12,9,8,9,9,8,7,6,7,14,12,4,8,8,8,8,7,7,8,8,5,4,6,7,7,7,4,3,9,9,8,8,5,4,5,8,12,11,8,8,9,8,7,7,8,7,12,12,4,9,7,8,8,7,8,9,7,5,5,5,5,6,7,5,4,9,9,9,8,5,5,5,6,10,11,7,8,9,6,6,8,9,7,9,12,5,9,7,8,8,8,9,9,7,5,5,5,5,6,7,6,6,10,12,11,8,6,6,5,5,9,11,6,7,8,6,5,9,10,7,8,11,4,8,7,9,8,8,9,8,6,6,4,4,5,6,6,5,5,12,14,12,7,7,7,5,5,9,11,6,7,8,6,5,9,10,7,7,10,5,7,7,9,9,8,8,7,6,6,3,4,6,7,6,5,4,14,14,11,6,7,7,5,5,8,11,7,7,8,6,6,9,10,8,8,8,6,8,8,8,8,8,7,5,5,5,1,5,7,8,8,4,2,16,14,10,6,7,7,5,5,8,10,9,8,9,7,7,9,9,9,8,7,8,9,9,8,8,7,5,5,5,4,1,6,8,8,9,4,0,15,13,10,8,8,8,6,6,7,9,9,9,10,8,8,8,8,9,11,9,10,8,9,9,8,7,5,5,5,4,2,5,7,8,9,4,0,15,12,11,10,9,9,8,7,6,8,9,9,10,10,8,7,8,8,11,11,11,8,9,10,9,7,5,5,6,6,4,4,7,8,8,4,2,18,13,11,9,8,9,9,8,6,6,8,9,10,9,9,7,8,6,8,11,10,8,9,11,10,8,6,6,7,7,8,5,6,7,7,5,3,21,15,10,9,8,9,9,8,7,6,8,10,9,9,9,8,9,5,5,9,8,8,9,11,10,9,8,8,7,9,11,5,5,6,7,6,4,22,16,10,9,8,8,8,8,7,6,8,9,8,8,9,9,10,6,6,9,8,8,9,10,9,8,6,7,6,9,11,7,6,6,6,5,4,19,16,12,11,7,7,8,9,7,5,6,7,7,8,10,10,10,8,10,10,10,9,8,8,7,7,4,5,6,9,10,8,7,6,5,4,3,15,18,17,11,7,7,8,10,6,5,6,6,6,8,10,10,11,9,11,13,13,8,7,7,7,6,2,4,6,8,9,8,7,6,5,3,2,10,20,22,10,7,7,7,9,5,5,6,6,5,7,10,10,12,8,11,15,16,8,5,6,7,6,3,4,6,7,9,6,6,6,6,3,2,8,18,21,10,7,7,7,8,4,5,7,7,5,7,10,9,12,8,10,15,16,7,4,7,7,6,5,5,6,8,9,6,5,7,6,3,2,10,13,14,9,7,7,7,6,3,6,8,9,7,8,9,6,9,7,9,14,14,7,4,8,8,8,8,7,5,10,9,5,5,7,6,5,4,13,11,8,8,8,6,6,6,4,6,8,10,9,8,8,4,7,6,10,12,13,9,5,8,7,9,9,8,4,9,9,5,5,6,6,6,5,15,10,5,6,8,6,4,5,6,6,7,9,9,8,8,4,5,5,11,10,14,12,8,7,5,8,8,8,4,7,9,6,6,5,5,6,6,17,10,4,4,7,6,4,5,7,7,6,8,9,8,8,5,5,5,11,10,14,13,8,7,5,7,7,8,5,6,7,7,6,4,5,6,7,18,9,3,4,6,7,5,5,7,7,7,7,10,8,9,8,6,6,10,10,12,13,6,9,7,7,6,8,8,7,3,6,7,4,5,7,7,16,8,2,5,6,7,6,5,8,7,7,7,9,8,8,9,8,8,9,9,10,10,3,9,8,7,6,8,12,8,3,6,7,4,6,7,8,13,6,2,6,7,8,7,6,8,8,7,8,8,8,6,8,10,11,9,7,8,6,0,9,8,7,8,8,14,12,5,6,7,5,7,8,8,11,6,3,7,8,7,6,6,8,9,6,7,7,8,6,7,11,14,9,6,7,1,-3,6,7,7,8,8,14,12,5,6,7,6,7,8,8,10,10,7,8,8,6,5,6,7,9,6,6,6,8,7,7,11,16,12,8,9,-2,-7,2,6,6,8,7,10,7,5,6,8,8,7,8,8,8,11,10,9,10,7,5,6,6,8,6,6,6,7,7,7,11,16,13,10,10,-2,-6,0,5,6,8,7,8,5,6,7,8,8,8,8,8,5,9,10,12,15,10,6,6,6,7,7,6,5,6,7,7,10,13,13,10,8,3,0,1,5,5,7,7,8,6,9,8,7,7,7,8,8,3,8,9,12,15,10,5,6,6,6,7,6,5,6,7,7,8,11,12,7,6,7,4,3,5,5,7,7,8,6,10,8,6,6,7,8,8,3,7,8,10,8,5,4,6,5,5,6,5,6,6,7,6,8,10,10,0,5,8,8,6,5,6,8,8,7,3,8,8,4,5,7,8,8,4,6,8,9,5,2,3,5,5,4,6,5,6,6,8,6,7,9,9,-1,5,8,10,7,5,7,9,9,6,3,6,8,4,5,7,8,8,7,7,9,10,6,3,2,3,4,5,6,6,7,5,8,7,7,9,8,3,7,7,6,6,5,4,8,10,7,5,8,8,6,5,7,7,7,9,7,9,12,8,4,1,2,4,6,6,6,7,5,8,7,6,9,8,7,8,6,4,4,5,4,8,9,7,7,8,7,6,6,6,6,7,9,8,9,11,9,4,2,3,4,6,6,6,7,5,8,8,6,9,8,8,9,4,4,4,5,6,7,5,6,7,8,7,2,7,6,5,7,8,8,8,10,9,4,2,4,5,5,6,6,7,5,7,8,6,9,8,8,9,4,5,4,5,7,7,5,7,8,10,7,0,6,4,3,6,7,8,8,8,8,5,5,5,6,5,6,6,7,6,6,8,6,8,8,9,10,9,8,7,4,5,8,12,11,10,16,9,-2,3,1,1,4,5,7,7,7,8,7,6,7,6,4,5,6,7,6,6,7,6,7,8,9,11,11,10,8,4,4,9,16,14,13,19,8,-6,-1,0,1,4,3,4,5,7,8,7,7,6,5,4,5,6,7,6,6,8,6,7,7,9,11,8,7,7,5,5,9,14,13,15,15,3,-15,-10,-2,3,6,2,3,4,8,9,7,7,6,5,4,5,5,6,6,7,8,8,7,7,8,10,6,3,6,7,7,8,11,12,15,9,-2,-21,-18,-4,7,13,3,4,7,9,9,7,8,7,6,5,6,6,5,7,7,9,8,7,8,8,8,6,1,5,9,9,8,9,10,11,3,-8,-21,-24,-6,17,27,5,7,9,10,9,7,8,9,8,6,7,6,5,7,8,10,7,7,8,8,6,6,1,4,11,11,8,7,8,7,-1,-12,-20,-27,-7,25,38,7,10,11,11,9,8,8,8,8,6,6,6,5,7,8,9,6,7,8,9,5,5,1,2,11,11,8,7,7,5,-4,-13,-20,-28,-5,27,37,8,12,12,11,9,8,8,8,8,6,6,6,6,8,8,8,6,7,8,10,5,4,1,1,10,10,7,7,7,4,-4,-13,-20,-25,0,26,32],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
