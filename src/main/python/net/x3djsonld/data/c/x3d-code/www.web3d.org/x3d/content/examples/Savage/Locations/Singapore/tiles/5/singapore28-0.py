###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    Shape(
      appearance=Appearance(
        material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
        texture=ImageTexture(url=['../../images/5/singapore28-0.jpg'],repeatS=False,repeatT=False)),
      geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.4567512097838313,103.589836,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=36,xSpacing=4.103724E-4,zDimension=23,zSpacing=3.96896E-4,height=[24,23,23,23,24,27,28,29,28,26,25,23,22,20,18,16,15,14,14,14,14,15,17,20,24,30,37,43,46,44,41,38,33,27,22,24,23,23,23,23,25,28,29,30,28,26,24,22,21,20,19,17,16,16,16,17,18,18,20,24,29,35,41,45,48,47,45,42,37,29,24,25,23,22,22,23,26,30,30,30,28,26,24,21,21,21,20,19,19,19,20,22,22,21,23,29,34,40,45,47,50,51,51,47,41,33,25,26,22,22,22,23,26,28,29,29,28,26,25,24,25,27,26,24,23,23,24,26,26,24,26,32,37,41,44,47,51,54,54,49,42,34,28,30,21,21,22,23,25,27,28,28,27,26,26,28,31,33,31,28,27,27,28,30,29,28,30,36,39,41,44,47,52,56,56,50,43,36,31,34,20,21,23,24,27,29,29,29,28,26,26,28,31,34,33,32,31,32,33,34,34,32,34,39,41,41,43,48,53,56,57,50,42,38,35,39,20,21,24,26,29,31,31,31,29,26,26,28,30,33,34,34,35,36,37,38,38,37,39,42,43,42,43,49,54,56,56,48,40,39,40,44,19,21,24,28,31,33,33,31,29,26,26,27,29,32,34,36,37,38,39,39,39,38,39,40,42,40,41,44,48,51,50,44,38,39,40,42,18,20,25,30,33,35,34,30,28,25,25,26,28,31,34,37,39,40,40,40,39,38,38,38,39,38,38,40,41,43,43,39,36,37,39,40,19,20,25,29,33,36,34,31,28,25,25,26,28,31,34,36,38,39,39,39,38,38,38,38,38,38,37,37,37,38,38,35,34,35,37,38,20,22,25,28,32,36,35,32,28,25,25,26,28,31,33,35,37,37,37,37,37,38,39,39,39,38,37,35,34,34,33,32,32,33,35,35,22,23,25,27,30,33,32,30,28,25,26,29,30,31,33,35,36,35,35,35,36,38,40,42,42,41,39,36,34,33,32,31,30,31,32,32,23,24,25,25,28,30,29,27,26,25,28,33,33,33,34,36,36,34,34,34,35,38,41,45,46,44,42,39,36,34,32,30,29,29,29,29,25,25,25,24,26,27,26,25,25,25,28,33,34,32,33,34,34,34,34,34,36,39,43,47,48,47,44,42,39,37,35,33,30,29,29,28,26,26,25,24,24,25,24,23,24,24,27,31,32,30,30,31,32,32,34,36,39,42,45,48,48,48,46,45,43,42,40,37,34,31,29,28,27,27,26,24,24,24,23,22,23,24,25,28,29,28,28,29,31,34,37,39,42,46,49,52,52,50,48,47,46,44,43,40,37,34,32,31,28,27,26,27,26,25,24,21,22,22,23,25,25,26,27,28,32,37,40,41,46,51,55,59,59,55,51,48,46,45,43,41,39,39,38,36,28,27,28,29,28,26,24,22,21,21,22,23,23,24,26,28,32,37,39,40,45,53,58,61,60,53,48,45,42,42,41,41,41,44,45,42,29,29,30,30,29,28,25,23,22,21,21,22,22,23,25,28,31,34,36,36,40,51,56,58,56,49,43,38,35,36,37,40,44,48,52,51,29,29,30,31,30,29,27,24,22,22,21,22,22,22,23,26,29,31,32,32,36,46,51,53,50,44,38,33,31,32,34,38,43,50,55,54,27,29,30,31,31,29,28,25,24,23,22,22,21,21,22,24,25,25,27,28,32,40,44,45,43,38,33,32,31,31,32,35,40,46,51,53,26,27,29,30,31,30,28,27,26,25,24,22,21,20,20,21,21,21,23,25,29,35,39,38,36,33,31,31,31,30,30,33,37,42,47,49,24,26,29,31,31,30,29,27,27,27,25,23,21,19,19,19,19,20,21,24,28,33,35,34,33,30,29,29,30,30,30,32,35,38,41,43],
        geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])))])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
