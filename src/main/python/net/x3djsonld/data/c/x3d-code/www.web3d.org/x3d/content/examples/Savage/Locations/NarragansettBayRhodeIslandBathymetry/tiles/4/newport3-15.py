###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoLOD(center=(41.28285414509822,-71.10970089138983,0.0),range=6150.345,child1Url=['../../tiles/5/newport6-30.x3d'],child2Url=['../../tiles/5/newport6-31.x3d'],child3Url=['../../tiles/5/newport7-30.x3d'],child4Url=['../../tiles/5/newport7-31.x3d'],
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(41.5,-71.5,0),geoSystem=['GDC']),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0,0.05,0)),
            texture=ImageTexture(url=['../../images/4/newport3-15.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(41.25866420964133,-71.13168471846758,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=55,xSpacing=8.142158E-4,zDimension=52,zSpacing=9.486249E-4,height=[-42,-42,-42,-42,-42,-42,-42,-42,-42,-42,-42,-42,-42,-42,-42,-42,-42,-42,-42,-42,-42,-42,-42,-42,-42,-42,-42,-42,-42,-42,-42,-42,-42,-42,-42,-41,-39,-37,-36,-35,-34,-33,-32,0,0,0,0,0,0,0,0,0,0,0,0,-41,-42,-42,-42,-42,-42,-42,-42,-42,-42,-42,-42,-42,-42,-42,-42,-42,-42,-42,-42,-42,-42,-42,-42,-42,-42,-42,-42,-42,-42,-42,-42,-42,-42,-42,-41,-39,-37,-36,-35,-34,-33,-32,0,0,0,0,0,0,0,0,0,0,0,0,-41,-42,-42,-42,-42,-42,-42,-42,-42,-42,-42,-42,-42,-42,-42,-42,-42,-42,-42,-42,-42,-42,-42,-42,-42,-42,-42,-42,-42,-42,-41,-42,-42,-42,-41,-41,-39,-37,-36,-35,-34,-33,-32,0,0,0,0,0,0,0,0,0,0,0,0,-41,-41,-41,-42,-42,-42,-42,-42,-42,-42,-42,-42,-42,-42,-42,-42,-42,-42,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-42,-42,-42,-41,-41,-39,-37,-36,-35,-34,-33,-32,0,0,0,0,0,0,0,0,0,0,0,0,-41,-41,-41,-41,-42,-42,-42,-42,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-42,-42,-41,-41,-41,-39,-37,-36,-35,-34,-33,-32,0,0,0,0,0,0,0,0,0,0,0,0,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-42,-41,-41,-41,-41,-39,-37,-36,-35,-34,-33,-32,0,0,0,0,0,0,0,0,0,0,0,0,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-42,-41,-41,-41,-41,-39,-38,-36,-35,-34,-33,-32,0,0,0,0,0,0,0,0,0,0,0,0,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-40,-39,-38,-36,-35,-34,-33,-32,0,0,0,0,0,0,0,0,0,0,0,0,-40,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-40,-40,-39,-38,-36,-35,-34,-33,-32,0,0,0,0,0,0,0,0,0,0,0,0,-40,-40,-40,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-41,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-41,-41,-41,-41,-40,-40,-40,-39,-38,-36,-35,-34,-33,-32,0,0,0,0,0,0,0,0,0,0,0,0,-40,-40,-40,-40,-40,-41,-41,-41,-41,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-41,-41,-41,-41,-40,-40,-40,-39,-38,-36,-35,-34,-33,-32,0,0,0,0,0,0,0,0,0,0,0,0,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-41,-41,-41,-40,-40,-40,-40,-39,-38,-36,-35,-34,-33,-32,0,0,0,0,0,0,0,0,0,0,0,0,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-40,-41,-41,-41,-40,-40,-40,-40,-39,-39,-38,-36,-35,-34,-33,-32,0,0,0,0,0,0,0,0,0,0,0,0,-39,-39,-39,-39,-39,-39,-39,-39,-39,-39,-39,-40,-40,-40,-40,-40,-40,-40,-40,-40,-39,-39,-39,-39,-40,-40,-40,-41,-41,-41,-40,-40,-40,-40,-39,-39,-39,-38,-36,-35,-34,-33,-32,0,0,0,0,0,0,0,0,0,0,0,0,-39,-39,-39,-39,-39,-39,-39,-39,-39,-39,-39,-39,-39,-39,-39,-39,-39,-39,-39,-39,-39,-39,-39,-39,-40,-40,-40,-40,-40,-41,-40,-40,-40,-40,-39,-39,-39,-38,-36,-35,-34,-33,-32,0,0,0,0,0,0,0,0,0,0,0,0,-39,-39,-39,-39,-39,-39,-39,-39,-39,-39,-39,-39,-39,-39,-39,-39,-39,-39,-39,-39,-39,-39,-39,-39,-40,-40,-40,-40,-40,-40,-40,-40,-40,-39,-39,-39,-39,-38,-36,-35,-34,-33,-32,0,0,0,0,0,0,0,0,0,0,0,0,-38,-38,-38,-38,-39,-39,-39,-39,-39,-39,-39,-39,-39,-39,-39,-39,-39,-39,-39,-39,-39,-39,-39,-39,-39,-40,-40,-40,-40,-40,-40,-40,-39,-39,-39,-39,-38,-38,-36,-35,-34,-33,-31,0,0,0,0,0,0,0,0,0,0,0,0,-38,-38,-38,-38,-38,-38,-38,-38,-38,-38,-38,-38,-38,-38,-38,-39,-39,-39,-39,-39,-39,-39,-39,-39,-39,-40,-40,-40,-40,-40,-40,-40,-39,-39,-39,-38,-38,-38,-36,-35,-33,-32,-31,0,0,0,0,0,0,0,0,0,0,0,0,-38,-38,-38,-38,-38,-38,-38,-38,-38,-38,-38,-38,-38,-38,-38,-38,-38,-38,-38,-38,-38,-38,-39,-39,-39,-39,-39,-39,-39,-40,-40,-39,-39,-39,-39,-38,-38,-38,-36,-35,-33,-32,-31,0,0,0,0,0,0,0,0,0,0,0,0,-37,-37,-37,-37,-37,-37,-37,-37,-37,-37,-37,-37,-37,-37,-37,-37,-37,-37,-37,-38,-38,-38,-38,-38,-38,-39,-39,-39,-39,-39,-39,-39,-39,-39,-38,-38,-38,-38,-37,-35,-33,-32,-31,0,0,0,0,0,0,0,0,0,0,0,0,-37,-37,-37,-37,-37,-37,-37,-37,-37,-37,-37,-37,-37,-37,-37,-37,-37,-37,-37,-37,-37,-38,-38,-38,-38,-38,-38,-39,-39,-39,-39,-39,-39,-38,-38,-38,-38,-37,-37,-35,-33,-32,-31,0,0,0,0,0,0,0,0,0,0,0,0,-37,-37,-37,-37,-37,-37,-38,-38,-38,-38,-38,-37,-37,-37,-37,-37,-37,-37,-37,-37,-37,-38,-38,-38,-38,-38,-38,-38,-38,-38,-39,-39,-39,-38,-38,-38,-37,-37,-36,-35,-33,-32,-31,0,0,0,0,0,0,0,0,0,0,0,0,-36,-36,-36,-37,-37,-37,-37,-37,-37,-37,-37,-37,-37,-37,-37,-37,-37,-37,-37,-37,-37,-37,-37,-38,-38,-38,-38,-38,-38,-38,-38,-38,-38,-38,-38,-38,-37,-37,-36,-35,-33,-32,-31,0,0,0,0,0,0,0,0,0,0,0,0,-36,-36,-36,-36,-36,-37,-37,-37,-37,-37,-37,-37,-37,-37,-37,-37,-37,-37,-37,-37,-37,-37,-37,-37,-37,-37,-38,-38,-38,-38,-38,-38,-38,-38,-38,-37,-37,-37,-36,-35,-33,-32,-31,0,0,0,0,0,0,0,0,0,0,0,0,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,-37,-37,-37,-37,-37,-37,-37,-38,-38,-37,-38,-38,-38,-37,-37,-37,-37,-36,-35,-33,-32,-31,0,0,0,0,0,0,0,0,0,0,0,0,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,-37,-37,-37,-37,-37,-37,-37,-37,-38,-38,-37,-37,-37,-36,-36,-35,-33,-32,-31,0,0,0,0,0,0,0,0,0,0,0,0,-35,-35,-35,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,-37,-37,-37,-37,-37,-37,-37,-37,-37,-37,-36,-36,-35,-33,-32,-31,0,0,0,0,0,0,0,0,0,0,0,0,-35,-35,-35,-35,-35,-35,-35,-35,-35,-35,-35,-35,-35,-35,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,-37,-37,-37,-37,-37,-37,-36,-36,-36,-35,-33,-32,-31,0,0,0,0,0,0,0,0,0,0,0,0,-35,-35,-35,-35,-35,-35,-35,-35,-35,-35,-35,-35,-35,-35,-35,-35,-35,-35,-35,-35,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,-37,-36,-37,-37,-36,-36,-36,-36,-34,-34,-32,-31,0,0,0,0,0,0,0,0,0,0,0,0,-34,-34,-34,-34,-34,-34,-34,-34,-34,-34,-34,-34,-34,-34,-34,-34,-34,-34,-35,-35,-35,-35,-35,-35,-35,-35,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,-35,-34,-34,-32,-31,0,0,0,0,0,0,0,0,0,0,0,0,-34,-34,-34,-34,-34,-34,-34,-34,-34,-34,-34,-34,-34,-34,-34,-34,-34,-34,-34,-34,-34,-34,-34,-35,-35,-35,-35,-35,-35,-36,-36,-35,-36,-36,-36,-36,-36,-36,-35,-34,-34,-32,-31,0,0,0,0,0,0,0,0,0,0,0,0,-33,-33,-33,-33,-33,-33,-34,-34,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-34,-34,-34,-34,-35,-35,-35,-35,-35,-35,-35,-36,-36,-36,-36,-35,-35,-35,-34,-32,-31,0,0,0,0,0,0,0,0,0,0,0,0,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-34,-34,-34,-34,-35,-35,-35,-35,-35,-35,-35,-35,-36,-35,-35,-35,-35,-34,-32,-31,0,0,0,0,0,0,0,0,0,0,0,0,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-34,-34,-34,-34,-34,-35,-35,-35,-35,-35,-35,-35,-35,-35,-34,-33,-32,-31,0,0,0,0,0,0,0,0,0,0,0,0,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-32,-32,-32,-32,-32,-32,-32,-32,-33,-33,-33,-33,-33,-34,-34,-34,-34,-35,-35,-35,-35,-35,-35,-35,-35,-34,-33,-32,-31,0,0,0,0,0,0,0,0,0,0,0,0,-32,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-33,-33,-33,-33,-34,-34,-34,-34,-33,-34,-34,-34,-34,-35,-35,-35,-34,-34,-33,-32,-31,0,0,0,0,0,0,0,0,0,0,0,0,-32,-32,-32,-32,-32,-33,-33,-33,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-31,-31,-31,-32,-32,-32,-33,-33,-33,-34,-34,-34,-34,-32,-34,-34,-34,-34,-34,-34,-34,-34,-33,-32,-31,0,0,0,0,0,0,0,0,0,0,0,0,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-31,-31,-31,-31,-31,-31,-31,-32,-32,-32,-33,-33,-33,-33,-34,-33,-32,-32,-34,-34,-34,-34,-34,-34,-34,-33,-32,-31,0,0,0,0,0,0,0,0,0,0,0,0,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-31,-31,-31,-31,-31,-31,-31,-31,-31,-31,-32,-32,-32,-32,-33,-33,-33,-33,-32,-31,-32,-33,-34,-33,-34,-34,-34,-33,-32,-31,0,0,0,0,0,0,0,0,0,0,0,0,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-31,-31,-31,-31,-31,-31,-31,-31,-31,-31,-31,-31,-32,-32,-32,-32,-32,-33,-33,-32,-32,-31,-30,-31,-33,-33,-33,-34,-33,-33,-32,-31,0,0,0,0,0,0,0,0,0,0,0,0,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-31,-31,-31,-31,-31,-31,-31,-31,-31,-31,-31,-31,-31,-32,-32,-32,-32,-32,-33,-33,-32,-31,-30,-30,-29,-31,-33,-33,-33,-33,-33,-31,-31,0,0,0,0,0,0,0,0,0,0,0,0,-32,-32,-32,-32,-32,-32,-33,-32,-32,-32,-32,-32,-32,-32,-31,-31,-31,-31,-31,-30,-30,-30,-30,-30,-30,-30,-30,-31,-31,-31,-31,-31,-30,-29,-28,-28,-31,-33,-33,-33,-33,-31,-31,0,0,0,0,0,0,0,0,0,0,0,0,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-31,-31,-31,-31,-31,-31,-31,-30,-30,-30,-30,-29,-29,-28,-28,-28,-28,-28,-28,-29,-30,-29,-29,-29,-28,-27,-28,-31,-33,-33,-33,-31,-31,0,0,0,0,0,0,0,0,0,0,0,0,-31,-31,-31,-31,-31,-31,-31,-31,-31,-31,-31,-31,-31,-31,-31,-31,-31,-31,-30,-30,-30,-29,-28,-28,-27,-27,-26,-26,-27,-27,-29,-31,-30,-29,-28,-26,-26,-28,-30,-32,-32,-31,-31,0,0,0,0,0,0,0,0,0,0,0,0,-31,-31,-31,-31,-30,-30,-30,-30,-30,-31,-31,-31,-31,-31,-31,-31,-31,-31,-31,-31,-30,-30,-29,-29,-28,-28,-27,-26,-27,-29,-31,-32,-32,-31,-30,-29,-29,-27,-28,-30,-32,-31,-31,0,0,0,0,0,0,0,0,0,0,0,0,-31,-31,-31,-31,-30,-30,-30,-30,-30,-30,-30,-30,-30,-31,-31,-31,-31,-31,-31,-31,-30,-30,-30,-30,-30,-29,-28,-27,-29,-30,-32,-32,-32,-32,-32,-31,-31,-31,-31,-30,-31,-31,-30,0,0,0,0,0,0,0,0,0,0,0,0,-31,-31,-31,-31,-31,-30,-30,-30,-30,-30,-30,-30,-30,-30,-30,-30,-31,-31,-31,-30,-30,-30,-30,-29,-30,-30,-30,-29,-31,-31,-31,-32,-31,-32,-32,-30,-30,-30,-30,-30,-30,-31,-30,0,0,0,0,0,0,0,0,0,0,0,0,-31,-31,-31,-31,-31,-31,-31,-31,-31,-30,-30,-30,-30,-30,-30,-30,-31,-30,-30,-30,-30,-29,-29,-29,-29,-29,-29,-30,-29,-29,-31,-31,-32,-32,-31,-31,-30,-29,-29,-29,-30,-30,-29,0,0,0,0,0,0,0,0,0,0,0,0,-31,-31,-31,-31,-31,-31,-31,-31,-31,-31,-31,-30,-30,-30,-30,-30,-30,-30,-30,-30,-30,-30,-30,-30,-29,-27,-29,-28,-30,-30,-31,-32,-31,-31,-31,-30,-30,-30,-28,-29,-29,-29,-30,0,0,0,0,0,0,0,0,0,0,0,0,-31,-31,-31,-31,-31,-31,-31,-32,-32,-32,-32,-31,-30,-30,-30,-30,-30,-30,-30,-30,-30,-31,-30,-30,-28,-30,-30,-28,-30,-30,-31,-31,-31,-31,-31,-30,-29,-29,-29,-31,-30,-30,-30,0,0,0,0,0,0,0,0,0,0,0,0,-31,-31,-31,-31,-31,-32,-32,-32,-32,-32,-32,-32,-31,-30,-31,-30,-30,-30,-31,-31,-31,-31,-31,-31,-30,-30,-29,-28,-29,-31,-31,-31,-31,-30,-28,-29,-28,-30,-30,-31,-31,-31,-30,0,0,0,0,0,0,0,0,0,0,0,0,-31,-31,-31,-31,-31,-32,-32,-32,-32,-32,-32,-31,-31,-30,-31,-30,-30,-30,-31,-31,-32,-31,-31,-30,-30,-30,-29,-29,-29,-31,-31,-31,-31,-30,-29,-28,-28,-29,-30,-31,-31,-31,-30,0,0,0,0,0,0,0,0,0,0,0,0],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
