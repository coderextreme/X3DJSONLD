###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    Shape(
      appearance=Appearance(
        material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0,0.05,0)),
        texture=ImageTexture(url=['../../images/4/world9-3.jpg'],repeatS=False,repeatT=False)),
      geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(11.208336350785146,-112.54166465504323,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=22,xSpacing=1.0714287,zDimension=24,zSpacing=0.48913044,height=[-3955,-3640,-3802,-3714,-3350,-3469,-3346,-3217,-3006,-3259,-3400,-3628,-3767,-4092,-4286,-3904,-3874,-3829,-3690,-3674,-3713,-3695,-3661,-3512,-3859,-2958,-2641,-4171,-3686,-3373,-3357,-3417,-3507,-3616,-3816,-4136,-4027,-3948,-3908,-3882,-3770,-3696,-3738,-3825,-3624,-3880,-3733,-4165,-3564,-3536,-3395,-3182,-2988,-3211,-3391,-3558,-3892,-3589,-4067,-4069,-4098,-3935,-3866,-3690,-3708,-3730,-3941,-3969,-3816,-3468,-3544,-3550,-3449,-3275,-2955,-3108,-3115,-3274,-3610,-3617,-4092,-4271,-4115,-4025,-3899,-3711,-3667,-3673,-4309,-3812,-3898,-3837,-3744,-3743,-3455,-3292,-3068,-3020,-3223,-3262,-3509,-3462,-4153,-4284,-4082,-3966,-4101,-3593,-3589,-3638,-4108,-4018,-3768,-3611,-3640,-3545,-3336,-3232,-3036,-3093,-3215,-2750,-3424,-3544,-4269,-4125,-4164,-4099,-3949,-3805,-3571,-4623,-4068,-4029,-1925,-3834,-3989,-3653,-3201,-3265,-3060,-3032,-3413,-3384,-3403,-3591,-3569,-4086,-4189,-4004,-4357,-3946,-5695,-2669,-4027,-3621,-4675,-4123,-3694,-4510,-3294,-3329,-2793,-3140,-3059,-3461,-3613,-3557,-3856,-4036,-4034,-4108,-4061,-5772,-706,-153,-3987,-4034,-3118,-3866,-3514,-3650,-3419,-3254,-2949,-3075,-2382,-3329,-3283,-3349,-3572,-3248,-4093,-4108,-5928,-1267,-39,-19,-3890,-3813,-2646,-3852,-3799,-3879,-3398,-3198,-3014,-3099,-3374,-3392,-3615,-3497,-3416,-3723,-3944,-5226,-1187,-20,164,608,-3767,-3602,-2628,-4057,-3941,-3523,-3750,-3224,-3069,-3480,-3383,-3538,-3293,-3509,-3466,-3486,-3671,-2790,-177,44,2113,883,-3933,-2945,-3813,-3845,-3728,-3483,-3076,-3075,-2958,-3520,-3641,-3534,-3339,-3542,-4100,-5112,-2838,-230,-34,3126,1981,1530,-3658,-2713,-4383,-3037,-3979,-3763,-3263,-2938,-2943,-3224,-3553,-3081,-3701,-4835,-1274,155,-383,-101,229,648,1289,328,-3595,-2607,-3385,-3204,-2984,-3944,-3137,-2975,-3057,-3321,-3464,-3949,-4888,-71,155,1960,624,6,544,1732,337,130,-3286,-2836,-3291,-3854,-3270,-3702,-3013,-2959,-1550,-3135,-4312,-3061,4,647,1467,1547,772,1721,783,1776,422,152,-3464,-3180,-3515,-3425,-3825,-3662,-2941,-3072,-3365,-4450,-2507,29,578,1583,2225,2147,125,90,630,742,243,81,-3506,-3331,-3366,-3704,-3552,-3675,-3731,-2814,-3842,-2531,-730,2557,1910,1480,2141,1172,92,23,66,29,39,162,-3493,-2794,-2763,-3419,-3453,-3881,-2790,-2821,-2277,253,175,439,1554,1255,2081,383,13,-4,9,2,54,74,-3342,-3292,-3291,-3449,-3229,-2219,-3426,-4509,-906,1799,160,694,1622,1730,2379,126,-134,-311,-56,-3,5,76,-3432,-2986,-3001,-3309,-3948,-3399,-2868,-992,1490,733,737,831,2852,3636,2358,173,-1629,-902,-611,-3,-3,12,-3524,-3289,-3756,-3276,-2903,-3256,-4367,74,948,1679,2722,2564,3427,2533,2359,241,-2432,-1503,-1001,-158,-3,13,-3322,-3036,-2890,-2038,-3133,-3293,-2731,748,1488,1518,1678,1755,2294,2133,111,-151,-2666,-1707,-1298,-105,-3,3,-3551,-3338,-3262,-2884,-2941,-2982,-3789,48,1668,1767,1721,1883,2412,1319,94,-1063,-2649,-2949,-2369,-44,-32,5,-3609,-3293,-2579,-2858,-3041,-2992,-3877,34,1462,1739,1731,1945,2034,1381,42,-1225,-2695,-3002,-2386,-12,-20,4],
        geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(0.0,0.0,-6378137.0),geoSystem=['GDC'])))])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
