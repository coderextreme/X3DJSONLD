###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_1312',geoSystem=['GDC'],position=(1.4480194974058374,103.94891185322548,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.4480194974058374,103.94891185322548,0.0),range=4101.627,child1Url=['../../tiles/5/singapore26-24.x3d'],child2Url=['../../tiles/5/singapore26-25.x3d'],child3Url=['../../tiles/5/singapore27-24.x3d'],child4Url=['../../tiles/5/singapore27-25.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore13-12.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.4392877850278434,103.93454881909646,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[2,8,19,25,25,22,17,14,12,10,6,6,13,16,14,14,14,11,11,12,14,15,16,17,15,14,14,10,10,10,14,18,18,18,19,19,18,3,8,17,19,20,19,16,15,13,10,7,8,13,14,13,14,13,11,11,13,13,13,14,15,14,14,15,13,11,8,12,16,18,18,18,18,18,3,9,15,15,15,17,16,16,14,10,8,10,13,12,12,13,13,11,10,14,13,12,13,15,14,14,15,16,13,8,10,14,18,17,18,17,17,5,9,15,15,15,16,17,17,16,11,11,14,14,13,12,12,12,13,13,14,12,12,12,15,13,13,15,16,14,10,9,11,14,14,15,16,16,6,9,15,16,15,16,17,18,18,13,14,18,16,14,12,11,10,16,16,14,12,12,12,15,13,12,15,16,14,12,8,8,10,10,12,15,16,6,8,13,15,14,14,16,17,16,14,15,18,16,14,11,12,11,16,15,13,13,14,14,17,14,12,14,15,14,11,8,8,8,8,10,11,12,6,7,11,15,14,14,15,16,15,14,16,18,17,14,9,12,12,17,15,12,13,16,16,18,15,12,13,14,15,11,9,7,7,7,8,8,8,6,7,11,13,14,14,15,15,13,14,16,18,16,14,9,12,14,18,17,13,13,18,19,18,15,14,14,15,16,14,11,8,8,7,7,7,8,6,8,11,12,14,14,15,13,12,13,15,17,15,13,8,10,17,20,19,13,13,20,21,19,15,16,16,17,18,17,13,9,10,8,7,7,7,8,9,10,11,13,13,15,14,13,14,17,19,17,13,10,11,17,19,17,13,15,19,20,18,16,16,17,17,17,17,14,11,11,9,8,8,8,10,10,10,11,12,13,15,14,14,15,19,21,19,12,12,12,16,19,15,11,17,18,19,17,17,17,17,16,17,18,15,12,12,11,10,9,9,10,11,12,11,12,14,17,16,16,17,20,21,18,12,12,14,16,18,14,10,16,18,18,18,18,18,19,18,19,19,17,13,12,11,10,9,9,10,12,13,12,12,16,19,19,18,19,20,21,17,12,13,16,16,17,13,9,14,18,17,18,18,19,20,20,20,20,18,14,12,11,10,9,9,11,14,15,15,15,18,22,22,22,22,22,21,17,13,15,17,16,16,13,11,14,17,17,17,18,19,20,21,21,21,18,14,11,10,10,9,8,12,16,17,18,18,20,25,25,25,24,23,21,17,13,17,18,16,15,13,13,15,16,16,17,18,19,20,21,21,22,17,12,10,10,9,8,8,14,17,19,21,20,22,26,27,27,25,23,21,19,16,19,19,16,15,13,14,16,16,16,18,19,19,19,19,20,21,17,12,9,9,8,7,7,16,19,21,24,23,24,28,28,28,26,24,22,21,19,20,19,16,15,14,15,16,15,15,19,19,18,16,16,18,20,16,12,10,8,6,5,5,17,20,22,25,24,25,28,28,28,28,26,24,23,22,22,20,17,14,13,15,16,14,14,18,18,16,14,13,14,16,14,12,10,7,7,6,6,18,21,22,25,24,25,28,28,28,29,27,26,25,24,24,22,18,13,12,14,15,13,13,16,17,14,11,9,10,12,13,11,10,6,7,9,9,19,21,23,26,25,26,28,27,27,29,28,28,25,25,24,22,17,14,13,13,14,13,13,14,14,12,9,7,8,10,11,10,9,6,8,10,11,21,23,26,27,26,27,28,26,26,27,28,28,25,23,22,21,17,15,13,12,14,13,12,12,12,10,7,7,8,9,11,9,8,7,8,11,11,21,24,28,30,29,30,29,25,26,27,27,27,24,20,20,18,17,15,13,12,13,13,11,10,9,9,7,7,8,9,10,8,8,7,8,11,12,21,24,31,35,32,32,29,24,26,26,26,25,22,18,17,16,17,15,14,12,13,13,10,9,7,8,8,7,9,10,9,8,8,8,9,11,12,21,24,31,35,36,35,28,24,28,28,26,24,21,17,16,16,17,16,14,13,15,15,11,10,7,7,7,8,10,11,9,7,8,9,9,12,13,21,24,28,34,39,37,29,27,34,33,28,24,21,18,18,16,16,16,15,16,17,17,16,14,9,7,7,7,10,11,8,7,8,9,10,12,13,22,24,26,32,39,37,28,28,36,35,29,23,21,19,20,18,17,17,16,17,18,19,20,18,13,8,7,8,11,10,8,7,8,9,10,12,14,22,23,25,31,37,36,27,26,33,33,28,24,22,21,21,21,19,18,18,17,17,18,22,22,17,10,9,9,11,9,8,8,7,7,9,13,14,22,22,24,28,33,33,25,23,29,30,27,24,24,23,23,22,22,20,19,17,17,18,22,25,21,13,12,11,10,8,8,8,7,6,9,12,13,22,22,22,24,27,26,21,19,23,25,25,25,27,28,27,23,24,22,20,18,18,19,23,27,24,19,16,12,10,9,9,9,8,6,8,10,11,23,21,21,22,23,21,18,17,19,22,25,26,29,31,29,24,25,24,20,18,19,20,24,29,26,22,19,13,10,9,10,9,8,6,7,8,9,22,21,20,21,21,19,18,18,19,21,24,27,29,31,29,26,25,25,21,19,20,21,24,30,27,24,21,15,11,10,10,10,9,7,7,8,8,22,20,20,21,20,18,18,18,19,21,22,27,29,30,29,27,26,26,22,20,21,21,24,29,27,25,22,16,11,10,11,10,10,8,7,8,8,22,21,21,22,22,19,17,18,19,21,21,25,27,29,28,28,26,25,22,19,19,21,24,28,26,25,21,14,11,9,10,10,10,7,7,8,8,23,22,22,23,23,19,16,18,19,20,20,24,26,27,26,27,26,23,21,18,17,20,23,26,25,23,19,13,10,9,9,9,9,7,7,7,8,25,23,22,22,22,17,16,18,20,20,19,22,25,24,23,24,24,20,18,16,15,17,19,23,22,20,16,11,10,9,9,9,8,7,6,7,8,26,23,21,22,21,16,15,18,20,19,18,20,23,21,21,21,23,19,17,15,13,15,15,19,19,17,13,10,9,10,9,8,7,7,6,7,8,26,23,21,23,22,19,16,17,20,19,19,21,21,20,20,20,22,20,21,17,14,14,12,14,16,14,11,9,9,9,8,8,7,7,6,8,10,27,23,21,24,23,21,17,17,20,19,20,21,19,19,20,19,21,23,24,20,16,15,9,10,12,12,10,8,9,9,8,9,8,7,7,9,11,29,26,22,23,24,22,17,17,20,19,20,20,19,19,20,17,19,23,24,25,23,20,11,9,11,10,8,8,8,8,8,10,9,8,8,11,12,31,29,23,22,24,22,17,18,19,19,20,18,19,20,19,16,18,23,25,29,30,24,13,9,10,8,7,8,8,8,9,11,10,8,10,12,13,28,27,21,21,22,19,15,16,17,17,17,16,17,18,17,14,16,22,25,26,27,24,15,9,10,8,7,7,8,8,10,11,10,8,10,13,15,26,25,20,20,19,17,13,14,15,14,14,14,15,15,14,12,14,22,24,23,26,24,16,10,11,8,7,7,9,9,11,12,10,9,10,14,16,26,24,21,21,20,16,13,12,14,13,13,12,12,13,12,11,12,18,24,25,24,21,15,11,11,8,7,7,9,10,12,14,12,9,11,16,18,26,23,22,22,19,14,12,10,13,12,11,10,9,10,10,9,9,14,24,28,23,18,13,11,11,7,6,7,9,10,13,16,13,10,13,18,21],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
