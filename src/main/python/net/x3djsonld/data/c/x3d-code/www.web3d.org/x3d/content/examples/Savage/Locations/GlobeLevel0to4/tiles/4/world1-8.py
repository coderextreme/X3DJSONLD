###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    Shape(
      appearance=Appearance(
        material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0,0.05,0)),
        texture=ImageTexture(url=['../../images/4/world1-8.jpg'],repeatS=False,repeatT=False)),
      geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(-78.79166633142387,-0.04166130228196607,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=22,xSpacing=1.0714287,zDimension=24,zSpacing=0.48913044,height=[2393,2427,2475,2514,2581,2640,2696,2743,2782,2814,2852,2903,2981,3031,3071,3098,3117,3156,3202,3226,3244,3257,2460,2496,2526,2573,2623,2693,2736,2787,2816,2853,2895,2987,3042,3086,3109,3142,3180,3203,3236,3270,3296,3302,2510,2548,2590,2658,2731,2787,2824,2862,2893,2915,2965,3043,3099,3130,3170,3201,3239,3280,3303,3311,3324,3340,2542,2597,2688,2775,2828,2888,2912,2926,2937,2963,3002,3076,3150,3198,3222,3257,3297,3324,3341,3354,3374,3394,2590,2653,2729,2829,2902,2942,2975,2993,3003,3040,3091,3173,3233,3257,3278,3299,3321,3350,3374,3392,3414,3453,2700,2746,2796,2886,2957,3014,3075,3104,3123,3153,3188,3220,3269,3299,3315,3343,3372,3397,3408,3422,3451,3484,2771,2822,2891,2933,2981,3044,3101,3157,3193,3214,3249,3292,3321,3356,3388,3409,3433,3451,3461,3472,3491,3520,2866,2902,2931,2956,2986,3023,3094,3181,3226,3258,3293,3334,3378,3401,3429,3460,3491,3505,3508,3514,3532,3556,2898,2925,2927,2910,2916,2985,3076,3173,3236,3272,3317,3397,3428,3440,3450,3463,3483,3501,3510,3520,3531,3540,2832,2810,2785,2805,2858,2912,3014,3141,3230,3268,3296,3359,3409,3410,3406,3405,3416,3443,3467,3479,3492,3497,2571,2527,2609,2735,2830,2903,3016,3132,3207,3248,3279,3312,3347,3350,3314,3294,3288,3293,3297,3317,3359,3375,2316,2291,2523,2706,2808,2914,3036,3099,3154,3197,3219,3248,3263,3229,3191,3166,3145,3136,3105,3092,3052,3026,1766,2022,2453,2615,2746,2944,3044,3073,3087,3099,3089,3038,3004,2997,2983,2964,2949,2918,2840,2703,2643,2618,1264,1588,2201,2342,2534,2855,2960,2892,2750,2746,2739,2724,2812,2726,2639,2367,2586,2362,2089,2041,1963,1916,343,901,1225,1147,1623,1628,1957,1814,1779,2009,2162,2178,2735,1972,1914,1880,1876,1818,1589,1425,1232,1196,-24,196,602,880,1127,1102,1161,1066,966,1178,1401,1478,1334,1894,1331,1201,1174,1173,1015,808,732,727,129,33,-94,20,242,393,487,406,522,653,738,766,577,496,527,595,619,629,514,315,310,418,429,204,7,32,12,4,8,-41,-16,3,-4,-190,4,211,53,287,-6,-19,250,146,119,222,206,-2,-268,-509,-794,-772,-205,-4,-2,-2,-16,-3,-28,78,51,1,49,129,25,597,-43,-651,-2192,-1865,-2191,-2227,-2420,-2447,-1858,-1848,-2148,-2275,-1911,-468,-322,-376,-268,-385,-671,-1022,-1814,-1738,-1919,-2192,-3465,-3696,-3999,-3933,-3279,-2773,-2521,-2849,-3097,-3304,-2620,-1187,-1760,-2103,-2113,-2379,-2532,-3058,-3001,-3599,-3235,-3313,-4294,-4276,-4373,-4224,-3607,-3462,-3496,-3502,-3373,-3300,-2878,-2047,-2106,-2737,-3322,-3512,-3552,-4015,-3612,-4010,-3766,-3767,-4460,-4486,-4392,-4508,-4425,-4443,-4324,-4168,-3935,-3672,-2757,-1837,-2474,-3166,-3717,-3831,-4051,-4327,-4044,-4203,-4101,-4193,-4519,-4502,-4487,-4513,-4326,-4369,-4410,-4182,-3843,-3504,-2788,-2014,-2544,-3182,-3756,-3866,-4107,-4300,-4063,-4096,-4104,-4310],
        geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(0.0,0.0,-6378137.0),geoSystem=['GDC'])))])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
