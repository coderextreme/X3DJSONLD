###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_915',geoSystem=['GDC'],position=(1.3781657983818856,104.0350900579996,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.3781657983818856,104.0350900579996,0.0),range=4101.627,child1Url=['../../tiles/5/singapore18-30.x3d'],child2Url=['../../tiles/5/singapore18-31.x3d'],child3Url=['../../tiles/5/singapore19-30.x3d'],child4Url=['../../tiles/5/singapore19-31.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore9-15.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.3694340860038916,104.02072702387058,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=36,xSpacing=8.207448E-4,zDimension=44,zSpacing=4.0612617E-4,height=[32,36,2,-31,-7,0,0,2,3,3,4,3,2,4,3,3,5,5,2,4,6,6,5,5,5,6,6,3,2,2,4,4,3,3,5,2,27,23,-4,-51,-21,-1,0,2,3,3,4,4,1,1,2,3,6,6,2,3,5,6,5,4,4,6,5,3,3,3,4,3,2,4,5,2,20,10,-12,-65,-39,-7,0,2,3,3,4,5,0,0,1,3,7,7,3,2,4,5,4,4,4,6,4,3,4,3,3,2,2,5,5,3,14,3,-18,-63,-58,-22,-2,1,3,3,5,6,2,1,2,3,5,5,3,2,3,4,4,3,4,5,4,3,3,2,3,2,2,4,5,4,8,0,-22,-53,-68,-35,-4,1,3,3,7,7,3,4,4,3,4,3,3,3,3,4,4,3,3,4,4,3,1,2,2,2,2,3,5,5,5,-2,-24,-45,-58,-32,-3,0,3,4,8,6,3,4,4,2,3,3,4,4,4,4,4,3,3,4,5,3,1,1,2,2,2,3,5,6,3,-4,-22,-37,-37,-20,-1,0,2,5,8,6,3,2,4,2,3,5,5,4,4,5,4,4,3,3,4,3,2,1,2,2,2,3,4,5,2,-3,-13,-22,-19,-9,0,0,1,4,7,6,3,2,4,2,3,5,5,3,4,5,4,4,4,2,4,4,2,1,1,1,2,3,4,5,2,-1,-2,-5,-5,0,1,0,0,2,5,5,3,1,3,3,3,4,4,3,3,4,4,5,4,1,3,3,2,2,1,1,2,3,4,5,2,0,2,1,0,1,3,0,-1,1,3,5,2,0,3,3,2,5,4,2,2,3,4,5,5,1,1,3,2,2,1,1,1,3,4,5,3,2,3,2,1,0,4,1,-1,1,1,3,1,0,3,3,3,5,4,2,0,1,4,6,6,1,0,2,2,2,1,1,1,2,4,5,3,3,3,3,1,0,4,2,-1,3,0,2,1,1,4,4,4,5,4,3,1,0,2,5,6,2,0,1,2,2,2,1,1,2,4,4,4,3,4,3,2,0,2,4,0,5,1,2,3,4,5,6,5,3,2,3,2,0,0,2,4,2,0,0,1,2,2,1,1,2,3,4,4,3,3,3,3,2,3,5,2,5,1,2,3,5,5,7,6,2,1,3,2,-1,-2,1,3,3,0,0,0,1,2,2,1,1,3,4,5,4,3,4,3,4,4,7,4,4,2,1,3,4,4,6,4,1,1,3,2,-3,-4,0,3,3,1,0,0,0,1,2,2,1,2,3,4,4,3,3,3,4,4,7,6,2,1,0,2,2,3,6,3,0,2,4,2,-3,-4,0,1,3,1,0,0,0,1,2,2,1,1,3,4,5,4,3,4,2,1,6,7,2,0,0,1,1,2,5,3,2,5,6,2,-1,-3,-1,0,2,2,0,0,0,0,2,2,2,1,2,4,4,4,3,5,3,3,5,7,2,0,0,1,0,1,5,3,3,6,6,2,0,-2,-2,0,1,3,1,0,0,0,1,2,2,1,1,4,4,4,5,7,8,9,6,6,3,1,1,3,0,0,4,4,5,5,3,2,0,-1,-1,0,0,2,2,0,0,0,0,1,2,2,1,3,3,4,5,6,10,11,5,6,5,1,2,4,0,0,3,5,6,4,1,1,1,0,-1,-1,0,1,3,1,0,0,0,1,2,2,1,3,3,3,4,4,10,9,4,6,7,1,1,4,2,0,2,4,6,4,1,1,1,0,0,0,0,0,2,2,0,0,0,0,1,2,2,3,3,3,5,3,9,7,3,7,8,1,0,4,3,0,1,5,6,4,1,1,1,0,0,0,0,0,1,3,1,0,0,0,1,2,2,3,3,3,7,4,7,6,4,6,7,2,0,1,1,1,3,5,7,5,2,1,1,1,0,0,0,0,0,2,2,0,0,0,0,1,2,3,3,3,7,3,6,6,6,5,6,3,-1,0,0,1,3,6,6,6,3,1,1,1,0,0,0,0,0,1,3,1,0,0,0,1,2,4,3,3,3,0,6,8,6,6,6,3,0,0,0,0,3,4,4,5,4,2,1,1,1,0,0,0,0,0,2,2,0,0,0,0,1,4,3,2,0,0,5,9,6,6,6,4,2,0,0,0,3,3,3,4,4,2,1,1,1,0,0,0,0,0,1,3,1,0,0,0,1,3,5,2,0,0,2,6,7,9,7,6,8,3,0,0,1,1,1,2,2,2,2,1,1,1,0,0,0,0,0,2,2,0,0,0,0,2,5,2,0,0,0,4,7,11,7,8,13,7,1,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,1,3,1,0,0,0,1,4,4,1,2,1,3,8,11,7,8,11,9,3,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,2,2,0,0,0,0,3,6,2,4,2,1,8,11,7,7,9,10,4,0,-1,-1,0,0,0,0,0,1,1,1,1,1,0,0,0,0,1,3,1,0,0,0,2,6,3,5,1,0,9,10,6,4,6,9,5,0,-1,-2,-1,0,0,0,0,1,1,1,1,1,0,0,0,0,0,2,2,0,0,0,2,7,5,5,0,0,9,8,5,2,4,8,6,1,-1,-2,-1,0,1,1,1,1,1,1,1,1,0,0,0,0,0,1,3,1,0,0,1,11,5,4,0,0,6,6,3,1,3,6,7,3,0,0,2,2,2,2,1,1,1,1,1,1,1,0,0,0,0,0,2,2,0,0,2,13,5,2,-1,0,2,3,1,0,3,4,7,4,0,2,5,4,3,2,2,1,1,1,1,1,1,0,0,0,0,0,1,3,1,4,4,10,2,0,-1,-1,0,0,0,0,2,5,9,4,2,3,5,4,3,3,2,2,1,1,1,1,1,1,0,0,0,0,0,2,2,10,8,6,0,-3,-1,-1,0,-2,-2,-1,1,5,10,4,3,3,3,3,3,3,2,2,1,1,1,1,1,1,0,0,0,0,0,1,3,16,11,5,2,-1,-2,-2,-1,-4,-5,-4,-2,3,7,4,5,3,2,3,3,3,3,2,2,1,1,1,1,1,1,0,0,0,0,0,2,19,12,5,4,0,-3,-1,-1,-4,-7,-6,-5,0,5,5,6,3,2,3,3,3,3,2,2,1,1,1,1,1,1,0,0,0,0,0,1,14,8,5,5,3,0,0,-1,-5,-7,-5,-2,2,6,7,7,4,2,3,3,3,3,3,2,2,1,1,1,1,1,1,0,0,0,0,0,6,3,4,6,5,1,0,-1,-6,-7,-1,1,5,7,8,8,5,3,3,3,3,3,3,2,2,1,1,1,1,1,1,1,0,0,0,0,5,3,4,6,6,4,3,0,-6,-4,1,5,6,6,8,8,6,3,3,3,3,3,3,3,2,2,1,1,1,1,1,1,0,0,0,0,7,4,4,6,6,6,5,0,-5,0,5,8,6,4,6,7,8,5,3,3,3,3,3,3,2,2,1,1,1,1,1,1,1,0,0,0,6,4,3,6,6,7,7,2,-2,2,8,9,6,3,4,6,7,6,4,3,3,3,3,3,3,2,2,1,1,1,1,1,1,0,0,0,5,4,2,5,6,7,7,4,1,6,9,7,5,2,2,4,6,7,5,3,3,3,3,3,3,2,2,1,1,1,1,1,1,1,0,0],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
