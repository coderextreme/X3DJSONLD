###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_133',geoSystem=['GDC'],position=(1.4480194974058374,103.69037723890314,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.4480194974058374,103.69037723890314,0.0),range=4101.627,child1Url=['../../tiles/5/singapore26-6.x3d'],child2Url=['../../tiles/5/singapore26-7.x3d'],child3Url=['../../tiles/5/singapore27-6.x3d'],child4Url=['../../tiles/5/singapore27-7.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore13-3.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.4392877850278434,103.67601420477412,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[13,13,14,13,11,7,10,13,12,12,9,7,12,18,22,26,29,31,33,34,34,24,9,4,1,0,0,-1,0,7,5,7,10,13,14,16,22,11,14,14,14,12,10,13,12,12,11,8,6,11,18,23,26,29,31,33,33,33,25,10,2,0,0,0,-1,-1,5,2,5,7,11,12,15,21,9,13,14,15,14,13,14,12,11,9,6,6,10,19,24,26,29,32,33,33,32,26,11,1,0,0,0,0,-2,2,0,2,4,9,10,14,19,8,11,14,15,15,15,16,12,10,8,6,6,10,19,24,26,29,32,33,32,31,26,13,1,0,0,0,0,0,-1,-5,-1,0,7,10,14,18,6,9,13,15,16,17,16,11,10,7,6,6,10,19,24,26,29,33,33,30,30,26,14,2,0,0,1,2,4,-6,-10,-5,-3,5,9,13,16,6,10,14,17,17,18,16,12,10,7,6,6,11,18,22,26,31,32,29,28,27,24,15,3,0,1,1,2,2,-6,-16,-6,-1,5,9,10,13,6,11,15,18,18,18,16,13,10,7,5,7,11,17,21,25,31,30,26,26,25,22,15,5,0,1,1,2,0,-7,-20,-7,-1,4,9,8,9,7,10,13,16,19,18,16,14,12,9,5,7,11,15,21,24,24,24,23,23,22,20,16,8,1,1,1,1,1,-2,-10,-3,0,0,4,7,8,9,8,11,16,20,19,16,15,13,11,5,7,12,15,20,22,17,18,20,19,19,19,17,12,2,1,1,1,1,3,0,0,0,-4,0,5,7,11,8,11,16,21,20,17,14,13,11,8,8,13,21,27,25,19,17,18,19,19,17,17,13,4,1,1,2,3,4,2,0,0,0,0,3,5,13,8,12,17,22,21,18,14,13,13,11,10,15,27,34,29,21,16,15,18,18,17,17,13,4,1,1,2,4,4,4,0,0,3,0,2,2,13,9,12,17,21,21,17,14,14,13,12,10,14,26,32,28,19,14,15,18,17,16,17,14,6,1,2,3,5,5,3,0,2,4,0,2,2,13,11,11,16,21,21,17,15,15,14,13,10,12,22,29,26,15,12,17,18,16,16,17,14,7,1,2,5,5,5,2,1,3,4,0,2,2,16,12,12,16,21,22,17,16,15,14,14,12,13,20,26,23,15,14,17,17,16,17,17,14,9,5,3,5,5,4,3,2,5,4,0,1,2,18,13,12,15,21,23,18,17,15,15,15,14,14,18,22,20,16,16,17,15,16,17,16,14,12,10,5,5,5,4,3,4,6,5,-1,0,1,20,14,14,18,23,23,18,17,15,16,17,15,15,19,23,21,17,16,15,14,16,16,15,14,13,10,6,5,5,4,3,5,6,3,-1,0,0,20,16,16,21,25,24,18,16,16,17,18,17,17,21,24,23,18,14,13,14,17,15,14,13,13,10,7,5,5,4,4,6,6,2,0,-1,0,20,17,19,24,26,25,19,17,17,19,21,20,18,22,26,24,18,15,12,14,16,14,13,13,12,9,8,6,5,4,5,6,5,1,0,-1,0,20,18,23,26,27,26,21,19,18,21,24,23,20,24,27,24,19,15,12,13,14,13,13,12,10,9,8,7,6,5,6,6,4,1,0,-1,0,21,19,25,27,28,27,23,21,20,22,25,24,22,25,27,23,19,15,13,13,13,12,13,12,10,8,8,8,6,5,6,5,3,1,0,0,0,23,21,26,28,29,27,25,23,22,24,26,25,25,27,27,22,18,15,14,12,12,12,12,10,9,8,8,7,5,4,6,5,3,1,0,0,0,24,23,27,29,29,27,24,24,23,24,25,26,26,27,26,21,17,16,14,12,11,11,12,10,9,8,8,6,4,3,5,4,3,1,0,0,0,25,24,27,29,27,25,23,23,23,22,24,26,26,25,22,19,16,16,15,12,10,11,10,10,9,8,7,5,3,2,2,3,3,1,0,0,1,27,25,27,28,26,24,22,23,23,20,22,25,25,23,20,17,16,16,15,12,10,11,10,10,9,8,7,5,3,1,1,2,2,1,0,1,1,27,26,27,26,25,23,22,23,22,18,19,22,23,21,19,17,16,16,14,12,11,11,11,10,10,8,6,4,2,1,1,1,2,1,0,1,1,28,27,25,24,24,22,22,23,22,17,17,20,23,21,19,17,17,15,13,12,11,12,12,12,11,8,5,3,2,1,1,1,2,1,1,0,0,26,25,23,21,21,20,21,23,21,17,17,19,23,23,21,20,19,14,13,13,13,15,15,14,13,9,5,4,2,1,1,1,2,1,1,0,-1,24,23,21,19,18,18,20,22,20,17,16,19,23,24,24,23,21,15,13,15,15,16,17,16,16,12,5,3,2,2,2,2,2,1,1,0,-3,24,22,20,16,15,15,18,20,18,15,15,18,23,26,26,26,23,17,15,16,17,18,20,19,19,15,8,2,3,2,2,2,2,1,1,-1,-5,23,22,19,15,13,14,17,18,16,14,14,18,24,27,28,28,25,19,16,17,18,19,21,22,22,18,11,3,4,4,4,3,3,2,1,-1,-5,22,22,20,17,14,13,15,16,14,13,14,18,24,28,28,28,24,19,16,17,17,18,22,24,24,20,13,7,6,6,5,4,4,2,2,1,-1,20,22,21,19,15,13,14,15,12,13,14,18,24,28,28,28,24,20,17,16,16,17,21,25,25,20,15,10,7,7,6,5,4,3,2,2,1,19,22,21,19,16,14,15,15,13,12,13,17,23,27,27,27,24,21,18,15,14,16,19,22,24,20,14,11,9,8,7,6,5,4,3,2,1,18,21,22,20,16,15,15,15,13,12,13,17,23,25,25,25,24,22,18,15,13,14,18,20,22,19,13,12,10,9,8,6,5,4,3,2,2,17,19,20,20,17,15,14,14,14,12,12,16,21,22,22,23,21,20,17,13,11,13,15,16,18,16,12,11,11,10,8,6,5,4,3,3,3,16,17,18,19,17,16,13,14,14,11,12,15,19,20,20,21,19,18,16,12,10,12,12,12,14,14,12,11,11,10,8,6,5,4,3,3,3,16,17,17,17,16,16,14,13,13,11,12,15,18,18,19,19,18,16,14,10,8,9,10,12,13,12,11,12,12,11,8,6,5,4,3,3,3,16,16,15,15,15,15,14,12,12,12,13,15,18,17,17,18,16,14,11,7,6,7,9,12,11,10,11,14,12,11,7,6,5,4,3,3,2,15,15,15,15,14,14,13,11,11,12,14,15,17,16,15,15,13,10,9,7,8,10,10,11,11,10,11,13,13,11,5,6,5,4,3,2,2,15,15,15,15,13,13,12,10,10,12,14,15,16,15,13,13,10,7,7,7,10,13,11,10,10,10,11,12,14,11,3,6,5,4,3,2,2,15,14,15,15,13,13,12,11,10,12,15,15,16,15,13,12,9,5,5,7,9,11,10,9,10,10,11,12,12,9,3,3,5,3,2,2,3,15,13,14,15,14,13,12,13,11,12,14,16,15,15,13,11,8,4,3,6,9,10,8,8,10,11,11,11,10,7,2,0,6,2,1,3,6,15,13,14,15,14,14,13,13,11,12,14,16,15,14,12,11,9,6,7,9,11,11,9,9,10,11,11,10,9,8,3,0,-1,1,2,8,11,16,12,13,14,14,14,12,12,10,11,14,16,15,13,11,11,11,10,10,12,13,12,10,10,12,11,11,10,8,7,4,-2,-12,0,3,14,17],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
