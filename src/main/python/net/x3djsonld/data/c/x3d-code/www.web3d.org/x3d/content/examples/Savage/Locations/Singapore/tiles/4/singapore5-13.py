###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_513',geoSystem=['GDC'],position=(1.3083120993579338,103.97763792148352,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.3083120993579338,103.97763792148352,0.0),range=4101.627,child1Url=['../../tiles/5/singapore10-26.x3d'],child2Url=['../../tiles/5/singapore10-27.x3d'],child3Url=['../../tiles/5/singapore11-26.x3d'],child4Url=['../../tiles/5/singapore11-27.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore5-13.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.2995803869799398,103.9632748873545,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=45,zSpacing=3.96896E-4,height=[-4,-6,1,2,4,1,-2,-9,-16,-4,9,16,16,13,10,9,9,6,6,6,10,13,8,5,9,10,6,4,2,0,-2,1,7,14,7,2,6,-4,-1,7,10,4,1,0,-4,-7,0,11,14,16,12,7,7,7,6,5,7,13,15,8,1,3,7,7,4,-1,0,-1,0,5,18,13,3,3,-2,4,13,19,4,0,0,0,1,6,12,13,15,10,3,4,6,6,5,9,18,18,8,0,0,5,8,3,-5,0,0,0,3,20,17,4,0,1,11,18,18,3,-1,0,0,3,7,11,12,11,6,1,3,6,6,6,12,20,18,8,2,0,2,8,6,0,3,0,-2,3,18,15,3,0,6,18,22,11,1,-4,0,0,2,7,10,12,6,1,1,4,5,5,6,15,21,17,8,4,2,0,7,11,9,7,0,-5,4,14,10,2,1,13,21,19,7,2,-1,0,0,0,5,11,12,6,0,1,4,5,5,6,11,17,16,7,3,4,3,10,14,10,4,-3,-5,2,10,9,6,5,20,23,12,4,4,2,-1,-2,0,3,13,11,8,1,2,5,6,5,4,4,11,16,7,0,5,9,15,15,7,0,-7,-6,0,6,9,13,11,22,18,7,2,3,0,-2,-4,-1,1,12,8,5,0,3,5,5,6,4,2,9,14,4,-1,6,13,14,9,3,-1,-6,-6,0,4,6,10,10,23,11,3,2,1,-6,-4,-5,-3,0,11,6,0,0,3,4,5,7,4,3,9,10,1,-2,5,16,10,2,0,-3,-5,-5,0,3,2,5,7,19,6,1,1,0,-6,-1,-3,-5,-1,13,9,1,2,4,4,4,7,6,4,8,6,0,0,5,13,4,-2,-1,-3,-4,-2,3,5,3,3,4,11,3,1,0,-1,-1,2,0,-8,-1,15,14,6,8,6,5,3,6,7,7,7,3,1,2,4,7,0,-4,0,-3,-2,2,7,7,6,2,0,6,1,1,0,0,3,8,3,-4,0,13,13,6,7,7,5,4,9,9,7,5,2,2,2,4,5,-1,-4,-1,-1,1,8,12,10,10,4,2,3,1,0,0,2,9,14,7,3,0,8,9,3,3,7,6,7,14,13,6,2,1,2,2,3,4,0,-5,-3,0,8,15,18,15,14,9,6,1,1,0,0,5,11,13,5,11,-1,-1,0,0,2,7,6,10,17,14,7,1,1,4,4,3,4,1,-4,-4,0,9,17,22,16,13,10,8,1,1,0,2,7,10,8,1,18,-4,-17,-12,-2,4,7,7,15,18,14,9,2,2,6,6,4,5,3,-2,-4,-1,7,15,26,16,9,9,9,1,1,0,4,8,8,4,0,16,-5,-22,-18,-4,5,7,8,14,16,13,7,2,3,7,8,5,5,3,0,-4,-1,5,10,22,15,3,4,9,1,0,1,5,7,6,2,3,7,-7,-18,-19,-5,6,8,8,9,12,11,4,0,3,9,9,7,5,3,0,-2,0,3,4,12,13,-4,-2,7,1,0,3,6,6,4,1,4,1,-8,-15,-17,-4,5,9,8,5,7,7,1,0,3,9,9,7,5,3,0,-1,0,1,0,6,10,-4,-2,8,0,1,4,5,5,3,2,1,-4,-9,-12,-11,0,5,11,9,3,2,1,0,0,1,7,9,7,6,3,0,-1,0,0,0,3,6,0,4,11,2,2,5,5,4,2,2,-1,-7,-10,-10,-7,0,4,12,9,2,0,-1,0,-1,0,5,8,7,6,3,-1,-1,0,0,2,3,6,4,9,12,5,4,5,4,3,2,0,-4,-9,-10,-9,-3,1,3,10,9,1,-2,-1,-1,-1,0,3,6,7,5,2,0,0,0,3,4,4,6,9,13,11,11,7,5,4,3,2,-1,-8,-10,-9,-8,-1,2,2,6,7,0,-2,-2,-1,-1,0,1,6,6,5,1,0,0,2,6,6,6,7,11,13,10,18,12,5,4,2,0,-5,-9,-10,-9,-6,0,1,1,1,2,0,-1,-2,-1,-1,-1,1,6,6,4,1,0,0,4,9,10,8,8,9,10,10,23,17,9,7,6,0,-7,-10,-9,-9,-3,0,1,0,0,0,0,0,-2,-2,-1,0,1,6,6,4,3,1,2,5,10,12,11,6,5,8,10,25,22,17,16,15,4,-7,-10,-9,-6,-1,0,1,0,0,1,2,0,-2,-2,-1,0,2,6,7,6,5,4,4,6,8,12,14,2,1,9,11,26,26,24,23,22,11,0,-6,-7,-3,0,1,1,0,0,2,2,1,0,-3,-1,0,4,7,8,8,8,7,5,6,7,10,14,-2,-2,11,12,27,27,26,25,24,21,17,2,-2,0,0,1,0,0,0,2,3,2,0,-2,-1,1,5,7,8,9,9,7,5,5,6,8,9,-11,-6,12,12,27,27,26,25,25,29,30,10,3,1,1,1,0,0,1,2,4,3,1,0,0,3,6,7,7,9,9,7,5,5,5,5,4,-18,-9,14,12,28,27,26,25,28,34,29,13,8,5,1,0,0,0,1,2,3,3,3,1,2,4,6,6,7,8,8,7,5,4,3,3,1,-19,-12,17,16,28,27,26,25,31,34,23,13,11,8,3,0,0,0,1,2,3,4,4,4,5,5,6,6,6,7,8,7,6,5,3,2,0,-15,-12,20,19,29,28,26,27,34,29,18,13,12,11,8,2,0,0,1,3,4,4,5,6,6,6,7,5,6,6,6,7,6,6,5,2,2,-7,-4,19,20,30,28,26,30,34,22,14,13,13,13,11,4,1,1,3,6,6,5,6,6,6,7,8,5,5,5,6,8,6,6,7,2,4,0,3,16,18,32,27,26,33,29,17,12,13,13,13,12,6,4,4,6,9,9,6,6,6,6,9,9,5,4,5,7,9,7,7,6,4,4,3,8,14,16,32,25,27,34,22,13,13,13,14,13,11,8,7,7,9,12,12,8,6,6,8,11,10,5,4,5,8,9,6,6,5,5,5,4,11,12,14,24,21,31,29,16,12,13,13,13,13,10,9,9,9,9,12,13,10,7,7,10,12,10,5,4,5,7,8,6,6,6,7,6,5,10,10,11,13,17,33,21,12,12,13,14,13,12,9,9,9,9,9,10,14,13,9,8,11,12,10,6,4,5,6,6,6,6,7,8,6,5,7,7,8,9,13,26,16,10,12,13,14,13,11,9,9,9,9,9,10,12,13,11,10,12,12,10,7,5,5,6,6,6,6,8,8,7,6,7,6,7,9,11,16,11,9,11,14,13,12,10,9,9,9,9,9,10,11,13,14,13,12,11,10,8,5,5,6,6,5,6,7,8,6,7,8,7,8,9,11,11,8,9,11,12,12,11,10,9,9,9,9,9,10,10,11,14,13,11,11,10,8,6,5,5,6,5,6,7,7,6,8,8,8,8,10,11,9,7,9,10,9,10,11,10,9,10,9,9,9,11,10,9,12,11,10,11,10,9,7,6,5,5,6,6,6,7,6,8,9,9,9,10,11,9,7,8,8,8,9,10,9,8,9,9,9,9,10,9,8,11,11,10,11,11,9,8,8,5,6,6,6,6,7,6,8,9,9,9,9,11,10,8,6,6,7,7,8,8,8,9,9,10,10,9,8,8,11,12,12,12,11,9,8,9,6,7,7,6,7,6,6,8,9,10,9,9,11,10,10,6,7,8,8,8,8,8,9,9,10,11,9,8,8,11,13,12,12,13,12,9,9,7,8,7,6,6,6,6,8,9,9,9,10,10,10,11,7,10,11,11,9,8,8,10,9,11,12,10,7,8,11,14,13,13,16,16,12,9,7,8,7,6,6,5,6,8,9,8,8,8,9,10,11,8,11,12,11,10,9,9,9,9,12,12,10,7,8,11,14,14,14,17,17,14,11,8,7,7,6,6,5,6,7,8,8,8],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
