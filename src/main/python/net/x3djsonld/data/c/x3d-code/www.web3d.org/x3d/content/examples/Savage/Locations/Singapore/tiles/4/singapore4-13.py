###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_413',geoSystem=['GDC'],position=(1.2908486746019459,103.97763792148352,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.2908486746019459,103.97763792148352,0.0),range=4101.627,child1Url=['../../tiles/5/singapore8-26.x3d'],child2Url=['../../tiles/5/singapore8-27.x3d'],child3Url=['../../tiles/5/singapore9-26.x3d'],child4Url=['../../tiles/5/singapore9-27.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore4-13.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.2821169622239519,103.9632748873545,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[5,10,14,18,17,14,12,8,5,3,4,6,7,2,6,14,12,9,1,-2,2,4,5,3,-5,-12,-7,-1,0,2,5,0,-1,3,9,8,3,4,10,17,20,13,11,12,8,6,4,14,11,4,1,5,12,11,8,1,-2,0,0,2,-3,-13,-10,-5,-1,0,0,5,0,2,4,7,6,3,2,9,18,20,9,7,11,7,6,6,22,15,2,2,4,9,11,8,3,0,-1,0,0,-9,-18,-6,-3,-1,0,0,4,0,5,3,6,3,2,0,8,12,15,5,3,11,7,4,2,18,15,8,11,7,6,11,10,7,3,1,3,3,-6,-14,-4,-1,-2,3,0,8,1,6,0,8,1,1,-2,6,6,9,2,0,12,9,2,0,12,14,14,21,10,5,11,13,12,8,5,7,6,-2,-8,-2,0,-1,8,3,10,4,6,0,9,0,1,-4,4,8,8,1,2,15,11,4,3,12,13,11,18,9,5,12,16,15,11,5,6,6,-1,-3,-1,-1,3,13,5,7,4,4,0,6,0,4,-4,3,12,8,0,5,18,14,6,7,12,13,6,13,6,5,14,17,16,13,4,4,6,0,0,-2,-2,9,17,6,4,3,2,3,1,0,6,0,5,11,8,0,5,14,14,7,8,11,11,7,13,7,5,11,14,13,12,1,0,3,0,0,-3,0,10,13,3,1,3,0,4,2,-2,3,6,8,10,8,2,5,8,13,8,9,9,9,10,14,9,4,7,9,10,9,-1,-4,0,0,-1,-4,0,8,7,-1,0,2,-1,3,4,-5,0,13,9,10,12,11,10,5,8,9,11,8,8,11,15,9,5,8,8,9,7,-2,-4,1,2,1,-1,1,7,5,0,0,3,1,2,4,0,2,19,8,12,18,21,15,3,1,9,13,7,6,11,14,9,7,10,9,8,4,-3,-4,3,8,5,2,3,6,6,1,0,4,5,1,2,10,7,20,7,7,13,15,12,3,6,11,16,7,6,11,16,12,8,8,8,8,8,2,0,4,6,3,2,4,7,6,3,4,8,12,7,8,13,12,19,5,0,5,4,5,4,13,14,18,7,5,11,17,15,8,5,6,9,13,10,3,4,2,0,2,4,8,6,4,7,13,21,14,15,15,16,12,1,0,7,5,4,8,11,15,18,7,5,8,17,15,9,4,2,6,13,12,5,3,1,0,0,4,9,10,6,9,12,19,15,10,4,11,5,-5,0,13,11,3,14,6,17,17,7,4,6,16,14,9,4,-1,1,12,12,5,2,0,-1,-2,2,10,13,8,10,8,15,13,1,-10,2,2,0,6,15,15,7,13,5,17,16,10,6,5,12,11,8,4,-2,0,9,9,6,3,-1,-1,0,4,9,10,5,10,6,10,8,-1,-15,-2,3,9,15,15,19,11,9,5,16,15,13,10,7,6,6,6,3,-1,0,6,6,7,5,-2,0,2,7,7,6,1,11,5,4,2,-1,-16,-6,5,14,17,13,17,10,9,7,13,10,11,11,7,6,6,5,3,0,0,4,6,7,5,0,2,4,8,8,1,-2,10,3,0,-2,-1,-9,-4,7,17,16,10,13,7,11,10,8,3,7,11,7,9,8,4,4,1,-1,3,8,7,5,2,5,5,10,10,-2,-6,8,0,-5,-6,-1,0,0,7,15,12,6,8,4,12,13,7,2,6,9,10,12,9,5,5,2,0,4,8,7,7,5,6,5,8,10,0,-3,5,-3,-4,-2,0,3,1,5,11,7,1,4,1,10,15,7,5,7,6,13,15,10,6,5,4,3,6,7,7,10,7,6,3,3,8,6,3,2,-6,0,4,1,2,2,6,9,3,-3,1,0,11,17,9,7,7,6,13,14,9,5,6,6,5,7,6,6,7,6,5,2,2,6,9,5,1,-5,1,8,3,0,2,9,7,0,-8,0,0,12,19,11,8,4,6,11,10,7,2,6,9,6,6,6,3,1,2,5,2,1,4,9,4,1,-2,2,9,4,0,1,9,6,0,-5,0,0,8,16,11,10,6,9,10,9,6,2,6,8,5,4,5,4,0,1,4,2,1,4,9,4,1,0,5,11,6,-2,-1,8,4,0,1,4,2,1,10,8,13,13,12,9,8,9,5,5,4,2,1,5,7,3,2,5,3,2,6,9,4,2,0,8,13,9,-9,-7,7,7,4,8,10,6,0,6,7,14,16,12,7,6,10,6,5,3,0,-1,2,7,7,5,6,3,1,7,11,7,3,1,9,12,7,-8,-6,6,12,9,15,16,10,1,6,7,13,16,10,3,2,8,6,5,2,0,-5,-2,4,8,8,6,2,0,8,14,10,4,2,6,9,0,0,0,5,15,11,17,19,11,3,7,8,15,15,8,0,0,6,5,5,5,0,-1,0,3,10,10,6,1,0,9,14,11,4,2,2,6,-3,6,4,4,14,10,15,17,9,5,7,11,20,13,6,-1,-1,2,5,7,9,5,9,9,6,11,11,8,2,4,10,12,9,1,2,0,5,-4,8,2,6,15,10,13,14,6,6,7,13,21,9,4,0,0,1,7,9,10,9,17,16,9,11,8,7,3,6,10,11,7,0,0,0,5,-1,8,-1,10,17,11,13,12,1,6,8,11,16,4,1,2,4,6,13,10,8,9,17,17,12,10,3,4,5,7,9,10,6,0,-2,0,8,3,6,-7,14,17,11,11,9,0,7,8,11,10,1,-1,4,6,8,15,11,6,8,15,14,12,8,0,1,6,7,7,9,5,-1,-2,0,9,9,8,-7,19,13,7,8,7,2,11,8,14,5,0,-4,6,3,7,13,12,7,6,11,10,8,8,2,0,6,9,5,6,6,0,1,1,7,13,15,0,22,9,2,4,5,4,13,12,18,2,0,-3,7,2,5,10,13,7,5,9,7,5,8,3,0,6,11,4,4,6,3,5,2,4,12,17,6,20,8,-1,0,3,6,13,21,21,0,3,1,9,6,5,6,14,6,4,9,8,5,5,3,2,9,11,5,4,6,5,8,2,0,3,8,5,16,7,-4,-1,0,6,12,24,20,-1,6,7,10,8,5,4,13,7,4,10,10,7,4,4,4,10,11,6,6,5,6,9,2,-1,-5,-1,1,12,7,-3,-1,0,6,9,14,8,0,6,11,6,4,3,2,13,8,5,9,12,9,5,6,5,9,10,6,9,6,5,7,3,3,-5,-8,0,9,6,-2,-1,0,5,5,2,-2,0,7,13,3,0,0,2,13,10,6,9,13,12,7,8,7,9,9,6,9,6,4,5,3,7,-4,-10,0,8,3,-2,-2,0,5,1,-6,-6,-2,8,12,3,0,-1,4,14,10,8,9,10,10,8,9,11,10,8,6,6,4,4,3,1,6,-2,-5,3,6,0,-3,-2,0,4,-2,-14,-10,-5,10,11,5,2,-1,7,14,10,9,10,7,7,8,11,15,11,7,6,2,1,3,2,1,5,-1,1,5,4,-5,-4,0,1,2,-8,-17,-14,-7,8,10,7,6,3,9,13,9,8,9,9,8,10,16,17,12,5,4,4,1,3,3,5,5,0,4,6,0,-11,-5,0,1,0,-13,-18,-17,-7,6,10,9,10,9,9,11,8,7,8,10,9,12,19,17,12,4,2,8,2,2,4,10,6,1,5,7,-2,-10,-2,0,3,0,-8,-14,-17,-6,7,13,12,12,10,10,10,7,6,7,10,11,10,13,14,11,4,3,6,1,0,3,9,10,4,3,7,-4,-6,1,2,4,1,-2,-9,-16,-4,9,16,16,13,10,9,9,6,6,6,10,13,8,5,9,10,6,4,2,0,-2,1,7,14,7,2,6],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
