###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    Shape(
      appearance=Appearance(
        material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0,0.05,0)),
        texture=ImageTexture(url=['../../images/4/world10-10.jpg'],repeatS=False,repeatT=False)),
      geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(22.458336686061273,44.95834003882254,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=22,xSpacing=1.0714287,zDimension=24,zSpacing=0.48913044,height=[822,635,607,410,324,276,204,148,114,77,82,98,126,34,-106,-3319,-2825,-3482,-3379,-3163,-2585,-2393,1051,701,616,416,295,240,187,127,98,156,65,58,138,82,-144,-3169,-2000,-3475,-3191,-3090,-2841,-2203,1081,746,595,422,277,212,165,105,104,87,123,63,183,163,43,-2791,-3125,-3119,-3120,-2986,-2774,-2122,985,769,730,434,289,194,152,93,115,141,73,123,265,296,274,-2922,-3195,-3622,-1003,-2712,-2534,-1566,955,722,919,529,303,173,133,73,120,126,87,187,463,818,-313,-3157,-3333,-2790,-2228,-1976,-1899,-1191,806,852,863,571,313,191,137,41,124,152,98,243,1657,422,-2612,-3357,-3350,-2703,-2047,-3155,-1346,-204,966,905,960,529,344,223,131,7,78,81,105,558,61,-17,-3331,-3348,-3347,-3312,-3013,-2350,-703,-100,940,739,745,512,373,230,120,-3,-6,-3,99,643,-222,-2799,-2927,-2555,-2261,-2525,-2339,-3069,-201,-80,829,780,824,598,372,188,51,-3,-21,-22,29,424,-1200,-1422,-1069,-1354,-60,-1483,-584,-1106,-886,-4,739,684,628,538,361,159,-23,-25,-22,-32,-39,393,-718,-148,-43,43,6,23,-81,7,-20,1,675,796,606,468,311,88,-3,-38,-55,-66,-3,504,-91,96,139,213,106,49,346,343,275,34,592,688,582,437,250,42,-3,-32,-72,-82,-50,-98,8,1087,398,827,678,661,616,746,351,664,548,585,455,356,153,15,-17,-60,-83,482,653,5,67,1160,859,1082,1396,1328,852,1208,1017,1209,598,523,370,275,62,-1,-55,-41,7,1639,401,119,245,396,377,554,1481,1401,737,1368,1513,1894,562,441,355,269,27,-23,-56,1,1454,1048,754,1643,514,413,628,1262,1472,774,552,651,1452,1308,536,411,346,261,4,-38,-53,31,1009,1181,1680,1071,1389,1048,882,1342,1392,565,531,623,1733,1556,488,375,257,228,-44,-41,-29,671,1510,1469,1660,2049,1640,1836,509,1481,1069,714,865,856,1211,2182,426,328,286,169,-9,-31,1,831,1496,1559,2152,1961,2814,1520,402,1619,1162,1116,1437,840,874,1790,407,246,219,102,-32,-32,186,2245,1593,2312,1797,2642,2487,333,582,1336,461,525,1162,981,938,1742,347,208,77,34,2,5,553,2538,2329,1968,2071,1586,1865,332,647,1322,490,568,760,963,1061,1460,251,110,3,2,2,21,810,2336,2506,1463,1690,1619,1792,231,740,1205,490,720,753,1118,1289,1990,177,13,5,5,15,166,2050,2434,1760,1998,1475,1693,528,537,935,886,478,535,772,1092,1119,1435,49,15,10,8,31,892,1456,2119,1512,2391,1114,1464,592,680,1417,1280,552,661,856,880,1119,1582,34,16,12,9,41,836,2019,1967,1467,1556,1161,1596,802,711,1514,1183,552,658,886,854,1253,1377],
        geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(0.0,0.0,-6378137.0),geoSystem=['GDC'])))])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
