###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    Shape(
      appearance=Appearance(
        material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
        texture=ImageTexture(url=['../../images/5/singapore19-10.jpg'],repeatS=False,repeatT=False)),
      geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.3781657983818856,103.7334663412902,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=36,xSpacing=4.103724E-4,zDimension=22,zSpacing=4.1579583E-4,height=[10,12,15,18,20,21,21,19,17,18,21,20,17,18,20,23,25,27,27,26,25,24,23,23,23,23,24,24,22,21,26,28,25,21,21,21,10,12,15,20,23,23,21,18,16,18,21,21,17,17,21,24,27,28,29,28,26,25,25,25,26,26,26,26,21,20,26,31,27,23,22,21,10,13,15,19,22,22,20,19,19,19,20,18,15,16,20,24,25,26,27,27,26,26,26,26,27,27,25,23,21,20,25,30,28,27,26,25,11,13,15,18,20,20,19,20,21,21,20,18,15,17,21,23,24,25,26,27,27,26,26,26,27,27,25,22,21,21,25,28,28,29,28,28,10,12,14,15,16,16,16,19,24,26,25,24,22,22,23,23,23,24,26,28,29,29,28,27,26,26,24,23,24,24,25,27,27,28,29,29,9,11,13,13,12,13,14,19,25,28,29,28,25,23,23,22,22,23,26,29,30,30,29,28,26,24,23,23,26,27,26,26,26,27,29,30,7,9,11,11,12,13,14,18,23,26,28,27,22,20,19,19,21,23,26,28,28,28,28,28,26,24,24,24,25,26,26,26,26,26,28,29,7,8,10,11,12,13,14,17,20,24,26,24,19,16,16,16,19,22,25,27,26,26,27,27,25,24,24,24,25,26,26,25,25,25,27,29,8,9,10,11,12,13,13,14,16,18,19,18,16,14,13,14,17,20,24,26,26,26,26,26,25,25,25,25,26,26,25,25,24,25,28,31,9,10,10,11,12,12,13,13,13,13,14,13,13,12,11,12,15,18,22,25,25,25,24,23,25,26,26,26,26,26,26,25,25,25,29,32,11,10,10,10,10,11,13,13,13,13,14,13,12,11,11,12,14,17,20,23,24,25,23,22,23,24,24,25,26,27,27,27,26,26,28,30,12,11,9,8,9,11,13,14,14,14,15,14,11,10,11,12,15,17,19,21,24,25,24,22,22,21,23,24,25,26,27,28,27,26,27,28,13,11,8,8,9,12,15,16,16,16,17,14,11,10,11,14,17,19,20,21,23,24,25,25,22,21,22,24,24,25,26,27,26,25,26,27,12,10,7,7,9,12,16,17,17,17,17,14,10,10,12,15,18,20,20,21,22,24,27,28,23,20,22,24,24,24,25,25,24,23,24,26,10,8,7,7,9,13,17,17,16,15,14,12,9,9,12,14,16,17,18,19,20,21,26,27,22,20,22,24,25,26,26,25,24,22,24,26,8,8,7,8,9,13,16,17,15,13,12,10,9,9,11,12,12,14,16,17,17,19,23,25,21,19,21,23,26,28,27,26,24,22,24,25,9,9,9,9,10,13,15,16,14,12,10,9,9,9,10,11,12,13,14,15,16,18,21,22,19,18,21,23,25,26,25,25,23,21,23,24,11,11,11,11,11,13,14,15,13,11,10,10,9,9,9,11,12,14,14,15,16,17,18,18,17,16,20,23,24,24,24,24,22,21,22,23,7,8,10,10,10,11,13,13,12,11,11,11,12,11,10,11,13,15,16,16,17,16,16,16,15,15,19,22,25,26,26,25,23,22,23,24,2,5,8,9,9,9,11,11,11,11,11,12,15,14,13,13,15,17,18,19,18,16,15,14,14,14,18,22,27,30,29,27,25,23,24,25,2,5,7,7,7,7,8,9,10,11,11,13,15,15,15,16,18,20,20,19,18,16,16,15,14,15,19,23,28,31,29,27,25,23,24,26,4,6,7,6,4,5,7,9,10,11,12,13,14,15,17,19,22,23,20,19,18,18,18,17,16,17,21,25,29,31,28,25,24,23,24,26],
        geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])))])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
