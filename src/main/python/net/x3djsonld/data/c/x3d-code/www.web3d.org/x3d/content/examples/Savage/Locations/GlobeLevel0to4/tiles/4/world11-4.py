###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    Shape(
      appearance=Appearance(
        material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0,0.05,0)),
        texture=ImageTexture(url=['../../images/4/world11-4.jpg'],repeatS=False,repeatT=False)),
      geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(33.7083370213374,-90.04166398449098,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=22,xSpacing=1.0714287,zDimension=24,zSpacing=0.48913044,height=[128,113,49,107,133,131,92,52,31,-15,-67,-579,-827,-2615,-3496,-4963,-5283,-5380,-5426,-5378,-5275,-5162,86,149,66,47,60,111,123,80,45,5,-25,-283,-677,-2252,-4001,-4851,-5290,-5406,-5413,-5393,-5238,-5135,55,179,38,123,204,243,176,136,47,15,-7,-41,-331,-1653,-3927,-4702,-5220,-5362,-5409,-5371,-5248,-5247,35,133,101,138,264,262,170,175,102,41,13,-22,-35,-706,-3626,-4585,-4924,-5316,-5406,-5399,-5320,-5188,44,114,95,111,190,327,282,175,144,33,18,5,-29,-265,-3254,-4214,-4711,-5009,-5337,-5365,-5434,-5220,48,143,162,183,351,263,365,195,128,107,31,24,-15,-32,-2988,-3795,-4454,-4581,-5119,-5322,-5335,-5236,66,175,162,225,480,229,917,309,181,190,98,43,16,0,-1561,-3329,-4232,-4394,-4687,-5195,-5284,-5213,66,109,151,312,324,271,629,1453,321,209,119,53,13,2,-29,-3095,-4044,-4284,-4457,-4836,-5046,-5112,69,119,136,260,272,507,280,660,426,250,218,108,28,7,-30,-2650,-3802,-4135,-4423,-4597,-4795,-4863,143,102,148,220,280,512,339,401,974,337,193,99,32,13,-32,-2528,-3434,-4011,-4338,-4518,-4626,-4898,142,95,137,197,183,284,370,629,645,828,262,141,38,6,-33,-2336,-3092,-3754,-4337,-4387,-4824,-4921,256,166,114,151,188,336,308,325,660,796,263,106,24,-1,-29,-1495,-2902,-3311,-4033,-4257,-4583,-4777,276,127,119,116,216,250,325,243,444,787,800,157,45,-4,-18,-132,-2589,-3015,-3583,-3953,-4239,-4502,158,160,115,143,283,227,276,239,263,710,1093,600,5,1,1,-59,-2317,-2850,-3048,-3490,-3873,-4239,132,158,175,145,194,249,292,210,208,351,938,214,102,0,-16,-40,-86,-2506,-2845,-2995,-3343,-3844,148,196,204,204,208,276,323,340,234,342,777,235,137,-2,28,-20,-63,-1206,-2393,-2460,-2776,-3176,177,181,199,223,255,342,306,282,281,381,500,468,259,181,6,2,-52,-112,-601,-295,-2295,-2570,145,197,233,204,260,282,329,384,344,332,356,352,237,181,130,24,-37,-69,-84,-72,-87,-173,231,219,208,208,247,252,254,328,348,336,358,476,505,316,223,14,40,-34,-53,-33,-53,-56,219,207,172,209,250,267,202,186,208,289,486,621,394,612,500,95,161,79,-19,-11,-95,-40,225,254,236,175,274,305,205,172,172,228,522,616,504,490,515,64,193,80,40,-127,-160,-75,242,240,226,175,215,286,288,173,172,172,172,591,534,539,451,278,471,313,-29,-266,-198,-184,329,284,267,175,194,232,246,228,221,254,177,287,241,343,424,231,655,254,2,-197,-204,-162,355,260,260,175,184,203,232,232,247,261,179,267,182,284,413,260,654,243,32,-154,-192,-191],
        geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(0.0,0.0,-6378137.0),geoSystem=['GDC'])))])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
