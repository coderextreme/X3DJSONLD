###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_210',geoSystem=['GDC'],position=(1.25592182508997,103.8914597167094,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.25592182508997,103.8914597167094,0.0),range=4101.627,child1Url=['../../tiles/5/singapore4-20.x3d'],child2Url=['../../tiles/5/singapore4-21.x3d'],child3Url=['../../tiles/5/singapore5-20.x3d'],child4Url=['../../tiles/5/singapore5-21.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore2-10.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.247190112711976,103.87709668258039,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[-7,-6,11,18,12,9,15,18,5,6,9,5,8,17,14,19,23,19,16,16,12,9,6,4,6,1,2,-1,0,11,14,9,9,11,7,1,-1,-17,-10,6,11,8,5,8,14,7,6,5,2,8,17,12,19,17,16,17,15,13,11,6,7,8,4,2,0,3,8,11,9,10,11,7,1,0,-21,-12,1,5,8,7,8,13,9,5,3,1,9,16,10,14,12,14,18,18,17,13,8,8,9,6,3,1,4,7,8,7,9,11,7,3,3,-17,-13,-2,2,10,16,16,14,9,5,3,2,9,15,7,7,7,11,19,24,24,17,10,8,9,8,2,1,3,4,5,2,5,9,7,4,5,-12,-13,-5,0,10,20,21,15,9,6,6,5,11,15,7,2,4,9,22,32,32,24,13,9,9,9,2,1,3,3,3,0,2,7,7,6,7,-6,-13,-8,-3,6,21,23,17,9,6,11,15,15,15,8,1,3,9,28,40,42,33,17,13,13,10,3,1,2,3,2,0,2,4,6,6,6,-4,-12,-7,-3,6,21,22,16,8,6,12,20,17,15,8,1,2,9,30,44,51,39,18,15,15,10,4,2,2,4,1,1,2,3,7,6,5,-5,-9,-2,0,13,23,18,13,8,5,9,17,16,12,4,1,2,9,24,40,58,41,16,11,14,10,4,4,3,4,0,0,2,4,6,5,3,-3,-3,2,5,16,21,12,10,7,5,7,14,15,11,1,2,2,9,20,37,64,43,14,9,13,14,6,4,3,4,0,-1,4,5,5,3,2,4,6,10,11,13,12,5,7,6,7,8,12,12,10,2,2,2,8,20,41,68,47,13,7,13,24,13,-1,0,1,1,3,8,5,4,2,2,11,14,16,13,7,1,0,4,5,8,9,10,10,9,4,2,2,6,22,44,65,46,12,7,11,31,21,-4,-2,0,3,7,10,6,3,1,1,12,15,15,9,-4,-12,-5,0,3,7,10,10,11,9,5,3,2,6,31,41,44,29,10,7,8,31,27,0,0,4,7,10,9,6,2,1,2,13,15,13,5,-14,-25,-11,-1,2,6,9,10,12,8,7,5,3,7,38,39,27,16,8,8,5,30,31,5,1,8,14,14,8,4,2,1,1,11,14,11,3,-17,-33,-19,-3,1,2,4,6,8,8,9,6,3,11,42,41,26,12,6,7,3,22,31,12,4,13,33,20,6,2,3,3,0,9,12,9,1,-19,-38,-26,-5,1,0,0,2,4,8,11,9,4,16,43,43,24,9,5,7,2,14,28,18,8,16,48,25,4,0,3,4,-1,8,10,7,-7,-24,-35,-26,-4,1,2,1,1,3,8,11,12,11,25,39,39,15,4,3,6,3,11,20,17,8,11,43,23,5,0,2,4,-2,7,8,4,-14,-28,-29,-24,-1,1,4,1,0,3,8,12,14,18,32,35,35,7,0,2,4,6,7,10,16,8,6,35,21,6,2,2,4,-3,7,5,3,-8,-20,-14,-4,1,0,-1,-4,1,3,11,12,15,25,32,33,31,10,0,2,4,6,7,8,10,6,1,15,10,7,11,7,3,0,6,4,3,-3,-11,0,13,6,-2,-7,-10,3,4,13,13,15,31,32,31,27,13,1,1,4,5,7,5,5,3,-2,-2,1,9,19,13,2,2,5,3,3,0,-4,2,15,13,0,-4,-10,2,10,17,14,14,26,27,30,28,16,3,2,4,5,7,5,2,2,-1,0,5,14,20,12,3,3,4,4,3,3,1,3,15,21,2,-2,-11,0,16,22,15,14,21,22,30,29,18,5,2,4,5,7,6,0,0,0,1,11,20,20,10,3,4,5,4,4,3,2,2,4,4,1,0,-6,0,15,30,25,15,18,20,26,29,23,10,4,5,6,7,5,1,0,0,9,18,27,27,11,4,6,5,5,4,3,2,1,-7,-14,0,1,-1,1,14,38,36,17,16,19,22,29,28,15,6,5,6,7,4,1,0,1,17,26,33,35,13,5,8,7,7,6,5,4,-1,-14,-13,1,6,4,3,10,28,30,15,13,15,15,23,28,18,7,6,7,7,6,5,4,6,20,26,33,35,14,3,4,9,9,8,8,7,-5,-20,-10,3,12,13,7,5,16,23,11,10,10,6,15,27,21,8,6,7,7,9,9,9,12,22,24,30,33,15,2,0,10,9,9,9,10,1,-8,1,11,18,18,8,6,12,15,7,1,0,0,5,19,23,9,7,7,8,9,10,10,15,24,27,30,33,17,2,0,10,10,9,10,14,8,5,15,19,24,23,8,8,11,6,4,-7,-15,-7,-3,9,24,10,7,7,9,9,10,10,17,26,32,29,34,19,4,1,10,9,7,9,13,12,12,18,20,24,23,5,6,6,3,2,-7,-16,-13,-10,0,15,10,7,8,9,10,10,10,18,28,32,30,32,19,6,3,10,8,6,7,12,14,15,19,19,23,22,1,3,0,0,1,-4,-13,-19,-15,-9,4,11,8,9,10,10,10,10,18,30,32,30,29,18,9,6,9,7,5,6,9,13,15,18,19,22,25,2,0,-3,0,0,-2,-9,-18,-18,-15,-4,6,9,9,10,10,10,10,18,30,32,31,26,16,9,8,8,6,5,5,7,10,12,17,18,22,28,5,-4,-6,-2,0,0,-5,-13,-20,-19,-13,0,8,10,10,10,10,10,18,30,32,30,23,13,9,10,7,5,5,5,7,9,11,15,15,15,24,9,-8,-5,-1,0,1,-1,-9,-18,-20,-17,-2,7,10,10,10,10,10,19,29,32,28,19,11,10,12,6,5,5,5,6,8,9,12,9,5,19,14,-10,-2,0,3,3,0,-5,-13,-21,-19,-5,7,10,10,10,10,11,18,27,30,25,14,10,12,14,5,6,8,9,8,8,8,11,11,5,9,9,-12,1,3,6,3,0,-1,-9,-18,-19,-6,7,10,10,10,10,12,18,26,28,20,12,11,14,15,5,7,14,15,11,8,8,11,17,11,-1,-2,-12,6,7,8,3,1,0,-5,-14,-19,-6,7,10,10,10,10,12,19,25,24,15,11,13,15,15,2,6,16,19,14,9,7,10,16,5,-16,-13,-11,8,7,4,1,0,0,-2,-9,-17,-5,7,10,10,10,10,12,19,23,19,12,11,14,15,16,-1,4,15,20,17,11,8,9,8,-10,-33,-25,-7,8,5,-2,0,0,0,-1,-5,-12,-5,7,10,10,10,10,13,18,20,14,11,13,15,16,16,-3,0,11,19,19,14,8,7,1,-24,-41,-32,-6,8,5,-3,-2,-1,-1,-1,-3,-7,-4,6,10,10,10,10,13,17,16,11,11,14,15,16,16,-5,-3,4,14,19,17,8,5,-6,-34,-40,-33,-7,8,7,-1,-5,-4,-3,-2,-2,-4,-2,5,9,10,10,11,13,15,12,10,12,15,16,16,16,-5,-5,0,9,16,16,8,3,-10,-39,-39,-33,-8,8,8,2,-5,-5,-5,-4,-3,-2,-1,3,8,10,10,11,12,12,10,11,14,15,16,16,15,-6,-6,-3,2,10,12,6,0,-11,-39,-39,-32,-8,9,9,5,-2,-6,-6,-5,-4,-3,-1,2,8,9,10,11,11,10,10,12,15,16,16,15,15,-6,-6,-5,-1,3,7,4,0,-10,-36,-39,-32,-8,9,9,8,1,-6,-6,-6,-6,-4,-2,1,6,9,10,10,10,9,11,14,15,16,16,15,14,-6,-6,-6,-4,-1,1,3,0,-8,-29,-39,-32,-8,9,10,9,5,-2,-7,-7,-6,-5,-3,0,3,8,10,10,9,10,13,15,16,16,15,14,14,-6,-6,-6,-5,-5,-1,1,0,-5,-22,-36,-31,-8,8,10,9,8,1,-6,-8,-7,-6,-5,-2,1,7,9,9,9,11,14,15,16,16,15,14,14],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
