###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_97',geoSystem=['GDC'],position=(1.3781657983818856,103.80528151193529,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.3781657983818856,103.80528151193529,0.0),range=4101.627,child1Url=['../../tiles/5/singapore18-14.x3d'],child2Url=['../../tiles/5/singapore18-15.x3d'],child3Url=['../../tiles/5/singapore19-14.x3d'],child4Url=['../../tiles/5/singapore19-15.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore9-7.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.3694340860038916,103.79091847780627,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[47,47,49,52,55,51,50,50,49,48,47,52,55,55,52,47,41,43,47,50,52,52,45,39,39,40,42,46,44,41,38,35,34,42,43,35,35,46,46,49,53,55,52,51,50,50,49,49,54,58,58,54,49,45,46,49,51,53,53,48,39,38,39,40,43,42,40,40,36,35,41,40,34,33,46,46,49,54,55,54,53,50,51,51,51,56,61,62,56,52,49,49,51,52,52,54,50,40,37,37,37,39,38,39,40,36,35,40,37,35,33,45,47,50,57,56,55,54,51,51,53,52,56,61,63,57,51,51,51,51,52,52,57,54,41,35,35,34,33,34,37,38,35,34,38,37,34,32,46,49,50,59,57,54,55,53,51,55,53,55,59,63,58,51,52,51,51,51,53,61,58,43,34,33,31,29,31,36,37,32,32,36,36,33,32,50,51,49,57,58,53,54,56,51,56,53,53,57,63,60,52,53,51,48,50,56,63,58,44,34,33,30,27,31,38,41,29,30,33,35,33,32,55,52,48,53,59,52,53,58,52,57,54,53,55,63,63,55,55,50,47,50,59,64,57,45,37,33,30,28,33,41,46,26,28,31,33,34,34,57,54,49,49,57,50,52,58,52,58,57,55,56,64,63,56,56,52,48,54,62,62,54,46,41,36,32,29,34,41,44,27,28,29,33,36,36,56,57,54,48,55,48,52,56,53,58,60,59,58,64,63,57,57,55,52,57,62,57,50,46,45,39,35,31,34,40,39,30,29,29,33,37,39,55,59,58,49,54,48,53,57,54,56,60,61,59,62,62,58,59,57,54,57,58,52,46,46,47,43,39,34,34,41,39,33,31,30,32,37,41,54,60,61,53,53,50,56,57,54,53,58,61,61,60,61,59,59,59,55,53,52,48,43,45,48,47,43,36,35,43,42,35,34,32,31,38,43,56,61,60,54,54,52,60,58,57,54,55,59,60,60,60,59,59,58,54,50,48,44,42,45,48,49,45,38,35,44,44,38,36,33,32,40,46,61,62,56,53,53,52,63,59,61,60,54,54,59,62,61,58,57,55,52,49,46,43,43,44,47,51,46,38,37,45,45,42,39,35,33,42,47,66,62,54,51,51,52,64,62,67,66,55,52,58,62,61,57,53,51,49,49,45,43,44,44,47,50,45,38,39,45,46,44,40,34,33,41,46,69,63,55,48,48,52,63,64,75,73,58,53,56,61,60,56,50,47,47,48,46,45,45,45,47,48,43,39,41,45,46,45,39,30,32,38,41,70,62,56,47,46,52,61,65,81,77,61,56,57,60,60,56,49,45,45,47,48,48,47,46,48,47,41,39,44,47,47,46,38,30,33,35,37,68,61,57,49,43,51,59,65,82,79,64,61,60,59,59,57,49,44,44,46,49,51,50,49,48,45,40,39,47,51,49,48,38,34,36,33,35,65,58,58,52,44,50,56,63,80,77,65,65,61,58,58,56,49,43,42,46,52,55,54,51,47,43,38,41,49,53,50,47,37,39,40,34,35,62,55,58,55,47,50,54,61,75,72,63,65,59,54,56,56,48,40,41,46,55,59,56,51,44,39,37,42,50,53,49,44,38,45,45,37,38,61,55,61,58,51,52,53,59,69,66,62,65,57,50,53,55,48,40,39,47,56,61,58,51,43,39,38,43,51,52,48,41,38,49,48,39,39,61,58,69,62,55,56,57,57,61,60,60,64,55,46,49,54,48,39,39,47,56,60,58,50,44,44,42,43,51,51,45,39,41,50,49,42,40,64,62,75,64,57,61,60,56,55,55,58,63,53,44,46,52,49,39,38,47,55,58,57,51,47,49,46,46,52,50,43,38,42,51,51,43,41,69,68,76,65,56,64,64,57,52,52,58,63,54,46,45,50,47,40,38,44,51,54,55,52,51,53,50,51,54,50,41,39,43,51,51,44,44,74,73,76,65,56,66,67,57,49,48,55,61,54,48,45,47,45,39,37,43,49,53,55,54,53,54,53,55,56,51,41,39,45,50,51,46,46,80,78,73,63,56,65,64,56,48,44,50,55,52,49,45,43,42,37,37,45,52,55,56,56,53,50,51,55,59,55,45,42,48,51,51,49,49,82,82,73,65,57,64,62,57,48,42,45,50,51,50,46,41,39,36,37,46,54,56,55,57,53,47,50,55,61,58,46,45,50,52,50,49,51,80,80,77,71,61,64,63,59,52,44,43,45,49,51,49,42,38,35,37,46,53,52,52,54,52,46,47,54,59,56,44,45,54,53,47,47,48,76,78,79,75,63,66,66,64,57,47,42,42,47,52,51,42,37,34,36,43,49,49,49,52,51,45,45,52,56,54,43,45,56,55,46,45,45,69,76,80,75,65,70,73,74,63,49,43,40,45,50,50,43,37,32,33,39,44,45,48,51,49,45,44,48,52,51,43,46,57,59,48,44,43,65,74,79,74,67,73,77,81,68,52,45,40,43,48,48,42,36,31,31,36,39,43,47,49,48,46,43,45,49,48,44,46,57,62,52,44,42,66,71,75,73,67,73,76,81,71,56,51,44,41,43,43,40,35,30,32,37,40,44,47,48,47,46,43,43,47,48,45,45,54,61,57,47,44,67,69,73,72,66,71,73,78,72,60,56,47,40,39,38,37,34,30,32,38,42,45,48,46,46,45,42,41,45,48,47,45,50,60,60,50,46,68,66,71,71,65,66,66,71,69,63,59,49,40,37,36,35,34,31,33,38,42,46,48,44,44,44,39,39,44,49,50,46,48,57,59,53,49,68,64,69,71,63,60,59,63,65,64,60,50,40,36,35,35,34,32,33,38,42,47,47,42,42,42,38,38,43,50,53,48,46,55,59,55,53,66,62,69,72,60,55,54,56,59,60,58,50,42,37,36,36,35,33,33,36,41,46,45,40,40,42,39,41,44,50,53,50,47,54,60,58,54,63,62,70,72,59,51,49,51,54,57,56,51,44,39,37,37,35,33,33,34,38,45,43,38,39,41,42,44,45,49,53,53,49,55,62,60,55,60,63,72,73,59,50,46,49,53,57,60,54,46,40,39,38,36,34,32,33,37,43,42,37,38,41,44,48,48,49,53,55,55,60,65,61,56,57,64,74,72,60,49,44,51,55,59,66,59,49,43,41,40,38,34,32,31,35,43,42,37,38,41,45,50,51,50,53,58,60,65,68,62,56,55,64,73,68,61,51,48,58,61,64,73,67,54,49,48,44,41,35,32,30,33,40,42,37,36,38,44,50,52,51,55,61,63,66,70,61,55,54,64,70,64,60,53,53,65,69,70,79,74,61,56,54,49,43,36,32,30,32,39,42,37,34,36,42,48,52,54,57,63,63,66,70,60,54,55,63,63,58,57,52,54,68,74,73,79,78,69,65,60,51,44,37,32,30,31,38,42,37,32,34,41,46,52,56,61,64,61,62,67,57,52,58,63,58,54,54,50,54,68,76,73,76,78,76,73,65,53,46,38,33,31,31,36,41,37,32,34,40,45,52,59,65,65,59,57,61,54,49,62,64,57,54,52,48,52,66,73,70,72,78,80,78,68,54,46,39,33,31,30,34,39,35,31,35,41,46,53,62,66,64,57,53,54,48,44,66,67,60,58,52,45,49,62,67,65,68,76,82,79,69,55,46,40,35,32,30,33,36,32,31,37,43,47,55,63,65,62,56,50,47,41,39],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
