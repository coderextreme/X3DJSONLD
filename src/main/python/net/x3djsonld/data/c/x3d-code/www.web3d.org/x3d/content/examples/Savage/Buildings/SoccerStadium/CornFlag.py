###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Interchange',version='3.0',
  head=head(
    children=[
    meta(content='CornFlag.x3d',name='title'),
    meta(content='Corn Flag',name='description'),
    meta(content='LT Christos Kalogrias - Hellenic Navy',name='creator'),
    meta(content='12 November 2003',name='created'),
    meta(content='25 July 2009',name='modified'),
    meta(content='https://savage.nps.edu/Savage/Buildings/SoccerStadium/CornFlag.x3d',name='identifier'),
    meta(content='X3D-Edit 3.2, https://savage.nps.edu/X3D-Edit',name='generator'),
    meta(content='../../license.html',name='license')]),
  Scene=Scene(
    children=[
    Transform(DEF='CornFlag1',
      children=[
      Transform(scale=(1.333,2,1),translation=(0,1,0),
        children=[
        Group(
          children=[
          Transform(
            children=[
            Shape(
              geometry=IndexedFaceSet(DEF='Flag',convex=False,coordIndex=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,0],solid=False,
                coord=Coordinate(DEF='FlagCoor',point=[(0.0,0.0,0.0),(0.5,0.0,0.0),(1.0,0.0,0.0),(1.5,0.0,0.0),(2.0,0.0,0.0),(2.5,0.0,0.0),(3.0,0.0,0.0),(3.5,0.0,0.0),(4.0,0.0,0.0),(4.5,0.0,0.0),(5.0,0.0,0.0),(5.5,0.0,0.0),(6.0,0.0,0.0),(6.5,0.0,0.0),(7.0,0.0,0.0),(7.5,0.0,0.0),(7.5,0.5,0.0),(7.5,1.0,0.0),(7.5,1.5,0.0),(7.5,2.0,0.0),(7.5,2.5,0.0),(7.5,3.0,0.0),(7.5,3.5,0.0),(7.5,4.0,0.0),(7.5,4.5,0.0),(7.5,5.0,0.0),(7.0,5.0,0.0),(6.5,5.0,0.0),(6.0,5.0,0.0),(5.5,5.0,0.0),(5.0,5.0,0.0),(4.5,5.0,0.0),(4.0,5.0,0.0),(3.5,5.0,0.0),(3.0,5.0,0.0),(2.5,5.0,0.0),(2.0,5.0,0.0),(1.5,5.0,0.0),(1.0,5.0,0.0),(0.5,5.0,0.0),(0.0,5.0,0.0),(0.0,4.5,0.0),(0.0,4.0,0.0),(0.0,3.5,0.0),(0.0,3.0,0.0),(0.0,2.5,0.0),(0.0,2.0,0.0),(0.0,1.5,0.0),(0.0,1.0,0.0),(0.0,0.5,0.0)])),
              appearance=Appearance(
                material=Material(diffuseColor=(0.8,0.2,0.2),shininess=0.8),
                texture=ImageTexture(url=["./aek6.jpg","https://savage.nps.edu/Savage/Buildings/SoccerStadium/aek6.jpgwrl"]),
                textureTransform=TextureTransform(translation=(0.0,0.01)))),
            TimeSensor(DEF='timer',cycleInterval=4.0,loop=True),
            CoordinateInterpolator(DEF='MoveFlag',key=[0.0,0.25,0.5,0.75,1.0],keyValue=[(0.0,0.0,0.00),(0.5,0.0,0.087),(1.0,0.0,.100),(1.5,0.0,0.087),(2.0,0.0,0.00),(2.5,0.0,-0.087),(3.0,0.0,-.100),(3.5,0.0,-0.087),(4.0,0.0,0.0),(4.5,0.0,0.087),(5.0,0.0,.10),(5.5,0.0,0.087),(6.0,0.0,0.0),(6.5,0.0,-0.087),(7.0,0.0,-.10),(7.5,0.0,-0.087),(7.5,0.5,-0.087),(7.5,1.0,-0.087),(7.5,1.5,-0.087),(7.5,2.0,-0.087),(7.5,2.5,-0.087),(7.5,3.0,-0.087),(7.5,3.5,-0.087),(7.5,4.0,-0.087),(7.5,4.5,-0.087),(7.5,5.0,-0.087),(7.0,5.0,-.10),(6.5,5.0,-0.087),(6.0,5.0,0.0),(5.5,5.0,0.087),(5.0,5.0,.10),(4.5,5.0,0.087),(4.0,5.0,0.0),(3.5,5.0,-0.087),(3.0,5.0,-.10),(2.5,5.0,-0.087),(2.0,5.0,0.0),(1.5,5.0,0.087),(1.0,5.0,.10),(0.5,5.0,0.087),(0.0,5.0,0.0),(0.0,4.5,0.0),(0.0,4.0,0.0),(0.0,3.5,0.0),(0.0,3.0,0.0),(0.0,2.5,0.0),(0.0,2.0,0.0),(0.0,1.5,0.0),(0.0,1.0,0.0),(0.0,0.5,0.0),(0.0,0.0,0.0),(0.0,0.0,0.0),(0.5,0.0,-0.087),(1.0,0.0,-.10),(1.5,0.0,-0.087),(2.0,0.0,0.0),(2.5,0.0,0.087),(3.0,0.0,.10),(3.5,0.0,0.087),(4.0,0.0,0.0),(4.5,0.0,-0.087),(5.0,0.0,-.10),(5.5,0.0,-0.087),(6.0,0.0,0.0),(6.5,0.0,0.087),(7.0,0.0,.10),(7.5,0.0,0.087),(7.5,0.5,0.087),(7.5,1.0,0.087),(7.5,1.5,0.087),(7.5,2.0,0.087),(7.5,2.5,0.087),(7.5,3.0,0.087),(7.5,3.5,0.087),(7.5,4.0,0.087),(7.5,4.5,0.087),(7.5,5.0,0.087),(7.0,5.0,.10),(6.5,5.0,0.087),(6.0,5.0,0.0),(5.5,5.0,-0.087),(5.0,5.0,-.10),(4.5,5.0,-0.087),(4.0,5.0,0.0),(3.5,5.0,0.087),(3.0,5.0,.10),(2.5,5.0,0.087),(2.0,5.0,0.0),(1.5,5.0,-0.087),(1.0,5.0,-.10),(0.5,5.0,-0.087),(0.0,5.0,0.0),(0.0,4.5,0.0),(0.0,4.0,0.0),(0.0,3.5,0.0),(0.0,3.0,0.0),(0.0,2.5,0.0),(0.0,2.0,0.0),(0.0,1.5,0.0),(0.0,1.0,0.0),(0.0,0.5,0.0),(0.0,0.0,0.0),(0.0,0.0,0.0),(0.5,0.0,0.087),(1.0,0.0,.10),(1.5,0.0,0.087),(2.0,0.0,0.0),(2.5,0.0,-0.087),(3.0,0.0,-.10),(3.5,0.0,-0.087),(4.0,0.0,0.0),(4.5,0.0,0.087),(5.0,0.0,.10),(5.5,0.0,0.087),(6.0,0.0,0.0),(6.5,0.0,-0.087),(7.0,0.0,-.10),(7.5,0.0,-0.087),(7.5,0.5,-0.087),(7.5,1.0,-0.087),(7.5,1.5,-0.087),(7.5,2.0,-0.087),(7.5,2.5,-0.087),(7.5,3.0,-0.087),(7.5,3.5,-0.087),(7.5,4.0,-0.087),(7.5,4.5,-0.087),(7.5,5.0,-0.087),(7.0,5.0,-.10),(6.5,5.0,-0.087),(6.0,5.0,0.0),(5.5,5.0,0.087),(5.0,5.0,.10),(4.5,5.0,0.087),(4.0,5.0,0.0),(3.5,5.0,-0.087),(3.0,5.0,-.10),(2.5,5.0,-0.087),(2.0,5.0,0.0),(1.5,5.0,0.087),(1.0,5.0,.10),(0.5,5.0,0.087),(0.0,5.0,0.0),(0.0,4.5,0.0),(0.0,4.0,0.0),(0.0,3.5,0.0),(0.0,3.0,0.0),(0.0,2.5,0.0),(0.0,2.0,0.0),(0.0,1.5,0.0),(0.0,1.0,0.0),(0.0,0.5,0.0),(0.0,0.0,0.0),(0.0,0.0,0.0),(0.5,0.0,-0.087),(1.0,0.0,-.10),(1.5,0.0,-0.087),(2.0,0.0,0.0),(2.5,0.0,0.087),(3.0,0.0,.10),(3.5,0.0,0.087),(4.0,0.0,0.0),(4.5,0.0,-0.087),(5.0,0.0,-.10),(5.5,0.0,-0.087),(6.0,0.0,0.0),(6.5,0.0,0.087),(7.0,0.0,.10),(7.5,0.0,0.087),(7.5,0.5,0.087),(7.5,1.0,0.087),(7.5,1.5,0.087),(7.5,2.0,0.087),(7.5,2.5,0.087),(7.5,3.0,0.087),(7.5,3.5,0.087),(7.5,4.0,0.087),(7.5,4.5,0.087),(7.5,5.0,0.087),(7.0,5.0,.10),(6.5,5.0,0.087),(6.0,5.0,0.0),(5.5,5.0,-0.087),(5.0,5.0,-.10),(4.5,5.0,-0.087),(4.0,5.0,0.0),(3.5,5.0,0.087),(3.0,5.0,.10),(2.5,5.0,0.087),(2.0,5.0,0.0),(1.5,5.0,-0.087),(1.0,5.0,-1.0),(0.5,5.0,-0.087),(0.0,5.0,0.0),(0.0,4.5,0.0),(0.0,4.0,0.0),(0.0,3.5,0.0),(0.0,3.0,0.0),(0.0,2.5,0.0),(0.0,2.0,0.0),(0.0,1.5,0.0),(0.0,1.0,0.0),(0.0,0.5,0.0),(0.0,0.0,0.0),(0.0,0.0,0.0),(0.5,0.0,0.087),(1.0,0.0,.10),(1.5,0.0,0.087),(2.0,0.0,0.0),(2.5,0.0,-0.087),(3.0,0.0,-.10),(3.5,0.0,-0.087),(4.0,0.0,0.0),(4.5,0.0,0.087),(5.0,0.0,.10),(5.5,0.0,0.087),(6.0,0.0,0.0),(6.5,0.0,-0.087),(7.0,0.0,-.10),(7.5,0.0,-0.087),(7.5,0.5,-0.087),(7.5,1.0,-0.087),(7.5,1.5,-0.087),(7.5,2.0,-0.087),(7.5,2.5,-0.087),(7.5,3.0,-0.087),(7.5,3.5,-0.087),(7.5,4.0,-0.087),(7.5,4.5,-0.087),(7.5,5.0,-0.087),(7.0,5.0,-.10),(6.5,5.0,-0.087),(6.0,5.0,0.0),(5.5,5.0,0.087),(5.0,5.0,.10),(4.5,5.0,0.087),(4.0,5.0,0.0),(3.5,5.0,-0.087),(3.0,5.0,-.10),(2.5,5.0,-0.087),(2.0,5.0,0.0),(1.5,5.0,0.087),(1.0,5.0,.10),(0.5,5.0,0.087),(0.0,5.0,0.0),(0.0,4.5,0.0),(0.0,4.0,0.0),(0.0,3.5,0.0),(0.0,3.0,0.0),(0.0,2.5,0.0),(0.0,2.0,0.0),(0.0,1.5,0.0),(0.0,1.0,0.0),(0.0,0.5,0.0),(0.0,0.0,0.0)])])]),
        ROUTE(fromField='fraction_changed',fromNode='timer',toField='set_fraction',toNode='MoveFlag'),
        ROUTE(fromField='value_changed',fromNode='MoveFlag',toField='set_point',toNode='FlagCoor')])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful for CornFlag.py")
