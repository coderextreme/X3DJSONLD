###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_1011',geoSystem=['GDC'],position=(1.3956292231378735,103.92018578496744,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.3956292231378735,103.92018578496744,0.0),range=4101.627,child1Url=['../../tiles/5/singapore20-22.x3d'],child2Url=['../../tiles/5/singapore20-23.x3d'],child3Url=['../../tiles/5/singapore21-22.x3d'],child4Url=['../../tiles/5/singapore21-23.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore10-11.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.3868975107598795,103.90582275083842,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=45,zSpacing=3.96896E-4,height=[24,21,16,14,10,10,11,10,9,8,6,5,5,11,24,37,42,44,40,27,11,5,6,6,6,6,7,7,6,6,6,7,6,6,6,6,6,20,19,16,14,11,12,11,10,8,7,7,6,5,10,23,38,44,45,40,25,11,6,6,6,6,6,7,6,6,6,5,7,6,5,6,6,6,19,16,13,12,12,14,11,8,6,5,7,8,6,9,22,38,46,47,39,24,12,8,7,6,6,7,7,6,6,6,6,6,6,5,6,6,5,19,14,11,10,12,14,10,6,6,6,8,9,6,8,20,37,47,47,38,23,12,9,8,6,6,7,7,7,6,7,6,6,5,5,6,6,5,23,14,9,9,12,13,9,5,7,8,9,9,6,6,19,36,47,47,36,21,12,12,10,6,7,7,7,7,7,7,7,7,5,6,7,6,6,25,16,9,8,12,12,9,6,8,10,10,9,7,5,15,33,46,46,34,19,13,15,13,8,8,7,7,7,7,7,7,7,5,5,7,6,6,27,19,10,11,13,12,9,9,10,10,11,10,8,5,12,29,43,45,32,17,13,18,18,11,8,7,7,8,7,8,7,6,5,5,7,6,7,26,20,12,14,14,13,10,10,12,10,10,11,8,6,11,23,38,41,28,14,12,20,21,14,8,7,8,8,7,7,7,7,5,5,7,7,7,22,17,14,17,16,14,9,10,13,10,10,11,8,7,11,19,33,36,23,11,12,21,24,16,9,8,8,9,8,7,7,8,7,7,8,8,8,18,15,14,19,16,15,9,10,15,12,11,10,8,8,11,15,27,29,17,9,13,22,24,17,9,8,9,9,8,7,6,8,8,8,10,10,9,16,13,14,18,15,15,10,11,17,15,11,10,8,7,9,12,21,21,14,10,14,21,22,14,9,8,9,9,8,7,7,7,8,9,13,12,10,15,13,16,17,13,14,10,11,18,17,11,9,8,7,8,9,15,15,10,10,14,19,18,12,8,7,8,8,8,7,7,7,8,10,13,13,11,18,17,18,14,10,12,10,10,16,16,11,9,9,8,7,7,10,10,9,10,14,16,15,10,7,7,6,7,8,8,7,7,7,9,13,13,11,22,20,20,11,9,11,9,10,16,15,11,8,9,8,7,6,7,8,8,10,12,13,11,9,7,7,6,6,8,8,8,7,7,9,11,12,10,28,25,20,12,10,12,10,12,16,15,10,8,9,8,8,7,9,9,7,9,9,9,10,8,7,8,8,6,8,9,9,8,7,8,9,11,9,29,25,20,13,12,12,13,15,17,14,10,8,9,7,9,8,10,10,7,8,7,7,9,9,8,10,9,7,8,10,9,8,7,8,8,9,8,23,18,17,14,14,15,19,21,16,11,9,9,9,7,9,8,9,10,8,7,7,7,9,10,11,13,12,9,9,9,9,9,8,9,9,9,9,18,14,16,16,16,18,22,24,15,10,9,8,9,6,8,8,9,10,8,6,6,7,9,10,13,15,14,11,9,9,9,8,8,9,9,9,9,16,18,20,17,21,23,21,19,13,9,7,8,9,6,8,8,9,10,8,5,5,7,8,9,12,15,17,14,11,10,9,7,8,9,9,8,8,16,21,24,18,24,27,20,15,11,9,6,7,9,6,7,8,9,9,7,4,5,7,7,8,11,15,18,17,13,10,9,7,8,9,9,8,8,19,25,26,19,23,23,19,14,10,9,7,7,9,7,8,9,8,7,6,3,5,8,7,7,9,14,19,19,15,10,8,8,9,9,9,8,7,22,29,29,21,21,19,17,13,9,9,8,7,9,8,8,9,7,6,5,2,5,8,6,6,8,14,20,21,16,10,8,8,9,9,9,7,7,28,33,33,25,17,14,14,11,8,9,8,8,9,8,9,9,7,6,5,4,6,8,7,7,9,15,21,22,16,10,8,8,8,8,8,6,6,33,35,37,29,15,10,12,11,7,9,8,7,8,9,8,8,7,6,6,5,6,7,7,7,9,15,22,22,15,11,8,8,8,7,6,6,6,38,33,36,29,17,10,11,11,8,9,8,6,8,8,7,8,8,7,7,5,6,8,7,7,9,13,19,19,13,10,9,8,7,7,6,6,9,42,31,34,28,19,12,10,11,9,10,8,5,7,8,7,8,8,7,7,5,6,9,7,6,9,12,16,16,11,10,10,8,7,7,6,7,10,39,30,30,26,18,12,10,11,9,10,9,6,6,7,8,8,8,7,7,6,6,8,7,6,8,11,14,11,9,9,9,8,7,6,5,6,9,35,29,27,23,17,11,9,11,9,9,10,6,5,7,8,8,8,7,7,7,6,7,7,5,7,11,12,6,7,8,8,7,6,6,5,6,7,35,30,26,19,13,8,6,9,8,8,8,4,5,7,8,8,8,8,8,8,7,7,6,5,6,13,14,0,5,6,7,6,2,5,7,10,9,35,31,25,16,10,6,5,8,7,7,6,3,4,7,8,8,8,8,9,9,8,7,5,5,6,14,15,-6,3,3,5,4,0,5,9,13,11,32,31,23,13,8,6,6,8,7,7,6,5,5,7,8,8,9,8,9,9,8,6,5,5,7,12,12,-3,-1,-3,0,0,0,4,10,13,12,29,31,21,12,7,7,7,9,8,8,8,7,7,8,7,9,9,8,9,9,7,6,4,5,6,8,7,0,-7,-10,-3,-2,0,3,10,12,13,22,24,18,13,9,9,9,9,7,8,8,7,8,8,7,7,7,7,8,8,6,5,5,5,6,7,6,-1,-10,-12,-5,-3,-1,2,9,12,13,15,16,15,14,11,11,10,9,7,8,8,7,8,7,6,6,6,6,7,7,6,5,5,5,6,6,5,-3,-12,-9,-5,-3,-1,2,8,12,12,13,14,14,14,12,10,9,9,8,8,8,8,9,7,6,6,6,6,6,5,4,5,6,6,6,6,4,-1,-6,-4,-2,-1,-1,2,7,11,12,14,14,13,14,12,10,8,9,9,9,8,8,9,7,5,6,7,7,6,3,3,5,7,8,7,7,4,0,0,0,0,0,0,2,6,11,12,15,13,13,14,13,10,8,9,10,10,8,8,8,7,6,6,7,7,6,2,2,4,7,10,8,7,5,2,3,2,1,2,4,4,6,10,11,15,13,12,14,14,11,11,11,11,11,8,8,7,8,7,7,7,7,5,2,1,3,8,11,9,7,5,3,3,2,2,5,7,7,6,9,10,15,13,12,13,13,12,12,12,12,10,8,8,7,8,7,6,7,7,4,3,2,4,8,11,9,7,4,4,5,4,4,6,9,8,7,8,10,14,13,12,11,12,12,12,13,12,10,8,7,8,8,7,6,6,5,5,5,5,6,8,11,9,7,4,4,6,7,6,8,9,9,8,8,9,15,14,11,11,11,11,11,12,11,9,7,7,8,8,6,5,5,5,5,5,4,5,8,10,9,6,4,4,6,9,9,9,9,9,9,8,9,18,15,11,11,10,10,9,9,8,7,7,8,8,8,6,4,4,4,4,4,3,4,8,9,7,5,5,5,6,10,12,10,9,9,9,9,8,19,16,11,10,9,9,8,7,6,6,7,8,8,7,6,3,3,4,4,3,3,3,7,8,6,5,5,5,7,12,14,12,9,9,9,9,8,21,16,12,10,8,9,8,7,5,6,7,8,8,6,5,3,4,4,3,3,4,5,5,7,6,5,5,5,8,15,15,13,11,9,9,9,9,22,17,13,10,8,9,8,7,5,6,7,8,8,6,6,4,5,2,2,3,4,4,4,6,5,5,4,5,10,15,15,14,12,10,9,9,9],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
