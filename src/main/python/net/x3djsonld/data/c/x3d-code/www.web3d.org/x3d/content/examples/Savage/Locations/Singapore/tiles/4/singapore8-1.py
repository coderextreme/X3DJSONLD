###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_81',geoSystem=['GDC'],position=(1.3607023736258976,103.63292510238706,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.3607023736258976,103.63292510238706,0.0),range=4101.627,child1Url=['../../tiles/5/singapore16-2.x3d'],child2Url=['../../tiles/5/singapore16-3.x3d'],child3Url=['../../tiles/5/singapore17-2.x3d'],child4Url=['../../tiles/5/singapore17-3.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore8-1.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.3519706612479037,103.61856206825804,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[7,13,19,17,14,8,5,5,5,6,8,8,9,9,10,9,-8,-22,-18,-16,-13,-1,15,35,45,36,28,21,12,9,8,9,14,22,22,34,34,10,17,19,16,11,6,5,5,6,6,7,8,8,8,8,5,-8,-20,-19,-16,-15,-4,20,42,47,41,31,19,12,11,9,10,19,27,23,30,32,13,19,17,14,7,4,5,5,6,6,6,7,7,7,6,4,-6,-17,-19,-17,-17,-5,24,47,48,44,31,17,12,12,10,11,23,31,25,28,32,17,19,16,10,4,4,6,6,6,6,6,6,6,6,6,4,-3,-14,-18,-17,-17,-5,26,49,49,43,27,13,11,13,13,16,24,30,29,30,36,19,17,14,6,2,4,6,6,6,6,6,6,6,6,6,5,0,-10,-17,-17,-17,-3,26,46,44,37,21,10,11,12,15,21,25,27,30,32,39,19,16,11,3,0,4,6,6,6,6,6,6,6,6,6,6,2,-5,-14,-17,-15,-1,24,39,33,23,14,9,10,12,18,26,23,21,25,28,36,17,14,7,1,1,6,7,7,6,6,6,6,5,6,6,6,5,-1,-11,-15,-12,0,20,29,21,11,8,8,10,12,20,29,22,15,19,23,30,16,12,4,0,4,8,7,7,6,6,6,5,4,5,6,6,6,2,-6,-13,-10,1,15,19,13,7,7,7,9,13,20,31,24,13,14,19,27,15,9,3,1,9,10,7,7,7,6,5,4,3,5,5,6,6,5,-1,-9,-8,2,10,11,10,7,7,7,9,13,20,31,26,12,12,17,24,13,8,2,4,14,11,8,7,7,6,4,3,2,3,5,6,6,6,2,-4,-5,3,8,8,9,8,7,7,9,12,20,33,27,11,12,17,22,13,8,2,8,18,11,9,7,7,5,2,2,2,2,4,5,6,6,5,0,-1,3,8,8,9,9,8,7,8,10,20,32,25,11,12,17,20,13,9,3,13,18,11,9,9,8,3,1,1,1,1,3,5,6,6,6,3,1,4,7,7,8,9,9,8,6,7,16,25,19,10,10,14,15,14,12,7,17,16,13,10,12,9,1,0,0,0,0,2,5,6,6,6,5,4,5,7,7,8,9,9,9,4,4,10,15,12,8,7,10,10,13,13,10,17,14,14,12,17,14,1,0,0,0,0,1,6,8,6,6,6,5,5,6,6,7,8,9,9,2,1,7,8,5,7,7,7,7,11,13,12,14,12,14,16,25,21,2,-1,-1,0,0,2,8,10,7,6,5,5,5,5,6,6,7,9,7,0,1,5,3,2,8,8,5,6,8,13,14,13,10,12,21,32,24,4,-1,-2,-1,0,5,10,11,8,7,5,4,4,4,5,5,5,7,6,0,1,3,4,5,10,9,5,5,6,11,14,13,9,10,25,37,26,8,0,-2,0,2,9,11,11,9,7,5,3,3,4,4,4,3,4,5,0,0,2,7,11,13,11,6,5,5,10,12,12,10,11,24,34,24,9,0,-1,0,5,11,12,10,8,7,5,3,2,3,3,3,2,2,4,1,0,3,7,13,14,13,7,6,5,9,9,10,11,13,19,24,19,8,2,1,3,9,11,11,9,7,7,5,3,2,2,2,1,1,2,3,1,2,4,6,12,13,13,9,7,5,8,7,8,10,14,16,16,13,6,4,4,7,11,12,10,8,7,7,5,3,1,1,1,1,1,2,2,2,3,4,5,9,12,13,9,8,5,7,6,7,9,14,14,12,8,5,5,7,10,11,11,9,7,7,6,6,3,1,1,1,1,1,2,2,3,4,4,3,6,10,12,8,7,5,6,6,8,8,14,14,10,5,5,7,10,12,12,10,8,7,7,6,5,3,1,1,1,1,1,1,2,4,4,3,3,4,8,11,8,7,6,6,7,9,7,13,16,12,7,6,8,12,12,11,9,7,7,6,6,5,2,1,1,1,1,1,1,3,5,4,3,3,3,4,8,7,6,7,6,7,9,8,12,15,13,9,8,10,12,12,10,8,7,7,6,5,4,2,1,1,1,1,1,2,4,4,3,3,3,3,2,6,6,5,7,7,8,9,9,10,13,13,11,10,12,12,11,9,7,7,6,6,5,3,3,1,1,1,1,1,2,4,4,3,3,2,2,2,3,5,5,8,8,8,9,10,10,11,12,12,12,13,12,10,8,7,7,6,5,4,3,2,1,0,0,1,2,3,4,3,3,2,2,2,2,2,4,5,8,8,9,10,10,11,10,11,13,14,13,11,9,7,7,6,6,5,3,3,2,0,0,0,1,2,4,4,3,3,2,2,2,2,2,4,4,8,8,9,10,10,10,8,9,12,14,13,11,9,7,7,6,5,4,3,2,1,0,0,1,3,3,4,3,3,2,2,2,2,2,2,3,4,8,9,9,9,9,8,7,7,10,14,15,12,9,7,7,6,5,3,3,2,0,0,0,4,7,4,4,3,3,2,2,2,2,2,2,3,3,8,9,8,8,8,8,7,5,8,13,16,13,10,8,7,6,4,3,2,1,0,0,2,7,10,5,3,3,2,2,2,2,2,2,2,3,3,9,10,8,7,8,8,6,4,5,10,14,13,11,9,7,5,4,3,2,0,0,0,5,10,11,7,3,3,2,2,2,2,2,3,4,4,4,10,9,7,7,8,8,6,4,5,8,12,14,12,11,8,5,4,3,1,0,0,2,7,12,12,9,4,3,2,2,2,2,3,4,5,5,4,11,8,6,6,8,8,7,5,6,8,9,13,14,13,10,6,4,2,1,0,2,5,10,12,12,10,6,3,2,2,2,4,6,6,6,6,6,12,8,5,7,7,7,7,6,6,8,8,11,14,15,11,7,4,2,1,1,3,8,12,12,11,10,7,3,2,2,3,5,7,8,8,8,8,11,10,8,8,6,6,6,6,7,9,8,9,13,16,14,10,6,2,1,3,6,10,12,12,11,9,7,4,2,2,4,6,8,8,8,8,8,10,11,10,10,6,6,6,6,8,9,8,7,12,16,16,13,8,4,3,5,9,12,12,11,10,8,5,4,3,3,5,7,8,8,8,8,8,10,11,9,11,6,5,5,5,8,9,7,6,9,12,15,15,11,7,7,8,10,12,12,11,9,7,5,4,3,4,6,7,8,8,8,8,8,9,9,9,11,7,5,5,6,8,9,7,6,7,9,13,16,13,11,10,10,11,12,11,10,8,5,4,4,3,4,6,8,8,8,8,8,8,8,9,10,12,9,7,6,7,8,8,6,6,7,7,11,16,16,13,11,11,12,12,11,9,7,5,4,3,3,4,6,8,8,8,8,8,8,7,9,10,12,10,9,8,9,9,8,6,6,7,7,9,15,17,15,13,12,12,11,10,8,5,4,4,3,4,5,6,8,8,8,8,8,8,8,9,10,11,10,10,9,11,10,9,7,7,8,7,8,12,16,17,15,12,11,11,9,7,5,4,3,3,4,5,6,8,8,8,8,8,8,8,9,9,10,11,11,11,11,11,10,9,8,9,7,6,9,13,17,16,13,11,10,8,5,4,4,3,4,5,5,6,8,8,8,8,8,8,9,8,8,10,10,10,11,10,10,10,10,10,10,8,6,7,10,14,17,15,11,9,7,5,4,3,3,4,5,5,6,8,8,8,8,8,7,11,8,7,10,10,10,10,10,9,11,11,12,11,9,7,6,7,11,16,16,12,8,6,4,4,3,4,5,5,6,7,8,8,8,8,7,6],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
