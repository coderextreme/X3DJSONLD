###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_27',geoSystem=['GDC'],position=(1.25592182508997,103.80528151193529,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.25592182508997,103.80528151193529,0.0),range=4101.627,child1Url=['../../tiles/5/singapore4-14.x3d'],child2Url=['../../tiles/5/singapore4-15.x3d'],child3Url=['../../tiles/5/singapore5-14.x3d'],child4Url=['../../tiles/5/singapore5-15.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore2-7.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.247190112711976,103.79091847780627,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[0,1,1,1,2,4,2,4,4,4,4,9,6,4,3,1,0,0,6,11,10,4,-4,-10,-9,-4,-1,0,2,6,7,7,6,5,5,5,5,0,1,1,2,3,3,3,8,11,10,5,6,6,4,2,1,0,0,2,9,11,8,0,-7,-8,-4,0,3,7,7,7,7,6,5,5,5,5,1,1,1,2,4,3,4,9,12,12,6,5,6,3,2,2,1,0,0,6,11,10,4,-2,-4,0,2,7,9,8,7,7,7,6,5,5,5,1,1,2,3,4,3,6,8,10,11,7,4,4,3,2,2,1,0,0,2,8,11,8,4,3,4,6,9,10,9,7,7,7,6,6,5,5,1,1,2,4,3,4,6,6,8,9,7,4,3,3,2,2,2,1,0,0,6,10,8,8,8,8,9,10,11,10,8,7,7,7,6,5,5,1,1,3,4,3,5,6,6,7,8,7,4,3,3,2,2,2,1,0,0,2,7,7,7,9,9,9,10,11,10,9,8,7,7,7,7,6,1,2,4,4,4,5,6,7,7,7,7,5,3,3,2,2,2,2,1,0,0,4,5,5,8,9,9,9,11,11,10,9,8,7,8,9,7,2,3,4,4,4,6,6,7,7,7,7,5,3,3,2,2,2,2,1,0,0,1,3,4,6,9,9,9,10,11,11,9,9,9,9,9,9,2,4,4,5,5,6,7,7,7,7,7,6,4,3,2,2,2,2,2,1,0,0,2,2,5,8,9,9,10,11,11,10,9,10,10,10,11,3,4,4,5,6,6,7,7,7,7,7,6,4,3,2,2,2,2,2,1,1,1,2,2,4,6,9,9,10,11,11,11,10,11,11,14,14,4,4,5,6,6,7,7,7,7,7,7,7,5,3,3,2,2,2,2,2,3,3,2,2,2,5,8,9,10,11,11,12,11,12,12,18,17,4,4,5,6,6,7,7,7,7,7,7,7,6,4,3,2,4,6,6,6,5,4,3,2,2,3,6,9,10,12,12,12,16,18,16,22,23,4,5,6,6,7,7,7,7,7,7,7,7,7,5,3,3,9,11,10,8,7,5,4,2,2,2,5,8,10,12,13,14,21,25,21,26,28,4,5,6,6,7,7,7,7,7,7,7,7,7,6,5,9,16,17,13,9,8,6,4,3,2,2,3,7,10,13,15,21,32,34,28,31,33,5,6,6,7,7,7,7,7,7,7,7,7,7,7,7,14,24,24,15,11,9,7,5,4,3,2,2,5,10,13,17,28,42,42,34,34,35,5,6,6,7,7,7,7,7,7,7,7,7,7,6,8,17,25,26,20,13,9,8,6,5,4,3,2,4,9,14,20,31,44,45,37,30,30,6,6,7,7,7,7,7,7,7,7,7,7,7,5,8,19,25,28,24,15,10,9,7,5,5,4,3,3,8,15,23,34,45,48,39,26,25,6,6,7,7,7,7,7,7,7,7,7,7,7,4,4,13,22,27,26,20,13,10,8,6,5,6,4,5,12,22,31,38,46,47,36,22,19,6,7,7,7,7,7,7,7,7,7,7,7,7,3,0,7,19,25,28,25,16,10,9,7,6,8,6,7,16,29,38,42,48,45,31,19,14,6,7,7,7,7,7,7,7,7,7,7,7,5,1,0,3,13,22,27,26,20,13,10,8,6,8,10,12,21,33,43,43,45,41,30,19,14,7,7,7,7,7,7,7,7,7,7,7,7,3,0,0,0,6,19,25,28,25,15,10,9,7,8,14,17,27,38,47,45,42,37,28,19,15,7,7,7,7,7,7,7,7,7,7,8,7,2,0,0,0,3,13,22,27,27,20,13,10,8,10,16,22,33,46,52,45,38,33,22,16,12,7,7,7,7,7,7,7,7,7,9,10,8,1,0,0,0,0,6,19,26,28,25,16,10,9,11,19,27,40,54,56,45,35,27,17,12,10,7,7,7,7,7,9,17,17,16,12,12,10,4,0,0,0,0,3,13,23,28,27,21,16,15,17,24,34,44,53,52,40,29,21,12,9,9,7,7,7,7,7,12,29,30,25,16,14,14,8,1,0,0,0,0,7,19,27,29,26,23,21,23,31,41,48,50,46,33,21,15,6,6,9,7,9,13,12,10,12,26,32,29,20,16,15,11,4,0,0,0,0,3,14,24,31,34,32,26,22,28,40,45,41,35,25,17,13,8,8,10,7,12,20,19,14,10,21,31,32,25,17,15,14,8,1,0,0,0,0,8,20,32,42,40,30,19,22,37,40,31,23,17,15,13,11,10,10,11,15,21,20,17,11,16,27,32,29,21,16,15,11,4,0,0,0,0,4,18,34,41,39,29,17,18,33,37,28,21,16,16,13,13,13,14,16,18,21,21,20,15,11,21,31,32,25,17,15,13,8,1,0,0,0,0,14,34,38,35,27,15,15,29,35,29,21,17,17,14,16,15,18,17,19,21,22,21,17,12,16,27,32,29,21,16,14,11,4,0,0,0,3,18,33,32,28,24,15,13,23,32,28,21,18,18,15,16,17,19,18,18,20,21,21,19,15,11,21,31,31,25,17,15,13,8,1,0,0,7,24,30,24,21,22,16,12,16,27,28,21,19,17,15,16,18,19,19,18,19,21,22,20,17,12,16,27,32,29,21,16,14,11,4,0,2,14,28,29,22,19,20,16,11,13,22,25,21,19,17,16,16,17,17,19,18,18,20,21,21,19,15,11,21,31,31,25,17,15,13,8,2,6,22,30,28,22,18,17,15,12,11,15,21,20,18,17,17,17,15,14,18,19,18,19,21,22,20,17,12,16,27,32,28,20,15,14,11,5,10,22,28,25,22,18,16,15,12,10,12,17,16,15,16,18,18,15,13,19,19,18,18,20,21,21,19,14,12,21,31,31,24,17,15,13,11,13,19,21,21,20,19,16,15,13,12,13,13,10,11,15,20,19,16,13,16,18,19,18,19,21,21,20,17,12,16,27,31,27,20,15,14,14,14,15,16,16,17,17,16,14,13,14,15,13,9,9,13,20,19,16,13,10,19,19,18,18,20,21,21,19,14,12,21,30,29,23,17,15,15,14,12,10,9,12,15,14,12,12,15,18,15,11,8,11,17,20,16,13,3,16,18,19,18,18,21,21,20,17,12,16,26,30,25,18,15,15,14,10,7,7,9,13,12,11,11,16,19,17,12,9,10,16,21,15,12,-1,10,19,19,18,18,19,21,21,19,14,12,20,29,27,19,15,15,14,10,6,6,10,13,11,9,9,14,17,18,14,9,9,14,21,14,10,-2,3,16,18,19,17,18,21,21,20,17,12,16,25,28,20,16,15,12,8,6,8,12,13,10,8,8,13,16,19,15,9,8,11,19,12,8,0,-1,10,19,19,17,17,19,21,21,19,14,12,20,28,20,15,12,8,6,5,10,13,13,10,7,8,12,15,17,17,9,6,8,14,6,6,1,-3,3,17,18,18,16,17,20,21,20,17,12,15,25,21,16,11,6,5,6,11,15,14,9,7,8,11,13,16,16,9,5,5,9,3,4,3,0,-1,10,18,18,16,15,18,21,21,19,15,13,18,21,23,13,6,5,7,12,16,14,7,6,8,11,12,14,13,11,5,2,3,3,6,5,1,-3,3,16,18,17,14,16,19,21,19,17,14,16,25,25,13,7,6,7,13,19,17,7,5,9,11,11,13,11,11,5,1,1,3,7],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
