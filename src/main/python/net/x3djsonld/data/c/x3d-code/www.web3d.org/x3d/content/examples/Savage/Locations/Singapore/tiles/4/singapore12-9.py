###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_129',geoSystem=['GDC'],position=(1.4305560726498494,103.86273364845137,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.4305560726498494,103.86273364845137,0.0),range=4101.627,child1Url=['../../tiles/5/singapore24-18.x3d'],child2Url=['../../tiles/5/singapore24-19.x3d'],child3Url=['../../tiles/5/singapore25-18.x3d'],child4Url=['../../tiles/5/singapore25-19.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore12-9.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.4218243602718554,103.84837061432235,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[18,17,20,25,22,22,21,15,10,10,10,10,7,3,3,4,6,6,7,8,7,8,9,11,9,5,5,6,6,6,8,9,6,9,11,12,12,17,16,19,25,24,22,23,17,11,11,11,9,6,3,2,5,6,5,5,6,7,8,9,10,8,4,5,6,5,5,6,9,6,9,12,11,12,16,15,18,23,25,21,23,18,11,11,11,8,5,2,2,5,5,5,4,5,7,8,9,10,6,4,4,6,4,5,5,9,7,9,12,10,11,15,14,15,20,21,19,21,17,11,11,11,8,5,2,1,3,5,5,4,5,6,6,8,9,6,5,3,4,3,3,5,7,7,8,9,8,9,15,14,15,17,18,18,19,17,11,11,10,7,4,2,1,2,4,4,4,5,5,7,8,8,7,5,3,2,3,3,5,6,8,7,8,7,7,16,16,17,19,19,19,19,16,12,11,9,7,3,2,1,1,3,3,4,5,7,12,11,6,6,3,1,2,4,5,6,7,8,7,9,8,7,17,18,19,22,19,19,19,16,12,11,8,6,2,2,1,1,2,3,4,5,8,16,14,4,5,2,1,1,5,6,7,8,9,7,9,8,7,20,20,20,21,20,20,19,17,13,11,8,7,5,4,2,1,1,3,5,6,13,18,13,6,4,2,1,3,6,7,7,8,8,8,8,7,6,22,22,20,21,21,20,20,18,14,11,8,7,8,5,2,1,1,3,5,8,17,19,12,7,3,2,2,5,7,8,8,8,7,7,8,6,6,21,21,20,21,21,20,21,19,15,11,8,7,6,5,5,7,8,7,7,13,20,19,13,7,5,4,4,6,7,8,8,8,6,7,8,6,6,19,20,19,22,21,20,21,20,15,11,8,7,3,5,7,12,14,11,9,17,21,17,13,7,6,6,7,6,6,7,8,7,5,6,8,7,6,19,18,18,20,19,18,20,20,16,13,10,8,6,7,9,13,14,11,9,17,21,17,12,8,7,8,8,6,6,7,8,7,7,7,8,7,7,19,17,17,18,18,18,19,21,18,14,11,9,9,9,11,14,14,10,9,16,21,17,12,8,8,9,8,6,5,7,7,7,8,8,8,8,8,20,18,17,16,15,18,21,22,22,17,13,9,9,10,13,14,12,6,6,13,18,16,11,9,9,9,9,7,6,7,7,7,8,7,8,9,9,22,19,17,14,14,19,23,24,25,19,15,10,9,10,14,14,9,2,3,12,16,14,10,9,9,9,9,9,8,8,7,7,7,7,8,9,9,21,19,18,15,14,18,22,24,26,20,16,11,9,10,12,11,5,2,7,13,15,13,9,9,9,9,9,8,8,7,7,6,7,7,7,7,8,19,19,19,16,14,17,21,25,28,20,17,12,10,9,9,7,2,3,11,14,14,11,9,9,9,9,9,8,7,6,7,6,7,8,7,7,7,16,18,18,15,13,14,18,21,24,21,19,16,12,9,7,4,2,6,13,14,13,10,9,9,9,9,8,7,6,6,7,7,7,8,7,7,7,12,16,17,15,11,10,15,16,20,21,21,20,14,9,5,1,3,11,14,13,12,11,10,9,9,9,8,7,6,5,7,6,7,9,7,7,7,10,15,15,14,10,9,13,16,20,22,24,22,15,9,5,3,7,12,13,12,11,11,10,9,9,8,7,6,5,5,6,5,7,8,7,6,6,10,14,14,13,9,9,13,16,22,24,26,22,16,9,7,7,11,13,12,12,11,11,10,9,9,8,7,6,5,6,6,4,6,8,6,6,6,10,12,13,12,9,9,14,18,23,27,29,26,18,9,7,8,11,11,11,11,11,10,10,9,8,7,6,5,5,6,5,4,7,7,5,6,6,10,10,11,11,10,9,15,20,24,31,32,30,21,10,8,7,7,9,11,11,11,10,10,9,8,7,5,5,6,6,5,5,7,5,3,5,5,11,10,10,10,9,9,16,20,25,32,34,32,22,11,8,7,7,9,11,11,10,10,9,8,7,6,5,5,6,5,4,5,7,4,3,5,5,11,11,10,8,8,9,17,21,24,32,35,33,23,11,9,8,8,10,11,11,10,10,9,8,7,5,5,6,6,4,4,5,5,5,4,4,4,12,11,10,8,8,9,17,22,25,32,34,32,23,12,10,8,8,10,10,10,9,9,9,8,6,5,5,6,5,4,4,5,5,5,4,4,4,12,11,10,8,7,10,17,22,26,33,33,30,21,12,10,8,7,9,9,9,9,9,8,7,5,5,6,6,4,4,4,5,5,4,4,4,4,12,10,9,7,7,10,15,21,25,31,32,29,20,12,9,8,7,8,9,8,8,8,8,7,5,5,6,5,4,4,4,4,5,4,4,4,4,11,9,8,7,6,10,14,19,20,27,30,28,17,10,9,7,7,7,8,8,8,8,8,6,5,6,6,5,4,4,4,4,4,4,4,4,4,11,9,7,7,6,9,13,17,19,25,29,26,15,9,9,7,7,7,7,7,7,7,7,6,5,6,5,4,4,4,4,4,4,4,4,4,4,10,10,8,9,6,7,12,16,19,25,28,25,14,9,9,8,8,8,7,7,7,7,7,6,6,6,5,4,4,4,4,4,4,4,4,4,4,10,9,8,9,5,5,10,14,18,24,27,22,13,10,10,8,8,7,6,6,6,6,6,6,6,5,4,4,4,4,4,4,4,4,4,4,4,9,8,7,9,5,3,6,11,16,21,24,18,12,11,11,9,8,7,6,6,6,6,6,6,5,5,4,4,4,4,4,4,4,4,4,4,4,9,7,7,8,6,2,3,8,14,19,21,15,12,11,12,8,7,6,6,6,6,6,6,6,5,4,4,4,4,4,4,4,4,4,4,4,4,11,7,7,8,8,4,4,6,11,16,19,15,13,11,11,8,6,6,6,6,6,6,6,6,5,4,4,4,4,4,4,4,4,4,4,4,4,12,7,7,7,8,5,4,5,9,14,16,14,13,11,10,7,5,5,6,6,6,6,6,6,5,4,4,4,4,4,4,4,4,4,3,3,3,13,8,8,6,7,4,4,5,9,14,15,14,13,10,8,5,4,5,6,6,6,6,6,6,5,4,4,4,4,4,4,4,4,4,3,1,2,13,9,9,5,6,3,4,5,9,13,13,13,13,10,6,3,3,4,5,6,6,6,6,6,5,5,4,4,4,4,4,4,4,3,2,0,0,14,11,10,8,7,4,4,6,9,11,11,12,11,10,7,3,2,3,5,6,6,6,6,6,6,5,4,4,4,4,4,4,4,3,0,-2,-3,14,12,11,10,7,5,5,7,9,9,8,10,10,9,6,2,1,3,4,5,6,6,6,6,6,5,5,4,4,4,4,4,5,5,-1,-5,-6,13,11,10,11,11,7,8,7,9,8,6,8,8,6,1,0,0,2,3,5,6,6,6,6,6,6,5,4,4,4,4,5,8,10,0,-5,-5,11,10,10,11,12,9,11,6,9,6,6,6,7,4,-1,-1,0,1,3,4,5,6,6,6,6,6,6,5,4,4,5,7,12,15,2,-3,-5,9,9,10,9,9,8,13,3,7,6,6,5,2,3,0,-2,-1,0,2,3,5,6,6,6,6,6,6,5,4,6,12,11,12,15,10,0,-3,8,8,10,9,8,8,13,2,7,6,6,3,-1,2,1,-2,-3,-1,1,3,4,5,6,6,6,6,6,5,4,8,17,14,13,15,16,2,-1],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
