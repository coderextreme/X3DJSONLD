###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    Shape(
      appearance=Appearance(
        material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
        texture=ImageTexture(url=['../../images/5/singapore31-0.jpg'],repeatS=False,repeatT=False)),
      geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.4829463469178132,103.589836,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=36,xSpacing=4.103724E-4,zDimension=22,zSpacing=4.1579583E-4,height=[23,21,20,18,18,18,18,18,19,18,18,18,20,22,26,29,33,37,41,44,44,42,39,37,35,36,37,39,40,38,37,37,39,45,48,43,21,19,18,17,17,17,17,18,19,20,20,20,22,24,29,33,38,43,46,49,46,41,38,36,36,38,40,43,45,45,44,45,47,52,55,50,19,18,17,17,17,17,17,19,20,22,24,25,26,28,32,37,43,49,51,50,47,40,36,35,35,37,40,44,48,50,53,56,59,63,64,57,17,16,16,17,17,17,18,19,22,25,28,29,31,32,36,41,47,53,54,51,46,39,35,34,34,36,38,43,49,55,61,66,71,73,74,65,17,17,17,17,17,18,20,22,26,31,34,37,40,41,45,51,54,55,53,48,43,37,35,34,35,36,39,42,48,56,65,72,80,83,84,74,17,18,17,17,18,19,23,26,31,37,41,45,48,50,54,60,60,57,51,44,40,36,35,35,37,38,40,43,48,57,68,78,88,92,94,84,17,18,18,17,20,23,27,32,36,41,44,47,49,51,55,61,62,60,54,47,42,37,35,37,39,41,45,49,54,63,73,83,93,99,103,96,16,17,17,18,22,26,32,38,41,45,46,47,48,50,54,59,61,62,58,51,45,38,36,38,41,46,51,56,62,71,80,89,99,107,112,109,16,18,20,22,25,28,32,37,40,42,42,43,44,46,51,56,58,59,56,50,44,38,37,40,43,50,57,65,74,85,96,104,113,121,127,125,17,19,23,26,29,30,32,35,36,38,38,38,40,42,47,51,53,54,52,47,42,38,38,42,47,55,63,74,87,101,114,122,129,136,143,141,21,23,26,29,30,31,32,33,34,34,35,35,37,38,41,45,47,47,45,41,39,37,38,43,49,58,70,84,99,114,127,135,141,146,149,145,27,27,29,31,31,32,32,31,31,31,32,33,33,34,36,39,40,39,37,36,35,36,38,43,50,62,76,93,111,126,139,147,153,155,155,146,34,34,33,32,31,29,29,28,29,29,31,32,32,33,34,36,36,35,35,35,36,38,42,49,57,68,81,96,112,123,132,137,142,144,143,133,41,41,36,32,29,26,25,25,26,28,30,31,32,32,33,33,33,33,34,36,38,41,47,57,66,74,85,98,110,115,119,121,123,127,127,116,43,42,37,32,29,25,25,25,25,28,29,31,32,32,34,35,36,37,40,43,46,49,55,64,74,83,93,101,107,106,107,109,112,118,120,108,45,41,36,32,29,25,25,24,26,29,30,32,33,34,36,38,41,44,48,52,56,59,64,72,82,94,103,106,104,97,95,98,104,112,116,104,43,38,34,30,28,25,25,25,27,30,31,32,34,36,39,44,50,55,62,67,72,75,78,83,91,103,109,106,100,90,84,87,93,103,109,100,40,35,31,28,27,26,26,27,29,31,32,33,35,38,44,50,59,68,77,85,89,92,93,95,100,110,113,106,96,84,75,77,81,92,101,96,37,32,29,26,26,26,27,29,32,35,37,38,41,44,50,58,69,81,93,103,108,109,108,106,107,113,113,103,92,78,68,67,71,82,91,89,33,29,27,24,26,27,29,31,35,41,43,46,48,51,58,66,80,95,109,121,127,127,123,116,113,114,111,100,88,73,61,60,62,72,81,80,29,27,25,24,25,27,29,31,38,46,51,56,59,63,71,82,95,110,123,135,140,136,130,120,114,109,103,92,79,66,55,53,54,62,70,69,26,25,24,24,24,25,28,32,41,52,60,67,73,78,88,101,113,125,136,148,149,142,133,121,111,102,91,80,68,57,49,47,47,54,59,57],
        geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])))])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
