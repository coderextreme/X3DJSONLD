###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    Shape(
      appearance=Appearance(
        material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0,0.05,0)),
        texture=ImageTexture(url=['../../images/4/bosphorus5-15.jpg'],repeatS=False,repeatT=False)),
      geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(40.898245841898074,29.55022386869132,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=22,xSpacing=0.0035324567,zDimension=24,zSpacing=0.0023768744,height=[249,264,253,245,224,237,239,254,240,251,290,308,330,321,342,352,342,323,317,305,296,298,231,254,244,219,215,241,222,220,250,273,264,278,332,334,334,342,351,353,345,326,307,299,242,252,247,215,216,215,211,222,249,298,284,296,331,325,322,323,346,334,338,338,332,325,205,203,206,211,211,214,212,223,261,280,308,309,327,329,314,322,342,316,331,337,324,322,239,209,247,231,239,240,241,218,238,280,304,337,341,329,327,306,326,310,342,337,318,312,260,236,242,265,231,265,258,226,248,303,309,346,347,332,337,324,302,308,334,323,314,313,260,283,276,289,257,258,266,243,241,265,287,328,356,327,335,327,309,294,326,334,342,341,289,268,279,291,296,291,279,251,249,293,310,328,352,323,331,328,313,293,325,314,335,338,309,298,298,321,314,313,292,259,247,267,286,314,348,325,315,311,297,284,316,295,324,330,285,304,291,327,319,356,326,282,284,270,301,329,325,334,323,314,313,303,290,288,320,327,274,297,318,324,334,376,357,301,299,288,288,310,320,309,336,339,325,313,298,276,301,294,272,278,313,313,343,396,363,337,306,329,301,300,325,292,317,355,341,342,323,283,268,269,246,270,292,325,359,414,371,351,326,333,299,271,298,288,308,343,360,367,320,309,280,273,269,273,281,317,368,384,362,340,340,318,302,285,269,305,320,348,349,357,346,314,302,296,246,242,278,305,337,369,362,346,322,301,266,247,239,269,302,335,314,336,349,331,329,325,206,224,232,285,302,335,343,342,343,340,288,270,252,278,291,314,282,313,335,328,309,307,224,263,271,243,302,354,310,347,358,336,311,275,238,243,290,287,266,287,348,343,331,329,233,263,298,273,254,309,298,328,350,353,337,290,254,219,233,293,258,290,316,348,346,338,247,250,281,309,295,267,310,330,333,366,339,317,265,254,213,244,241,256,301,297,345,346,216,249,256,275,308,320,295,296,325,360,345,344,261,262,237,207,244,289,253,288,339,349,252,244,233,265,260,304,339,308,340,353,348,323,287,233,257,220,212,217,273,313,332,343,264,266,235,237,245,270,317,334,317,335,347,330,309,234,235,223,195,213,278,244,306,316,262,290,284,233,261,259,282,329,298,326,360,332,314,262,219,206,211,190,231,250,272,280,255,298,294,234,266,266,279,324,296,322,361,335,320,270,222,211,208,188,224,250,265,275],
        geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(41.06225017873692,29.030952729968703,0),geoSystem=['GDC'])))])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
