###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_114',geoSystem=['GDC'],position=(1.4130926478938615,103.71910330716118,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.4130926478938615,103.71910330716118,0.0),range=4101.627,child1Url=['../../tiles/5/singapore22-8.x3d'],child2Url=['../../tiles/5/singapore22-9.x3d'],child3Url=['../../tiles/5/singapore23-8.x3d'],child4Url=['../../tiles/5/singapore23-9.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore11-4.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.4043609355158675,103.70474027303216,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[6,6,8,11,9,6,4,5,8,15,18,20,23,20,15,19,21,20,15,14,11,9,13,16,17,17,14,11,10,10,10,10,9,11,16,21,24,7,7,9,11,9,6,2,3,7,13,18,21,24,18,12,18,19,17,13,13,10,7,11,15,18,18,15,12,10,9,9,9,8,12,18,23,26,7,8,10,11,9,6,1,2,7,13,19,24,25,16,11,18,19,16,13,13,11,7,9,14,19,19,16,12,10,8,8,9,8,13,20,25,27,8,9,10,10,8,6,3,4,7,13,22,30,27,14,11,18,20,17,14,14,14,11,10,14,19,19,15,12,9,8,8,8,9,15,21,26,29,8,9,10,10,8,6,4,5,8,14,25,35,29,14,11,18,21,18,15,15,16,15,11,13,20,18,15,10,7,7,7,8,10,16,21,27,30,8,8,11,12,8,6,5,6,9,15,26,38,32,16,10,16,19,18,17,17,18,18,13,13,18,19,15,8,6,6,7,7,12,18,20,24,27,8,8,11,12,8,8,6,6,10,16,27,39,32,16,10,12,16,17,18,18,20,21,15,13,17,19,14,6,4,5,7,7,13,19,18,21,23,10,9,10,10,9,9,7,6,8,15,25,37,27,15,9,9,12,15,19,21,22,21,16,14,15,17,12,4,2,4,7,8,14,20,18,16,15,12,11,10,10,11,10,9,5,7,13,23,33,24,15,8,6,9,13,19,21,22,21,16,13,13,15,10,3,1,4,7,9,15,19,17,11,10,16,14,13,14,16,13,11,6,6,11,20,27,21,13,7,5,7,11,16,18,20,19,14,13,10,11,9,4,1,3,7,9,14,17,15,10,9,18,17,16,17,19,17,13,7,6,10,17,23,19,12,5,4,6,10,14,15,17,16,13,12,9,9,8,5,2,3,7,9,13,15,12,9,9,17,19,18,19,20,18,13,7,6,9,14,20,20,13,5,5,6,10,13,12,12,11,9,9,11,9,8,6,3,4,7,8,11,12,10,10,11,16,19,20,19,20,19,14,7,6,9,12,19,22,13,5,5,6,10,12,9,7,7,6,8,12,10,8,8,5,5,6,7,8,8,8,10,11,11,16,18,14,14,16,13,7,6,10,12,19,24,14,6,5,7,11,12,10,7,1,1,6,10,10,8,8,6,5,5,5,7,7,8,9,10,7,12,15,11,9,12,12,7,7,10,12,19,25,14,6,5,8,12,12,10,6,-1,-1,4,9,10,9,8,7,5,5,4,6,7,7,8,9,6,9,11,8,7,9,8,6,7,9,10,15,20,12,5,5,8,11,12,12,7,2,3,5,8,8,8,8,7,5,4,4,5,6,7,9,9,6,6,8,6,6,6,6,6,6,8,9,11,16,9,4,6,9,10,12,13,8,7,7,6,7,7,8,8,6,4,3,4,4,4,6,9,10,7,7,8,6,5,6,6,4,5,7,8,9,10,7,5,6,9,9,10,11,9,9,8,7,7,7,8,8,6,3,2,2,2,1,4,10,11,7,8,8,6,5,7,6,3,4,7,8,7,6,6,6,7,9,9,8,9,11,10,9,8,7,8,9,8,5,2,1,1,0,-1,4,11,13,9,9,8,7,8,11,9,6,5,7,9,7,5,6,7,8,9,9,10,11,12,10,9,8,8,8,10,8,5,2,0,0,0,0,5,12,13,10,10,8,8,11,15,13,8,6,8,11,8,5,7,8,9,9,10,12,13,13,11,9,8,8,9,10,8,6,2,0,0,0,1,7,12,13,13,14,11,9,13,16,13,8,7,11,14,11,8,8,9,10,11,12,14,15,14,12,9,9,9,10,9,9,7,2,0,2,2,3,5,9,11,16,18,13,10,14,16,13,8,9,14,17,15,12,10,10,10,12,13,15,16,14,12,9,9,9,10,9,10,8,1,1,4,6,5,3,6,10,19,21,15,11,14,15,12,9,11,17,19,17,12,10,10,11,14,14,16,15,13,12,10,8,8,10,9,9,8,3,2,5,7,5,2,6,9,22,23,16,11,14,15,12,10,14,20,20,17,11,10,10,12,15,14,15,14,12,12,10,8,8,10,9,8,8,4,4,6,7,4,3,6,9,21,22,15,12,14,14,10,10,16,20,19,16,11,11,11,13,14,13,13,12,11,11,9,8,9,11,10,8,8,6,6,7,6,4,4,7,10,20,20,15,13,14,13,10,11,15,18,17,15,11,12,12,13,13,11,11,10,10,9,8,8,10,13,11,9,8,8,7,6,5,5,5,9,12,21,21,16,14,14,12,10,11,15,18,16,15,11,13,12,12,12,9,9,10,9,9,9,10,12,12,11,9,7,7,7,6,6,5,6,10,12,23,22,17,15,14,12,11,11,15,17,15,13,12,12,11,11,11,7,8,9,8,9,11,13,12,11,10,8,7,7,7,7,7,5,6,10,12,24,23,18,16,15,13,12,12,16,18,15,13,12,11,11,10,9,7,7,8,8,9,12,14,12,10,8,7,7,7,6,7,7,6,8,10,10,24,23,19,17,15,14,14,14,17,18,14,14,12,10,10,9,7,8,7,8,8,11,14,14,11,8,7,6,7,7,6,7,7,8,10,10,8,25,23,19,18,17,16,15,16,18,18,14,13,11,10,10,8,7,8,8,8,8,11,12,13,9,6,7,6,6,7,6,7,7,7,9,9,7,25,22,20,19,19,18,17,18,19,17,13,11,11,10,10,9,7,8,8,8,9,10,10,10,8,6,7,6,5,7,7,7,7,7,7,7,7,25,23,20,19,19,19,18,19,19,16,12,10,11,11,9,9,7,8,8,8,9,9,8,7,7,7,6,6,5,7,8,8,8,7,7,7,7,24,23,21,19,19,18,18,19,19,15,11,10,11,11,9,8,8,8,8,9,8,7,6,6,6,7,6,6,6,6,8,9,10,8,8,8,8,24,24,22,20,19,17,17,18,18,15,11,11,12,11,9,8,8,8,8,9,8,6,6,6,6,8,6,6,6,6,8,10,10,10,9,8,8,24,24,23,21,19,15,14,15,15,14,13,13,14,12,9,8,8,9,9,9,8,6,7,7,7,8,7,6,6,7,8,9,9,10,10,9,9,24,25,24,22,19,15,13,14,15,14,14,15,15,12,9,8,8,10,10,9,8,7,7,7,7,7,7,5,6,7,8,9,9,10,10,11,10,24,26,25,23,19,15,13,14,15,15,16,16,16,13,10,9,9,11,10,9,9,7,8,8,7,7,6,5,6,7,8,9,9,10,11,12,12,23,26,25,23,19,15,14,15,16,16,16,16,15,13,11,11,11,11,10,8,8,7,9,9,7,7,6,5,6,7,8,9,8,10,11,12,12,22,25,25,22,18,15,15,17,17,17,16,15,13,12,12,12,12,11,10,7,7,7,9,9,7,7,7,6,7,8,9,9,8,10,11,10,10,21,24,24,22,18,16,17,18,19,18,16,14,13,12,13,13,12,11,9,7,7,7,9,9,8,7,8,8,8,7,9,9,8,10,11,10,9,22,23,23,21,20,19,19,20,20,19,18,16,14,13,14,14,12,10,8,7,8,9,9,8,10,8,8,9,8,6,8,8,9,11,12,9,9,23,23,23,22,21,21,21,21,21,20,19,17,16,14,14,14,12,9,8,7,9,10,9,8,10,8,9,10,8,6,7,8,10,12,12,10,9],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
