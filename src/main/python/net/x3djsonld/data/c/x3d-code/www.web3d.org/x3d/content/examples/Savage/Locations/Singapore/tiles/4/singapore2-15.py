###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_215',geoSystem=['GDC'],position=(1.25592182508997,104.0350900579996,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.25592182508997,104.0350900579996,0.0),range=4101.627,child1Url=['../../tiles/5/singapore4-30.x3d'],child2Url=['../../tiles/5/singapore4-31.x3d'],child3Url=['../../tiles/5/singapore5-30.x3d'],child4Url=['../../tiles/5/singapore5-31.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore2-15.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.247190112711976,104.02072702387058,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=36,xSpacing=8.207448E-4,zDimension=44,zSpacing=4.0612617E-4,height=[9,-3,0,3,5,1,3,12,4,3,1,6,12,16,14,8,2,0,7,13,9,2,-1,-9,-9,6,24,23,7,5,5,6,6,9,9,11,10,1,1,4,4,7,6,15,8,0,0,2,11,14,10,7,2,0,4,9,7,5,2,-5,-6,10,29,36,14,7,0,1,5,10,10,10,7,4,4,4,4,8,7,14,13,0,-1,1,10,9,7,6,2,0,6,7,6,8,5,-1,-1,11,28,40,19,6,-1,0,4,11,11,8,0,5,7,6,5,4,9,8,17,0,-6,1,8,2,3,5,3,7,13,7,6,9,6,5,5,11,19,33,22,3,-4,-2,3,11,11,6,-2,4,8,7,7,1,9,4,20,1,-7,3,8,0,3,5,4,13,22,15,9,10,8,9,9,10,13,25,19,0,-6,-4,0,9,11,5,0,0,7,9,8,1,4,1,19,0,-3,7,7,5,7,10,9,17,37,33,16,10,8,8,8,12,14,18,9,-7,-10,-8,-2,5,9,7,0,0,7,9,8,2,2,1,17,1,0,8,6,9,9,11,11,18,40,37,16,8,8,8,7,11,13,12,1,-12,-13,-11,-5,2,8,9,2,0,7,9,6,4,3,2,14,1,0,5,2,8,8,7,7,16,26,20,6,2,6,8,6,8,12,9,-2,-12,-14,-10,-5,2,6,11,3,1,9,8,4,5,5,4,11,2,1,3,0,6,7,3,5,14,14,7,0,0,3,6,5,5,9,5,-6,-10,-13,-8,-3,3,6,13,3,9,11,8,4,6,5,4,11,3,3,3,0,6,6,1,2,11,12,4,0,0,0,3,8,5,3,-2,-7,-5,-6,-5,0,6,10,16,4,12,12,8,5,6,4,4,9,2,3,3,0,5,5,1,1,9,9,2,0,0,-3,1,10,7,0,-9,-7,-2,-1,0,3,8,13,16,5,7,5,6,9,6,0,2,3,0,0,3,0,4,4,2,8,11,7,1,0,-2,-3,2,11,11,0,-10,-6,-4,0,3,6,8,10,9,5,2,1,4,11,7,-2,0,-1,-3,0,3,0,3,3,4,12,11,4,0,0,-2,-1,3,11,14,0,-10,-4,-5,0,7,8,8,7,3,5,5,5,8,7,8,0,0,-1,-1,3,3,1,0,1,2,4,2,1,1,3,1,0,3,8,7,-2,-6,-1,-3,1,8,10,9,8,1,5,7,10,11,4,10,0,-2,0,1,7,3,1,0,1,1,-1,-3,0,3,5,5,4,3,4,1,-6,-3,1,0,2,8,12,9,9,0,6,5,10,12,4,11,4,1,4,8,13,5,2,0,3,1,0,0,0,0,2,6,6,2,3,-4,-15,-9,0,2,4,5,13,13,9,0,8,2,10,12,5,11,7,6,9,15,16,6,2,2,4,1,4,5,2,0,-1,6,7,3,3,-10,-22,-15,-3,5,9,4,12,17,9,2,8,4,7,10,3,7,8,8,11,16,14,6,1,5,4,6,10,11,7,2,0,4,6,4,2,-8,-15,-10,-1,9,20,14,11,13,9,5,8,6,6,9,0,3,10,9,12,16,11,6,0,6,4,10,15,18,12,7,3,2,6,7,1,-5,-8,-5,0,12,32,26,10,8,10,9,4,3,8,10,5,5,8,9,10,17,12,5,0,7,4,8,9,11,11,9,10,5,4,4,-2,-6,-4,1,2,13,41,46,25,12,8,3,0,0,10,10,9,7,6,8,7,19,13,4,-2,8,4,5,1,5,10,11,16,10,3,1,-6,-8,-1,8,4,15,49,66,40,18,4,-2,3,-1,8,8,7,5,6,7,8,17,13,9,0,6,4,4,0,2,8,11,11,5,1,0,-6,-4,3,8,4,14,42,53,25,2,-10,-7,7,-3,5,6,3,3,7,5,9,15,13,15,5,3,3,4,0,0,7,10,5,1,0,-2,-4,0,8,7,3,14,34,37,9,-15,-27,-11,9,1,7,7,3,2,7,2,9,12,11,12,5,2,2,3,4,5,5,7,5,4,1,-5,-5,2,8,7,8,14,24,21,-5,-29,-32,-19,11,8,10,9,4,1,8,0,8,8,9,8,5,1,0,3,10,11,4,5,7,7,3,-8,-6,4,7,8,14,16,13,5,-20,-43,-35,-26,10,8,7,7,3,2,9,4,10,10,6,6,5,3,4,4,10,9,1,4,6,7,2,-6,-1,6,5,3,13,14,9,-1,-33,-48,-39,-20,7,6,2,5,1,3,11,10,12,12,3,7,5,6,9,7,9,4,0,4,6,5,0,-2,3,8,3,-1,11,13,7,-6,-44,-50,-43,-12,6,9,2,3,1,6,10,10,11,13,6,9,7,6,6,4,5,2,0,2,6,5,0,-1,2,5,3,1,10,8,4,-5,-38,-48,-36,-3,5,14,3,1,1,9,9,8,10,13,11,13,9,4,1,0,2,2,0,0,6,5,0,-1,0,1,2,8,9,1,1,-2,-27,-46,-26,6,5,11,5,2,1,6,7,3,7,9,10,12,11,6,1,0,3,2,2,5,11,7,0,0,0,2,1,8,7,0,0,0,-13,-24,-8,12,6,6,7,6,1,0,6,0,5,4,6,10,15,9,2,3,6,3,6,13,18,9,-1,0,3,4,0,5,3,2,0,0,0,4,11,18,8,7,10,7,2,-1,7,1,7,3,3,10,16,11,6,8,8,0,6,14,14,6,-3,0,5,5,0,3,2,1,0,1,5,14,19,19,10,12,13,5,3,-3,8,6,10,3,2,10,17,12,12,15,9,-5,5,12,5,1,-5,0,5,4,1,2,1,0,0,1,7,14,20,19,9,13,12,6,3,-1,10,9,9,3,1,9,15,11,12,15,9,-3,5,9,2,0,-1,2,7,4,1,2,1,0,0,1,6,15,20,21,8,13,8,6,3,0,12,10,6,3,0,7,13,10,10,10,10,2,6,8,1,0,2,7,10,5,2,3,1,1,1,0,6,17,20,24,6,10,6,6,4,5,10,8,4,3,3,8,9,5,7,4,7,5,9,9,1,0,2,8,8,4,2,3,3,4,3,0,5,16,18,19,4,4,5,4,8,11,6,4,4,6,9,11,4,1,3,-1,2,6,13,13,2,-2,0,5,4,2,2,3,6,8,6,0,3,14,14,8,4,3,6,5,9,11,7,4,4,7,10,12,3,0,3,-2,1,7,15,13,3,-1,-1,1,0,0,2,5,8,10,8,2,5,15,13,2,5,4,9,8,10,9,10,6,6,9,8,10,5,4,8,3,5,9,15,11,4,2,0,-5,-8,1,4,7,9,9,10,6,10,18,15,1,7,8,9,9,10,7,11,8,10,9,4,7,7,8,9,5,7,10,12,8,5,4,0,-3,-6,3,6,9,10,8,9,8,13,18,15,1,10,14,6,6,10,6,9,7,13,8,1,1,9,13,9,3,7,12,10,6,6,4,4,7,3,4,6,10,10,5,4,7,13,17,13,3,11,16,5,4,9,7,8,7,15,7,-1,0,10,14,9,3,6,14,10,4,7,5,5,14,11,5,7,10,10,5,0,4,11,15,11,4,13,14,4,3,7,12,10,10,11,5,0,2,11,11,10,5,4,16,12,3,7,6,5,13,11,6,7,11,11,7,-2,0,7,13,10,5,13,13,5,4,4,14,10,11,9,6,2,5,8,8,9,6,4,16,11,2,7,6,5,10,10,7,8,10,11,8,-6,-4,3,10,8,4],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
