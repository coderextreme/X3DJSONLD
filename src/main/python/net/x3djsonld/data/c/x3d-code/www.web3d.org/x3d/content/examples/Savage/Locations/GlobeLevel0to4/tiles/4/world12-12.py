###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    Shape(
      appearance=Appearance(
        material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0,0.05,0)),
        texture=ImageTexture(url=['../../images/4/world12-12.jpg'],repeatS=False,repeatT=False)),
      geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(44.95833735661353,89.95834137992705,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=22,xSpacing=1.0714287,zDimension=24,zSpacing=0.48913044,height=[179,637,410,455,877,4153,1357,1403,1496,1564,1284,1515,1655,1233,1556,1645,1308,996,1072,1260,1054,943,2944,3046,2249,2529,2420,1876,466,1406,819,871,1067,1579,1627,1596,2316,1604,1536,981,901,987,1174,1103,797,892,1271,1889,1654,354,770,1121,1201,1308,1278,1158,1060,1443,1302,1508,1330,1208,882,855,1034,1089,538,633,996,1188,701,938,1822,1349,1327,1641,1979,1291,1736,1219,1070,1297,1326,1201,1228,899,974,1119,632,1103,1359,2023,2473,1832,1796,1123,2410,2149,2042,1320,1342,1267,1185,1306,1284,1085,1089,942,990,952,947,1232,1283,1149,1532,2006,1839,2748,2215,2257,1296,1467,1827,1382,1297,1397,1375,1107,1146,982,1014,906,831,995,1531,2026,2633,1627,1293,1924,1976,1688,1668,1848,2100,1580,1461,1477,1465,1466,1102,1024,1062,1144,807,1276,2161,3409,1841,2353,1448,1868,2069,2366,2369,2641,2629,1973,1698,1495,1400,1349,1416,1392,1250,1200,964,2120,2678,2760,1449,1246,2103,2031,2598,2333,2637,2378,2023,1584,1932,1425,1649,1482,1303,1135,1259,1157,1136,2222,2632,1289,1271,1467,1536,1768,2441,2998,2724,1732,1668,1345,1447,1366,1539,1620,1389,1449,1171,1099,2242,2809,2478,1156,1136,1843,1815,2450,2436,2333,2129,1929,1726,1395,1181,1298,1539,1773,1349,1371,1280,1090,2321,2179,1658,1720,1105,1293,1555,2205,1830,2021,2127,2038,1449,1403,1437,1009,1281,2008,1732,1518,1048,1154,1914,1682,1362,1569,1029,1368,1588,1820,2473,2473,1740,1396,1624,1561,1360,937,1410,1430,1173,1798,1360,1090,2602,2365,2395,1398,1812,1467,1832,1741,1691,1907,2174,1387,1284,1029,865,1121,890,1011,1387,1662,1538,1042,2335,2033,1810,841,867,1087,1202,2032,2243,1795,1864,1749,1777,1540,1315,856,890,641,1335,1196,1225,1435,2501,2795,1824,850,775,921,1915,2607,1920,2141,2405,1420,1769,1158,1401,901,652,741,988,940,994,1229,2331,1011,1337,2340,1957,1759,1219,1352,2007,1773,1766,1926,1858,1836,1467,1294,549,703,968,1343,912,899,2176,1814,2182,649,1034,974,725,1470,2167,1919,2205,1883,2073,1432,702,862,975,624,803,969,1243,948,1421,1578,2154,1950,895,1124,2113,1308,1373,2010,2091,2198,2375,1084,722,818,458,904,569,958,770,870,972,657,1436,870,1495,1604,906,1087,1525,2495,1498,2015,1128,612,447,836,449,1047,1247,1110,897,993,964,519,971,678,713,973,1232,1262,1518,2033,1839,1989,567,554,644,687,838,449,716,952,1113,1249,578,919,273,452,530,1026,1807,1582,2175,1810,946,1067,559,495,737,921,775,924,449,659,1306,1101,1450,928,484,280,401,785,1491,1373,1757,1089,623,548,495,396,998,999,691,946,449,1490,1127,1589,1396,1000,372,327,432,909,751,1937,1229,1492,552,519,480,554,824,754,797,755,449,1799,720,1657],
        geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(0.0,0.0,-6378137.0),geoSystem=['GDC'])))])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
