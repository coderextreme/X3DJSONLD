###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    Shape(
      appearance=Appearance(
        material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
        texture=ImageTexture(url=['../../images/5/singapore18-14.jpg'],repeatS=False,repeatT=False)),
      geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.3694340860038916,103.79091847780627,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=36,xSpacing=4.103724E-4,zDimension=23,zSpacing=3.96896E-4,height=[47,47,47,48,49,50,52,53,55,53,51,50,50,50,50,50,49,48,48,47,47,48,52,54,55,55,55,54,52,49,47,44,41,40,43,46,46,46,46,48,49,51,53,54,55,54,52,52,51,51,50,50,50,50,49,49,49,50,54,56,58,58,58,57,54,51,49,47,45,43,46,48,46,46,46,47,49,52,54,55,55,55,54,53,53,51,50,50,51,51,51,51,51,53,56,59,61,62,62,60,56,53,52,50,49,48,49,51,45,46,47,48,50,53,57,56,56,56,55,54,54,53,51,51,51,51,53,53,52,53,56,59,61,62,63,62,57,53,51,50,51,51,51,51,46,48,49,49,50,54,59,58,57,56,54,54,55,54,53,52,51,52,55,55,53,53,55,57,59,61,63,62,58,54,51,50,52,53,51,50,50,51,51,50,49,52,57,58,58,56,53,54,54,55,56,53,51,52,56,56,53,53,53,55,57,60,63,64,60,56,52,50,53,54,51,49,55,54,52,50,48,50,53,56,59,56,52,52,53,55,58,55,52,53,57,56,54,53,53,53,55,59,63,66,63,59,55,52,55,55,50,47,57,56,54,52,49,50,49,53,57,55,50,51,52,54,58,56,52,54,58,58,57,56,55,55,56,59,64,66,63,60,56,54,56,56,52,48,56,56,57,56,54,51,48,51,55,52,48,49,52,54,56,56,53,54,58,59,60,59,59,59,58,60,64,66,63,60,57,56,57,58,55,52,55,56,59,59,58,54,49,51,54,51,48,50,53,55,57,56,54,54,56,58,60,60,61,61,59,60,62,63,62,60,58,57,59,59,57,56,54,57,60,61,61,57,53,53,53,52,50,53,56,57,57,56,54,54,53,54,58,60,61,61,61,61,60,61,61,61,59,59,59,60,59,58,56,58,61,60,60,57,54,54,54,53,52,55,60,60,58,57,57,55,54,55,55,57,59,59,60,60,60,60,60,60,59,59,59,59,58,57,61,62,62,58,56,55,53,53,53,53,52,57,63,62,59,60,61,61,60,58,54,53,54,57,59,60,62,62,61,60,58,57,57,56,55,54,66,64,62,58,54,52,51,51,51,52,52,58,64,63,62,63,67,68,66,62,55,52,52,55,58,60,62,62,61,59,57,55,53,52,51,50,69,66,63,59,55,52,48,48,48,51,52,57,63,63,64,69,75,76,73,67,58,54,53,54,56,59,61,61,60,58,56,53,50,48,47,47,70,66,62,60,56,52,47,47,46,49,52,57,61,63,65,72,81,81,77,71,61,57,56,56,57,59,60,60,60,58,56,53,49,46,45,44,68,64,61,59,57,53,49,47,43,47,51,55,59,62,65,73,82,83,79,72,64,61,61,61,60,60,59,59,59,59,57,54,49,46,44,43,65,61,58,58,58,54,52,48,44,47,50,54,56,60,63,72,80,81,77,72,65,64,65,64,61,59,58,57,58,59,56,54,49,45,43,42,62,58,55,56,58,56,55,51,47,48,50,52,54,57,61,68,75,76,72,68,63,63,65,64,59,56,54,54,56,57,56,53,48,44,40,39,61,57,55,58,61,60,58,55,51,51,52,53,53,56,59,64,69,69,66,64,62,62,65,63,57,53,50,50,53,55,55,53,48,43,40,37,61,59,58,64,69,66,62,58,55,55,56,57,57,57,57,59,61,61,60,59,60,61,64,61,55,50,46,45,49,52,54,54,48,44,39,37,64,63,62,69,75,70,64,61,57,58,61,61,60,58,56,55,55,55,55,56,58,60,63,61,53,48,44,43,46,49,52,53,49,44,39,37,69,68,68,72,76,71,65,61,56,60,64,65,64,61,57,54,52,52,52,54,58,60,63,61,54,49,46,45,45,46,50,51,47,43,40,37],
        geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])))])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
