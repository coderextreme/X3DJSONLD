###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_108',geoSystem=['GDC'],position=(1.3956292231378735,103.83400758019333,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.3956292231378735,103.83400758019333,0.0),range=4101.627,child1Url=['../../tiles/5/singapore20-16.x3d'],child2Url=['../../tiles/5/singapore20-17.x3d'],child3Url=['../../tiles/5/singapore21-16.x3d'],child4Url=['../../tiles/5/singapore21-17.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore10-8.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.3868975107598795,103.81964454606431,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=45,zSpacing=3.96896E-4,height=[39,36,38,48,55,51,47,44,35,28,29,29,29,30,27,24,23,20,18,19,22,22,23,21,16,16,16,16,11,12,14,14,14,17,19,18,18,39,36,37,45,51,49,48,47,38,28,27,28,29,30,29,23,19,18,17,18,21,22,21,19,15,16,16,15,12,13,15,15,14,16,19,18,18,42,37,36,40,46,48,49,48,41,31,27,28,30,31,30,24,18,16,16,17,20,21,19,18,14,16,15,14,12,14,16,16,14,15,17,17,18,45,40,37,39,44,49,52,51,45,37,29,28,31,32,30,26,19,16,16,17,19,20,17,17,14,16,15,14,13,15,16,18,15,15,16,16,18,49,43,40,41,45,52,56,55,50,43,33,29,31,32,31,28,22,17,17,17,17,19,16,16,15,16,14,14,14,13,16,19,17,16,16,16,17,51,45,41,41,46,54,59,57,51,46,36,30,31,31,32,30,25,18,17,17,16,18,15,15,15,16,14,14,13,12,15,20,19,17,16,16,17,50,44,41,41,46,56,59,56,49,46,39,31,30,31,33,31,27,20,18,17,15,17,14,14,15,16,15,14,12,11,14,19,20,19,17,17,19,48,43,40,39,44,54,57,53,45,44,40,32,28,30,32,31,28,20,17,17,16,18,15,14,15,17,15,14,10,11,14,19,19,20,18,18,20,43,43,40,36,39,48,52,48,41,39,38,31,25,29,31,29,27,19,16,16,19,20,16,14,15,17,16,13,9,11,15,18,18,20,20,19,20,39,44,43,35,35,43,47,45,37,35,35,30,24,27,29,27,26,18,15,16,20,20,17,14,15,17,16,13,9,11,17,19,19,20,21,20,21,38,47,47,36,31,37,42,41,34,31,33,30,24,24,28,26,24,16,14,16,20,16,16,15,16,18,18,13,10,10,18,22,21,22,23,22,22,37,48,47,35,27,30,35,34,29,26,28,27,22,21,25,23,22,14,13,16,19,14,15,15,16,18,17,12,11,11,18,23,24,24,25,24,23,36,45,42,31,23,24,26,26,23,20,21,21,19,18,22,20,18,13,12,15,17,14,13,14,16,19,15,12,12,13,20,24,25,26,26,26,25,33,39,36,27,20,19,20,19,18,15,16,17,16,16,18,17,15,11,12,14,15,14,12,13,16,19,13,11,13,15,20,25,27,27,26,27,27,26,31,28,23,19,17,17,17,17,14,13,14,14,14,15,14,12,9,10,11,13,13,11,11,15,17,10,11,13,15,20,25,27,26,25,26,25,22,25,23,22,20,17,16,15,15,13,11,12,12,12,12,12,10,9,9,9,11,13,11,10,14,15,10,11,13,17,21,25,27,26,23,24,24,22,24,25,26,23,18,16,15,14,12,11,11,10,11,11,11,11,10,10,9,11,14,12,11,13,14,11,12,14,20,23,26,28,26,22,21,22,22,24,27,29,25,20,17,15,13,12,11,11,10,11,11,11,12,10,9,8,11,14,12,11,11,13,12,13,15,22,24,27,28,25,20,19,20,22,25,29,30,26,22,17,15,12,12,12,12,12,12,10,11,12,10,9,8,11,14,12,10,9,10,11,14,18,23,25,28,28,23,19,17,17,21,26,30,31,27,23,18,14,12,12,13,13,13,12,10,11,11,10,9,8,11,14,12,10,9,8,11,15,20,24,26,28,27,21,18,15,15,19,23,28,30,29,25,19,16,15,15,15,15,14,12,11,10,10,10,11,9,11,13,13,11,9,9,11,16,20,24,27,27,25,20,17,14,13,17,21,26,29,30,25,20,18,17,18,17,17,15,12,11,10,10,10,12,9,11,12,13,12,10,10,12,18,21,24,28,27,23,18,16,13,12,15,20,23,26,28,25,20,20,20,19,19,19,17,13,12,11,10,10,11,11,10,12,12,11,8,9,12,18,21,25,27,26,22,18,16,13,12,14,18,21,24,26,24,20,23,22,21,20,20,19,15,12,12,11,9,11,13,10,11,10,10,8,9,12,18,22,25,27,25,22,18,15,13,11,13,16,20,24,24,23,21,23,23,21,19,19,18,15,14,14,12,9,11,12,9,10,8,9,10,10,13,18,22,26,26,24,22,17,14,13,12,12,14,19,23,23,22,21,23,23,21,19,18,17,15,16,17,14,9,10,12,8,8,7,8,13,10,14,18,22,26,25,23,21,16,13,13,14,11,14,18,21,22,22,21,22,22,22,20,17,16,17,19,20,16,10,10,11,8,8,7,9,16,10,12,17,21,24,23,20,18,14,13,14,16,11,13,17,20,21,22,21,21,22,24,22,16,16,19,22,22,18,12,10,11,8,8,7,12,18,10,10,16,19,21,20,16,14,13,13,15,17,11,12,15,19,20,21,21,20,22,25,23,17,18,22,24,23,21,14,10,10,9,8,9,15,18,10,9,13,16,18,17,15,13,14,15,17,18,11,12,14,17,19,20,20,19,22,26,24,19,19,24,24,22,22,16,10,10,10,8,10,18,15,10,8,11,13,15,14,13,12,15,17,18,19,11,12,13,16,18,19,18,18,22,25,23,17,17,21,21,19,21,15,10,12,10,9,12,18,13,8,6,8,10,13,11,11,12,16,19,18,18,12,12,12,16,17,17,16,17,21,24,21,15,15,18,16,16,19,14,11,12,11,9,13,16,11,6,4,7,8,10,9,9,11,17,18,17,17,13,13,12,14,15,14,13,16,21,24,19,15,15,16,14,14,16,13,11,11,9,9,12,13,8,5,4,6,8,8,4,7,12,17,17,16,16,14,12,12,13,13,11,11,14,21,22,18,15,15,14,13,12,13,12,11,9,8,9,11,10,5,4,4,6,8,7,1,6,12,16,16,15,16,14,11,11,12,12,10,9,12,18,20,16,14,16,14,13,12,13,12,11,8,8,8,9,7,4,4,5,6,7,8,1,5,10,14,15,16,17,14,11,11,11,11,9,8,9,15,17,14,14,16,15,13,13,14,12,10,8,8,8,8,5,4,4,5,7,7,9,5,4,8,12,14,17,19,13,11,11,11,10,8,7,7,11,14,12,12,16,15,13,13,14,12,8,7,7,8,8,4,4,5,6,7,7,9,6,5,7,11,15,18,21,12,11,11,10,9,7,6,6,9,11,10,10,14,14,13,13,13,11,7,6,7,8,8,4,4,5,7,7,7,8,6,5,7,11,15,20,23,12,12,11,10,9,7,6,6,9,10,11,9,10,12,13,12,12,10,5,5,7,8,8,5,5,6,7,7,7,7,6,5,7,10,15,20,23,13,12,11,11,8,6,7,7,9,11,13,9,7,11,13,12,11,10,3,5,7,8,8,6,6,7,7,7,7,6,5,5,6,8,14,19,22,13,11,11,11,8,5,6,8,10,11,13,9,6,10,12,12,11,10,5,6,7,8,8,6,6,7,7,7,7,6,5,4,4,6,12,17,20,13,10,10,10,7,5,5,9,10,10,12,9,7,10,12,12,10,10,8,7,8,9,8,7,7,6,6,6,6,5,5,4,1,4,9,14,17,13,10,10,11,8,5,5,9,11,10,11,9,8,10,12,12,10,12,11,9,9,8,8,8,7,5,5,5,5,5,4,2,0,3,8,11,14,13,10,11,12,10,8,7,9,11,11,11,9,8,10,11,11,11,13,11,9,9,8,8,8,6,4,3,3,4,5,4,0,0,3,7,10,11,14,11,13,13,11,10,8,9,11,11,11,9,7,9,11,11,10,13,11,10,8,8,8,7,6,3,3,3,4,5,4,1,1,4,6,8,10],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
