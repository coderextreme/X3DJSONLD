###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_1313',geoSystem=['GDC'],position=(1.4480194974058374,103.97763792148352,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.4480194974058374,103.97763792148352,0.0),range=4101.627,child1Url=['../../tiles/5/singapore26-26.x3d'],child2Url=['../../tiles/5/singapore26-27.x3d'],child3Url=['../../tiles/5/singapore27-26.x3d'],child4Url=['../../tiles/5/singapore27-27.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore13-13.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.4392877850278434,103.9632748873545,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[18,18,17,17,17,17,16,14,16,19,18,12,11,9,9,9,7,8,9,9,10,13,16,14,10,10,10,11,12,13,11,11,11,13,11,12,13,18,18,18,18,17,17,15,14,16,17,16,12,9,8,9,8,7,8,9,8,9,12,15,14,10,11,12,13,13,13,12,12,12,13,13,14,15,17,18,17,18,16,16,14,15,15,15,15,13,8,7,8,7,7,8,9,8,8,10,14,13,11,11,14,14,13,13,12,12,11,12,13,15,15,16,18,16,15,16,16,14,13,13,11,10,9,6,6,8,8,8,9,8,7,7,10,14,14,13,12,13,13,13,13,12,11,10,11,12,14,15,16,17,15,14,15,16,14,12,10,7,5,6,5,6,8,8,8,9,8,6,6,10,14,15,14,13,12,12,13,13,12,11,10,10,11,13,14,12,16,16,13,13,14,13,11,9,6,5,6,6,7,8,8,8,9,8,7,7,11,15,15,13,13,14,14,14,13,11,11,10,9,10,12,14,8,15,17,12,11,13,12,10,8,6,4,5,7,9,9,9,9,10,8,7,8,13,16,14,13,13,15,15,14,12,11,11,9,9,10,12,15,8,13,16,13,11,12,11,9,7,5,2,5,7,10,11,12,12,11,10,9,11,14,16,14,14,15,16,16,14,12,10,9,9,9,11,14,16,7,10,15,13,11,11,10,8,6,5,2,5,7,11,14,15,15,13,13,12,14,16,15,14,15,16,17,16,14,12,9,8,9,9,11,16,16,8,10,14,12,10,9,9,8,6,5,5,7,8,11,14,16,17,14,15,14,15,15,15,15,16,17,17,17,15,12,8,8,10,10,12,17,17,9,10,13,11,9,9,9,7,6,5,7,9,8,10,14,17,17,16,17,16,15,14,14,16,18,18,18,18,16,12,8,9,11,11,13,18,17,9,10,12,10,8,8,8,6,7,7,9,10,9,10,13,16,16,16,17,16,14,14,14,16,18,18,18,17,14,10,9,10,12,12,15,17,17,9,9,12,9,8,8,7,5,8,9,11,12,11,11,12,14,15,16,17,15,14,13,14,16,18,18,18,17,13,8,10,11,12,13,17,17,16,8,9,11,8,7,7,7,6,10,11,12,12,11,10,11,13,14,15,15,14,13,14,14,16,17,18,18,16,12,8,9,11,12,13,18,17,15,8,8,9,7,7,6,7,8,12,12,12,12,11,10,11,12,13,14,14,13,13,14,15,15,16,17,17,15,11,8,9,11,12,13,18,17,15,7,8,8,7,7,6,8,10,12,14,13,13,13,10,10,11,12,13,14,14,13,14,15,15,16,16,15,13,11,8,9,10,11,12,18,16,15,5,7,7,7,7,7,10,11,13,15,15,15,14,12,10,11,10,11,14,15,13,14,15,15,16,14,13,13,11,9,9,9,10,12,18,16,15,6,8,8,8,9,9,11,12,13,16,15,14,13,12,9,10,9,10,12,14,13,14,16,16,15,13,12,12,12,9,8,8,9,12,17,15,15,9,10,9,9,10,10,12,13,14,17,16,13,12,11,9,9,9,9,10,12,13,15,17,16,15,12,12,13,13,10,8,8,9,11,15,14,14,11,11,11,10,10,12,12,13,15,17,16,13,11,11,9,9,9,9,10,11,13,15,17,16,14,12,12,13,13,10,6,6,8,9,11,12,14,11,12,12,10,11,13,14,14,15,17,16,14,11,11,10,9,9,9,10,12,14,15,15,14,12,11,12,13,12,9,5,5,6,6,7,10,12,12,13,13,11,11,13,15,15,16,17,17,15,11,10,10,10,10,10,10,12,14,13,13,12,11,10,11,13,12,9,5,5,5,4,5,8,10,12,13,13,12,11,13,14,16,16,17,17,16,12,10,10,10,9,10,11,12,11,10,10,9,8,8,9,12,12,9,6,5,5,4,4,5,7,13,14,13,13,12,12,13,15,14,16,17,16,13,10,10,11,9,10,11,12,10,9,9,8,7,7,8,12,13,10,6,6,6,4,4,3,5,13,13,13,13,12,12,12,13,12,14,16,16,13,11,10,10,10,10,11,11,10,10,8,7,6,6,9,12,14,12,7,7,7,6,3,2,3,14,13,12,13,12,12,14,14,12,14,16,15,13,12,9,10,10,10,11,11,10,10,8,7,5,6,8,11,14,12,8,8,8,7,3,2,3,14,13,13,14,10,13,19,19,17,17,16,14,13,12,9,9,10,11,11,10,11,11,10,7,6,6,8,11,13,11,9,9,8,7,3,4,4,13,13,13,13,9,14,22,23,21,21,18,15,13,13,9,9,10,12,11,9,10,12,11,9,8,6,8,10,11,10,8,9,7,6,4,5,5,11,12,13,12,8,12,21,24,24,25,24,19,14,13,11,10,11,12,10,8,9,13,14,12,9,7,7,8,8,8,8,9,7,5,4,3,3,9,12,12,11,8,13,21,25,28,30,30,23,16,15,13,11,12,11,9,7,9,13,16,15,11,7,7,6,7,7,9,10,7,5,4,2,2,8,11,12,11,11,16,22,25,30,33,33,26,19,17,14,12,12,10,9,8,9,12,16,15,12,8,6,6,7,7,8,10,8,5,4,3,4,8,11,11,12,15,20,23,26,31,36,36,29,22,19,15,12,13,10,9,9,10,13,16,15,12,8,5,6,7,7,8,11,9,6,5,5,5,8,10,12,15,21,23,26,27,31,37,39,33,26,21,16,12,13,11,9,10,11,14,15,14,11,9,6,7,8,7,8,10,9,6,5,6,7,8,9,13,18,25,27,29,29,32,38,41,36,28,22,17,12,13,12,10,11,13,14,15,13,11,9,8,8,9,9,9,9,8,6,6,8,9,8,11,14,20,27,30,32,32,34,39,43,39,29,21,16,13,14,13,11,12,14,15,15,14,11,10,9,9,12,12,11,10,7,6,7,10,10,8,12,15,22,27,31,35,35,36,39,44,39,30,21,16,14,15,14,12,13,15,15,16,15,12,11,10,11,14,15,14,11,7,6,8,12,12,10,15,18,23,26,28,33,35,35,37,40,35,28,20,16,14,16,14,13,14,15,15,15,14,13,12,11,13,15,15,14,11,7,7,12,15,15,11,18,20,23,24,24,30,34,33,35,35,31,26,18,17,15,16,14,13,15,15,15,14,14,14,14,13,14,15,15,13,10,7,8,15,17,17,12,18,21,23,22,22,26,32,30,30,29,26,22,17,16,14,15,15,13,13,15,15,15,14,15,15,14,15,16,15,13,10,7,9,14,17,17,13,18,22,21,20,19,23,30,27,26,23,21,18,16,15,12,14,16,13,11,14,16,15,15,17,17,15,15,16,14,13,11,8,9,12,15,17,15,18,20,19,20,21,26,30,28,26,24,21,19,17,16,14,15,16,13,11,13,15,16,16,17,18,16,16,17,15,14,11,9,9,11,13,15,16,18,18,16,19,22,29,30,29,27,25,22,20,18,17,16,17,17,14,12,11,14,18,17,18,19,18,17,17,17,14,12,11,10,10,10,12,18,18,18,18,21,24,31,29,29,27,25,22,21,18,18,17,18,18,14,14,14,16,19,18,19,19,19,18,17,17,15,13,13,11,10,10,11,21,19,18,19,23,26,34,29,29,27,25,22,21,18,17,18,18,18,15,18,18,18,20,19,20,20,19,19,17,16,16,15,15,13,12,11,10],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
