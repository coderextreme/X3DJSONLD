###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    Shape(
      appearance=Appearance(
        material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0,0.05,0)),
        texture=ImageTexture(url=['../../images/4/bosphorus6-15.jpg'],repeatS=False,repeatT=False)),
      geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(40.95291395417769,29.55022386869132,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=22,xSpacing=0.0035324567,zDimension=24,zSpacing=0.0023768744,height=[255,298,294,234,266,266,279,324,296,322,361,335,320,270,222,211,208,188,224,250,265,275,244,293,304,252,240,262,291,283,303,330,370,338,298,270,282,235,193,204,191,228,267,273,251,262,291,275,253,258,263,281,318,349,380,332,310,324,262,254,221,179,204,235,252,264,279,255,278,289,273,265,285,319,354,359,390,369,341,313,306,285,243,196,181,230,237,249,298,262,270,310,313,285,310,309,327,347,357,376,355,339,346,321,271,253,201,184,176,195,296,266,285,286,284,301,322,326,331,354,366,374,358,358,327,314,304,319,252,221,180,166,295,277,274,270,288,318,312,292,311,351,381,344,377,374,349,350,307,271,255,264,207,188,306,272,279,290,298,291,292,270,321,345,342,334,363,343,357,315,292,325,324,313,232,229,300,259,296,301,293,294,299,261,308,331,297,339,363,346,334,337,332,306,364,336,300,310,272,256,273,284,271,278,308,256,299,295,290,325,348,341,322,335,344,326,327,335,352,356,243,291,269,253,254,292,298,267,262,257,289,313,292,307,302,312,322,347,317,270,279,279,253,248,263,253,236,257,295,272,246,260,309,292,288,289,295,310,309,323,270,238,214,211,244,245,236,224,259,290,300,292,241,270,259,255,266,289,326,355,348,333,299,326,284,262,262,255,258,240,249,256,273,285,254,236,263,289,310,302,325,386,380,369,353,344,284,276,254,235,228,206,242,253,286,277,255,241,281,301,338,330,336,354,398,386,375,328,346,335,238,231,209,214,226,267,288,265,260,259,282,314,315,311,316,323,343,404,347,335,314,313,256,267,217,205,224,247,272,257,241,246,269,285,297,298,294,297,343,385,346,312,286,287,210,229,212,220,217,260,254,263,244,238,256,301,267,270,296,332,360,381,362,338,303,283,239,199,210,193,208,212,237,260,250,221,252,258,242,289,319,344,333,362,389,372,340,317,207,204,190,201,184,227,261,243,232,214,217,229,261,289,335,303,337,349,336,308,290,261,252,215,186,198,182,209,244,246,206,243,258,262,288,305,289,315,352,355,305,266,266,245,209,228,183,194,176,213,254,222,220,245,284,260,294,278,306,337,340,333,310,275,254,241,223,211,179,189,172,225,245,201,227,279,287,289,298,266,323,348,324,297,316,279,259,253,227,202,180,188,171,224,244,200,230,278,286,295,296,265,323,347,319,291,321,280,255,248],
        geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(41.06225017873692,29.030952729968703,0),geoSystem=['GDC'])))])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
