###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_414',geoSystem=['GDC'],position=(1.2908486746019459,104.00636398974156,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.2908486746019459,104.00636398974156,0.0),range=4101.627,child1Url=['../../tiles/5/singapore8-28.x3d'],child2Url=['../../tiles/5/singapore8-29.x3d'],child3Url=['../../tiles/5/singapore9-28.x3d'],child4Url=['../../tiles/5/singapore9-29.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore4-14.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.2821169622239519,103.99200095561254,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[3,4,7,8,16,19,16,12,7,15,22,5,-1,5,4,8,4,11,5,5,8,15,12,0,-3,0,6,7,7,8,6,4,8,12,6,1,1,3,9,11,6,14,18,16,13,11,18,25,13,-1,4,4,4,3,9,4,7,11,10,10,0,0,0,3,5,7,9,7,5,9,14,10,3,1,2,13,13,3,9,15,14,14,15,23,26,20,0,3,6,0,2,8,3,9,11,4,8,1,6,1,0,3,7,10,9,7,10,15,14,5,1,1,13,11,0,4,8,9,10,16,23,25,17,6,7,8,-2,0,10,2,10,1,0,9,6,7,0,-2,3,7,10,11,9,12,15,12,4,2,1,12,7,-3,0,2,4,7,16,22,23,13,11,12,10,-5,-1,11,1,11,-7,-4,10,10,8,0,-3,5,7,11,12,9,14,14,10,4,2,4,11,8,1,0,3,4,7,19,23,17,9,10,12,11,-2,0,7,1,9,0,0,11,10,9,6,0,9,8,11,9,7,11,11,9,8,8,6,9,9,7,3,5,5,9,24,24,11,6,6,10,11,1,2,3,1,7,12,5,12,9,11,13,8,14,10,11,5,5,7,7,8,12,14,3,6,9,9,7,5,5,18,36,26,8,3,2,7,9,0,0,7,8,11,14,4,15,11,10,13,13,16,12,8,5,7,4,3,6,12,14,0,4,8,10,10,4,4,29,49,26,6,2,0,5,7,-1,0,13,15,16,14,1,18,13,8,11,16,18,12,4,7,10,2,0,3,10,13,2,4,8,11,10,4,10,35,47,24,7,4,0,-1,4,1,5,16,16,10,6,1,13,10,2,6,13,16,11,7,12,13,2,-1,2,8,11,7,5,9,12,9,5,16,39,41,22,9,8,0,-9,1,6,15,18,14,2,-2,2,6,5,-4,0,9,13,11,11,16,16,3,-1,0,5,8,12,9,9,11,9,9,24,41,34,20,11,9,4,-5,1,7,13,16,14,3,1,2,1,1,-2,1,6,8,7,9,15,17,4,-1,1,5,7,16,13,9,9,8,14,32,43,26,17,12,8,8,0,1,8,8,13,13,7,9,2,-2,0,1,2,3,3,4,6,12,17,5,-1,3,6,6,11,13,11,11,11,19,36,39,22,14,13,8,9,2,3,8,9,12,14,6,15,3,-4,0,3,3,1,0,2,4,7,10,0,-2,3,6,5,2,12,12,15,14,25,39,32,19,10,12,8,6,3,5,9,11,10,16,4,19,4,-5,0,4,3,0,-1,1,3,3,0,-5,-3,4,5,4,-2,12,19,23,22,30,37,28,16,10,11,8,5,5,8,8,12,12,21,5,13,5,0,0,4,3,0,-2,0,4,2,-2,-7,-8,0,4,2,-6,13,28,33,32,35,35,24,13,10,9,7,4,7,12,6,12,14,27,10,5,5,9,2,2,3,0,-3,-4,7,2,-3,-8,-14,-2,4,1,-4,15,39,45,37,34,29,19,8,6,8,5,0,7,13,5,12,12,24,3,0,9,12,4,2,2,0,0,-3,6,3,0,-2,-11,-1,3,0,0,18,51,56,38,29,22,15,2,0,7,3,-2,8,13,5,11,8,16,-10,0,14,13,7,2,2,2,6,0,4,4,7,4,-3,2,2,0,1,15,44,50,34,23,16,11,1,0,9,3,-2,7,10,3,7,6,10,-8,-1,12,12,6,2,2,3,7,1,3,6,8,8,3,6,5,2,2,9,25,34,27,18,11,7,4,2,13,3,0,5,6,0,2,5,6,0,-4,6,12,4,3,3,4,5,2,4,8,7,10,8,10,11,8,2,5,14,21,19,10,4,4,4,2,14,4,1,5,6,0,0,4,6,7,-3,5,11,3,3,4,5,3,3,6,9,7,9,12,12,10,8,1,3,8,12,11,1,-4,2,1,2,13,6,2,7,9,0,0,3,8,12,0,7,11,4,2,6,3,2,3,8,9,7,9,13,10,6,4,-1,0,4,6,6,0,-5,2,3,3,9,6,5,9,9,1,0,2,10,13,1,9,11,6,2,5,2,1,3,10,10,6,7,12,9,3,2,-7,-1,0,2,4,3,0,5,10,7,2,4,8,10,6,2,0,1,11,13,3,11,12,7,2,1,0,0,3,10,12,5,4,9,7,3,1,-6,-2,0,0,2,7,6,6,15,17,8,3,9,11,3,3,0,1,11,11,2,10,15,8,1,1,0,0,1,8,12,4,3,6,6,3,3,0,0,-2,-3,0,7,11,6,17,31,26,3,9,12,1,6,1,0,12,7,0,6,20,8,1,4,0,0,0,4,9,4,1,4,5,6,6,4,0,-4,-4,0,10,12,4,13,33,31,1,3,9,1,8,4,3,13,5,0,4,21,8,1,7,1,1,0,1,6,3,0,5,8,9,9,2,-4,-7,-4,4,13,10,1,4,21,21,0,-5,3,5,10,6,10,15,7,0,4,17,7,0,11,3,4,2,0,2,1,0,9,13,11,10,-1,-9,-7,-1,8,13,7,0,0,12,15,-1,-13,-2,8,12,9,15,11,11,2,4,14,6,1,12,6,7,5,0,1,0,0,12,18,13,11,-7,-15,-4,3,8,9,2,0,2,9,17,0,-19,-8,10,14,14,13,2,18,5,4,12,6,4,11,8,13,7,1,2,0,0,14,20,15,12,-7,-15,0,7,8,5,0,5,7,8,17,1,-19,-11,10,16,20,15,-1,18,6,4,10,7,7,9,9,16,9,3,4,0,1,14,21,17,13,0,-7,1,7,5,3,3,12,15,8,9,2,-10,-7,6,18,26,22,4,10,4,3,8,9,7,7,9,15,9,5,3,6,7,16,21,16,12,6,-1,2,4,2,2,7,17,18,7,3,3,-1,-3,3,17,29,26,9,2,2,2,6,10,7,5,9,13,8,4,1,10,12,17,19,13,10,5,2,3,1,1,5,10,13,9,4,2,3,1,0,0,15,28,23,7,0,0,1,4,8,6,4,8,10,3,0,-3,10,15,17,17,10,7,1,5,3,0,3,8,12,10,1,2,3,2,2,0,0,13,23,16,2,-1,0,0,3,6,6,4,6,6,0,-3,-6,9,16,16,14,7,4,0,7,3,2,8,11,12,12,3,0,1,0,1,0,1,11,13,6,-6,-3,-1,0,2,3,6,5,5,2,-1,-4,-4,6,15,14,9,5,4,0,8,3,5,13,13,11,14,6,0,0,-1,0,1,3,9,5,0,-11,-4,-1,0,2,1,6,6,5,0,-2,-4,-1,5,13,11,6,4,4,3,6,2,6,12,10,9,13,8,0,-1,-2,4,5,4,10,6,5,-5,-2,0,0,2,1,2,4,5,1,-2,-3,0,4,10,7,3,3,5,5,4,2,8,10,6,6,11,9,2,-3,-1,9,9,5,10,10,13,3,0,0,0,1,1,0,3,6,3,-1,-2,0,5,8,5,2,4,6,6,6,5,10,9,3,3,8,10,3,-4,0,12,9,6,8,11,17,5,2,4,1,0,2,0,6,7,6,0,-3,0,7,9,5,2,4,6,7,7,8,11,9,2,1,5,9,2,-4,1,13,9,7,6,12,18,6,6,9,3,-1,2,0,9,8,7,0,-4,1,8,10,7,3,3,6,7,6,6,9,9,4,0,3,6,0,-2,5,13,9,6,7,11,16,8,10,15,2,-3,-3,-2,6,9,5,-5,-5,1,7,10,8,5,3,5,6,3,2,6,9,8,0,2,3,-3,0,8,13,8,5,7,9,13,10,12,18,2,-4,-9,-5,1,9,1,-11,-7,0,7,9,9,7,3,3],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
