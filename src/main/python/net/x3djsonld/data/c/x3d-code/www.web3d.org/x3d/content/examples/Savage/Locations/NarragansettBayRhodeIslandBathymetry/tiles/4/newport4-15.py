###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoLOD(center=(41.331234016012,-71.10970089138983,0.0),range=6150.345,child1Url=['../../tiles/5/newport8-30.x3d'],child2Url=['../../tiles/5/newport8-31.x3d'],child3Url=['../../tiles/5/newport9-30.x3d'],child4Url=['../../tiles/5/newport9-31.x3d'],
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(41.5,-71.5,0),geoSystem=['GDC']),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0,0.05,0)),
            texture=ImageTexture(url=['../../images/4/newport4-15.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(41.30704408055511,-71.13168471846758,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=55,xSpacing=8.142158E-4,zDimension=52,zSpacing=9.486249E-4,height=[-31,-31,-31,-31,-31,-32,-32,-32,-32,-32,-32,-31,-31,-30,-31,-30,-30,-30,-31,-31,-32,-31,-31,-30,-30,-30,-29,-29,-29,-31,-31,-31,-31,-30,-29,-28,-28,-29,-30,-31,-31,-31,-30,0,0,0,0,0,0,0,0,0,0,0,0,-31,-31,-31,-31,-32,-32,-32,-32,-32,-32,-31,-31,-31,-31,-31,-31,-30,-30,-31,-31,-31,-30,-30,-30,-30,-30,-29,-29,-30,-31,-30,-31,-30,-30,-29,-28,-30,-30,-30,-31,-30,-31,-31,0,0,0,0,0,0,0,0,0,0,0,0,-31,-31,-31,-32,-32,-32,-32,-32,-32,-31,-31,-31,-31,-31,-31,-31,-30,-31,-31,-31,-30,-30,-30,-29,-30,-30,-29,-29,-30,-30,-31,-30,-29,-29,-28,-29,-30,-29,-29,-30,-30,-30,-30,0,0,0,0,0,0,0,0,0,0,0,0,-31,-31,-32,-32,-32,-32,-32,-32,-32,-31,-31,-31,-30,-30,-30,-30,-30,-30,-30,-30,-30,-30,-30,-29,-28,-30,-30,-30,-30,-30,-30,-30,-30,-30,-30,-30,-29,-28,-30,-30,-29,-29,-30,0,0,0,0,0,0,0,0,0,0,0,0,-31,-31,-31,-32,-32,-32,-32,-31,-31,-31,-31,-30,-30,-30,-29,-29,-29,-28,-29,-29,-28,-28,-29,-27,-27,-29,-30,-30,-29,-30,-29,-29,-29,-28,-29,-29,-27,-29,-29,-29,-29,-28,-28,0,0,0,0,0,0,0,0,0,0,0,0,-31,-31,-31,-31,-31,-31,-32,-31,-31,-31,-31,-30,-30,-30,-29,-29,-28,-28,-28,-28,-28,-28,-28,-28,-28,-29,-29,-27,-28,-28,-28,-28,-27,-28,-28,-27,-26,-28,-28,-28,-28,-26,-27,0,0,0,0,0,0,0,0,0,0,0,0,-31,-31,-31,-31,-31,-31,-31,-31,-31,-31,-30,-30,-30,-29,-29,-27,-27,-27,-27,-26,-26,-27,-26,-27,-27,-27,-27,-27,-26,-26,-26,-26,-26,-26,-27,-26,-26,-27,-26,-27,-27,-26,-26,0,0,0,0,0,0,0,0,0,0,0,0,-31,-31,-31,-31,-31,-31,-31,-31,-31,-30,-30,-30,-29,-30,-29,-27,-27,-27,-26,-26,-26,-26,-26,-26,-25,-26,-25,-25,-25,-25,-25,-25,-25,-25,-25,-24,-25,-26,-26,-26,-25,-25,-24,0,0,0,0,0,0,0,0,0,0,0,0,-31,-31,-31,-31,-31,-30,-30,-31,-31,-31,-30,-30,-29,-28,-26,-25,-26,-25,-25,-25,-25,-24,-25,-24,-25,-24,-24,-24,-25,-24,-23,-24,-24,-25,-25,-25,-26,-25,-25,-25,-25,-23,-23,0,0,0,0,0,0,0,0,0,0,0,0,-31,-31,-31,-31,-31,-31,-31,-31,-31,-30,-30,-29,-29,-27,-28,-26,-25,-26,-25,-24,-24,-23,-24,-24,-25,-24,-24,-24,-23,-23,-23,-24,-23,-24,-23,-24,-25,-24,-25,-25,-23,-22,-23,0,0,0,0,0,0,0,0,0,0,0,0,-30,-30,-30,-30,-30,-30,-30,-30,-30,-30,-29,-28,-28,-28,-27,-24,-26,-25,-26,-24,-25,-25,-24,-25,-25,-24,-23,-22,-21,-21,-22,-23,-23,-24,-23,-23,-24,-25,-24,-24,-23,-24,-23,0,0,0,0,0,0,0,0,0,0,0,0,-31,-31,-30,-30,-30,-30,-30,-29,-29,-29,-29,-29,-28,-27,-26,-24,-27,-27,-26,-25,-25,-24,-25,-25,-24,-24,-23,-22,-23,-22,-21,-23,-23,-23,-22,-23,-24,-23,-22,-23,-22,-24,-23,0,0,0,0,0,0,0,0,0,0,0,0,-30,-30,-30,-30,-30,-30,-30,-29,-28,-29,-29,-28,-27,-26,-25,-28,-28,-27,-27,-27,-26,-25,-26,-25,-24,-22,-23,-21,-22,-22,-22,-23,-23,-22,-23,-22,-23,-22,-23,-22,-23,-23,-23,0,0,0,0,0,0,0,0,0,0,0,0,-30,-30,-30,-29,-29,-29,-29,-29,-29,-29,-28,-26,-28,-26,-27,-28,-27,-25,-25,-26,-26,-25,-26,-25,-24,-24,-22,-23,-23,-22,-23,-21,-22,-21,-22,-23,-21,-20,-21,-22,-22,-22,-22,0,0,0,0,0,0,0,0,0,0,0,0,-30,-29,-29,-29,-29,-29,-29,-28,-28,-28,-28,-27,-28,-27,-26,-27,-25,-24,-25,-24,-24,-25,-25,-25,-24,-24,-23,-22,-22,-23,-22,-23,-22,-22,-20,-22,-22,-22,-21,-23,-23,-21,-22,0,0,0,0,0,0,0,0,0,0,0,0,-30,-29,-29,-29,-29,-28,-28,-28,-28,-27,-26,-26,-27,-26,-25,-25,-25,-25,-24,-26,-24,-25,-25,-22,-23,-23,-22,-21,-21,-22,-21,-21,-20,-22,-22,-23,-22,-23,-23,-23,-23,-21,-23,0,0,0,0,0,0,0,0,0,0,0,0,-29,-29,-29,-28,-28,-28,-28,-27,-27,-26,-26,-25,-26,-25,-25,-26,-26,-23,-25,-25,-23,-25,-24,-23,-23,-22,-23,-22,-22,-20,-20,-20,-20,-21,-20,-21,-21,-22,-22,-22,-21,-22,-21,0,0,0,0,0,0,0,0,0,0,0,0,-29,-28,-28,-27,-27,-27,-27,-26,-26,-25,-24,-25,-25,-25,-25,-25,-25,-25,-25,-23,-25,-24,-24,-24,-25,-25,-23,-22,-22,-21,-20,-21,-20,-21,-21,-21,-19,-19,-22,-22,-20,-22,-22,0,0,0,0,0,0,0,0,0,0,0,0,-29,-28,-28,-28,-27,-27,-26,-26,-25,-25,-25,-25,-24,-24,-25,-24,-24,-24,-23,-23,-25,-25,-24,-23,-24,-25,-25,-24,-24,-22,-21,-20,-21,-21,-21,-21,-21,-20,-19,-21,-21,-22,-22,0,0,0,0,0,0,0,0,0,0,0,0,-29,-29,-28,-28,-28,-28,-27,-27,-26,-26,-26,-25,-24,-24,-24,-25,-25,-24,-24,-23,-24,-25,-24,-24,-25,-25,-24,-24,-23,-23,-23,-22,-22,-20,-20,-21,-19,-20,-19,-20,-20,-20,-19,0,0,0,0,0,0,0,0,0,0,0,0,-28,-28,-28,-28,-28,-28,-27,-27,-27,-27,-27,-26,-25,-25,-25,-25,-24,-24,-24,-25,-26,-26,-26,-27,-27,-26,-25,-25,-24,-22,-22,-21,-20,-21,-19,-21,-20,-20,-17,-19,-20,-20,-20,0,0,0,0,0,0,0,0,0,0,0,0,-29,-29,-28,-28,-28,-28,-28,-28,-28,-27,-27,-26,-26,-26,-26,-26,-25,-26,-24,-25,-25,-26,-26,-25,-25,-25,-25,-26,-26,-25,-24,-22,-21,-20,-20,-19,-20,-18,-20,-19,-19,-20,-20,0,0,0,0,0,0,0,0,0,0,0,0,-28,-28,-28,-28,-28,-28,-28,-28,-28,-27,-27,-27,-27,-26,-26,-26,-27,-27,-26,-26,-27,-27,-26,-27,-26,-26,-27,-27,-27,-26,-25,-23,-20,-20,-21,-18,-19,-19,-18,-16,-18,-18,-18,0,0,0,0,0,0,0,0,0,0,0,0,-29,-28,-28,-28,-28,-28,-28,-28,-27,-27,-27,-27,-27,-27,-27,-26,-26,-25,-26,-26,-27,-27,-27,-27,-27,-27,-27,-27,-26,-26,-25,-22,-23,-21,-21,-20,-19,-19,-18,-17,-18,-17,-17,0,0,0,0,0,0,0,0,0,0,0,0,-29,-29,-29,-28,-28,-28,-28,-28,-28,-28,-28,-28,-28,-28,-28,-28,-27,-27,-27,-28,-27,-26,-26,-26,-27,-27,-27,-26,-25,-24,-26,-24,-24,-23,-22,-21,-21,-19,-19,-18,-16,-17,-17,0,0,0,0,0,0,0,0,0,0,0,0,-29,-29,-29,-28,-28,-28,-28,-28,-27,-27,-27,-28,-28,-28,-28,-28,-27,-27,-28,-28,-27,-26,-26,-27,-27,-27,-26,-26,-25,-25,-25,-25,-24,-24,-23,-22,-21,-21,-20,-19,-17,-17,-15,0,0,0,0,0,0,0,0,0,0,0,0,-29,-29,-29,-28,-28,-28,-28,-27,-27,-27,-27,-27,-28,-28,-28,-28,-26,-28,-27,-27,-26,-26,-27,-27,-27,-26,-26,-25,-25,-25,-24,-25,-23,-23,-25,-24,-24,-23,-21,-20,-20,-17,-16,0,0,0,0,0,0,0,0,0,0,0,0,-29,-29,-29,-28,-28,-28,-28,-28,-27,-27,-27,-27,-28,-28,-28,-28,-28,-27,-27,-26,-25,-25,-26,-26,-26,-25,-25,-23,-24,-23,-24,-25,-25,-27,-26,-26,-26,-25,-22,-23,-22,-22,-19,0,0,0,0,0,0,0,0,0,0,0,0,-29,-29,-28,-28,-28,-28,-27,-27,-27,-27,-27,-28,-28,-28,-28,-28,-28,-28,-27,-26,-26,-26,-26,-25,-25,-26,-24,-25,-24,-22,-21,-23,-26,-27,-27,-28,-28,-28,-27,-26,-25,-23,-22,0,0,0,0,0,0,0,0,0,0,0,0,-29,-29,-29,-28,-28,-28,-27,-27,-27,-27,-27,-27,-28,-28,-28,-28,-28,-28,-28,-27,-27,-27,-27,-26,-25,-25,-24,-25,-25,-25,-23,-24,-23,-25,-26,-27,-27,-27,-28,-28,-26,-25,-24,0,0,0,0,0,0,0,0,0,0,0,0,-29,-29,-29,-28,-28,-28,-27,-27,-27,-27,-27,-28,-28,-27,-27,-27,-28,-28,-28,-28,-28,-27,-27,-27,-26,-25,-25,-24,-25,-25,-24,-24,-24,-23,-22,-24,-23,-25,-24,-24,-23,-20,-26,0,0,0,0,0,0,0,0,0,0,0,0,-28,-28,-27,-27,-27,-27,-26,-26,-27,-27,-27,-27,-27,-27,-27,-27,-27,-27,-28,-28,-28,-27,-27,-27,-26,-26,-25,-24,-25,-25,-25,-26,-26,-27,-25,-22,-21,-23,-22,-22,-23,-26,-27,0,0,0,0,0,0,0,0,0,0,0,0,-27,-26,-26,-26,-26,-25,-26,-27,-27,-27,-27,-27,-27,-27,-27,-27,-27,-27,-26,-27,-28,-28,-26,-27,-27,-26,-25,-26,-26,-27,-27,-27,-27,-27,-25,-25,-22,-24,-21,-24,-25,-26,-26,0,0,0,0,0,0,0,0,0,0,0,0,-26,-25,-25,-25,-25,-26,-26,-27,-27,-27,-27,-27,-27,-26,-26,-26,-26,-26,-26,-27,-27,-26,-27,-28,-27,-27,-27,-27,-28,-28,-28,-29,-27,-27,-25,-25,-22,-24,-24,-21,-25,-26,-25,0,0,0,0,0,0,0,0,0,0,0,0,-25,-24,-24,-25,-25,-26,-26,-26,-27,-27,-26,-26,-26,-26,-26,-26,-26,-26,-26,-27,-27,-27,-27,-28,-27,-27,-27,-28,-28,-28,-28,-29,-28,-26,-26,-25,-25,-22,-22,-22,-24,-25,-26,0,0,0,0,0,0,0,0,0,0,0,0,-24,-24,-24,-25,-25,-26,-26,-26,-27,-27,-26,-26,-26,-26,-26,-26,-26,-26,-26,-27,-27,-27,-27,-27,-28,-27,-28,-27,-26,-28,-28,-28,-28,-28,-26,-26,-27,-23,-23,-24,-23,-25,-27,0,0,0,0,0,0,0,0,0,0,0,0,-24,-25,-25,-25,-25,-26,-27,-27,-27,-27,-27,-27,-27,-27,-26,-26,-26,-26,-26,-26,-26,-27,-27,-27,-27,-27,-28,-28,-28,-28,-28,-27,-26,-28,-26,-27,-27,-26,-26,-25,-24,-26,-28,0,0,0,0,0,0,0,0,0,0,0,0,-25,-25,-25,-25,-25,-26,-26,-27,-27,-27,-27,-27,-27,-27,-27,-26,-26,-26,-26,-26,-26,-26,-26,-27,-27,-26,-28,-28,-28,-28,-28,-28,-27,-27,-29,-29,-28,-27,-27,-26,-26,-27,-29,0,0,0,0,0,0,0,0,0,0,0,0,-25,-25,-25,-26,-26,-26,-26,-27,-26,-26,-26,-26,-26,-26,-26,-26,-26,-26,-26,-26,-26,-26,-26,-27,-27,-27,-26,-28,-28,-28,-28,-28,-28,-29,-29,-29,-29,-28,-28,-26,-26,-28,-29,0,0,0,0,0,0,0,0,0,0,0,0,-26,-26,-26,-25,-25,-25,-25,-24,-25,-25,-25,-25,-25,-25,-26,-26,-26,-26,-26,-26,-26,-26,-26,-27,-27,-27,-27,-27,-27,-27,-28,-28,-28,-28,-28,-29,-29,-29,-28,-27,-26,-28,-29,0,0,0,0,0,0,0,0,0,0,0,0,-28,-27,-27,-27,-27,-27,-26,-26,-26,-26,-26,-26,-26,-26,-26,-26,-26,-26,-26,-26,-26,-26,-26,-26,-27,-26,-24,-27,-27,-27,-27,-28,-28,-28,-28,-28,-29,-29,-29,-28,-29,-30,-30,0,0,0,0,0,0,0,0,0,0,0,0,-28,-28,-28,-27,-27,-27,-26,-26,-26,-26,-26,-26,-26,-26,-26,-26,-26,-26,-26,-26,-26,-26,-26,-26,-27,-27,-27,-27,-27,-27,-27,-27,-28,-28,-28,-28,-29,-29,-29,-29,-29,-29,-29,0,0,0,0,0,0,0,0,0,0,0,0,-28,-27,-27,-27,-27,-27,-26,-26,-26,-26,-26,-26,-26,-26,-26,-26,-26,-26,-25,-26,-26,-26,-26,-26,-27,-27,-27,-27,-27,-27,-27,-27,-27,-28,-28,-28,-28,-29,-29,-29,-29,-29,-29,0,0,0,0,0,0,0,0,0,0,0,0,-27,-27,-27,-27,-26,-26,-26,-26,-26,-26,-26,-26,-26,-26,-26,-25,-25,-25,-25,-26,-26,-26,-26,-26,-26,-26,-27,-27,-27,-27,-27,-28,-28,-28,-28,-28,-28,-28,-28,-29,-29,-29,-29,0,0,0,0,0,0,0,0,0,0,0,0,-27,-26,-26,-26,-25,-25,-25,-24,-24,-25,-25,-25,-25,-25,-25,-25,-25,-25,-25,-25,-26,-26,-26,-26,-26,-26,-27,-27,-27,-27,-27,-27,-27,-27,-27,-28,-28,-28,-28,-28,-28,-28,-29,0,0,0,0,0,0,0,0,0,0,0,0,-26,-26,-25,-25,-24,-24,-24,-23,-24,-24,-24,-24,-24,-24,-24,-25,-25,-25,-25,-25,-25,-26,-26,-26,-26,-26,-27,-27,-27,-27,-26,-27,-27,-27,-27,-27,-27,-28,-28,-28,-28,-28,-28,0,0,0,0,0,0,0,0,0,0,0,0,-26,-26,-25,-25,-25,-24,-24,-24,-24,-24,-24,-24,-24,-24,-25,-25,-25,-25,-25,-25,-25,-26,-26,-26,-26,-26,-26,-27,-27,-26,-26,-27,-27,-27,-27,-27,-27,-27,-27,-27,-27,-27,-27,0,0,0,0,0,0,0,0,0,0,0,0,-26,-26,-26,-25,-25,-25,-25,-24,-25,-25,-25,-25,-25,-25,-25,-25,-25,-25,-25,-25,-25,-25,-25,-26,-26,-26,-26,-26,-26,-26,-26,-26,-27,-27,-27,-27,-27,-27,-27,-27,-27,-27,-27,0,0,0,0,0,0,0,0,0,0,0,0,-27,-27,-26,-26,-26,-26,-26,-26,-26,-25,-25,-25,-25,-25,-25,-25,-25,-25,-25,-25,-25,-25,-25,-25,-25,-25,-25,-26,-25,-25,-25,-26,-26,-26,-26,-26,-26,-26,-26,-27,-27,-27,-27,0,0,0,0,0,0,0,0,0,0,0,0,-28,-28,-28,-28,-27,-27,-27,-27,-27,-27,-27,-26,-26,-26,-26,-25,-25,-25,-25,-24,-25,-25,-25,-25,-25,-25,-25,-25,-25,-24,-25,-25,-25,-25,-25,-25,-26,-26,-26,-26,-26,-26,-26,0,0,0,0,0,0,0,0,0,0,0,0,-28,-28,-28,-28,-28,-28,-28,-28,-27,-27,-27,-26,-26,-26,-26,-25,-25,-25,-24,-24,-24,-24,-24,-24,-24,-24,-24,-24,-24,-23,-23,-24,-24,-24,-25,-25,-25,-25,-25,-26,-26,-26,-26,-27,0,0,0,0,0,0,0,0,0,0,0,-28,-28,-28,-28,-28,-28,-28,-28,-27,-27,-27,-26,-26,-26,-26,-25,-25,-25,-24,-24,-24,-24,-24,-24,-24,-24,-24,-24,-23,-23,-23,-24,-24,-24,-24,-24,-25,-25,-25,-25,-26,-26,-26,-27,0,0,0,0,0,0,0,0,0,0,0],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
