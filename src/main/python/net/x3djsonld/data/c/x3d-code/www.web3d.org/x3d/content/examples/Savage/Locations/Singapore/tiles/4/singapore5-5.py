###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_55',geoSystem=['GDC'],position=(1.3083120993579338,103.74782937541922,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.3083120993579338,103.74782937541922,0.0),range=4101.627,child1Url=['../../tiles/5/singapore10-10.x3d'],child2Url=['../../tiles/5/singapore10-11.x3d'],child3Url=['../../tiles/5/singapore11-10.x3d'],child4Url=['../../tiles/5/singapore11-11.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore5-5.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.2995803869799398,103.7334663412902,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=45,zSpacing=3.96896E-4,height=[-3,0,2,10,12,10,7,8,9,8,7,9,9,6,7,6,7,7,7,7,8,9,9,10,10,8,7,5,6,11,6,8,6,4,13,14,14,0,2,4,9,11,10,8,8,9,7,7,9,8,6,6,7,8,7,7,7,8,8,9,10,10,8,7,5,6,10,7,9,5,4,13,15,14,5,5,7,7,9,9,10,9,8,6,7,8,7,7,5,6,9,8,7,8,7,7,9,10,9,8,6,5,6,7,8,10,5,6,12,15,15,6,6,8,7,9,9,11,10,7,6,7,7,6,6,5,6,8,8,7,7,8,9,9,10,9,7,6,5,7,7,9,10,7,7,11,14,15,6,7,8,8,10,10,11,11,8,7,7,7,6,5,6,6,8,7,6,7,10,11,10,9,8,5,6,6,9,8,9,11,11,8,11,14,16,6,8,9,9,10,10,10,11,8,8,8,7,7,5,6,6,8,8,6,7,10,12,10,9,7,4,6,7,10,10,9,9,10,9,8,12,15,7,8,9,11,11,11,10,10,8,9,9,8,8,6,6,7,8,8,7,7,10,11,11,10,6,4,5,7,11,11,8,8,8,11,5,9,14,7,8,8,10,11,10,9,8,8,10,9,8,8,5,3,5,8,7,6,8,10,10,10,10,6,4,5,6,9,10,7,7,6,11,6,10,16,7,7,7,8,10,9,8,6,7,12,9,9,8,4,0,2,7,4,5,8,9,8,10,10,6,4,5,4,7,8,6,6,6,12,11,14,19,7,6,7,8,9,9,7,6,7,12,8,7,6,2,-5,-1,1,-2,2,8,8,8,9,9,6,5,5,4,6,7,7,9,9,13,13,14,17,9,6,7,9,8,8,7,6,7,10,8,4,2,0,-11,-8,-8,-11,-1,8,9,8,8,7,5,5,6,5,5,6,9,14,14,12,13,11,13,9,6,5,7,8,8,7,7,7,10,8,3,1,-1,-12,-11,-12,-14,-3,5,8,8,7,6,5,5,5,5,5,6,10,18,19,14,14,12,12,8,7,4,5,8,9,9,8,8,10,9,4,1,-2,-10,-12,-12,-11,-5,1,7,8,7,7,5,4,4,5,6,6,10,22,25,17,15,14,14,8,7,4,5,9,9,10,9,8,9,9,6,3,-2,-8,-12,-12,-9,-4,0,5,7,7,7,5,4,4,5,7,7,10,21,26,17,14,14,14,8,6,5,6,8,7,9,9,9,8,10,8,4,0,-7,-11,-11,-7,-3,0,4,7,7,6,4,3,4,5,6,6,10,17,24,14,12,12,13,8,5,6,7,8,7,9,9,9,8,10,10,6,0,-5,-9,-9,-5,0,1,3,6,7,5,4,3,4,5,6,7,10,13,21,12,13,12,13,7,6,6,8,10,8,9,9,9,7,9,11,8,3,-2,-7,-7,-2,1,3,3,4,5,4,4,4,5,6,7,9,12,10,15,11,15,14,13,6,6,7,9,11,8,9,9,9,8,8,11,10,6,0,-4,-4,0,4,5,4,4,4,4,5,4,5,6,8,10,13,9,12,11,15,14,13,7,8,9,10,11,8,9,9,10,9,8,9,12,8,3,0,0,3,6,7,6,4,3,5,8,3,5,7,9,12,13,10,12,13,13,15,12,8,9,10,10,11,9,9,9,11,10,8,9,11,11,7,3,2,5,7,8,6,3,3,8,11,4,6,7,10,12,11,10,12,13,11,15,12,8,8,10,9,10,10,9,9,11,11,9,8,10,12,10,7,5,6,8,7,4,2,7,13,14,7,8,8,11,11,9,8,13,13,8,13,12,8,8,10,9,9,11,9,8,10,11,10,8,9,12,13,11,8,7,8,7,3,2,7,16,15,9,10,8,10,10,8,9,14,13,8,12,11,9,10,10,9,9,12,9,7,8,11,11,9,8,11,13,12,10,7,8,7,5,2,3,15,14,10,10,9,9,8,10,11,15,14,11,12,10,9,11,11,10,10,12,8,6,7,10,11,10,8,11,14,12,10,8,8,7,8,4,4,15,15,10,10,10,8,9,13,14,15,16,13,12,10,8,11,12,12,9,10,7,6,6,8,11,11,10,11,14,13,11,9,7,8,9,8,11,18,16,9,9,11,9,10,16,15,14,19,17,13,11,7,11,12,12,9,8,6,6,5,7,10,11,10,12,13,14,12,9,7,8,10,12,17,22,18,9,9,11,10,12,18,15,13,20,19,14,12,7,11,10,12,7,7,5,5,5,6,8,11,11,12,13,14,13,10,8,10,11,14,20,24,22,11,10,10,9,15,17,13,9,16,17,15,14,8,10,8,10,6,6,6,5,5,5,7,10,11,11,12,13,13,9,8,10,12,14,19,24,23,13,11,9,8,16,16,12,7,11,15,16,16,10,8,6,8,6,6,5,5,5,5,6,8,10,10,11,12,12,6,6,9,11,12,14,18,20,13,10,8,7,14,15,12,9,10,14,17,16,12,7,3,7,6,5,5,5,5,5,5,7,9,10,10,11,10,5,4,8,10,11,11,13,16,13,10,7,7,12,14,12,12,10,13,17,15,13,8,4,6,7,5,5,5,5,5,5,6,7,8,9,9,10,7,5,8,10,10,10,12,13,12,9,7,9,13,13,11,12,9,12,16,15,12,8,5,5,7,6,5,5,5,5,5,5,6,7,7,7,9,9,7,9,10,10,10,11,10,11,8,8,12,14,13,11,11,9,12,15,16,11,8,6,5,7,8,7,5,5,5,5,5,5,6,6,6,7,7,8,9,10,10,10,10,10,10,9,9,13,13,12,11,12,12,12,14,16,10,7,6,5,8,11,9,6,5,5,5,5,5,5,5,5,4,5,8,9,10,10,10,9,9,9,9,10,12,12,12,12,14,16,13,14,17,11,8,6,7,10,12,10,7,5,5,5,4,4,4,4,4,3,4,8,9,9,9,10,9,9,9,9,9,10,12,12,14,17,19,15,15,17,11,9,6,8,13,13,11,9,6,5,5,4,3,3,3,3,2,5,8,9,9,9,9,10,10,9,9,9,9,12,13,17,19,21,18,17,18,11,9,7,11,13,13,11,11,8,6,5,4,3,3,3,3,3,5,7,9,9,8,9,10,11,11,10,10,10,13,14,18,21,22,19,19,19,11,9,8,13,13,12,12,12,10,7,5,5,4,4,4,4,4,6,6,8,9,8,8,10,12,13,13,12,12,14,15,19,23,22,20,20,20,10,9,9,12,11,11,12,14,11,7,6,5,4,4,4,4,5,4,5,7,8,7,8,9,12,15,16,13,13,15,16,20,23,22,21,19,19,9,8,10,9,10,10,13,17,11,7,6,5,4,4,5,5,5,2,3,6,7,8,7,7,11,16,17,15,13,15,16,20,22,23,22,17,19,8,8,11,10,10,10,15,17,11,7,6,5,4,5,5,6,5,2,3,6,7,8,8,7,10,16,17,15,14,15,16,20,23,24,23,18,19,8,10,12,11,9,12,18,15,11,8,6,5,4,5,6,7,5,4,5,5,7,9,9,7,9,15,17,15,14,14,16,21,25,27,25,19,20,9,11,11,10,9,14,18,14,10,9,7,5,4,5,7,8,7,6,6,6,7,8,9,7,9,14,16,16,15,14,17,20,26,27,26,20,20,12,12,10,7,11,17,16,12,11,10,8,5,4,5,7,9,10,9,8,8,6,6,8,8,10,14,15,17,17,15,17,20,25,25,26,19,19,12,12,9,8,14,18,14,11,12,11,9,6,4,4,7,10,12,13,12,11,9,6,8,10,11,14,15,17,18,16,18,19,23,24,24,19,18],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
