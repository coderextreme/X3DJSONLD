###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoLOD(center=(41.47637362875333,-71.32953916216731,0.0),range=6150.345,child1Url=['../../tiles/5/newport14-20.x3d'],child2Url=['../../tiles/5/newport14-21.x3d'],child3Url=['../../tiles/5/newport15-20.x3d'],child4Url=['../../tiles/5/newport15-21.x3d'],
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(41.5,-71.5,0),geoSystem=['GDC']),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0,0.05,0)),
            texture=ImageTexture(url=['../../images/4/newport7-10.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(41.45218369329644,-71.35152298924505,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=55,xSpacing=8.142158E-4,zDimension=52,zSpacing=9.486249E-4,height=[0,0,0,-1,-1,0,0,-2,-1,-3,-5,-4,-7,-8,-1,0,-1,-1,-1,0,0,-2,-2,-7,-3,-6,-9,-10,-10,-10,-11,-12,-12,-12,-12,-11,-12,-12,-11,-11,-11,-11,-11,-11,-12,-11,-11,-9,-7,-3,-1,0,0,0,-1,0,0,0,0,0,-1,-1,-1,0,-1,-3,-2,-3,-3,-3,-2,0,0,0,0,-1,-1,0,-3,-5,-5,-2,-7,-7,-2,-9,-8,-5,-7,-11,-11,-11,-10,-10,-10,-10,-10,-10,-10,-10,-9,-9,-8,-7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-1,-1,-2,-1,-1,0,0,0,0,0,0,-1,-1,-1,0,0,0,-1,-5,-3,-4,-1,0,-1,-3,-5,-10,-8,-9,-9,-9,-9,-9,-8,-7,-7,-6,-6,-5,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,-1,-2,-1,-4,-2,0,0,0,-4,-4,-6,-1,-6,-8,-7,-7,-6,-2,-5,-4,-4,-3,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,-4,-3,-1,-1,0,0,-2,-8,-9,-9,-8,-7,0,0,-1,-1,0,-2,-1,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,-3,-3,-2,-1,0,-2,-7,-7,-6,-3,-3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-2,-2,-1,-3,-4,-4,-2,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-1,-1,-2,-3,0,0,-2,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-1,0,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-21,-12,-5,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-44,-38,-28,-14,-8,-5,-3,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-3,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-49,-48,-45,-37,-27,-19,-14,-3,0,0,0,0,0,0,0,0,0,0,0,0,0,-3,-4,-3,-3,-3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-49,-49,-50,-47,-42,-34,-26,-15,-7,-1,0,0,0,0,0,0,0,0,0,-1,-2,-3,-4,-4,-4,-4,-4,-4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-46,-49,-50,-49,-46,-43,-34,-26,-20,-12,-4,0,0,0,0,0,0,0,0,0,-1,-3,-4,-4,-4,-4,-4,-4,-4,-3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-43,-47,-44,-43,-49,-47,-43,-36,-29,-23,-14,-8,0,0,0,0,0,0,0,0,-1,-1,-3,-4,-4,-4,-4,-5,-4,-4,-4,-3,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-40,-42,-47,-49,-48,-47,-45,-40,-34,-29,-25,-16,-9,-1,0,0,0,0,0,0,0,0,-1,-3,-5,-5,-5,-5,-5,-4,-4,-4,-3,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-37,-42,-45,-48,-48,-48,-47,-45,-38,-32,-27,-23,-17,-7,-1,0,0,0,0,0,0,0,-1,-4,-4,-5,-6,-6,-6,-5,-5,-4,-4,0,-1,-1,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-35,-39,-43,-46,-47,-47,-47,-46,-42,-36,-31,-26,-21,-14,-7,-2,0,0,0,0,0,0,-3,-5,-5,-6,-7,-7,-7,-6,-5,-5,-4,-5,-4,-5,-4,-4,-2,-1,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,-33,-39,-43,-46,-48,-47,-47,-46,-45,-38,-32,-29,-24,-18,-12,-6,-2,0,0,0,0,0,-4,-6,-7,-7,-8,-7,-7,-6,-5,-5,-5,-5,-5,-4,-4,-4,-4,-4,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-16,-28,-39,-47,-50,-50,-48,-46,-44,-38,-34,-30,-26,-22,-17,-9,-4,-1,0,0,0,-1,-6,-9,-9,-8,-8,-8,-7,-6,-5,-5,-6,-6,-6,-5,-6,-4,-4,-4,-3,-4,-4,-4,0,0,0,0,0,0,0,0,0,0,0,-10,-24,-34,-46,-50,-51,-48,-46,-44,-40,-34,-30,-27,-24,-20,-13,-6,-2,0,0,0,-4,-9,-10,-9,-9,-9,-8,-8,-7,-6,-6,-6,-5,-5,-5,-5,-5,-4,-4,-4,-4,-4,-3,-1,0,0,0,0,0,0,0,0,0,0,-1,-10,-28,-45,-51,-49,-47,-45,-45,-40,-36,-32,-28,-24,-20,-17,-11,-6,-4,-2,-7,-10,-11,-11,-10,-10,-10,-9,-8,-5,-5,-5,-7,-6,-6,-5,-5,-5,-5,-5,-4,-4,-5,-4,-1,0,0,0,0,0,0,0,0,0,0,-5,-7,-31,-47,-48,-48,-46,-46,-44,-41,-38,-35,-31,-26,-22,-20,-16,-11,-8,-9,-10,-11,-12,-12,-12,-12,-12,-11,-7,-3,0,0,-1,-5,-6,-6,-6,-5,-5,-5,-5,-5,-4,-3,0,0,0,0,0,0,0,0,0,0,0,-7,-14,-31,-46,-46,-46,-45,-45,-43,-40,-37,-35,-32,-27,-24,-22,-19,-16,-13,-12,-12,-13,-13,-13,-14,-14,-14,-11,-7,-2,0,0,0,-4,-7,-7,-6,-5,-5,-5,-5,-5,-5,-3,-1,0,0,0,0,0,0,0,0,0,0,-23,-32,-40,-45,-45,-44,-44,-44,-42,-38,-35,-35,-33,-29,-25,-23,-21,-19,-16,-15,-14,-14,-14,-14,-15,-15,-14,-11,-7,-1,0,0,-1,-4,-7,-6,-6,-5,-5,-5,-5,-5,-5,-3,-2,0,0,0,0,0,0,0,0,0,0,-30,-37,-41,-44,-44,-43,-43,-42,-40,-37,-35,-34,-33,-30,-25,-22,-20,-19,-18,-17,-16,-14,-15,-15,-15,-15,-14,-11,-7,-1,0,0,-1,-3,-6,-7,-6,-6,-5,-5,-5,-5,-5,-1,-1,0,0,0,0,0,0,0,0,0,0,-36,-41,-41,-42,-41,-41,-41,-40,-39,-36,-35,-34,-33,-30,-24,-21,-19,-18,-18,-17,-16,-15,-15,-15,-15,-14,-13,-11,-7,-1,0,0,-2,-4,-6,-6,-6,-6,-5,-5,-5,-5,-5,-2,0,0,0,0,0,0,0,0,0,0,0,-39,-41,-40,-40,-40,-39,-39,-38,-38,-36,-34,-32,-31,-29,-24,-22,-20,-18,-17,-16,-16,-16,-15,-16,-15,-14,-13,-11,-7,-1,0,0,0,0,-5,-6,-6,-5,-5,-5,-5,-5,-5,-4,0,0,0,0,0,0,0,0,0,0,0,-37,-37,-36,-38,-38,-38,-38,-38,-38,-36,-34,-32,-30,-27,-24,-22,-20,-17,-14,-15,-15,-15,-16,-17,-16,-14,-14,-11,-7,-2,0,0,0,-5,-6,-6,-6,-5,-3,-2,-1,-1,-3,-1,0,0,0,0,0,0,0,0,0,0,0,-33,-33,-34,-37,-38,-38,-38,-38,-38,-36,-34,-32,-29,-26,-23,-21,-18,-15,-13,-14,-14,-14,-16,-17,-16,-15,-14,-12,-7,-3,0,0,-3,-6,-6,-5,-5,0,0,0,0,0,-1,-1,0,0,0,0,0,0,0,0,0,0,0,-31,-32,-33,-37,-38,-38,-38,-38,-38,-36,-34,-32,-27,-23,-20,-18,-16,-14,-12,-13,-13,-14,-15,-17,-15,-14,-14,-12,-7,-3,0,0,-3,-5,-6,-5,-5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-31,-32,-34,-37,-38,-39,-39,-39,-38,-37,-35,-32,-26,-21,-19,-16,-15,-13,-11,-12,-12,-12,-14,-16,-16,-15,-14,-12,-8,-4,0,0,-2,-7,-6,-6,-5,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-32,-33,-34,-37,-39,-39,-39,-39,-39,-37,-35,-28,-23,-19,-17,-14,-13,-12,-11,-11,-12,-12,-13,-16,-16,-16,-15,-13,-9,-5,-2,0,-5,-5,-6,-7,-4,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-32,-34,-36,-37,-39,-39,-40,-39,-38,-37,-33,-25,-19,-14,-10,-8,-8,-9,-8,-8,-11,-12,-13,-15,-16,-16,-16,-14,-11,-6,-4,-3,-4,-6,-8,-6,-5,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-32,-34,-36,-38,-39,-40,-39,-38,-37,-36,-26,-20,-11,-6,-4,-2,-3,-6,-6,-7,-9,-12,-14,-16,-16,-15,-14,-14,-11,-7,-5,-5,-5,-8,-6,-6,-6,-3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-33,-34,-36,-38,-39,-40,-39,-38,-37,-35,-18,-10,-1,0,-1,0,-1,0,-4,-6,-8,-10,-12,-15,-16,-14,-14,-14,-11,-8,-6,-6,-6,-6,-6,-6,-6,-2,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-33,-34,-36,-37,-39,-39,-38,-38,-36,-33,-18,-8,-1,0,0,0,0,0,-1,-3,-8,-11,-12,-14,-15,-14,-15,-15,-11,-9,-8,-7,-6,-6,-6,-6,-6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-34,-35,-36,-37,-39,-39,-39,-39,-38,-34,-20,-8,-3,0,0,0,0,-1,-1,-2,-3,-8,-13,-15,-13,-14,-15,-15,-12,-10,-8,-7,-7,-6,-6,-6,-6,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-34,-35,-36,-37,-38,-39,-40,-41,-36,-29,-19,-11,-3,-1,0,0,-1,-1,-1,-2,-5,-10,-13,-12,-10,-13,-14,-15,-12,-10,-9,-8,-7,-6,-6,-7,-5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-34,-35,-36,-37,-39,-39,-41,-40,-34,-26,-20,-9,-3,0,0,0,-1,-2,-2,-3,-8,-10,-12,-12,-7,-12,-13,-14,-11,-10,-9,-9,-7,-7,-7,-6,-4,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-34,-35,-36,-37,-39,-40,-41,-39,-34,-26,-20,-9,-4,0,0,0,-1,-2,-2,-4,-9,-11,-12,-12,-6,-12,-12,-14,-11,-10,-9,-8,-8,-7,-7,-6,-4,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
