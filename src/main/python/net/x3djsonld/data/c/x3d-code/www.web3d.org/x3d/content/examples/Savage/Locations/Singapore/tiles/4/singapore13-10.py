###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_1310',geoSystem=['GDC'],position=(1.4480194974058374,103.8914597167094,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.4480194974058374,103.8914597167094,0.0),range=4101.627,child1Url=['../../tiles/5/singapore26-20.x3d'],child2Url=['../../tiles/5/singapore26-21.x3d'],child3Url=['../../tiles/5/singapore27-20.x3d'],child4Url=['../../tiles/5/singapore27-21.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore13-10.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.4392877850278434,103.87709668258039,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[-1,-5,-6,-2,3,6,6,6,3,0,1,4,5,5,7,8,8,6,7,9,9,9,9,8,7,9,8,7,7,9,8,7,8,10,10,10,10,4,-3,-6,-4,0,4,5,5,3,0,2,5,7,6,6,8,9,8,8,10,9,8,9,9,7,9,10,10,7,7,7,7,8,10,9,10,12,10,-1,-5,-6,-3,1,4,5,2,0,3,6,8,7,5,7,10,9,10,11,10,8,9,9,7,8,10,11,7,6,7,7,7,9,9,10,12,14,4,-4,-6,-4,-1,3,5,1,0,4,7,10,8,5,6,11,9,11,12,10,10,9,8,6,7,9,11,9,6,7,6,7,8,8,8,10,17,11,-1,-5,-6,-3,2,4,1,2,5,7,11,8,4,6,10,10,11,12,11,11,10,7,6,6,7,11,10,6,7,6,7,8,7,7,7,16,13,4,-3,-5,-4,-1,2,3,5,7,7,11,8,5,6,9,9,11,13,12,11,9,6,5,6,8,11,10,6,7,9,10,9,8,8,8,13,17,10,0,-4,-5,-3,2,5,8,9,7,11,8,5,7,8,7,10,13,13,11,8,4,5,6,9,11,9,7,8,13,13,10,9,9,9,13,16,14,4,-2,-4,-4,0,8,9,8,7,9,7,5,5,9,9,11,13,13,11,8,5,6,8,10,9,7,7,10,13,14,11,9,8,8,13,13,17,11,0,-2,-4,0,11,10,7,6,6,6,4,4,9,11,11,13,13,10,7,6,7,11,11,6,6,7,12,15,14,11,9,8,8,14,13,16,14,6,0,-1,1,10,9,7,6,5,5,6,7,10,14,14,13,12,9,7,7,9,11,12,7,6,7,10,12,12,10,9,8,7,16,13,14,17,12,3,0,3,10,9,7,6,5,5,7,9,12,17,19,13,10,7,8,8,10,12,12,8,6,7,8,9,10,8,9,8,7,15,14,13,16,15,8,4,6,10,10,8,6,5,5,7,10,12,14,16,12,10,8,9,9,11,13,11,9,7,7,9,9,10,9,9,8,7,14,16,13,14,17,14,8,8,10,10,9,6,5,6,6,10,11,10,13,11,11,9,10,9,12,13,11,9,9,8,9,9,9,9,9,8,8,10,15,14,13,15,15,11,10,10,9,9,6,5,6,6,9,10,9,12,11,10,8,10,11,13,13,10,8,8,8,10,10,10,9,10,9,8,5,14,15,13,13,16,15,11,9,9,9,6,5,7,5,8,9,9,12,11,10,8,11,13,15,12,11,8,8,8,10,11,11,10,10,10,9,2,10,16,13,13,14,14,11,9,8,8,5,5,7,6,9,9,9,11,11,9,8,12,16,16,13,12,8,7,8,9,11,10,9,10,9,9,1,5,14,15,12,12,11,11,9,8,8,4,4,6,7,10,10,9,11,10,8,8,13,20,18,15,14,7,6,8,9,11,9,8,10,8,8,0,2,10,15,12,10,10,12,10,10,8,4,5,7,8,10,10,10,12,10,8,8,12,19,18,14,13,9,7,8,9,10,8,8,9,7,6,2,1,5,14,13,9,12,13,11,12,10,5,7,8,9,9,9,11,15,10,9,8,9,15,15,13,12,10,9,8,9,8,9,8,8,6,5,5,1,3,10,13,10,12,13,13,14,13,6,8,9,10,9,10,12,15,11,9,8,10,13,14,12,11,10,10,8,8,7,8,7,7,6,6,10,2,2,5,11,13,12,12,14,17,15,8,7,9,9,9,10,12,13,11,9,9,11,12,12,12,10,8,9,7,7,5,7,7,7,7,7,16,5,3,6,13,18,16,11,13,17,16,9,8,8,9,9,9,9,11,12,9,9,11,12,11,11,9,8,9,7,6,6,7,8,7,8,8,23,9,6,10,16,24,21,10,10,14,14,10,8,7,8,9,5,5,9,16,11,10,11,12,10,10,9,9,9,8,6,6,7,8,8,8,8,30,14,8,12,18,25,21,10,9,12,13,11,8,7,9,11,4,2,9,16,12,10,10,12,10,9,9,10,9,8,6,6,7,8,8,8,8,34,19,8,12,18,20,17,9,8,11,14,11,8,7,13,15,4,4,9,13,11,10,10,11,9,8,9,9,9,8,7,7,8,9,8,8,8,33,20,7,12,17,16,13,9,9,11,14,12,8,8,15,16,4,6,9,11,11,10,9,10,9,8,9,9,9,9,8,8,9,9,9,8,9,25,13,6,13,15,12,10,10,11,13,16,12,9,9,16,14,6,8,9,10,11,9,9,10,9,8,9,9,9,9,8,8,9,10,10,10,12,18,8,5,12,12,10,9,12,13,13,16,12,9,10,15,11,7,8,9,10,10,9,10,10,9,8,9,9,10,9,8,7,9,11,10,11,13,13,5,6,11,11,9,10,13,13,13,16,12,10,9,11,8,8,7,8,10,10,9,9,10,10,8,8,9,11,11,7,6,8,11,10,11,12,9,4,7,11,10,9,11,13,13,13,15,12,10,8,7,6,8,7,8,10,9,8,9,10,10,9,8,9,11,11,6,6,8,11,11,11,11,8,6,7,9,9,9,11,13,13,14,14,11,9,7,6,7,10,10,8,10,9,7,8,10,10,9,8,9,10,8,6,7,9,11,11,11,12,8,7,7,8,8,9,11,12,13,15,14,10,8,6,6,8,11,12,9,10,9,7,9,10,9,9,9,10,9,7,6,8,10,12,12,12,12,8,7,8,8,8,8,10,12,14,17,14,10,8,6,7,10,11,13,11,10,9,8,9,10,8,8,8,9,9,7,6,9,11,13,13,12,13,7,7,8,8,8,8,9,12,16,18,14,11,8,7,8,11,11,13,12,11,9,9,10,10,8,7,8,8,9,8,8,10,12,13,14,13,13,6,7,8,7,7,8,10,15,18,18,13,11,9,8,9,12,11,13,12,11,10,10,10,8,8,7,8,6,8,8,10,12,13,14,14,14,15,5,7,8,6,6,8,12,19,21,17,12,10,10,9,10,12,12,13,12,11,10,10,9,7,8,8,8,6,8,9,11,12,13,14,14,15,16,7,8,7,6,7,8,14,23,26,18,12,10,10,10,11,12,12,13,12,11,10,10,9,7,9,9,8,7,9,10,11,11,12,13,15,18,20,8,8,5,6,8,9,15,27,29,18,12,11,9,11,11,12,11,13,12,12,10,10,9,9,10,9,8,9,9,10,11,9,10,13,17,21,23,8,6,2,5,8,9,14,23,26,18,14,13,11,11,12,13,13,14,13,12,11,10,9,10,10,10,9,11,10,11,11,10,10,12,18,23,25,8,5,0,4,9,8,13,20,22,17,15,14,13,12,13,15,14,16,14,12,11,10,10,11,11,12,11,12,11,11,12,10,9,12,19,25,27,7,5,1,5,9,10,13,18,20,19,17,15,15,14,13,15,15,16,15,13,12,10,11,12,13,14,13,12,11,11,11,10,10,15,22,26,28,5,4,4,7,10,11,14,17,18,20,19,16,16,15,14,15,16,17,17,14,12,11,12,12,15,16,14,12,10,11,10,9,11,18,25,29,30,7,5,5,6,8,12,15,17,18,23,22,17,17,15,14,15,18,18,18,14,14,13,13,13,15,16,15,13,10,10,10,11,14,19,26,29,30,8,6,6,6,6,12,18,18,19,26,26,18,18,15,14,16,19,19,19,15,16,15,13,13,15,16,15,14,11,10,11,13,16,21,27,29,30],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
