###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_1_11',geoSystem=['GDC'],position=(41.69408304786533,-71.26358768093407,41002.30113075668),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(41.5,-71.5,0),geoSystem=['GDC'])),
    GeoLOD(center=(41.69408304786533,-71.26358768093407,0.0),range=49202.76,child1Url=['../../tiles/2/newport2-2.x3d'],child2Url=['../../tiles/2/newport2-3.x3d'],child3Url=['../../tiles/2/newport3-2.x3d'],child4Url=['../../tiles/2/newport3-3.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0,0.05,0)),
            texture=ImageTexture(url=['../../images/1/newport1-1.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(41.50056356421022,-71.43945829755604,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=52,xSpacing=0.006896887,zDimension=52,zSpacing=0.0075889993,height=[0,0,0,-9,-18,0,-10,-4,0,0,0,-10,-37,-39,0,-14,-8,0,0,0,0,0,0,0,0,0,0,0,0,-6,-8,-9,-9,-4,0,0,0,0,0,0,0,0,0,0,0,0,0,-3,-6,0,0,0,0,0,0,-1,-9,-8,0,-6,-4,0,0,0,-21,-36,-19,-8,0,0,0,0,0,0,0,0,0,0,0,0,0,-5,-6,-7,-8,-5,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-1,0,0,0,0,0,0,0,-16,-20,-12,0,0,0,0,-8,-19,-35,-28,-14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-5,-6,-7,-6,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-6,-9,-18,0,0,0,0,0,-22,-23,-30,-28,0,-5,0,0,0,0,0,0,0,0,0,0,0,0,-4,-6,-8,-4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-4,-5,-14,0,0,0,0,0,-25,-19,-24,-30,-17,-11,-8,0,0,0,0,0,0,0,0,0,0,0,0,-6,-7,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-5,-9,-15,-5,0,0,0,-9,-21,-16,-19,-30,-19,-16,-4,0,0,0,0,0,0,0,0,0,0,-1,-4,-6,-7,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-4,-7,-9,-13,-4,0,0,0,0,-19,-18,-12,-19,-22,-16,-9,0,0,0,0,0,0,0,0,0,0,0,-5,-7,-4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-2,-3,-9,-8,-8,-8,0,0,0,0,-19,-14,-12,-15,-21,-20,-15,0,0,0,0,0,0,0,0,0,0,0,-8,-4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3,-4,-6,-6,-7,-9,-10,-2,0,0,0,-14,-12,-11,-12,-18,-29,-15,-12,0,0,0,0,0,0,0,0,0,-3,-9,-3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-4,-4,-5,-6,-6,-7,-8,-8,0,0,-1,-12,-10,-9,-9,-18,-23,-21,-15,-3,0,0,0,0,0,0,0,0,0,-6,-8,-3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-3,-4,-4,-4,-6,-7,-7,-7,-7,-6,-11,-10,-9,-9,-8,-11,-15,-30,-8,-5,-10,0,0,0,0,0,0,0,0,-3,-8,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,-3,-3,-10,-10,-11,-7,-6,-6,-7,-8,-9,-11,-2,0,0,-24,-15,0,-13,0,0,0,0,0,0,0,-3,-4,-7,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-10,-8,-8,-6,-6,-6,-8,-9,-13,0,0,0,0,-32,-16,-13,-4,0,0,0,0,0,0,-3,-3,-5,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-7,-8,-9,-6,-2,-7,-8,-8,-10,0,0,0,0,-7,-22,-20,-7,0,0,0,0,0,0,-3,-3,-4,-3,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,-3,-8,-6,-8,-8,-7,-3,-11,-8,-8,-6,0,0,0,0,-25,-21,-10,-7,0,0,0,0,0,-4,-2,-4,-5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-4,-5,-7,-7,-7,-6,-7,-8,-7,-7,-7,0,0,0,0,-19,-18,-13,-7,0,0,0,0,0,-3,-3,-12,-9,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,-2,-7,-8,-7,-6,-6,-7,-6,-6,-6,-2,0,0,0,-15,-14,-15,-8,0,0,0,0,0,0,-1,-2,-4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,-6,-7,-6,-6,-6,-7,-6,-3,-1,0,0,-1,-9,-17,-11,-8,-12,-20,-7,0,0,0,-1,0,-1,-13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-5,-7,-6,-5,-5,-7,-6,0,0,-3,-5,-6,-7,-11,-14,-8,0,-2,-1,-15,-3,0,0,0,0,0,-13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-5,-6,-5,-4,-5,-5,-4,0,0,0,-6,-7,-8,-11,-8,-7,-1,0,-7,0,-12,-9,-7,-4,0,0,-8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-3,-4,-4,-6,-5,0,-1,0,0,-5,-6,-7,-9,-10,0,-7,-2,-4,-4,0,0,-9,-16,-7,-6,0,-10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-2,-3,-4,-20,-4,0,0,0,0,-6,-6,-6,-10,-3,0,0,-7,-5,-2,0,0,-4,-5,-14,-6,-10,-11,-7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-2,-2,-8,-2,0,-5,-8,-7,-3,-6,-6,-6,-6,-11,-2,0,0,-4,-1,0,0,0,0,-1,-3,-9,-7,-5,-5,-6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3,-3,-4,-5,-3,-3,0,0,0,-6,-5,-4,-6,-7,-5,-6,-6,-11,-4,0,0,-4,0,0,0,0,0,0,0,-5,-5,-7,-4,-6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3,-3,-3,0,0,0,0,-2,0,0,-3,-4,-4,-6,-6,-5,-5,-6,-11,-6,-1,0,0,0,0,0,0,0,0,-4,-4,-3,-4,-4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,0,0,0,0,0,-2,-5,-6,-6,-5,-5,-6,-9,-6,-5,0,0,0,0,0,0,0,0,-3,-4,-4,-4,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,-4,-4,-5,-6,-5,-8,-6,-2,-4,-1,0,0,0,0,0,0,0,-3,-4,-4,-4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,-3,-4,-7,-6,-5,-5,-3,-2,-2,0,0,0,0,0,0,-1,0,0,-4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,-1,-3,-13,-3,-4,-4,-4,0,0,-8,0,0,0,0,0,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-2,-10,-18,-6,-1,-2,-3,-4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-4,-11,-7,-4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,-8,-4,-3,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-11,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,-5,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-11,-2,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,-4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,-1,-3,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-4,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-6,-6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
