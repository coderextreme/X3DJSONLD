###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    Shape(
      appearance=Appearance(
        material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
        texture=ImageTexture(url=['../../images/5/singapore15-14.jpg'],repeatS=False,repeatT=False)),
      geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.3432389488699097,103.79091847780627,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=36,xSpacing=4.103724E-4,zDimension=23,zSpacing=3.96896E-4,height=[49,46,43,43,43,43,42,38,34,31,29,31,33,35,37,38,38,39,40,41,41,41,42,42,41,40,39,38,39,41,43,44,45,45,41,39,49,46,43,46,49,52,54,48,42,37,32,32,32,34,36,37,39,40,42,43,43,43,43,43,42,42,42,43,45,47,47,48,48,48,43,41,48,46,45,51,56,60,63,56,49,42,34,32,32,33,37,38,40,42,44,45,45,44,44,44,43,44,46,47,48,50,51,51,50,48,44,41,48,47,48,56,64,67,70,63,54,45,36,33,32,34,38,40,43,45,47,47,46,45,45,45,44,45,48,50,50,51,53,53,49,46,43,41,48,50,53,62,71,73,76,66,56,46,37,33,32,34,38,41,45,47,49,48,46,45,44,44,44,46,50,51,52,52,53,53,48,44,42,41,51,54,58,68,78,79,80,68,53,45,37,34,32,34,37,41,46,48,51,49,45,43,42,42,45,48,51,52,51,51,52,51,46,42,42,42,55,58,63,73,84,83,81,68,53,47,40,37,34,35,37,41,46,49,50,49,44,41,41,42,46,49,52,52,50,49,50,48,44,40,41,43,59,63,67,78,89,84,78,68,56,50,45,40,36,36,38,42,46,48,49,47,42,41,42,44,47,50,52,53,49,47,46,44,41,39,41,43,61,66,71,81,89,83,75,66,57,52,47,42,38,38,39,43,46,47,47,45,43,42,45,47,48,50,51,50,47,44,44,42,39,38,40,42,61,68,73,79,84,78,71,63,55,51,47,43,41,40,41,43,46,46,45,45,45,47,50,51,51,50,48,46,43,42,42,40,38,37,38,40,60,67,72,74,76,71,64,59,54,50,46,44,42,42,42,43,45,46,46,47,50,53,55,55,54,51,48,44,42,41,40,39,37,35,36,37,58,64,68,66,64,60,57,54,51,48,45,43,41,41,43,44,45,47,49,53,57,59,60,59,58,54,50,45,43,41,40,38,36,34,33,33,56,60,64,60,56,54,52,51,50,48,45,44,42,44,47,48,49,51,53,57,62,63,64,63,61,56,51,46,43,41,39,37,35,33,31,29,52,56,58,55,52,52,51,50,49,48,46,45,46,50,54,56,58,59,59,61,64,65,66,65,62,57,51,47,44,41,38,35,33,31,29,27,50,53,56,54,52,52,51,50,49,48,47,49,52,55,60,62,63,63,63,63,64,65,66,65,63,58,52,47,45,42,38,34,32,30,29,27,50,54,57,56,55,55,54,53,51,51,51,55,59,61,63,64,64,64,62,62,61,62,62,62,62,59,53,49,46,43,37,33,33,32,31,29,52,57,61,60,60,59,58,55,53,53,55,59,63,64,65,65,63,62,60,59,59,59,59,60,61,59,54,49,46,43,37,34,35,36,34,32,55,62,68,67,66,64,62,58,54,55,57,60,63,64,65,63,60,59,57,57,57,57,58,59,60,58,54,49,45,41,37,36,39,42,40,38,56,64,71,71,70,68,66,61,57,57,58,60,62,62,63,61,59,58,56,55,55,55,56,57,57,55,52,47,42,39,38,39,43,46,45,42,57,64,70,70,70,69,67,64,61,58,56,56,57,59,60,61,60,59,57,55,53,52,52,52,52,50,46,42,38,37,40,43,47,48,46,43,56,62,67,68,68,68,67,65,62,58,54,53,53,55,57,59,60,60,58,56,52,51,50,49,47,45,41,38,36,37,42,47,49,50,47,44,51,58,63,65,65,65,64,62,60,56,52,51,51,51,52,54,58,59,59,57,54,51,48,46,45,42,39,37,37,40,46,50,51,51,48,44,50,56,61,62,62,62,63,61,59,56,52,51,50,50,49,51,54,57,58,56,54,52,49,46,44,41,38,37,40,44,49,53,53,53,49,45],
        geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])))])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
