###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    Shape(
      appearance=Appearance(
        material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
        texture=ImageTexture(url=['../../images/5/singapore1-11.jpg'],repeatS=False,repeatT=False)),
      geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.220994975577994,103.74782937541922,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=3.9897318E-4,zDimension=23,zSpacing=3.96896E-4,height=[50,58,65,66,67,68,69,70,71,72,73,74,75,75,74,70,60,36,-1,-21,-23,-25,-27,-28,-30,-32,-33,-33,-33,-33,-33,-30,-13,1,15,28,27,57,63,65,66,67,68,69,70,71,72,73,74,75,75,76,75,71,46,0,-25,-26,-27,-28,-30,-32,-34,-33,-33,-32,-31,-29,-24,-4,12,25,35,30,42,54,64,66,67,68,69,70,71,72,73,74,75,75,76,75,72,45,-1,-25,-27,-28,-31,-32,-32,-33,-33,-32,-27,-23,-13,-4,13,29,36,40,36,27,44,59,64,67,68,69,70,71,72,73,74,74,75,75,75,70,44,0,-23,-25,-27,-28,-29,-27,-26,-26,-25,-19,-11,0,12,27,41,43,45,40,15,30,45,56,65,68,69,70,71,72,72,72,73,74,74,68,57,35,6,-9,-13,-15,-13,-9,-2,1,1,2,4,8,13,19,30,38,40,42,42,5,17,31,47,60,66,69,70,70,70,70,69,68,68,68,58,43,27,13,2,-1,-3,0,6,17,25,25,25,25,25,25,26,30,34,37,39,42,4,10,18,32,46,57,67,70,70,65,57,49,39,34,35,31,24,18,14,11,7,7,9,12,18,23,24,25,25,24,24,25,27,30,32,34,36,4,4,5,17,31,48,63,67,65,58,45,29,12,5,5,6,8,11,15,17,16,17,17,17,19,22,24,25,25,24,24,24,25,26,28,30,31,4,4,4,10,18,30,41,41,36,31,24,17,9,6,6,6,7,8,12,14,16,17,17,17,18,19,22,23,24,25,24,23,23,23,26,27,26,4,4,4,4,5,13,21,17,9,6,6,6,6,6,6,5,5,6,8,11,15,17,16,17,17,18,19,21,24,25,24,23,21,21,23,25,21,4,4,4,4,5,10,16,14,9,7,6,6,6,6,6,6,6,6,7,8,12,14,16,17,17,17,18,19,21,22,24,24,22,20,19,17,17,6,4,4,5,6,8,12,11,10,8,7,6,6,6,6,6,6,5,5,6,8,11,15,17,16,17,17,17,19,21,23,25,23,21,15,11,14,16,10,7,7,8,13,18,16,12,10,8,7,6,6,6,6,6,6,6,5,6,8,11,14,16,17,17,18,18,19,21,22,20,19,15,13,14,25,15,9,9,11,19,26,22,16,13,10,8,7,6,6,6,6,6,6,5,5,5,7,10,14,17,17,18,17,17,18,18,18,17,16,15,14,19,13,10,16,23,32,38,34,25,19,13,10,8,7,6,6,6,6,6,5,5,4,5,6,11,14,16,18,19,18,17,16,15,14,13,12,12,11,11,12,23,36,44,50,44,34,25,17,12,10,8,7,6,6,6,6,6,5,4,3,3,6,10,14,18,19,20,17,14,12,10,10,10,10,10,16,23,34,45,52,55,49,39,30,20,15,12,10,8,7,6,6,6,6,6,5,4,4,3,5,11,15,16,17,13,10,8,7,9,10,11,12,23,36,46,54,58,58,52,44,34,23,18,15,12,10,8,7,6,6,6,6,6,5,4,0,1,7,12,12,12,8,5,4,4,7,11,13,21,33,44,52,58,60,59,56,50,36,20,14,13,12,11,10,8,7,6,6,6,6,5,4,3,4,9,12,10,8,6,4,3,3,7,11,12,33,44,53,57,59,60,59,58,55,39,17,10,11,12,13,12,10,8,7,7,7,6,6,6,7,9,12,13,9,5,4,4,3,3,7,10,11,41,50,57,59,60,60,59,57,52,37,19,12,10,11,12,12,11,10,8,7,7,7,8,10,14,16,13,11,8,5,3,2,1,2,4,7,9,49,54,59,60,60,60,58,53,46,35,24,16,10,9,10,12,12,12,9,7,7,8,11,14,21,21,13,7,7,6,2,0,0,0,1,2,7,52,57,61,61,60,57,53,47,40,35,29,22,14,10,9,10,11,11,10,8,6,7,10,14,17,18,9,3,1,0,0,-1,-1,0,0,2,5],
        geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])))])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
