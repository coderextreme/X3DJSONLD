###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    Shape(
      appearance=Appearance(
        material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0,0.05,0)),
        texture=ImageTexture(url=['../../images/4/world10-8.jpg'],repeatS=False,repeatT=False)),
      geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(22.458336686061273,-0.04166130228196607,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=22,xSpacing=1.0714287,zDimension=24,zSpacing=0.48913044,height=[334,466,481,584,643,552,573,526,587,723,501,458,481,645,478,577,1806,1754,1709,718,568,571,328,369,414,512,600,616,654,600,627,711,541,489,796,646,496,713,1305,1150,1692,680,573,546,307,362,414,471,568,661,729,633,646,716,580,546,751,547,485,735,830,848,1790,650,676,535,338,370,406,474,561,745,1016,757,849,727,645,681,764,904,522,925,757,754,1034,688,743,530,334,360,391,478,585,867,1525,887,1155,738,687,736,942,833,605,822,636,588,1092,693,668,574,318,345,373,465,601,852,2201,1235,1202,895,739,1036,860,647,596,730,586,530,609,645,586,633,305,332,381,463,597,903,1443,1796,1217,851,922,839,846,633,542,623,572,502,516,643,435,517,293,323,360,512,629,912,1026,1165,1020,959,1232,715,830,644,529,539,515,457,456,548,394,416,287,314,356,591,592,914,960,1080,1261,1231,707,685,873,637,475,588,456,449,407,421,354,338,262,299,243,393,522,926,1077,1226,1427,1245,636,692,704,587,502,619,479,383,407,337,283,284,262,278,174,289,528,1376,867,1058,935,1056,642,661,637,521,438,529,662,484,383,293,246,240,250,219,125,254,648,767,1099,720,596,695,593,599,772,492,460,458,483,415,218,257,208,203,225,303,273,321,355,485,706,467,584,524,588,542,540,452,482,448,615,595,303,245,192,164,194,314,385,343,373,494,474,415,461,572,512,553,463,378,392,460,666,644,292,212,182,142,213,371,529,450,737,475,544,463,466,465,515,536,502,532,513,459,603,467,259,205,166,125,259,351,508,662,539,468,359,461,426,534,597,622,429,502,536,517,407,327,210,137,145,94,303,310,472,606,442,363,324,344,413,597,661,684,608,602,510,473,356,97,67,158,109,54,384,326,374,562,383,304,317,296,338,508,628,644,640,593,456,440,474,209,179,98,57,27,460,407,383,488,314,255,247,275,376,295,388,618,632,580,437,183,317,238,109,1,-10,35,555,494,461,414,326,225,231,211,298,285,394,582,624,530,274,179,218,159,8,35,-23,68,591,565,512,477,352,195,195,185,193,255,353,582,676,366,188,142,113,78,-295,-29,31,96,713,602,557,498,402,204,175,160,181,249,415,560,584,289,210,37,-104,-163,-1020,-33,58,137,839,743,534,576,451,246,172,142,170,240,374,574,625,620,119,-38,-800,-1343,-1268,0,203,150,805,753,590,550,441,251,168,144,151,219,368,298,655,755,110,-37,-884,-1458,-1282,-15,230,141],
        geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(0.0,0.0,-6378137.0),geoSystem=['GDC'])))])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
