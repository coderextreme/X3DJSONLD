###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_38',geoSystem=['GDC'],position=(1.273385249845958,103.83400758019333,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.273385249845958,103.83400758019333,0.0),range=4101.627,child1Url=['../../tiles/5/singapore6-16.x3d'],child2Url=['../../tiles/5/singapore6-17.x3d'],child3Url=['../../tiles/5/singapore7-16.x3d'],child4Url=['../../tiles/5/singapore7-17.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore3-8.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.264653537467964,103.81964454606431,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[7,9,7,6,6,6,6,7,10,9,9,7,5,6,11,12,12,15,13,11,15,19,17,18,20,21,19,15,13,8,6,8,7,8,7,6,6,7,8,7,8,9,9,7,7,11,10,9,8,6,7,12,14,14,18,16,9,12,14,15,17,19,21,21,14,11,7,6,8,8,8,6,5,6,8,8,8,11,12,11,9,7,9,10,9,9,7,8,13,16,17,20,20,9,10,11,14,18,19,20,21,12,10,7,6,8,8,8,6,5,5,12,10,10,16,16,11,8,6,8,8,9,9,10,10,12,15,20,19,22,10,11,11,13,19,19,16,18,11,9,8,7,8,8,8,7,6,5,15,14,16,23,19,11,9,7,7,7,9,10,11,11,11,14,20,18,22,12,11,13,14,20,19,12,14,10,9,9,9,9,9,8,8,7,6,19,21,26,33,27,14,11,10,9,7,8,11,12,11,10,11,17,16,17,12,10,19,18,20,17,10,11,9,9,8,9,8,8,8,8,7,6,23,30,37,43,36,18,14,14,10,6,8,13,11,11,10,8,13,13,12,11,9,22,20,20,15,8,9,10,8,7,8,7,7,8,8,8,8,27,33,38,42,36,20,13,12,8,4,8,13,11,11,10,9,12,12,9,10,8,15,14,16,12,7,8,10,9,8,9,8,7,7,7,7,8,31,36,40,42,37,22,13,11,5,2,7,13,11,12,10,10,12,11,6,8,6,8,9,12,8,7,8,10,10,9,10,9,8,7,6,7,8,35,39,42,44,35,19,12,12,9,6,9,11,9,10,10,11,10,9,6,7,6,7,8,9,8,8,10,11,10,10,10,8,8,7,7,7,8,39,43,46,47,34,17,11,13,13,10,10,8,8,9,10,11,9,8,6,7,6,7,8,7,8,9,11,11,11,10,9,8,7,7,8,7,8,46,52,54,51,33,13,10,12,12,10,11,7,8,8,10,10,8,8,7,7,7,7,8,7,8,9,10,9,12,11,8,7,7,7,8,9,9,54,61,63,56,33,10,9,11,10,10,10,5,9,8,11,9,8,8,7,7,8,7,8,8,8,9,9,7,12,12,7,7,6,6,8,10,10,64,70,70,60,34,12,9,7,6,9,11,7,9,11,10,9,9,9,9,8,9,8,8,10,9,6,8,8,12,11,9,8,7,6,6,8,9,74,79,76,62,34,13,8,5,2,8,12,9,10,13,10,9,11,10,10,9,11,9,9,11,10,5,8,9,11,10,9,9,8,6,5,7,8,78,80,79,62,34,16,9,2,0,3,9,8,11,13,11,10,11,11,11,10,11,12,13,13,10,7,6,11,16,11,8,8,8,7,6,8,9,81,79,80,63,34,18,11,0,-4,-2,5,6,12,12,14,11,10,11,12,11,11,15,17,15,9,10,3,13,21,12,6,6,8,8,8,8,10,81,77,70,54,31,21,14,3,0,-1,2,5,11,14,15,12,11,13,12,13,14,17,15,18,12,11,8,20,24,15,8,8,8,6,6,9,10,82,74,58,44,29,24,19,8,4,0,0,4,9,15,16,14,13,15,12,15,18,20,11,20,15,13,14,28,26,19,11,10,7,2,4,10,10,77,60,45,36,28,24,19,11,10,7,5,9,9,14,16,13,14,16,13,17,22,23,4,15,16,14,18,30,22,18,14,13,10,5,6,10,11,71,45,31,30,28,24,18,14,16,17,14,15,10,13,14,13,15,16,14,20,26,25,-2,8,15,14,22,30,17,15,16,16,13,10,9,11,11,59,37,29,28,27,24,19,17,19,21,19,16,9,10,11,11,17,22,17,21,26,22,2,8,15,15,22,27,22,22,22,19,16,15,12,11,10,45,33,29,27,26,24,20,20,21,23,23,16,8,7,7,10,18,30,22,21,25,16,12,10,16,15,21,22,31,33,30,23,19,19,15,10,8,37,32,30,27,26,24,22,21,21,22,24,15,9,7,6,11,15,26,22,19,25,22,19,16,15,16,20,21,28,32,31,25,18,17,15,17,16,32,33,32,27,27,25,24,21,20,21,23,16,11,8,8,12,11,17,20,17,24,34,25,23,14,15,20,21,21,27,30,25,14,13,15,27,29,31,34,33,28,27,25,26,24,21,21,21,17,14,10,7,12,11,14,17,15,23,33,26,25,13,14,20,21,18,22,28,24,13,12,16,27,28,31,34,34,30,27,25,29,30,24,21,18,17,16,12,7,12,13,14,14,12,22,27,27,23,11,11,21,22,17,17,25,24,13,12,18,22,20,29,34,35,32,27,26,31,31,26,22,19,22,18,13,7,11,15,14,14,14,22,23,24,20,12,13,21,22,18,23,27,23,13,11,16,18,16,26,34,35,32,28,26,31,30,27,22,22,28,20,14,7,10,16,15,16,18,21,21,21,19,15,17,20,23,20,36,31,21,13,9,12,15,14,24,33,34,32,29,27,31,28,26,24,24,30,22,17,9,11,16,15,17,21,21,19,18,18,18,21,21,21,21,40,31,19,12,8,12,16,15,22,32,32,31,31,27,29,26,24,26,26,28,23,20,13,12,15,17,18,22,23,18,16,16,20,25,23,18,23,36,27,17,13,9,14,19,18,25,32,30,28,29,26,26,24,23,30,33,30,22,21,15,16,15,18,20,24,25,18,15,16,20,26,24,20,24,30,23,18,14,11,15,22,23,31,32,26,23,25,22,22,19,22,35,45,35,19,18,18,21,17,19,22,26,25,18,16,15,17,23,27,25,23,22,19,19,17,11,14,24,27,34,31,23,19,22,21,19,17,21,36,48,37,19,16,20,25,23,23,24,28,26,18,17,15,15,18,23,26,22,18,19,22,20,13,14,25,29,31,28,20,16,20,22,19,18,21,30,41,36,20,15,22,30,31,29,27,31,28,21,20,16,13,11,15,21,21,16,21,25,23,16,15,24,29,30,28,20,15,20,24,20,20,21,26,34,34,23,17,23,33,37,34,30,32,31,23,22,18,13,6,10,16,19,15,22,25,25,19,16,24,30,31,30,24,19,20,23,23,21,21,23,28,31,26,20,23,35,40,37,33,32,33,24,22,20,16,6,8,15,18,16,23,26,27,21,17,27,34,32,31,27,21,20,22,24,23,22,24,28,30,29,24,22,35,38,37,33,32,33,24,21,21,18,7,7,15,17,16,22,24,27,22,19,29,36,33,32,27,22,21,22,24,24,24,29,35,33,34,28,22,31,32,33,32,29,34,25,19,19,16,8,8,15,15,16,18,20,24,23,19,26,33,34,31,27,24,22,22,23,26,28,36,43,35,35,29,23,27,26,31,30,27,32,24,18,16,14,10,9,16,15,17,15,17,21,23,19,23,27,38,32,28,28,24,21,21,28,35,43,47,38,32,29,24,24,24,32,29,27,27,22,16,11,12,12,11,17,16,19,15,15,19,21,20,19,20,41,31,29,31,25,21,21,29,39,47,50,39,30,27,24,22,22,31,26,25,23,19,14,9,13,15,14,16,17,22,16,14,16,18,19,15,15,41,30,30,33,26,26,24,25,33,45,48,38,31,25,23,21,19,24,23,22,19,15,14,13,17,20,19,15,15,21,18,15,14,14,16,14,14,39,27,31,33,26,29,27,21,25,40,44,37,32,23,21,20,17,18,20,18,15,12,15,19,23,25,24,14,14,19,20,15,12,11,13,13,14],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
