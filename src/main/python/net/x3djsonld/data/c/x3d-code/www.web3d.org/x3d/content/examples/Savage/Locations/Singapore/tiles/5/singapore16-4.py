###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    Shape(
      appearance=Appearance(
        material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
        texture=ImageTexture(url=['../../images/5/singapore16-4.jpg'],repeatS=False,repeatT=False)),
      geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.3519706612479037,103.64728813651608,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=36,xSpacing=4.103724E-4,zDimension=23,zSpacing=3.96896E-4,height=[34,32,31,31,36,41,40,37,35,33,30,27,23,18,19,24,29,36,39,40,44,49,52,54,55,57,54,47,41,37,38,45,50,48,45,44,32,33,32,31,32,34,35,36,37,38,36,31,25,19,19,21,26,35,40,44,47,52,53,53,51,49,46,42,39,35,36,43,49,51,51,49,32,36,35,32,30,29,31,35,39,44,41,35,27,20,17,17,22,31,37,42,46,49,49,47,44,40,37,36,34,31,32,39,46,51,53,51,36,42,42,38,33,29,30,34,41,48,46,39,30,21,16,13,17,24,29,34,36,38,38,36,33,30,28,29,28,27,28,34,41,46,48,46,39,46,48,46,39,31,29,32,40,49,47,40,30,20,14,11,13,18,22,24,26,27,27,26,25,23,23,24,24,23,24,29,35,39,41,39,36,44,50,52,44,34,29,28,35,44,42,36,27,18,12,9,10,14,17,19,20,20,20,22,22,22,22,22,21,20,21,24,29,33,35,34,30,40,49,54,47,35,27,23,28,36,35,30,23,15,11,8,9,11,14,16,16,15,16,19,21,23,23,22,20,19,18,20,24,27,29,29,27,36,45,51,45,34,25,19,21,26,26,23,18,13,10,7,7,9,11,12,13,11,12,16,19,22,23,23,21,18,17,18,19,22,23,24,24,32,39,43,38,30,21,16,15,18,19,18,15,11,9,7,7,8,9,10,10,9,10,14,18,21,23,24,22,19,17,16,16,17,18,20,22,28,32,34,29,23,16,12,11,12,13,14,13,10,8,7,7,7,8,8,8,8,10,14,18,21,23,23,22,20,18,16,15,15,16,17,20,23,25,24,20,15,11,9,8,9,10,12,11,10,8,7,7,7,7,7,7,7,10,14,18,20,21,21,21,19,18,17,16,15,16,16,15,17,17,17,14,11,9,8,8,8,9,11,11,10,9,7,6,6,7,7,7,7,9,12,15,16,17,17,18,19,19,19,18,18,18,18,10,11,11,11,10,9,8,8,8,7,9,11,12,12,10,7,6,6,6,6,7,7,8,10,11,12,13,13,15,17,20,21,21,21,20,19,7,8,8,8,8,8,8,8,7,7,9,11,13,13,11,7,6,6,6,6,6,7,8,10,11,11,11,12,13,17,20,22,23,22,21,20,6,6,7,7,7,8,7,7,7,7,9,12,13,14,11,7,6,6,6,6,6,7,9,11,12,12,12,12,13,16,19,21,22,21,20,19,5,5,6,6,7,8,7,7,7,8,10,12,13,13,10,7,6,6,6,5,6,7,10,13,15,14,14,13,13,14,16,18,19,18,17,17,5,5,6,6,7,7,7,7,7,8,10,11,11,10,8,6,6,7,6,5,5,7,10,15,17,17,16,14,13,12,13,14,15,14,13,15,6,6,6,6,7,7,6,6,7,9,9,9,9,7,7,6,6,7,6,5,5,7,10,13,15,16,15,14,12,11,11,11,12,12,12,14,7,7,7,7,6,6,6,6,7,8,7,7,7,7,6,6,6,6,5,4,5,7,8,10,11,12,12,12,11,9,9,10,11,12,13,15,8,7,7,7,6,6,6,6,6,7,6,5,5,6,5,5,5,5,5,4,5,6,7,8,9,9,10,10,9,9,9,9,11,12,14,15,7,7,7,7,7,7,7,7,7,7,6,5,5,5,4,4,4,5,5,5,5,6,7,8,8,8,8,8,8,8,9,10,12,14,15,15,7,6,6,6,6,6,6,7,7,7,6,5,5,5,4,3,4,5,5,5,6,7,8,8,8,7,7,7,8,9,10,12,14,16,16,16,6,5,5,6,5,5,6,7,7,6,6,5,5,5,4,3,3,4,5,6,7,8,9,9,9,8,8,8,9,10,11,14,17,18,18,17],
        geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])))])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
