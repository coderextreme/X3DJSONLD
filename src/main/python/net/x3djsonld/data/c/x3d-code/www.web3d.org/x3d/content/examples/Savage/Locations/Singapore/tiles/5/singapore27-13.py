###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    Shape(
      appearance=Appearance(
        material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
        texture=ImageTexture(url=['../../images/5/singapore27-13.jpg'],repeatS=False,repeatT=False)),
      geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.4480194974058374,103.77655544367725,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=3.9897318E-4,zDimension=22,zSpacing=4.1579583E-4,height=[16,15,14,13,14,14,15,15,18,21,23,24,24,24,25,27,29,30,29,26,27,30,34,40,44,47,49,50,49,47,47,49,51,48,43,34,27,20,19,17,15,15,15,15,16,18,20,21,22,22,21,21,23,24,26,26,24,26,30,35,41,44,46,47,46,45,45,45,48,50,48,44,35,27,25,25,22,20,19,18,17,17,18,19,19,19,19,19,20,21,22,24,25,24,27,31,35,40,43,42,41,40,40,42,44,46,48,46,42,34,26,27,27,25,22,21,19,19,18,18,18,17,16,16,18,19,19,21,23,24,25,27,30,34,38,39,36,35,34,35,38,41,43,44,43,40,33,27,23,26,24,22,21,20,21,21,18,16,15,13,14,15,17,19,21,23,24,23,24,26,28,31,31,29,28,28,29,31,33,37,39,39,37,32,28,20,24,22,20,19,19,20,20,17,15,13,12,13,15,17,18,20,21,22,21,21,23,24,27,27,25,24,25,26,27,29,32,35,34,33,31,29,17,18,16,14,14,14,14,14,14,15,14,13,15,17,17,18,18,17,18,19,20,21,23,25,26,25,24,25,25,26,28,30,30,28,27,28,28,15,15,12,10,11,11,10,10,11,13,15,15,17,19,19,19,18,16,16,18,19,20,22,25,26,26,26,26,27,28,29,29,27,24,22,24,26,12,15,12,10,10,10,9,9,11,12,14,17,19,22,22,21,19,18,18,19,21,22,24,28,30,32,32,31,31,32,32,31,28,24,21,22,24,11,14,12,10,9,9,8,8,9,10,13,16,20,23,23,22,20,19,19,21,22,24,27,31,35,37,38,36,35,35,34,32,28,24,20,20,20,10,11,10,8,6,4,5,5,7,9,11,13,17,21,22,21,19,18,19,21,23,24,28,35,40,43,44,42,40,38,36,32,27,23,19,18,18,9,9,7,5,3,1,1,2,5,7,9,10,14,19,19,18,17,17,19,22,24,26,30,39,44,47,47,46,44,41,37,32,27,22,19,18,17,7,7,5,3,1,0,0,0,3,6,7,8,11,14,14,14,15,17,19,24,28,30,34,41,44,44,44,44,43,40,36,31,25,22,18,18,18,6,5,3,1,0,-1,0,0,1,4,5,6,7,9,10,10,12,16,20,25,30,33,37,42,44,41,40,40,40,38,34,29,24,21,18,19,20,4,3,1,0,0,-1,0,0,1,3,3,2,4,6,7,9,11,14,17,22,26,31,34,38,39,37,35,35,35,33,31,28,24,21,18,19,20,3,1,0,-1,-1,0,0,0,1,2,1,0,1,3,5,9,10,12,14,17,22,28,31,34,34,33,31,30,29,28,28,26,23,20,17,18,20,1,0,0,-1,0,0,0,0,0,0,0,0,1,4,7,11,12,12,14,16,21,27,30,32,32,31,28,24,22,23,23,21,18,16,16,19,23,0,-1,-1,-1,0,0,0,0,0,0,0,0,2,5,9,14,14,12,14,16,20,26,30,31,30,29,26,18,15,17,18,16,14,13,14,20,25,0,-1,-1,-1,0,0,0,0,0,0,0,1,5,10,12,14,14,13,13,14,17,22,26,28,29,29,27,19,15,15,14,13,13,13,16,22,28,-1,-1,-1,0,0,0,0,0,0,0,1,4,8,14,14,14,14,13,13,12,14,18,22,26,29,30,28,20,14,12,11,11,12,14,18,25,30,0,1,1,1,0,0,0,0,0,1,5,9,11,14,14,14,14,14,13,13,14,15,16,19,21,21,19,15,12,12,11,11,12,15,19,25,30,4,4,4,4,2,1,0,0,2,4,8,14,14,14,14,14,14,14,14,15,15,12,11,12,12,11,10,10,10,11,11,12,14,17,20,25,29],
        geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])))])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
