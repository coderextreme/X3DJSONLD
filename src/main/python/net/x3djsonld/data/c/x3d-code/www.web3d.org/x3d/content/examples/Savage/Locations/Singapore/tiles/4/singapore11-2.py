###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_112',geoSystem=['GDC'],position=(1.4130926478938615,103.6616511706451,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.4130926478938615,103.6616511706451,0.0),range=4101.627,child1Url=['../../tiles/5/singapore22-4.x3d'],child2Url=['../../tiles/5/singapore22-5.x3d'],child3Url=['../../tiles/5/singapore23-4.x3d'],child4Url=['../../tiles/5/singapore23-5.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore11-2.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.4043609355158675,103.64728813651608,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[20,18,16,14,12,10,10,8,7,6,6,6,7,7,6,5,5,6,6,7,16,19,19,17,16,17,24,30,30,31,30,29,29,27,27,30,33,19,17,17,15,12,10,9,7,6,6,6,7,7,8,7,6,6,6,6,7,12,16,19,18,16,17,24,32,32,32,31,29,28,29,27,28,31,18,17,17,15,11,9,8,6,6,6,6,7,7,8,9,7,6,6,6,7,8,13,17,18,17,17,23,34,35,33,31,29,28,29,28,28,29,18,17,19,16,10,7,7,6,6,7,7,7,8,8,9,8,6,6,6,6,6,9,15,18,18,17,22,34,38,35,30,28,26,29,31,28,28,18,18,19,16,10,6,6,6,6,7,7,7,8,9,9,9,6,6,6,6,4,5,12,17,19,17,20,33,39,35,29,26,23,28,32,30,29,18,18,19,16,9,6,6,6,8,7,7,8,8,9,10,8,7,7,6,5,3,1,9,18,19,16,18,30,38,33,28,23,19,23,31,33,35,18,17,18,16,10,7,8,8,9,8,7,8,9,9,9,8,7,6,5,3,1,0,7,19,20,16,16,27,35,29,25,22,15,19,31,38,42,17,18,17,15,12,11,11,10,9,8,9,9,9,9,9,9,7,6,5,1,0,2,10,20,22,17,15,24,28,22,22,20,12,18,33,45,51,17,18,17,15,14,15,14,12,10,8,10,9,9,9,9,9,8,6,4,0,0,5,11,20,22,16,14,22,22,17,19,19,13,18,36,52,59,16,17,17,15,15,17,18,14,12,11,11,9,10,9,9,9,9,6,1,0,1,8,11,16,17,14,13,18,19,14,16,18,20,27,41,58,63,15,17,17,15,16,19,19,15,13,13,11,9,9,9,9,9,10,7,0,0,4,10,10,10,12,12,13,14,15,13,13,18,27,35,47,61,65,16,16,16,14,16,19,18,13,13,14,12,10,8,9,9,10,11,8,0,1,8,10,6,0,9,15,13,11,13,14,14,21,33,45,50,54,56,16,16,15,14,16,19,17,12,14,16,13,10,8,9,10,10,12,9,0,5,10,9,2,-6,5,17,13,7,10,14,15,23,38,51,51,46,46,17,16,14,15,17,19,14,12,14,16,14,13,11,11,11,11,12,11,6,8,9,4,-3,-7,3,15,11,3,7,12,16,27,40,46,41,35,35,17,15,14,15,18,18,13,12,15,16,14,15,13,12,11,12,12,12,11,10,9,0,-8,-9,1,12,8,0,4,11,18,31,42,40,31,25,25,18,16,14,15,17,16,12,12,14,15,14,15,13,12,12,12,12,11,10,8,4,-3,-9,-6,1,8,4,1,5,12,23,34,36,31,24,22,24,19,17,14,14,17,15,10,12,14,15,14,15,14,13,12,12,12,11,8,6,1,-7,-9,-5,1,4,0,4,7,13,28,36,31,22,19,21,25,20,18,15,15,17,14,11,13,13,15,14,15,14,13,12,12,11,10,7,5,2,-4,-8,-4,0,1,2,7,10,17,30,32,25,19,19,27,33,20,18,16,17,17,13,12,13,12,15,14,15,15,13,12,12,11,8,6,5,3,-2,-6,-3,0,0,5,11,13,20,30,28,20,17,20,33,40,20,19,16,16,16,13,13,14,13,15,14,15,16,14,12,12,11,8,6,6,6,1,-2,-2,0,2,10,14,16,19,25,24,19,18,26,40,47,20,19,16,15,15,13,13,14,14,17,14,15,16,14,12,12,10,7,6,7,9,4,0,0,0,6,14,16,18,18,20,20,18,21,32,47,53,19,19,17,16,15,14,14,15,15,18,16,16,16,15,13,12,11,7,7,8,8,3,0,0,1,11,16,18,17,13,15,17,19,27,39,53,56,19,20,18,16,15,14,15,16,17,19,18,17,16,17,15,13,11,6,8,9,5,0,0,0,5,15,18,20,15,8,10,16,22,33,47,58,59,20,20,18,17,17,16,16,15,16,17,17,17,17,18,16,14,12,8,9,8,3,0,0,1,7,16,19,17,11,8,12,19,28,40,52,58,58,20,20,18,17,19,19,16,15,16,16,16,17,17,19,18,15,13,12,10,6,1,0,0,4,8,15,19,14,8,9,15,24,35,45,54,57,55,21,21,19,18,22,22,17,15,15,15,15,16,17,18,18,16,14,13,10,4,0,0,0,6,9,14,17,11,8,12,16,26,38,44,47,51,51,21,23,20,20,24,24,18,15,13,15,15,15,16,18,18,16,15,13,10,2,0,0,3,8,10,13,13,8,9,14,16,27,39,39,37,43,46,23,26,23,21,25,25,19,14,13,15,15,16,15,17,17,15,14,12,10,2,0,1,6,9,11,14,12,7,9,14,16,25,35,32,30,39,44,24,28,26,23,25,25,19,14,13,15,15,16,15,16,16,14,14,11,9,3,0,4,8,10,12,15,12,7,9,13,15,22,29,24,23,37,43,24,29,28,25,25,25,20,14,13,15,15,16,15,16,15,13,13,12,10,6,3,7,9,11,13,14,10,6,7,9,12,19,23,19,20,32,39,24,29,28,26,26,25,20,15,14,15,14,14,15,16,14,12,13,13,11,9,8,9,10,12,15,12,8,5,4,5,8,15,17,17,18,28,33,24,28,28,27,27,25,20,17,16,14,12,12,14,16,15,13,13,14,13,11,11,11,11,13,14,10,6,4,2,1,1,9,14,16,17,24,29,25,27,28,28,27,25,20,18,16,12,10,11,13,16,17,14,15,16,15,12,12,13,13,15,13,8,6,4,0,-1,-5,3,14,17,16,22,27,26,26,27,27,27,25,21,19,16,11,10,11,13,17,17,15,15,17,15,13,13,14,14,15,11,6,7,6,-2,-6,-7,3,14,17,15,20,25,25,26,27,27,27,26,23,19,16,11,10,13,15,17,17,15,15,18,15,13,13,14,14,13,9,7,7,10,-2,-10,-3,8,16,17,14,18,23,25,26,27,27,27,27,24,21,19,12,11,13,15,18,17,15,15,17,15,13,13,14,14,13,8,7,9,13,-4,-9,0,9,15,16,12,16,20,23,26,27,26,27,28,25,23,23,17,13,13,15,17,17,15,14,15,15,14,14,15,15,12,9,9,12,13,-5,-5,3,8,11,14,12,13,15,21,26,26,25,27,28,25,24,26,20,15,14,15,17,17,15,14,15,14,15,16,16,15,12,10,10,13,13,-1,-1,6,7,9,12,11,11,13,20,24,25,24,27,29,27,25,26,23,19,15,14,16,16,14,15,15,14,16,17,17,16,12,10,12,12,13,7,4,6,6,8,12,12,11,12,20,23,24,24,26,29,27,24,25,25,21,15,14,16,15,13,14,15,14,16,16,16,16,13,11,12,12,13,14,8,6,6,7,12,13,11,12,22,24,24,23,26,29,26,23,24,25,21,16,14,15,14,13,14,15,14,14,14,15,15,13,11,11,12,13,14,8,6,6,8,14,15,13,13,24,26,24,23,25,27,24,21,23,24,21,17,15,15,13,13,14,16,14,14,14,15,15,13,13,11,12,14,14,8,6,7,9,16,18,14,14,27,27,25,23,23,24,21,19,21,23,21,19,17,15,14,13,15,16,15,16,16,16,15,15,15,15,14,14,15,8,7,9,11,17,20,18,16,29,28,25,23,22,22,19,18,20,22,21,21,18,16,14,14,16,16,15,17,16,17,15,15,17,18,15,15,15,10,9,11,13,18,23,21,19],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
