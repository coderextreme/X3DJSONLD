###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    Shape(
      appearance=Appearance(
        material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0,0.05,0)),
        texture=ImageTexture(url=['../../images/4/world14-7.jpg'],repeatS=False,repeatT=False)),
      geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(67.45833802716578,-22.54166197283422,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=22,xSpacing=1.0714287,zDimension=24,zSpacing=0.48913044,height=[-3,215,188,479,610,792,793,699,681,-95,-208,-618,-666,-753,-1290,-2029,-3012,-2939,-3323,-3093,-3057,-2956,313,470,-107,329,534,645,378,542,10,-217,-221,-820,-803,-797,-1253,-2132,-2945,-3649,-3241,-3341,-3230,-3095,-28,222,-142,-108,-1,-169,4,45,-240,-119,-232,-1132,-1308,-1110,-1623,-2603,-3395,-3463,-3675,-3408,-3413,-3274,-73,-96,-321,-139,-553,-381,-92,-211,-202,-233,-1139,-1455,-1476,-1503,-1733,-2381,-3296,-3633,-3323,-3223,-3574,-3516,-251,-231,-242,-284,-293,-404,-411,-206,-450,-1618,-1610,-1558,-1492,-1548,-1646,-2395,-3325,-3614,-3471,-3624,-3283,-3607,-668,-635,-697,-502,-434,-1025,-934,-883,-1071,-1620,-1802,-1785,-1724,-1754,-1698,-2437,-3343,-3622,-3738,-3461,-3589,-3676,-1293,-1007,-954,-1086,-1006,-1225,-1297,-1372,-1307,-1732,-1851,-1939,-1739,-1493,-1680,-2137,-3334,-3602,-3707,-3479,-3698,-3492,-1495,-1422,-1188,-1176,-1109,-980,-1545,-1453,-1528,-1796,-1832,-1988,-1951,-916,-2012,-2379,-3244,-3548,-3745,-3789,-3437,-1792,-403,-331,-405,-1368,-1482,-1058,-432,-1309,-1624,-1892,-1952,-1752,-2153,-1970,-867,-2537,-3041,-3386,-3665,-3616,-2604,-2758,-117,-259,-358,-295,-1248,-1404,-1032,-904,-1288,-1629,-1815,-1923,-2185,-2014,-1174,-2536,-2907,-3336,-3508,-2938,-3094,-2940,-293,-189,-406,-253,-999,-1608,-1244,-1276,-1187,-1329,-1794,-1820,-1677,-1566,-808,-2444,-2648,-2999,-2235,-2591,-3060,-3062,394,880,-254,-229,-1379,-1658,-1436,-1281,-549,-1732,-1283,-705,-627,-70,-987,-1496,-2241,-2469,-2419,-3187,-3034,-3332,360,257,-290,-443,-1353,-1731,-1375,-811,-966,-788,-1076,-1163,-1062,-708,-396,-1235,-951,-1822,-2252,-2533,-2719,-3137,-117,-2,-276,-285,-475,-1642,-1695,-1352,-1286,-1805,-2523,-2272,-2273,-2291,-2388,-2325,-2520,-2158,-1742,-2045,-2032,-2506,-386,-65,-199,-273,-265,-1161,-1717,-1388,-1696,-2207,-2305,-2179,-2194,-2442,-2425,-2600,-2951,-2405,-2557,-2162,-2175,-1999,450,-31,-307,-207,-257,-273,-1094,-1969,-2194,-2194,-2243,-2211,-2173,-2252,-2470,-2589,-2612,-2771,-2956,-2638,-2721,-2722,104,-363,-228,-470,-306,-322,-510,-2136,-2466,-2606,-2657,-2773,-2777,-2891,-2663,-2957,-2842,-2799,-2842,-3039,-3064,-2717,604,72,265,-122,-190,-266,-269,-1146,-2248,-2554,-2797,-2937,-2951,-2748,-3206,-3343,-3266,-3311,-2994,-2957,-3162,-3135,722,-87,929,-212,-228,-187,-224,-230,-1107,-2483,-2830,-2984,-3158,-3187,-3258,-3337,-3488,-3391,-3551,-3343,-3457,-3366,1270,1530,204,-255,-89,-260,-347,-262,-199,-1386,-2391,-2993,-3176,-3217,-3401,-3374,-3580,-3544,-3637,-3622,-3535,-3635,1499,1033,930,101,1,-133,-306,-120,-201,-199,-689,-2125,-2955,-3187,-3406,-3452,-3496,-3598,-3599,-3596,-3674,-3658,1261,1,219,264,-288,-431,-150,-196,-173,-211,-292,-527,-1449,-2100,-2768,-3128,-3378,-3473,-3627,-3644,-3660,-3515,405,685,1,1,351,-158,-148,-291,-283,-200,-187,-297,-274,-293,-1449,-2305,-2684,-3010,-3524,-3682,-3194,-2065,310,30,273,-89,552,-140,-215,-299,-280,-178,-173,-302,-272,-225,-939,-1692,-2638,-2702,-3403,-3698,-2677,-1972],
        geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(0.0,0.0,-6378137.0),geoSystem=['GDC'])))])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
