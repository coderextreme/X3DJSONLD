###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_50',geoSystem=['GDC'],position=(1.3083120993579338,103.60419903412902,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.3083120993579338,103.60419903412902,0.0),range=4101.627,child1Url=['../../tiles/5/singapore10-0.x3d'],child2Url=['../../tiles/5/singapore10-1.x3d'],child3Url=['../../tiles/5/singapore11-0.x3d'],child4Url=['../../tiles/5/singapore11-1.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore5-0.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.2995803869799398,103.589836,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=45,zSpacing=3.96896E-4,height=[0,0,1,3,4,2,3,7,5,1,1,3,0,7,7,7,7,3,-1,-6,-8,-1,2,9,8,8,7,7,4,3,3,3,3,4,6,7,8,0,1,1,2,4,3,5,10,6,2,0,3,2,6,6,6,6,3,0,-4,-5,0,2,9,10,9,8,8,4,3,3,3,3,5,6,7,7,2,3,2,3,4,4,7,12,7,3,0,4,4,5,5,6,6,2,1,-1,-2,0,3,7,10,10,9,9,4,3,3,3,4,5,6,7,7,3,3,3,4,6,5,7,11,6,4,3,5,3,7,7,7,6,2,2,0,0,0,2,6,9,10,10,9,5,3,3,3,5,6,7,7,7,4,3,2,6,8,5,6,9,5,5,7,5,2,11,10,8,5,2,2,1,1,0,2,6,9,11,11,10,7,4,3,3,5,6,7,7,7,4,3,2,6,7,6,7,7,4,3,7,5,3,15,12,9,5,2,2,2,2,0,2,5,8,11,11,11,8,4,3,4,6,7,7,7,8,4,3,3,4,5,6,9,6,3,0,5,5,5,18,14,8,4,2,2,2,2,1,2,5,8,10,11,11,10,5,4,5,6,7,7,8,8,2,2,3,3,4,6,8,6,3,2,4,6,7,15,9,6,3,2,2,2,2,2,2,4,8,9,11,11,11,6,5,6,7,7,7,6,4,1,1,2,2,4,6,6,6,5,5,5,7,10,10,2,2,2,2,2,2,2,2,2,4,7,9,10,11,11,7,6,6,7,7,8,2,-2,0,2,3,4,6,7,6,4,5,4,5,7,9,4,-1,1,1,2,2,2,2,2,2,3,6,9,10,11,11,8,7,7,7,7,5,-4,-9,1,5,6,7,9,9,7,1,4,2,4,7,4,1,-2,0,1,2,2,2,2,2,2,2,5,8,10,11,11,9,7,7,7,8,1,-12,-17,2,4,5,8,10,10,8,1,4,3,3,7,1,1,0,0,1,2,2,2,2,2,2,2,4,7,10,11,11,9,7,7,7,5,-6,-19,-22,4,2,3,8,10,12,9,2,4,5,3,7,0,3,3,1,2,2,2,2,2,2,2,2,2,5,9,10,11,9,7,7,8,0,-16,-25,-27,4,1,2,8,10,12,8,4,6,8,7,7,1,6,4,2,2,3,2,1,1,2,2,2,2,4,8,10,10,8,7,7,4,-8,-23,-29,-30,5,1,1,7,10,10,6,6,9,10,14,9,4,8,3,2,3,3,2,0,0,1,2,2,2,4,7,8,8,7,7,8,-1,-18,-28,-31,-32,5,2,1,6,10,10,6,6,10,11,16,9,6,7,1,2,3,2,1,0,0,3,3,2,2,5,7,8,8,7,7,4,-9,-26,-31,-32,-33,5,2,1,6,9,9,9,6,9,11,14,8,8,5,-1,1,2,1,0,-2,1,7,5,4,4,6,7,8,7,6,8,-1,-19,-30,-32,-33,-33,3,2,2,6,7,9,8,4,7,9,11,7,8,5,-1,0,1,0,0,-1,3,9,6,5,6,7,8,8,6,4,5,-9,-26,-32,-33,-34,-34,2,2,3,4,5,7,4,1,4,6,8,6,8,5,0,0,0,0,-2,0,7,9,8,7,7,7,8,7,5,2,0,-17,-30,-33,-33,-34,-34,2,2,4,3,4,6,3,1,2,4,6,4,6,5,0,0,0,0,-1,3,9,9,9,8,8,8,8,6,3,0,-2,-19,-31,-33,-34,-33,-32,2,2,4,3,2,5,5,2,1,5,3,0,4,3,-2,-1,0,-2,0,7,9,9,8,8,8,8,7,5,2,0,0,-15,-29,-33,-34,-31,-28,3,3,4,1,1,5,6,3,1,5,2,-2,2,4,-3,0,0,-1,3,9,9,9,8,8,8,8,6,3,0,0,0,-8,-25,-33,-33,-28,-25,2,5,3,0,2,7,5,1,2,5,3,-1,3,8,-1,2,-1,0,7,9,9,8,8,8,8,7,5,2,0,0,0,-3,-19,-31,-31,-25,-23,2,5,2,0,4,10,5,0,2,4,3,0,4,10,0,4,-1,3,9,9,9,8,8,8,8,6,3,0,0,0,0,0,-13,-28,-28,-23,-21,4,6,1,0,8,13,6,0,0,2,1,0,4,6,2,4,0,7,9,9,9,8,8,8,7,5,2,0,0,0,0,0,-9,-23,-25,-22,-21,5,5,1,2,10,13,5,0,0,1,0,0,4,4,4,3,1,9,9,9,9,9,8,8,6,3,0,0,0,0,0,0,-4,-18,-23,-20,-19,6,5,3,4,8,9,4,1,1,1,0,3,4,4,5,1,2,8,9,8,9,9,8,7,5,2,0,0,0,0,0,0,-1,-12,-20,-18,-15,6,5,5,5,5,5,2,2,2,2,2,6,5,4,6,1,2,7,8,7,9,9,8,6,3,0,0,0,0,0,0,0,0,-6,-16,-15,-11,5,7,8,6,4,4,1,1,0,4,6,7,5,6,5,4,1,6,8,6,10,9,7,4,2,0,0,0,0,0,0,0,0,-1,-8,-9,-8,5,9,9,5,4,4,1,1,-1,4,9,8,6,8,5,6,1,6,6,4,12,8,6,3,0,0,0,0,0,0,0,0,1,2,0,-4,-5,5,9,7,4,5,4,2,2,-1,2,8,6,4,7,5,9,5,7,3,1,10,7,4,1,0,0,0,0,0,0,0,0,2,6,6,0,-3,6,8,5,3,5,4,3,3,0,1,7,5,1,6,6,11,8,8,1,0,7,5,2,0,0,0,0,0,0,0,0,1,5,10,12,4,0,6,9,6,2,5,5,5,5,2,3,7,6,0,5,6,11,8,7,0,4,5,1,0,0,0,0,0,0,0,0,0,2,7,12,14,8,2,5,9,7,3,3,4,6,6,5,4,7,7,0,4,7,9,6,6,0,11,4,0,0,0,0,0,0,0,0,0,0,4,9,13,14,10,6,5,9,8,4,3,5,7,6,6,3,5,7,4,7,9,9,4,5,0,13,9,4,0,0,2,0,0,0,0,0,2,6,11,13,15,14,12,4,7,8,5,3,5,7,4,5,2,3,6,8,11,11,9,2,3,1,13,15,9,0,1,4,1,0,0,0,0,3,8,12,14,16,17,17,2,5,5,4,4,5,7,3,4,3,2,5,8,8,8,10,3,1,1,8,14,11,2,5,6,6,1,0,0,1,4,9,12,15,17,18,17,1,3,2,3,5,5,6,2,4,5,2,4,6,5,4,10,6,0,0,2,9,11,5,11,8,11,2,0,0,2,6,9,13,16,18,17,16,2,3,0,2,7,5,4,1,2,5,3,4,6,4,2,6,3,-2,0,-2,4,9,8,12,8,12,1,0,0,2,5,10,14,17,18,16,14,3,3,0,2,9,4,1,0,1,4,5,6,8,5,2,1,0,-2,-1,-7,0,7,10,10,8,9,0,0,1,2,5,11,15,18,17,14,13,4,4,0,3,10,4,0,0,2,4,6,8,10,8,3,2,0,-1,-2,-6,3,4,8,9,7,7,3,3,2,0,6,13,17,18,16,13,13,4,6,1,4,10,5,1,0,3,4,6,9,12,10,5,5,0,0,-1,-1,7,2,4,8,6,4,8,8,4,0,7,14,18,17,14,12,13,4,6,2,4,10,5,2,1,5,4,6,7,9,8,6,5,0,0,0,1,5,4,3,6,5,5,9,8,6,2,8,15,17,14,12,12,12,4,5,2,4,10,6,2,4,7,5,4,4,3,4,5,4,0,1,4,3,0,9,5,3,4,6,8,6,9,7,8,16,14,11,12,12,11,4,4,3,4,8,5,2,5,9,5,4,3,3,3,3,1,0,2,9,6,-2,11,5,0,3,6,8,6,10,10,10,13,11,10,12,11,10],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
