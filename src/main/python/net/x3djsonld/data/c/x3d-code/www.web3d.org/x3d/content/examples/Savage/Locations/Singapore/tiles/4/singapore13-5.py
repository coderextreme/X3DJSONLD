###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_135',geoSystem=['GDC'],position=(1.4480194974058374,103.74782937541922,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.4480194974058374,103.74782937541922,0.0),range=4101.627,child1Url=['../../tiles/5/singapore26-10.x3d'],child2Url=['../../tiles/5/singapore26-11.x3d'],child3Url=['../../tiles/5/singapore27-10.x3d'],child4Url=['../../tiles/5/singapore27-11.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore13-5.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.4392877850278434,103.7334663412902,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[9,10,12,9,6,7,13,10,3,0,0,-3,0,3,6,16,20,17,23,27,22,18,12,9,5,3,2,1,0,3,7,9,7,6,13,14,10,8,9,14,12,9,9,12,12,6,0,-1,-1,1,4,7,18,26,26,28,28,26,21,13,7,4,3,2,0,0,2,8,8,7,6,12,14,10,8,9,16,15,13,10,11,14,8,0,-3,0,2,4,9,21,30,34,32,30,29,24,15,6,3,2,1,0,0,1,8,8,7,6,11,14,10,7,8,16,17,15,11,11,12,11,0,-1,0,3,5,10,20,29,34,32,32,30,27,17,5,3,2,1,0,0,3,8,8,7,7,10,12,8,7,7,15,19,17,13,11,12,14,0,0,3,4,6,11,18,28,33,34,32,31,29,20,4,3,2,1,0,1,5,8,7,7,8,10,10,6,7,8,16,20,17,12,11,11,11,2,0,3,5,8,13,19,27,32,33,33,32,30,22,8,3,2,1,1,3,6,8,7,7,8,9,6,2,7,10,16,21,17,11,11,11,9,3,3,4,6,10,15,20,26,31,33,34,32,31,25,12,3,2,1,2,5,8,7,7,7,8,8,2,0,8,11,16,17,14,11,11,11,9,4,4,5,8,12,15,20,26,31,32,33,33,32,28,18,6,2,2,3,6,8,7,7,7,7,5,0,-2,10,13,15,14,11,11,11,11,10,5,4,6,10,13,16,20,25,30,32,33,34,32,31,24,10,2,2,5,8,7,7,7,7,7,1,-4,-2,11,14,13,12,11,11,11,11,10,7,5,8,12,14,16,20,25,29,32,33,33,33,32,28,16,5,4,6,8,7,7,7,6,4,-1,-2,0,13,13,11,11,11,11,11,11,10,8,7,10,13,14,16,20,24,29,32,33,33,34,32,30,23,9,5,8,7,7,7,7,6,1,-4,0,2,11,11,10,10,11,11,11,11,11,9,9,12,13,14,16,20,24,28,31,32,33,33,33,32,27,16,7,8,7,7,7,6,3,-1,-2,2,4,9,9,9,10,10,11,11,11,11,11,12,13,13,14,16,20,24,28,31,32,33,33,34,32,30,22,8,7,7,7,7,5,0,-4,0,5,6,8,8,9,10,10,11,11,11,11,11,12,13,13,14,16,19,24,28,30,32,32,33,33,33,31,21,8,7,7,7,6,3,-1,-2,2,6,7,8,7,8,10,10,11,11,11,11,11,12,13,13,14,16,19,23,27,30,32,32,33,33,34,30,19,7,7,7,7,5,0,-4,0,5,7,8,7,7,7,9,10,11,11,11,11,11,11,12,13,14,16,19,23,27,30,31,32,33,33,34,34,31,21,19,18,16,11,-1,-2,2,6,8,8,8,7,6,8,10,10,11,11,11,11,11,12,13,14,16,19,23,27,29,31,32,32,33,33,39,47,41,36,34,30,17,-3,0,5,7,8,8,8,7,6,7,9,10,11,11,11,11,11,11,12,13,16,19,23,26,29,31,32,31,32,40,54,62,58,54,51,45,31,9,8,8,8,8,8,7,7,7,6,8,10,10,11,11,11,11,11,12,13,16,19,22,26,28,30,31,29,30,50,75,76,75,72,68,61,49,34,21,11,8,8,7,7,8,7,6,7,9,10,10,11,11,11,11,11,9,11,13,16,20,23,24,24,22,22,43,74,81,81,79,74,67,57,43,27,15,10,8,8,6,7,7,6,7,8,10,10,11,11,11,11,11,5,3,4,7,11,14,13,12,10,10,25,62,82,81,79,75,68,57,44,29,18,13,9,9,6,7,8,7,7,7,9,10,10,10,7,3,1,-2,-5,-3,0,2,5,6,6,5,4,14,45,74,81,79,76,69,58,45,30,20,14,10,10,5,6,7,7,7,7,8,10,10,10,2,-6,-13,-15,-14,-12,-9,-5,-1,1,5,6,5,7,27,62,81,80,77,70,59,45,30,19,13,11,11,5,6,7,8,7,6,7,7,4,1,-6,-15,-21,-21,-19,-17,-14,-10,-5,0,4,6,5,4,14,45,75,80,77,71,60,45,30,19,13,12,12,5,5,6,7,7,6,6,3,-6,-14,-19,-22,-22,-21,-19,-17,-14,-10,-5,0,4,6,6,5,7,26,62,81,78,72,61,45,30,18,13,12,12,5,5,6,7,8,7,4,-2,-15,-24,-26,-24,-23,-21,-19,-17,-15,-11,-6,0,4,6,6,5,4,14,46,75,79,73,62,45,29,17,13,12,12,5,5,5,6,7,7,2,-10,-21,-26,-26,-25,-24,-21,-19,-17,-15,-12,-6,0,5,7,7,6,5,7,27,61,80,74,62,45,28,16,13,12,13,5,5,5,6,7,7,-1,-17,-26,-26,-27,-25,-24,-21,-19,-17,-15,-13,-7,0,6,7,7,6,5,4,13,45,75,75,63,45,28,15,13,12,13,6,5,5,5,6,6,-7,-21,-26,-27,-27,-26,-24,-22,-19,-17,-15,-13,-8,0,7,8,7,7,6,5,7,26,60,78,64,46,26,15,12,12,11,6,5,5,5,6,4,-12,-25,-27,-28,-27,-26,-24,-22,-19,-17,-15,-14,-7,2,7,8,7,7,6,5,4,12,44,73,66,46,25,13,12,12,10,6,6,5,5,4,1,-13,-25,-27,-27,-27,-26,-24,-22,-19,-17,-15,-15,-5,4,8,8,8,7,7,6,5,7,24,57,72,45,24,11,12,10,8,6,6,5,5,5,0,-12,-23,-27,-27,-27,-26,-25,-22,-19,-17,-15,-13,-1,8,8,8,8,8,7,6,5,5,11,39,67,40,21,9,12,8,7,6,6,6,5,7,3,-7,-19,-25,-27,-27,-26,-25,-23,-20,-17,-15,-9,4,12,9,8,8,8,8,7,6,5,7,21,39,27,14,7,9,7,6,6,6,6,7,9,7,-1,-14,-23,-27,-27,-27,-25,-23,-20,-17,-15,-3,11,16,11,8,8,9,9,9,6,6,5,7,15,16,9,5,7,7,6,8,6,7,11,11,10,2,-7,-19,-25,-27,-27,-26,-23,-20,-17,-14,0,16,17,13,9,8,9,11,11,9,6,6,8,14,17,11,4,5,6,6,10,6,7,13,13,13,7,-1,-13,-22,-27,-27,-27,-24,-20,-16,-12,4,18,18,15,11,8,9,11,13,11,7,7,10,13,17,12,4,3,5,6,11,8,9,12,14,13,10,2,-7,-18,-24,-27,-26,-25,-20,-14,-8,5,18,18,16,12,8,8,11,15,15,11,11,11,13,12,8,4,4,6,7,11,9,9,11,14,13,13,7,-1,-13,-21,-26,-25,-26,-18,-11,-4,7,16,19,17,13,9,8,11,16,18,15,15,13,11,8,6,5,6,6,7,11,10,10,10,12,14,13,10,2,-7,-17,-23,-25,-23,-15,-7,0,8,13,18,18,14,9,9,12,19,21,17,14,13,11,8,8,9,9,10,10,11,10,10,9,10,14,13,13,7,-1,-11,-20,-26,-20,-10,-2,4,9,11,16,18,15,11,11,14,22,24,20,14,13,12,8,10,13,13,14,13,11,11,10,9,9,12,14,13,10,2,-6,-14,-20,-15,-5,0,6,10,11,13,15,14,14,14,18,26,28,26,18,17,13,9,11,18,21,20,18,11,11,10,9,8,10,14,13,12,6,-1,-8,-14,-9,-1,3,7,11,10,10,12,13,17,17,21,29,31,31,23,22,15,10,12,24,29,25,22,12,11,10,9,8,9,12,14,12,9,2,-4,-8,-3,2,6,9,11,11,13,15,16,19,19,22,32,34,31,24,21,15,10,13,23,30,27,24,12,11,10,9,8,8,10,14,13,11,7,-1,-2,2,5,8,9,10,12,17,20,19,21,20,23,34,37,32,25,20,15,9,14,22,31,29,27],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
