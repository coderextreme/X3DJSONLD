###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_1210',geoSystem=['GDC'],position=(1.4305560726498494,103.8914597167094,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.4305560726498494,103.8914597167094,0.0),range=4101.627,child1Url=['../../tiles/5/singapore24-20.x3d'],child2Url=['../../tiles/5/singapore24-21.x3d'],child3Url=['../../tiles/5/singapore25-20.x3d'],child4Url=['../../tiles/5/singapore25-21.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore12-10.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.4218243602718554,103.87709668258039,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[12,14,15,15,16,15,12,11,12,12,12,9,5,7,8,8,6,7,9,9,11,12,10,7,4,6,10,11,10,8,10,10,10,9,8,5,5,12,13,14,14,15,15,12,11,10,11,12,10,6,7,8,7,7,8,10,10,11,12,12,8,4,5,8,11,11,9,10,10,10,9,7,6,6,11,13,12,13,15,15,13,11,9,11,13,11,7,7,8,7,7,9,11,11,11,11,13,9,5,4,6,10,11,10,10,10,10,8,6,6,6,9,10,10,11,13,16,14,12,11,12,14,11,8,8,8,8,9,10,11,11,11,11,12,11,6,4,5,8,11,10,10,10,9,7,6,5,5,7,9,9,10,13,15,15,13,12,13,14,11,9,9,8,8,9,10,11,11,11,11,12,13,8,4,4,6,10,10,10,10,8,6,6,5,4,7,9,11,11,13,15,15,14,13,13,11,8,10,9,7,8,8,9,11,11,11,11,12,13,11,6,4,5,8,10,11,9,7,6,6,5,4,7,8,11,12,13,14,15,14,13,13,9,7,10,9,6,7,7,9,10,11,11,11,11,12,13,8,4,4,6,10,10,8,6,6,6,5,4,6,7,10,11,12,13,13,11,12,12,10,8,10,8,4,6,7,8,9,11,11,11,11,12,13,11,6,4,5,8,9,7,6,6,6,4,4,6,6,9,11,11,12,11,10,11,12,10,10,11,8,1,4,6,7,9,10,11,11,11,11,12,13,8,4,3,5,7,6,6,6,6,4,4,6,6,7,9,10,10,10,9,10,11,9,10,13,10,3,3,5,7,8,9,11,11,11,11,12,13,11,2,-1,-2,-1,4,6,6,5,4,4,6,6,6,8,10,10,8,8,10,10,9,11,16,11,5,1,4,6,7,9,10,11,11,11,11,11,11,0,-7,-11,-9,2,5,4,4,3,3,7,7,7,8,9,9,10,10,11,12,14,20,23,15,8,3,2,5,6,8,9,11,11,11,9,0,-3,-8,-13,-15,-14,-8,-6,-6,-7,-7,-5,8,7,7,7,8,9,11,13,12,13,19,29,31,20,11,5,1,3,6,7,9,11,12,11,9,-11,-17,-18,-18,-19,-19,-18,-18,-18,-18,-17,-13,9,7,6,6,8,10,12,13,14,19,37,44,36,26,16,8,3,2,5,6,8,15,20,20,17,-3,-16,-19,-19,-19,-19,-19,-19,-19,-19,-10,-3,9,7,6,6,7,10,12,14,15,25,54,59,42,32,21,11,5,1,4,7,10,21,27,30,25,6,-14,-18,-19,-19,-19,-19,-19,-19,-18,-4,6,8,7,6,6,7,10,11,15,20,28,53,61,51,39,27,16,8,3,5,21,24,31,35,34,28,11,-8,-17,-19,-19,-19,-19,-19,-19,-11,5,15,7,7,6,6,7,9,11,16,24,31,49,62,61,46,32,21,12,6,8,36,40,41,41,38,30,15,-3,-15,-18,-19,-19,-19,-19,-18,-4,15,22,7,7,6,6,7,8,9,16,24,31,47,61,63,54,39,27,18,22,33,47,43,43,43,40,32,16,-1,-12,-18,-19,-19,-19,-19,-13,3,20,25,7,7,6,7,7,7,8,14,22,29,43,59,64,61,46,32,25,41,60,57,44,43,43,42,34,16,0,-9,-17,-18,-19,-19,-18,-7,10,24,27,6,7,7,7,6,4,6,12,20,27,38,55,63,64,54,40,37,54,68,62,50,43,43,42,36,17,-2,-8,-13,-17,-19,-19,-15,-3,15,26,27,6,7,8,7,3,2,5,9,17,24,32,50,62,64,61,47,48,64,70,67,56,44,43,43,39,17,-4,-8,-9,-16,-18,-18,-12,-1,18,28,27,6,7,8,6,2,1,3,7,14,21,28,41,55,57,53,44,49,65,70,69,61,49,43,43,41,18,-6,-8,-5,-11,-17,-15,-7,1,16,27,28,5,5,6,6,3,1,1,4,10,19,25,33,46,47,41,36,43,63,68,70,65,54,44,43,41,19,-7,-8,-3,-5,-15,-11,-2,3,12,25,28,5,5,6,6,4,1,0,2,7,15,23,30,38,36,32,29,37,56,66,69,68,58,47,43,40,23,-6,-9,-1,-1,-11,-7,1,5,10,21,25,4,5,6,6,4,1,0,1,4,10,21,30,31,25,24,24,30,47,63,67,69,61,49,43,38,28,-4,-13,0,1,-7,-2,2,5,8,15,20,4,5,5,6,5,3,0,0,2,9,22,33,31,24,21,22,27,40,57,65,68,64,51,41,36,27,-2,-11,0,2,-2,1,4,6,8,13,16,4,5,5,6,6,4,1,0,1,8,25,38,37,27,21,22,26,34,49,63,66,67,51,38,33,21,-1,-8,0,3,1,3,6,7,8,11,14,4,4,5,5,6,5,2,1,4,13,27,38,39,32,23,22,25,31,42,57,64,64,45,31,26,15,0,-6,0,3,2,4,5,7,8,10,12,4,4,5,5,6,6,4,3,9,20,31,37,39,37,27,22,25,31,37,49,62,57,33,21,17,10,2,-6,0,3,1,4,5,6,8,10,11,4,4,4,5,5,6,6,6,14,25,31,35,38,39,31,23,24,31,36,41,55,44,22,13,10,7,6,-1,1,3,1,5,6,7,9,11,11,4,4,4,5,5,6,8,11,19,27,30,33,37,38,36,26,23,31,37,33,43,29,12,5,6,7,12,5,3,4,4,7,9,9,10,12,12,4,4,4,6,7,8,10,13,19,27,29,31,35,37,38,29,22,29,34,24,32,17,6,2,3,8,16,8,5,5,6,8,10,9,11,11,11,4,4,5,8,10,10,11,13,15,22,28,30,32,36,36,34,20,22,25,15,21,10,4,2,4,9,18,8,6,8,7,9,10,9,10,11,11,4,4,6,10,12,12,12,13,13,18,26,29,30,33,34,34,16,16,17,8,12,6,3,3,4,10,16,8,7,10,9,10,10,8,9,10,10,4,5,8,11,12,12,12,12,12,14,22,28,29,30,33,25,11,10,10,6,9,7,5,5,6,7,11,9,9,10,9,9,10,8,8,10,10,3,6,10,11,12,12,12,12,12,11,16,26,28,28,28,17,8,6,6,6,7,8,6,7,7,6,8,9,8,10,8,9,10,8,7,9,9,2,6,10,11,12,12,12,12,12,11,11,19,28,27,17,10,7,7,8,8,8,7,7,7,8,6,8,8,7,9,8,8,9,8,8,9,8,0,6,10,10,11,11,12,12,12,11,7,13,26,23,9,6,7,8,9,9,8,7,7,7,9,6,8,8,7,8,7,7,9,9,9,9,8,-3,2,7,10,10,11,11,12,10,11,8,5,14,13,7,7,7,8,9,9,9,8,7,7,9,7,8,9,7,7,8,6,9,10,10,11,10,-6,-1,5,9,10,10,11,11,10,10,8,0,5,6,6,7,7,9,9,8,9,9,7,8,9,8,7,9,8,7,8,6,9,10,10,12,12,-5,-4,1,6,9,9,9,11,11,8,5,0,4,6,8,8,7,9,8,7,8,9,8,9,10,8,6,8,9,8,8,6,8,10,11,11,11,-5,-6,-2,4,8,8,8,9,10,7,3,1,4,5,9,8,7,8,8,7,8,9,9,10,10,8,6,8,10,9,8,6,7,10,11,11,10,-3,-6,-4,0,5,7,7,7,6,3,2,3,5,5,8,8,8,6,7,8,8,9,9,8,9,9,7,7,8,9,9,7,8,10,11,11,10,-1,-5,-6,-2,3,6,6,6,3,0,1,4,5,5,7,8,8,6,7,9,9,9,9,8,7,9,8,7,7,9,8,7,8,10,10,10,10],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
