###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    Shape(
      appearance=Appearance(
        material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0,0.05,0)),
        texture=ImageTexture(url=['../../images/4/world14-4.jpg'],repeatS=False,repeatT=False)),
      geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(67.45833802716578,-90.04166398449098,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=22,xSpacing=1.0714287,zDimension=24,zSpacing=0.48913044,height=[265,270,112,8,13,4,9,-181,-348,-194,-67,-40,1,37,3,35,154,152,150,351,365,401,326,-145,149,55,1,-57,-1,-131,-117,-74,-34,-25,-24,-18,-24,-20,50,108,155,256,286,30,311,343,301,148,1,-44,-8,-23,-80,-112,-54,-25,-40,-17,-11,1,51,87,30,33,7,30,499,291,351,34,120,304,156,109,-19,-84,-73,-47,-78,-69,-26,-54,2,21,30,30,124,151,345,352,264,60,335,117,311,241,137,-44,-51,-89,-57,-19,-24,-117,-76,25,148,276,331,589,148,267,182,-63,294,353,296,335,115,-58,-55,-17,-20,60,5,-17,-41,85,155,333,595,526,121,172,-53,-17,-113,337,269,226,-46,-148,-23,-7,-33,8,1,-5,-12,510,342,319,384,157,-100,78,106,-13,-64,274,396,120,38,-37,-9,-3,-4,-3,1,1,110,251,254,448,267,-47,-25,85,-33,-36,-85,91,257,79,61,-15,-15,-3,-2,-8,146,141,295,412,558,605,82,0,-22,-26,-24,-23,-41,273,135,91,-24,-9,1,-3,0,32,556,268,428,614,591,1109,728,2,-32,-51,-49,-5,304,115,238,213,39,61,52,-10,203,352,247,1046,723,617,1058,-34,38,91,-74,-24,120,105,178,213,105,271,121,79,36,305,302,495,616,593,625,814,-249,55,-4,-267,-62,-36,-53,90,6,8,104,90,121,182,163,293,607,626,206,576,747,1015,-658,-173,-250,-664,-44,213,213,206,78,19,140,244,313,304,624,635,386,610,870,1,-58,-137,-315,-901,-1850,-2087,-127,129,210,216,-97,152,235,345,67,85,103,166,637,812,181,-88,-260,-833,-1490,-1825,-2153,-2261,-323,151,154,143,-567,587,462,532,587,95,-518,-484,872,-582,-535,-622,-803,-1069,-1461,-1826,-2103,-2267,-427,-88,310,305,-688,-67,654,898,874,-84,523,1450,892,-580,-907,-940,-913,-1190,-1343,-1801,-2131,-2253,-265,-425,-186,261,307,-22,-382,108,152,222,-350,1,-984,-900,-926,-908,-891,-1094,-1241,-1717,-2102,-2216,-229,-283,-409,-418,-528,-542,-671,-681,-758,-790,-790,-840,-755,-718,-727,-738,-795,-1017,-1296,-1696,-1972,-2054,201,349,317,276,509,116,154,312,680,441,-375,-412,-337,-486,-531,-650,-865,-1002,-1254,-1523,-1785,-1940,320,295,307,310,178,564,1202,1390,1270,693,-273,-480,-367,-390,-488,-676,-717,-726,-640,-695,-677,-498,162,72,-48,-68,-73,1,471,1050,528,-32,-535,-425,-304,-333,-394,-417,-408,-503,-525,-529,-430,-399,6,-39,-181,-362,-573,-383,-382,-776,-302,-18,-182,-122,-397,-284,-367,-421,-428,-526,-620,-212,84,588,343,131,-199,-229,-165,-49,-229,-695,-601,636,-97,-139,-398,-278,-392,-440,-497,-584,-651,-208,209,672],
        geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(0.0,0.0,-6378137.0),geoSystem=['GDC'])))])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
