###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_34',geoSystem=['GDC'],position=(1.273385249845958,103.71910330716118,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.273385249845958,103.71910330716118,0.0),range=4101.627,child1Url=['../../tiles/5/singapore6-8.x3d'],child2Url=['../../tiles/5/singapore6-9.x3d'],child3Url=['../../tiles/5/singapore7-8.x3d'],child4Url=['../../tiles/5/singapore7-9.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore3-4.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.264653537467964,103.70474027303216,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[14,17,14,11,9,6,2,1,0,0,2,5,5,6,8,11,12,12,11,10,8,9,7,4,5,3,0,3,4,4,4,4,5,7,8,8,7,19,21,14,11,8,3,1,2,1,2,5,9,8,6,8,11,11,11,11,10,10,11,8,6,7,5,2,3,4,4,4,4,5,6,8,8,8,21,21,14,11,7,1,0,2,3,4,7,10,10,7,8,11,10,10,11,11,12,12,9,7,8,6,3,3,4,4,4,4,5,6,7,8,8,18,17,11,9,6,1,0,2,4,6,7,9,9,7,7,10,11,10,10,10,12,13,12,8,8,5,3,3,4,4,4,5,6,6,6,8,8,15,13,9,8,6,1,-1,1,5,7,7,8,8,8,7,10,11,10,10,9,12,14,13,8,7,5,3,4,4,5,5,6,6,6,6,7,8,14,13,7,8,8,3,0,0,6,7,8,8,8,8,7,9,10,9,10,10,12,14,12,8,7,5,4,6,6,5,4,4,6,6,5,6,7,13,12,6,8,9,6,0,0,7,9,10,10,9,8,8,8,8,10,11,10,12,12,11,7,7,5,6,8,7,6,3,3,5,6,5,5,6,10,8,5,9,9,6,2,2,8,11,12,12,9,9,8,8,9,11,12,9,9,10,9,6,7,5,6,7,7,5,2,2,4,6,5,5,5,7,4,4,9,10,7,3,4,9,12,15,15,11,11,10,10,11,14,13,9,7,8,6,6,7,6,6,6,7,4,1,1,4,6,5,4,4,6,5,4,8,12,9,4,6,9,13,14,13,10,11,9,13,13,15,11,7,7,7,7,8,11,9,5,5,7,4,0,0,4,7,6,4,4,7,7,4,6,12,10,4,8,9,13,13,11,9,11,8,15,16,15,9,7,6,7,9,9,15,12,6,5,6,4,0,0,4,8,7,5,4,6,7,6,6,9,7,5,8,8,12,11,9,9,9,8,14,15,13,9,9,5,8,12,10,16,10,7,7,6,5,1,0,5,9,8,6,6,6,8,9,7,4,4,6,7,8,11,10,7,9,9,9,11,12,11,10,11,4,9,14,10,17,8,9,9,7,5,3,0,5,11,9,8,8,6,7,10,9,5,6,7,7,8,9,8,6,7,9,7,8,10,12,13,16,7,9,13,12,19,13,15,10,7,6,4,1,5,9,10,9,8,4,7,10,9,8,7,8,8,9,7,7,6,6,9,5,5,8,13,17,20,12,9,11,14,22,19,20,11,7,6,5,3,5,8,10,10,8,7,8,8,7,7,6,8,9,10,7,7,6,7,7,5,6,14,21,21,21,17,10,10,14,17,16,19,10,7,7,5,4,7,9,13,12,9,10,9,7,5,6,6,9,10,12,9,7,8,7,3,5,8,21,31,26,22,21,11,10,13,10,12,15,10,7,7,5,5,8,12,17,14,10,11,9,6,5,7,5,8,9,11,7,7,8,9,5,6,10,20,30,27,19,13,7,8,12,11,11,11,7,7,7,5,6,9,11,13,10,8,11,9,6,7,7,5,6,8,9,6,6,8,11,8,6,11,18,28,28,15,4,3,7,11,13,11,8,6,6,6,6,6,9,9,7,6,5,10,8,6,6,6,4,6,9,9,6,6,7,11,9,7,10,16,23,22,10,2,1,6,13,12,9,5,4,5,6,8,8,11,10,5,4,5,9,7,6,6,4,2,5,10,9,6,6,6,10,9,8,8,12,18,15,4,1,1,6,14,12,8,3,2,3,6,9,10,12,11,4,2,5,8,7,5,5,5,4,2,6,8,6,6,7,10,10,9,8,10,15,12,4,2,2,7,13,9,7,5,3,4,6,9,12,13,13,7,6,8,8,7,5,4,6,5,0,0,6,6,7,8,11,11,9,8,10,11,9,5,2,4,8,11,7,7,7,5,4,7,9,13,15,15,11,10,11,9,8,3,2,3,4,0,0,6,7,8,9,13,12,10,9,10,10,9,6,4,5,8,8,6,6,9,6,5,8,10,13,15,14,12,11,12,11,8,2,0,0,2,3,2,6,9,10,10,16,14,11,9,10,10,9,9,7,5,7,5,6,6,9,7,5,8,12,13,14,11,11,11,11,12,8,1,-4,-6,0,2,4,8,11,8,10,16,15,11,9,10,11,10,10,8,6,7,5,7,5,7,6,5,8,12,12,12,10,11,10,10,13,8,1,-10,-13,-3,0,5,12,15,5,11,14,16,10,8,10,11,10,11,9,8,7,7,6,4,5,5,5,7,11,10,10,10,11,10,8,12,7,0,-11,-15,-5,0,5,12,14,3,10,13,16,9,8,9,10,9,9,9,8,7,7,7,5,3,4,5,8,10,9,8,10,11,9,8,9,5,0,-9,-13,-6,0,5,11,10,2,9,11,14,8,7,8,10,7,6,8,7,6,7,10,6,2,4,6,8,9,7,6,11,12,8,8,6,2,0,-5,-8,-3,5,14,17,12,7,12,15,14,9,7,7,9,5,5,8,7,6,6,9,6,3,5,6,9,9,6,6,11,12,8,8,4,0,0,-1,-3,0,15,30,28,20,17,18,22,15,11,8,6,8,6,5,8,8,6,5,7,6,4,5,7,9,10,7,6,12,12,8,7,2,-1,0,0,0,4,19,36,35,26,24,22,24,15,12,10,7,8,7,6,8,8,6,5,6,7,6,6,7,11,11,7,6,10,10,6,5,1,-1,0,2,4,7,17,32,38,30,28,25,22,15,14,14,10,10,9,9,7,7,6,5,6,8,7,7,8,13,13,7,6,8,7,4,4,1,-1,0,3,6,8,14,27,34,31,30,26,20,16,13,16,12,11,10,10,6,6,6,5,6,10,8,7,10,14,12,7,6,6,2,0,1,2,0,0,4,6,7,13,22,25,28,28,23,19,16,12,15,10,8,11,9,5,4,4,4,7,12,9,8,13,13,10,7,7,4,-2,-3,0,5,0,0,4,5,7,13,19,18,24,25,20,18,15,10,14,10,6,11,8,5,3,4,4,8,12,10,9,13,12,9,8,6,2,-5,-6,-2,7,3,2,4,4,6,14,19,16,19,20,17,13,12,10,15,10,5,10,7,5,4,6,6,9,11,11,13,10,9,9,8,3,-1,-5,-8,-6,8,5,3,4,4,6,14,18,15,16,15,14,10,11,10,16,10,6,9,7,6,6,8,9,10,10,12,14,7,7,7,6,0,-6,-6,-8,-8,9,7,4,4,5,7,12,15,16,16,13,12,9,11,11,17,9,7,9,7,10,8,10,11,8,8,13,12,6,5,3,1,-6,-11,-8,-6,-6,10,8,4,5,7,9,10,14,17,15,11,9,9,11,12,15,9,8,9,8,14,11,11,11,7,6,12,9,5,3,0,-4,-15,-19,-12,-6,-4,12,9,5,5,7,10,12,14,15,13,10,7,9,11,11,11,10,11,10,10,21,13,9,7,5,5,8,5,5,4,-1,-13,-29,-30,-21,-10,-4,12,10,6,6,7,11,13,14,14,12,10,6,9,10,9,6,10,13,11,13,24,14,6,4,3,4,4,2,4,4,-2,-20,-38,-39,-28,-12,-4,12,11,8,7,7,11,12,13,11,11,10,7,9,7,7,5,10,13,10,11,17,9,3,2,1,4,2,3,3,3,-1,-20,-38,-42,-29,-8,0,11,11,10,7,7,11,12,10,8,10,10,8,9,5,6,4,9,12,8,9,8,2,0,0,0,4,2,4,2,3,0,-16,-31,-38,-26,-3,4],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
