###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    Shape(
      appearance=Appearance(
        material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
        texture=ImageTexture(url=['../../images/5/singapore22-14.jpg'],repeatS=False,repeatT=False)),
      geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.4043609355158675,103.79091847780627,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=36,xSpacing=4.103724E-4,zDimension=22,zSpacing=4.1579583E-4,height=[39,38,37,36,36,39,43,43,45,45,44,42,39,41,43,42,39,36,33,32,31,31,32,34,35,36,36,36,37,38,39,39,39,37,30,23,38,36,34,35,36,39,43,43,44,44,43,41,39,39,41,41,42,40,36,34,32,32,32,34,35,36,36,36,38,39,39,39,39,37,30,23,37,35,33,34,36,39,43,42,41,42,42,40,39,39,39,41,43,41,39,36,33,33,33,33,35,36,36,37,39,40,40,39,39,37,31,24,37,35,33,34,36,37,39,38,36,38,40,39,39,39,39,40,41,41,39,37,35,34,33,33,35,37,38,39,41,42,40,39,39,38,32,26,37,35,33,35,37,37,36,35,34,36,38,39,39,40,39,39,40,41,41,39,36,34,33,34,35,37,39,41,43,44,41,39,40,39,33,28,37,35,34,36,38,37,36,36,35,37,38,39,40,40,39,40,41,42,42,40,36,35,34,35,36,38,40,42,46,47,43,41,41,40,35,30,37,36,34,36,38,38,36,36,36,38,39,40,41,41,41,41,42,43,43,41,37,36,36,36,37,39,41,45,48,49,46,43,43,41,37,32,36,36,35,35,36,37,38,38,38,39,39,41,43,45,47,46,45,45,46,44,40,39,39,40,41,44,46,48,50,50,47,45,44,43,38,33,35,35,34,34,34,36,38,38,39,39,39,43,45,49,53,51,47,47,48,46,42,41,40,41,44,47,49,50,50,49,48,46,46,44,38,34,32,31,30,30,30,33,36,37,38,38,39,44,50,53,56,54,50,49,49,46,42,40,39,40,43,46,48,49,48,48,48,47,45,44,38,34,30,29,28,28,28,32,36,36,37,38,39,45,53,56,58,57,53,51,50,47,43,40,39,40,43,45,47,48,47,46,47,47,44,42,38,34,30,29,27,30,31,34,37,37,36,37,38,45,52,55,57,57,56,55,53,49,43,41,40,42,45,47,47,47,46,46,45,45,42,39,37,35,30,29,27,31,35,37,38,37,36,37,39,44,51,54,56,57,58,57,55,51,44,41,42,44,47,49,48,46,45,45,44,43,40,38,37,35,36,34,32,35,38,38,38,38,38,39,41,44,49,51,53,54,54,54,53,51,45,44,46,48,50,50,48,46,44,43,42,41,39,37,38,38,41,39,37,39,41,40,39,39,39,40,43,45,48,49,51,51,52,52,52,51,47,47,49,52,52,51,48,45,43,42,41,40,38,37,39,41,44,41,39,41,43,42,40,39,37,40,44,47,50,51,52,53,54,54,53,51,48,49,51,52,53,51,47,43,41,39,39,39,40,40,42,43,46,42,39,42,45,43,41,39,36,40,45,48,51,52,53,54,56,55,53,52,50,51,52,53,52,49,46,42,39,37,37,37,40,43,43,44,45,41,38,42,45,44,42,39,36,39,43,47,50,53,55,57,58,57,55,54,53,53,53,52,50,48,45,41,37,34,32,32,35,39,41,43,44,41,38,41,45,45,44,40,36,38,41,45,48,53,57,59,61,60,57,56,56,55,54,52,49,47,44,40,36,32,28,27,32,36,39,41,42,40,39,41,44,44,44,42,40,41,42,44,48,52,57,59,61,61,58,58,58,57,55,53,52,49,47,44,40,36,32,30,32,34,37,38,42,40,39,41,43,44,45,45,45,44,43,44,47,52,57,59,61,61,59,59,59,58,56,54,53,52,50,47,43,39,35,33,33,34,35,36,47,46,45,45,46,46,46,46,47,46,44,44,46,49,53,56,57,57,57,56,56,55,53,52,52,51,50,47,42,38,35,34,36,37,37,37],
        geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])))])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
