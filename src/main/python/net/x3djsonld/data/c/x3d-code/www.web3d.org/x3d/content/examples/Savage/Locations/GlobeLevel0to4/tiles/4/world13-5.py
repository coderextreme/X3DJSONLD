###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    Shape(
      appearance=Appearance(
        material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0,0.05,0)),
        texture=ImageTexture(url=['../../images/4/world13-5.jpg'],repeatS=False,repeatT=False)),
      geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(56.20833769188965,-67.54166331393873,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=22,xSpacing=1.0714287,zDimension=24,zSpacing=0.48913044,height=[578,578,471,472,500,454,334,376,5,74,-63,-203,-167,-218,-1019,-2859,-3401,-3620,-3797,-3379,-3504,-3449,602,503,503,510,519,456,150,274,290,227,-12,-418,-188,-248,-1645,-2742,-3288,-3628,-3856,-3520,-3364,-3322,579,471,503,531,506,621,203,42,-1,-82,-166,-316,-299,-1232,-2653,-2817,-3276,-3631,-3776,-3494,-3331,-3535,477,503,464,426,500,528,433,1,-142,-104,-236,-1908,-2562,-2889,-3250,-3404,-3542,-3702,-3623,-3384,-3058,-3321,337,445,451,363,538,406,3,-38,-438,-428,-1704,-2688,-3051,-3209,-3381,-3564,-3661,-3735,-3666,-3500,-3452,-3398,281,356,437,496,491,416,1,-343,-140,-1332,-2114,-2726,-3079,-3269,-3523,-3543,-3628,-3687,-3663,-3577,-3541,-3515,231,257,357,573,569,564,446,-199,-199,-1752,-2420,-2849,-3162,-3353,-3466,-3534,-3610,-3625,-3589,-3497,-3601,-3586,266,232,436,621,546,216,0,-141,-824,-2328,-2757,-2971,-3186,-3386,-3484,-3548,-3608,-3582,-3439,-3051,-3008,-3066,132,150,350,481,691,23,-207,-191,-1659,-2568,-2982,-3066,-3354,-3442,-3501,-3544,-3529,-3538,-3461,-3198,-2811,-2109,-12,-4,326,491,202,-135,-132,-284,-1763,-2673,-3003,-3179,-3340,-3397,-3373,-3511,-3530,-3502,-3468,-2910,-2587,-2341,-207,-111,4,826,257,-131,-160,-252,-2255,-2872,-3075,-3215,-3325,-3358,-3444,-3495,-3472,-3310,-3294,-2911,-2558,-2264,-93,-117,-44,672,-71,-139,-184,-997,-2333,-2769,-3000,-3132,-3149,-3331,-3419,-3425,-3442,-3354,-3212,-2856,-1169,-128,-5,-46,-162,323,-199,-177,-250,-1669,-2444,-2756,-2930,-3176,-3213,-3314,-3339,-3357,-3212,-2962,-2825,-1215,-61,-3,-10,-127,-342,-15,-444,-434,-411,-1744,-2160,-2635,-2882,-3005,-3026,-3119,-3253,-3161,-3028,-2748,-210,-213,-329,140,-406,-666,-552,-494,-548,-623,-567,-1823,-2364,-2706,-2833,-2835,-2907,-3010,-3160,-3067,-2743,-87,-16,570,6,28,-273,-232,-74,110,-505,-618,-570,-1389,-2268,-2556,-2705,-2757,-2800,-2883,-2873,-2708,-403,-4,-36,1309,1679,1456,-35,47,-29,-264,-396,-446,-467,-1209,-2035,-2467,-2554,-2588,-2735,-2764,-2679,-2344,-24,-1,1036,1537,2171,2330,404,762,-149,-3,-150,-240,-555,-1157,-1147,-2082,-2435,-2479,-2475,-2712,-2103,-628,-4,638,1602,2011,2386,2436,-2,-2,170,-47,-136,-254,-307,-763,-1018,-1618,-2164,-2244,-1695,-1446,-1880,-33,1,856,1861,2225,2531,2623,189,743,648,523,-225,-269,-242,-570,-755,-1308,-1608,-1194,-1119,-1088,-93,-7,218,1524,1800,2208,2490,2636,579,674,760,-44,-247,-153,-240,-324,-546,-986,-825,-881,-1136,-709,-73,-5,1070,820,1749,2122,2469,2591,574,609,53,-237,-384,-335,-317,-354,-409,-735,-812,-901,-318,-118,-298,161,415,864,1508,2024,2506,2590,472,121,-611,-155,162,-182,-265,-312,-442,-613,-707,-811,-389,-74,-30,305,609,1099,1446,1991,2456,2588,401,0,-611,152,60,-162,-263,-320,-438,-589,-670,-777,-253,-73,-88,294,613,1086,1441,2019,2445,2587],
        geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(0.0,0.0,-6378137.0),geoSystem=['GDC'])))])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
