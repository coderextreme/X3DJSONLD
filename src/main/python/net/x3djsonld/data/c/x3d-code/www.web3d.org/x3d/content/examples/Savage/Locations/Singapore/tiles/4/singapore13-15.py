###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_1315',geoSystem=['GDC'],position=(1.4480194974058374,104.0350900579996,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.4480194974058374,104.0350900579996,0.0),range=4101.627,child1Url=['../../tiles/5/singapore26-30.x3d'],child2Url=['../../tiles/5/singapore26-31.x3d'],child3Url=['../../tiles/5/singapore27-30.x3d'],child4Url=['../../tiles/5/singapore27-31.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore13-15.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.4392877850278434,104.02072702387058,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=36,xSpacing=8.207448E-4,zDimension=44,zSpacing=4.0612617E-4,height=[0,0,0,3,4,8,11,12,5,1,0,0,3,4,4,3,3,2,3,5,5,6,10,13,12,11,10,10,10,10,8,6,5,5,5,5,2,0,0,2,4,6,9,11,9,3,0,0,2,3,4,4,3,3,4,5,5,5,8,11,13,11,10,10,10,10,9,7,6,5,5,5,3,0,-1,0,3,4,8,11,12,5,1,0,0,3,4,4,3,3,5,6,5,5,6,10,13,12,11,10,10,10,10,8,7,5,5,5,3,2,0,0,2,3,6,9,11,9,3,0,0,2,3,4,4,5,7,7,5,5,5,8,11,13,11,10,10,10,10,9,7,6,5,5,3,3,0,-1,0,3,4,8,11,12,5,1,0,0,3,4,4,7,8,7,6,5,5,6,10,13,12,11,10,10,10,10,8,7,5,5,3,3,2,0,0,2,4,6,9,11,9,3,0,0,2,4,3,6,9,8,7,5,5,5,8,11,13,11,10,10,10,10,9,7,6,5,3,3,3,0,-1,0,3,4,8,11,12,6,1,0,0,3,3,6,8,8,7,6,5,5,6,10,13,12,11,10,10,10,10,8,6,5,4,3,3,2,0,0,2,4,6,9,11,9,3,0,0,0,0,3,7,9,8,7,5,5,5,8,11,13,11,10,10,10,10,9,7,6,5,3,3,3,0,-1,0,3,4,8,11,12,6,1,0,-1,-1,0,6,8,8,7,6,5,5,6,10,13,12,11,10,10,10,10,8,6,6,4,3,3,2,0,0,1,4,6,9,11,9,2,0,-1,-1,0,3,7,9,8,7,5,5,5,8,11,13,11,10,10,10,10,9,7,8,5,3,3,3,0,-1,0,3,4,8,11,11,4,0,-2,-1,-1,0,6,8,8,7,6,5,5,6,10,12,12,11,10,10,10,10,8,8,6,4,3,3,2,0,0,1,4,6,9,10,5,0,-1,-2,-1,0,3,7,9,8,7,5,5,5,8,11,13,11,10,10,10,10,9,8,8,5,3,3,3,0,0,0,3,4,7,7,6,1,0,-2,-1,-1,0,5,8,8,7,6,5,5,6,10,12,12,11,10,10,10,10,8,8,6,4,3,3,2,0,0,2,4,5,4,4,3,0,-1,-2,-1,0,3,7,9,8,7,5,5,5,8,11,13,11,10,10,10,10,8,8,8,5,3,3,3,0,0,0,3,3,3,3,5,1,0,-2,-1,-1,0,6,8,8,7,6,5,5,6,10,12,12,11,10,10,10,8,8,8,6,4,3,3,2,0,0,1,1,1,2,4,3,0,-1,-2,-1,0,3,7,9,8,7,5,5,5,8,11,13,11,10,10,10,8,8,8,8,5,3,3,3,0,0,0,0,1,2,3,5,1,0,-2,-1,-1,0,5,9,8,7,6,5,5,6,10,13,12,11,10,10,8,8,8,8,6,4,3,3,2,0,0,0,0,1,2,4,3,0,-1,-2,-1,0,3,7,9,8,7,5,5,5,8,11,13,11,10,10,8,8,8,8,7,5,3,3,3,3,2,0,0,0,2,3,4,1,0,-2,-1,-1,0,5,9,8,7,6,5,5,6,10,13,12,11,10,8,8,8,8,8,6,4,2,2,3,3,1,0,0,1,2,4,3,0,-1,-2,-1,0,3,7,9,8,7,5,5,5,8,11,13,11,10,8,8,8,8,8,7,5,2,0,1,3,2,0,0,0,2,3,4,1,0,-2,-1,0,0,5,9,8,7,6,5,5,6,10,13,12,10,8,8,8,8,8,8,6,1,0,0,3,3,1,0,0,1,2,4,3,0,-1,-1,-1,0,3,7,8,7,6,5,5,5,8,12,12,11,10,8,8,8,8,8,7,1,0,0,1,3,2,0,0,0,2,3,4,1,0,-2,-1,0,0,5,9,8,7,6,5,5,6,9,13,12,12,9,8,8,8,8,7,0,0,0,0,3,3,1,0,0,1,2,4,3,0,-1,-1,-1,0,3,7,8,7,6,5,5,5,8,12,12,14,10,8,8,8,8,4,0,0,0,0,1,3,2,0,0,0,1,3,4,1,0,-2,-1,0,0,5,9,8,7,6,5,5,6,10,13,15,12,9,8,8,8,0,0,0,0,0,0,3,3,1,0,0,1,2,4,3,0,-1,-1,0,0,3,7,8,7,6,5,5,5,8,12,15,13,10,8,8,8,-3,-1,0,0,0,0,1,3,2,0,0,0,1,3,4,1,0,-2,-1,0,0,5,9,8,7,6,5,5,6,10,15,14,11,8,8,8,-5,-4,0,0,0,0,0,3,3,1,0,0,1,2,4,3,0,-1,-1,0,0,3,7,8,7,6,5,5,5,8,15,14,13,9,8,8,-5,-6,-2,0,0,0,0,1,3,2,0,0,0,2,3,4,1,0,-2,-1,0,0,5,8,8,7,6,5,5,6,15,14,13,10,8,7,-5,-7,-3,0,0,0,0,0,3,3,1,0,0,1,2,4,3,0,-1,-1,0,0,3,7,8,7,6,5,5,5,14,14,12,9,8,3,-5,-7,-6,-1,0,0,0,0,1,3,2,0,0,0,2,3,4,1,0,-2,-1,0,0,5,8,8,7,6,5,5,14,13,11,9,8,1,-6,-7,-7,-3,0,0,0,0,0,3,3,1,0,0,1,2,4,3,0,-2,-1,0,0,3,7,8,7,6,5,5,14,12,10,8,8,1,-5,-7,-7,-6,-2,0,0,0,0,1,3,2,0,0,0,1,3,4,1,0,-2,-1,0,0,5,8,8,7,6,5,13,11,9,8,8,2,-5,-6,-7,-7,-3,0,0,0,0,0,3,3,1,0,0,1,2,4,3,0,-2,-1,0,0,3,8,8,7,6,5,12,10,8,8,7,4,-5,-6,-7,-7,-6,-2,0,0,0,0,1,3,2,0,0,0,1,3,4,1,0,-2,-1,0,1,5,8,8,7,6,11,9,8,8,7,5,-5,-6,-6,-7,-7,-3,0,0,0,0,0,3,3,1,0,0,1,2,4,3,0,-2,-1,0,0,4,8,8,7,6,10,8,8,7,6,6,-4,-6,-6,-7,-7,-6,-2,0,0,0,0,1,3,2,0,0,0,1,3,4,1,0,-2,-1,0,2,6,8,8,7,9,8,8,7,6,6,-4,-5,-6,-6,-7,-7,-3,0,0,0,0,0,3,3,1,0,0,1,2,4,3,0,-1,-1,0,1,5,8,9,7,8,8,7,6,6,6,-4,-5,-6,-6,-7,-7,-6,-2,0,0,0,0,1,3,2,0,0,0,1,3,4,1,0,-2,-1,0,5,7,9,10,8,8,7,6,6,6,-4,-5,-5,-6,-6,-7,-7,-3,0,0,0,0,0,3,3,1,0,0,1,2,4,3,0,-2,-1,0,5,7,10,13,8,7,6,6,6,6,-2,-4,-5,-6,-6,-7,-7,-6,-2,0,0,0,0,1,3,2,0,0,0,1,3,4,1,-1,-1,3,8,10,10,12,8,7,6,6,6,6,-1,-4,-5,-5,-6,-6,-7,-7,-4,0,0,0,0,0,3,3,1,0,0,1,2,4,4,0,-1,5,10,12,11,10,7,6,6,6,6,6,0,-3,-5,-5,-6,-6,-7,-7,-6,-2,0,0,0,0,1,3,2,0,0,1,1,3,4,2,1,9,12,12,9,9,7,6,6,6,6,6,0,-3,-4,-5,-5,-6,-6,-7,-7,-3,0,0,0,0,0,3,3,1,0,0,1,2,4,5,6,12,14,12,7,8],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
