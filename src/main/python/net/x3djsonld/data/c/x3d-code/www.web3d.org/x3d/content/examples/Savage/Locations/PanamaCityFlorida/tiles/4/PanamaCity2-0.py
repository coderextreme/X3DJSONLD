###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.0',
  Scene=Scene(
    children=[
    Group(
      children=[
      LOD(center=(27056.14,0.0,90187.14),range=[54112.28],
        children=[
        Group(
          children=[
          Inline(url=['../../tiles/5/PanamaCity2-0.x3d']),
          Inline(url=['../../tiles/5/PanamaCity2-1.x3d'])]),
        Group(
          children=[
          Transform(translation=(0.0,0.0,72149.71),
            children=[
            Shape(
              appearance=Appearance(
                material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0,0.05,0)),
                texture=ImageTexture(url=['../../images/4/PanamaCity2-0.jpg'],repeatS=False,repeatT=False)),
              geometry=ElevationGrid(xDimension=22,xSpacing=2576.7754,zDimension=22,zSpacing=1717.8502,height=[-29,-30,-26,-26,-28,-32,-29,-25,-26,-27,-31,-33,-37,-31,-33,-32,-32,-30,-32,-33,-33,-32,-30,-29,-30,-31,-32,-28,-23,-26,-28,-30,-32,-35,-35,-35,-38,-38,-37,-39,-38,-39,-37,-36,-28,-31,-29,-31,-27,-23,-25,-27,-33,-30,-34,-35,-39,-44,-47,-49,-49,-45,-45,-42,-42,-41,-28,-29,-29,-28,-25,-27,-28,-30,-31,-33,-39,-44,-51,-62,-84,-82,-76,-68,-52,-49,-47,-45,-28,-30,-25,-27,-28,-29,-30,-33,-36,-40,-50,-75,-87,-94,-90,-86,-83,-79,-57,-54,-50,-49,-28,-26,-29,-27,-30,-31,-33,-36,-43,-52,-86,-94,-95,-94,-94,-93,-90,-85,-77,-59,-57,-56,-29,-27,-29,-29,-31,-33,-36,-43,-51,-75,-94,-97,-98,-100,-101,-100,-96,-92,-89,-65,-68,-68,-29,-29,-29,-31,-33,-36,-43,-50,-60,-75,-100,-102,-105,-107,-107,-105,-103,-98,-95,-79,-74,-75,-38,-30,-30,-33,-36,-43,-49,-55,-67,-72,-109,-110,-114,-114,-113,-111,-107,-104,-99,-95,-82,-78,-34,-33,-32,-36,-41,-47,-51,-60,-68,-75,-119,-120,-122,-121,-119,-116,-112,-109,-105,-102,-99,-98,-31,-34,-34,-40,-46,-50,-53,-63,-69,-78,-130,-129,-130,-125,-124,-121,-117,-114,-110,-107,-103,-103,-32,-36,-41,-46,-50,-52,-54,-66,-73,-84,-145,-139,-137,-130,-129,-127,-122,-119,-115,-112,-109,-108,-36,-41,-48,-54,-58,-59,-60,-75,-79,-125,-153,-145,-141,-137,-134,-131,-126,-122,-118,-116,-111,-111,-43,-49,-53,-55,-58,-63,-68,-117,-136,-152,-152,-150,-145,-142,-138,-135,-131,-126,-122,-118,-115,-114,-54,-55,-57,-58,-62,-65,-92,-137,-155,-157,-156,-153,-148,-146,-142,-140,-134,-130,-126,-122,-119,-118,-55,-66,-74,-77,-89,-101,-132,-153,-160,-161,-159,-157,-150,-149,-145,-143,-138,-134,-129,-125,-122,-121,-65,-87,-91,-105,-118,-137,-155,-163,-164,-164,-163,-160,-154,-152,-149,-146,-141,-137,-132,-128,-125,-124,-79,-76,-85,-120,-136,-153,-166,-170,-168,-168,-166,-163,-158,-157,-152,-151,-144,-140,-135,-131,-128,-127,-77,-75,-82,-132,-152,-168,-174,-174,-173,-172,-170,-167,-161,-160,-155,-153,-147,-143,-138,-134,-131,-130,-77,-75,-84,-137,-165,-177,-181,-180,-178,-176,-174,-170,-165,-163,-158,-155,-151,-146,-141,-137,-134,-133,-80,-77,-100,-141,-172,-184,-186,-184,-182,-180,-178,-173,-169,-165,-161,-158,-153,-148,-144,-140,-137,-136,-81,-77,-101,-141,-172,-184,-186,-184,-182,-180,-178,-173,-169,-165,-161,-158,-154,-149,-145,-141,-137,-136]))])])])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
