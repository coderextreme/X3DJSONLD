###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    Shape(
      appearance=Appearance(
        material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
        texture=ImageTexture(url=['../../images/5/singapore19-14.jpg'],repeatS=False,repeatT=False)),
      geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.3781657983818856,103.79091847780627,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=36,xSpacing=4.103724E-4,zDimension=22,zSpacing=4.1579583E-4,height=[69,68,68,72,76,71,65,61,56,60,64,65,64,61,57,54,52,52,52,54,58,60,63,61,54,49,46,45,45,46,50,51,47,43,40,37,74,74,73,75,76,70,65,61,56,60,66,67,67,62,57,53,49,49,48,51,55,58,61,59,54,50,48,46,45,44,47,48,45,42,39,36,80,79,78,76,73,68,63,60,56,60,65,65,64,60,56,52,48,46,44,46,50,53,55,55,52,50,49,47,45,43,43,43,42,40,37,35,82,82,82,77,73,69,65,61,57,60,64,64,62,59,57,53,48,45,42,42,45,48,50,51,51,50,50,48,46,43,41,39,39,38,36,35,80,80,80,78,77,73,71,65,61,62,64,64,63,61,59,56,52,49,44,43,43,44,45,47,49,50,51,51,49,46,42,39,38,37,35,35,76,77,78,78,79,77,75,69,63,64,66,66,66,65,64,61,57,52,47,43,42,42,42,44,47,50,52,52,51,48,42,39,37,35,34,34,69,73,76,78,80,78,75,70,65,67,70,71,73,73,74,69,63,56,49,45,43,42,40,42,45,48,50,51,50,48,43,39,37,34,32,31,65,70,74,76,79,77,74,71,67,69,73,75,77,79,81,76,68,60,52,48,45,43,40,41,43,45,48,49,48,46,42,39,36,33,31,30,66,68,71,73,75,75,73,70,67,69,73,75,76,79,81,77,71,64,56,53,51,48,44,42,41,42,43,44,43,41,40,37,35,32,30,30,67,68,69,71,73,72,72,69,66,68,71,72,73,75,78,76,72,67,60,57,56,53,47,43,40,39,39,39,38,38,37,36,34,32,30,30,68,67,66,69,71,71,71,68,65,65,66,65,66,68,71,71,69,66,63,61,59,55,49,44,40,37,37,36,36,36,35,35,34,32,31,31,68,65,64,67,69,70,71,67,63,61,60,59,59,61,63,64,65,64,64,62,60,56,50,45,40,37,36,35,35,35,35,35,34,33,32,31,66,64,62,66,69,70,72,66,60,58,55,54,54,55,56,58,59,60,60,59,58,54,50,46,42,39,37,36,36,36,36,35,35,34,33,32,63,62,62,66,70,71,72,66,59,55,51,50,49,50,51,53,54,56,57,57,56,54,51,47,44,41,39,37,37,37,37,36,35,34,33,33,60,61,63,68,72,73,73,66,59,55,50,47,46,47,49,51,53,55,57,59,60,58,54,50,46,43,40,39,39,38,38,37,36,35,34,32,57,60,64,69,74,73,72,66,60,55,49,46,44,47,51,53,55,57,59,63,66,65,59,54,49,45,43,41,41,41,40,38,38,37,34,32,55,60,64,69,73,71,68,65,61,56,51,49,48,53,58,60,61,62,64,68,73,72,67,60,54,51,49,48,48,46,44,42,41,38,35,33,54,59,64,67,70,67,64,62,60,56,53,53,53,59,65,68,69,69,70,74,79,79,74,68,61,57,56,56,54,52,49,45,43,40,36,33,55,59,63,63,63,61,58,58,57,55,52,53,54,61,68,72,74,73,73,75,79,80,78,74,69,66,65,63,60,56,51,47,44,42,37,34,58,60,63,60,58,56,54,54,54,52,50,52,54,60,68,73,76,75,73,74,76,78,78,78,76,74,73,70,65,59,53,48,46,42,38,34,62,63,64,61,57,56,54,53,52,50,48,50,52,58,66,70,73,72,70,70,72,74,78,80,80,80,78,74,68,61,54,49,46,43,39,35,66,67,67,63,60,59,58,55,52,48,45,47,49,56,62,65,67,66,65,66,68,71,76,80,82,82,79,75,69,62,55,50,46,42,40,37],
        geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])))])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
