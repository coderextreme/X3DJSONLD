###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_70',geoSystem=['GDC'],position=(1.3432389488699097,103.60419903412902,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.3432389488699097,103.60419903412902,0.0),range=4101.627,child1Url=['../../tiles/5/singapore14-0.x3d'],child2Url=['../../tiles/5/singapore14-1.x3d'],child3Url=['../../tiles/5/singapore15-0.x3d'],child4Url=['../../tiles/5/singapore15-1.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore7-0.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.3345072364919157,103.589836,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[9,6,4,3,5,5,5,5,5,5,6,6,5,4,0,-7,-8,-9,-11,-12,-11,0,9,9,8,10,5,8,10,6,-3,-5,2,13,16,13,12,9,6,4,3,5,5,5,5,5,5,5,6,5,4,-1,-8,-9,-10,-11,-12,-12,1,9,8,6,11,11,10,10,8,3,2,10,16,16,13,12,8,6,4,4,5,5,5,5,5,5,5,6,6,4,-2,-9,-10,-11,-12,-12,-9,3,9,6,5,10,15,12,11,11,9,10,16,18,16,13,12,8,6,5,4,5,5,5,5,5,5,5,5,6,4,-3,-10,-11,-12,-12,-11,-4,6,7,5,6,10,15,14,13,14,15,16,20,19,16,13,12,8,6,5,5,5,5,5,5,5,5,6,5,6,4,-4,-10,-11,-12,-12,-9,0,8,6,5,7,10,14,15,14,16,18,20,23,21,17,13,11,7,6,5,5,5,5,5,5,5,5,5,5,5,3,-5,-11,-12,-12,-11,-5,4,7,5,5,7,10,13,15,15,16,18,22,23,23,18,14,11,7,5,5,5,5,5,5,5,5,5,5,6,5,2,-7,-11,-12,-12,-9,0,7,6,5,5,7,10,13,14,15,16,19,22,24,24,20,14,10,6,5,5,5,5,5,5,5,5,5,5,5,5,0,-9,-11,-12,-11,-6,4,7,5,5,5,7,10,13,14,15,15,20,23,24,24,22,15,8,5,5,5,5,5,5,5,5,5,5,5,5,5,0,-9,-9,-9,-8,-1,7,6,5,5,5,7,10,13,14,15,15,20,23,24,24,23,15,7,4,4,4,4,4,4,4,4,4,4,4,4,5,0,-4,-4,-4,-2,3,7,5,5,5,5,7,10,13,15,15,16,20,23,24,24,24,15,6,4,4,4,4,4,4,4,4,4,4,4,4,5,2,1,1,1,3,8,8,5,5,5,5,8,11,14,15,15,16,19,22,24,24,24,15,6,4,4,3,3,3,3,3,3,4,4,4,4,5,5,5,6,7,9,12,10,7,6,5,5,9,12,14,15,15,16,18,21,23,24,24,15,7,4,4,3,3,3,3,3,3,4,4,4,4,5,6,8,10,11,13,14,13,10,7,5,5,9,13,15,15,15,16,18,21,23,24,24,16,8,4,4,3,3,3,3,3,3,4,4,4,4,5,7,9,11,13,14,15,14,13,8,5,5,9,13,15,15,15,16,18,20,22,23,24,18,11,4,4,3,3,3,3,3,4,4,4,4,4,5,7,9,12,13,15,15,15,15,9,5,5,8,13,15,15,15,16,18,20,22,23,24,19,14,5,4,4,3,3,3,3,4,4,4,4,4,5,7,10,12,14,15,16,16,13,7,5,5,6,13,15,15,15,16,18,20,22,23,23,21,18,5,4,4,3,3,3,4,5,5,5,4,4,5,7,10,13,14,15,16,15,10,5,5,5,6,13,15,15,15,16,18,20,22,23,23,23,21,5,4,4,3,3,3,4,5,5,5,4,4,5,7,10,13,15,16,16,13,8,5,5,5,7,14,15,15,15,16,18,20,21,22,23,23,22,5,4,4,3,3,4,5,5,5,6,5,4,5,7,11,13,15,16,16,11,6,5,5,5,10,16,16,16,16,16,18,19,21,22,23,23,23,5,4,4,3,4,4,5,5,5,6,6,5,5,7,11,14,15,16,14,9,6,5,5,7,13,17,17,17,17,17,18,19,21,22,22,23,23,5,4,4,4,5,5,5,5,5,6,7,6,5,7,11,14,16,16,12,8,7,5,5,10,15,17,18,18,19,18,18,19,20,21,22,23,23,6,4,4,5,6,6,5,5,5,6,8,7,5,7,12,15,16,14,11,8,7,5,7,13,17,18,18,19,20,19,18,18,15,18,21,22,23,6,5,5,7,7,6,5,5,5,6,8,9,6,6,12,15,16,12,10,9,7,5,10,15,17,18,19,19,19,19,19,15,10,15,20,22,23,7,8,8,9,7,5,5,5,5,6,8,10,8,6,12,15,14,10,10,10,6,7,13,16,18,18,19,20,19,19,18,13,9,15,20,22,23,10,11,12,11,7,6,6,5,5,6,9,11,9,8,12,15,12,10,10,11,6,10,16,17,18,19,20,19,19,19,15,10,11,18,21,22,23,13,14,14,12,8,8,9,7,6,7,10,11,9,9,11,14,12,10,11,12,8,13,17,17,18,19,20,19,19,18,12,9,14,20,22,22,23,16,16,15,12,9,12,12,10,8,9,10,10,9,9,11,12,12,12,12,12,11,15,16,18,19,20,19,19,19,15,9,11,17,21,22,23,23,17,17,16,13,12,15,15,12,9,9,10,9,9,10,10,11,12,13,14,13,13,15,16,18,19,20,19,19,18,12,9,13,20,22,22,23,23,17,16,15,14,14,17,17,13,8,7,8,8,9,10,9,9,10,13,14,14,15,13,17,18,19,19,19,19,15,9,10,16,21,22,23,23,22,15,14,13,14,15,16,15,12,8,7,8,8,10,11,10,8,9,12,13,13,15,13,16,18,19,18,19,18,12,9,12,19,21,22,23,22,21,12,11,11,12,13,12,11,10,8,7,8,9,11,11,11,10,8,11,11,12,14,14,14,19,18,18,19,15,9,10,15,20,21,23,23,21,19,9,9,9,11,12,10,9,9,8,8,8,10,11,12,13,11,8,10,10,10,13,13,13,17,16,18,18,12,8,12,18,20,22,23,22,19,17,8,7,9,12,12,10,10,10,9,9,9,11,12,12,14,13,8,9,9,9,10,11,15,14,15,18,15,9,9,14,19,21,22,23,21,17,15,7,7,10,13,12,11,11,10,9,9,10,11,12,13,14,13,9,10,9,9,9,10,14,13,15,17,13,8,11,16,20,22,23,22,19,15,14,8,9,12,14,12,11,11,11,9,9,11,11,12,12,13,12,10,10,11,9,9,9,13,14,14,15,9,9,13,17,21,23,24,21,17,14,14,8,10,13,14,12,11,10,11,10,9,11,11,11,11,11,11,11,11,12,9,10,9,12,13,14,14,9,10,14,18,22,23,23,20,16,14,14,8,10,14,14,12,10,9,10,10,10,12,11,10,11,10,10,10,12,12,11,11,10,11,11,14,13,11,13,14,19,23,24,22,18,14,14,13,8,10,14,13,11,9,9,10,10,10,11,10,9,10,10,9,10,13,13,12,12,11,10,9,13,13,12,13,14,21,25,24,21,16,14,13,12,8,10,13,12,9,9,8,8,9,8,9,9,8,9,10,9,10,14,13,12,12,10,10,8,10,13,14,11,14,24,26,23,18,14,14,11,9,8,9,12,11,8,9,8,7,8,8,8,8,8,9,10,9,9,14,13,12,12,10,10,8,9,13,14,10,15,26,26,22,16,14,13,10,7,9,10,12,11,9,9,8,8,9,9,8,8,9,9,9,8,10,12,12,11,12,10,10,9,9,11,14,13,16,24,23,18,14,14,11,8,6,9,11,12,11,10,10,9,9,10,11,9,9,10,9,9,8,10,11,11,11,12,11,11,10,9,10,13,14,16,21,20,16,14,13,10,6,5,10,12,13,10,9,10,10,10,11,13,11,10,11,10,9,8,10,11,10,10,12,11,11,10,10,9,10,12,14,16,16,14,14,12,8,5,5,11,13,12,10,9,10,10,10,12,15,13,11,11,10,9,8,10,10,9,10,12,12,11,10,11,9,7,10,12,12,13,14,13,10,7,5,7],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
