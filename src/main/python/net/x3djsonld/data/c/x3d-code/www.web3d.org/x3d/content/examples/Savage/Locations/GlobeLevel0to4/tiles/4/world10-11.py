###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    Shape(
      appearance=Appearance(
        material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0,0.05,0)),
        texture=ImageTexture(url=['../../images/4/world10-11.jpg'],repeatS=False,repeatT=False)),
      geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(22.458336686061273,67.4583407093748,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=22,xSpacing=1.0714287,zDimension=24,zSpacing=0.48913044,height=[-2393,-2888,-1931,-37,25,-85,26,675,246,266,276,273,350,367,301,383,109,151,20,-6,-69,-305,-2203,-1598,-28,-17,263,33,31,232,269,260,438,407,281,465,281,274,130,122,75,-3,-18,-37,-2122,-1800,-83,78,116,8,20,427,283,320,432,733,447,504,258,241,213,165,449,15,4,4,-1566,-197,-3,33,167,14,33,251,251,220,351,606,533,717,503,337,305,215,238,73,4,2,-1191,-131,-6,-6,64,8,59,379,529,493,338,334,569,536,912,556,479,477,189,64,12,5,-204,-19,6,118,3,31,107,253,512,485,482,389,535,631,539,514,964,691,306,103,12,12,-100,2,3,44,4,62,199,177,448,409,491,511,339,370,439,392,420,454,257,109,17,14,-80,6,3,10,7,120,261,378,402,386,502,464,485,501,334,330,189,421,338,153,22,15,-4,38,11,55,76,118,393,470,496,269,463,338,310,420,338,281,121,108,217,91,24,17,1,251,19,35,191,77,234,521,357,236,437,260,203,131,88,82,74,60,38,33,28,26,34,353,21,32,206,95,190,650,326,240,398,191,141,119,102,82,66,55,45,45,41,40,664,43,28,55,218,204,222,388,340,253,182,159,135,122,105,87,71,65,58,65,70,60,1209,40,45,65,266,234,285,314,383,318,262,150,144,124,108,86,84,74,98,213,407,173,1894,42,70,84,161,219,299,298,459,647,179,166,144,134,109,92,103,498,1177,452,959,2345,1308,45,64,70,127,143,267,316,392,315,186,172,150,144,126,465,891,715,1873,5165,5560,4768,1556,59,61,75,101,114,184,243,287,251,200,180,172,150,543,2276,1703,3917,4819,4374,4628,5055,2182,83,279,126,92,116,156,205,220,219,218,212,197,269,1044,4913,4738,5222,4862,4976,5404,4764,1790,156,684,672,100,124,152,177,204,225,237,236,1346,1195,1092,5434,4852,4724,5319,4299,4108,3830,1742,560,1173,984,115,126,157,181,213,234,267,1242,1604,2395,2780,5411,5085,5175,5713,5128,5361,4914,1460,2900,1321,1389,126,138,157,187,217,251,296,1277,3499,4382,5242,4672,5646,5410,5577,5633,5093,5189,1990,1862,1505,1401,142,139,168,187,222,274,2517,2876,5626,4826,5476,5348,5355,5111,5015,4740,4929,5149,1435,2266,1935,1831,156,166,181,202,215,335,1304,3664,4593,4857,5404,4777,4496,4666,5879,4791,4958,4993,1582,2017,1905,1552,172,183,184,211,247,528,3064,4097,4342,5435,5151,5409,4975,4837,4860,4620,4553,4539,1377,2101,1912,1493,179,187,188,214,253,779,4547,4214,4442,4961,4731,5754,5143,4909,4817,4608,4710,4539],
        geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(0.0,0.0,-6378137.0),geoSystem=['GDC'])))])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
