###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_012',geoSystem=['GDC'],position=(1.220994975577994,103.94891185322548,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.220994975577994,103.94891185322548,0.0),range=4101.627,child1Url=['../../tiles/5/singapore0-24.x3d'],child2Url=['../../tiles/5/singapore0-25.x3d'],child3Url=['../../tiles/5/singapore1-24.x3d'],child4Url=['../../tiles/5/singapore1-25.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore0-12.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.2122632632,103.93454881909646,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[7,9,9,7,5,6,7,4,4,7,8,11,8,7,8,6,4,4,8,6,4,6,11,8,9,9,8,5,5,2,4,4,4,-2,-2,1,3,7,8,8,6,6,10,11,6,5,6,8,14,10,6,8,7,4,1,9,7,3,6,12,12,7,5,4,4,6,4,5,3,0,-4,-3,2,5,7,7,6,5,6,10,12,7,6,6,8,13,10,7,10,8,3,2,9,7,4,2,10,13,8,5,4,4,7,7,6,3,-1,-6,-3,3,6,8,7,6,5,6,10,11,8,6,5,8,11,9,10,11,9,3,3,9,6,6,-1,6,14,10,6,4,3,8,9,7,4,-3,-6,-2,3,7,7,7,6,5,6,11,12,10,8,4,7,7,9,8,8,6,4,6,10,5,6,-1,5,13,9,7,7,6,10,10,9,3,-4,-6,-1,5,8,6,9,7,5,6,12,13,11,10,4,5,4,9,7,3,1,5,9,11,4,6,0,4,10,7,8,10,11,10,11,10,1,-5,-5,0,6,10,4,9,8,5,6,11,11,11,11,4,5,6,9,8,4,0,5,11,11,6,4,0,4,8,7,8,11,13,10,10,8,-2,-9,-4,1,7,9,2,8,9,7,6,8,9,11,13,5,5,8,10,9,9,2,4,11,10,9,3,2,5,7,7,7,12,13,9,9,4,-8,-12,-4,3,7,8,3,7,8,6,6,6,6,10,14,8,7,10,11,8,8,3,5,9,11,11,5,5,7,7,9,7,12,13,8,7,1,-10,-13,-4,3,6,7,4,4,6,6,6,5,4,9,13,11,10,11,10,6,6,3,7,7,11,13,8,8,9,9,10,9,11,10,5,4,-2,-11,-12,-4,2,6,8,5,5,6,6,6,5,3,8,10,10,10,11,9,5,5,4,7,6,10,13,8,9,8,9,10,10,12,8,5,3,-5,-9,-10,-3,1,5,8,8,7,8,7,6,5,4,7,7,7,10,10,8,5,4,6,7,7,7,13,7,9,7,8,9,10,13,6,6,2,-7,-7,-5,-1,0,4,7,7,7,7,6,5,6,7,7,8,7,8,8,8,6,4,7,6,7,4,11,6,7,6,7,7,8,12,5,5,1,-7,-2,0,0,1,4,7,5,7,6,5,3,6,10,8,10,8,7,7,10,9,4,7,4,6,1,8,5,4,5,6,6,4,7,4,2,0,-4,0,4,2,3,5,6,4,5,5,5,3,6,11,8,11,9,5,5,10,10,4,7,3,6,1,8,5,4,6,6,4,2,4,3,1,-1,-2,2,6,3,4,4,5,4,4,5,6,5,6,9,7,9,7,4,6,8,10,3,9,2,7,4,10,5,5,8,6,2,3,3,3,1,-2,0,2,6,3,5,4,3,4,4,5,8,7,7,7,7,8,5,4,6,6,9,4,10,3,7,6,12,6,6,9,7,3,4,2,5,2,0,0,2,5,4,5,4,2,7,5,6,9,8,8,8,9,10,4,3,7,7,7,5,10,4,4,8,12,8,8,11,9,7,6,2,7,1,2,5,4,5,4,4,4,4,8,6,7,9,9,8,8,9,9,4,4,8,6,4,6,8,6,3,9,12,9,9,12,10,8,8,2,9,2,4,8,6,5,6,5,4,5,8,7,7,8,7,7,6,5,6,6,7,8,4,3,4,5,9,7,7,10,7,9,13,11,7,9,4,10,5,6,11,8,8,8,8,5,4,9,6,7,8,8,7,5,3,4,8,9,9,3,2,5,4,10,8,5,7,6,10,12,11,5,8,5,10,7,7,11,9,8,9,10,7,4,7,2,5,10,11,9,4,3,6,10,10,11,4,5,9,7,7,7,3,5,6,10,11,8,4,5,3,9,8,9,9,6,4,9,9,7,5,7,1,4,10,13,10,3,3,7,11,10,12,4,6,11,9,6,6,2,3,7,10,10,6,4,3,2,8,8,9,7,6,3,8,9,6,6,8,4,5,8,10,8,6,6,7,8,10,9,3,4,10,10,8,5,2,2,8,9,9,4,4,4,5,6,6,8,4,10,7,8,9,6,6,9,6,6,7,8,6,7,7,5,5,9,8,4,4,8,10,10,5,3,1,8,9,7,3,4,4,7,5,5,6,1,13,10,9,8,5,6,9,6,6,8,9,7,8,9,5,4,9,7,7,8,9,8,11,6,5,3,5,8,7,4,4,5,7,6,5,4,-1,4,8,11,7,4,5,9,6,5,10,10,7,9,11,5,3,9,7,9,11,9,5,12,7,6,3,3,8,7,5,4,6,7,7,5,2,-4,-2,6,11,5,3,5,7,4,6,10,10,10,11,9,6,4,6,7,8,8,5,5,10,7,6,2,0,7,9,6,4,6,9,10,7,4,0,1,5,7,5,6,9,6,3,6,9,11,12,11,8,7,5,5,7,7,6,2,6,9,7,6,1,-3,5,11,6,4,6,11,12,9,6,4,5,4,3,5,9,12,8,4,5,6,8,10,8,8,7,7,7,8,8,8,5,8,8,5,5,0,0,4,10,4,4,7,9,8,10,6,6,10,7,2,4,8,10,9,6,5,3,7,9,6,9,7,7,8,8,9,11,7,8,7,3,4,0,2,2,9,3,5,8,7,5,10,5,8,14,10,2,3,7,9,7,6,6,4,7,9,7,9,8,7,8,6,8,9,8,7,7,2,9,6,8,3,6,1,4,7,8,8,12,8,8,12,8,4,4,8,11,4,7,8,5,6,9,7,8,8,7,7,5,8,8,8,6,6,2,11,13,13,3,4,0,3,6,8,11,13,11,7,9,6,6,5,9,13,4,8,10,7,4,6,5,7,7,5,5,4,5,8,10,5,5,3,6,9,10,1,3,1,4,6,9,9,9,9,7,6,4,5,4,8,12,5,10,12,8,3,3,3,6,6,5,3,3,3,6,11,3,4,5,2,6,6,1,2,2,5,5,9,7,5,8,7,4,3,5,2,6,11,5,8,11,10,5,3,5,9,5,3,4,2,3,7,8,3,6,7,5,5,6,1,0,1,4,6,11,10,6,7,8,7,5,7,4,6,9,6,6,9,11,7,3,7,11,5,2,5,2,3,8,6,2,9,10,8,5,7,2,0,0,2,6,13,12,8,6,9,9,7,9,6,6,8,5,5,7,8,6,3,7,10,4,3,6,2,2,6,7,4,8,9,9,5,7,3,-1,0,1,4,12,12,9,8,9,8,6,6,8,8,9,5,5,3,4,5,3,6,7,3,5,7,1,2,3,8,6,7,8,8,5,8,4,0,0,0,2,11,11,11,9,9,7,6,3,8,10,9,5,5,3,3,4,5,6,5,3,6,7,0,2,5,9,4,9,7,6,4,5,2,0,3,4,4,10,10,10,8,7,5,3,3,7,9,8,5,5,4,2,4,7,5,3,2,7,7,0,2,9,9,1,11,6,5,4,2,0,0,9,8,7,9,9,9,8,6,3,1,3,6,7,6,7,7,4,0,3,7,7,4,4,8,8,2,2,7,6,1,12,7,6,4,2,2,4,9,7,7,8,7,9,8,7,4,1,2,5,8,7,10,9,3,0,2,7,9,7,7,9,8,5,3,4,3,3,11,9,7,6,2,5,9,8,4,7,7,6,9,9,10,6,1,1,4,9,9,9,8,2,0,2,5,8,7,7,7,7,6,4,4,3,4,8,8,9,6,3,5,9,6,2,5,6,6,9,10,11,7,2,3,6,8,8],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
