###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_111',geoSystem=['GDC'],position=(1.238458400333982,103.92018578496744,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.238458400333982,103.92018578496744,0.0),range=4101.627,child1Url=['../../tiles/5/singapore2-22.x3d'],child2Url=['../../tiles/5/singapore2-23.x3d'],child3Url=['../../tiles/5/singapore3-22.x3d'],child4Url=['../../tiles/5/singapore3-23.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore1-11.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.229726687955988,103.90582275083842,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[11,4,3,3,2,4,7,4,6,5,7,11,11,10,6,3,4,4,5,5,6,7,6,6,8,5,2,5,8,9,9,6,5,7,11,9,9,13,3,0,-1,1,4,6,6,8,6,7,10,9,8,7,4,3,4,5,2,2,8,7,6,6,4,3,3,7,8,10,6,5,9,10,7,6,11,3,-1,-2,4,7,7,8,7,6,6,9,8,7,9,7,3,5,6,2,2,8,6,4,4,5,6,4,8,7,9,6,4,8,7,5,4,7,4,-3,-1,7,12,10,8,7,4,5,9,6,7,11,8,5,8,8,2,3,7,5,2,2,6,9,6,10,7,7,5,5,7,5,4,4,7,5,-1,1,9,13,12,9,6,4,5,9,4,7,12,10,8,10,9,3,4,7,5,3,2,5,10,7,10,5,5,4,5,6,5,5,5,11,8,4,7,10,12,11,10,6,5,6,9,3,6,10,10,10,12,9,4,5,9,7,5,2,3,9,6,7,2,3,4,5,6,7,7,7,11,8,6,9,10,12,11,10,6,5,7,9,2,5,9,9,10,11,8,4,4,8,8,6,3,3,8,5,6,1,2,6,5,5,7,9,9,8,6,3,7,10,11,11,9,7,3,6,9,3,5,8,7,7,8,7,4,4,8,7,5,4,5,6,3,3,2,5,9,5,5,6,9,10,5,4,3,6,9,11,10,7,6,2,5,7,2,5,7,6,6,6,6,4,4,8,7,5,5,5,5,1,2,4,8,10,5,5,6,10,11,2,3,4,7,7,10,8,3,3,2,4,3,3,4,7,5,6,6,4,3,6,9,7,5,6,5,4,0,1,6,10,8,5,6,5,11,11,2,3,3,6,8,9,6,2,3,2,5,2,4,5,7,6,7,6,4,5,6,9,7,5,7,5,4,0,1,6,10,7,4,7,5,10,10,4,3,2,6,10,7,4,5,5,4,8,5,6,6,7,6,9,6,6,8,8,7,6,6,7,4,5,2,2,0,7,6,0,8,5,5,6,5,3,2,5,9,5,3,6,6,6,12,8,8,6,7,7,9,7,7,10,8,6,6,7,9,5,5,4,1,-2,6,7,0,8,5,2,4,2,2,4,6,3,3,3,6,6,10,15,11,8,6,4,6,7,7,7,8,7,5,5,8,9,8,6,2,0,0,7,12,6,4,4,3,6,1,1,4,7,1,3,3,5,7,12,17,12,7,5,4,5,5,7,7,7,6,5,5,7,9,9,6,2,0,1,7,14,11,1,4,4,6,3,-3,2,10,6,4,3,4,7,10,11,9,5,3,5,5,5,7,7,7,5,3,1,3,6,7,5,3,2,3,8,13,9,-2,7,5,4,5,-7,1,11,8,4,3,3,7,8,8,6,4,3,5,5,4,6,7,7,5,2,0,0,3,4,4,4,3,4,9,12,9,-3,9,5,3,4,-3,0,10,8,2,3,3,3,7,8,7,5,3,4,6,4,2,4,7,7,4,2,2,3,3,3,5,3,4,9,10,8,2,4,3,3,4,0,0,9,7,0,3,2,2,6,8,8,7,3,3,6,4,1,1,7,8,5,4,3,3,3,2,6,2,4,8,9,9,7,0,3,4,5,0,0,5,6,0,2,3,7,6,7,9,11,6,3,7,10,8,5,5,5,4,3,4,4,5,0,0,0,5,6,9,9,7,1,4,5,5,2,1,2,5,1,2,4,11,5,6,10,12,8,4,7,13,14,8,4,3,2,2,4,5,6,0,-3,0,5,6,9,9,7,2,5,6,5,3,2,2,5,4,6,6,8,2,4,7,10,5,5,9,9,13,7,2,1,0,0,3,6,4,1,-1,1,8,8,7,7,8,4,4,5,6,5,3,2,4,5,9,7,4,0,2,5,7,2,6,9,6,11,7,0,0,-2,-2,2,6,3,2,0,4,10,11,6,5,8,7,3,5,6,6,1,3,4,6,9,8,5,1,6,8,7,5,6,10,7,8,4,0,0,-1,0,2,5,4,4,1,3,8,10,6,7,6,5,5,7,6,7,0,4,4,7,8,9,5,3,9,11,8,8,5,11,9,4,2,0,0,0,0,3,4,5,7,5,3,6,9,5,9,3,2,7,8,6,8,2,6,8,8,8,7,4,6,12,11,8,7,5,9,9,5,4,1,0,0,1,3,4,4,5,3,3,7,7,4,9,3,7,13,12,7,8,5,10,13,11,7,6,5,9,15,10,7,6,5,7,9,7,7,3,1,0,2,4,4,4,2,1,4,7,4,4,8,3,11,20,17,7,5,4,9,14,11,7,6,5,10,13,7,5,3,5,6,8,8,7,7,5,3,3,8,7,2,2,0,2,7,5,1,6,6,9,11,10,6,3,4,8,13,10,8,7,5,10,10,5,2,0,5,5,8,8,8,10,10,5,3,11,11,0,2,0,0,6,5,0,4,9,8,3,4,7,4,4,6,8,7,8,7,8,8,6,3,3,4,7,5,7,7,7,10,9,4,4,9,8,2,3,2,1,6,5,1,7,9,11,4,4,8,6,5,4,3,4,7,6,10,6,2,2,4,9,10,6,6,6,6,10,8,4,4,6,6,3,4,5,3,5,4,4,9,9,14,6,5,7,6,7,5,3,5,7,9,11,5,2,2,3,8,8,6,5,4,6,10,11,8,6,6,6,5,6,7,4,5,4,4,9,9,16,5,5,7,5,10,6,4,7,8,12,11,6,4,3,0,6,6,7,3,1,6,10,16,14,7,7,6,7,8,8,4,5,5,4,9,9,17,3,4,7,7,11,6,4,7,8,10,8,6,1,1,0,4,5,10,6,4,6,7,13,14,9,9,8,7,7,8,7,6,5,3,8,13,15,3,4,7,9,11,6,4,8,9,7,3,6,-2,-1,-1,2,6,12,10,8,5,3,8,11,11,11,10,8,6,9,11,7,6,2,7,18,11,4,5,7,7,10,4,3,8,9,5,3,7,-1,-1,0,4,6,10,10,5,2,4,9,10,8,10,9,6,4,9,13,8,7,3,9,18,9,4,6,5,4,9,1,3,8,10,4,4,9,2,0,4,7,7,8,9,0,-1,7,11,8,5,6,8,4,3,10,12,7,8,6,14,17,7,4,7,4,2,5,-1,0,7,10,5,4,0,-10,-3,5,7,6,6,7,0,0,9,11,6,4,5,7,7,6,10,9,5,9,7,20,18,4,1,5,4,2,1,-4,-1,4,10,6,6,-13,-29,-9,4,6,4,5,3,1,3,10,9,4,5,5,7,11,11,9,3,3,9,9,27,21,2,0,0,3,2,0,-13,-15,0,9,5,7,-10,-33,-20,0,5,4,4,4,4,7,12,9,2,5,6,7,12,11,7,3,3,9,12,32,18,4,0,0,1,3,0,-25,-36,-4,7,4,8,2,-28,-34,-8,4,5,4,7,8,11,16,9,1,6,8,7,10,8,5,4,5,11,18,35,14,8,2,3,0,0,-1,-27,-40,-8,1,2,8,7,-17,-25,-7,4,6,6,9,10,13,17,10,2,7,9,6,7,5,3,7,7,14,22,30,9,9,4,5,-1,-8,-2,-21,-31,-11,-5,1,6,7,0,-1,0,4,8,8,9,10,13,17,14,7,7,8,4,3,1,3,11,9,19,27,20,4,6,4,5,-1,-5,-1,-12,-18,-8,-6,1,7,6,5,7,5,4,7,8,10,12,15,17,15,8,6,5,0,0,0,3,12,10,22,28,11,2,5,5,5],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
