###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    Shape(
      appearance=Appearance(
        material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
        texture=ImageTexture(url=['../../images/5/singapore27-25.jpg'],repeatS=False,repeatT=False)),
      geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.4480194974058374,103.94891185322548,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=3.9897318E-4,zDimension=22,zSpacing=4.1579583E-4,height=[15,14,13,12,13,13,14,13,11,10,10,9,8,7,7,8,8,8,7,7,8,9,10,10,10,9,8,8,8,8,8,8,8,9,10,11,12,15,14,13,13,14,15,15,15,13,11,10,10,9,7,7,7,7,7,8,8,8,10,10,11,10,9,8,7,7,8,9,9,9,9,10,12,13,16,15,15,16,17,17,17,17,17,16,15,14,12,9,8,7,7,7,7,7,8,10,11,11,10,8,7,7,7,8,9,9,9,10,10,12,13,16,16,16,17,17,18,18,19,20,20,19,18,16,13,10,8,7,7,7,8,9,11,11,10,9,8,8,7,7,8,8,9,9,10,11,12,14,18,18,17,17,17,17,18,18,20,22,22,22,20,17,14,10,9,9,9,9,10,11,10,9,8,8,8,8,7,7,7,7,7,9,12,13,14,20,19,18,17,17,17,17,18,20,22,25,25,24,21,18,13,12,12,11,11,10,10,9,8,8,8,8,8,8,7,7,6,6,9,11,12,13,21,20,19,18,17,18,18,19,21,23,26,27,27,24,21,19,17,16,14,12,11,10,9,9,9,9,9,9,8,8,7,6,6,8,9,10,11,22,20,19,18,18,19,19,20,22,24,27,29,29,26,24,22,21,19,17,13,11,10,10,9,9,10,10,9,9,8,7,6,6,7,8,8,9,23,21,20,19,20,20,20,21,22,24,27,30,29,27,26,24,23,21,18,15,12,11,10,10,10,10,10,10,9,9,9,7,6,7,7,8,8,24,22,21,20,20,21,21,21,22,24,27,29,29,27,26,25,24,22,19,16,13,11,10,10,10,11,11,10,10,10,9,8,7,7,7,8,8,23,22,21,19,19,19,20,21,22,24,26,28,27,26,26,25,23,21,18,14,12,11,10,9,9,10,10,10,10,10,9,7,7,7,7,8,8,22,21,20,18,17,17,18,20,21,23,24,26,25,25,24,23,22,19,16,13,11,10,10,9,9,9,9,9,9,9,8,7,7,7,7,7,8,19,18,17,16,15,15,16,17,18,19,21,23,23,22,21,20,18,16,13,11,10,10,10,9,9,9,9,9,8,8,7,7,7,6,6,7,8,18,17,16,15,14,13,14,15,15,15,17,19,19,19,18,17,15,13,11,10,9,9,9,10,9,9,8,8,8,7,7,7,7,6,6,7,8,21,21,19,17,15,14,14,14,13,12,13,14,15,16,15,14,13,11,10,9,9,9,9,9,9,8,8,8,8,7,7,7,7,6,7,8,10,24,24,22,20,18,16,15,15,12,9,9,10,11,12,13,12,11,10,9,8,8,9,9,9,8,8,8,9,8,8,8,7,7,7,7,9,11,24,24,25,25,24,23,22,20,15,11,9,9,10,11,11,10,9,8,8,8,8,8,8,8,8,8,9,10,10,9,9,8,7,8,9,11,12,24,25,27,29,29,30,27,24,18,13,10,9,9,10,9,8,7,7,7,8,8,8,8,8,8,9,9,11,11,10,10,8,8,10,11,12,13,24,25,26,26,27,27,26,24,20,15,11,9,10,10,9,8,7,7,7,7,8,8,8,8,9,10,11,11,11,10,9,8,9,10,11,13,15,23,24,23,23,24,26,25,24,21,16,13,10,11,11,10,8,7,7,7,7,8,9,9,9,10,11,12,12,12,10,9,9,9,10,11,14,16,21,24,25,25,24,24,22,21,18,15,12,11,11,11,10,8,7,7,7,7,8,9,10,10,11,12,14,14,14,12,10,9,10,11,13,16,18,19,24,26,28,26,23,20,18,15,13,11,11,11,11,10,7,6,6,7,7,8,9,9,10,11,13,15,16,16,13,11,10,10,13,15,18,21],
        geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])))])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
