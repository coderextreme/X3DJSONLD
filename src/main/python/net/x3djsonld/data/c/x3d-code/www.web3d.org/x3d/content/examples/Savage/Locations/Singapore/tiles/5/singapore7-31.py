###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    Shape(
      appearance=Appearance(
        material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
        texture=ImageTexture(url=['../../images/5/singapore7-31.jpg'],repeatS=False,repeatT=False)),
      geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.273385249845958,104.0350900579996,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=36,xSpacing=4.103724E-4,zDimension=22,zSpacing=4.1579583E-4,height=[2,-1,-4,0,3,8,11,11,9,10,10,9,7,3,0,0,2,4,5,5,4,4,4,4,5,6,8,8,8,8,9,1,-20,-38,-45,-50,4,0,-3,0,3,7,12,8,4,6,9,9,8,4,0,0,1,5,12,13,9,7,5,4,4,5,7,7,7,7,8,0,-25,-44,-49,-51,6,0,-1,0,3,8,10,5,0,2,7,9,8,6,3,1,0,8,21,22,17,11,6,4,4,4,5,5,5,5,5,-5,-32,-51,-54,-52,8,3,0,2,5,9,11,6,0,2,7,8,9,6,1,0,0,8,23,25,22,18,13,7,3,1,0,0,2,0,-8,-21,-40,-52,-55,-55,11,7,3,4,7,10,11,9,6,6,7,8,11,4,-3,-3,-2,7,21,27,27,25,21,12,2,-2,-6,-5,-1,-7,-28,-43,-46,-49,-54,-57,10,6,3,5,8,13,16,13,10,9,7,7,9,3,-3,-4,-3,5,20,25,27,25,21,14,6,0,-5,-6,-4,-13,-34,-47,-49,-50,-54,-58,7,2,0,3,9,16,21,19,14,10,8,6,5,2,0,-3,-5,3,19,24,23,21,17,14,12,7,0,-4,-8,-16,-29,-41,-49,-54,-55,-56,3,1,0,3,9,15,20,17,12,9,6,5,5,3,1,0,-3,4,16,19,18,15,10,9,11,8,3,-1,-6,-14,-24,-35,-47,-54,-56,-56,0,2,4,6,7,11,13,11,8,5,3,3,5,4,4,3,2,6,13,14,13,8,2,2,5,6,4,1,-2,-8,-19,-30,-42,-51,-56,-58,0,3,6,5,4,5,7,4,2,1,0,3,6,6,5,5,5,7,10,10,8,3,-2,-2,0,2,3,2,0,-4,-12,-22,-34,-46,-53,-57,1,5,8,3,0,0,1,0,-2,-1,0,3,6,6,5,5,6,7,9,8,4,0,-4,-5,-3,-1,0,1,0,-1,-5,-12,-25,-38,-48,-55,1,6,9,3,-2,-2,-1,-3,-5,-2,0,3,5,6,5,6,7,8,9,5,0,-3,-6,-7,-6,-4,-2,0,-1,-1,-2,-7,-16,-28,-40,-50,2,7,10,4,-1,-2,-2,-4,-7,-3,1,3,3,4,6,8,9,9,9,3,-3,-8,-10,-9,-8,-7,-5,-4,-5,-6,-6,-6,-9,-16,-29,-42,2,6,8,3,0,0,0,-2,-5,0,5,5,2,3,5,7,8,8,7,1,-6,-10,-11,-11,-11,-11,-10,-11,-12,-12,-12,-10,-8,-10,-19,-31,1,3,4,2,0,1,3,2,0,6,13,9,3,1,1,2,4,2,0,-2,-5,-8,-10,-12,-15,-17,-19,-20,-21,-22,-21,-19,-14,-12,-12,-17,1,0,0,0,0,3,7,7,6,12,18,13,6,2,0,0,1,0,-3,-4,-3,-7,-12,-16,-20,-23,-26,-27,-27,-28,-28,-25,-21,-15,-10,-10,2,0,-2,0,1,6,10,11,11,14,17,15,11,6,1,1,2,1,-1,-1,0,-6,-16,-22,-24,-26,-28,-28,-29,-29,-29,-27,-25,-21,-16,-13,3,0,-2,0,3,9,13,11,9,10,12,13,14,9,3,1,2,2,2,3,3,-5,-20,-27,-28,-28,-28,-29,-29,-29,-29,-28,-28,-26,-22,-17,0,0,0,1,5,11,16,8,0,0,0,5,11,8,2,0,0,1,7,8,8,-1,-19,-27,-29,-29,-29,-29,-29,-29,-29,-29,-29,-28,-26,-22,0,1,2,4,7,13,16,5,-6,-8,-7,0,7,7,4,0,-2,2,10,12,13,0,-18,-27,-29,-29,-29,-29,-29,-29,-29,-29,-29,-28,-28,-26,3,5,7,8,8,11,12,4,-3,-5,-5,-1,3,8,12,8,1,4,11,13,13,1,-18,-27,-29,-29,-29,-29,-29,-29,-29,-29,-29,-29,-29,-28,7,9,11,10,9,8,7,3,0,0,0,0,0,8,18,14,5,5,10,12,13,1,-16,-25,-28,-29,-29,-29,-29,-29,-29,-29,-29,-29,-29,-28],
        geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])))])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
