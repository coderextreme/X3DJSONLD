###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_54',geoSystem=['GDC'],position=(1.3083120993579338,103.71910330716118,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.3083120993579338,103.71910330716118,0.0),range=4101.627,child1Url=['../../tiles/5/singapore10-8.x3d'],child2Url=['../../tiles/5/singapore10-9.x3d'],child3Url=['../../tiles/5/singapore11-8.x3d'],child4Url=['../../tiles/5/singapore11-9.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore5-4.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.2995803869799398,103.70474027303216,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=45,zSpacing=3.96896E-4,height=[67,46,39,33,25,22,18,5,0,1,5,10,9,9,13,5,8,5,4,8,3,-3,-5,-2,7,12,10,6,3,2,1,2,4,7,3,-2,-3,55,42,41,33,24,22,17,5,0,0,2,8,8,10,14,6,9,9,7,8,4,-1,-5,0,7,10,11,6,3,2,1,2,3,5,2,0,0,45,39,41,33,22,22,17,7,1,0,0,4,6,12,14,9,10,14,11,8,6,1,-3,1,6,9,11,5,3,2,2,1,2,3,2,3,5,36,34,37,30,22,22,18,10,4,2,0,2,6,11,13,10,13,16,12,8,7,4,1,4,6,8,9,6,4,2,2,2,2,3,4,5,6,28,28,31,26,22,22,20,15,7,6,2,1,5,10,12,11,17,18,12,7,8,8,8,7,6,7,7,6,5,2,2,4,3,3,6,6,6,19,20,21,20,21,22,20,16,8,7,4,3,6,9,10,10,15,14,12,8,8,8,10,9,5,7,7,7,7,2,1,3,4,4,6,7,6,11,11,10,12,21,21,19,16,9,8,7,6,7,9,9,8,11,9,11,10,7,7,11,9,4,7,7,8,8,3,0,2,6,5,6,7,7,8,8,6,9,17,20,19,16,9,9,7,7,7,9,9,7,9,8,9,10,7,5,9,8,3,9,9,9,8,3,0,3,6,4,5,7,7,8,6,4,7,13,20,21,16,8,9,5,7,7,9,9,8,8,8,8,9,7,2,5,7,4,13,12,9,8,4,1,3,6,3,4,6,7,10,6,5,6,11,18,20,16,7,8,6,7,7,8,8,7,7,8,8,10,7,3,5,7,5,13,11,9,8,5,4,5,6,3,4,6,7,11,7,6,7,9,17,20,15,6,6,7,8,6,6,7,6,6,7,9,12,9,6,7,8,8,10,8,8,9,6,6,7,7,3,4,8,9,11,8,7,7,9,16,19,14,6,5,6,8,6,6,6,5,6,7,10,11,9,6,7,8,7,8,7,7,8,6,7,8,7,4,7,9,9,11,8,7,7,10,15,16,13,6,5,5,6,6,5,3,3,8,7,11,8,8,5,6,6,6,7,7,7,7,7,8,7,6,5,9,10,8,11,9,7,7,10,15,14,12,7,6,5,7,7,5,3,3,9,6,9,7,8,5,6,6,6,7,7,7,6,7,9,10,9,8,11,10,8,10,9,8,7,11,15,13,12,9,8,6,8,8,4,4,5,9,2,7,9,9,6,6,6,9,7,7,6,6,6,9,14,15,13,11,10,8,9,9,8,6,10,14,12,12,10,9,7,7,7,2,4,5,9,1,6,9,11,7,6,7,9,7,6,5,6,6,8,14,15,12,10,9,8,8,7,7,6,8,12,11,12,11,9,6,5,3,1,4,4,8,4,6,8,13,10,6,7,7,7,5,5,5,6,7,11,11,9,8,8,7,8,7,5,5,7,10,11,11,10,9,8,5,2,1,4,4,7,5,7,7,14,11,7,7,6,6,5,4,4,6,7,9,8,7,7,7,6,7,6,5,4,7,10,11,10,9,9,11,6,3,0,6,5,6,4,7,6,14,12,7,7,5,5,5,4,3,5,8,10,8,6,7,7,7,7,6,5,4,6,8,10,9,8,8,12,7,5,2,7,6,6,4,8,7,12,10,7,7,5,5,6,4,3,5,9,11,8,6,7,8,8,6,6,6,5,6,7,8,7,6,7,10,7,8,5,6,6,7,6,9,8,10,8,6,7,5,5,5,4,4,6,10,11,9,6,7,8,8,6,6,6,6,8,7,8,8,5,5,9,7,9,7,6,6,8,7,10,10,9,7,6,7,4,5,5,5,5,6,10,12,10,7,7,8,8,7,6,7,8,9,9,10,9,5,5,8,6,8,9,6,5,6,7,12,13,12,7,6,7,4,5,4,4,6,6,9,12,10,7,7,8,9,7,6,8,10,10,10,11,10,6,5,8,7,7,10,6,5,7,7,13,15,14,8,7,8,6,5,4,3,6,7,9,11,9,7,7,8,9,8,7,9,10,10,11,10,9,7,7,9,7,6,8,6,7,11,8,11,13,13,10,8,10,8,7,5,1,4,7,9,10,9,8,7,7,8,8,9,10,9,9,11,9,8,8,9,9,8,5,7,5,8,14,9,9,10,12,10,8,11,10,9,5,0,4,8,9,9,10,8,7,7,7,8,9,9,9,9,10,9,8,8,9,9,8,6,5,3,9,15,9,8,9,10,9,7,9,10,9,5,2,5,9,10,8,9,9,7,7,7,9,9,9,8,10,10,9,8,8,9,10,9,7,5,2,9,14,9,8,11,10,8,7,9,10,9,6,5,7,10,10,8,9,10,8,7,8,8,9,9,8,10,9,9,8,7,11,14,12,8,6,4,8,12,10,12,16,12,7,8,10,10,9,7,7,9,10,8,8,10,11,9,9,10,8,9,9,9,10,9,9,9,8,12,16,15,9,6,6,8,11,11,16,23,18,8,9,11,9,10,9,8,9,10,6,8,12,12,10,11,12,8,9,9,9,10,10,10,10,10,10,13,14,9,7,7,8,10,13,20,32,31,11,10,10,9,10,9,7,7,9,6,10,14,14,12,12,13,8,10,9,9,9,10,11,12,12,9,10,12,9,8,8,8,10,13,23,40,44,16,12,10,8,10,9,5,5,8,8,12,15,14,12,12,12,8,10,9,9,9,10,12,14,14,9,10,12,9,8,7,8,9,11,23,43,52,21,14,11,7,10,10,6,5,8,10,12,12,12,11,10,11,7,9,10,9,9,10,13,16,15,11,11,12,9,8,6,9,9,9,21,42,53,24,16,13,8,10,10,8,6,9,11,11,9,10,9,9,10,7,9,9,10,10,11,14,18,17,12,12,12,9,8,6,8,9,8,17,31,41,20,17,14,9,10,9,7,6,9,12,11,9,9,9,10,11,8,9,8,9,10,11,15,19,18,14,12,13,9,8,7,7,9,9,12,18,26,15,16,14,9,10,7,5,5,8,12,11,9,10,9,10,11,8,10,9,9,10,11,15,18,18,18,14,12,9,8,8,7,8,9,11,12,16,12,13,12,9,9,6,4,7,9,11,10,9,9,9,11,11,9,12,10,9,10,11,14,16,18,23,18,12,9,9,9,7,7,9,11,10,9,9,10,10,9,7,6,5,9,10,9,9,8,8,9,11,11,11,16,15,13,12,12,14,15,18,27,21,12,8,8,9,7,7,10,11,8,6,8,7,10,9,6,5,5,10,10,9,10,8,7,7,9,10,13,22,22,19,16,15,14,14,19,28,22,12,7,7,7,7,8,11,9,8,5,7,6,9,8,6,5,5,9,9,9,11,9,6,5,8,9,16,27,31,30,26,20,15,13,16,23,20,10,7,6,7,7,10,11,9,9,5,7,6,8,6,3,3,5,8,7,9,14,10,6,5,7,8,19,31,40,43,39,27,16,13,12,15,15,9,6,6,8,8,11,10,10,9,5,8,6,7,4,1,2,5,6,5,8,16,12,7,5,6,8,18,29,41,50,47,32,18,12,11,12,13,10,6,7,9,9,11,8,11,11,6,8,6,6,5,4,4,6,6,5,7,14,14,10,8,8,9,14,24,38,53,54,37,20,12,10,12,12,12,6,8,9,10,10,7,13,15,9,7,7,7,9,8,6,6,7,6,5,10,15,15,11,11,12,12,21,34,51,56,43,25,14,11,12,12,12,7,9,10,11,10,8,12,15,10,8,8,8,10,10,8,5,7,6,5,8,14,15,12,11,12],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
