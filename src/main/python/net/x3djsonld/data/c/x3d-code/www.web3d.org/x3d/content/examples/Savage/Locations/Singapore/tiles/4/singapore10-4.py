###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_104',geoSystem=['GDC'],position=(1.3956292231378735,103.71910330716118,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.3956292231378735,103.71910330716118,0.0),range=4101.627,child1Url=['../../tiles/5/singapore20-8.x3d'],child2Url=['../../tiles/5/singapore20-9.x3d'],child3Url=['../../tiles/5/singapore21-8.x3d'],child4Url=['../../tiles/5/singapore21-9.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore10-4.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.3868975107598795,103.70474027303216,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=45,zSpacing=3.96896E-4,height=[21,18,14,13,13,13,12,13,15,17,15,14,11,12,15,27,29,23,18,10,4,6,14,18,24,31,32,29,27,25,25,21,18,14,9,6,4,21,17,14,14,14,13,13,14,15,17,15,13,11,12,15,25,26,20,16,9,3,7,14,18,25,32,33,30,27,26,25,22,19,15,10,7,7,21,17,15,15,15,14,14,15,15,16,15,13,12,12,15,23,22,18,14,8,3,7,14,19,26,31,32,29,26,25,25,23,19,15,11,9,9,22,18,16,15,15,15,15,16,15,15,14,13,11,12,15,20,19,15,13,8,4,8,15,21,27,31,31,27,25,24,24,22,20,15,12,10,9,23,19,17,15,15,15,15,16,16,15,14,12,10,12,15,18,15,12,11,8,6,10,16,23,29,31,28,24,23,22,22,21,19,15,12,10,9,23,20,17,15,15,16,15,16,16,16,15,13,10,12,15,16,13,10,10,8,7,11,18,25,30,31,26,22,22,22,22,20,18,15,13,11,10,22,19,17,15,15,16,15,16,17,18,18,15,11,11,14,13,12,9,9,7,7,12,20,26,29,29,23,20,22,23,22,19,16,15,13,12,11,21,19,18,16,16,16,16,16,18,21,21,17,12,10,12,11,11,9,8,7,8,12,20,25,27,26,20,18,21,23,21,19,17,15,13,12,12,20,20,19,17,17,17,16,16,20,24,23,19,13,10,9,9,10,9,9,8,8,11,17,21,23,21,16,17,21,22,21,19,18,15,12,10,10,20,20,20,18,17,17,16,16,20,26,24,19,14,10,7,9,9,8,8,8,8,10,15,18,19,16,13,16,21,22,21,19,18,14,11,9,9,19,20,20,19,18,18,16,16,20,24,21,18,16,12,8,8,7,7,7,8,8,9,13,16,15,12,11,15,19,19,20,19,17,14,11,8,7,19,20,19,19,18,19,17,16,19,22,19,18,18,13,9,8,7,7,7,7,7,8,11,14,13,10,9,14,18,18,19,18,16,13,10,8,7,19,19,18,18,18,19,18,16,19,21,18,20,21,15,11,8,7,8,7,6,6,7,8,11,11,9,10,14,17,17,18,17,15,13,10,8,7,19,19,18,17,18,20,18,17,21,22,18,22,23,17,12,9,7,8,8,7,6,6,7,8,8,8,11,15,17,17,17,16,15,12,9,8,7,18,18,18,18,18,19,18,17,22,26,21,24,23,18,14,10,8,8,10,9,8,7,6,4,5,6,10,15,18,18,16,15,14,11,8,6,5,18,18,18,18,18,19,18,18,23,28,23,24,22,18,15,11,8,8,11,11,9,7,5,3,2,5,9,15,19,18,16,14,13,10,8,5,5,19,20,20,18,17,17,17,19,24,28,22,24,20,17,15,11,9,10,13,16,11,8,5,5,3,5,8,13,17,19,17,14,11,9,7,6,6,20,22,23,20,17,16,17,19,25,26,21,23,19,17,13,10,9,11,14,18,13,10,6,7,5,5,8,11,16,19,18,14,10,9,7,7,6,21,25,26,22,17,16,16,18,23,25,21,23,19,17,11,9,9,11,14,17,15,12,10,10,11,8,9,11,15,19,18,13,9,8,8,8,9,23,27,28,23,17,16,16,18,21,24,21,23,20,17,9,8,9,11,13,15,16,15,14,12,14,11,9,9,14,18,17,12,9,8,8,9,10,25,27,28,23,18,18,18,18,22,24,21,22,18,14,8,8,10,12,13,14,16,18,17,12,14,11,9,8,12,16,15,11,9,8,8,8,8,25,27,27,23,19,19,19,19,21,24,20,20,15,11,7,8,12,14,14,14,16,19,19,13,12,11,9,8,10,14,13,9,8,8,8,7,6,24,26,25,22,19,19,19,19,21,22,18,17,13,10,8,10,12,15,15,14,15,17,19,15,10,8,7,8,11,13,11,9,8,8,7,6,6,25,26,24,22,20,19,19,19,20,21,17,14,11,9,9,11,13,16,15,14,14,15,18,16,9,5,6,9,12,13,10,9,7,8,6,6,7,26,29,27,23,20,19,19,19,21,22,18,14,11,10,11,11,13,16,15,14,13,13,14,14,8,2,5,11,13,13,10,10,8,8,7,6,6,29,32,30,25,20,19,19,19,22,24,19,15,12,12,12,11,13,16,15,14,12,11,11,12,8,0,5,12,14,13,10,10,8,8,7,6,6,31,37,34,28,22,20,18,18,20,22,19,15,12,13,13,12,14,15,14,14,12,10,10,10,9,3,7,13,15,12,10,9,8,8,7,7,7,33,42,38,30,23,20,18,17,19,21,19,15,11,14,14,14,15,15,14,13,12,11,11,9,11,7,8,13,14,11,10,8,7,8,7,7,8,36,43,38,29,23,20,18,16,17,21,20,16,12,14,15,16,17,16,14,14,13,14,14,10,12,10,9,12,13,12,10,8,7,7,6,8,9,37,43,37,28,23,21,18,15,17,22,20,16,14,15,17,20,19,16,15,14,14,18,18,12,12,11,10,10,12,13,11,9,7,6,7,9,11,36,40,33,26,22,20,17,14,17,24,22,17,15,17,20,25,22,17,15,14,16,22,23,16,12,11,9,9,11,12,11,10,8,7,7,11,13,35,35,29,24,20,19,17,14,18,26,24,18,17,19,24,31,25,18,16,14,18,25,28,20,13,11,8,8,10,11,11,11,9,8,8,12,15,34,31,26,21,19,18,16,13,17,27,24,18,17,21,29,35,27,20,18,17,19,27,30,23,13,9,8,8,9,10,11,10,9,8,9,12,15,33,27,23,20,18,18,16,13,17,27,24,19,18,24,34,38,28,22,20,20,20,27,30,24,12,8,8,9,9,10,11,10,9,8,9,12,15,33,26,21,19,18,17,16,13,16,25,22,18,19,27,37,39,29,25,23,23,22,25,26,21,10,7,8,8,9,10,11,9,8,7,9,10,12,34,25,20,19,18,16,15,13,15,22,19,17,20,28,37,38,29,26,25,27,24,23,21,17,8,7,9,8,8,10,10,9,7,7,8,9,9,31,24,20,19,18,16,14,13,12,17,16,17,21,27,33,34,27,27,27,28,26,22,17,13,8,8,9,8,8,10,10,8,7,6,7,8,9,27,22,19,19,18,15,14,12,11,13,14,16,21,24,26,28,25,27,28,30,27,20,15,11,10,10,9,8,8,9,8,7,7,6,6,9,11,24,20,19,18,17,15,14,12,10,12,15,18,21,23,22,24,24,28,29,30,26,19,14,13,12,11,9,7,8,8,8,8,7,5,6,11,15,21,18,16,17,16,15,14,11,9,13,18,20,20,23,20,21,24,27,29,29,25,18,15,15,14,12,9,7,8,8,9,9,7,4,7,14,18,18,15,14,15,15,15,13,10,9,15,20,21,20,22,20,20,24,26,27,27,22,16,16,18,15,12,9,7,8,8,9,10,8,6,8,16,20,15,13,11,12,13,13,12,9,9,17,21,21,20,21,20,20,26,25,24,23,17,12,17,19,15,11,7,7,8,9,10,10,8,8,9,16,20,11,10,9,11,11,10,10,8,9,16,20,20,21,21,19,20,25,24,21,19,14,11,17,19,15,11,9,8,9,9,11,10,9,10,12,18,21,8,7,8,11,10,8,7,6,9,16,19,20,23,21,17,19,23,22,18,16,12,11,16,17,16,14,12,10,10,10,11,10,10,11,14,20,23,6,6,8,11,9,6,4,5,8,15,18,20,23,20,15,19,21,20,15,14,11,9,13,16,17,17,14,11,10,10,10,10,9,11,16,21,24],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
