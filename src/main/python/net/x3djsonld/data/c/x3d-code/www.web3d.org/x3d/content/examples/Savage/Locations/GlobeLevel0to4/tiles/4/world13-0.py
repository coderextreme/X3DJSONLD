###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    Shape(
      appearance=Appearance(
        material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0,0.05,0)),
        texture=ImageTexture(url=['../../images/4/world13-0.jpg'],repeatS=False,repeatT=False)),
      geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(56.20833769188965,-180.0416666667,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=22,xSpacing=1.0714287,zDimension=24,zSpacing=0.48913044,height=[-451,-3820,-3807,-3794,-3732,-3692,-3695,-3507,-3214,-1838,-2140,-2074,-960,16,-54,-78,-195,-636,-1826,-2625,-4976,-5732,-3600,-3815,-3785,-3769,-3715,-3701,-3592,-3520,-3375,-1841,-1639,-1519,-438,-416,245,-139,-80,-83,-85,-87,-969,-1929,-3833,-3806,-3784,-3763,-3705,-3600,-3566,-3543,-3155,-2494,-2064,-1425,-151,-130,-97,-20,52,197,-136,-61,-187,-97,-3819,-3792,-3772,-3745,-3704,-3609,-3457,-3329,-3119,-3088,-1903,-141,-136,-123,-100,-82,-35,-60,158,-79,-159,-47,-3799,-3785,-3761,-3725,-3671,-3523,-3162,-2963,-2750,-129,-1155,-135,-127,-106,-90,-88,-75,-41,-9,726,-4,-2,-3804,-3770,-3728,-3728,-3633,-3176,-3072,-610,-82,-109,-72,-98,-95,-82,-75,-74,-75,-77,-73,18,257,-16,-3803,-3753,-3706,-3537,-3416,-2895,-210,-73,-220,-38,-76,-113,-69,-83,-67,-68,-69,-77,-59,-79,44,302,-3778,-3727,-3643,-3447,-1758,-2324,-154,-61,-95,-93,-108,-96,-70,-46,-55,-53,-44,-51,-59,-76,-32,9,-3701,-3660,-3481,-3276,-1869,-2269,-141,-107,-115,-41,-113,-79,-63,-43,-43,-42,-38,-37,-39,-48,-18,4,-3678,-3595,-1072,-442,-150,-295,-122,-99,-53,-121,-78,-61,-44,-34,-37,-30,-25,-3,-26,-24,-4,-17,-3409,-2877,-140,-96,-131,-129,-79,-88,-57,-73,-57,-46,-36,-24,-25,-25,-34,3,73,16,4,36,-3078,-2277,-329,-135,-140,-92,-41,-59,-75,-45,-42,-36,-43,-35,-30,-12,-37,122,463,203,84,148,-2405,-167,-143,-153,-128,-142,-85,-57,-62,-51,-37,-28,79,91,-36,7,3,15,438,606,116,129,-805,-275,-142,-148,-120,-92,-60,-16,-43,-45,-34,-27,-24,-27,15,-11,3,30,245,1220,264,352,-130,-157,-145,-122,-108,-87,-67,-61,-51,-37,-34,-22,-15,-24,1,9,12,9,29,365,426,89,-216,-163,-139,-108,-95,-66,-59,-58,-54,-40,-36,-27,-28,7,12,7,26,11,16,24,121,245,-3,-117,-106,-105,-89,-61,-49,-40,-40,-43,-35,-25,-28,-9,3,1,3,133,47,16,247,89,-46,-102,-89,-98,-83,-72,-50,-48,-40,-36,-36,-29,-35,-24,1,4,74,83,45,60,97,492,-61,-91,-98,-94,-86,-82,-63,-54,-54,-36,-38,-31,-25,-23,-15,1,78,332,273,30,27,97,-63,-74,-92,-98,-87,-81,-60,-49,129,376,-31,-29,-26,-25,-7,-11,16,-127,254,30,38,42,-50,-68,-79,-92,-98,-81,-43,-48,-32,-34,-32,-34,-31,-17,-18,-17,-2,-42,279,490,81,120,-41,-55,-65,-64,-67,-104,719,-56,-43,-48,-43,-36,-23,120,38,25,218,-61,243,730,33,63,71,-62,-44,-73,434,492,338,46,-40,-38,-54,-41,-23,30,44,197,446,59,119,418,377,38,60,-53,-43,-80,58,206,233,85,-39,-32,-56,-55,-60,60,60,448,329,28,128,602,236,38],
        geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(0.0,0.0,-6378137.0),geoSystem=['GDC'])))])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
