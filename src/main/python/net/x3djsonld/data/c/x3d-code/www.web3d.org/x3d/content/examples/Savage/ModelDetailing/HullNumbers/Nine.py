###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    meta(content='Nine.x3d',name='title'),
    meta(content='3D Hull Number',name='description'),
    meta(content='Patrick Sullivan',name='creator'),
    meta(content='20 February 2006',name='created'),
    meta(content='14 January 2014',name='modified'),
    meta(content='1.0',name='version'),
    meta(content='Hull Numbers, ship markings',name='subject'),
    meta(content='https://savage.nps.edu/Savage/ModelDetailing/HullNumbers/Nine.x3d',name='identifier'),
    meta(content='../../license.html',name='license')]),
  Scene=Scene(
    children=[
    Group(DEF='Nine',
      children=[
      Transform(DEF='dad_HullNumber9_copy20',
        children=[
        Shape(DEF='HullNumber9_copy20',
          appearance=Appearance(
            material=Material(DEF='white2_mat',ambientIntensity=1,diffuseColor=(1,1,1),shininess=0,specularColor=(1,1,1))),
          geometry=IndexedFaceSet(coordIndex=[0,1,2,-1,0,2,3,-1,0,3,4,-1,0,4,5,-1,0,5,6,-1,0,6,1,-1,1,6,7,-1,1,7,2,-1,2,8,9,-1,2,9,3,-1,2,7,10,-1,2,10,8,-1,8,11,12,-1,8,12,9,-1,8,10,13,-1,8,13,11,-1,11,14,15,-1,11,15,12,-1,11,13,16,-1,11,16,14,-1,14,17,18,-1,14,18,15,-1,14,16,19,-1,14,19,17,-1,17,20,21,-1,17,21,18,-1,17,19,22,-1,17,22,20,-1,20,23,24,-1,20,24,21,-1,20,22,25,-1,20,25,23,-1,23,26,27,-1,23,27,24,-1,23,25,28,-1,23,28,26,-1,26,29,30,-1,26,30,27,-1,26,28,31,-1,26,31,29,-1,29,32,33,-1,29,33,34,-1,29,34,35,-1,29,35,30,-1,29,31,36,-1,29,36,32,-1,32,37,38,-1,32,38,33,-1,32,36,39,-1,32,39,37,-1,37,40,38,-1,37,39,41,-1,37,41,40,-1,40,42,43,-1,40,43,38,-1,40,41,44,-1,40,44,42,-1,42,45,46,-1,42,46,43,-1,42,44,47,-1,42,47,45,-1,45,48,49,-1,45,49,46,-1,45,47,50,-1,45,50,48,-1,48,51,52,-1,48,52,49,-1,48,50,53,-1,48,53,51,-1,51,54,55,-1,51,55,52,-1,51,53,56,-1,51,56,54,-1,54,57,55,-1,54,56,58,-1,54,58,57,-1,57,59,60,-1,57,60,55,-1,57,58,61,-1,57,61,59,-1,59,62,60,-1,59,61,63,-1,59,63,62,-1,62,64,65,-1,62,65,60,-1,62,63,66,-1,62,66,64,-1,64,67,68,-1,64,68,65,-1,64,66,69,-1,64,69,67,-1,67,70,71,-1,67,71,68,-1,67,69,72,-1,67,72,70,-1,70,73,71,-1,70,72,74,-1,70,74,73,-1,73,75,76,-1,73,76,71,-1,73,74,77,-1,73,77,75,-1,75,78,79,-1,75,79,76,-1,75,77,80,-1,75,80,78,-1,78,81,79,-1,78,80,82,-1,78,82,81,-1,81,83,84,-1,81,84,79,-1,81,82,85,-1,81,85,83,-1,83,30,35,-1,83,35,84,-1,83,85,86,-1,83,86,30,-1,30,86,87,-1,30,87,27,-1,27,87,88,-1,27,88,24,-1,24,88,89,-1,24,89,21,-1,21,89,90,-1,21,90,18,-1,18,90,91,-1,18,91,15,-1,15,91,92,-1,15,92,12,-1,12,92,93,-1,12,93,9,-1,9,94,3,-1,9,93,95,-1,9,95,94,-1,94,95,4,-1,94,4,3,-1,33,38,96,-1,33,96,97,-1,33,97,98,-1,33,98,34,-1,34,98,99,-1,34,99,35,-1,35,99,100,-1,35,100,84,-1,84,100,101,-1,84,101,79,-1,79,101,102,-1,79,102,76,-1,76,102,103,-1,76,103,71,-1,71,103,104,-1,71,104,68,-1,68,104,105,-1,68,105,65,-1,65,105,106,-1,65,106,60,-1,60,106,107,-1,60,107,55,-1,55,107,108,-1,55,108,52,-1,52,108,109,-1,52,109,49,-1,49,109,110,-1,49,110,46,-1,46,110,111,-1,46,111,43,-1,43,111,96,-1,43,96,38,-1,5,4,7,-1,5,7,6,-1,7,4,93,-1,7,93,10,-1,10,93,92,-1,10,92,13,-1,13,92,91,-1,13,91,16,-1,16,91,90,-1,16,90,19,-1,19,90,89,-1,19,89,22,-1,22,89,88,-1,22,88,25,-1,25,88,87,-1,25,87,28,-1,28,87,86,-1,28,86,31,-1,31,86,99,-1,31,99,98,-1,31,98,97,-1,31,97,36,-1,36,97,96,-1,36,96,39,-1,39,96,41,-1,41,96,111,-1,41,111,44,-1,44,111,110,-1,44,110,47,-1,47,110,109,-1,47,109,50,-1,50,109,108,-1,50,108,53,-1,53,108,107,-1,53,107,56,-1,56,107,58,-1,58,107,106,-1,58,106,61,-1,61,106,63,-1,63,106,105,-1,63,105,66,-1,66,105,104,-1,66,104,69,-1,69,104,103,-1,69,103,72,-1,72,103,74,-1,74,103,102,-1,74,102,77,-1,77,102,101,-1,77,101,80,-1,80,101,82,-1,82,101,100,-1,82,100,85,-1,85,100,99,-1,85,99,86,-1,93,4,95,-1],creaseAngle=0.524,
            coord=Coordinate(point=[(-.60199,.33922,-.04102),(-.55927,.23448,-.04102),(-.50141,.14879,-.04102),(-.40424,.36412,-.04102),(-.41426,.36094,-.2),(-.61202,.33603,-.2),(-.56929,.2313,-.2),(-.51143,.14561,-.2),(-.42768,.08177,-.04102),(-.18549,.31822,-.04102),(-.4377,.07859,-.2),(-.33735,.03307,-.04102),(-.15375,.27183,-.04102),(-.34737,.02988,-.2),(-.22065,.0034,-.04102),(-.11249,.2462,-.04102),(-.23067,.00022,-.2),(-.06782,-.00649,-.04102),(-.06293,.23766,-.04102),(-.07784,-.00967,-.2),(.18975,.03856,-.04102),(.02227,.26182,-.04102),(.17973,.03538,-.2),(.38433,.17369,-.04102),(.08648,.33433,-.04102),(.37431,.17051,-.2),(.50665,.40575,-.04102),(.12066,.44542,-.04102),(.49663,.40256,-.2),(.54742,.74156,-.04102),(.14508,.63609,-.04102),(.5374,.73838,-.2),(.52801,.97948,-.04102),(.13043,.97789,-.04102),(.11651,.87682,-.04102),(.07476,.80211,-.04102),(.51799,.97629,-.2),(.46978,1.16588,-.04102),(.11578,1.08153,-.04102),(.45976,1.16269,-.2),(.37908,1.30479,-.04102),(.36906,1.30161,-.2),(.26226,1.40025,-.04102),(.07183,1.16002,-.04102),(.25224,1.39707,-.2),(.11114,1.45555,-.04102),(.00689,1.20946,-.04102),(.10112,1.45237,-.2),(-.08246,1.47398,-.04102),(-.07074,1.22594,-.04102),(-.09249,1.4708,-.2),(-.24604,1.45897,-.04102),(-.14313,1.21104,-.04102),(-.25606,1.45579,-.2),(-.37934,1.41393,-.04102),(-.20209,1.16637,-.04102),(-.38936,1.41074,-.2),(-.48481,1.33958,-.04102),(-.49483,1.3364,-.2),(-.56489,1.23668,-.04102),(-.24128,1.0919,-.04102),(-.57491,1.2335,-.2),(-.61542,1.11314,-.04102),(-.62545,1.10996,-.2),(-.63227,.97691,-.04102),(-.25434,.98766,-.04102),(-.64229,.97373,-.2),(-.59919,.786,-.04102),(-.24079,.8817,-.04102),(-.60921,.78281,-.2),(-.49994,.63121,-.04102),(-.20014,.80406,-.04102),(-.50997,.62803,-.2),(-.35261,.52867,-.04102),(-.36263,.52549,-.2),(-.17524,.49449,-.04102),(-.13923,.75645,-.04102),(-.18526,.49131,-.2),(-.08246,.50304,-.04102),(-.06489,.74059,-.04102),(-.09249,.49985,-.2),(-.00141,.52867,-.04102),(-.01143,.52549,-.2),(.07281,.57262,-.04102),(.01202,.75597,-.04102),(.06279,.56943,-.2),(.13505,.63291,-.2),(.11064,.44224,-.2),(.07646,.33115,-.2),(.02227,.26182,-.24102),(-.06293,.23766,-.24102),(-.12252,.24302,-.2),(-.16378,.26865,-.2),(-.19551,.31504,-.2),(-.20649,.38902,-.04102),(-.21651,.38584,-.2),(.10576,1.07834,-.2),(.12041,.97471,-.2),(.10649,.87363,-.2),(.06474,.79893,-.2),(.002,.75278,-.2),(-.07491,.7374,-.2),(-.14925,.75327,-.2),(-.21016,.80088,-.2),(-.25081,.87852,-.2),(-.26436,.98447,-.2),(-.2513,1.08872,-.2),(-.21212,1.16318,-.2),(-.15316,1.20786,-.2),(-.08077,1.22275,-.2),(-.00313,1.20627,-.2),(.06181,1.15684,-.2)])))]),
      Transform(DEF='dad_HullNumber9',
        children=[
        Shape(DEF='HullNumber9',
          appearance=Appearance(
            material=Material(DEF='main_mat',ambientIntensity=0.001,diffuseColor=(.001,.001,.001),shininess=0,specularColor=(.001,.001,.001))),
          geometry=IndexedFaceSet(coordIndex=[0,1,2,-1,0,2,3,-1,0,3,4,-1,0,4,5,-1,0,5,6,-1,0,6,1,-1,1,6,7,-1,1,7,2,-1,2,8,9,-1,2,9,3,-1,2,7,10,-1,2,10,8,-1,8,11,12,-1,8,12,9,-1,8,10,13,-1,8,13,11,-1,11,14,15,-1,11,15,12,-1,11,13,16,-1,11,16,14,-1,14,17,18,-1,14,18,15,-1,14,16,19,-1,14,19,17,-1,17,20,21,-1,17,21,18,-1,17,19,22,-1,17,22,20,-1,20,23,24,-1,20,24,21,-1,20,22,25,-1,20,25,23,-1,23,26,27,-1,23,27,24,-1,23,25,28,-1,23,28,26,-1,26,29,30,-1,26,30,27,-1,26,28,31,-1,26,31,29,-1,29,32,33,-1,29,33,34,-1,29,34,35,-1,29,35,30,-1,29,31,36,-1,29,36,32,-1,32,37,38,-1,32,38,33,-1,32,36,39,-1,32,39,37,-1,37,40,38,-1,37,39,41,-1,37,41,40,-1,40,42,43,-1,40,43,38,-1,40,41,44,-1,40,44,42,-1,42,45,46,-1,42,46,43,-1,42,44,47,-1,42,47,45,-1,45,48,49,-1,45,49,46,-1,45,47,50,-1,45,50,48,-1,48,51,52,-1,48,52,49,-1,48,50,53,-1,48,53,51,-1,51,54,55,-1,51,55,52,-1,51,53,56,-1,51,56,54,-1,54,57,55,-1,54,56,58,-1,54,58,57,-1,57,59,60,-1,57,60,55,-1,57,58,61,-1,57,61,59,-1,59,62,60,-1,59,61,63,-1,59,63,62,-1,62,64,65,-1,62,65,60,-1,62,63,66,-1,62,66,64,-1,64,67,68,-1,64,68,65,-1,64,66,69,-1,64,69,67,-1,67,70,71,-1,67,71,68,-1,67,69,72,-1,67,72,70,-1,70,73,71,-1,70,72,74,-1,70,74,73,-1,73,75,76,-1,73,76,71,-1,73,74,77,-1,73,77,75,-1,75,78,79,-1,75,79,76,-1,75,77,80,-1,75,80,78,-1,78,81,79,-1,78,80,82,-1,78,82,81,-1,81,83,84,-1,81,84,79,-1,81,82,85,-1,81,85,83,-1,83,30,35,-1,83,35,84,-1,83,85,86,-1,83,86,30,-1,30,86,87,-1,30,87,27,-1,27,87,88,-1,27,88,24,-1,24,88,89,-1,24,89,21,-1,21,89,90,-1,21,90,18,-1,18,90,91,-1,18,91,15,-1,15,91,92,-1,15,92,12,-1,12,92,93,-1,12,93,9,-1,9,94,3,-1,9,93,95,-1,9,95,94,-1,94,95,4,-1,94,4,3,-1,33,38,96,-1,33,96,97,-1,33,97,98,-1,33,98,34,-1,34,98,99,-1,34,99,35,-1,35,99,100,-1,35,100,84,-1,84,100,101,-1,84,101,79,-1,79,101,102,-1,79,102,76,-1,76,102,103,-1,76,103,71,-1,71,103,104,-1,71,104,68,-1,68,104,105,-1,68,105,65,-1,65,105,106,-1,65,106,60,-1,60,106,107,-1,60,107,55,-1,55,107,108,-1,55,108,52,-1,52,108,109,-1,52,109,49,-1,49,109,110,-1,49,110,46,-1,46,110,111,-1,46,111,43,-1,43,111,96,-1,43,96,38,-1,5,4,7,-1,5,7,6,-1,7,4,93,-1,7,93,10,-1,10,93,92,-1,10,92,13,-1,13,92,91,-1,13,91,16,-1,16,91,90,-1,16,90,19,-1,19,90,89,-1,19,89,22,-1,22,89,88,-1,22,88,25,-1,25,88,87,-1,25,87,28,-1,28,87,86,-1,28,86,31,-1,31,86,99,-1,31,99,98,-1,31,98,97,-1,31,97,36,-1,36,97,96,-1,36,96,39,-1,39,96,41,-1,41,96,111,-1,41,111,44,-1,44,111,110,-1,44,110,47,-1,47,110,109,-1,47,109,50,-1,50,109,108,-1,50,108,53,-1,53,108,107,-1,53,107,56,-1,56,107,58,-1,58,107,106,-1,58,106,61,-1,61,106,63,-1,63,106,105,-1,63,105,66,-1,66,105,104,-1,66,104,69,-1,69,104,103,-1,69,103,72,-1,72,103,74,-1,74,103,102,-1,74,102,77,-1,77,102,101,-1,77,101,80,-1,80,101,82,-1,82,101,100,-1,82,100,85,-1,85,100,99,-1,85,99,86,-1,93,4,95,-1],creaseAngle=0.524,
            coord=Coordinate(point=[(-.45663,.32447,-.08798),(-.41391,.21974,-.08798),(-.35605,.13404,-.08798),(-.25888,.34937,-.08798),(-.2689,.34619,-.24696),(-.46666,.32129,-.24696),(-.42393,.21655,-.24696),(-.36607,.13086,-.24696),(-.28232,.06703,-.08798),(-.04013,.30348,-.08798),(-.29234,.06384,-.24696),(-.19198,.01832,-.08798),(-.00839,.25709,-.08798),(-.20201,.01514,-.24696),(-.07529,-.01134,-.08798),(.03287,.23145,-.08798),(-.08531,-.01453,-.24696),(.07755,-.02123,-.08798),(.08243,.22291,-.08798),(.06752,-.02441,-.24696),(.33511,.02381,-.08798),(.16763,.24708,-.08798),(.32509,.02063,-.24696),(.5297,.15895,-.08798),(.23184,.31959,-.08798),(.51967,.15576,-.24696),(.65201,.391,-.08798),(.26602,.43067,-.08798),(.64199,.38782,-.24696),(.69278,.72682,-.08798),(.29044,.62135,-.08798),(.68276,.72363,-.24696),(.67337,.96473,-.08798),(.27579,.96314,-.08798),(.26187,.86207,-.08798),(.22012,.78736,-.08798),(.66335,.96155,-.24696),(.61514,1.15113,-.08798),(.26114,1.06678,-.08798),(.60512,1.14795,-.24696),(.52445,1.29005,-.08798),(.51442,1.28687,-.24696),(.40762,1.38551,-.08798),(.2172,1.14527,-.08798),(.3976,1.38232,-.24696),(.2565,1.44081,-.08798),(.15225,1.19471,-.08798),(.24648,1.43762,-.24696),(.0629,1.45924,-.08798),(.07462,1.21119,-.08798),(.05288,1.45605,-.24696),(-.10068,1.44422,-.08798),(.00223,1.1963,-.08798),(-.1107,1.44104,-.24696),(-.23398,1.39918,-.08798),(-.05673,1.15162,-.08798),(-.244,1.396,-.24696),(-.33945,1.32484,-.08798),(-.34947,1.32166,-.24696),(-.41952,1.22193,-.08798),(-.09592,1.07716,-.08798),(-.42955,1.21875,-.24696),(-.47006,1.0984,-.08798),(-.48008,1.09521,-.24696),(-.48691,.96217,-.08798),(-.10898,.97291,-.08798),(-.49693,.95898,-.24696),(-.45383,.77125,-.08798),(-.09543,.86695,-.08798),(-.46385,.76807,-.24696),(-.35458,.61647,-.08798),(-.05478,.78932,-.08798),(-.36461,.61328,-.24696),(-.20724,.51393,-.08798),(-.21727,.51074,-.24696),(-.02988,.47975,-.08798),(.00613,.74171,-.08798),(-.0399,.47656,-.24696),(.0629,.48829,-.08798),(.08048,.72584,-.08798),(.05288,.48511,-.24696),(.14395,.51393,-.08798),(.13393,.51074,-.24696),(.21817,.55787,-.08798),(.15738,.74122,-.08798),(.20815,.55469,-.24696),(.28042,.61816,-.24696),(.256,.42749,-.24696),(.22182,.31641,-.24696),(.16763,.24708,-.28798),(.08243,.22291,-.28798),(.02285,.22827,-.24696),(-.01841,.25391,-.24696),(-.05015,.30029,-.24696),(-.06113,.37428,-.08798),(-.07115,.37109,-.24696),(.25112,1.0636,-.24696),(.26577,.95996,-.24696),(.25185,.85889,-.24696),(.2101,.78418,-.24696),(.14736,.73804,-.24696),(.07045,.72266,-.24696),(-.00389,.73852,-.24696),(-.0648,.78613,-.24696),(-.10545,.86377,-.24696),(-.119,.96973,-.24696),(-.10594,1.07397,-.24696),(-.06675,1.14844,-.24696),(-.00779,1.19312,-.24696),(.06459,1.20801,-.24696),(.14223,1.19153,-.24696),(.20717,1.14209,-.24696)])))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful for Nine.py")
