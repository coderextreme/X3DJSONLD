###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoLOD(center=(41.40380382238266,-71.35152298924505,0.0),range=24601.38,child1Url=['../../tiles/3/newport2-4.x3d'],child2Url=['../../tiles/3/newport2-5.x3d'],child3Url=['../../tiles/3/newport3-4.x3d'],child4Url=['../../tiles/3/newport3-5.x3d'],
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(41.5,-71.5,0),geoSystem=['GDC']),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0,0.05,0)),
            texture=ImageTexture(url=['../../images/2/newport1-2.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(41.30704408055511,-71.43945829755604,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=53,xSpacing=0.0033821273,zDimension=52,zSpacing=0.0037944997,height=[-20,-21,-22,-23,-24,-26,-28,-29,-31,-32,-33,-34,-35,-35,-35,-36,-36,-35,-35,-35,-34,-34,-34,-34,-34,-34,-32,-31,-31,-30,-30,-30,-30,-30,-30,-30,-31,-31,-31,-31,-32,-32,-33,-33,-34,-35,-36,-36,-35,-34,-34,-34,-34,-20,-21,-22,-24,-25,-26,-28,-30,-31,-32,-33,-34,-34,-35,-35,-35,-35,-35,-35,-34,-34,-33,-34,-34,-35,-33,-32,-31,-30,-30,-29,-29,-29,-29,-30,-30,-30,-30,-30,-30,-30,-31,-32,-33,-33,-34,-35,-34,-34,-33,-34,-34,-34,-20,-20,-20,-22,-24,-26,-29,-31,-32,-33,-33,-34,-34,-35,-35,-35,-35,-35,-34,-34,-34,-33,-34,-34,-35,-33,-31,-30,-30,-29,-29,-29,-29,-29,-29,-29,-29,-30,-30,-30,-30,-30,-31,-32,-32,-33,-34,-34,-34,-34,-34,-35,-35,-21,-22,-23,-24,-25,-27,-29,-31,-32,-33,-34,-34,-34,-34,-35,-35,-35,-34,-34,-34,-34,-34,-34,-33,-32,-31,-31,-30,-29,-29,-29,-29,-29,-29,-29,-29,-29,-29,-29,-29,-30,-30,-30,-31,-32,-33,-34,-34,-35,-35,-35,-35,-35,-21,-22,-23,-25,-26,-28,-30,-32,-32,-33,-33,-33,-33,-33,-34,-34,-34,-34,-34,-33,-34,-34,-33,-32,-31,-30,-30,-30,-29,-29,-28,-28,-28,-29,-29,-29,-29,-29,-29,-30,-30,-30,-31,-32,-32,-33,-33,-33,-33,-34,-34,-34,-35,-22,-22,-24,-26,-28,-29,-31,-32,-32,-33,-33,-33,-33,-32,-33,-34,-34,-34,-34,-34,-35,-35,-34,-32,-30,-29,-29,-29,-29,-28,-28,-28,-28,-28,-28,-28,-29,-29,-29,-30,-30,-31,-31,-32,-32,-32,-32,-32,-32,-32,-33,-33,-34,-23,-24,-25,-27,-29,-30,-31,-32,-32,-32,-33,-33,-33,-33,-33,-33,-34,-34,-34,-34,-35,-36,-34,-32,-30,-29,-29,-29,-29,-28,-28,-28,-28,-28,-28,-28,-28,-29,-29,-29,-29,-29,-30,-30,-30,-30,-31,-31,-31,-31,-32,-32,-32,-24,-25,-27,-29,-30,-31,-31,-32,-32,-32,-33,-32,-33,-34,-34,-34,-34,-34,-35,-35,-35,-35,-35,-32,-30,-31,-31,-30,-30,-29,-30,-33,-28,-32,-30,-28,-28,-29,-29,-29,-29,-29,-29,-29,-29,-30,-30,-30,-30,-30,-30,-31,-31,-26,-28,-29,-30,-30,-31,-31,-32,-32,-32,-33,-33,-34,-34,-34,-34,-34,-34,-34,-34,-35,-35,-34,-33,-31,-31,-31,-31,-31,-31,-30,-30,-29,-29,-28,-28,-28,-28,-29,-29,-29,-29,-29,-29,-29,-29,-29,-29,-29,-29,-30,-30,-30,-27,-29,-29,-30,-30,-31,-31,-32,-32,-32,-33,-33,-33,-34,-34,-34,-34,-34,-34,-34,-34,-34,-35,-34,-32,-32,-32,-32,-33,-34,-34,-32,-30,-29,-29,-28,-28,-28,-29,-29,-29,-29,-29,-29,-29,-29,-29,-29,-29,-28,-29,-29,-29,-27,-29,-29,-30,-30,-31,-31,-32,-32,-32,-33,-33,-33,-34,-34,-34,-34,-34,-33,-33,-34,-34,-33,-33,-33,-32,-32,-33,-34,-34,-35,-33,-31,-30,-29,-29,-29,-29,-29,-29,-29,-29,-29,-29,-29,-29,-29,-28,-28,-28,-28,-28,-28,-26,-28,-29,-30,-31,-31,-32,-32,-32,-33,-33,-33,-33,-34,-34,-34,-34,-34,-34,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-34,-34,-33,-33,-32,-32,-32,-32,-31,-31,-31,-30,-30,-30,-29,-29,-29,-29,-28,-28,-28,-28,-29,-26,-27,-28,-29,-31,-31,-32,-32,-32,-33,-33,-33,-33,-34,-34,-34,-34,-34,-34,-34,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-34,-34,-34,-34,-33,-33,-31,-31,-30,-30,-30,-29,-29,-29,-28,-28,-28,-28,-28,-24,-23,-27,-29,-31,-31,-32,-32,-32,-32,-33,-33,-33,-33,-34,-34,-34,-34,-34,-34,-33,-32,-32,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-32,-31,-31,-31,-30,-29,-29,-29,-29,-29,-29,-23,-21,-24,-27,-31,-31,-32,-32,-32,-32,-32,-33,-33,-33,-33,-34,-34,-34,-34,-34,-34,-34,-34,-34,-34,-34,-34,-34,-34,-33,-33,-33,-33,-33,-33,-33,-33,-32,-33,-33,-33,-33,-32,-32,-32,-32,-31,-30,-30,-29,-29,-29,-29,-22,-22,-23,-27,-31,-31,-32,-32,-32,-32,-32,-32,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-34,-34,-34,-34,-34,-34,-33,-33,-33,-33,-33,-33,-33,-32,-32,-33,-33,-32,-32,-32,-31,-31,-30,-30,-29,-29,-29,-29,-29,-23,-22,-22,-27,-31,-32,-32,-32,-32,-32,-32,-32,-32,-32,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-34,-34,-34,-34,-34,-33,-33,-32,-33,-32,-33,-32,-32,-32,-32,-31,-31,-31,-31,-31,-30,-29,-29,-29,-28,-28,-24,-22,-24,-28,-30,-31,-32,-32,-32,-32,-32,-32,-32,-33,-33,-33,-33,-33,-33,-33,-33,-32,-32,-32,-32,-33,-33,-33,-34,-34,-34,-34,-34,-33,-33,-32,-32,-33,-32,-32,-32,-32,-32,-32,-33,-33,-33,-31,-29,-29,-28,-28,-28,-22,-22,-26,-29,-30,-31,-31,-32,-32,-32,-32,-32,-32,-33,-33,-33,-33,-33,-33,-33,-32,-32,-32,-32,-32,-32,-32,-33,-33,-34,-34,-34,-34,-34,-34,-33,-33,-33,-32,-32,-32,-32,-32,-32,-32,-31,-31,-30,-29,-28,-28,-28,-28,-20,-25,-27,-29,-30,-31,-31,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-31,-31,-31,-31,-32,-32,-33,-33,-34,-33,-33,-33,-33,-33,-33,-33,-33,-32,-32,-32,-32,-32,-32,-31,-30,-30,-29,-28,-28,-28,-28,-26,-28,-29,-30,-30,-31,-31,-31,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-32,-31,-31,-31,-31,-31,-31,-31,-32,-33,-33,-33,-33,-33,-33,-33,-33,-33,-32,-32,-32,-32,-32,-32,-31,-30,-30,-29,-29,-28,-28,-28,-28,-28,-29,-29,-30,-30,-30,-31,-31,-31,-31,-31,-31,-32,-31,-32,-32,-32,-32,-32,-32,-32,-31,-31,-31,-31,-31,-31,-31,-31,-32,-32,-33,-32,-32,-32,-32,-32,-31,-29,-27,-30,-30,-31,-30,-30,-30,-29,-29,-28,-28,-28,-28,-27,-28,-29,-29,-30,-30,-30,-31,-31,-31,-31,-31,-31,-31,-31,-32,-31,-32,-32,-32,-32,-31,-32,-31,-31,-31,-31,-31,-31,-30,-31,-32,-32,-32,-32,-32,-32,-31,-29,-27,-27,-28,-30,-30,-30,-30,-30,-29,-28,-28,-28,-28,-27,-27,-27,-29,-29,-30,-30,-30,-31,-31,-31,-31,-31,-31,-31,-31,-32,-32,-32,-32,-31,-31,-31,-31,-31,-31,-31,-31,-30,-30,-31,-31,-32,-32,-32,-32,-32,-31,-30,-29,-28,-28,-29,-30,-31,-31,-30,-30,-29,-29,-29,-28,-28,-28,-27,-27,-28,-29,-29,-30,-30,-30,-30,-31,-31,-31,-31,-31,-31,-31,-32,-32,-31,-31,-31,-31,-30,-31,-31,-30,-30,-30,-30,-31,-32,-32,-32,-32,-32,-32,-31,-31,-31,-30,-30,-30,-31,-31,-31,-30,-29,-29,-29,-28,-28,-27,-26,-27,-26,-27,-28,-29,-29,-30,-30,-30,-30,-31,-31,-31,-30,-31,-31,-31,-31,-31,-31,-30,-30,-29,-27,-29,-30,-30,-30,-29,-30,-30,-31,-32,-32,-31,-31,-32,-32,-31,-31,-31,-30,-30,-30,-30,-30,-29,-28,-27,-26,-26,-26,-26,-26,-25,-27,-27,-28,-29,-29,-30,-30,-30,-30,-31,-30,-31,-30,-31,-31,-31,-31,-30,-30,-30,-28,-29,-30,-30,-29,-30,-29,-27,-26,-30,-31,-31,-32,-32,-32,-32,-31,-31,-30,-30,-30,-29,-29,-29,-28,-27,-27,-27,-26,-26,-25,-25,-24,-25,-26,-27,-28,-28,-29,-29,-30,-30,-30,-30,-31,-30,-30,-30,-30,-31,-30,-30,-29,-30,-29,-29,-29,-24,-29,-27,-25,-29,-29,-30,-31,-31,-31,-32,-31,-31,-30,-30,-29,-29,-28,-27,-28,-27,-27,-27,-26,-26,-25,-25,-25,-23,-24,-25,-26,-27,-27,-28,-28,-29,-29,-30,-30,-30,-30,-30,-30,-30,-30,-30,-29,-29,-29,-29,-28,-28,-26,-24,-25,-27,-29,-27,-29,-30,-31,-31,-31,-31,-30,-30,-29,-29,-28,-27,-27,-27,-26,-26,-26,-26,-25,-25,-25,-25,-21,-23,-24,-24,-25,-26,-26,-26,-28,-29,-29,-29,-29,-29,-29,-29,-29,-29,-29,-29,-29,-28,-28,-27,-26,-24,-24,-27,-27,-28,-24,-26,-30,-30,-30,-30,-31,-30,-29,-29,-28,-28,-27,-27,-26,-26,-25,-25,-25,-25,-25,-25,-24,-20,-21,-23,-23,-24,-25,-25,-26,-27,-28,-28,-29,-29,-29,-29,-28,-28,-28,-28,-28,-28,-27,-26,-26,-25,-19,-17,-21,-26,-28,-21,-26,-28,-28,-29,-29,-29,-29,-29,-28,-28,-27,-27,-26,-26,-25,-25,-25,-24,-24,-24,-24,-24,-18,-19,-21,-22,-23,-23,-24,-24,-25,-26,-27,-28,-28,-28,-26,-23,-23,-27,-28,-28,-27,-27,-25,-24,-24,-20,-23,-19,-24,-26,-22,-23,-26,-27,-28,-28,-28,-28,-28,-28,-28,-27,-26,-25,-25,-25,-25,-24,-24,-24,-24,-24,-24,-15,-17,-19,-20,-21,-22,-23,-23,-24,-25,-26,-26,-27,-27,-26,-22,-21,-25,-26,-26,-26,-26,-25,-23,-23,-24,-24,-20,-17,-26,-27,-27,-25,-25,-26,-26,-27,-27,-27,-27,-27,-27,-26,-25,-25,-24,-24,-24,-24,-24,-24,-24,-24,-12,-10,-18,-19,-19,-21,-21,-22,-23,-23,-25,-25,-26,-26,-25,-25,-25,-24,-25,-26,-26,-26,-24,-16,-15,-21,-21,-16,-17,-24,-25,-26,-26,-25,-23,-25,-26,-26,-23,-22,-26,-27,-26,-25,-24,-24,-24,-24,-24,-23,-23,-23,-24,-9,-6,-15,-12,-18,-19,-20,-20,-21,-22,-23,-24,-25,-25,-24,-23,-20,-23,-25,-26,-26,-24,-17,-17,-12,-17,-15,-6,-15,-16,-22,-23,-21,-21,-21,-23,-24,-24,-20,-18,-25,-25,-25,-24,-24,-23,-23,-23,-23,-23,-23,-23,-23,-1,-3,-10,-15,-16,-18,-18,-19,-20,-21,-17,-23,-24,-25,-25,-24,-24,-24,-25,-26,-26,-22,-17,-12,-6,-10,-8,-20,-20,-20,-20,-21,-21,-20,-21,-22,-22,-17,-21,-22,-24,-23,-23,-23,-22,-23,-22,-23,-23,-22,-21,-18,-17,0,0,0,-6,-16,-17,-18,-18,-19,-18,-18,-13,-23,-24,-25,-26,-27,-28,-29,-27,-25,-23,-20,-8,-4,-7,-4,-2,-14,-17,-17,-17,-19,-19,-19,-18,-14,-12,-12,-20,-21,-22,-22,-22,-22,-22,-22,-22,-21,-21,-19,-14,-14,0,0,0,-4,-13,-15,-16,-17,-18,-18,-19,-9,-4,-20,-24,-28,-35,-34,-31,-26,-24,-23,-17,-9,-1,-2,-2,-2,-4,-14,-10,-14,-15,-14,-15,-15,-10,-7,-10,-12,-18,-19,-20,-21,-21,-22,-21,-21,-21,-20,-19,-12,-12,0,0,0,0,-9,-14,-15,-16,-17,-17,-18,-7,0,-1,-16,-25,-36,-35,-34,-29,-24,-22,-19,-11,0,0,0,-1,-4,-1,-1,-4,-7,-4,-10,-10,-9,0,0,-4,-16,-17,-18,-16,-20,-21,-20,-20,-19,-19,-18,-13,-11,0,0,0,0,-2,-13,-14,-15,-15,-16,-15,-6,0,0,0,-18,-34,-32,-36,-37,-33,-33,-16,-9,0,0,0,0,0,0,-1,0,0,-2,-5,-3,0,0,0,0,-9,-13,-15,-13,-19,-19,-19,-19,-19,-19,-18,-15,-14,0,0,0,0,-6,-11,-12,-13,-14,-15,-17,-7,0,0,0,-11,-20,-32,-29,-35,-41,-36,-6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,-12,-9,-17,-18,-19,-18,-18,-18,-18,-17,-17,0,0,0,-4,-7,-9,-11,-12,-13,-14,-16,-12,0,0,0,-4,-1,-25,-29,-27,-32,-38,-45,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,-5,-8,-11,-15,-16,-17,-17,-17,-17,-17,-16,-15,0,0,0,-3,-6,-6,-10,-11,-12,-13,-15,-17,-6,0,0,0,0,-8,-30,-31,-28,-32,-41,-46,-28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3,-12,-13,-13,-14,-15,-16,-16,-16,-16,-16,0,0,0,0,-2,0,-1,-9,-12,-15,-14,-18,-2,0,0,0,0,-2,-17,-19,-25,-27,-29,-37,-47,-47,-17,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,-4,-9,-10,-11,-11,-12,-13,-14,-14,-15,-15,0,0,0,0,0,0,0,-7,-12,-14,-13,-14,-5,0,0,0,0,-11,-11,0,-8,-20,-28,-34,-35,-38,-38,-35,-7,0,0,-4,-4,-1,0,0,0,0,0,0,0,0,-5,-6,-7,-8,-8,-8,-7,-11,-12,-13,-13,0,0,0,0,0,0,0,-7,-11,-10,-11,-11,-8,0,0,0,-1,-8,0,0,0,0,0,0,-1,-24,-47,-46,-28,-4,0,-7,-7,-5,-4,0,0,0,0,0,0,0,-2,-5,-5,-6,-7,-4,-2,-9,-9,-10,-10,0,0,0,0,0,0,0,-7,-7,-9,-15,-16,-3,0,0,0,-1,-4,0,0,0,0,0,0,-4,-2,-46,-46,-33,-19,-10,-12,-7,-2,-5,-5,0,0,0,0,0,0,-2,-3,-4,-4,-4,-1,0,0,-7,-7,-7,0,0,0,0,0,0,-1,-8,-12,-14,-16,-10,0,0,0,0,0,-1,0,0,0,0,0,-1,-12,-30,-42,-40,-33,-20,-16,-15,-7,-2,-6,-5,0,0,0,0,0,0,0,0,-1,-1,0,0,0,0,0,-3,-3,0,0,0,0,0,0,-1,-11,-13,-14,-19,-6,0,-1,0,0,-1,-1,0,0,0,0,0,-11,-25,-32,-37,-38,-30,-17,-13,-16,-7,-4,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-8,-11,-14,-14,-20,-14,-2,-5,-4,-2,0,0,0,0,0,0,-8,-16,-29,-32,-38,-38,-16,-1,-7,-16,-11,-6,-5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-8,-10,-18,-12,-5,-10,-9,-7,-5,-4,0,0,0,0,0,0,-4,-14,-32,-33,-37,-41,-7,0,-4,-10,-12,-7,-3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-8,-10,-18,-12,-5,-10,-10,-7,-5,-4,0,0,0,0,0,0,-4,-14,-32,-34,-37,-41,-7,0,-5,-8,-12,-7,-3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
