###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    Shape(
      appearance=Appearance(
        material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
        texture=ImageTexture(url=['../../images/5/singapore4-8.jpg'],repeatS=False,repeatT=False)),
      geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.247190112711976,103.70474027303216,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=36,xSpacing=4.103724E-4,zDimension=22,zSpacing=4.1579583E-4,height=[14,18,23,27,31,35,34,32,32,34,33,31,29,28,36,51,60,61,63,63,64,64,64,64,63,63,62,62,61,60,59,58,57,56,51,42,17,23,28,32,35,35,35,34,34,35,34,32,29,26,32,45,55,60,63,63,63,64,64,64,64,63,63,62,62,61,60,59,57,56,53,50,19,27,32,35,36,36,35,35,35,34,33,31,26,21,25,38,50,57,63,63,63,63,64,64,64,64,63,63,62,61,61,59,57,56,54,53,22,31,35,35,36,36,35,35,35,34,31,26,19,13,17,30,43,55,63,63,63,63,63,64,64,64,64,63,63,62,62,60,57,56,54,53,25,34,36,36,36,35,35,34,33,32,27,19,13,8,11,22,35,50,59,61,63,63,63,63,64,64,64,64,63,63,62,60,58,56,54,53,32,35,36,36,35,35,34,33,30,26,20,12,7,6,9,16,26,40,51,58,63,63,63,63,63,64,64,64,64,63,62,60,59,56,53,53,35,35,35,35,34,33,32,31,26,20,13,6,4,5,8,11,19,30,42,53,59,61,63,63,63,63,64,65,65,64,63,61,58,55,53,53,35,35,34,33,33,32,29,25,19,12,7,4,4,6,8,11,16,23,32,43,52,59,63,63,63,63,63,64,65,66,65,60,55,53,53,53,32,34,33,31,30,29,25,19,12,5,3,4,5,6,8,11,14,18,25,35,44,54,60,62,63,63,63,63,64,65,64,58,53,53,53,53,29,30,30,29,27,23,17,11,7,4,3,4,5,6,8,11,14,17,22,29,36,46,54,59,63,63,63,63,61,57,54,54,53,53,53,53,25,27,27,26,22,17,11,5,3,3,3,4,5,6,8,11,14,17,21,24,30,39,47,55,61,62,63,62,59,52,48,50,52,53,53,53,20,24,24,20,16,10,7,4,3,3,3,4,5,6,8,11,14,17,21,24,28,34,39,46,53,59,62,60,56,52,49,48,48,49,51,52,16,21,19,15,9,5,3,4,3,3,3,4,4,6,8,11,14,18,21,25,28,29,33,39,46,54,59,56,53,52,50,48,46,47,49,51,11,14,12,9,6,4,4,4,4,3,3,3,4,6,8,11,14,17,21,26,29,30,32,35,38,42,46,48,49,50,50,48,46,47,47,48,7,8,6,3,3,4,5,5,4,3,3,3,4,6,8,11,14,18,22,27,30,30,31,31,31,31,33,39,44,47,48,47,46,45,45,46,7,7,6,4,4,4,5,5,5,3,3,3,3,4,8,13,17,21,25,29,31,31,31,31,30,29,29,32,35,39,43,45,46,45,45,46,8,7,6,4,5,5,6,6,5,4,3,3,3,4,8,15,20,24,27,30,31,31,31,31,30,28,26,26,27,32,37,41,45,45,45,45,8,8,7,5,6,7,8,8,6,4,3,3,3,4,8,14,20,26,31,34,34,29,26,25,24,24,23,22,23,25,28,34,38,42,44,45,9,8,7,7,8,8,9,9,7,3,2,2,3,5,8,12,19,28,35,37,34,26,21,19,19,20,21,19,18,18,20,25,31,38,43,45,8,8,8,8,8,9,9,9,8,6,4,3,4,5,8,11,16,21,25,26,26,21,18,18,17,16,16,15,14,14,15,18,23,31,38,42,9,8,8,9,9,9,9,9,9,8,7,5,4,5,7,10,12,12,13,15,15,15,15,16,16,13,10,10,11,10,10,10,13,22,31,39,11,9,9,10,9,9,9,9,9,8,8,6,5,5,5,7,8,8,9,10,11,11,9,7,5,5,6,6,6,6,6,6,10,24,37,43],
        geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])))])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
