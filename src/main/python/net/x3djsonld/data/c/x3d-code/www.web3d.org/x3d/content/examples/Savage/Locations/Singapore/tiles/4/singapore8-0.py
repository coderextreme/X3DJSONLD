###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_80',geoSystem=['GDC'],position=(1.3607023736258976,103.60419903412902,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.3607023736258976,103.60419903412902,0.0),range=4101.627,child1Url=['../../tiles/5/singapore16-0.x3d'],child2Url=['../../tiles/5/singapore16-1.x3d'],child3Url=['../../tiles/5/singapore17-0.x3d'],child4Url=['../../tiles/5/singapore17-1.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore8-0.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.3519706612479037,103.589836,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[11,13,12,10,9,10,10,10,12,15,13,11,11,10,9,8,10,10,9,10,12,12,11,10,11,9,7,10,12,12,13,14,13,10,7,5,7,11,13,12,10,10,10,9,10,13,16,14,11,11,12,11,10,10,9,9,10,12,11,10,10,12,9,5,7,11,11,14,14,13,10,6,7,10,12,13,12,11,12,10,10,11,13,16,14,11,11,13,13,12,10,9,10,10,12,10,10,10,12,9,5,6,9,10,14,14,13,9,6,10,13,12,14,12,12,14,13,11,12,14,15,13,11,10,13,14,12,9,9,10,10,11,9,9,10,10,8,6,7,8,9,13,15,13,9,7,13,17,12,13,12,13,16,15,13,14,15,13,13,11,10,13,14,11,9,10,10,10,11,8,9,10,8,8,7,8,7,8,13,14,13,9,10,17,19,12,12,12,15,16,14,13,15,14,11,12,10,11,14,15,11,10,10,11,11,10,7,8,9,7,7,9,9,8,7,11,14,14,10,13,18,19,11,12,13,15,16,14,13,15,13,10,12,10,11,14,15,12,11,11,13,12,10,7,8,7,6,7,9,10,9,8,10,14,14,12,16,18,17,11,12,13,16,16,14,14,14,12,10,12,10,12,14,14,13,13,12,13,13,10,7,7,7,6,7,9,10,10,8,9,12,13,13,16,17,16,11,12,13,16,17,16,15,14,12,10,12,11,13,15,14,15,14,13,14,13,11,7,7,7,7,8,9,9,10,9,8,9,11,14,15,15,15,11,12,13,16,16,16,15,15,13,11,13,11,14,18,17,16,15,14,14,12,11,8,7,6,7,8,8,8,10,9,8,8,9,13,16,14,13,11,12,12,15,16,16,16,16,15,13,14,13,15,22,22,19,17,15,14,12,12,9,7,6,8,8,8,8,10,9,9,8,8,12,15,14,13,11,12,11,14,15,16,17,16,17,17,18,14,17,25,28,25,21,15,13,12,12,10,8,7,9,9,9,8,11,9,10,8,7,10,13,14,13,10,11,11,13,13,15,17,17,20,23,22,16,18,28,33,32,25,16,13,12,12,11,9,8,10,10,9,10,11,10,10,9,7,7,11,14,14,10,10,10,11,10,12,15,18,26,30,26,17,17,27,37,38,29,17,13,13,12,10,8,9,11,11,11,11,11,11,11,9,7,7,8,12,13,8,8,9,9,8,9,12,19,31,36,29,18,16,24,38,43,33,18,14,14,12,9,8,10,11,13,12,11,12,12,11,9,8,7,7,9,11,8,7,9,8,6,7,10,19,32,36,28,18,18,25,38,47,36,21,17,15,12,9,9,11,11,14,14,12,12,12,11,9,8,6,6,7,8,8,7,9,8,6,6,10,19,30,33,27,18,20,27,39,49,39,23,20,18,13,10,11,12,11,14,15,12,11,11,10,10,9,6,5,5,6,8,7,8,8,6,7,10,18,26,29,25,19,22,31,42,50,40,23,24,20,14,11,12,12,11,14,15,11,10,10,10,10,8,5,4,4,5,8,7,7,8,8,9,9,15,23,25,23,20,23,33,46,51,38,22,26,24,16,13,14,11,12,14,14,11,9,9,9,10,8,5,4,4,5,10,7,7,9,10,10,10,12,18,21,22,21,22,32,45,52,37,23,24,22,16,14,15,11,12,14,13,11,9,9,9,10,9,5,4,4,5,12,8,7,10,12,12,11,11,14,18,20,20,20,27,43,53,38,24,20,17,17,16,15,13,12,13,12,11,11,9,9,9,9,6,5,5,5,14,10,8,10,13,14,13,13,13,16,19,19,19,26,41,55,42,25,19,18,19,21,20,16,15,13,12,13,14,12,9,8,9,7,5,5,5,16,12,10,10,13,14,15,15,14,16,18,17,21,28,42,57,46,26,21,25,24,28,28,22,21,15,12,16,19,17,11,8,8,8,6,5,6,16,14,12,10,12,15,16,16,14,17,18,17,21,29,41,56,48,27,22,32,30,34,36,30,25,16,14,18,23,22,14,8,7,7,6,6,7,14,13,12,11,12,15,16,16,14,18,19,17,20,28,39,52,46,28,24,38,37,38,43,38,30,18,18,19,25,27,18,9,7,7,7,7,7,13,13,13,12,12,15,18,16,15,18,20,17,19,26,36,46,42,27,24,43,43,43,49,44,31,19,22,22,26,32,23,13,8,7,7,7,8,12,14,15,12,10,16,21,19,16,19,21,17,18,23,31,37,34,24,24,43,47,48,52,46,29,20,28,27,28,36,29,18,10,8,7,7,8,12,14,16,14,10,15,22,22,20,21,22,19,18,21,28,29,28,22,25,42,47,52,53,45,29,22,32,31,30,37,32,22,13,8,7,7,8,12,14,16,15,12,13,19,24,26,25,24,22,21,20,24,24,22,22,26,39,42,53,51,40,33,26,33,34,31,35,31,24,14,9,7,7,8,13,14,15,17,15,12,18,26,30,28,26,25,25,21,22,21,19,21,27,36,35,49,47,39,38,31,36,38,31,31,28,22,14,9,7,7,8,13,14,15,18,16,12,17,26,31,29,26,28,29,24,23,22,19,21,26,30,28,37,40,42,48,39,42,42,28,26,23,16,11,9,8,9,9,15,15,17,20,18,13,16,26,31,30,27,30,32,26,23,22,19,21,25,26,23,29,35,44,54,45,46,44,26,22,19,12,9,10,10,10,10,17,19,20,22,19,14,16,26,31,30,28,32,33,26,22,21,19,21,24,21,21,28,32,43,54,47,49,44,26,20,17,13,12,12,12,12,11,18,21,23,24,20,14,16,27,31,29,28,33,32,25,21,19,19,21,22,19,22,30,33,46,54,46,47,42,25,19,17,15,14,13,13,12,12,18,20,24,26,21,14,17,29,32,28,27,33,29,22,18,17,18,20,20,21,28,39,43,52,51,40,38,36,25,18,17,19,17,12,11,11,11,18,19,24,27,20,14,17,29,32,26,25,32,27,20,17,16,17,17,18,21,32,47,53,58,51,38,33,31,24,18,18,22,19,12,9,10,10,16,17,21,23,17,12,14,25,30,24,20,27,27,21,18,18,18,15,17,19,31,51,59,63,55,44,36,29,23,18,21,25,20,12,9,9,10,15,15,19,20,14,10,11,21,27,22,17,24,27,23,19,20,17,13,15,17,30,52,60,62,57,49,38,29,22,18,23,28,22,14,9,8,9,15,15,17,17,14,9,10,18,25,22,17,23,28,27,22,20,17,13,13,17,31,46,49,52,57,49,36,29,23,18,26,30,23,15,9,7,8,16,15,17,17,15,10,9,14,21,21,17,22,29,30,23,19,17,13,13,16,31,40,38,43,57,50,37,32,25,19,27,30,24,16,10,7,7,16,16,20,20,19,15,10,10,16,19,18,23,29,30,23,18,17,14,14,16,28,35,33,41,60,54,43,38,28,19,24,27,22,17,11,7,8,15,16,21,24,23,19,11,7,11,17,20,23,27,28,21,17,17,15,14,16,26,33,33,44,63,57,47,42,28,18,21,23,20,16,11,8,8,14,16,21,23,23,19,11,7,10,17,21,22,24,25,19,17,18,16,14,16,25,35,40,51,67,57,43,37,26,18,21,21,18,14,11,9,9,14,16,20,22,22,19,11,7,10,16,21,20,21,22,17,17,19,18,15,17,25,38,47,56,68,56,37,29,22,18,20,19,15,13,12,11,11],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
