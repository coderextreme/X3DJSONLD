###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    Shape(
      appearance=Appearance(
        material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
        texture=ImageTexture(url=['../../images/5/singapore3-11.jpg'],repeatS=False,repeatT=False)),
      geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.238458400333982,103.74782937541922,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=3.9897318E-4,zDimension=23,zSpacing=3.96896E-4,height=[-2,-1,0,2,6,8,11,10,9,9,8,6,2,-12,-32,-43,-43,-42,-41,-38,-35,-32,-29,-26,-24,-21,-18,-16,-15,-13,-7,-1,0,0,3,6,8,-6,-1,3,5,6,6,7,6,6,7,7,7,4,-10,-33,-44,-43,-41,-40,-38,-35,-32,-29,-27,-24,-23,-22,-22,-22,-20,-9,-1,0,3,5,8,8,-12,-5,1,4,6,5,5,5,5,6,6,6,4,-6,-22,-33,-39,-41,-39,-37,-35,-32,-30,-28,-28,-28,-28,-29,-31,-30,-20,-12,-5,0,3,5,4,-19,-9,0,3,5,4,4,4,5,4,4,4,3,-2,-11,-23,-36,-41,-39,-37,-34,-32,-31,-31,-32,-33,-34,-35,-40,-41,-32,-23,-12,-2,0,3,1,-10,-4,1,2,2,2,2,3,4,4,4,4,3,0,-6,-13,-19,-24,-22,-21,-20,-22,-29,-34,-35,-36,-38,-39,-40,-39,-35,-30,-21,-13,-9,-6,-8,-2,1,2,1,0,0,0,1,3,3,3,3,2,1,0,-1,-4,-5,-5,-5,-5,-12,-28,-38,-39,-40,-42,-42,-39,-37,-38,-38,-30,-23,-20,-18,-20,-4,-2,-1,-2,-2,0,0,1,2,3,2,2,1,0,-1,-3,-4,-5,-5,-4,-4,-12,-28,-40,-40,-41,-42,-41,-39,-37,-35,-33,-28,-22,-21,-20,-24,-6,-7,-8,-7,-4,-1,1,1,2,2,2,1,0,-1,-4,-4,-4,-5,-5,-4,-4,-11,-29,-41,-42,-42,-41,-40,-39,-38,-33,-28,-25,-22,-22,-23,-27,-10,-11,-11,-6,-1,1,3,3,2,2,2,0,-1,-3,-4,-5,-5,-4,-3,-3,-3,-11,-30,-42,-42,-41,-40,-39,-36,-34,-29,-25,-23,-22,-23,-24,-27,-14,-14,-13,-5,2,5,5,5,3,2,1,0,-3,-4,-4,-5,-4,-3,-2,-2,-2,-11,-30,-42,-41,-40,-39,-38,-34,-29,-25,-22,-22,-22,-23,-25,-26,-13,-13,-11,0,9,9,6,4,4,3,3,1,0,-2,-4,-3,-2,-2,-1,-1,-1,-8,-24,-35,-38,-39,-37,-34,-30,-25,-23,-22,-22,-22,-24,-25,-26,-11,-10,-7,5,17,14,6,3,3,4,4,4,3,0,-3,-3,0,0,0,0,0,-5,-17,-27,-34,-38,-34,-29,-25,-22,-22,-22,-22,-22,-24,-25,-26,-10,-5,1,13,23,16,6,2,1,3,6,6,5,3,0,0,0,0,0,0,0,-3,-12,-20,-29,-34,-30,-25,-23,-22,-22,-22,-22,-22,-24,-25,-26,-7,1,11,22,30,20,7,1,0,2,8,9,8,7,6,4,1,0,0,0,0,-1,-6,-13,-24,-29,-25,-22,-22,-22,-22,-22,-22,-22,-24,-25,-26,0,6,15,22,27,21,12,6,2,3,8,9,8,6,3,1,0,0,0,0,0,-1,-3,-9,-19,-25,-23,-22,-22,-22,-22,-22,-22,-22,-23,-25,-26,6,11,16,19,22,21,20,14,6,6,8,8,7,3,-1,-2,0,0,0,0,0,-1,-2,-6,-16,-22,-22,-22,-22,-22,-22,-22,-22,-22,-23,-24,-25,10,12,14,14,14,17,20,15,9,7,8,7,5,2,-1,-2,-1,-1,-1,-1,-1,-1,-1,-4,-12,-18,-20,-22,-22,-22,-22,-22,-22,-22,-23,-24,-25,10,10,9,8,7,12,16,15,11,9,7,5,3,1,0,-2,-3,-3,-2,-2,-2,-2,-2,-3,-8,-13,-18,-22,-22,-22,-22,-22,-22,-22,-23,-24,-25,6,3,0,0,1,6,12,12,11,9,7,5,3,1,0,-1,-4,-4,-3,-3,-3,-3,-2,-3,-6,-9,-14,-19,-21,-22,-22,-22,-22,-22,-23,-24,-25,1,-6,-12,-9,-3,1,7,9,10,9,7,5,3,1,0,-1,-3,-4,-4,-4,-4,-3,-3,-3,-4,-6,-10,-15,-18,-22,-22,-22,-22,-22,-23,-24,-25,0,-6,-13,-10,-4,0,6,8,7,6,4,3,1,0,0,-1,-2,-4,-5,-4,-4,-4,-4,-4,-4,-4,-7,-10,-13,-16,-16,-16,-16,-16,-18,-20,-21,3,-1,-5,-3,0,3,7,7,5,3,1,0,0,0,0,-1,-2,-3,-4,-5,-5,-4,-4,-4,-4,-4,-4,-4,-5,-6,-6,-6,-6,-6,-10,-13,-14,4,2,0,1,3,5,8,6,2,0,0,-1,-1,-1,-1,-2,-2,-3,-4,-4,-5,-5,-5,-5,-4,-3,-2,-1,-1,-1,-1,-1,-1,-1,-4,-7,-9],
        geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])))])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
