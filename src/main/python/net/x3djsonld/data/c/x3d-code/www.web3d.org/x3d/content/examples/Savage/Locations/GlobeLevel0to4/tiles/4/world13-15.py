###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    Shape(
      appearance=Appearance(
        material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0,0.05,0)),
        texture=ImageTexture(url=['../../images/4/world13-15.jpg'],repeatS=False,repeatT=False)),
      geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(56.20833769188965,157.4583433915838,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=22,xSpacing=1.0714287,zDimension=24,zSpacing=0.48913044,height=[101,1375,1182,717,-369,-3487,-4113,-4701,-4446,-5253,-5393,-2054,-1561,-3355,-3654,-3895,-3548,-3627,-3911,-3912,-3830,-2333,186,1104,180,528,15,378,-3836,-5982,-4531,-5049,-410,-631,-3231,-3090,-3835,-3884,-3885,-3898,-2377,-2291,-2791,-1072,233,1040,442,171,950,123,-3812,-5822,-5329,-69,-419,-2772,-3917,-3223,-3787,-3883,-3885,-3867,-3873,-1565,-1278,-2755,149,871,1308,112,812,42,-3200,-4366,-142,-2557,-3250,-3844,-3903,-2682,-3763,-3847,-3854,-3857,-3853,-3850,-3899,-3809,59,361,1100,561,2681,166,-37,-3019,-3576,-3741,-3995,-3888,-3911,-1803,-3551,-3811,-3834,-3837,-3931,-3837,-3842,-3850,131,101,439,1079,21,171,290,-3217,-3575,-3714,-3835,-3868,-3802,-1782,-3289,-3773,-3803,-3816,-3865,-3831,-3784,-3810,-56,119,607,306,345,217,65,-3228,-3244,-3610,-3648,-3865,-3173,-1266,-1839,-3303,-3753,-3781,-3793,-3808,-3829,-3810,-174,32,105,195,685,136,182,-2884,-3363,-3590,-3669,-3541,-2901,-1484,-1444,-3555,-3668,-3725,-3752,-3789,-3797,-3792,-400,-23,65,120,430,413,-546,-1254,-3440,-3673,-3628,-3520,-2989,-932,-1579,-3596,-3594,-3648,-3716,-3760,-3767,-3798,-220,-90,-325,114,562,272,-4,-262,-4266,-4004,-3611,-3733,-2671,-903,-1533,-3427,-3462,-3639,-3677,-3718,-3744,-3707,-135,-226,-158,-127,244,1187,98,-20,-727,-620,-2168,-3286,-2688,-518,-1824,-3259,-3424,-3606,-3623,-3656,-3758,-3623,-258,-216,-263,-168,-41,685,352,-48,-348,-288,-1870,-2979,-2819,-759,-2577,-3271,-3350,-3478,-3704,-3599,-3571,-3598,-332,-299,-62,-276,-624,248,275,18,2,-53,-775,-803,-149,338,-2439,-2827,-3065,-3240,-3480,-3500,-3189,-3077,-270,-142,-86,-4,-329,-3,143,60,231,170,220,54,1,242,-166,-1452,-1509,-2432,-3171,-3296,-2931,-2404,9,-541,-91,-66,144,-52,-7,88,282,205,289,147,264,208,636,-23,-426,-408,-1058,-2313,-2404,-597,833,-140,-252,-31,459,367,-24,-42,70,95,258,527,494,268,946,443,-15,-221,-367,-1323,-253,-82,571,601,470,170,50,568,406,-269,204,347,109,405,932,700,1265,695,61,377,-191,-299,-74,-90,527,870,1079,761,154,176,191,-50,229,224,224,160,538,959,665,386,542,638,440,1,342,278,494,899,941,753,641,239,601,404,658,100,27,89,213,541,602,386,360,461,516,573,109,312,566,746,1040,883,522,716,761,865,640,696,183,174,269,180,179,445,182,177,139,36,152,9,381,431,967,759,596,798,737,486,436,421,645,273,191,157,54,179,640,425,6,20,31,-8,371,463,783,590,446,446,896,725,798,709,662,313,265,17,29,187,25,1,255,-3,-66,-1,319,312,331,462,388,471,1168,860,619,762,452,457,347,34,7,106,4,26,15,3,61,181,645,263,609,884,261,481,815,713,669,668,493,505,401,85,22,26,29,40,28,1,127,181],
        geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(0.0,0.0,-6378137.0),geoSystem=['GDC'])))])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
