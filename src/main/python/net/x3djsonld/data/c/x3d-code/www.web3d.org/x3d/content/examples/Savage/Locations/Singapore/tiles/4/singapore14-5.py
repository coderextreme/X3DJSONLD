###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_145',geoSystem=['GDC'],position=(1.4654829221618253,103.74782937541922,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.4654829221618253,103.74782937541922,0.0),range=4101.627,child1Url=['../../tiles/5/singapore28-10.x3d'],child2Url=['../../tiles/5/singapore28-11.x3d'],child3Url=['../../tiles/5/singapore29-10.x3d'],child4Url=['../../tiles/5/singapore29-11.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore14-5.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.4567512097838313,103.7334663412902,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[12,11,10,9,8,8,10,14,13,11,7,-1,-2,2,5,8,9,10,12,17,20,19,21,20,23,34,37,32,25,20,15,9,14,22,31,29,27,12,12,11,10,8,8,9,12,13,12,9,3,1,5,6,9,11,12,16,23,23,22,23,22,24,32,34,30,25,20,15,10,12,20,31,30,27,13,12,11,10,8,8,8,10,14,12,11,8,5,7,7,10,14,15,21,28,27,24,25,25,25,30,32,28,24,20,15,11,10,19,31,31,28,13,12,12,10,8,7,9,10,11,10,10,8,6,9,8,10,13,15,22,30,28,26,28,29,29,33,34,31,26,22,18,12,10,18,31,31,29,14,13,11,11,9,5,10,9,8,8,8,8,7,10,9,10,11,14,23,31,28,27,32,33,33,38,38,34,28,23,22,14,11,17,30,31,30,14,15,12,11,10,9,10,9,8,6,7,8,7,10,10,10,11,14,20,27,27,29,34,34,34,36,37,33,28,24,20,16,16,22,30,32,33,15,16,13,10,12,14,11,9,9,6,5,9,8,9,10,9,11,14,16,22,27,31,36,36,33,33,35,32,28,25,18,18,21,28,31,32,36,13,18,18,13,15,16,12,8,9,7,6,10,8,8,10,10,14,14,16,22,27,34,38,35,32,30,31,30,27,22,18,21,28,31,31,31,35,12,21,23,19,19,18,12,8,9,7,8,10,8,6,8,12,17,16,17,23,28,37,42,35,31,27,26,28,25,19,17,24,36,32,29,30,34,12,22,24,22,20,15,11,8,9,8,8,11,10,7,9,14,19,18,20,26,33,40,41,34,30,25,24,25,22,16,14,24,36,30,27,27,29,13,22,25,25,19,12,9,8,9,8,8,12,14,10,10,16,21,21,23,29,38,42,40,33,27,24,22,21,17,13,11,22,35,26,26,24,23,17,22,26,25,17,10,9,8,9,10,11,17,19,11,10,16,22,23,25,31,39,41,38,32,27,24,22,18,14,10,11,21,32,25,24,21,20,21,22,27,24,15,8,8,8,9,12,15,24,25,14,10,16,22,26,27,32,38,39,35,30,27,25,22,18,11,9,11,20,29,26,22,19,18,25,22,25,21,12,8,8,8,9,13,18,28,27,15,10,15,22,28,30,33,37,37,33,29,26,24,21,17,10,9,13,22,28,27,21,17,16,27,22,22,16,10,8,8,9,10,15,21,32,27,18,12,13,22,30,34,35,35,34,30,27,25,21,18,15,10,11,16,25,28,28,22,14,15,29,22,19,12,9,9,10,12,12,17,23,32,26,18,12,13,21,31,36,38,37,33,28,25,22,19,16,14,11,13,19,26,29,29,18,11,12,30,23,18,10,8,10,12,15,14,18,24,29,24,16,12,14,20,31,40,42,40,35,27,22,19,16,14,14,12,16,22,26,30,29,12,7,8,31,23,17,9,8,11,16,19,18,21,25,28,23,16,13,15,19,29,40,44,43,37,28,20,17,14,13,15,15,18,24,27,33,34,9,7,8,30,23,16,9,10,13,20,24,22,24,26,27,23,18,16,15,19,27,39,46,45,39,29,20,15,12,13,17,19,21,25,29,40,44,11,9,9,28,21,15,9,11,15,23,28,25,26,26,27,23,19,17,17,21,27,38,46,44,39,29,19,13,12,14,19,22,24,27,31,42,44,11,10,10,24,18,12,9,11,17,25,30,28,27,26,27,24,18,18,20,24,29,36,42,42,38,27,18,14,14,17,22,25,27,30,32,38,35,11,11,10,21,16,10,9,12,18,25,31,31,29,27,27,24,18,18,23,27,30,34,37,37,35,25,17,14,16,20,24,27,29,31,32,32,26,11,12,11,17,13,9,10,12,16,23,30,33,33,30,27,23,17,20,26,28,30,31,31,31,30,23,17,16,19,24,28,28,31,32,31,24,19,12,13,14,16,12,10,10,12,16,22,30,36,36,33,28,23,18,22,29,30,30,29,27,26,25,21,17,17,21,27,30,29,29,30,28,18,14,14,16,18,18,14,12,10,13,17,24,33,40,40,35,28,23,22,26,33,34,31,28,24,22,21,20,17,19,25,30,30,27,25,25,23,15,13,15,19,22,20,16,15,11,12,17,25,34,42,42,36,28,24,24,30,36,37,33,27,23,20,18,18,17,21,29,33,30,25,22,21,19,13,13,16,23,26,24,19,16,10,11,17,25,34,42,40,33,28,23,25,32,38,39,34,28,24,20,17,16,17,24,32,35,32,27,22,19,17,12,11,15,23,26,28,22,17,11,9,17,25,33,41,39,32,27,23,25,33,40,41,36,29,25,21,17,15,17,26,36,37,34,29,22,17,15,11,11,14,23,27,30,24,18,11,10,17,26,32,39,38,32,26,23,25,33,38,40,36,30,27,23,18,15,18,29,38,36,33,28,22,16,15,11,12,16,26,29,33,25,18,11,11,18,27,30,36,38,32,26,23,25,32,37,39,36,31,28,24,18,16,19,30,38,35,32,28,22,17,15,12,14,17,28,31,34,26,18,11,11,18,27,31,34,36,32,27,25,25,32,38,38,34,29,25,21,18,19,22,30,36,33,31,27,21,17,16,13,14,18,27,31,34,27,18,11,11,19,27,31,33,35,32,29,27,25,32,39,37,32,27,22,18,18,23,26,29,34,31,29,25,19,18,18,15,15,18,26,30,35,27,18,11,11,20,26,30,33,35,33,32,29,28,34,40,37,30,25,20,17,20,29,34,34,32,27,25,22,18,18,18,19,16,18,23,27,35,27,19,10,11,21,25,30,34,35,34,35,32,30,37,40,36,29,24,19,17,21,33,41,38,30,24,22,20,17,17,18,22,18,18,20,24,33,26,18,11,12,19,24,29,33,35,36,38,34,32,38,41,37,29,23,18,17,23,33,40,37,31,24,20,18,16,17,21,27,21,17,18,22,30,25,16,11,13,17,22,28,32,35,40,41,37,34,39,42,37,29,23,17,17,24,33,37,36,32,25,19,16,14,18,25,32,24,16,17,20,29,24,17,12,12,16,22,26,29,32,37,41,38,36,41,43,38,29,22,19,22,29,33,34,35,32,27,20,17,16,21,26,29,22,18,19,22,28,24,17,14,12,16,22,25,27,30,34,40,39,38,42,43,39,29,21,21,28,34,33,32,34,32,28,22,18,17,24,28,26,22,20,22,24,29,24,18,14,13,16,21,23,24,27,33,39,40,39,42,42,37,28,21,24,31,34,32,32,33,30,26,22,20,20,26,29,27,23,21,22,24,30,24,20,15,14,16,19,21,22,25,32,38,40,40,43,41,35,26,21,27,33,32,32,32,31,27,23,21,22,23,28,31,30,26,21,21,24,30,23,18,14,14,16,19,20,22,27,33,39,42,42,41,38,32,25,23,29,34,34,32,32,30,25,21,20,23,25,31,33,35,33,22,22,25,29,23,17,13,13,15,18,20,23,28,34,40,45,45,39,34,28,23,24,31,35,35,34,33,28,23,19,19,22,28,36,36,40,41,25,22,25,30,25,20,15,14,16,20,22,25,30,35,41,47,46,40,34,29,23,24,31,36,36,35,35,31,24,19,20,22,32,39,38,41,41,27,25,28,31,27,24,18,15,17,24,25,26,31,36,43,49,48,41,36,31,24,23,32,39,37,37,37,34,26,20,21,23,36,43,38,41,39,30,28,32],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
