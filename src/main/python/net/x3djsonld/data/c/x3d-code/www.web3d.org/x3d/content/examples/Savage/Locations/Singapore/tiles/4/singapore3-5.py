###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_35',geoSystem=['GDC'],position=(1.273385249845958,103.74782937541922,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.273385249845958,103.74782937541922,0.0),range=4101.627,child1Url=['../../tiles/5/singapore6-10.x3d'],child2Url=['../../tiles/5/singapore6-11.x3d'],child3Url=['../../tiles/5/singapore7-10.x3d'],child4Url=['../../tiles/5/singapore7-11.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore3-5.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.264653537467964,103.7334663412902,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[7,7,6,6,6,6,6,6,5,6,8,5,4,4,6,10,11,9,10,11,12,11,12,15,13,2,2,2,2,2,1,1,0,0,0,0,0,8,7,7,6,6,6,6,5,5,13,24,11,4,5,9,11,10,9,10,11,11,11,13,15,12,4,1,1,1,1,1,1,1,1,1,1,1,8,7,7,6,6,6,6,5,7,20,35,17,6,6,11,11,9,10,11,12,11,11,13,14,10,6,1,1,1,1,1,1,4,3,2,2,2,8,8,7,6,6,6,5,5,13,30,36,22,10,9,11,10,9,10,11,11,11,12,13,12,10,5,1,0,0,0,0,1,8,5,3,3,2,8,8,7,6,6,6,5,6,20,36,35,24,14,11,11,9,10,11,12,11,11,12,13,12,9,5,1,0,0,0,0,1,11,7,3,3,3,7,8,7,6,6,5,5,13,30,36,30,21,12,9,9,9,10,11,11,11,11,12,12,11,9,5,1,0,0,0,0,1,11,9,5,3,3,6,8,7,7,6,5,7,21,37,34,25,17,10,5,7,9,11,12,11,11,12,12,12,10,8,5,2,0,0,0,0,1,10,11,7,3,3,5,7,7,6,6,5,13,29,36,30,21,14,7,2,4,9,11,11,11,11,12,12,12,10,8,5,2,0,0,0,0,0,6,11,9,5,3,4,6,8,6,6,6,20,37,34,25,17,10,3,0,1,8,12,11,11,12,12,12,11,9,7,4,2,0,0,0,0,0,3,10,11,7,5,4,5,9,8,6,12,29,36,30,21,14,7,1,-1,0,8,11,11,11,12,12,12,11,9,7,4,2,0,0,0,0,-1,0,6,11,9,7,4,4,10,9,6,19,37,34,25,17,10,3,-1,-2,0,7,11,11,12,12,12,11,10,9,7,4,2,0,0,0,0,-2,-2,3,10,11,9,6,3,5,8,11,28,37,30,21,13,7,1,-1,-2,0,4,10,12,12,12,12,11,10,8,6,4,3,4,6,6,5,0,-2,0,7,11,10,8,2,1,7,17,37,34,25,17,10,3,-1,-2,-2,0,2,8,12,12,12,11,11,10,8,6,4,4,8,13,13,11,3,-3,-2,4,10,11,8,3,1,9,21,34,29,20,13,7,1,-1,-2,-1,-1,0,8,12,12,11,9,8,7,8,9,7,7,10,14,14,12,7,0,-2,0,7,9,8,4,3,11,25,30,25,16,10,3,-1,-2,-2,-1,-1,0,7,12,12,9,7,5,4,8,12,11,11,12,14,14,13,11,3,-3,-2,4,7,9,6,7,15,26,22,17,12,6,1,-1,-1,-1,0,0,0,5,9,9,6,3,2,2,5,10,12,12,13,13,14,13,12,7,0,-3,0,4,10,8,10,20,27,14,10,9,3,-1,-1,-1,0,0,0,0,2,6,7,3,0,0,0,1,7,12,12,12,12,14,14,12,10,2,-3,-1,0,8,10,13,23,25,11,9,6,1,-1,0,0,0,0,0,0,1,4,5,1,0,0,0,0,4,10,12,12,12,13,14,13,11,6,0,-2,0,5,10,15,28,22,9,8,3,0,0,0,0,0,0,0,0,1,3,3,1,0,0,0,0,1,7,12,11,11,11,13,14,11,9,2,-3,-1,5,10,16,24,17,10,8,3,0,0,0,0,0,0,0,0,2,3,3,1,0,0,0,0,0,4,10,11,11,11,12,14,12,9,4,-1,-1,5,10,17,18,13,12,8,3,4,1,1,0,0,0,0,0,3,4,3,2,1,0,0,0,0,1,7,12,10,10,10,12,14,9,6,1,0,8,13,16,14,10,11,7,2,4,3,2,1,1,1,1,1,3,4,3,3,1,0,0,0,0,0,4,10,11,9,9,11,13,11,5,3,1,11,16,15,10,6,9,5,0,2,4,3,2,1,1,1,1,3,4,4,3,2,1,0,0,0,0,1,7,11,9,8,9,11,13,3,5,6,12,15,14,11,9,8,6,3,3,5,4,3,2,2,2,2,2,4,4,3,3,1,0,0,0,0,0,4,10,10,8,7,8,10,3,6,6,11,12,13,13,13,10,8,7,5,5,4,4,3,2,2,2,2,3,4,4,3,2,1,0,0,0,0,1,7,11,7,6,6,5,5,5,5,10,10,12,14,15,10,8,8,7,5,5,4,4,3,3,2,2,2,4,4,3,3,1,0,0,0,0,0,4,11,8,4,4,3,3,3,4,8,8,10,13,15,11,7,8,8,7,6,5,4,4,3,2,2,2,3,4,4,3,2,1,0,0,0,0,1,8,10,2,1,2,0,1,2,8,9,10,12,13,11,7,7,9,7,6,6,5,5,4,3,2,2,2,4,4,3,3,1,0,0,0,0,0,6,7,0,0,1,-1,0,0,8,9,12,9,9,11,9,6,7,8,7,6,5,5,4,3,2,2,2,3,4,4,3,2,1,0,0,0,0,3,1,-2,0,0,-4,-2,0,8,10,13,8,5,11,10,7,7,9,8,7,6,5,5,3,2,2,2,2,4,4,3,3,2,0,0,0,0,1,0,-2,-1,-1,-5,-5,-4,7,11,15,8,2,9,10,9,8,8,9,8,7,5,5,3,2,2,2,2,3,4,4,3,2,1,0,-1,0,0,0,-2,-2,-3,-6,-8,-8,5,9,12,9,6,10,11,10,8,8,9,8,7,6,5,3,2,2,2,2,2,4,4,3,3,2,0,-2,-1,0,0,-2,-3,-4,-7,-9,-9,4,5,6,10,17,13,11,9,8,7,8,9,8,7,5,3,2,2,2,2,2,3,4,4,3,3,2,-1,-3,-2,-1,-3,-3,-5,-8,-10,-10,1,2,3,9,23,14,10,8,8,7,7,9,8,7,6,4,2,2,2,2,2,2,3,4,3,5,4,-2,-5,-2,-3,-6,-5,-6,-6,-6,-6,0,2,3,8,23,14,8,8,7,7,7,7,9,8,7,4,2,2,2,2,2,2,3,4,4,7,7,-4,-8,-3,-4,-9,-9,-6,-1,0,-1,-2,2,4,7,19,10,6,7,7,7,6,6,8,8,7,4,2,2,2,2,2,2,2,3,5,8,7,-4,-7,0,-4,-9,-8,-3,6,9,7,-6,2,4,5,10,5,5,6,6,6,6,6,7,9,8,4,2,2,2,2,2,2,2,3,5,8,6,0,-1,2,-3,-4,-3,4,17,22,20,-8,2,5,4,2,1,4,5,6,6,6,6,6,8,8,5,2,2,2,2,2,2,2,3,5,7,5,2,3,4,-2,0,1,10,25,30,29,-6,1,5,5,0,0,2,4,6,6,6,6,6,7,9,5,2,2,2,2,2,2,2,3,5,7,5,3,4,4,0,5,5,13,30,30,29,-4,2,5,5,-2,-1,0,3,5,6,6,6,6,6,8,5,2,2,3,3,3,3,3,4,6,7,5,4,5,6,2,8,8,16,30,28,27,-4,3,5,3,-1,-3,0,2,4,6,6,6,6,6,6,3,2,3,3,3,3,4,4,5,6,6,4,2,6,8,3,7,7,18,26,26,26,-4,4,5,1,0,-4,-2,0,3,5,6,6,6,6,5,3,2,3,3,4,4,4,5,6,6,6,4,1,7,11,7,5,6,19,21,24,24,0,5,4,0,0,-4,-4,0,2,4,6,6,6,6,4,3,3,3,4,4,4,5,5,5,5,6,6,2,6,12,12,4,4,15,18,22,23,4,6,3,1,0,-3,-5,-2,0,3,5,6,6,6,4,3,3,3,4,4,5,5,5,4,5,7,7,2,6,14,15,3,2,11,15,20,21],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
