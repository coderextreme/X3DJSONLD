###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_1_00',geoSystem=['GDC'],position=(41.30704408055511,-71.61532891417802,41002.30113075668),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(41.5,-71.5,0),geoSystem=['GDC'])),
    GeoLOD(center=(41.30704408055511,-71.61532891417802,0.0),range=49202.76,child1Url=['../../tiles/2/newport0-0.x3d'],child2Url=['../../tiles/2/newport0-1.x3d'],child3Url=['../../tiles/2/newport1-0.x3d'],child4Url=['../../tiles/2/newport1-1.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0,0.05,0)),
            texture=ImageTexture(url=['../../images/1/newport0-0.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(41.1135245969,-71.7911995308,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=52,xSpacing=0.006896887,zDimension=52,zSpacing=0.0075889993,height=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-18,-20,-16,-16,-17,-18,-18,-18,-21,-20,-16,-20,-31,-31,-25,-20,-18,-11,-9,-10,-16,-21,-22,-21,-19,-19,-20,-21,-22,-22,-22,-22,-21,-21,-22,-23,-25,-25,-26,-26,-26,-26,-25,-25,-27,-26,-26,-26,-27,-27,-29,-29,-18,-19,-19,-20,-22,-24,-21,-18,-18,-18,-19,-27,-41,-35,-33,-30,-24,-18,-13,-14,-13,-16,-19,-19,-17,-16,-18,-20,-21,-22,-21,-20,-19,-20,-21,-23,-23,-29,-29,-29,-29,-27,-26,-26,-26,-26,-26,-27,-28,-28,-28,-28,-18,-19,-21,-22,-21,-22,-18,-20,-22,-23,-23,-42,-42,-42,-41,-33,-29,-28,-31,-20,-17,-14,-15,-14,-13,-11,-12,-15,-15,-18,-18,-18,-17,-17,-17,-19,-22,-28,-28,-29,-29,-27,-28,-28,-28,-28,-27,-27,-27,-27,-27,-27,-24,-25,-22,-23,-25,-27,-27,-28,-27,-26,-22,-37,-31,-32,-36,-34,-27,-23,-22,-19,-17,-17,-13,-12,-13,-9,-8,-5,-5,-8,-10,-10,-11,-12,-11,-14,-19,-26,-29,-29,-29,-29,-30,-29,-29,-29,-28,-27,-27,-27,-28,-28,-33,-32,-32,-31,-33,-32,-31,-28,-26,-22,-23,-31,-30,-32,-39,-26,-21,-19,-19,-20,-22,-21,-19,-11,-12,-6,0,0,0,0,0,0,0,0,0,-3,-14,-25,-29,-30,-27,-27,-27,-27,-26,-26,-27,-25,-25,-24,-25,-25,-31,-29,-30,-30,-30,-28,-25,-22,-21,-22,-20,-28,-31,-36,-37,-26,-21,-16,-18,-19,-22,-23,-21,-18,-13,-4,0,0,0,0,0,0,0,0,0,0,-10,-23,-28,-30,-27,-27,-27,-28,-28,-27,-25,-23,-23,-22,-22,-22,-29,-27,-25,-23,-21,-23,-21,-21,-20,-20,-21,-20,-34,-41,-43,-32,-24,-20,-20,-22,-25,-27,-27,-19,-17,-9,0,0,0,0,0,0,0,0,0,-5,-14,-27,-31,-31,-29,-25,-25,-25,-25,-24,-23,-22,-18,-19,-18,-18,-29,-31,-34,-33,-30,-27,-27,-26,-25,-22,-21,-20,-22,-45,-44,-39,-32,-30,-28,-28,-29,-32,-32,-29,-21,-10,0,0,0,0,0,0,0,0,-4,-16,-22,-32,-36,-35,-33,-32,-32,-32,-32,-29,-25,-21,-17,-21,-24,-25,-37,-41,-36,-31,-31,-30,-29,-29,-29,-28,-29,-34,-38,-44,-41,-38,-36,-34,-32,-32,-34,-35,-34,-33,-30,-17,-6,0,0,0,0,-1,0,-6,-14,-18,-24,-34,-37,-38,-39,-38,-38,-38,-35,-32,-29,-25,-22,-28,-33,-33,-41,-37,-33,-30,-30,-30,-31,-31,-31,-31,-31,-36,-39,-39,-38,-37,-36,-33,-34,-31,-36,-34,-33,-34,-32,-29,-21,-12,-1,-1,-2,-1,0,-9,-14,-19,-25,-31,-36,-38,-38,-38,-37,-37,-35,-33,-31,-31,-31,-32,-33,-33,-38,-35,-32,-29,-30,-31,-33,-33,-33,-32,-31,-34,-36,-36,-36,-36,-36,-37,-35,-34,-34,-33,-32,-32,-32,-31,-29,-20,-9,0,-1,-1,0,-5,-13,-19,-21,-26,-35,-39,-39,-37,-35,-33,-33,-31,-30,-30,-31,-32,-33,-33,-35,-34,-32,-30,-30,-31,-33,-34,-33,-33,-32,-34,-35,-35,-35,-36,-36,-36,-36,-35,-34,-30,-31,-32,-31,-31,-31,-27,-13,-9,-2,0,0,0,-7,-15,-16,-24,-36,-39,-39,-38,-36,-34,-34,-33,-32,-32,-32,-32,-33,-34,-33,-33,-32,-31,-32,-33,-34,-35,-35,-35,-35,-35,-35,-35,-35,-36,-35,-35,-35,-34,-34,-33,-33,-32,-31,-32,-32,-31,-28,-13,-4,0,0,0,-2,-14,-19,-27,-35,-39,-39,-37,-37,-37,-37,-35,-33,-32,-32,-32,-33,-33,-33,-34,-34,-33,-33,-34,-34,-35,-35,-35,-35,-35,-35,-35,-35,-35,-35,-35,-34,-34,-33,-34,-33,-32,-31,-31,-31,-31,-30,-20,-8,0,0,0,-8,-18,-26,-30,-36,-39,-38,-36,-36,-36,-37,-37,-36,-36,-34,-33,-33,-33,-32,-32,-32,-33,-33,-33,-33,-33,-33,-33,-33,-33,-34,-34,-34,-35,-34,-34,-34,-33,-33,-33,-34,-34,-32,-32,-32,-29,-30,-27,-13,-1,-4,-10,-17,-25,-30,-37,-38,-36,-35,-35,-34,-35,-36,-37,-37,-37,-37,-37,-36,-36,-31,-32,-32,-33,-33,-34,-33,-33,-33,-32,-32,-33,-33,-33,-33,-33,-33,-33,-33,-33,-33,-34,-35,-36,-36,-34,-34,-34,-31,-24,-12,-6,-16,-19,-27,-35,-36,-36,-34,-33,-33,-34,-36,-37,-37,-37,-37,-37,-37,-37,-36,-36,-33,-33,-34,-36,-35,-35,-35,-34,-33,-33,-33,-34,-34,-34,-33,-33,-33,-33,-33,-33,-33,-37,-38,-38,-38,-38,-35,-32,-34,-29,-22,-5,-16,-28,-31,-26,-24,-23,-32,-37,-38,-38,-38,-39,-38,-37,-37,-37,-37,-36,-36,-36,-35,-36,-36,-36,-36,-37,-36,-36,-36,-35,-35,-35,-34,-34,-34,-34,-34,-34,-33,-33,-34,-38,-41,-42,-41,-38,-36,-36,-37,-41,-42,-21,-20,-37,-36,-32,-28,-27,-32,-37,-41,-43,-42,-42,-40,-39,-39,-38,-37,-36,-35,-35,-37,-35,-36,-36,-37,-37,-37,-37,-37,-36,-36,-36,-36,-36,-35,-35,-35,-35,-35,-35,-35,-36,-39,-42,-44,-44,-45,-45,-44,-42,-9,-37,-24,-25,-38,-37,-37,-38,-41,-44,-44,-43,-43,-41,-41,-40,-39,-39,-39,-37,-35,-35,-38,-40,-37,-39,-42,-37,-38,-38,-38,-37,-37,-37,-37,-36,-37,-37,-37,-37,-37,-36,-36,-38,-39,-41,-43,-41,-41,-38,-32,-25,-28,-30,-33,-40,-50,-50,-46,-45,-45,-44,-43,-43,-42,-42,-42,-42,-42,-40,-39,-40,-39,-38,-44,-42,-42,-38,-36,-35,-36,-37,-37,-37,-38,-37,-36,-36,-36,-37,-37,-38,-38,-38,-38,-37,-38,-39,-40,-32,-30,-29,-24,-26,-33,-43,-44,-42,-43,-44,-44,-44,-43,-43,-44,-43,-42,-41,-41,-39,-37,-36,-38,-38,-37,-37,-36,-35,-34,-34,-34,-34,-34,-34,-34,-35,-36,-36,-36,-36,-35,-36,-36,-37,-38,-37,-37,-37,-37,-36,-36,-38,-34,-26,-27,-34,-37,-39,-42,-44,-44,-42,-41,-42,-43,-43,-44,-43,-41,-38,-34,-31,-28,-26,-26,-26,-26,-26,-26,-25,-26,-29,-28,-27,-32,-32,-32,-33,-35,-35,-34,-36,-35,-35,-36,-35,-33,-34,-34,-35,-32,-33,-41,-41,-36,-34,-37,-36,-36,-35,-40,-42,-43,-44,-41,-40,-41,-41,-41,-39,-36,-33,-30,-26,-24,-24,-22,-23,-23,-24,-23,-23,-24,-24,-23,-23,-28,-32,-33,-32,-33,-34,-35,-35,-31,-31,-29,-29,-28,-28,-28,-27,-27,-27,-26,-30,-30,-30,-36,-38,-37,-34,-36,-40,-41,-40,-37,-38,-38,-37,-33,-30,-28,-25,-23,-23,-21,-20,-19,-19,-20,-21,-18,-18,-18,-17,-18,-19,-22,-25,-31,-29,-31,-32,-30,-31,-29,-29,-28,-27,-27,-27,-26,-26,-27,-24,-21,-23,-22,-22,-27,-30,-33,-34,-34,-37,-37,-37,-34,-34,-31,-29,-29,-27,-24,-22,-21,-21,-20,-19,-20,-19,-19,-20,-11,-13,-13,-15,-17,-18,-19,-21,-22,-25,-25,-23,-23,-21,-28,-28,-27,-26,-26,-25,-25,-22,-25,-24,-20,-20,-20,-21,-22,-25,-26,-27,-33,-35,-35,-34,-32,-29,-28,-26,-26,-24,-21,-19,-19,-18,-18,-19,-20,-20,-20,-20,-8,-7,-9,-10,-12,-10,-12,-12,-14,-16,-14,-13,-11,-13,-13,-14,-14,-17,-18,-15,-18,-17,-17,-19,-18,-19,-20,-21,-21,-23,-23,-23,-27,-27,-27,-26,-26,-25,-26,-24,-23,-20,-18,-18,-18,-16,-16,-19,-20,-20,-21,-21,-1,0,0,0,-1,0,-1,-1,-6,-7,-4,-5,-6,-7,-8,-10,-9,-10,-12,-14,-14,-15,-17,-17,-19,-17,-17,-18,-18,-20,-20,-22,-23,-23,-24,-23,-22,-22,-22,-20,-19,-14,-16,-16,-14,-14,-15,-19,-21,-21,-23,-23,0,0,0,0,0,0,-1,0,0,-1,0,0,0,-3,-8,-10,-12,-13,-13,-13,-13,-13,-15,-16,-17,-16,-17,-17,-15,-15,-17,-16,-18,-19,-20,-19,-19,-18,-18,-17,-15,-15,-14,-14,-13,-13,-16,-21,-22,-24,-26,-26,0,0,0,0,0,0,0,0,0,0,-1,-1,0,0,0,0,-5,-7,-10,-8,-9,-9,-10,-14,-14,-14,-15,-15,-15,-13,-12,-12,-13,-15,-16,-16,-17,-16,-15,-14,-13,-13,-12,-12,-15,-14,-15,-20,-23,-25,-27,-27,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-1,0,0,-1,0,-3,-5,-5,-10,-12,-12,-11,-12,-11,-11,-10,-8,-11,-11,-13,-13,-14,-13,-12,-10,-7,-7,-9,-9,-9,-13,-17,-21,-23,-25,-25,-26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,-5,-8,-6,-5,-7,-8,-8,-9,-9,-9,-11,-12,-11,-11,-11,-9,-7,-8,-9,-3,0,-7,-15,-21,-25,-25,-24,-23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-1,0,0,-1,-1,-1,0,0,-5,-7,-6,-7,-8,-8,-8,-8,-8,-6,-5,-6,-2,0,-1,-7,-9,-19,-24,-26,-24,-23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,-1,0,0,0,0,0,-1,0,0,0,0,-2,-3,-1,-1,0,0,0,0,-4,-7,-18,-22,-23,-23,-22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,-4,-16,-21,-21,-20,-26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,-11,-21,-25,-27,-28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-1,-1,0,0,0,0,-1,-16,-23,-26,-27,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,0,0,0,0,0,0,-6,-20,-25,-26,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-2,0,0,0,0,0,0,0,-17,-23,-23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-1,0,0,0,0,0,0,-15,-19,-20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-11,-14,-15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-4,-8,-10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
