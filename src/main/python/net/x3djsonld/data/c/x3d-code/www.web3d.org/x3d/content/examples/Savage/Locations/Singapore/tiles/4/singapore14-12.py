###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_1412',geoSystem=['GDC'],position=(1.4654829221618253,103.94891185322548,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.4654829221618253,103.94891185322548,0.0),range=4101.627,child1Url=['../../tiles/5/singapore28-24.x3d'],child2Url=['../../tiles/5/singapore28-25.x3d'],child3Url=['../../tiles/5/singapore29-24.x3d'],child4Url=['../../tiles/5/singapore29-25.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore14-12.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.4567512097838313,103.93454881909646,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[26,23,22,22,19,14,12,10,13,12,11,10,9,10,10,9,9,14,24,28,23,18,13,11,11,7,6,7,9,10,13,16,13,10,13,18,21,22,20,20,21,19,14,12,12,13,11,11,9,8,10,10,9,9,11,19,25,24,19,12,10,9,7,6,8,9,11,16,19,16,11,14,19,21,18,18,18,20,19,13,12,14,13,11,10,8,6,8,9,9,8,8,15,22,25,20,11,9,7,7,7,8,10,13,18,22,18,13,15,20,22,17,17,17,18,19,14,12,13,13,11,10,9,7,8,9,9,7,7,12,18,20,17,10,7,6,7,7,8,11,15,20,23,19,14,16,20,22,16,16,15,17,19,15,11,12,12,11,11,10,8,9,9,10,7,6,8,13,12,13,9,5,4,5,6,8,12,18,22,23,19,15,16,20,22,14,14,14,15,16,13,11,11,11,11,11,10,9,9,10,10,8,7,7,10,9,10,7,5,4,5,6,8,12,18,22,22,19,16,17,20,22,12,12,12,12,13,11,9,10,11,10,10,10,10,10,12,11,11,9,5,7,6,7,6,5,4,5,5,8,12,17,22,21,17,16,18,20,21,10,11,11,11,11,10,11,11,11,10,9,9,11,11,12,12,11,9,5,6,6,6,6,5,4,5,6,8,13,17,20,19,17,16,17,20,21,8,9,10,10,10,10,12,13,11,10,8,8,12,11,13,12,11,9,6,5,6,6,5,5,5,6,7,9,14,16,17,18,16,15,16,19,22,7,8,10,11,11,11,13,14,11,10,8,10,15,13,13,12,11,9,6,5,7,6,6,6,6,7,8,10,17,19,18,17,15,15,16,20,22,7,8,10,12,14,13,14,14,12,10,8,12,19,14,13,12,12,8,6,6,7,7,7,7,7,8,9,11,20,24,22,16,14,14,17,20,22,9,10,10,13,16,15,15,16,13,11,8,16,21,16,15,12,11,8,6,6,8,8,8,8,8,9,9,13,22,28,27,21,16,15,17,20,20,13,12,12,15,18,17,17,18,15,13,9,22,23,17,17,13,10,7,6,7,8,9,9,8,9,9,10,15,23,31,32,28,20,16,17,19,19,14,14,13,16,19,18,18,18,16,15,12,22,21,16,16,14,10,8,6,8,9,9,9,9,9,9,11,16,24,31,35,32,24,19,19,20,19,15,14,14,17,20,18,17,18,18,17,14,19,17,14,14,13,10,9,7,9,10,10,9,9,10,10,12,16,23,31,37,35,26,23,25,24,21,15,15,15,17,20,18,18,19,20,20,16,18,15,13,13,12,11,10,8,10,11,11,10,9,11,10,12,17,23,31,38,36,28,26,29,27,24,17,15,14,18,21,19,20,21,23,21,17,17,15,13,13,12,12,11,9,11,12,13,13,10,11,10,13,17,23,32,38,37,30,30,33,31,27,19,17,15,19,22,21,21,23,24,22,17,17,15,14,14,12,13,11,9,11,12,14,14,11,11,10,12,16,23,30,37,37,31,32,36,33,28,21,18,17,22,24,22,22,24,24,22,18,17,15,15,14,13,14,10,8,10,12,13,14,10,11,10,11,16,21,28,35,37,32,35,38,32,26,22,20,20,24,25,23,23,24,24,21,19,17,16,15,14,14,13,10,8,10,12,12,13,10,11,10,11,15,20,26,33,36,32,37,40,32,26,22,22,23,26,26,24,24,25,23,20,19,17,16,15,14,13,12,9,8,9,12,13,13,11,11,10,10,13,18,24,31,33,32,39,42,32,27,22,25,26,28,27,24,25,26,24,21,19,17,15,14,14,13,11,8,8,9,12,13,13,12,11,10,10,12,16,22,29,32,32,39,42,34,28,23,26,27,28,28,26,27,27,27,24,20,17,14,13,14,13,12,7,7,9,12,12,12,13,12,10,12,13,15,20,27,31,33,39,41,36,32,23,27,28,29,28,27,27,28,29,27,21,17,13,13,14,13,12,7,6,9,12,11,12,12,12,11,12,13,14,19,26,30,33,38,40,37,36,23,26,27,27,28,27,28,28,29,27,22,17,14,13,13,12,11,6,5,8,12,11,12,11,11,10,11,13,13,17,25,29,30,34,39,39,40,23,26,26,26,28,28,28,27,28,26,22,17,14,13,12,11,10,6,4,8,12,12,11,10,11,10,10,12,12,15,23,27,27,31,36,41,42,23,26,26,26,28,30,28,27,28,26,22,17,14,13,11,9,9,6,5,7,12,11,10,9,11,10,10,11,10,11,19,23,24,28,34,39,41,24,26,27,27,28,30,29,28,27,24,21,17,14,13,10,8,8,6,6,7,11,10,8,9,11,11,11,10,8,8,15,20,22,26,32,37,39,25,26,27,26,27,29,29,27,25,22,19,17,14,13,10,7,7,7,9,9,9,9,9,10,12,12,11,9,7,7,12,17,21,24,29,34,37,26,26,27,25,26,27,28,26,23,19,18,16,14,12,9,7,6,8,11,10,8,7,9,12,13,13,12,9,6,6,10,14,19,23,26,32,35,25,26,27,26,27,28,28,26,22,19,17,15,13,11,8,7,7,8,9,8,7,7,11,14,14,15,13,10,7,6,8,12,17,21,25,30,33,25,26,27,26,28,28,28,25,20,18,17,13,11,9,7,7,9,8,7,6,5,7,12,15,16,16,15,11,8,6,6,10,15,19,23,28,31,25,24,26,28,28,28,26,22,18,17,17,12,10,8,7,7,9,7,6,5,5,6,12,16,17,17,15,13,10,7,7,10,14,18,22,26,28,25,23,26,29,28,26,24,20,16,16,16,12,9,7,7,7,8,7,5,5,4,6,13,17,18,18,16,14,12,8,7,10,13,17,20,24,26,26,24,27,28,26,25,23,19,16,16,14,11,9,7,7,7,7,6,5,5,4,5,11,17,19,19,17,15,14,9,7,9,12,16,19,21,22,27,26,28,27,25,24,22,19,16,14,12,10,8,6,7,7,6,6,5,5,5,5,10,18,19,20,19,17,15,10,6,8,11,15,18,19,19,27,27,28,26,23,23,21,19,16,13,11,9,7,6,7,7,7,9,8,5,5,4,8,17,20,21,21,19,16,11,7,9,12,15,17,18,18,26,28,28,25,22,21,20,18,15,12,9,7,6,6,7,7,8,13,11,4,4,3,6,15,20,23,24,22,17,12,8,9,13,15,17,18,18,26,28,26,23,22,20,19,17,14,11,8,6,6,6,8,8,10,15,13,6,4,4,6,14,20,22,23,20,16,12,9,10,13,16,17,18,18,28,26,24,21,21,19,18,15,13,10,6,5,5,6,9,11,13,17,15,8,4,4,6,13,19,22,21,18,15,12,10,11,13,16,18,17,17,27,25,22,20,20,19,16,13,11,9,6,5,6,8,12,14,15,18,18,11,5,4,6,11,15,18,17,16,15,13,11,12,13,15,18,18,18,26,24,21,18,18,18,14,11,9,8,7,6,7,10,14,17,17,19,20,13,6,5,7,10,12,15,14,14,15,13,12,12,13,15,17,19,20,25,23,20,16,17,16,13,9,8,8,7,6,7,11,16,18,19,20,20,13,7,6,7,9,12,14,13,13,15,13,12,12,12,14,17,18,19,25,22,18,15,15,15,11,8,7,8,6,6,8,12,17,19,19,20,20,13,8,7,7,9,12,14,12,12,14,13,13,12,12,14,16,17,17],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
