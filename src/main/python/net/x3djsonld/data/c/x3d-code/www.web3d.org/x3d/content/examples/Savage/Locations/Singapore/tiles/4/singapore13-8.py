###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_138',geoSystem=['GDC'],position=(1.4480194974058374,103.83400758019333,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.4480194974058374,103.83400758019333,0.0),range=4101.627,child1Url=['../../tiles/5/singapore26-16.x3d'],child2Url=['../../tiles/5/singapore26-17.x3d'],child3Url=['../../tiles/5/singapore27-16.x3d'],child4Url=['../../tiles/5/singapore27-17.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore13-8.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.4392877850278434,103.81964454606431,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[19,20,20,21,19,19,19,19,22,23,23,20,17,13,13,13,15,15,14,14,13,14,14,19,17,16,13,14,25,19,13,11,10,9,9,8,8,17,17,19,18,15,16,17,18,20,23,24,24,21,14,13,13,13,13,13,14,14,15,14,19,16,17,15,17,22,16,10,9,10,10,9,9,9,15,15,17,15,11,13,15,17,19,22,25,27,24,14,12,12,11,13,13,15,14,17,14,19,15,18,17,19,18,12,8,7,10,11,9,9,10,15,14,12,12,11,11,14,18,20,23,27,30,26,15,12,11,11,14,17,18,15,15,16,18,17,20,16,17,16,10,7,6,8,9,8,10,11,15,12,9,9,10,10,14,19,21,23,30,32,27,16,11,10,11,16,21,20,15,14,16,17,17,23,16,16,13,8,6,5,6,7,7,10,10,13,13,11,10,9,10,13,19,21,23,29,31,25,15,9,8,9,14,20,18,15,16,15,17,16,23,17,14,10,10,7,6,7,7,7,9,10,12,12,13,11,9,9,13,18,20,23,29,31,23,14,8,6,7,12,18,16,14,17,15,16,16,22,17,11,7,11,7,6,7,7,7,8,9,11,13,14,12,10,10,12,16,19,22,26,25,18,12,7,6,7,13,18,16,14,15,14,14,16,18,14,10,7,10,9,9,9,7,7,9,9,11,14,15,13,11,10,10,14,17,21,23,19,14,10,6,6,6,15,18,16,13,14,14,13,15,14,11,9,8,9,11,11,10,7,8,9,9,12,16,18,15,12,10,9,12,16,19,20,16,13,9,6,7,7,13,16,17,14,12,14,16,16,13,11,8,7,9,10,10,9,7,8,8,8,15,19,21,18,13,10,9,10,15,17,17,15,13,7,5,8,8,11,15,17,15,11,14,20,15,11,11,7,7,9,9,8,8,7,7,8,8,16,16,20,22,17,11,9,10,14,14,15,15,12,7,6,6,5,8,11,13,13,10,13,17,15,13,11,7,6,8,9,7,7,6,6,7,7,17,14,19,25,22,12,8,11,14,13,13,15,12,6,6,4,2,4,8,9,11,10,11,13,14,14,11,8,6,5,8,8,7,5,5,6,7,20,15,19,25,21,12,12,15,16,14,13,15,11,7,6,0,1,3,6,7,10,9,9,11,12,12,10,8,7,5,8,8,8,6,6,8,9,24,18,20,24,19,12,17,21,18,15,13,16,10,7,5,-2,1,3,4,6,9,8,9,9,11,8,8,9,8,5,8,10,8,8,8,10,11,26,21,21,24,20,16,22,25,23,18,15,14,9,6,2,-2,3,4,3,8,10,9,9,10,10,7,8,9,10,7,10,11,9,9,9,10,10,25,24,23,25,22,22,27,28,27,22,15,12,8,3,0,-1,4,5,2,11,11,9,11,12,9,8,8,10,13,10,13,11,10,10,11,9,9,25,23,22,23,22,25,30,29,28,23,15,11,8,2,-2,0,6,6,4,11,11,9,10,12,10,8,7,10,13,13,13,10,10,11,11,8,8,24,20,20,18,20,27,31,30,26,22,14,11,9,2,-5,3,7,7,7,9,10,10,10,10,11,7,6,10,12,13,11,8,8,12,10,7,7,26,20,18,17,20,27,32,29,24,21,13,11,9,1,-6,4,8,8,8,9,10,9,8,9,11,8,7,9,10,11,9,7,6,9,8,7,8,31,21,17,16,19,26,32,27,21,21,12,11,8,0,-5,4,8,10,9,10,10,8,7,7,12,9,9,10,8,7,6,6,1,3,5,9,11,31,22,17,16,19,25,31,26,20,18,12,10,5,-3,-2,5,7,10,8,12,12,9,8,6,11,8,9,9,8,5,5,6,4,3,5,8,9,28,22,17,15,18,24,30,26,19,14,11,8,1,-6,2,5,7,9,7,13,13,11,10,6,10,7,8,7,8,5,5,6,10,8,6,6,6,27,23,20,18,20,26,31,30,21,11,11,6,-2,-5,6,6,7,8,7,14,15,12,11,7,9,6,7,5,7,7,5,8,13,10,9,7,6,28,23,22,24,25,30,37,37,25,11,12,5,-5,-1,8,6,7,6,7,15,17,12,13,9,9,7,6,3,6,8,8,10,12,9,12,12,11,30,24,25,28,29,33,40,40,27,14,14,6,-4,2,9,7,6,5,7,16,17,12,14,11,9,7,6,3,6,8,9,10,12,10,13,14,13,32,27,28,31,31,34,40,37,29,20,18,11,0,5,9,10,5,5,6,14,18,12,13,12,8,6,6,6,7,6,8,10,14,12,12,10,10,33,27,30,32,32,34,37,34,29,24,21,15,6,8,9,10,5,5,6,12,18,12,14,13,8,6,7,8,8,5,8,9,13,13,11,10,10,30,26,30,32,32,30,32,31,29,26,23,16,12,11,10,6,5,5,6,10,17,12,15,16,10,5,8,9,8,6,7,8,11,12,13,15,15,25,25,29,30,30,28,29,29,28,26,23,19,18,15,11,5,5,6,7,10,17,13,16,17,11,5,8,9,8,6,7,7,9,11,14,18,19,20,23,23,22,26,28,30,31,27,22,19,21,22,21,14,8,6,8,7,10,16,15,16,15,11,6,9,10,9,7,7,6,7,9,12,18,21,18,21,21,18,23,27,31,32,27,20,16,23,26,25,17,10,7,8,7,10,14,15,16,13,12,8,10,10,9,8,7,6,6,7,10,18,21,18,21,23,21,22,25,31,34,27,22,19,23,27,26,16,9,8,9,8,9,11,14,17,12,15,10,10,7,8,8,7,7,6,6,10,16,17,20,21,24,24,22,23,31,36,27,24,21,25,29,27,16,9,8,9,8,9,10,14,18,12,17,11,9,5,9,8,8,9,6,5,9,13,14,24,23,25,25,23,25,33,37,28,25,24,28,31,26,15,10,11,11,7,10,12,18,20,13,14,9,7,4,8,8,9,10,8,7,9,11,11,27,26,25,26,24,26,33,38,30,27,26,31,33,25,14,12,13,13,7,10,15,20,21,13,11,8,5,4,8,9,9,10,10,9,9,8,8,24,25,26,24,21,24,29,34,31,30,28,33,33,27,17,15,15,15,9,9,15,18,16,9,8,6,5,5,10,10,9,9,9,8,7,7,8,21,24,28,24,19,23,25,30,34,33,31,34,33,28,20,18,17,17,12,9,16,16,11,7,5,5,6,7,11,11,8,8,8,7,6,7,9,18,21,27,26,21,23,26,33,35,37,35,35,33,29,23,22,23,22,17,13,18,15,9,6,6,8,9,9,11,11,8,7,8,7,8,9,10,17,19,27,26,23,23,27,36,37,39,39,35,33,31,27,26,29,25,21,16,20,15,8,6,7,11,12,12,11,9,7,7,8,8,11,12,11,19,19,22,25,24,23,29,37,37,40,38,34,32,29,27,33,34,26,23,21,20,16,10,7,8,12,15,14,12,8,7,8,8,10,11,11,11,20,19,18,22,25,24,31,37,38,40,36,33,31,28,28,39,40,28,25,25,21,17,12,9,8,14,18,15,11,7,6,8,10,12,12,10,10,18,16,17,23,25,23,27,34,37,38,35,31,29,29,33,39,39,30,27,27,21,15,13,11,9,11,15,16,14,10,7,8,11,12,9,8,9,16,13,16,23,24,22,22,30,37,36,33,30,28,31,37,39,38,32,29,30,22,14,14,13,10,9,13,18,17,13,8,8,11,10,6,7,9],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
