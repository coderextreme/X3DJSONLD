###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_410',geoSystem=['GDC'],position=(1.2908486746019459,103.8914597167094,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.2908486746019459,103.8914597167094,0.0),range=4101.627,child1Url=['../../tiles/5/singapore8-20.x3d'],child2Url=['../../tiles/5/singapore8-21.x3d'],child3Url=['../../tiles/5/singapore9-20.x3d'],child4Url=['../../tiles/5/singapore9-21.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore4-10.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.2821169622239519,103.87709668258039,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[8,8,8,7,7,8,8,7,7,8,11,13,13,14,13,12,12,13,12,12,13,14,11,9,9,11,12,13,14,15,15,8,2,3,5,6,6,6,8,8,7,7,8,7,7,7,9,12,13,13,13,12,12,12,12,12,12,13,12,10,9,10,11,13,14,14,15,15,9,2,3,5,5,5,6,8,8,7,7,8,7,7,8,11,13,13,14,13,12,12,13,12,12,13,14,11,9,9,11,12,13,14,15,15,14,9,3,3,4,5,6,7,8,7,7,8,7,7,7,9,12,13,13,13,12,12,12,12,12,12,13,12,10,9,10,11,13,14,14,15,15,12,7,3,3,3,6,9,8,9,7,7,8,7,7,7,11,13,13,14,13,12,12,13,12,12,13,14,11,9,9,11,12,13,14,15,15,14,9,4,3,3,3,9,12,8,8,7,8,8,7,7,9,12,13,13,13,12,12,12,12,12,12,13,12,10,9,10,11,13,14,14,15,15,12,7,3,3,3,5,12,15,8,7,8,9,7,7,7,10,13,13,14,13,12,12,13,12,12,13,14,11,9,9,10,12,13,14,15,15,14,9,4,3,3,3,8,16,18,8,7,8,7,6,7,8,12,13,13,13,12,11,12,12,12,12,13,13,10,9,10,11,13,14,14,15,15,12,7,3,3,3,5,12,18,19,9,8,8,6,4,6,10,13,13,14,13,12,11,12,12,12,13,14,11,9,9,11,12,13,14,15,15,14,9,4,3,3,3,8,16,20,19,8,7,7,6,5,6,9,13,14,13,12,11,11,12,12,12,13,13,10,9,10,11,13,14,14,15,15,12,6,3,3,3,5,12,18,18,17,8,6,5,6,6,5,8,12,15,13,10,11,12,12,12,13,14,11,9,9,11,12,13,14,15,15,14,9,4,3,3,3,8,16,20,16,13,8,7,6,6,4,5,7,9,12,12,9,11,12,12,12,13,13,10,9,10,11,13,14,14,15,15,12,6,3,3,3,5,12,18,18,14,11,8,9,8,6,3,4,5,4,8,11,8,12,12,12,13,14,12,9,9,11,12,13,14,15,15,14,9,4,3,3,3,9,16,20,16,11,9,8,9,8,6,4,4,4,4,6,9,9,12,12,12,13,14,11,9,10,11,13,14,14,15,14,12,7,3,3,3,5,12,18,19,14,10,9,8,8,7,6,6,5,5,4,5,8,10,12,12,13,15,12,10,9,11,12,13,14,15,15,14,10,4,3,3,3,9,16,20,16,11,9,10,8,8,8,7,6,5,5,5,5,7,10,12,12,14,15,12,10,9,11,13,14,14,15,14,12,8,3,3,3,5,12,18,19,14,10,9,10,7,8,8,7,7,6,5,5,4,6,11,13,12,15,15,13,9,10,12,13,14,15,15,14,10,5,3,3,3,9,16,20,16,11,10,10,11,7,8,8,8,7,7,6,5,4,6,9,11,11,16,17,12,9,10,12,13,14,15,15,13,8,4,3,3,5,12,18,19,14,10,10,11,11,7,8,9,8,8,8,7,5,5,6,7,9,10,16,19,10,9,10,13,14,15,15,14,11,7,4,3,3,8,16,20,16,11,10,10,12,12,7,8,9,9,9,8,7,6,6,6,7,8,9,15,17,10,8,11,13,14,15,15,13,10,6,4,3,5,12,18,19,14,10,10,11,12,12,7,8,8,8,8,7,7,6,7,8,8,9,9,13,14,10,8,12,14,15,15,14,12,9,6,4,3,8,16,20,16,11,10,10,12,12,12,7,8,7,8,8,7,8,6,7,9,9,9,9,12,12,10,9,13,14,15,15,14,12,9,6,4,6,12,18,19,14,10,10,11,12,11,10,7,7,7,7,8,8,9,8,7,8,9,9,9,11,12,11,12,14,15,15,15,13,11,9,6,4,9,16,20,16,11,10,10,12,12,10,8,7,7,7,7,9,9,9,9,8,8,8,10,10,11,12,11,12,13,15,15,14,13,12,9,6,5,12,18,19,14,9,10,11,12,12,9,7,8,8,7,8,8,8,8,8,8,8,7,9,10,12,13,11,11,12,15,14,13,13,12,10,5,8,15,19,16,11,9,10,12,12,11,8,7,8,9,8,8,8,8,8,8,8,8,8,10,10,12,13,9,9,12,15,14,12,12,14,9,6,11,17,18,14,9,10,11,12,13,11,8,6,8,9,8,8,9,8,8,8,9,8,10,12,11,11,12,8,9,13,15,14,12,11,17,8,8,14,19,16,11,9,10,12,12,12,10,8,6,8,9,9,9,9,8,8,9,10,9,10,13,11,11,12,8,9,13,16,14,13,11,18,8,10,16,18,14,9,10,11,12,13,12,10,8,6,9,10,10,10,10,9,10,11,12,10,9,12,11,12,12,10,12,14,17,15,14,13,16,11,12,17,16,11,9,11,12,12,13,12,11,8,6,10,11,11,11,11,10,11,12,13,10,7,10,11,12,12,12,13,14,18,15,14,14,14,13,13,17,13,9,10,12,12,13,13,13,11,8,6,11,12,12,13,12,11,11,10,12,9,6,10,11,13,12,12,12,13,16,13,11,12,11,12,14,15,10,9,11,12,13,13,14,14,11,8,6,12,12,12,13,12,11,11,9,10,9,6,10,12,13,12,13,12,14,16,11,9,10,9,12,13,13,10,10,12,13,13,13,15,14,11,8,6,11,10,11,13,12,11,10,7,10,10,7,11,13,13,13,14,15,16,16,10,8,9,9,10,11,13,11,11,14,13,13,14,16,15,12,7,6,11,9,10,12,11,11,10,7,10,12,9,12,14,14,14,17,19,18,16,10,7,10,10,11,10,13,12,12,14,13,13,14,16,16,12,8,7,10,9,10,11,11,12,11,9,13,14,10,11,14,15,16,20,23,17,14,10,8,13,16,13,11,14,12,10,12,12,12,14,17,17,11,8,10,10,9,10,10,10,13,13,12,17,15,10,11,14,16,18,21,24,15,11,10,8,16,22,16,12,14,12,9,10,11,12,14,17,18,11,10,14,10,8,10,10,9,12,13,18,26,17,11,10,13,16,18,17,19,12,9,9,10,19,27,18,11,12,11,8,9,12,12,13,16,16,11,14,18,9,8,10,10,9,11,12,21,31,19,14,10,13,14,17,12,13,10,9,9,10,20,29,18,9,10,11,9,9,12,12,12,15,14,13,17,20,6,7,10,10,10,10,11,17,24,19,19,13,13,13,17,10,10,10,9,10,11,17,23,16,10,11,13,11,10,11,10,10,13,14,14,17,18,3,7,10,10,10,8,9,12,15,19,23,15,13,12,16,10,8,10,10,11,12,13,15,12,11,12,16,13,12,10,9,10,11,14,16,15,14,3,7,9,9,9,7,8,11,14,18,19,13,12,12,14,9,7,9,11,10,11,11,11,10,10,13,15,13,14,10,11,13,12,13,16,14,13,5,7,9,8,7,6,8,11,15,16,14,11,12,12,12,9,7,9,10,9,10,9,9,8,9,13,14,13,15,11,12,16,15,11,15,14,12,5,6,7,8,7,6,8,10,14,13,12,10,11,11,11,10,7,8,10,9,10,9,8,8,8,13,15,15,15,10,11,17,15,10,13,13,12,6,4,6,7,7,7,7,9,12,10,11,11,11,10,11,12,8,8,10,9,9,8,8,7,7,14,16,16,14,10,10,16,15,9,10,12,12],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
