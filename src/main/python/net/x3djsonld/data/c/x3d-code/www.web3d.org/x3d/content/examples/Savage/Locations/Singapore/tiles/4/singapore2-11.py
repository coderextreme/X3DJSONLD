###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_211',geoSystem=['GDC'],position=(1.25592182508997,103.92018578496744,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.25592182508997,103.92018578496744,0.0),range=4101.627,child1Url=['../../tiles/5/singapore4-22.x3d'],child2Url=['../../tiles/5/singapore4-23.x3d'],child3Url=['../../tiles/5/singapore5-22.x3d'],child4Url=['../../tiles/5/singapore5-23.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore2-11.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.247190112711976,103.90582275083842,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[-1,-5,-1,-12,-18,-8,-6,1,7,6,5,7,5,4,7,8,10,12,15,17,15,8,6,5,0,0,0,3,12,10,22,28,11,2,5,5,5,0,5,2,0,-1,-1,0,4,9,5,4,7,6,5,4,6,10,15,17,15,13,7,3,2,-5,-9,-3,3,8,11,24,26,5,1,5,5,6,3,11,4,5,8,2,1,4,9,4,4,6,6,4,2,5,11,17,17,13,12,7,3,1,-3,-9,-3,6,10,13,24,21,2,2,5,5,6,5,9,5,5,12,2,1,2,7,6,5,6,6,5,2,5,11,16,14,11,11,8,4,3,3,0,1,11,17,16,25,13,1,4,5,5,6,7,9,6,5,13,3,2,0,7,7,7,7,7,5,2,6,11,15,12,13,16,12,5,5,7,3,5,14,22,19,21,8,2,6,6,7,6,6,8,8,5,12,3,0,0,6,10,11,11,8,5,4,8,13,14,12,22,30,19,7,6,5,3,9,17,26,19,10,8,3,7,7,9,7,5,6,9,6,10,4,0,0,8,11,12,12,8,7,7,10,12,13,11,26,38,24,8,6,4,4,10,18,24,16,-1,5,4,7,7,10,8,3,3,8,6,8,3,0,4,14,12,9,10,9,11,13,10,9,10,11,23,33,24,10,6,6,6,9,13,16,6,-16,-2,3,4,5,10,9,2,1,6,6,8,4,0,6,17,12,8,8,9,13,16,8,6,7,9,18,27,23,10,7,6,6,7,9,9,0,-23,-7,4,3,5,9,10,2,4,5,4,8,6,3,3,11,10,10,7,7,12,13,5,4,4,5,11,18,16,7,5,5,6,5,6,6,-1,-15,-3,10,7,9,9,9,1,6,5,3,7,7,6,2,7,9,11,7,5,11,11,2,3,2,1,4,10,10,5,4,4,5,3,3,3,-1,-6,0,13,10,12,8,9,2,7,5,1,4,6,7,7,8,9,12,7,2,11,10,4,4,1,0,1,8,9,5,4,6,5,2,2,1,0,0,2,10,12,13,7,9,1,5,4,0,1,4,7,11,9,9,11,6,2,9,10,6,5,1,-1,0,7,8,4,5,6,5,2,1,0,2,4,6,8,13,13,7,9,0,-9,1,3,3,5,5,8,9,10,8,6,6,5,6,8,5,1,0,1,6,6,3,4,7,5,0,0,2,5,7,11,9,11,14,9,8,-1,-26,-1,6,4,6,2,7,9,12,5,6,11,3,3,10,4,1,0,2,5,4,2,4,7,3,-1,-1,4,8,9,13,9,9,13,11,7,-2,-39,-6,6,5,6,0,9,13,14,8,7,14,6,3,9,3,0,1,3,6,5,4,7,6,0,-3,0,6,9,7,12,8,11,11,8,6,-3,-47,-9,6,6,4,-2,10,15,15,9,8,18,9,4,8,3,0,0,4,6,6,7,9,5,-3,-4,0,8,9,5,9,7,13,8,5,6,0,-16,1,6,5,1,-18,2,11,11,9,12,21,11,8,11,4,-1,0,4,5,5,4,5,2,-6,-1,1,6,9,5,6,5,10,8,6,6,2,12,11,7,5,-2,-33,-4,6,5,8,16,24,12,11,13,7,-1,0,3,4,3,0,2,-1,-8,0,4,3,9,5,4,2,8,8,8,6,3,15,13,7,4,0,-17,3,15,7,9,18,15,7,9,12,7,1,2,6,5,3,2,2,-1,-5,2,6,5,9,8,5,2,6,9,9,7,4,15,13,7,2,2,0,14,25,11,10,20,7,2,7,10,7,3,4,9,6,4,5,4,-1,-2,5,9,7,8,11,6,3,5,10,10,9,6,13,10,4,0,1,2,10,17,10,13,18,6,7,9,10,10,6,4,7,7,6,7,2,-3,-2,4,9,7,7,7,5,4,6,8,8,8,8,11,7,0,-3,0,3,6,6,9,16,16,7,13,12,10,13,10,2,4,8,9,10,1,-6,-2,3,8,8,4,0,2,5,6,4,4,6,4,6,2,0,-3,-1,3,8,9,11,15,10,7,12,12,9,10,8,4,5,6,9,11,3,-3,0,4,9,7,2,0,0,3,6,4,4,6,0,1,-1,-1,-1,-3,2,9,13,14,13,4,6,11,11,8,6,5,6,5,4,8,12,6,0,1,5,10,7,2,-3,-2,0,4,6,4,7,0,0,-2,1,1,0,3,10,17,17,12,5,7,10,11,7,6,7,8,5,4,8,10,4,0,0,7,11,9,3,0,1,1,4,5,5,7,1,-2,-2,6,5,2,3,10,22,19,12,8,7,8,10,7,6,9,10,5,3,8,7,1,-3,-1,10,13,12,6,5,8,4,5,3,6,8,3,-1,-4,7,7,3,4,7,17,17,11,8,11,18,14,7,6,10,10,7,4,6,6,1,-1,-1,7,11,12,5,4,10,4,5,4,5,6,6,0,-5,6,10,4,4,3,10,14,11,9,16,30,19,7,7,11,10,7,4,3,4,3,2,-1,3,8,12,3,2,9,4,5,6,4,4,8,4,-1,7,10,6,6,6,8,10,11,11,24,32,19,6,7,11,12,8,5,3,4,6,6,1,3,6,11,3,1,6,5,5,6,5,4,10,11,4,8,10,8,9,10,8,7,10,13,35,31,17,5,5,13,14,10,4,3,6,9,10,6,3,5,11,4,-2,2,7,4,4,7,5,12,13,8,8,9,6,6,7,4,4,8,17,39,32,16,4,3,12,14,9,5,4,7,10,11,8,4,6,11,5,0,2,8,4,5,10,9,14,15,10,8,9,4,0,1,0,3,5,21,42,34,18,4,2,9,11,7,5,5,7,10,10,7,6,8,12,8,3,3,8,2,7,14,15,15,15,12,9,8,2,-2,0,0,3,3,23,37,30,17,5,3,9,4,1,5,6,8,9,7,5,5,8,11,9,4,2,7,3,9,16,16,15,15,14,10,6,1,-2,-1,3,3,4,26,29,21,16,6,4,9,-5,-6,2,6,9,8,3,1,5,7,8,9,2,1,7,7,11,15,14,16,16,15,10,6,3,0,-1,4,3,8,26,23,15,12,3,4,8,-5,-6,3,5,8,6,1,0,2,4,6,8,3,1,6,6,11,13,13,16,16,14,10,8,8,0,0,3,3,16,23,18,12,5,0,3,6,0,0,4,4,5,5,1,0,0,1,3,7,6,2,4,3,9,10,12,16,15,13,10,9,8,-1,0,2,6,21,22,16,12,3,0,2,5,4,5,5,4,5,4,0,0,0,1,2,6,8,4,3,3,8,10,11,16,14,12,10,11,4,-4,-1,0,10,23,24,18,13,6,3,3,5,7,6,5,3,6,4,0,0,-1,3,3,5,10,6,3,5,8,11,10,15,14,12,11,9,0,-6,-1,0,12,22,24,20,13,6,5,3,6,9,7,5,3,6,7,0,0,0,5,5,4,9,7,3,6,8,11,8,15,13,12,12,5,-4,-6,0,1,11,19,21,21,13,4,2,3,8,9,7,5,1,5,11,5,2,4,7,6,3,8,5,4,6,8,9,6,14,13,12,9,0,-4,0,3,4,12,17,19,19,12,3,2,3,9,9,7,5,1,3,11,7,4,6,6,4,3,6,5,4,4,8,7,3,14,13,12,4,-3,1,14,12,11,14,18,16,14,8,2,3,4,6,7,6,5,1,1,7,6,6,6,3,-1,0,5,6,4,1,8,4,2,14,13,10,0,-5,6,23,19,15,14,18,13,8,6,2,5,6,5,6,6,7,3,1,4,3,6,7,2,-4,0,4,7,4,1,7,3,3],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
