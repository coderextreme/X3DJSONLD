###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    Shape(
      appearance=Appearance(
        material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
        texture=ImageTexture(url=['../../images/5/singapore4-16.jpg'],repeatS=False,repeatT=False)),
      geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.247190112711976,103.81964454606431,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=36,xSpacing=4.103724E-4,zDimension=22,zSpacing=4.1579583E-4,height=[5,4,3,3,3,4,5,4,8,11,12,13,16,20,23,26,27,28,27,24,23,23,26,30,27,16,12,14,18,22,24,24,25,28,33,39,5,4,4,3,2,1,3,7,11,17,18,18,21,25,26,27,27,28,26,24,22,21,25,33,31,19,14,18,23,27,30,31,33,36,41,47,5,5,4,3,2,1,4,10,16,23,26,27,30,32,31,30,28,27,25,23,21,19,23,31,29,18,15,22,28,33,36,40,43,45,48,54,5,5,4,4,3,3,8,15,23,30,34,37,39,40,38,34,30,26,24,21,19,17,18,20,19,15,17,24,32,40,46,50,53,53,54,58,5,5,5,5,6,7,12,19,26,34,39,44,45,44,41,36,31,26,21,19,17,15,15,15,14,14,17,25,35,44,52,57,60,61,62,64,6,5,5,7,10,12,16,21,27,33,39,45,46,45,41,36,30,23,19,16,15,14,14,15,15,15,19,26,34,43,52,59,65,68,71,73,7,6,8,10,14,17,21,24,28,34,39,44,44,43,39,34,28,21,17,15,14,14,14,15,16,17,21,26,33,41,50,58,66,73,77,79,9,8,11,14,18,21,24,26,30,34,36,39,39,37,34,30,25,22,20,18,17,16,15,15,16,17,20,25,31,36,43,53,63,71,77,80,11,11,15,18,22,26,28,29,32,35,36,36,34,32,29,25,23,22,21,19,18,16,15,14,14,14,18,23,28,32,39,49,59,68,74,77,14,14,18,22,26,30,33,35,36,38,37,35,32,29,25,22,20,19,18,16,14,11,9,7,7,8,13,21,28,32,39,48,57,64,68,68,17,17,21,25,29,33,35,37,38,38,36,33,29,26,23,20,18,16,15,14,11,8,6,3,3,4,10,19,27,31,37,46,55,60,62,59,23,24,26,28,30,31,32,31,31,31,29,27,25,23,22,20,17,14,13,13,12,10,8,6,6,8,12,20,25,28,33,40,47,52,53,49,28,30,29,29,30,31,28,25,25,25,23,22,21,20,20,20,17,13,12,12,12,11,11,9,9,12,15,20,24,25,29,34,40,43,44,40,33,33,31,29,30,32,27,21,20,19,18,16,16,16,16,17,16,15,14,13,12,12,12,10,10,13,17,20,22,24,27,29,32,34,34,32,35,35,31,27,30,31,24,17,15,14,13,11,11,12,13,13,13,14,14,13,13,13,12,10,11,15,17,19,21,23,24,25,25,26,25,24,30,30,27,24,25,25,20,14,13,12,12,11,11,11,11,11,9,8,9,10,10,11,11,9,9,11,14,16,18,19,20,22,24,25,24,22,25,24,23,21,20,18,15,11,11,10,10,11,11,11,10,8,6,3,4,7,8,10,10,8,8,9,11,13,14,14,15,20,22,23,22,20,19,16,17,18,16,15,13,11,12,13,13,12,11,11,10,9,7,5,6,9,11,14,14,13,13,13,13,14,14,14,14,16,18,17,16,14,14,10,12,14,13,12,11,11,13,16,15,13,12,12,11,9,8,7,9,12,15,18,19,19,18,17,16,16,15,14,14,13,12,11,10,8,14,10,10,12,12,11,11,10,11,13,13,12,10,7,7,8,9,10,13,17,21,24,26,27,25,21,19,17,16,15,13,10,9,9,8,7,15,11,10,9,10,10,10,9,9,10,10,11,7,1,4,8,11,13,17,23,28,32,34,35,32,26,21,19,17,15,12,9,6,6,6,7,12,9,9,9,9,11,12,12,12,12,11,8,4,0,4,11,12,13,17,24,29,32,31,29,27,24,23,22,18,14,10,6,5,5,5,5],
        geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])))])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
