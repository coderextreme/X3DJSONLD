###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    Shape(
      appearance=Appearance(
        material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
        texture=ImageTexture(url=['../../images/5/singapore30-15.jpg'],repeatS=False,repeatT=False)),
      geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.4742146345398193,103.80528151193529,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=3.9897318E-4,zDimension=23,zSpacing=3.96896E-4,height=[-44,-43,-43,-43,-42,-41,-39,-28,-16,-7,1,2,3,3,2,2,2,2,2,3,3,4,3,3,2,2,2,2,3,4,4,4,3,3,2,1,0,-45,-44,-43,-43,-43,-42,-42,-35,-29,-18,-6,-1,2,3,3,3,2,2,2,3,3,3,3,3,2,2,3,3,3,3,4,4,3,2,2,1,0,-45,-44,-43,-43,-43,-43,-43,-41,-38,-27,-16,-7,1,2,3,3,2,2,3,3,3,3,2,2,2,2,3,4,4,4,4,4,3,2,1,1,0,-45,-44,-43,-43,-43,-43,-43,-42,-42,-35,-28,-17,-6,-1,1,2,3,3,3,3,3,3,2,2,2,3,3,4,4,4,4,3,3,2,1,1,0,-45,-44,-43,-43,-43,-43,-43,-43,-43,-40,-38,-28,-16,-7,0,2,3,3,3,3,2,2,2,2,3,4,4,4,4,4,3,3,2,2,1,1,0,-45,-44,-43,-43,-43,-43,-43,-43,-43,-42,-42,-35,-27,-16,-6,-1,1,2,3,3,2,2,2,3,3,4,4,4,4,4,3,3,2,2,2,2,3,-45,-44,-43,-43,-43,-43,-43,-43,-43,-43,-43,-40,-37,-28,-16,-8,0,2,2,2,2,2,3,4,4,4,4,4,3,3,3,3,3,3,4,6,7,-45,-44,-43,-43,-43,-43,-43,-43,-43,-43,-43,-42,-42,-35,-25,-13,-1,1,3,3,3,3,3,4,3,3,4,4,5,6,6,6,7,7,8,9,10,-45,-44,-43,-43,-43,-43,-43,-43,-43,-43,-43,-43,-43,-38,-32,-19,-4,1,5,5,3,2,2,3,2,3,3,5,9,12,12,12,12,12,12,12,12,-38,-37,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,-36,-32,-27,-15,0,5,10,9,6,4,2,1,1,2,2,4,9,12,14,15,15,14,14,13,13,-26,-25,-24,-24,-24,-24,-24,-24,-24,-24,-24,-24,-24,-19,-13,-3,8,14,16,15,12,8,2,0,0,1,1,2,5,9,13,15,16,15,15,14,14,-13,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-12,-7,-1,6,15,18,20,19,16,12,6,2,0,0,0,1,3,5,9,13,15,15,15,15,14,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,3,7,12,17,19,21,21,20,16,11,6,2,0,0,0,1,3,6,9,12,15,16,15,15,6,5,4,4,4,4,4,4,4,4,5,6,8,10,13,16,18,20,22,22,22,20,16,11,5,2,0,0,0,1,3,5,9,13,15,15,15,7,6,5,5,5,5,5,5,5,5,7,8,10,12,14,16,18,20,22,23,23,22,20,15,10,6,2,0,0,0,1,3,6,9,12,15,16,7,6,5,5,5,5,5,5,5,7,9,10,11,12,14,16,19,21,23,24,24,23,22,19,14,9,4,1,0,0,0,1,3,6,10,13,15,7,6,5,5,5,5,5,6,7,8,10,11,11,12,14,16,19,21,23,24,25,24,23,21,17,12,7,3,1,0,0,0,1,3,6,10,13,7,6,5,5,5,5,5,7,9,10,11,11,12,12,14,16,19,21,24,25,26,25,24,22,19,14,10,6,3,1,0,0,0,1,3,7,10,7,6,5,5,5,5,7,9,10,11,11,12,12,12,14,16,18,21,25,26,28,27,26,22,19,15,11,8,5,2,0,0,0,0,2,4,7,7,6,5,5,5,7,9,10,11,11,12,12,12,12,13,15,18,22,25,28,29,28,26,23,19,15,12,9,6,4,2,0,0,0,1,2,5,7,6,5,5,7,8,10,11,12,12,12,12,12,12,13,15,18,22,26,29,30,29,27,23,19,15,12,9,7,5,3,1,0,0,0,2,4,7,6,5,7,8,10,11,12,12,12,12,12,12,12,12,15,18,22,27,30,32,31,29,24,19,15,11,9,8,6,4,2,1,0,0,1,3,6,6,6,8,9,11,12,12,13,13,12,12,12,12,12,14,17,22,28,31,34,33,30,24,19,14,11,9,8,6,5,3,2,1,1,1,3],
        geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])))])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
