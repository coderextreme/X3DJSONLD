###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_510',geoSystem=['GDC'],position=(1.3083120993579338,103.8914597167094,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.3083120993579338,103.8914597167094,0.0),range=4101.627,child1Url=['../../tiles/5/singapore10-20.x3d'],child2Url=['../../tiles/5/singapore10-21.x3d'],child3Url=['../../tiles/5/singapore11-20.x3d'],child4Url=['../../tiles/5/singapore11-21.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore5-10.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.2995803869799398,103.87709668258039,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=45,zSpacing=3.96896E-4,height=[6,4,6,7,7,7,7,9,12,10,11,11,11,10,11,12,8,8,10,9,9,8,8,7,7,14,16,16,14,10,10,16,15,9,10,12,12,8,6,6,7,6,6,7,10,12,9,10,11,11,10,10,13,9,9,10,9,8,8,8,7,8,13,15,14,12,10,11,16,13,8,9,14,15,11,7,6,6,5,5,7,10,12,10,9,11,12,10,9,12,11,10,10,8,7,8,8,8,8,13,14,11,9,11,14,16,11,7,10,16,18,12,9,7,6,3,4,7,11,11,10,10,10,11,10,9,11,10,11,9,8,7,7,7,9,8,12,15,11,9,10,12,16,14,10,14,19,20,13,9,7,6,2,2,6,11,10,10,10,9,10,10,9,9,8,10,9,7,7,7,7,8,8,13,17,12,11,9,9,15,18,14,17,22,22,13,9,7,6,3,3,6,10,10,9,11,9,9,8,8,9,8,9,8,8,7,7,7,8,9,13,15,11,10,8,8,13,16,15,17,19,18,13,8,7,7,5,5,6,10,10,9,11,10,8,6,7,8,9,8,7,8,7,6,7,8,10,13,12,8,8,9,9,10,14,15,15,13,12,13,8,7,6,6,6,6,9,10,9,11,10,7,6,7,7,9,8,8,10,8,6,8,8,10,12,10,7,8,11,11,10,13,15,15,13,11,12,8,6,6,6,6,6,9,9,9,11,9,7,6,6,6,9,9,10,12,8,7,9,9,9,10,9,7,8,13,14,11,13,15,17,14,12,11,8,7,7,7,7,6,8,9,9,10,9,7,7,6,7,8,9,10,11,8,8,9,9,8,9,8,6,7,14,15,13,15,16,16,14,12,10,8,9,8,8,7,5,6,8,9,8,9,8,8,7,8,8,9,9,9,8,8,10,8,6,9,7,5,7,13,16,14,18,18,14,12,12,9,7,9,9,8,7,6,7,8,8,8,9,9,8,8,9,8,9,8,8,8,8,9,8,6,8,7,5,7,12,14,13,16,17,14,12,12,7,6,9,9,8,7,6,8,8,8,8,8,9,9,9,9,10,8,7,7,6,8,8,8,8,9,7,6,7,10,11,10,12,15,16,13,12,7,6,9,9,8,7,7,8,8,8,8,8,9,9,9,10,10,8,7,7,6,7,8,9,9,8,7,6,7,8,9,9,10,13,15,13,11,6,6,8,8,7,7,8,9,9,8,8,8,9,8,8,10,9,7,7,6,6,7,7,9,9,7,5,5,7,7,7,8,9,11,14,13,11,7,7,8,9,8,8,9,10,8,7,8,8,9,8,8,10,8,6,8,6,6,7,7,9,8,6,4,5,7,8,7,8,9,9,12,12,11,9,8,10,11,10,9,10,11,8,7,8,8,10,10,9,9,7,6,9,6,6,6,7,9,8,6,4,5,8,9,8,8,8,9,11,12,12,11,11,11,11,10,10,11,12,9,8,9,9,11,10,10,10,7,6,8,6,6,6,7,8,8,7,6,5,8,10,8,8,8,9,11,12,12,12,14,13,11,8,9,11,15,12,9,10,9,10,10,12,11,7,6,6,7,8,7,6,8,9,8,7,7,9,10,9,7,9,10,11,12,12,12,14,13,10,8,8,12,17,14,10,10,9,10,10,12,11,8,7,6,8,8,7,6,8,10,9,9,9,9,10,9,8,9,11,11,11,11,9,10,11,9,8,8,11,18,16,10,9,10,11,11,12,9,8,8,7,8,8,6,6,8,9,10,10,10,10,10,9,8,10,10,10,11,11,7,7,10,9,8,8,11,18,17,11,9,10,12,12,12,9,9,8,8,8,8,6,6,9,9,11,11,11,11,10,10,9,11,10,10,10,10,7,8,10,10,8,8,11,17,18,13,10,11,11,11,11,9,8,8,7,6,8,7,6,9,10,12,11,12,11,10,11,11,11,10,9,10,10,9,9,11,11,8,8,11,16,18,14,11,12,11,9,11,9,9,7,7,6,7,7,7,8,10,12,11,12,12,11,12,11,10,10,9,9,9,11,11,11,12,9,8,11,15,17,14,12,11,11,10,11,10,10,7,7,6,7,8,7,7,9,11,10,11,11,12,11,10,9,10,9,9,9,12,11,11,12,9,8,11,14,15,14,12,10,11,10,11,10,10,8,8,6,8,8,6,7,8,10,10,10,11,12,10,9,9,10,9,9,9,11,10,11,12,10,9,11,13,12,13,11,9,11,9,10,9,11,9,9,8,8,7,6,7,8,9,9,9,11,11,9,8,8,9,9,9,9,10,9,10,12,11,10,11,11,10,12,11,8,10,9,10,8,10,10,10,9,8,7,7,7,8,9,8,9,11,11,9,8,8,9,9,9,9,10,9,10,13,12,10,11,10,9,11,11,7,8,8,10,8,9,9,10,9,9,8,8,8,9,9,8,10,11,10,9,8,8,9,9,8,8,10,10,11,13,12,11,11,10,9,11,11,7,7,8,10,8,9,8,10,9,9,9,10,9,10,10,9,10,11,9,10,9,9,9,9,8,8,11,11,11,12,11,12,12,11,10,12,11,8,7,8,9,9,9,8,10,11,11,11,11,11,11,10,9,10,10,9,10,10,9,10,10,9,9,11,11,11,11,10,11,12,12,12,13,12,9,7,9,9,10,11,9,10,12,12,12,12,12,11,10,9,9,9,10,10,11,9,11,10,9,9,11,11,12,11,10,11,12,13,12,14,12,10,8,9,9,11,12,10,9,11,12,12,11,12,11,11,9,9,9,10,11,11,10,11,11,10,10,11,11,13,13,11,11,12,13,13,14,13,11,10,10,11,13,13,11,9,11,12,12,11,11,12,11,9,9,10,10,11,12,11,11,11,11,11,11,11,13,13,12,11,12,13,12,12,12,11,11,12,12,14,14,12,11,13,15,13,12,11,12,11,9,10,10,10,11,11,11,12,12,11,10,12,11,12,13,13,13,12,12,12,11,11,11,11,13,13,14,14,14,12,14,18,15,13,10,11,11,9,10,10,9,10,10,11,12,12,11,10,12,12,12,12,14,14,13,12,12,11,10,12,12,13,13,14,15,14,13,15,17,15,13,9,10,11,11,12,10,9,10,9,10,11,10,10,10,13,13,13,12,13,16,14,13,13,12,10,12,12,13,12,14,14,13,14,14,14,14,12,8,9,11,14,14,10,10,10,9,10,9,9,10,10,13,13,13,12,13,15,13,11,13,14,12,12,11,12,11,14,14,11,13,13,12,12,11,9,8,11,15,15,10,10,9,8,9,8,8,9,9,12,12,13,12,14,13,10,9,12,17,15,11,11,11,10,14,15,10,12,12,10,10,11,9,8,11,15,14,11,10,9,8,8,7,7,8,8,11,12,14,13,15,13,10,9,12,16,16,11,10,12,11,16,18,12,13,13,9,10,10,9,8,10,13,12,10,10,9,10,10,8,7,7,7,11,12,16,15,15,15,11,9,11,14,15,11,9,13,12,17,20,17,14,13,9,11,10,10,10,9,10,10,10,8,9,12,14,11,7,7,8,12,13,15,13,14,15,12,10,11,13,15,13,11,13,12,16,20,17,12,11,9,12,12,10,11,10,8,8,8,8,10,14,16,12,7,8,9,13,12,12,11,12,15,14,11,11,12,15,16,13,13,11,13,18,16,9,8,9,12,14,11,11,11,8,7,7,9,13,17,17,13,8,8,10,13,12,12,10,11,14,14,12,12,12,14,16,13,12,9,11,14,13,7,7,9,13,19,15,12,12,9,8,8,9,13,17,16,13,9,10,11],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
