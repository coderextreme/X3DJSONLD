###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_14',geoSystem=['GDC'],position=(1.238458400333982,103.71910330716118,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.238458400333982,103.71910330716118,0.0),range=4101.627,child1Url=['../../tiles/5/singapore2-8.x3d'],child2Url=['../../tiles/5/singapore2-9.x3d'],child3Url=['../../tiles/5/singapore3-8.x3d'],child4Url=['../../tiles/5/singapore3-9.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore1-4.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.229726687955988,103.70474027303216,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[9,13,12,6,7,7,3,2,4,4,1,1,1,0,2,3,1,0,4,2,4,0,-2,0,4,1,1,2,0,1,2,1,1,3,3,3,2,9,14,11,2,2,5,2,0,4,4,1,2,1,1,2,2,2,0,4,2,5,0,-3,0,7,3,3,4,1,2,4,2,3,5,4,3,3,7,10,10,2,1,4,2,1,4,4,2,3,2,2,1,1,1,0,5,3,7,0,-2,0,6,3,4,5,3,5,6,3,3,5,4,3,2,5,6,8,5,3,4,3,3,4,3,3,4,3,2,0,0,0,0,5,5,11,4,0,1,4,4,5,6,6,7,7,2,2,3,3,1,0,5,4,7,7,6,6,3,3,3,2,3,3,3,2,0,0,0,1,4,5,10,6,1,2,4,5,7,8,6,8,8,4,3,2,2,1,0,6,5,7,9,9,9,3,1,0,0,1,1,2,2,0,0,2,3,2,4,5,5,2,3,6,8,9,9,6,7,8,7,4,1,2,4,4,7,6,7,8,9,9,3,1,0,0,1,1,2,3,0,0,2,3,1,3,3,4,4,3,6,9,9,8,6,6,8,10,6,1,2,5,6,7,6,6,5,6,7,4,1,0,0,2,1,3,4,0,0,2,2,2,2,2,3,5,2,4,7,6,4,4,4,6,13,8,5,3,5,6,6,6,6,5,5,5,4,3,1,0,1,2,3,5,0,0,2,2,1,0,2,3,4,3,4,6,4,3,4,4,6,11,9,7,4,4,5,5,5,6,6,5,4,4,7,5,0,0,3,2,4,3,1,2,1,1,0,1,3,4,6,6,5,2,3,4,6,5,7,8,8,5,3,3,4,5,6,7,7,5,5,9,7,0,1,5,3,4,6,2,2,1,0,0,0,2,3,7,8,5,3,4,5,7,5,3,7,8,5,3,3,3,4,6,7,10,9,7,9,5,1,3,9,5,3,5,2,2,1,0,0,0,2,2,5,9,7,7,7,6,10,6,1,4,8,6,7,9,1,3,6,8,12,11,8,8,4,2,4,11,7,3,3,1,2,2,0,0,0,2,2,4,9,7,9,8,8,12,7,1,2,6,5,8,11,1,2,7,10,13,10,6,6,2,2,4,10,8,3,1,0,2,1,0,0,0,4,6,4,6,5,7,9,10,13,9,3,0,1,3,6,8,2,3,7,11,13,9,4,5,1,2,3,10,8,4,0,0,2,1,0,0,0,5,7,4,3,5,7,9,12,14,11,4,0,0,2,6,6,5,6,6,10,14,8,4,5,2,1,3,10,7,5,4,1,3,2,0,0,1,3,5,3,2,7,10,9,10,15,17,5,0,1,3,7,8,9,9,6,9,13,6,4,4,1,1,3,9,5,5,6,2,2,2,1,1,2,2,4,3,2,9,11,8,9,16,19,6,2,4,5,7,8,9,11,9,7,7,4,0,1,4,3,5,4,2,3,3,1,0,0,1,2,2,5,6,5,3,8,7,4,5,10,12,7,8,6,6,7,6,9,11,10,6,1,2,0,0,5,4,5,1,0,1,2,1,0,-2,1,2,2,7,5,4,4,7,3,1,3,7,7,8,12,8,6,6,4,6,7,9,5,0,0,-1,-1,2,2,3,0,0,0,1,0,0,0,0,2,4,7,3,0,1,4,2,4,8,8,2,5,10,8,4,3,3,5,4,8,5,0,0,-2,-1,0,1,3,0,0,0,1,-1,0,0,0,3,5,6,1,-2,0,1,2,6,12,8,-1,2,8,8,3,1,2,9,7,6,5,1,-1,-2,0,0,2,3,0,0,2,0,0,0,0,1,3,4,7,5,3,0,1,6,7,10,7,1,2,6,9,7,4,4,12,9,5,5,3,-1,-2,0,0,3,4,0,0,5,0,0,-1,0,2,4,4,6,8,9,0,2,9,7,8,6,3,2,4,10,9,7,6,7,5,4,4,0,-2,0,2,2,3,2,0,0,3,0,0,0,0,2,4,4,4,7,8,1,3,10,6,6,5,5,5,3,3,4,7,10,3,0,3,2,0,-3,1,5,2,3,1,-1,0,1,1,0,0,0,3,4,3,3,6,7,2,4,11,4,4,6,5,8,1,0,0,8,14,4,2,3,2,0,-1,1,4,1,2,1,0,0,0,0,0,0,0,3,3,3,5,12,8,0,5,10,5,3,6,6,7,2,2,2,7,11,6,4,2,2,0,0,2,2,0,1,0,0,0,0,0,0,0,0,3,3,2,8,18,9,0,6,8,4,2,7,6,7,4,6,5,5,8,8,7,3,1,0,0,3,2,0,0,0,0,0,0,0,0,0,0,3,3,4,9,13,5,1,8,7,2,1,5,10,8,5,7,4,2,5,10,9,4,1,0,0,3,1,0,0,0,0,0,0,0,0,0,1,3,2,6,9,7,1,4,12,6,1,1,4,13,9,7,7,2,0,1,8,8,5,1,0,0,3,2,0,0,0,0,0,0,0,0,0,1,2,4,8,9,7,3,6,12,4,1,2,3,10,7,7,6,1,1,3,5,6,6,1,0,1,2,2,0,0,0,0,0,0,0,0,0,1,2,6,9,9,8,6,8,12,2,3,4,2,6,6,7,4,1,4,7,4,8,7,2,0,1,1,2,1,0,0,0,0,0,0,0,0,1,4,8,9,9,9,7,10,11,3,4,8,7,7,7,7,3,1,3,5,5,11,7,3,0,0,1,2,2,0,0,0,0,0,0,0,0,2,6,10,10,10,11,9,13,11,5,6,11,14,11,9,6,1,0,2,3,5,11,9,5,1,0,1,2,2,1,0,0,0,0,0,0,0,2,7,10,11,11,11,9,11,10,7,10,11,15,11,8,7,2,0,1,2,6,10,12,8,2,0,1,2,3,2,0,0,0,0,0,0,0,3,7,9,11,12,9,8,9,10,11,16,12,14,11,6,8,3,0,1,2,6,9,12,10,5,1,1,2,3,2,1,0,0,0,0,0,1,4,7,8,9,10,8,7,5,5,11,18,11,11,9,5,7,4,3,3,3,6,8,11,12,8,3,1,2,3,3,2,0,0,0,0,0,2,4,5,6,7,7,7,7,1,0,11,19,11,6,6,4,5,2,7,6,4,6,7,10,12,11,6,2,2,3,3,3,3,9,12,16,18,10,4,4,4,4,4,5,6,2,1,10,16,8,5,2,2,4,4,8,6,3,6,7,8,11,12,9,4,2,2,3,3,6,22,30,39,44,23,4,2,2,1,0,3,6,5,4,8,11,6,6,0,0,3,7,9,6,3,6,6,7,11,13,12,8,6,13,22,22,25,38,45,51,55,36,11,1,0,0,0,1,4,7,7,10,10,6,7,0,0,3,8,9,6,3,6,6,7,11,14,14,14,12,30,50,50,51,55,57,58,58,47,21,2,0,0,0,0,0,7,10,13,12,8,9,4,1,3,8,10,7,5,8,10,13,17,19,21,19,22,44,63,63,63,62,62,60,59,54,33,8,0,0,0,0,0,6,9,12,11,12,13,10,3,2,8,10,9,7,11,16,24,28,28,28,26,33,56,63,64,64,63,62,61,59,56,45,19,2,1,1,2,0,4,7,8,9,15,18,15,4,1,7,12,10,8,14,23,31,34,32,33,29,36,60,63,64,64,63,62,61,59,57,51,30,7,2,2,3,0,5,6,6,6,15,19,19,5,1,7,11,10,8],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
