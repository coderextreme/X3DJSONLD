###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.0',
  Scene=Scene(
    children=[
    Group(
      children=[
      LOD(center=(27056.14,0.0,108224.56),range=[75757.195],
        children=[
        Group(
          children=[
          Inline(url=['../../tiles/4/PanamaCity2-0.x3d']),
          Inline(url=['../../tiles/4/PanamaCity3-0.x3d'])]),
        Group(
          children=[
          Transform(translation=(0.0,0.0,72149.71),
            children=[
            Shape(
              appearance=Appearance(
                material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0,0.05,0)),
                texture=ImageTexture(url=['../../images/3/PanamaCity1-0.jpg'],repeatS=False,repeatT=False)),
              geometry=ElevationGrid(xDimension=22,xSpacing=2576.7754,zDimension=21,zSpacing=3607.4854,height=[-26,-27,-28,-28,-26,-31,-34,-30,-29,-25,-28,-29,-30,-31,-35,-32,-31,-30,-30,-28,-29,-29,-30,-29,-30,-31,-32,-28,-23,-26,-28,-30,-32,-35,-35,-35,-38,-38,-37,-39,-38,-39,-37,-36,-28,-29,-29,-28,-25,-27,-28,-30,-32,-33,-39,-45,-52,-65,-89,-82,-77,-69,-52,-49,-48,-46,-28,-27,-29,-27,-29,-31,-33,-37,-44,-54,-88,-95,-95,-94,-95,-94,-91,-86,-79,-60,-59,-58,-31,-29,-29,-31,-33,-37,-44,-51,-62,-73,-100,-104,-106,-108,-108,-106,-103,-99,-96,-83,-75,-75,-33,-34,-33,-37,-42,-48,-51,-61,-68,-76,-122,-121,-124,-122,-120,-117,-113,-110,-106,-104,-100,-99,-33,-37,-43,-48,-53,-55,-56,-66,-74,-95,-150,-139,-138,-132,-130,-128,-124,-120,-117,-113,-109,-109,-45,-51,-55,-56,-60,-63,-72,-127,-145,-155,-155,-151,-145,-143,-139,-137,-132,-128,-123,-119,-116,-116,-56,-77,-86,-91,-102,-117,-142,-158,-162,-162,-160,-158,-152,-149,-147,-144,-139,-135,-130,-126,-123,-122,-79,-75,-86,-125,-143,-160,-169,-171,-170,-170,-168,-165,-159,-158,-153,-152,-146,-141,-137,-133,-129,-128,-77,-75,-91,-138,-170,-180,-184,-182,-180,-178,-176,-171,-166,-164,-159,-156,-152,-147,-143,-139,-135,-134,-91,-98,-140,-165,-188,-196,-194,-190,-187,-185,-182,-178,-175,-170,-166,-163,-159,-154,-150,-146,-142,-142,-145,-170,-189,-214,-232,-210,-203,-199,-195,-193,-188,-185,-182,-178,-172,-170,-166,-162,-158,-153,-150,-149,-180,-200,-218,-240,-224,-215,-210,-207,-204,-200,-197,-192,-188,-184,-181,-177,-174,-170,-166,-161,-157,-156,-209,-226,-235,-232,-226,-222,-219,-216,-213,-210,-206,-202,-200,-195,-191,-185,-183,-179,-176,-170,-166,-165,-233,-240,-241,-238,-236,-234,-229,-227,-224,-221,-219,-215,-211,-208,-203,-198,-194,-190,-186,-180,-176,-175,-250,-252,-249,-248,-249,-247,-245,-243,-240,-234,-232,-229,-225,-221,-218,-216,-209,-203,-199,-193,-189,-189,-264,-265,-267,-267,-266,-264,-263,-261,-257,-251,-249,-245,-241,-236,-233,-228,-225,-218,-215,-209,-204,-203,-283,-286,-288,-288,-289,-289,-288,-285,-280,-274,-269,-263,-261,-257,-253,-247,-244,-239,-233,-227,-221,-220,-309,-313,-316,-316,-319,-320,-319,-317,-311,-307,-303,-296,-290,-285,-280,-274,-268,-259,-255,-246,-240,-240,-310,-314,-317,-317,-319,-321,-320,-318,-312,-308,-304,-297,-290,-286,-281,-275,-268,-260,-255,-247,-241,-240]))])])])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
