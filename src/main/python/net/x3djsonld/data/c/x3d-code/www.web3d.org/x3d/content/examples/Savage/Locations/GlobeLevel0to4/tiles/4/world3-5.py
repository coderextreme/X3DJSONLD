###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    Shape(
      appearance=Appearance(
        material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0,0.05,0)),
        texture=ImageTexture(url=['../../images/4/world3-5.jpg'],repeatS=False,repeatT=False)),
      geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(-56.291665660871615,-67.54166331393873,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=22,xSpacing=1.0714287,zDimension=24,zSpacing=0.48913044,height=[-211,-2137,-3823,-4042,-3996,-4155,-4158,-3859,-3518,-3948,-3526,-4158,-3859,-5393,-3504,-4298,-4382,-5616,-4482,-3711,-4146,-3750,-93,-202,-3331,-3039,-4178,-4005,-4115,-4217,-4456,-4142,-3430,-4276,-3898,-3402,-4472,-3605,-3883,-3489,-4370,-3739,-4260,-4024,-125,-4,-2554,-3756,-3942,-4180,-4173,-4197,-4053,-4008,-4021,-4063,-3019,-2987,-3899,-4159,-4129,-3932,-3900,-3634,-3988,-3781,-128,-19,-1054,-1659,-3008,-4110,-4169,-4396,-2609,-4178,-3541,-3808,-3358,-3563,-4360,-4227,-4115,-4134,-3705,-4674,-3692,-4013,508,524,53,-37,-297,-1156,-348,-218,-246,-209,-186,-788,-2869,-3652,-3641,-4385,-3975,-3976,-4555,-4325,-5132,-3372,217,69,-83,-119,-113,-451,-192,-55,-84,-96,-127,-721,-1653,-2091,-2671,-3846,-4430,-4279,-4354,-3753,-4143,-3466,37,-68,-100,-146,-531,-477,-166,-312,-883,-904,-1735,-2185,-2669,-1769,-869,-315,-2473,-3879,-4570,-3594,-3451,-3713,-22,-82,-116,-142,-419,-420,-526,-705,-633,-1313,-2596,-2318,-2987,-2820,-2143,-1964,-1488,-2088,-3202,-1982,-1870,-1896,-74,-88,-121,-180,-287,-324,-319,-221,-119,-479,-892,-1624,-2053,-2642,-2897,-3307,-3052,-3262,-3698,-2775,-3269,-3378,-70,-89,-121,-159,-228,-276,-201,-8,-7,-125,-504,-1271,-1631,-1998,-2396,-2632,-2766,-2806,-3087,-3295,-3313,-3336,-70,-97,-152,-133,-192,-237,-37,-1,2,10,-362,-1041,-1453,-1861,-2094,-2287,-2386,-2401,-2405,-2621,-2805,-2684,-87,-108,-123,-131,-138,-190,-139,-17,-15,-25,-203,-798,-1337,-1743,-2002,-2178,-2434,-2505,-2563,-2715,-2726,-2681,-32,-110,-115,-142,-128,-173,-133,-138,-198,-126,-210,-774,-1293,-1714,-2034,-2055,-2455,-2734,-2779,-2633,-1711,-1638,-33,-82,-104,-122,-141,-156,-159,-180,-116,-235,-365,-675,-1151,-1644,-1996,-2262,-2260,-2751,-2733,-2708,-2273,-2553,79,-79,-104,-127,-137,-96,-170,-166,-309,-335,-388,-670,-1075,-1561,-2138,-2591,-2485,-2930,-2468,-2329,-3047,-3384,174,-95,-103,-84,-143,-128,-152,-266,-444,-302,-448,-831,-1411,-1824,-2682,-5976,-5456,-6039,-5667,-5602,-6060,-5812,114,-90,-122,-134,-119,-172,-160,-352,-632,-650,-884,-951,-2545,-4300,-6050,-6055,-6062,-5792,-5902,-5730,-6068,-5758,145,63,-67,-114,-129,-173,-157,-437,-858,-1517,-1474,-2482,-5000,-5886,-6006,-6125,-6209,-6088,-6052,-6079,-6040,-6064,87,134,-34,-96,-111,-136,-125,-556,-1186,-2588,-4577,-4922,-5829,-5959,-6061,-6065,-6175,-6114,-6104,-6058,-6033,-5971,229,158,4,-87,-123,-117,-141,-534,-1310,-3126,-4049,-5144,-5748,-6041,-6129,-6140,-6057,-6104,-6014,-5891,-5918,-5945,281,-78,-58,-97,-110,-122,-129,-505,-1390,-3096,-4100,-5312,-5946,-6054,-6089,-6152,-6100,-6058,-5828,-5676,-5667,-5729,230,-130,-82,-93,-94,-85,-114,-109,-1408,-2891,-4266,-5307,-5758,-6003,-6077,-6103,-6038,-5774,-5741,-5493,-5435,-5334,636,-102,-117,-113,-89,-86,-121,-169,-1343,-3325,-4613,-5320,-5748,-5932,-6005,-6031,-5938,-5652,-5576,-5386,-5238,-5230,669,-124,-88,-114,-90,-89,-112,-177,-1640,-3281,-4655,-5405,-5748,-5917,-6013,-6030,-5920,-5649,-5543,-5359,-5229,-5220],
        geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(0.0,0.0,-6378137.0),geoSystem=['GDC'])))])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
