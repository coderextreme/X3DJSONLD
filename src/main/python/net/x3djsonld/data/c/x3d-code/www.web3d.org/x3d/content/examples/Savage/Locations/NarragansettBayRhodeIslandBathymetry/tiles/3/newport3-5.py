###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoLOD(center=(41.45218369329644,-71.30755533508956,0.0),range=12300.69,child1Url=['../../tiles/4/newport6-10.x3d'],child2Url=['../../tiles/4/newport6-11.x3d'],child3Url=['../../tiles/4/newport7-10.x3d'],child4Url=['../../tiles/4/newport7-11.x3d'],
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(41.5,-71.5,0),geoSystem=['GDC']),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0,0.05,0)),
            texture=ImageTexture(url=['../../images/3/newport3-5.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(41.40380382238266,-71.35152298924505,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=55,xSpacing=0.0016284316,zDimension=52,zSpacing=0.0018972498,height=[-30,-30,-29,-28,-29,-29,-30,-30,-31,-31,-31,-31,-32,-32,-32,-31,-31,-31,-31,-31,-32,-32,-31,-31,-31,-31,-31,-31,-31,-31,-30,-30,-30,-30,-30,-30,-30,-30,-30,-29,-29,-29,-28,-28,-28,-27,-27,-26,-26,-26,-26,-26,-26,-26,-26,-30,-30,-27,-30,-26,-27,-27,-29,-30,-30,-30,-31,-31,-32,-32,-32,-31,-31,-32,-32,-32,-32,-32,-32,-31,-31,-31,-31,-31,-30,-30,-30,-30,-30,-30,-30,-30,-30,-29,-29,-29,-28,-28,-28,-27,-27,-27,-26,-26,-26,-26,-26,-26,-25,-25,-29,-30,-30,-29,-29,-25,-29,-29,-30,-30,-30,-31,-31,-31,-31,-31,-32,-32,-32,-32,-32,-32,-32,-32,-31,-31,-31,-30,-30,-30,-30,-29,-29,-29,-29,-29,-29,-29,-29,-29,-29,-28,-28,-28,-27,-27,-27,-26,-26,-26,-26,-25,-26,-25,-25,-29,-30,-29,-29,-28,-28,-26,-29,-29,-29,-30,-30,-30,-31,-31,-31,-31,-31,-31,-32,-32,-32,-32,-31,-31,-31,-31,-30,-30,-30,-29,-29,-29,-29,-28,-28,-28,-28,-28,-28,-28,-28,-28,-27,-27,-27,-27,-26,-26,-26,-26,-25,-25,-25,-25,-26,-29,-29,-28,-28,-25,-29,-28,-29,-29,-29,-30,-31,-31,-31,-31,-31,-31,-31,-31,-32,-31,-31,-31,-31,-31,-30,-30,-30,-30,-29,-29,-29,-28,-28,-28,-27,-27,-27,-27,-27,-27,-27,-27,-27,-27,-26,-26,-26,-26,-25,-25,-25,-25,-25,-26,-25,-28,-26,-29,-29,-29,-28,-28,-28,-29,-29,-30,-30,-31,-31,-31,-31,-31,-31,-31,-31,-31,-31,-31,-30,-30,-30,-29,-29,-29,-29,-28,-28,-28,-28,-27,-27,-27,-27,-27,-27,-27,-27,-26,-26,-26,-26,-26,-26,-25,-25,-25,-25,-25,-25,-25,-25,-25,-28,-28,-28,-29,-28,-27,-24,-28,-29,-30,-30,-31,-31,-31,-31,-31,-31,-31,-31,-31,-30,-30,-29,-29,-29,-29,-29,-28,-28,-28,-28,-27,-27,-27,-27,-27,-26,-26,-26,-26,-26,-26,-26,-26,-26,-25,-25,-25,-25,-25,-25,-26,-26,-27,-23,-28,-28,-28,-28,-28,-28,-22,-25,-28,-27,-30,-30,-30,-31,-31,-31,-31,-31,-31,-31,-30,-30,-29,-29,-29,-28,-28,-28,-28,-28,-27,-27,-27,-26,-26,-26,-26,-26,-26,-26,-25,-26,-26,-25,-25,-25,-25,-25,-25,-25,-25,-23,-25,-24,-26,-27,-27,-28,-28,-21,-26,-22,-25,-28,-29,-30,-30,-30,-30,-30,-30,-30,-30,-30,-30,-30,-30,-29,-29,-29,-28,-28,-28,-28,-28,-27,-27,-27,-27,-26,-26,-26,-26,-25,-25,-25,-25,-25,-25,-25,-25,-25,-25,-25,-24,-24,-23,-22,-21,-25,-25,-26,-27,-26,-27,-23,-21,-25,-26,-28,-29,-29,-29,-29,-30,-30,-30,-30,-30,-30,-30,-30,-29,-29,-29,-28,-28,-28,-27,-27,-27,-27,-27,-27,-26,-26,-26,-26,-25,-25,-25,-25,-25,-24,-24,-25,-25,-24,-24,-24,-24,-17,-18,-20,-22,-25,-26,-26,-28,-27,-24,-20,-24,-26,-28,-28,-28,-28,-29,-29,-29,-29,-29,-29,-29,-29,-29,-29,-29,-28,-28,-28,-27,-27,-27,-27,-26,-26,-26,-26,-26,-25,-25,-25,-25,-25,-25,-25,-24,-24,-24,-24,-24,-24,-24,-24,-17,-20,-17,-20,-22,-25,-25,-26,-27,-24,-20,-23,-24,-27,-27,-28,-28,-28,-28,-28,-28,-29,-29,-29,-29,-29,-29,-29,-28,-28,-28,-28,-27,-27,-26,-26,-26,-26,-25,-25,-25,-25,-25,-25,-24,-24,-24,-24,-24,-24,-24,-24,-24,-24,-24,-19,-23,-19,-21,-22,-19,-24,-26,-26,-24,-21,-21,-26,-26,-26,-27,-27,-27,-27,-27,-28,-28,-28,-28,-28,-28,-28,-28,-28,-28,-28,-28,-27,-26,-26,-26,-25,-25,-25,-25,-25,-25,-25,-25,-24,-24,-24,-24,-24,-24,-24,-24,-24,-24,-24,-19,-23,-22,-21,-20,-21,-20,-23,-27,-24,-26,-28,-27,-27,-26,-26,-27,-26,-25,-26,-27,-27,-27,-28,-27,-28,-28,-28,-28,-28,-28,-27,-27,-27,-26,-25,-25,-25,-25,-25,-25,-25,-25,-25,-24,-24,-24,-24,-24,-24,-24,-24,-24,-24,-24,-23,-24,-24,-20,-19,-17,-22,-25,-26,-27,-27,-27,-27,-26,-26,-20,-23,-26,-26,-24,-26,-27,-27,-27,-27,-27,-27,-27,-27,-27,-27,-27,-27,-27,-26,-26,-25,-25,-25,-24,-24,-24,-24,-24,-24,-24,-24,-24,-24,-24,-24,-24,-24,-24,-24,-21,-23,-19,-19,-19,-20,-20,-23,-23,-26,-26,-26,-26,-21,-25,-25,-25,-25,-26,-26,-26,-26,-26,-27,-26,-26,-26,-24,-26,-27,-27,-27,-27,-27,-26,-26,-25,-25,-25,-24,-24,-24,-24,-24,-24,-24,-24,-24,-24,-24,-24,-24,-24,-24,-24,-21,-21,-16,-15,-14,-13,-17,-22,-24,-23,-25,-25,-26,-26,-25,-25,-24,-23,-24,-25,-25,-26,-26,-26,-26,-20,-24,-22,-21,-23,-25,-26,-27,-26,-26,-26,-25,-25,-24,-24,-24,-24,-24,-24,-24,-24,-24,-24,-23,-23,-23,-23,-24,-23,-23,-19,-18,-12,-12,-12,-15,-19,-20,-23,-23,-24,-24,-24,-24,-24,-21,-23,-23,-20,-24,-24,-25,-25,-25,-19,-25,-23,-21,-18,-20,-23,-26,-26,-26,-25,-25,-25,-24,-24,-24,-24,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-17,-15,-9,-6,-8,-14,-20,-15,-21,-22,-22,-22,-23,-23,-19,-21,-19,-19,-21,-23,-23,-24,-23,-24,-24,-19,-18,-17,-18,-21,-24,-25,-25,-25,-24,-24,-25,-24,-24,-24,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-12,-10,-16,-18,-15,-12,-20,-20,-20,-20,-21,-18,-21,-20,-20,-20,-18,-14,-20,-20,-22,-23,-23,-22,-19,-15,-15,-22,-25,-22,-25,-24,-24,-24,-24,-24,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-23,-22,-22,-22,-22,-22,-10,-9,-12,-19,-19,-18,-19,-20,-18,-19,-19,-20,-21,-16,-18,-20,-21,-22,-22,-21,-21,-21,-21,-20,-18,-20,-20,-18,-19,-24,-24,-23,-23,-23,-23,-23,-23,-23,-23,-22,-23,-23,-23,-22,-23,-23,-23,-23,-22,-22,-22,-21,-20,-18,-17,-8,-5,-9,-10,-13,-19,-19,-19,-11,-9,-16,-20,-20,-20,-21,-19,-20,-21,-21,-20,-20,-17,-19,-14,-14,-12,-17,-22,-22,-22,-23,-23,-23,-23,-23,-22,-23,-22,-23,-23,-22,-22,-22,-22,-22,-22,-22,-22,-22,-22,-21,-20,-19,-17,-16,-7,-6,-1,0,-2,-12,-17,-17,-17,-18,-18,-18,-19,-19,-19,-18,-18,-18,-19,-18,-18,-11,-14,-17,-12,-13,-9,-10,-18,-21,-21,-21,-22,-22,-22,-22,-22,-22,-22,-22,-22,-22,-22,-22,-22,-22,-22,-21,-21,-20,-20,-19,-15,-15,-14,-5,-4,-5,-4,-4,-7,-14,-15,-17,-13,-17,-16,-17,-16,-17,-17,-16,-17,-17,-16,-16,-11,-11,-14,-7,-10,-9,-11,-16,-19,-19,-20,-20,-20,-21,-21,-21,-21,-22,-23,-22,-22,-22,-22,-22,-21,-21,-21,-21,-20,-20,-19,-14,-13,-11,-1,-2,-2,0,-3,-5,-9,-13,-12,-6,-9,-13,-14,-14,-14,-14,-14,-14,-14,-14,-14,-11,-9,-9,-4,-6,-9,-7,-11,-18,-18,-19,-19,-20,-20,-20,-20,-21,-21,-21,-21,-21,-21,-21,-21,-21,-21,-21,-20,-20,-19,-19,-15,-12,-12,0,-1,0,-2,-4,-7,-9,-6,-2,0,-1,-6,-7,-11,-12,-12,-12,-12,-12,-12,-12,-12,-12,-8,-2,0,-3,-4,-7,-14,-17,-17,-18,-19,-19,-19,-19,-17,-20,-21,-21,-21,-21,-21,-21,-21,-20,-20,-20,-20,-19,-19,-17,-13,-13,0,0,0,0,-1,-1,-2,-2,0,0,-1,0,-3,-3,-1,-3,-5,-11,-10,-10,-9,-9,-8,-7,-3,0,0,-1,-2,-5,-15,-17,-17,-17,-18,-18,-17,-14,-18,-20,-20,-20,-20,-20,-20,-20,-20,-19,-19,-19,-19,-18,-17,-14,-13,0,0,0,0,0,0,0,0,-1,-1,-1,0,0,-1,-3,-3,-1,-2,-5,-8,-7,-3,-4,-3,-1,0,0,0,0,-4,-14,-15,-16,-16,-17,-17,-16,-13,-18,-20,-20,-20,-20,-20,-20,-20,-20,-19,-19,-19,-18,-18,-17,-15,-13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,-2,0,-7,-5,-1,0,0,0,0,0,0,0,0,-1,-1,-12,-13,-15,-15,-15,-14,-13,-18,-19,-19,-19,-20,-19,-19,-19,-19,-19,-19,-19,-18,-18,-18,-16,-15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-2,0,-1,0,0,0,0,0,0,0,0,0,0,-2,-6,-10,-13,-14,-13,-12,-10,-17,-18,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-19,-18,-18,-18,-17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3,-2,-11,-13,-12,-10,-12,-17,-17,-18,-18,-18,-18,-18,-18,-18,-18,-18,-18,-18,-18,-17,-17,-17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-5,-7,-9,-10,-10,-9,-12,-16,-16,-16,-17,-17,-17,-17,-17,-17,-17,-17,-17,-17,-17,-17,-16,-16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-4,-4,-5,-6,-7,-9,-14,-15,-15,-15,-16,-16,-16,-17,-17,-17,-17,-17,-17,-17,-17,-17,-16,-16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-1,-2,-2,-4,-7,-10,-13,-14,-14,-14,-15,-15,-15,-16,-15,-16,-16,-16,-16,-16,-16,-16,-16,-16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-5,-11,-12,-12,-13,-13,-13,-14,-14,-14,-15,-15,-16,-16,-15,-16,-16,-16,-16,-16,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-6,-10,-11,-11,-11,-12,-12,-12,-13,-13,-13,-14,-14,-15,-15,-15,-15,-15,-16,-16,-45,-26,-12,-1,0,0,0,0,0,0,-3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,-7,-8,-9,-10,-10,-10,-10,-11,-11,-12,-12,-13,-13,-14,-14,-14,-14,-14,-15,-15,-49,-48,-39,-23,-8,0,0,0,0,0,-3,-4,-4,-4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3,-7,-7,-8,-8,-8,-8,-9,-9,-10,-10,-9,-8,-10,-12,-13,-13,-13,-13,-14,-14,-44,-49,-48,-39,-27,-12,0,0,0,0,0,-4,-4,-4,-4,-4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-4,-5,-6,-6,-7,-7,-7,-8,-8,-8,-9,-7,-4,-7,-11,-11,-12,-12,-12,-13,-13,-40,-46,-47,-46,-36,-25,-12,0,0,0,0,-4,-5,-6,-6,-4,0,-3,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,-4,-5,-5,-6,-6,-6,-7,-7,-7,-8,-5,-1,-5,-9,-10,-10,-10,-11,-11,-11,-33,-47,-49,-46,-39,-30,-21,-8,-1,0,0,-7,-8,-7,-6,-5,-5,-5,-4,-4,-3,-1,0,0,0,0,0,0,0,0,0,0,0,0,-1,-4,-4,-5,-5,-5,-5,-6,-7,-7,-7,-3,-1,-1,-6,-9,-9,-9,-9,-9,-10,-20,-43,-50,-45,-40,-31,-24,-16,-4,-1,-6,-11,-9,-9,-6,-6,-6,-5,-5,-4,-4,-3,0,0,0,0,0,0,0,0,0,0,0,0,-1,-3,-4,-4,-4,-5,-5,-5,-6,-8,-6,-1,0,0,0,-5,-8,-8,-8,-8,-8,-1,-46,-46,-45,-43,-35,-27,-21,-12,-10,-12,-13,-13,-12,-4,0,-5,-7,-5,-5,-5,-3,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,-3,-3,-4,-4,-4,-4,-4,-3,0,0,0,0,0,0,0,-7,-7,-6,-6,-32,-45,-44,-43,-38,-35,-30,-23,-19,-16,-14,-15,-15,-12,-2,0,-3,-6,-6,-5,-5,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-1,-2,-3,-3,-3,-3,-3,-2,0,0,0,0,0,0,0,-1,-5,-5,-5,-41,-41,-40,-40,-36,-34,-30,-22,-18,-17,-16,-16,-14,-12,-2,0,-3,-6,-6,-5,-5,-4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-1,-1,-1,-1,0,0,0,0,0,0,0,0,0,-2,-3,-2,-34,-37,-38,-38,-37,-32,-27,-22,-17,-14,-15,-16,-15,-12,-3,0,-5,-6,-1,-1,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-32,-36,-38,-39,-37,-32,-23,-16,-14,-12,-14,-16,-14,-12,-3,0,-5,-6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-33,-37,-39,-39,-37,-29,-19,-13,-11,-10,-12,-14,-16,-14,-6,0,-6,-7,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-34,-37,-40,-39,-36,-18,-3,-1,-4,-6,-11,-16,-15,-14,-8,-5,-6,-6,-3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-35,-37,-39,-38,-34,-9,0,0,0,-3,-10,-14,-14,-15,-10,-7,-6,-6,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-34,-36,-39,-40,-28,-12,0,0,-1,-2,-9,-13,-12,-15,-10,-9,-6,-6,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-35,-36,-39,-40,-28,-12,0,0,-1,-2,-10,-13,-12,-14,-10,-9,-6,-6,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
