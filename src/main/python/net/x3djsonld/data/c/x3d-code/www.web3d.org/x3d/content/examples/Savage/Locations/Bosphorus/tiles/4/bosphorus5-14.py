###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    Shape(
      appearance=Appearance(
        material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0,0.05,0)),
        texture=ImageTexture(url=['../../images/4/bosphorus5-14.jpg'],repeatS=False,repeatT=False)),
      geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(40.898245841898074,29.47604227744523,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=22,xSpacing=0.0035324567,zDimension=24,zSpacing=0.0023768744,height=[244,252,273,302,297,248,216,193,200,218,205,201,220,200,187,200,231,254,289,261,251,249,225,267,271,326,280,264,230,202,185,202,217,205,200,197,191,193,221,269,257,229,238,231,219,253,277,294,266,244,217,203,185,189,215,210,194,185,182,185,206,237,206,200,225,242,219,275,282,290,257,270,230,195,183,181,198,216,203,186,177,183,180,187,184,190,206,205,234,269,269,292,263,247,242,211,185,174,180,201,216,186,172,175,189,197,197,212,237,239,213,230,275,268,268,243,246,221,186,178,170,177,211,203,171,179,216,236,232,222,254,260,214,237,263,279,232,225,214,207,185,178,175,168,172,170,173,180,202,242,259,249,253,260,219,254,239,272,229,210,201,208,186,176,172,169,165,164,172,187,220,237,270,291,288,289,199,229,229,253,244,215,207,194,181,182,181,178,171,162,173,182,195,214,246,272,310,309,209,194,220,227,239,228,205,200,190,197,195,183,165,166,174,186,217,231,252,259,283,285,182,198,235,219,215,220,225,218,214,187,202,185,165,165,173,179,196,197,230,262,270,274,201,223,235,219,197,229,226,213,199,183,185,188,168,158,164,169,175,204,243,258,280,272,198,245,220,215,206,192,210,218,203,185,177,172,158,160,165,180,185,197,231,241,244,246,197,241,201,207,207,172,184,217,192,194,164,160,156,165,174,171,177,190,203,226,264,269,198,220,191,192,181,167,184,228,200,181,179,157,161,178,180,185,183,187,206,235,264,246,178,196,184,176,165,158,181,209,198,196,196,165,155,204,188,184,200,220,195,200,204,206,174,175,175,181,163,156,174,184,180,173,187,151,154,162,165,191,218,245,209,212,229,224,155,165,185,177,161,151,170,176,175,180,146,151,164,178,179,172,183,243,231,229,243,233,157,173,183,167,166,150,146,164,166,150,152,160,167,188,189,196,214,197,260,273,253,247,159,158,170,154,181,164,138,136,145,145,161,186,187,195,224,199,237,202,198,211,211,216,137,153,165,147,183,165,137,137,143,152,169,197,224,180,214,213,216,246,243,210,259,252,133,161,155,151,154,136,133,138,149,170,184,185,218,197,221,245,244,257,261,243,250,264,133,134,132,140,128,136,134,146,146,156,187,194,206,194,219,216,231,271,281,246,244,262,135,131,129,135,129,136,134,146,149,154,182,192,203,200,210,214,235,268,281,248,241,255],
        geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(41.06225017873692,29.030952729968703,0),geoSystem=['GDC'])))])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
