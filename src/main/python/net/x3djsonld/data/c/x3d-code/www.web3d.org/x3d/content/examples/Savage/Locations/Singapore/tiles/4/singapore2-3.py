###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_23',geoSystem=['GDC'],position=(1.25592182508997,103.69037723890314,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.25592182508997,103.69037723890314,0.0),range=4101.627,child1Url=['../../tiles/5/singapore4-6.x3d'],child2Url=['../../tiles/5/singapore4-7.x3d'],child3Url=['../../tiles/5/singapore5-6.x3d'],child4Url=['../../tiles/5/singapore5-7.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore2-3.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.247190112711976,103.67601420477412,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[1,3,6,3,0,-4,-5,-4,0,1,2,0,0,2,0,0,0,1,2,4,2,1,4,5,4,1,2,10,14,13,8,12,10,10,8,10,14,1,5,13,6,-1,-4,-5,-3,0,0,1,0,1,4,1,0,0,1,2,3,3,3,5,4,2,0,6,12,13,13,10,11,10,8,4,11,17,1,8,17,8,-1,-2,-3,-2,0,-1,0,1,1,4,3,0,0,0,1,2,4,4,5,4,2,2,8,12,11,12,13,9,4,1,0,12,19,2,10,16,8,0,0,0,0,0,0,0,1,1,3,4,1,0,0,1,2,3,5,5,4,3,5,8,10,9,10,14,4,-6,-12,-3,11,22,3,10,14,8,1,2,0,0,1,0,0,1,0,1,4,3,0,0,0,1,3,5,5,4,5,7,8,8,7,8,11,0,-16,-21,-9,14,25,4,7,11,7,0,1,0,1,2,0,0,0,0,1,3,3,1,0,0,1,3,5,5,4,5,6,8,7,6,5,3,-7,-21,-22,-16,24,32,3,4,7,7,0,0,0,1,3,1,0,0,1,0,1,3,3,0,0,0,3,5,5,5,5,5,7,7,6,3,-2,-13,-22,-20,-17,30,35,1,0,3,6,0,0,0,1,3,0,0,1,1,0,1,1,3,1,0,0,4,5,5,5,5,5,6,7,6,3,-7,-14,-18,-16,-9,29,35,0,0,0,4,0,-1,1,2,3,0,0,1,2,0,0,0,2,3,0,0,4,5,5,5,5,5,6,7,6,2,-10,-13,-13,-11,0,27,32,0,0,1,3,2,0,2,2,3,0,1,2,1,0,-4,-5,0,2,1,0,3,4,5,5,5,5,6,6,5,1,-7,-6,-5,-3,6,25,29,1,1,1,2,2,1,2,2,2,0,1,2,1,-1,-8,-8,-3,1,1,0,3,3,4,5,5,5,6,5,5,1,-3,-1,0,1,10,21,25,0,0,0,0,3,2,1,0,0,0,0,0,0,-5,-9,-9,-5,-1,-1,0,1,2,3,3,4,3,6,6,5,4,0,0,2,3,8,15,20,0,-2,-1,0,3,2,1,-1,0,-1,0,0,-2,-8,-9,-9,-7,-5,-5,-3,0,2,2,2,3,2,5,7,6,6,4,3,4,5,6,9,16,0,-1,-1,0,3,2,3,-1,0,0,2,0,-5,-8,-7,-7,-5,-6,-7,-5,-1,0,0,0,0,3,5,7,6,6,5,6,7,6,6,7,11,0,0,0,0,3,3,4,0,0,4,5,0,-7,-8,-6,-5,-4,-7,-9,-7,-3,0,0,-1,-1,3,5,6,7,6,8,8,9,8,8,5,7,-2,0,0,0,1,2,2,0,0,3,4,0,-3,-3,-3,-2,-2,-4,-8,-8,-5,-2,0,-1,0,3,5,7,8,9,9,9,9,9,10,7,7,-5,0,1,0,0,1,0,0,1,1,2,0,0,0,0,0,0,-1,-5,-9,-7,-4,-1,-1,0,3,5,7,9,12,11,8,9,11,12,9,8,-3,0,1,0,0,1,0,1,2,1,3,3,4,3,2,0,0,0,-2,-7,-8,-5,-3,-2,0,3,5,7,9,13,13,9,9,10,11,9,8,-1,0,2,0,1,1,2,4,3,2,4,6,9,7,5,1,0,0,1,-4,-9,-6,-4,-2,0,3,6,7,8,13,14,11,9,10,10,9,9,-2,0,2,0,0,0,0,1,2,0,0,1,6,8,6,1,0,0,2,0,-7,-7,-5,-2,1,4,6,7,7,10,12,11,9,10,10,9,8,-3,0,1,0,-1,0,-2,-1,1,0,-5,-1,3,8,6,0,-1,0,4,3,-4,-9,-5,-2,4,5,7,6,6,6,9,11,10,10,10,10,9,0,0,0,-7,-6,0,-1,-2,1,0,-10,-7,0,6,3,-1,-2,0,5,5,-1,-7,-6,0,5,7,7,6,5,5,7,10,9,9,10,12,11,1,0,-2,-16,-10,0,-1,-3,2,2,-15,-13,-2,3,1,-2,-3,0,6,9,3,-5,-7,0,7,8,9,6,5,3,4,9,8,7,10,13,13,3,2,-1,-12,-10,0,0,-3,2,5,-8,-15,-8,0,0,-3,-3,0,7,9,2,-2,-3,2,7,8,7,6,5,4,5,9,7,6,8,11,10,4,4,0,-6,-10,-1,-1,-2,3,9,-1,-17,-13,-3,-1,-4,-4,-1,8,9,1,0,1,4,7,7,6,6,4,6,8,9,7,5,6,9,8,4,5,1,-2,-4,2,2,0,7,9,4,-10,-15,-6,-1,-2,-2,0,6,4,-1,0,1,4,7,7,6,6,5,6,8,8,7,5,7,8,8,5,5,3,0,1,8,7,4,12,10,9,-2,-16,-9,-1,0,0,0,3,-1,-6,0,1,5,7,7,7,7,5,7,7,6,7,7,8,8,9,5,6,4,2,4,9,18,27,22,11,8,2,-10,-7,0,1,1,1,3,0,-4,0,2,6,7,7,7,6,5,7,7,7,8,8,9,8,9,6,7,5,5,6,9,30,54,33,12,7,5,-3,-4,0,3,3,3,5,2,-1,0,4,7,7,7,7,6,5,7,7,8,9,10,9,9,10,6,7,5,6,7,9,29,46,27,10,4,4,0,0,1,4,4,2,3,2,0,2,6,7,8,8,8,6,5,7,7,9,9,10,10,10,11,5,6,4,6,8,10,22,24,14,6,3,1,0,1,4,4,3,0,0,2,1,3,6,8,9,9,8,6,7,6,8,9,10,11,11,11,13,5,5,4,6,8,10,16,14,9,5,1,0,2,5,5,4,1,0,0,1,3,6,7,8,9,10,8,7,8,7,8,10,11,12,12,12,13,5,5,6,7,8,10,11,9,8,3,0,0,4,9,7,3,0,-1,-1,0,5,7,8,8,9,10,7,7,9,9,9,9,11,13,13,13,12,6,8,7,7,8,9,8,6,7,1,0,0,7,14,12,6,1,0,-1,1,6,8,8,8,8,9,7,8,10,10,10,9,11,13,13,13,11,9,15,8,7,8,7,6,6,7,0,-1,0,11,18,17,12,5,1,0,2,6,9,9,8,7,8,8,8,10,10,11,8,11,12,12,12,11,10,17,8,7,7,6,5,5,6,0,-1,-1,13,20,20,16,8,3,1,4,8,9,9,9,7,7,9,9,10,10,10,8,10,11,11,11,10,10,17,7,6,7,6,3,4,3,0,-2,-2,12,20,21,19,10,4,3,6,10,12,11,11,8,9,12,11,10,9,10,8,8,9,11,9,8,9,13,6,6,7,6,3,3,1,0,-2,-1,10,19,20,19,10,4,4,7,12,15,15,13,9,8,12,11,9,8,10,9,8,8,10,9,8,6,7,4,5,7,6,4,2,0,0,0,0,9,17,19,16,8,4,4,7,13,19,20,15,9,7,9,9,8,8,11,11,8,8,9,9,10,5,5,4,7,7,6,5,2,0,1,1,1,7,13,17,13,5,3,4,7,13,20,21,16,8,6,7,7,8,9,12,12,9,8,8,10,11,5,6,5,10,7,6,5,3,2,2,3,3,5,9,13,9,3,2,5,7,13,19,21,16,7,5,5,6,9,11,12,11,10,7,7,10,11,5,7,5,10,7,6,5,4,5,4,4,6,5,7,9,4,0,2,5,8,13,17,19,14,6,4,5,6,9,12,12,11,10,6,6,10,11,6,8,4,7,7,6,5,6,7,5,5,8,5,5,5,0,-2,2,7,8,12,16,15,10,4,4,9,8,9,13,12,11,10,6,7,9,12,7,7,2,5,8,6,6,7,7,5,5,8,6,3,2,-1,-3,2,7,8,10,13,11,7,3,4,10,9,8,12,11,11,11,6,7,10,14],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
