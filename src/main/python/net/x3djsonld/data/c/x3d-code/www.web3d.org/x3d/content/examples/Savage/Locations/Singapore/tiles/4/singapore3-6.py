###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_36',geoSystem=['GDC'],position=(1.273385249845958,103.77655544367725,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.273385249845958,103.77655544367725,0.0),range=4101.627,child1Url=['../../tiles/5/singapore6-12.x3d'],child2Url=['../../tiles/5/singapore6-13.x3d'],child3Url=['../../tiles/5/singapore7-12.x3d'],child4Url=['../../tiles/5/singapore7-13.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore3-6.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.264653537467964,103.76219240954823,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[0,2,5,9,12,15,16,18,18,18,18,18,17,16,12,11,11,10,9,8,7,7,7,7,9,10,11,12,14,15,16,18,18,16,10,6,5,1,2,4,7,10,13,16,17,18,18,18,18,17,14,12,11,10,9,9,7,7,7,7,7,10,10,10,11,13,14,15,17,18,17,13,8,6,2,2,4,6,9,12,15,16,18,18,18,17,16,12,11,11,10,9,8,7,7,7,7,8,10,10,10,11,12,14,15,16,18,18,16,10,7,2,2,3,5,7,10,13,16,17,18,18,17,13,11,11,10,9,9,7,7,7,7,6,8,10,10,10,10,11,13,14,15,17,18,17,13,10,3,2,2,4,6,9,12,15,16,18,17,15,11,11,11,10,9,8,7,7,7,6,6,9,11,11,10,10,10,12,14,15,16,18,18,15,13,3,2,2,3,5,7,10,13,16,16,17,13,10,11,10,9,9,7,7,7,6,6,5,10,12,11,10,10,10,11,13,14,15,17,18,17,15,3,3,2,2,4,6,8,11,14,15,15,9,9,11,10,9,7,7,7,7,6,5,4,12,12,12,11,10,10,10,11,14,15,15,17,19,18,3,3,2,2,3,5,7,10,12,15,13,8,9,10,9,9,7,7,7,6,6,4,4,10,12,12,11,10,10,10,11,13,14,15,17,18,18,5,3,3,2,2,4,6,8,10,13,10,6,10,9,9,8,7,7,7,6,5,4,5,9,12,12,12,11,10,10,10,12,14,15,16,18,18,7,3,3,2,2,3,4,6,8,8,7,5,9,9,9,7,7,7,7,6,4,3,6,8,10,12,12,11,10,10,10,11,13,14,15,16,17,9,5,3,3,2,2,3,5,7,4,4,4,7,9,8,7,8,8,8,5,4,3,8,8,9,12,12,12,11,10,10,10,12,14,15,15,15,10,7,3,3,2,2,3,4,4,4,4,4,5,9,8,9,9,9,8,5,3,3,8,8,8,10,12,12,11,10,10,10,11,13,14,14,14,11,9,5,3,3,2,2,2,2,4,3,3,3,8,8,11,10,10,7,4,3,4,8,9,8,9,12,12,12,10,10,10,10,12,14,14,13,9,10,7,3,3,2,1,0,1,5,3,3,4,10,13,12,11,10,6,3,3,2,7,8,8,8,10,12,12,11,10,10,10,11,13,14,13,7,11,9,4,3,2,0,0,0,6,4,3,4,12,18,14,12,9,4,3,2,1,6,8,9,8,9,11,12,11,10,9,10,10,12,14,15,4,9,9,6,3,0,-4,-2,0,6,5,5,5,10,18,14,11,6,3,2,2,0,3,7,8,8,8,10,12,11,10,9,9,10,11,13,14,0,6,10,8,3,-3,-9,-4,0,7,6,8,8,6,15,13,9,4,3,2,1,-1,0,6,8,9,8,9,11,11,10,9,9,9,10,12,12,0,3,8,9,3,-5,-10,-7,0,7,7,12,13,8,11,10,6,3,3,3,0,-2,-1,3,7,8,8,9,11,11,10,8,8,8,9,9,8,-1,1,6,10,3,-6,-11,-10,0,7,9,16,19,11,7,6,4,3,3,4,0,-3,-4,0,6,8,8,8,9,11,11,8,6,8,9,6,5,-1,0,4,5,0,-9,-13,-11,-2,7,10,18,20,14,5,5,3,3,3,7,0,-4,-4,0,4,7,8,8,8,11,11,8,6,7,8,5,4,0,0,3,0,-5,-12,-17,-12,-3,6,12,20,19,17,3,4,2,2,5,11,0,-6,-5,-1,2,6,8,8,8,9,11,8,5,5,7,5,2,1,0,2,-1,-7,-13,-17,-10,0,7,13,21,19,16,3,3,2,3,7,11,0,-7,-5,-2,1,5,7,8,8,8,10,8,5,5,6,5,4,6,4,1,-2,-8,-13,-15,-7,2,7,13,21,21,15,4,1,3,5,10,12,0,-8,-5,-2,0,5,7,8,8,8,7,7,5,5,6,7,7,6,3,0,-3,-7,-11,-11,-2,5,9,14,21,22,16,4,3,4,7,11,12,0,-8,-7,-2,0,5,7,8,8,8,7,7,6,5,5,7,8,5,2,0,-2,-6,-9,-5,2,7,11,14,21,23,18,4,5,6,9,12,11,0,-7,-8,-2,0,5,7,7,9,9,7,7,7,6,6,7,9,4,2,0,-2,-5,-5,-2,4,8,11,13,18,22,18,7,7,7,10,12,10,2,-5,-8,-4,1,6,8,7,9,8,8,8,7,7,7,7,9,2,1,-1,-3,-4,-2,0,5,9,10,11,16,20,17,11,8,8,11,10,10,5,-4,-5,-8,3,5,9,8,7,7,7,9,8,8,6,6,7,0,2,1,-2,-3,0,1,4,8,10,11,14,17,17,16,11,7,10,9,10,10,0,-2,-5,5,5,10,8,7,7,8,9,9,8,6,6,6,0,5,5,0,-2,0,1,2,7,10,11,12,13,18,21,15,4,7,8,12,17,5,0,0,7,7,9,8,7,8,8,8,9,8,6,6,6,-4,3,6,1,-1,0,1,2,7,10,11,11,13,21,26,18,8,8,8,17,20,10,2,3,8,8,8,7,7,8,8,8,9,8,7,6,6,-8,-1,6,5,0,0,1,2,6,8,10,11,14,25,32,21,14,12,7,22,20,15,6,7,6,7,8,7,7,9,7,7,9,10,8,7,7,-9,-5,3,7,2,0,1,4,8,11,10,10,13,24,30,23,24,20,7,23,22,16,8,8,5,7,8,7,8,10,7,8,11,12,10,8,8,-10,-8,-2,6,5,0,2,6,13,17,10,10,11,19,21,24,35,32,7,19,24,16,9,6,5,7,8,9,9,10,9,10,15,15,11,9,8,-6,-9,-6,2,5,1,4,8,14,18,11,10,11,16,16,24,37,32,6,15,23,15,9,6,6,7,9,10,10,10,10,12,16,16,12,10,9,-1,-6,-8,-2,3,3,5,8,11,13,13,10,11,16,16,23,28,20,2,11,19,12,9,7,9,8,9,11,11,10,11,14,16,15,12,10,9,7,0,-8,-6,0,5,6,8,9,9,14,10,11,16,16,23,21,9,0,7,15,10,8,8,10,9,10,11,11,11,11,15,17,14,11,10,10,20,9,-3,-8,-1,6,6,7,6,7,13,10,11,16,16,23,19,3,-4,5,12,8,6,9,10,9,11,11,11,11,13,15,16,12,10,10,12,29,19,2,-7,-3,5,6,6,5,7,12,10,11,15,17,22,17,0,-5,5,11,7,6,10,9,8,12,12,11,13,14,16,15,11,9,12,14,29,23,10,-2,-2,4,5,5,5,7,12,11,11,13,15,17,12,1,-4,7,10,8,10,9,7,6,11,13,13,17,16,17,14,11,9,14,18,27,26,17,4,0,4,5,5,6,8,11,12,11,12,12,14,8,2,-2,8,10,9,11,9,6,5,10,14,17,21,18,17,14,11,11,17,22,26,25,21,12,7,8,7,5,6,8,9,13,12,11,11,12,6,5,2,6,8,8,9,9,7,6,10,15,21,25,21,15,13,14,15,22,27,24,24,22,18,12,12,11,8,7,7,8,13,14,10,10,11,6,6,5,6,8,8,8,9,10,8,11,17,26,30,22,15,13,17,21,29,34,23,23,22,18,14,14,17,17,10,6,7,10,15,11,10,8,7,7,5,7,9,12,8,8,12,13,17,22,32,34,23,15,15,19,28,39,44,21,22,21,17,14,15,21,25,13,6,6,8,16,12,10,7,9,8,5,8,10,15,9,8,13,18,23,27,36,35,23,16,17,21,34,48,53],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
