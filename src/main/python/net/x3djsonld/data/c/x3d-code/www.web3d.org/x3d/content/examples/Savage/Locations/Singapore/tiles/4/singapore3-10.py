###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_310',geoSystem=['GDC'],position=(1.273385249845958,103.8914597167094,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.273385249845958,103.8914597167094,0.0),range=4101.627,child1Url=['../../tiles/5/singapore6-20.x3d'],child2Url=['../../tiles/5/singapore6-21.x3d'],child3Url=['../../tiles/5/singapore7-20.x3d'],child4Url=['../../tiles/5/singapore7-21.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore3-10.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.264653537467964,103.87709668258039,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[-6,-6,-6,-5,-5,-1,1,0,-5,-22,-36,-31,-8,8,10,9,8,1,-6,-8,-7,-6,-5,-2,1,7,9,9,9,11,14,15,16,16,15,14,14,-6,-6,-6,-6,-4,-1,0,1,-1,-13,-30,-29,-9,5,10,10,9,4,-2,-7,-8,-7,-6,-3,0,4,8,8,10,13,15,16,16,15,14,13,13,-6,-6,-6,-5,-3,-1,0,1,0,-6,-22,-25,-9,3,9,10,9,8,1,-6,-8,-7,-6,-5,-2,2,7,8,11,14,15,16,16,15,14,13,13,-6,-6,-6,-5,-3,-1,0,1,0,-2,-12,-20,-10,2,8,10,10,9,5,-2,-7,-8,-7,-6,-3,0,6,10,13,15,16,16,15,14,13,13,12,-6,-6,-5,-4,-2,0,0,0,1,0,-4,-14,-10,1,7,10,10,9,8,1,-6,-8,-7,-6,-5,-1,6,11,14,15,16,16,15,14,13,12,10,-6,-6,-5,-4,-2,0,0,0,1,0,-1,-7,-7,0,6,9,10,10,9,5,-2,-7,-8,-7,-6,-2,6,12,15,16,16,15,14,13,13,8,5,-6,-5,-5,-4,-2,0,0,0,1,1,0,-1,-5,0,5,9,10,10,10,9,1,-6,-8,-8,-6,-2,7,13,16,16,16,15,14,13,12,4,0,-6,-5,-5,-3,-2,0,0,0,1,1,0,0,-2,0,5,8,9,10,10,9,5,-2,-7,-8,-7,-4,8,14,16,16,15,14,13,13,8,0,-2,-5,-5,-4,-3,-2,0,0,0,1,1,1,0,0,0,4,8,9,10,10,9,8,1,-6,-8,-7,-5,9,15,16,16,15,14,13,13,5,-2,-5,-5,-5,-4,-3,-1,0,0,0,0,1,1,0,0,0,3,7,9,9,10,10,9,5,-2,-7,-8,-6,10,16,16,15,14,13,13,9,0,-4,-5,-5,-4,-4,-3,-1,0,0,0,0,1,1,1,0,0,3,7,9,9,10,10,9,8,1,-6,-8,-6,10,16,16,15,14,13,13,5,-2,-5,-6,-5,-4,-4,-2,-1,0,0,0,0,0,1,1,0,0,1,5,8,9,9,10,10,9,5,-2,-7,-7,5,14,15,14,13,13,9,0,-4,-6,-6,-4,-4,-3,-2,-1,0,0,0,0,0,1,1,1,0,0,4,7,9,9,10,10,9,8,1,-6,-7,0,12,15,14,13,13,5,-2,-5,-6,-6,-4,-4,-3,-2,0,0,0,0,0,0,0,1,1,0,0,2,6,8,9,9,10,10,9,4,-2,-7,-3,6,13,13,13,9,0,-4,-6,-6,-6,-2,-3,-3,-2,0,0,0,0,0,0,0,1,1,1,0,0,4,7,9,9,10,10,9,8,1,-6,-6,1,11,13,13,4,-3,-5,-6,-6,-6,0,-1,-2,-1,0,0,0,0,0,0,0,0,1,1,0,0,2,6,8,9,9,10,10,9,5,-2,-7,-3,9,13,9,0,-4,-6,-6,-6,-6,3,1,-1,-1,0,0,0,0,0,0,0,0,1,1,1,0,0,4,7,9,9,10,10,9,8,1,-6,-6,7,13,4,-3,-5,-6,-6,-6,-6,4,2,0,-1,0,0,0,0,0,0,0,0,0,1,1,0,0,2,6,8,9,9,10,10,9,5,-2,-7,7,9,0,-4,-6,-6,-6,-6,-6,3,2,1,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,7,9,9,10,10,9,8,1,-6,7,4,-3,-5,-6,-6,-6,-6,-6,3,3,1,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,2,6,8,9,9,10,10,9,5,-2,4,0,-4,-6,-6,-6,-6,-6,-6,3,2,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,4,7,9,9,10,10,9,8,2,0,-3,-5,-6,-6,-6,-6,-6,-6,3,2,2,0,0,0,0,0,0,0,2,2,1,0,1,1,1,0,0,2,6,8,9,9,10,10,9,5,-1,-4,-6,-6,-6,-6,-6,-6,-5,2,2,1,0,0,0,0,0,0,0,4,6,3,1,0,1,1,1,0,0,4,7,9,9,10,10,10,8,-2,-5,-6,-6,-6,-6,-6,-6,-4,2,2,1,0,0,0,0,0,0,2,6,7,5,3,2,3,1,2,1,1,4,8,9,9,10,10,10,7,-2,-6,-6,-6,-6,-6,-6,-3,0,2,1,0,0,0,0,0,0,0,4,7,8,7,6,6,6,3,3,3,3,5,8,9,9,9,10,9,3,-3,-6,-6,-6,-6,-6,-6,0,6,2,1,0,0,0,0,0,0,2,6,8,8,7,7,7,7,5,5,6,7,8,10,10,10,9,10,8,0,-4,-6,-6,-6,-6,-6,-3,5,10,1,0,0,0,0,0,0,0,4,7,8,8,8,8,8,7,6,6,8,11,11,12,12,11,11,11,6,-1,-5,-6,-6,-6,-6,-6,0,11,15,1,0,0,0,0,0,0,2,6,8,8,8,8,8,8,7,7,8,11,13,13,13,13,12,12,12,7,-2,-6,-6,-6,-6,-6,-3,5,14,17,0,0,0,0,0,0,0,4,7,8,8,8,8,8,7,7,7,9,12,13,13,14,12,12,12,12,9,-2,-6,-6,-6,-6,-6,0,11,17,17,0,0,0,0,0,0,2,6,8,8,8,8,8,8,7,7,8,11,13,13,14,13,12,12,13,12,11,-1,-5,-6,-6,-6,-3,5,14,17,17,0,0,0,0,0,1,4,7,8,8,8,8,8,7,7,7,9,12,13,13,14,12,12,12,12,12,12,1,-4,-6,-6,-6,0,11,17,18,16,0,0,0,0,0,2,6,8,8,8,8,8,8,7,7,8,11,13,13,14,13,12,12,13,12,12,12,3,-4,-6,-6,-3,5,14,17,16,14,0,0,0,0,1,4,7,8,8,8,8,8,7,7,7,9,12,13,13,14,12,12,12,12,12,12,13,4,-3,-6,-6,0,10,17,18,13,9,0,0,0,0,2,6,8,8,8,8,8,8,7,7,8,11,13,13,14,13,12,12,13,12,12,13,14,6,-2,-5,-3,5,15,17,16,9,4,0,0,0,1,4,7,8,8,8,8,8,7,7,7,9,12,13,13,14,12,12,12,12,12,12,14,12,7,0,-4,0,10,17,18,13,4,0,0,0,0,2,6,8,8,8,8,8,8,7,7,8,11,13,13,14,13,12,12,13,12,12,13,14,11,8,1,-1,5,15,17,16,9,1,0,0,0,1,4,7,8,8,8,8,8,7,7,7,9,12,13,13,13,12,12,12,12,12,12,14,12,10,9,5,4,11,17,18,13,4,0,0,0,0,2,6,8,8,8,8,8,8,7,7,8,11,13,13,14,13,12,12,13,12,12,13,14,11,9,9,8,9,15,17,16,9,0,0,1,0,1,4,7,8,8,8,8,8,7,7,7,9,12,13,13,14,12,12,12,12,12,12,14,12,10,9,9,10,12,16,18,13,4,0,1,3,0,2,6,8,8,8,8,8,8,7,7,8,11,13,13,14,13,12,12,13,12,12,13,14,11,9,9,11,12,13,16,16,9,0,0,3,5,1,4,7,8,8,8,8,8,7,7,7,9,12,13,13,13,12,12,12,12,12,12,14,12,10,9,10,11,13,14,16,13,4,0,1,5,5,3,6,8,8,8,8,8,8,7,7,8,11,13,13,14,13,12,12,13,12,12,13,14,11,9,9,11,12,13,14,16,10,0,0,3,5,6,6,7,8,8,7,8,8,7,7,7,9,12,13,13,13,12,12,12,12,12,12,13,12,10,9,10,11,13,14,14,16,9,1,1,5,6,6,8,8,8,7,7,8,8,7,7,8,11,13,13,14,13,12,12,13,12,12,13,14,11,9,9,11,12,13,14,15,15,8,2,3,5,6,6],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
