###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.0',
  Scene=Scene(
    children=[
    Group(
      children=[
      Transform(translation=(27056.14,0.0,108224.56),
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0,0.05,0)),
            texture=ImageTexture(url=['../../images/5/PanamaCity3-1.jpg'],repeatS=False,repeatT=False)),
          geometry=ElevationGrid(xDimension=22,xSpacing=1288.3877,zDimension=22,zSpacing=1717.8502,height=[-178,-175,-173,-171,-169,-167,-165,-163,-161,-160,-158,-157,-154,-152,-149,-147,-145,-143,-141,-140,-138,-136,-180,-178,-176,-175,-173,-171,-168,-166,-164,-163,-161,-160,-158,-155,-152,-151,-149,-147,-145,-143,-142,-140,-183,-182,-180,-179,-177,-174,-172,-170,-168,-166,-165,-163,-161,-159,-157,-155,-153,-151,-149,-147,-145,-144,-186,-184,-183,-182,-180,-178,-176,-173,-171,-170,-168,-166,-165,-163,-160,-159,-157,-155,-152,-151,-149,-147,-190,-187,-186,-185,-183,-181,-180,-177,-175,-173,-172,-170,-168,-166,-164,-162,-161,-158,-156,-154,-152,-150,-194,-192,-189,-187,-186,-185,-183,-181,-180,-177,-175,-174,-172,-170,-168,-166,-164,-162,-160,-158,-156,-154,-198,-196,-194,-191,-190,-188,-187,-185,-183,-181,-179,-178,-176,-174,-173,-171,-169,-166,-164,-162,-160,-158,-202,-201,-199,-197,-196,-194,-192,-190,-187,-185,-184,-182,-181,-179,-177,-175,-173,-171,-168,-166,-164,-162,-207,-206,-204,-203,-201,-199,-197,-195,-192,-190,-186,-186,-184,-184,-182,-180,-179,-176,-173,-170,-168,-167,-215,-214,-210,-210,-207,-205,-204,-201,-199,-196,-192,-190,-190,-188,-186,-185,-184,-181,-178,-175,-173,-172,-220,-219,-217,-216,-213,-211,-210,-208,-206,-204,-201,-200,-197,-194,-193,-191,-189,-186,-183,-181,-179,-177,-227,-224,-223,-222,-220,-218,-217,-214,-212,-211,-210,-207,-205,-201,-198,-197,-195,-193,-189,-187,-185,-184,-234,-232,-231,-229,-228,-225,-222,-221,-220,-217,-218,-214,-212,-209,-206,-203,-201,-199,-196,-193,-192,-190,-242,-240,-239,-237,-235,-233,-231,-228,-224,-224,-222,-222,-219,-217,-213,-211,-210,-206,-204,-201,-199,-197,-250,-249,-247,-245,-243,-241,-238,-237,-236,-233,-230,-229,-228,-224,-221,-219,-218,-214,-212,-209,-207,-205,-260,-258,-256,-254,-252,-249,-247,-246,-244,-241,-239,-238,-236,-234,-231,-227,-225,-222,-220,-218,-215,-214,-271,-268,-265,-264,-262,-259,-258,-257,-255,-252,-249,-247,-246,-244,-241,-237,-235,-232,-230,-227,-224,-222,-287,-285,-280,-278,-276,-273,-271,-270,-267,-264,-262,-260,-257,-254,-252,-248,-247,-242,-240,-236,-231,-231,-305,-302,-297,-294,-291,-287,-287,-285,-283,-279,-276,-273,-270,-266,-262,-257,-259,-255,-250,-246,-243,-241,-326,-328,-319,-314,-310,-306,-305,-303,-300,-296,-293,-290,-286,-282,-277,-271,-267,-267,-264,-258,-254,-251,-347,-346,-341,-337,-333,-329,-327,-325,-322,-317,-314,-310,-305,-299,-294,-287,-282,-279,-278,-271,-266,-263,-349,-346,-343,-338,-334,-330,-329,-326,-323,-318,-315,-311,-306,-300,-295,-288,-283,-280,-278,-271,-267,-263]))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
