###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_159',geoSystem=['GDC'],position=(1.4829463469178132,103.86273364845137,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.4829463469178132,103.86273364845137,0.0),range=4101.627,child1Url=['../../tiles/5/singapore30-18.x3d'],child2Url=['../../tiles/5/singapore30-19.x3d'],child3Url=['../../tiles/5/singapore31-18.x3d'],child4Url=['../../tiles/5/singapore31-19.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore15-9.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.4742146345398193,103.84837061432235,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[7,6,6,4,6,8,11,15,19,19,14,7,6,7,10,11,10,9,8,8,12,18,24,23,15,18,25,24,13,6,8,11,14,14,15,14,12,6,6,6,5,5,9,12,16,19,18,14,7,6,8,11,11,11,10,9,8,12,19,25,25,18,20,24,24,12,6,8,10,12,12,14,14,13,5,5,6,5,5,9,13,17,19,17,13,7,7,11,13,13,12,12,11,9,13,21,27,25,21,22,25,23,10,5,7,10,10,10,13,14,13,5,5,6,5,5,10,14,17,18,15,11,9,10,13,13,14,14,14,12,10,13,21,28,27,24,26,26,23,10,5,6,9,10,10,13,14,13,6,6,6,5,6,11,14,16,16,12,9,10,14,15,14,15,17,16,13,10,12,20,28,29,28,29,29,22,9,5,6,8,10,11,13,13,12,6,7,6,6,7,11,13,14,14,10,8,10,14,14,13,14,17,17,14,11,12,21,28,29,28,28,26,19,9,5,6,8,11,12,14,14,13,5,6,6,8,9,11,12,12,10,7,7,8,13,12,11,13,16,17,15,12,14,22,28,28,26,25,21,17,9,6,7,9,11,13,16,16,14,5,5,6,9,10,11,13,11,9,6,7,7,10,10,10,12,15,16,15,15,16,22,28,27,24,21,17,13,9,7,8,9,11,13,15,14,13,5,4,4,9,12,13,15,12,8,7,7,6,7,8,10,12,14,15,16,16,17,23,27,25,22,18,13,10,8,8,9,10,11,13,12,11,10,6,4,4,9,13,15,16,13,9,8,8,5,5,7,10,12,14,14,17,18,18,23,28,26,22,18,13,8,7,9,10,10,12,11,10,9,8,6,4,5,10,12,16,17,15,10,9,7,5,5,8,11,13,14,14,18,21,20,23,28,28,26,20,15,9,8,10,12,11,11,10,9,9,8,7,5,5,10,13,17,18,17,12,10,8,7,7,9,12,14,15,15,19,23,23,24,29,30,28,22,16,10,9,11,13,12,11,10,9,9,9,9,6,5,11,15,19,19,20,15,12,10,9,10,10,13,15,17,17,20,25,27,27,29,30,28,22,17,11,10,11,13,12,12,11,10,11,11,9,6,6,12,17,20,21,22,16,12,11,11,11,11,15,17,18,19,22,28,33,31,29,30,28,22,17,12,11,12,14,13,12,11,11,12,12,9,6,7,13,18,22,22,22,16,11,11,11,11,12,16,19,20,21,23,32,38,35,30,28,26,22,17,12,12,13,15,12,10,12,12,13,12,9,6,8,14,19,24,23,21,15,11,10,10,11,13,18,20,21,23,25,34,43,39,30,27,25,21,17,13,13,13,15,11,9,11,13,13,13,7,6,9,14,20,26,23,19,14,12,8,9,12,14,18,22,22,23,25,35,46,43,31,27,25,21,16,12,12,13,15,11,9,11,13,14,14,8,6,10,14,21,26,23,17,14,12,7,8,12,15,18,22,23,24,25,35,48,45,33,28,24,20,15,12,11,12,14,11,9,11,14,14,15,11,8,9,13,20,25,22,16,13,12,7,7,12,15,18,21,24,25,26,35,47,43,32,27,23,19,16,13,11,11,13,10,9,11,14,14,15,15,12,9,13,19,23,20,15,13,12,7,6,11,15,17,20,24,25,26,34,44,41,30,26,22,18,16,14,11,11,11,9,8,11,14,14,15,19,16,12,13,18,21,18,14,12,10,8,6,10,14,17,19,23,24,25,32,39,37,30,26,22,17,15,14,11,9,9,9,8,11,15,16,16,23,20,14,13,17,19,16,13,11,9,8,7,8,13,17,19,22,23,24,29,35,34,29,25,20,15,13,13,11,8,7,8,8,11,16,17,17,24,23,16,14,18,18,15,12,11,7,10,8,8,13,16,19,23,23,23,27,32,33,28,24,19,14,12,13,11,8,6,8,9,12,17,18,17,25,25,19,16,18,18,15,12,11,7,10,9,8,12,16,19,23,23,22,25,30,31,27,22,17,13,10,11,11,7,6,8,10,13,18,18,17,25,24,20,17,19,18,15,13,11,7,10,9,9,11,15,20,23,23,22,24,28,29,25,20,17,13,9,8,9,8,9,11,11,14,18,18,17,25,23,21,19,19,18,16,13,12,7,9,10,10,11,15,21,23,23,22,24,27,28,24,20,17,13,8,5,8,9,11,13,13,15,19,19,17,23,22,21,20,20,19,17,14,11,7,8,12,12,13,17,20,23,23,22,24,27,26,23,20,17,12,7,5,8,10,14,15,14,16,19,19,16,21,21,21,21,20,19,17,15,11,8,8,14,14,14,18,20,22,23,24,24,26,25,23,21,17,12,7,6,9,12,16,17,16,17,20,18,16,21,21,21,21,21,19,18,15,11,9,10,15,16,16,19,21,23,23,24,25,26,26,23,20,16,12,7,6,10,13,17,18,17,17,18,16,15,21,22,22,22,21,20,18,16,12,11,12,17,18,17,20,21,23,24,25,26,26,26,23,19,16,13,8,7,11,14,17,18,18,18,15,14,14,21,22,23,22,22,20,18,16,11,11,12,16,18,18,21,24,25,25,27,28,28,26,23,19,16,13,10,9,13,15,18,18,18,18,15,14,14,22,23,23,22,22,20,19,16,11,10,13,15,18,20,23,28,28,27,29,30,29,26,22,18,15,13,12,13,14,16,18,18,18,18,15,14,13,23,23,22,22,22,21,20,18,11,10,12,15,18,19,23,28,27,27,28,29,28,26,22,17,15,15,15,15,15,16,17,18,18,17,15,13,13,24,24,22,22,22,22,21,21,11,9,12,15,18,18,24,27,27,26,26,27,27,25,22,17,16,17,18,15,14,16,16,18,17,16,14,13,12,24,24,22,22,24,25,23,21,11,9,11,14,16,17,22,25,25,26,26,26,26,24,21,18,16,18,18,15,14,16,16,17,16,15,13,12,12,23,23,22,22,26,28,26,21,12,9,11,13,15,15,19,22,23,24,25,25,24,23,20,18,17,18,18,15,14,16,16,16,15,13,11,10,10,23,23,22,22,26,30,26,18,12,9,11,12,13,15,19,21,23,24,26,25,24,23,20,18,18,19,18,14,13,15,15,14,13,12,11,10,10,22,22,24,23,25,30,25,16,10,9,11,12,12,16,20,22,23,24,26,26,24,22,19,19,18,19,19,14,12,13,14,13,12,11,10,10,10,22,21,23,22,22,28,22,14,10,10,12,13,13,17,20,21,23,24,26,25,24,22,19,19,19,20,18,14,12,13,14,12,12,11,10,11,10,22,21,23,22,19,23,19,13,11,12,14,15,16,18,20,21,22,24,26,25,24,22,20,19,20,20,17,14,12,12,14,12,11,11,10,10,10,21,20,21,18,15,19,16,13,12,14,17,18,18,20,21,21,23,25,26,24,24,23,20,19,20,19,15,14,13,12,13,12,11,11,10,11,10,21,19,18,13,13,14,14,13,14,16,19,21,20,21,22,22,24,26,27,24,24,24,21,19,20,18,14,14,13,12,13,12,12,12,12,12,12,21,18,16,11,12,13,12,12,15,18,21,23,22,24,25,26,27,28,28,25,25,25,22,19,19,17,14,14,13,11,12,12,13,12,12,12,13,20,17,14,10,12,12,11,11,15,19,23,25,24,27,30,31,32,30,29,27,25,26,23,19,18,18,15,12,11,10,11,12,13,12,11,12,13],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
