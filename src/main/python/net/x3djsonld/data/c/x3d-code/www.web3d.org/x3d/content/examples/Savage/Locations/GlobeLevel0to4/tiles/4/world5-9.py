###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    Shape(
      appearance=Appearance(
        material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0,0.05,0)),
        texture=ImageTexture(url=['../../images/4/world5-9.jpg'],repeatS=False,repeatT=False)),
      geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(-33.79166499031936,22.458339368270288,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=22,xSpacing=1.0714287,zDimension=24,zSpacing=0.48913044,height=[-14,-104,-126,-158,-1733,-3902,-4037,-4269,-4199,-4283,-2416,-2846,-2492,-3685,-5252,-5219,-5310,-4979,-4998,-4530,-1956,-1435,21,-155,-79,-150,-104,-1716,-3749,-3909,-3976,-4056,-2691,-1869,-2544,-2474,-5188,-5199,-5207,-5160,-5022,-4426,-2754,-1691,254,1169,931,1069,307,-27,-2409,-3684,-3853,-3902,-3599,-2376,-1506,-2316,-5069,-5185,-5206,-5027,-5072,-4317,-1889,-1017,569,874,722,290,449,302,-407,-3325,-3696,-3733,-3658,-3267,-1076,-1677,-5190,-5031,-5136,-5041,-4977,-4195,-1404,-810,671,830,843,752,1085,1128,184,-2730,-3485,-3642,-3569,-3110,-1433,-1930,-4857,-5044,-4974,-5199,-4976,-4348,-1425,-954,1444,1314,1590,1490,1121,1164,936,-859,-3074,-3595,-3592,-3368,-2025,-2654,-4533,-5080,-5089,-5106,-4880,-3930,-1821,-1586,1250,1357,1502,1278,1767,1346,707,167,-2968,-3210,-3427,-3375,-2888,-2560,-4451,-5144,-4964,-4967,-4622,-3608,-2108,-2064,1270,1268,1459,1535,1560,1795,1315,961,-1574,-3012,-3113,-3205,-2538,-1969,-4429,-4903,-4962,-4976,-4602,-3941,-1804,-2290,1017,1147,1207,1298,1431,1516,1685,1352,131,-2968,-3072,-2972,-2611,-1963,-4579,-5011,-5026,-4898,-4753,-3929,-1937,-2451,962,1115,1141,1340,1519,1576,2160,1791,233,-702,-1815,-2753,-2762,-1999,-3428,-4991,-4963,-4931,-4718,-4062,-3585,-1908,1031,950,1133,1282,1454,1485,2121,2396,667,-83,-1647,-2513,-2458,-1860,-4250,-4948,-5016,-4884,-4611,-4197,-3405,-2511,1023,1252,1053,1165,1403,1550,2252,3205,1149,81,-1479,-2357,-2390,-2004,-3980,-4951,-4888,-4818,-4690,-4491,-3608,-2026,847,1119,1333,1243,1320,1464,2073,1241,1063,450,-864,-1831,-2085,-2130,-3651,-4836,-4807,-4749,-4650,-4598,-3815,-2615,1058,1289,1416,1204,1284,1442,1638,1723,1160,367,-136,-1665,-1786,-1858,-2484,-4843,-4765,-4683,-4579,-4521,-4351,-3530,991,1129,1493,1321,1237,1384,1684,1717,1589,733,28,-1415,-1543,-1705,-2097,-4979,-4683,-4589,-4474,-4443,-4201,-3460,933,1039,1259,1288,1487,1432,1511,1604,1343,953,78,-1133,-1487,-1717,-2175,-4828,-4599,-4535,-4409,-4342,-4063,-3295,970,1012,1226,1340,1487,1473,1555,1680,1529,402,18,-844,-1102,-1623,-2437,-4442,-4487,-4444,-4364,-4241,-3773,-3026,979,1014,1154,1175,1513,1502,1654,1579,1509,391,34,-553,-999,-2032,-2094,-3835,-4043,-4354,-4235,-4158,-3933,-2313,999,995,1063,1189,1212,1200,1190,1539,1656,571,62,-345,-280,-1612,-2132,-3593,-4042,-4142,-4195,-4052,-3668,-1566,1052,1036,1061,1221,1095,1042,1075,916,1436,399,34,24,-33,-1591,-2681,-3216,-3663,-3867,-4006,-3822,-3493,-8,1104,1052,1080,1227,986,933,1309,867,1056,389,79,91,81,-1154,-3003,-3183,-3443,-3478,-3603,-3589,-3331,173,1125,1098,1110,1094,985,957,1322,1361,594,335,62,54,139,-757,-2432,-3133,-3261,-3380,-3617,-3467,-3410,251,1177,1145,1083,1045,1022,843,975,1142,668,333,125,48,117,-400,-2631,-2962,-3076,-3182,-3552,-3361,-1090,262,1179,1142,1078,1031,975,841,951,1081,542,335,125,55,115,-455,-2670,-3005,-3069,-3144,-3522,-3315,-1938,268],
        geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(0.0,0.0,-6378137.0),geoSystem=['GDC'])))])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
