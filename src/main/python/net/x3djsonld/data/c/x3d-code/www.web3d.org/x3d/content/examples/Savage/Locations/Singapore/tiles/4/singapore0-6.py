###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_06',geoSystem=['GDC'],position=(1.220994975577994,103.77655544367725,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.220994975577994,103.77655544367725,0.0),range=4101.627,child1Url=['../../tiles/5/singapore0-12.x3d'],child2Url=['../../tiles/5/singapore0-13.x3d'],child3Url=['../../tiles/5/singapore1-12.x3d'],child4Url=['../../tiles/5/singapore1-13.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore0-6.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.2122632632,103.76219240954823,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[4,5,4,4,8,7,1,1,2,3,3,2,3,2,1,-4,-21,-26,-5,-1,0,6,15,21,14,1,-6,-7,0,3,3,-2,-7,-9,-8,-4,-2,3,3,3,7,11,6,0,0,1,2,2,2,2,2,0,-9,-30,-21,-8,-3,-1,5,15,23,22,9,-4,-7,3,6,5,0,-5,-8,-9,-6,-3,1,0,3,9,11,5,0,0,0,1,3,2,2,2,0,-12,-31,-18,-8,-7,-3,4,15,26,26,17,2,-3,4,7,6,2,-3,-7,-9,-6,-4,-1,-2,2,10,10,3,1,0,0,0,3,2,2,1,0,-16,-28,-16,-9,-12,-5,4,15,28,28,25,10,0,5,7,7,3,-1,-6,-8,-6,-4,0,0,5,10,8,3,1,0,2,7,4,3,2,1,0,-16,-23,-14,-11,-12,-6,4,17,27,29,28,18,5,5,6,7,5,-2,-6,-6,-6,-5,3,3,10,9,6,3,1,1,9,16,4,3,2,1,-1,-14,-17,-12,-12,-10,-7,4,19,24,29,29,26,9,5,5,7,6,-2,-5,-4,-5,-5,4,5,12,10,6,3,2,5,14,18,6,4,3,2,-1,-11,-14,-12,-12,-9,-6,4,18,24,28,30,29,10,4,4,6,5,-1,-4,-3,-4,-4,2,5,11,11,7,4,4,10,20,15,8,4,3,2,0,-9,-13,-13,-11,-9,-4,4,16,24,28,30,30,10,4,4,4,3,0,-2,-2,-3,-3,0,4,10,12,9,5,6,13,21,14,9,5,4,3,0,-8,-13,-13,-11,-8,-3,4,15,23,27,29,30,9,3,3,3,2,0,0,-1,-2,-2,0,2,8,12,10,6,7,15,20,14,9,5,4,3,0,-9,-13,-13,-11,-7,-2,4,14,22,27,29,30,8,3,3,2,1,0,0,0,0,0,0,0,5,11,11,8,8,15,18,14,9,6,4,4,1,-10,-13,-12,-11,-7,-1,5,14,22,26,28,26,7,2,2,2,2,1,2,2,1,1,0,0,2,9,12,11,9,15,17,14,9,6,4,4,1,-12,-12,-12,-9,-6,0,5,14,22,25,28,19,4,1,2,3,4,5,5,5,3,2,0,0,0,6,11,12,11,14,15,14,9,6,4,4,1,-11,-10,-6,0,1,6,11,17,22,25,27,14,3,0,1,2,4,6,7,5,4,3,1,0,0,3,10,13,13,14,15,13,9,6,4,4,3,-6,-5,2,19,19,20,21,23,25,25,25,14,3,0,0,0,2,5,6,4,4,4,2,0,-1,0,9,16,17,19,21,15,9,6,4,4,6,3,3,9,27,28,28,27,27,26,25,24,15,3,0,0,0,2,4,4,3,4,4,6,1,0,0,8,21,26,31,32,19,10,7,5,6,14,21,21,14,23,28,28,27,27,26,25,24,21,4,0,0,1,3,3,2,3,4,4,9,6,6,6,14,28,34,38,39,26,18,18,17,17,24,34,33,20,20,27,28,28,27,26,25,25,25,5,0,0,2,3,3,2,3,5,5,13,17,22,25,30,36,39,41,41,36,37,40,41,39,38,40,38,27,19,23,28,28,27,26,25,25,24,5,0,1,3,4,3,3,5,6,6,16,25,32,37,40,42,43,43,41,43,49,55,57,53,46,43,41,33,19,20,27,28,27,26,25,25,23,4,0,2,5,5,6,6,7,7,7,20,27,32,37,41,43,43,42,40,42,49,56,58,53,47,42,42,37,26,18,23,28,27,26,25,25,18,3,0,3,6,8,16,15,11,8,6,23,28,32,37,41,43,43,41,40,41,49,58,59,54,47,41,42,40,32,18,20,27,27,26,26,24,13,1,0,4,7,11,21,22,14,7,5,27,28,32,37,42,43,42,41,40,40,47,61,59,55,48,40,39,41,36,24,18,23,27,26,27,19,7,0,0,4,8,12,19,24,14,5,4,30,28,32,38,42,42,42,40,40,39,45,61,60,56,48,40,36,41,39,29,18,20,27,27,27,14,1,0,1,4,8,12,16,24,13,3,3,36,29,31,39,42,42,41,40,40,39,41,54,61,56,49,39,33,36,41,31,21,18,23,32,23,8,0,0,2,4,7,9,14,19,10,2,3,40,31,31,40,42,42,41,40,39,38,38,49,61,57,50,39,31,31,42,34,22,18,22,34,19,3,0,1,2,4,6,7,11,15,8,3,3,42,36,35,41,41,42,41,40,39,36,35,43,57,59,50,40,29,28,36,39,20,19,21,27,13,1,0,1,3,4,6,6,7,13,11,5,3,42,41,38,40,41,43,41,39,38,33,34,38,52,60,51,40,29,25,31,42,17,19,20,19,7,0,0,1,4,5,5,6,3,11,13,6,3,36,36,35,36,42,44,40,38,34,32,34,38,44,55,55,38,30,21,31,34,13,14,10,9,1,-1,-1,2,4,5,5,6,2,7,11,5,1,31,32,31,32,40,44,39,37,30,32,35,36,37,49,58,34,30,19,30,26,9,9,2,0,-3,-2,-1,2,5,5,5,5,1,3,8,2,-1,26,25,25,24,31,35,32,31,29,32,34,30,29,38,40,21,19,15,23,21,8,5,4,0,-2,1,0,2,5,5,5,4,3,2,2,-2,-6,21,20,19,17,21,24,25,25,28,31,33,24,22,27,22,8,8,13,16,16,7,2,6,-1,-2,4,0,2,4,5,5,4,4,1,-1,-7,-10,17,17,16,17,18,18,17,17,22,22,23,19,20,22,14,6,7,11,14,13,6,1,8,0,-2,1,1,2,4,5,5,4,5,2,0,-3,-5,14,15,14,17,15,11,8,10,16,14,12,14,18,18,5,5,6,10,13,10,4,1,8,0,-2,0,1,2,3,4,5,4,5,2,0,0,0,14,15,16,17,14,10,10,11,14,10,8,12,18,19,7,5,7,9,23,10,3,0,4,1,-3,-2,0,2,3,4,3,4,4,5,4,1,0,14,15,18,17,13,10,11,13,12,7,6,9,19,20,9,5,7,8,32,11,2,-1,0,1,-2,-3,0,2,3,3,2,3,4,7,7,2,0,12,15,17,14,12,11,11,12,10,5,6,12,19,17,8,7,8,9,27,8,2,-2,0,0,-1,-4,-2,1,4,3,2,4,7,7,5,3,1,10,15,17,11,12,12,11,12,8,4,6,16,19,13,8,9,9,10,20,5,2,-2,-2,0,-1,-3,-3,1,3,2,1,4,9,7,3,3,3,11,16,16,10,13,14,10,10,6,4,7,13,15,13,10,9,8,9,13,3,0,-1,-3,-1,-1,-3,-1,2,3,2,0,0,4,7,3,2,3,13,17,15,11,13,15,9,7,5,4,7,11,12,14,12,9,6,7,5,0,0,0,-3,-2,-2,-2,0,2,3,1,0,-7,-1,7,4,1,3,12,13,13,13,14,14,9,6,6,9,13,14,11,15,14,9,5,6,3,-2,0,0,-2,-3,-2,-1,1,3,3,0,-3,-8,-3,3,2,0,2,11,10,12,14,13,12,10,6,7,15,19,17,11,15,16,7,5,6,1,-4,-1,0,-1,-3,-2,-1,3,3,3,0,-7,-8,-4,0,0,0,0,9,10,11,12,11,10,9,8,11,19,16,15,11,12,13,6,6,5,0,-4,-3,-1,0,-2,-3,-1,3,3,4,2,-3,-4,-4,-2,0,0,0,7,11,10,8,9,9,9,12,16,20,10,10,10,10,9,6,5,3,-2,-3,-4,-2,0,-1,-3,-1,3,4,4,5,2,0,-3,-3,0,0,0,5,10,10,7,7,7,8,11,14,16,7,7,8,7,6,6,4,1,-1,-3,-4,-3,-1,0,-2,-2,2,4,5,5,5,2,-1,-1,0,0,0],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
