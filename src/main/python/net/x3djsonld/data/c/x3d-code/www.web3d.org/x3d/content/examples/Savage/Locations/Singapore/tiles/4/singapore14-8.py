###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_148',geoSystem=['GDC'],position=(1.4654829221618253,103.83400758019333,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.4654829221618253,103.83400758019333,0.0),range=4101.627,child1Url=['../../tiles/5/singapore28-16.x3d'],child2Url=['../../tiles/5/singapore28-17.x3d'],child3Url=['../../tiles/5/singapore29-16.x3d'],child4Url=['../../tiles/5/singapore29-17.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore14-8.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.4567512097838313,103.81964454606431,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[16,13,16,23,24,22,22,30,37,36,33,30,28,31,37,39,38,32,29,30,22,14,14,13,10,9,13,18,17,13,8,8,11,10,6,7,9,19,16,19,21,20,20,22,30,36,33,30,27,24,27,36,39,37,31,29,31,21,16,17,13,10,9,11,14,15,12,10,8,9,9,6,5,6,23,19,22,19,14,18,22,30,34,30,27,24,20,24,33,39,37,29,30,31,18,17,19,13,9,9,10,10,11,12,11,7,6,7,6,5,5,20,18,20,18,13,17,20,25,30,29,25,22,17,18,26,33,31,23,28,31,21,20,20,14,11,10,10,10,11,12,8,6,6,7,6,5,5,16,15,18,16,13,17,19,20,26,27,22,20,14,14,19,26,24,17,26,30,24,23,21,15,13,11,9,9,11,12,4,4,6,6,6,5,4,15,16,18,14,13,16,16,18,23,25,22,22,16,13,15,19,16,14,22,30,27,25,21,15,13,11,10,9,8,8,0,0,4,6,6,5,4,15,17,16,14,14,14,13,16,20,22,24,24,19,14,11,10,9,12,19,30,29,27,21,14,13,10,10,10,5,4,-7,-4,2,6,6,5,4,15,17,15,11,13,13,11,14,17,21,26,26,20,13,10,10,9,12,14,24,27,28,20,13,12,9,9,10,5,1,-7,-8,0,4,6,5,5,16,15,13,9,11,11,11,14,15,21,28,28,21,13,10,11,11,12,10,16,25,28,19,11,10,7,7,9,6,0,-5,-10,-5,2,6,6,6,14,14,12,9,9,9,10,12,13,21,28,24,18,11,9,12,12,13,10,13,23,27,19,12,10,5,8,9,7,1,-4,-10,-8,0,4,6,6,11,12,12,9,7,7,10,10,12,21,28,20,13,8,9,12,12,14,11,12,21,25,19,13,9,4,9,9,8,2,-3,-9,-11,-5,2,6,6,9,10,10,8,6,8,11,9,12,21,24,16,9,6,8,11,11,15,13,11,20,25,22,14,9,3,7,9,9,4,-2,-8,-12,-8,0,4,5,8,9,8,7,5,8,11,8,14,21,19,11,7,5,6,10,11,16,15,11,18,26,24,15,10,1,4,9,9,7,0,-6,-11,-11,-5,2,5,7,7,7,8,8,9,10,9,15,18,14,8,6,5,5,9,11,14,13,10,16,24,22,13,6,0,1,7,9,8,3,-3,-10,-12,-8,0,2,6,5,7,11,12,10,8,10,14,14,8,6,6,7,5,8,11,11,7,8,12,19,18,10,0,0,0,4,8,9,7,0,-8,-12,-12,-5,0,5,4,7,13,15,11,7,10,13,12,7,6,6,8,6,8,11,8,5,5,10,14,13,7,-1,-1,0,1,7,9,8,2,-5,-11,-13,-8,-4,6,3,7,14,18,13,9,10,12,12,7,6,7,8,6,8,10,8,3,3,10,9,7,5,0,-3,-1,0,4,8,9,6,-1,-9,-13,-12,-9,7,4,7,13,18,13,11,13,12,11,7,7,8,8,6,8,9,7,3,2,8,7,4,5,0,-3,-2,0,1,7,9,8,2,-6,-11,-13,-12,8,7,7,10,15,13,12,17,12,10,7,7,8,9,8,8,7,6,3,2,6,7,5,4,0,-2,-3,-2,0,4,8,9,6,-1,-10,-13,-12,8,7,8,8,12,11,11,19,13,10,7,7,8,8,10,8,5,4,3,4,5,7,5,4,1,0,-3,-3,-1,1,7,9,8,2,-6,-9,-9,9,7,7,7,8,4,5,18,15,10,8,8,7,9,11,9,4,1,3,6,6,6,5,4,2,0,-2,-3,-2,0,4,8,9,6,0,-2,-1,10,6,5,7,5,1,3,17,17,11,9,9,7,10,11,9,4,1,6,8,8,6,5,4,3,1,-1,-4,-3,-1,1,7,9,8,3,1,2,11,4,4,7,5,2,5,18,19,12,10,10,10,12,12,11,5,5,13,11,10,8,5,4,4,2,0,-3,-3,-2,0,4,8,7,4,2,2,11,4,5,8,5,3,7,18,20,14,10,11,11,12,12,11,6,7,16,14,13,10,6,4,4,3,0,-2,-4,-3,-1,1,6,5,4,3,3,9,5,7,9,7,4,7,18,22,16,9,10,11,13,11,9,7,6,12,17,15,13,8,4,4,4,2,0,-3,-3,-2,0,3,4,4,3,3,9,6,8,10,9,5,7,16,20,17,10,9,10,12,11,8,6,4,7,17,17,16,11,5,4,4,3,0,-2,-4,-1,0,1,2,3,4,4,10,7,7,9,9,7,7,10,13,18,12,9,9,9,11,8,3,0,2,11,18,18,15,8,4,4,4,2,0,-1,1,4,4,2,2,4,4,10,8,7,7,9,8,7,6,8,19,13,9,7,7,11,7,1,-5,-1,5,17,18,18,12,5,4,4,3,0,0,4,8,7,3,2,3,4,9,8,7,7,8,8,5,5,13,21,15,6,6,10,12,4,-2,-5,-4,0,10,18,19,16,8,4,4,4,2,4,7,9,9,5,2,2,3,8,8,8,7,7,7,4,6,16,21,15,4,5,11,13,2,-5,-5,-6,-4,3,17,19,19,12,5,4,4,5,8,9,10,9,7,3,2,2,7,8,9,7,7,6,5,11,18,14,9,4,3,7,9,2,-4,-5,-7,-6,0,10,19,20,16,7,3,6,6,8,9,10,10,9,5,2,2,6,7,10,8,7,6,7,15,17,6,2,3,0,1,5,3,-2,-6,-6,-7,-5,2,17,20,19,9,3,7,7,8,8,10,10,9,7,3,2,8,8,10,9,7,6,11,16,9,0,-1,0,-6,-9,0,3,-1,-5,-6,-7,-6,-1,10,19,20,6,1,4,7,8,8,9,10,10,8,5,3,9,9,11,11,8,8,14,15,0,-7,-7,-2,-12,-19,-4,4,0,-4,-7,-7,-7,-5,2,18,20,3,0,2,7,8,8,8,10,10,9,6,4,8,10,11,9,8,9,12,7,-4,-9,-9,-4,-10,-18,-12,0,1,-2,-6,-7,-7,-7,-1,11,19,7,0,1,4,7,8,8,9,10,9,7,6,7,11,10,8,7,10,9,0,-9,-10,-10,-7,-7,-16,-20,-6,4,0,-5,-7,-7,-7,-5,4,18,12,2,0,2,7,8,8,8,10,9,8,7,4,6,7,7,6,7,3,-5,-9,-11,-10,-7,-6,-12,-19,-13,0,1,-3,-6,-7,-7,-7,3,18,15,6,0,1,4,7,8,8,9,10,9,7,1,0,3,5,5,3,-2,-9,-10,-11,-9,-7,-6,-7,-17,-20,-6,3,-1,-6,-8,-7,-7,3,18,18,11,2,0,2,7,8,8,8,9,9,8,1,0,2,4,4,1,-3,-10,-11,-10,-9,-7,-6,-6,-12,-19,-13,0,0,-4,-7,-7,-3,5,15,18,15,6,1,1,4,7,8,8,9,9,8,1,0,0,2,3,0,-5,-10,-11,-10,-9,-7,-6,-5,-7,-17,-21,-6,3,-1,-6,-7,-1,7,13,19,18,11,2,0,2,7,8,8,8,9,9,1,0,0,1,2,0,-6,-11,-10,-10,-8,-7,-6,-5,-5,-12,-19,-13,0,0,-3,-1,2,7,11,16,18,15,6,1,1,5,7,8,8,8,8,1,0,0,0,1,0,-6,-11,-10,-10,-8,-7,-6,-5,-5,-7,-17,-20,-6,3,0,5,6,7,9,13,19,17,10,2,0,3,7,8,8,7,7,1,0,0,0,1,0,-5,-10,-10,-9,-8,-7,-6,-5,-5,-5,-12,-19,-13,2,1,6,7,7,8,11,16,18,14,5,1,2,5,8,8,7,7,0,0,0,0,0,0,-4,-10,-10,-9,-8,-7,-6,-5,-5,-5,-8,-16,-19,0,2,4,7,7,7,9,13,19,16,9,2,1,4,7,8,7,7],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
