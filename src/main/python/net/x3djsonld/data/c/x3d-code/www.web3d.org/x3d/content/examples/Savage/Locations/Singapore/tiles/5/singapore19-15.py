###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    Shape(
      appearance=Appearance(
        material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
        texture=ImageTexture(url=['../../images/5/singapore19-15.jpg'],repeatS=False,repeatT=False)),
      geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.3781657983818856,103.80528151193529,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=3.9897318E-4,zDimension=22,zSpacing=4.1579583E-4,height=[37,38,40,44,49,51,53,54,55,55,55,52,50,51,53,53,52,50,50,51,53,54,53,50,45,41,39,39,40,43,48,51,51,51,47,44,44,36,37,40,43,47,49,52,53,54,55,55,54,53,53,54,54,53,53,53,55,56,56,55,51,46,41,39,39,42,45,48,50,51,51,48,46,46,35,37,40,45,50,52,55,55,55,56,57,56,55,53,51,50,50,51,53,55,58,59,59,55,49,45,42,42,45,48,50,51,51,51,49,49,49,35,37,41,46,51,54,57,56,54,55,57,57,55,53,49,47,47,50,52,55,58,61,62,58,51,46,44,45,48,50,51,52,50,50,49,49,51,35,37,41,46,51,53,54,52,50,52,54,54,54,52,48,46,45,47,50,54,57,59,60,56,49,44,43,45,50,54,54,53,50,47,47,47,48,34,36,39,43,48,49,50,49,47,49,51,52,53,51,47,45,43,45,48,52,55,56,57,54,47,43,43,45,52,56,57,55,50,46,45,45,45,31,33,36,39,42,44,45,45,46,48,50,51,51,49,47,45,43,44,45,48,51,52,53,51,46,43,43,46,52,57,60,59,54,48,46,44,43,30,31,34,36,38,39,40,43,45,47,49,49,49,48,48,46,43,43,43,45,47,49,50,48,46,44,43,46,52,57,61,62,57,52,48,44,42,30,32,34,37,39,40,41,44,47,47,48,48,47,47,47,46,43,43,41,43,45,47,48,48,46,45,44,45,49,54,59,61,60,57,52,47,44,30,32,35,38,41,42,43,45,48,48,47,46,45,46,47,45,43,42,40,41,43,45,47,48,47,47,45,45,47,50,56,60,61,60,55,50,46,31,33,36,38,41,42,44,46,49,48,46,44,43,44,46,44,41,39,37,39,41,44,47,49,50,50,48,46,46,48,53,57,60,59,56,53,49,31,33,36,38,41,42,44,47,50,47,44,42,40,42,44,42,40,38,37,38,40,43,47,50,53,53,51,48,46,46,50,55,58,59,57,55,53,32,33,35,36,38,41,43,46,49,45,42,40,38,40,43,42,40,39,40,41,42,44,47,50,53,53,52,50,48,47,50,54,58,60,59,58,54,33,33,33,34,35,38,42,45,47,43,39,38,38,39,41,41,41,42,43,44,45,45,47,49,52,53,54,53,50,49,52,55,59,62,62,60,55,32,32,32,33,33,37,41,43,46,42,38,37,37,38,40,41,42,44,47,48,48,48,48,49,51,53,55,55,54,55,57,60,63,65,64,61,56,32,32,32,31,32,35,39,43,45,42,37,37,36,38,39,41,43,45,48,50,51,51,49,50,51,53,56,58,59,60,63,65,67,68,66,62,56,33,32,31,30,30,33,36,40,44,42,39,37,35,36,37,38,41,44,47,50,51,52,51,51,53,55,58,61,62,63,64,66,69,70,66,61,55,33,32,31,30,30,32,34,39,43,42,40,37,35,34,34,36,39,42,45,48,51,52,53,54,55,57,61,63,63,63,64,66,69,70,66,60,54,34,32,31,30,30,31,33,38,42,42,40,37,34,32,32,34,37,41,44,46,50,52,54,56,58,61,64,64,63,61,61,62,65,67,63,57,52,34,33,31,31,31,31,32,36,40,41,40,37,33,32,32,34,37,40,42,45,49,52,56,59,62,65,66,65,62,59,57,57,60,61,58,54,49,35,33,32,31,31,30,30,34,38,39,38,35,31,31,32,35,39,41,43,46,49,53,58,62,64,66,66,64,61,57,54,53,54,54,51,48,44,37,35,33,32,31,30,30,33,36,36,35,32,30,31,34,37,41,43,44,47,50,55,59,63,65,65,64,62,59,56,52,50,48,47,44,41,39],
        geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])))])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
