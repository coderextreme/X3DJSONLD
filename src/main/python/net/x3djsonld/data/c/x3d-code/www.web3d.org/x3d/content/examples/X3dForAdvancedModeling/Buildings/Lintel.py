###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Interchange',version='3.3',
  head=head(
    children=[
    meta(content='Lintel.x3d',name='title'),
    meta(content='Create a lintel, which is a load-bearing building component, a decorative architectural element, or a combined ornamented structural item. It is often found over portals, doors, windows, and fireplaces. Parameters are: clearSpanWidth=4; depth=3; topAbutmentHeight=0.5; pierWidth=0.5; pierHeight=1. Total height is pierHeight + topAbutmentHeight. Modify them with Transform scale or by editing the IndexedFileSet node. See the reference file ArchModelingDiagrams.pdf and the ArchScript_more_readable.js script to find further information.',name='description'),
    meta(content='Michele Foti, Don Brutzman',name='creator'),
    meta(content='15 December 2014',name='created'),
    meta(content='20 October 2019',name='modified'),
    meta(content='ArchModelingDiagrams.pdf',name='reference'),
    meta(content='https://en.wikipedia.org/wiki/Lintel',name='reference'),
    meta(content='https://x3dgraphics.com/examples/X3dForAdvancedModeling/Buildings/Lintel.x3d',name='identifier'),
    meta(content='X3D-Edit 3.3, https://savage.nps.edu/X3D-Edit',name='generator'),
    meta(content='../license.html',name='license')]),
  Scene=Scene(
    children=[
    WorldInfo(title='Lintel.x3d'),
    Shape(DEF='Arch',
      geometry=IndexedFaceSet(DEF='ArchIndex',colorPerVertex=False,convex=False,coordIndex=[136,137,0,139,-1,152,135,155,153,-1,149,31,153,155,-1,149,31,144,147,-1,134,147,144,145,-1,132,133,141,62,-1,130,131,63,138,-1,150,151,129,154,-1,94,150,154,148,-1,148,94,143,146,-1,142,128,146,143,-1,125,126,127,140,-1,0,63,131,137,-1,131,130,136,137,-1,130,136,139,138,-1,151,152,135,129,-1,129,135,155,154,-1,148,154,155,149,-1,148,149,147,146,-1,146,147,134,128,-1,128,134,145,142,-1,127,133,141,140,-1,127,126,132,133,-1,126,132,62,125,-1,63,138,139,0,-1,150,151,152,153,-1,150,153,31,94,-1,31,94,143,144,-1,142,143,144,145,-1,140,125,62,141,-1],solid=False,
        coord=Coordinate(DEF='ArchCoord',point=[(2,0,0),(1.9974984355438178,0.1,0),(1.98997487421324,0.2,0),(1.977371993328519,0.3,0),(1.9595917942265423,0.4,0),(1.9364916731037084,0.5,0),(1.9078784028338912,0.6,0),(1.8734993995195193,0.7,0),(1.833030277982336,0.8,0),(1.786057109949175,0.9,0),(1.7320508075688775,1,0),(1.6703293088490067,1.1,0),(1.60,1.2,0),(1.5198684153570664,1.3,0),(1.42828568570857,1.4,0),(1.3228756555322953,1.5,0),(1.20,1.6,0),(1.0535653752852738,1.7,0),(0.9020947843768965,1.785,0),(0.7599342076785332,1.85,0),(0.6244997998398398,1.9,0),(0.5425633603552677,1.925,0),(0.4444097208657794,1.95,0),(0.36181625170796194,1.967,0),(0.2821347195933173,1.98,0),(0.19974984355438343,1.99,0),(0.16718552568927703,1.993,0),(0.14133294025102578,1.995,0),(0.10950342460398415,1.997,0),(0.08942035562443252,1.998,0),(0.06323764701505419,1.999,0),(0,0,0),(-0.06323764701505419,1.999,0),(-0.08942035562443252,1.998,0),(-0.10950342460398415,1.997,0),(-0.14133294025102578,1.995,0),(-0.16718552568927703,1.993,0),(-0.19974984355438343,1.99,0),(-0.2821347195933173,1.98,0),(-0.36181625170796194,1.967,0),(-0.4444097208657794,1.95,0),(-0.5425633603552677,1.925,0),(-0.6244997998398398,1.9,0),(-0.7599342076785332,1.85,0),(-0.9020947843768965,1.785,0),(-1.0535653752852738,1.7,0),(-1.20,1.6,0),(-1.3228756555322953,1.5,0),(-1.42828568570857,1.4,0),(-1.5198684153570664,1.3,0),(-1.60,1.2,0),(-1.6703293088490067,1.1,0),(-1.7320508075688775,1,0),(-1.786057109949175,0.9,0),(-1.833030277982336,0.8,0),(-1.8734993995195193,0.7,0),(-1.9078784028338912,0.6,0),(-1.9364916731037084,0.5,0),(-1.9595917942265423,0.4,0),(-1.977371993328519,0.3,0),(-1.98997487421324,0.2,0),(-1.9974984355438178,0.1,0),(-2,0,0),(2,0,3),(1.9974984355438178,0.1,3),(1.98997487421324,0.2,3),(1.977371993328519,0.3,3),(1.9595917942265423,0.4,3),(1.9364916731037084,0.5,3),(1.9078784028338912,0.6,3),(1.8734993995195193,0.7,3),(1.833030277982336,0.8,3),(1.786057109949175,0.9,3),(1.7320508075688775,1,3),(1.6703293088490067,1.1,3),(1.60,1.2,3),(1.5198684153570664,1.3,3),(1.42828568570857,1.4,3),(1.3228756555322953,1.5,3),(1.20,1.6,3),(1.0535653752852738,1.7,3),(0.9020947843768965,1.785,3),(0.7599342076785332,1.85,3),(0.6244997998398398,1.9,3),(0.5425633603552677,1.925,3),(0.4444097208657794,1.95,3),(0.36181625170796194,1.967,3),(0.2821347195933173,1.98,3),(0.19974984355438343,1.99,3),(0.16718552568927703,1.993,3),(0.14133294025102578,1.995,3),(0.10950342460398415,1.997,3),(0.08942035562443252,1.998,3),(0.06323764701505419,1.999,3),(0,0,3),(-0.06323764701505419,1.999,3),(-0.08942035562443252,1.998,3),(-0.10950342460398415,1.997,3),(-0.14133294025102578,1.995,3),(-0.16718552568927703,1.993,3),(-0.19974984355438343,1.99,3),(-0.2821347195933173,1.98,3),(-0.36181625170796194,1.967,3),(-0.4444097208657794,1.95,3),(-0.5425633603552677,1.925,3),(-0.6244997998398398,1.9,3),(-0.7599342076785332,1.85,3),(-0.9020947843768965,1.785,3),(-1.0535653752852738,1.7,3),(-1.20,1.6,3),(-1.3228756555322953,1.5,3),(-1.42828568570857,1.4,3),(-1.5198684153570664,1.3,3),(-1.60,1.2,3),(-1.6703293088490067,1.1,3),(-1.7320508075688775,1,3),(-1.786057109949175,0.9,3),(-1.833030277982336,0.8,3),(-1.8734993995195193,0.7,3),(-1.9078784028338912,0.6,3),(-1.9364916731037084,0.5,3),(-1.9595917942265423,0.4,3),(-1.977371993328519,0.3,3),(-1.98997487421324,0.2,3),(-1.9974984355438178,0.1,3),(-2,0,3),(-2,-1,3),(-2.5,-1,3),(-2.5,0.5,3),(2.5,0.5,3),(2.5,-1,3),(2,-1,3),(-2,-1,0),(-2.5,-1,0),(-2.5,0.5,0),(2.5,0.5,0),(2.5,-1,0),(2,-1,0),(2.5,0,3),(2.5,0,0),(-2.5,0,3),(-2.5,0,0),(-2.5,0,3),(-2,0,3),(-2,0,0),(-2.5,0,0),(-2,0.5,3),(-2,0.5,0),(0,0.5,3),(0,0.5,0),(2,0,3),(2.5,0,3),(2.5,0,0),(2,0,0),(2,0.5,3),(2,0.5,0)])),
      appearance=Appearance(
        material=Material(DEF='MaterialNode',diffuseColor=(1,0.75,0.25))))])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful for Lintel.py")
