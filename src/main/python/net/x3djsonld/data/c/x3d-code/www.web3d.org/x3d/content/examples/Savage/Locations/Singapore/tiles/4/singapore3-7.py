###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_37',geoSystem=['GDC'],position=(1.273385249845958,103.80528151193529,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.273385249845958,103.80528151193529,0.0),range=4101.627,child1Url=['../../tiles/5/singapore6-14.x3d'],child2Url=['../../tiles/5/singapore6-15.x3d'],child3Url=['../../tiles/5/singapore7-14.x3d'],child4Url=['../../tiles/5/singapore7-15.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore3-7.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.264653537467964,103.79091847780627,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[5,1,-3,3,16,18,17,14,16,19,21,19,17,14,16,25,25,13,7,6,7,13,19,17,7,5,9,11,11,13,11,11,5,1,1,3,7,6,3,-1,-1,10,18,17,14,14,18,21,20,18,18,23,31,24,10,6,6,7,15,24,22,8,4,10,12,8,12,11,10,5,2,2,3,7,7,5,1,-4,3,16,17,14,12,16,21,21,19,23,31,37,21,6,6,6,7,15,26,24,8,3,10,10,6,11,11,8,5,4,4,5,8,10,6,3,-1,-1,10,17,14,12,14,21,22,20,27,39,40,18,4,5,8,9,12,21,20,7,5,10,7,4,7,9,7,4,5,6,10,12,13,7,5,1,-4,3,16,14,11,12,21,24,23,31,43,38,14,3,5,10,11,11,16,17,8,7,9,5,4,4,7,6,4,7,8,14,15,15,10,6,3,-1,0,10,16,8,11,20,28,28,34,41,31,11,3,4,9,13,11,14,17,11,8,7,5,6,4,6,6,5,8,9,17,19,18,13,8,6,1,-4,2,16,7,10,18,30,33,35,36,21,8,5,4,9,16,14,13,17,15,10,6,6,9,5,6,5,7,11,12,22,23,18,14,9,6,2,-1,0,10,8,10,16,30,34,34,31,17,8,8,8,11,15,15,15,17,15,12,9,8,10,6,5,6,12,16,17,25,27,18,16,11,7,4,0,-4,6,10,9,12,29,35,31,25,13,7,11,12,12,15,18,17,16,16,16,13,9,11,7,5,8,17,23,24,29,31,17,18,13,8,5,1,-1,7,11,7,9,22,32,28,20,10,9,14,15,13,16,21,20,16,18,19,16,12,13,9,8,12,20,31,32,33,35,15,18,14,9,6,2,0,9,12,6,6,15,28,25,14,8,11,17,18,15,16,23,22,15,20,22,19,13,15,12,11,16,22,37,40,38,39,14,17,17,9,8,4,1,8,11,7,6,11,19,17,8,8,15,21,20,17,16,23,23,17,19,22,18,11,14,13,13,19,24,38,46,44,46,13,14,18,8,9,5,2,6,9,8,7,7,12,10,3,8,18,24,23,17,17,22,24,20,18,22,17,9,12,14,16,22,26,38,52,50,54,13,12,15,8,9,6,3,8,9,9,7,7,9,7,4,10,21,28,25,17,16,21,20,17,17,20,15,9,14,18,21,30,35,43,58,60,64,15,11,11,8,9,7,4,12,10,10,8,8,6,5,5,12,25,31,26,16,16,20,15,14,17,19,15,10,16,22,27,39,45,48,65,70,74,14,9,8,6,8,7,9,15,10,9,9,9,6,5,7,12,25,29,23,14,17,31,28,17,19,19,16,14,22,28,32,45,55,55,68,76,78,12,8,5,5,7,7,14,18,10,7,8,9,6,7,9,12,25,26,19,12,20,44,43,21,21,21,18,19,29,35,37,50,65,63,69,82,81,8,7,5,6,8,12,17,18,8,6,8,10,7,10,10,13,22,22,16,12,20,39,38,24,27,24,22,27,37,42,41,51,69,73,73,81,81,5,5,7,9,10,18,21,16,7,4,7,12,8,12,10,14,19,18,14,11,19,29,28,27,32,28,25,34,46,50,44,51,71,84,76,80,82,4,5,8,9,10,19,17,11,6,4,6,10,10,13,11,14,16,15,13,12,18,25,27,27,29,27,26,35,46,53,53,58,71,87,83,81,77,2,5,9,10,11,18,12,5,5,4,5,6,12,14,12,14,14,12,12,13,17,23,26,28,24,25,27,34,43,55,62,66,71,87,90,82,71,4,5,9,10,9,14,10,4,5,6,8,9,14,15,14,16,15,12,11,14,19,22,28,30,27,28,32,38,40,50,64,75,74,85,84,70,59,7,6,9,10,7,10,10,5,7,10,13,14,16,16,17,18,16,12,11,16,21,23,29,34,32,33,38,42,37,44,65,83,80,81,72,54,45,8,7,8,10,7,9,11,8,9,12,19,21,19,16,17,17,15,13,15,21,26,27,32,35,35,35,38,43,38,41,59,80,78,75,62,44,37,9,9,9,10,7,10,14,10,11,13,25,28,23,15,15,15,13,16,19,27,31,32,33,36,39,37,37,41,40,38,50,71,73,68,54,36,32,9,9,9,10,9,13,14,11,13,17,33,39,27,18,18,16,13,20,26,31,36,37,37,39,41,39,36,39,42,41,47,65,75,63,48,33,31,7,8,9,10,11,17,15,12,16,22,43,50,30,23,23,18,15,25,33,33,38,42,41,42,42,40,37,38,44,47,48,62,78,60,43,31,31,6,8,9,10,14,17,15,14,19,24,47,54,35,33,29,20,16,26,36,34,40,51,47,43,42,41,39,42,48,56,54,56,70,53,37,28,29,6,9,9,11,18,16,15,16,22,24,47,54,41,48,36,21,16,26,37,34,43,61,54,42,40,39,41,46,54,65,61,51,55,46,30,23,26,6,9,8,11,19,15,13,16,23,25,43,49,43,55,38,20,17,24,33,32,43,64,57,43,42,42,44,53,60,70,65,49,46,39,26,19,24,7,10,8,12,19,15,10,14,23,26,35,41,40,55,37,18,18,20,26,28,40,60,57,48,47,48,50,61,64,71,65,51,43,33,25,16,22,8,10,8,14,23,17,10,16,24,26,27,33,35,51,40,21,19,19,22,26,38,54,55,53,55,57,57,67,69,69,63,53,47,36,28,21,25,8,11,11,18,31,21,11,21,26,25,19,25,29,44,47,29,21,21,23,26,35,46,53,58,66,69,67,73,72,66,62,56,57,45,36,31,31,9,11,14,22,37,27,14,20,23,21,16,22,26,38,46,31,23,25,27,31,38,47,56,65,74,77,73,75,73,65,61,57,67,54,40,35,34,9,10,18,27,41,34,16,13,15,16,18,25,27,32,36,27,26,31,35,40,47,55,65,74,81,80,73,73,73,67,61,55,78,62,40,34,31,10,11,24,34,45,39,16,9,11,14,22,29,29,30,30,25,29,36,43,50,58,64,71,78,80,77,71,68,72,69,58,51,74,61,42,32,30,12,16,32,42,48,41,13,11,14,19,29,35,32,32,31,29,32,40,50,59,68,73,73,73,72,68,65,62,69,67,49,43,53,49,48,33,31,14,22,41,47,47,38,12,15,19,24,34,40,35,35,33,32,35,43,55,65,73,75,70,65,62,60,59,58,65,62,40,36,36,38,47,34,32,18,27,47,51,40,30,13,22,28,31,36,41,40,37,33,33,36,45,57,66,70,68,61,56,53,53,54,55,57,50,36,32,29,31,38,33,33,22,35,53,52,33,21,14,29,37,37,38,42,42,39,34,34,38,45,55,63,63,58,52,48,45,45,48,49,48,39,31,28,24,25,31,34,34,27,47,59,50,27,15,13,34,42,40,40,42,42,42,38,37,41,45,50,55,55,49,46,44,38,35,39,39,36,32,27,24,22,23,30,36,38,34,59,63,48,23,11,12,35,44,43,42,42,40,43,41,40,43,44,45,48,47,42,41,40,32,28,31,30,27,27,23,20,21,22,31,40,41,44,65,62,44,25,12,14,32,42,43,43,42,39,43,41,41,43,41,40,42,42,40,41,37,29,25,27,26,24,23,21,19,19,23,34,43,41,53,68,59,39,27,14,17,29,39,44,44,42,38,42,41,41,41,37,36,37,37,39,40,33,26,23,25,25,23,22,21,18,18,25,35,43,39],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
