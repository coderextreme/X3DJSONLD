###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_110',geoSystem=['GDC'],position=(1.238458400333982,103.8914597167094,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.238458400333982,103.8914597167094,0.0),range=4101.627,child1Url=['../../tiles/5/singapore2-20.x3d'],child2Url=['../../tiles/5/singapore2-21.x3d'],child3Url=['../../tiles/5/singapore3-20.x3d'],child4Url=['../../tiles/5/singapore3-21.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore1-10.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.229726687955988,103.87709668258039,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[4,0,0,5,7,2,2,5,9,9,8,8,4,6,17,16,6,3,5,1,0,-5,4,7,6,7,3,8,6,6,8,6,5,12,15,13,11,1,-4,0,6,4,1,1,4,8,8,9,8,2,11,27,23,7,5,6,1,0,0,6,12,10,6,2,4,3,5,5,4,5,10,13,15,13,2,-1,5,10,7,3,2,4,7,8,9,6,2,14,36,33,14,5,4,0,-2,1,7,13,10,4,3,2,3,3,2,3,5,6,9,12,11,5,8,13,14,12,7,4,4,6,6,8,2,3,17,42,44,24,4,2,-5,-6,2,7,11,8,2,4,2,4,3,0,2,4,3,4,6,7,7,12,13,12,13,8,2,1,0,7,9,2,4,18,42,46,33,7,0,-10,-4,2,6,9,8,1,4,6,5,2,2,3,5,4,3,5,7,9,10,10,7,9,6,0,-3,-6,8,9,2,6,18,34,41,42,14,-4,-17,0,2,4,6,7,2,4,12,5,1,6,6,7,8,6,9,11,9,7,6,3,7,4,-2,-6,-8,8,9,4,8,17,25,29,37,15,-3,-14,4,2,3,5,6,3,3,14,4,1,8,8,8,8,6,9,11,8,3,3,3,6,4,-3,-7,-3,7,8,8,10,15,14,10,19,10,0,-2,6,1,4,6,4,2,2,10,3,4,9,9,9,7,5,7,8,6,0,1,3,5,4,-1,-4,2,10,11,10,10,13,8,0,9,7,1,3,7,1,3,7,4,3,2,9,4,5,8,8,9,6,3,4,5,2,-1,0,4,6,5,3,1,8,20,19,11,7,12,7,0,5,4,2,6,8,3,2,8,6,5,3,10,7,6,5,7,9,4,2,2,2,0,-2,0,5,8,7,8,6,12,28,28,12,7,11,7,0,4,1,3,8,7,4,6,14,9,6,4,11,9,6,5,6,8,3,2,2,2,0,-1,3,6,11,12,12,10,16,33,37,14,8,10,7,5,5,0,4,5,3,7,17,30,12,6,6,11,7,5,8,7,9,3,4,6,4,-1,0,4,7,13,14,17,17,19,36,38,14,8,6,6,7,6,0,5,4,2,8,24,41,20,7,7,10,6,4,8,7,9,4,6,7,5,0,0,3,6,13,14,23,29,22,33,24,12,6,-3,2,7,6,4,8,5,5,7,20,46,36,13,5,7,6,2,3,6,9,9,8,4,2,1,2,3,5,12,14,25,36,24,33,16,11,4,-13,-1,7,6,5,9,6,6,6,15,43,43,15,5,4,6,1,0,5,8,10,9,3,1,8,5,3,4,10,11,19,31,29,38,17,10,0,-22,-6,9,6,5,9,5,4,4,8,24,27,10,4,3,6,4,1,3,5,7,7,6,3,12,7,3,4,8,8,13,26,33,39,17,9,-2,-23,-7,10,7,5,8,5,4,4,3,9,14,6,4,3,6,6,2,3,3,4,7,7,5,7,4,3,6,8,5,7,22,36,27,13,8,3,-2,0,10,6,3,8,7,4,5,5,10,9,4,4,4,4,5,1,5,5,4,6,6,4,4,1,3,8,7,4,4,19,37,16,8,9,10,13,9,11,5,2,7,8,4,5,7,10,4,2,4,5,3,4,1,7,6,4,5,5,4,6,3,3,7,7,5,9,20,28,8,3,12,15,15,20,11,1,1,7,9,3,4,8,8,4,3,5,6,5,6,3,7,5,5,7,6,5,9,6,3,6,6,5,13,22,19,1,0,14,19,16,27,10,-2,1,6,8,2,4,9,6,3,3,5,6,6,8,5,6,5,6,9,7,5,15,14,4,3,3,5,18,24,13,0,-1,7,13,10,16,5,-3,0,4,3,4,4,6,7,6,1,2,4,5,9,6,7,7,7,9,7,5,21,21,6,0,0,5,22,27,8,0,-1,2,7,4,6,0,-3,0,1,0,4,5,5,8,8,0,0,3,5,10,6,8,8,9,9,6,6,13,16,7,0,-3,3,20,22,10,1,0,2,3,0,1,-2,0,1,3,3,9,16,11,9,7,0,-1,0,3,7,3,6,9,9,8,6,6,7,11,8,-1,-7,1,17,17,12,4,1,3,0,-3,-1,-5,5,3,6,7,14,27,18,10,6,1,-2,0,1,4,1,5,9,8,8,6,6,5,8,7,2,0,7,19,18,14,7,2,4,1,-3,0,-3,4,5,6,10,15,21,19,8,4,1,-1,0,0,3,1,4,5,4,5,6,6,3,4,7,6,6,15,22,19,17,11,3,4,2,-1,1,-1,4,7,6,14,15,14,21,6,3,1,0,0,0,3,1,3,1,0,2,5,7,4,4,12,12,9,17,23,19,15,9,3,2,1,-1,2,3,6,10,3,10,11,9,13,0,-6,-1,0,2,0,4,5,6,5,3,5,6,7,5,4,17,18,12,19,24,20,14,6,1,0,0,-2,4,7,6,13,0,5,7,3,4,-5,-16,-6,1,4,2,6,9,10,9,8,9,8,6,4,6,18,22,17,20,24,21,15,6,0,0,-1,-5,1,4,4,11,0,4,3,1,3,-1,-7,-2,3,7,6,7,9,10,8,8,10,9,7,4,9,19,25,22,22,23,21,17,5,0,0,-1,-10,-1,1,2,9,0,4,0,0,2,3,2,0,5,11,10,9,10,10,7,8,11,10,8,8,9,13,20,20,18,20,21,13,2,0,0,0,-4,-3,0,0,8,2,6,2,0,4,5,4,2,3,12,12,9,9,10,9,8,8,8,7,12,9,7,14,17,14,17,22,9,0,-3,0,1,2,-6,-4,-4,6,6,8,5,2,5,6,6,4,2,12,15,7,6,10,10,6,4,5,7,14,10,7,11,13,11,16,23,12,2,0,1,2,2,-4,-3,0,7,7,9,7,4,9,7,6,5,4,12,13,3,3,9,11,6,3,5,7,15,11,7,10,9,8,16,23,18,7,7,3,3,1,-2,-2,6,7,8,9,9,7,13,8,5,6,8,12,10,0,0,8,11,5,3,5,7,15,11,8,8,8,10,18,23,18,9,7,2,4,5,2,3,13,10,8,8,9,7,11,6,4,8,9,12,9,2,2,8,11,6,3,5,7,13,12,8,7,8,14,22,21,18,10,7,1,5,12,10,11,20,15,7,8,8,5,8,4,4,11,10,13,8,7,7,11,11,7,4,5,5,12,11,8,6,8,16,21,18,15,8,6,0,4,13,11,9,19,16,8,7,8,5,6,1,3,9,9,11,8,8,8,10,13,10,7,5,4,11,10,9,4,8,18,19,15,11,3,6,0,2,11,8,4,13,17,10,6,9,7,6,-2,1,6,7,8,8,8,7,8,14,14,10,6,4,7,8,10,9,11,17,16,14,8,1,4,0,1,11,9,4,12,17,11,9,9,7,8,-1,0,2,4,4,5,7,7,8,13,14,10,5,3,1,4,12,17,17,12,13,15,5,1,2,-3,0,12,13,9,14,18,14,13,8,8,10,0,0,-1,0,0,0,7,8,6,10,12,9,3,1,0,0,12,21,17,10,14,16,4,1,3,-1,1,15,15,13,18,19,15,15,9,8,9,1,1,-1,0,-1,-1,8,10,6,9,11,8,2,0,-2,-2,13,21,14,10,17,19,4,4,9,4,6,17,15,17,24,19,15,16,10,8,7,2,4,0,1,-2,-1,10,14,8,8,11,7,1,-1,-7,-6,11,18,12,9,15,18,5,6,9,5,8,17,14,19,23,19,16,16,12,9,6,4,6,1,2,-1,0,11,14,9,9,11,7,1,-1],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
