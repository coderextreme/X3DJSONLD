###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_51',geoSystem=['GDC'],position=(1.3083120993579338,103.63292510238706,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.3083120993579338,103.63292510238706,0.0),range=4101.627,child1Url=['../../tiles/5/singapore10-2.x3d'],child2Url=['../../tiles/5/singapore10-3.x3d'],child3Url=['../../tiles/5/singapore11-2.x3d'],child4Url=['../../tiles/5/singapore11-3.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore5-1.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.2995803869799398,103.61856206825804,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=45,zSpacing=3.96896E-4,height=[8,7,8,7,8,9,10,9,8,7,7,7,9,9,10,8,7,7,8,9,10,12,9,7,5,4,4,6,8,9,9,9,11,10,8,8,8,7,7,8,8,7,9,11,9,8,7,7,8,8,9,9,7,7,7,8,9,9,11,9,6,5,4,3,5,7,8,9,9,12,13,9,8,8,7,8,9,8,7,9,12,8,8,8,8,9,9,9,9,6,6,8,8,8,9,10,9,6,4,3,3,3,6,8,9,9,13,16,11,8,8,7,8,8,6,7,8,11,7,8,8,8,9,9,9,9,5,6,8,9,10,10,10,8,5,3,3,2,3,5,7,9,10,14,16,13,10,9,7,9,7,5,6,7,9,6,7,7,7,8,9,9,10,5,5,9,12,12,11,9,6,3,2,2,2,3,3,6,9,11,14,16,16,11,9,8,6,4,5,5,6,9,7,6,5,6,8,8,9,9,6,6,9,12,12,10,7,5,3,2,2,2,2,4,7,10,11,13,15,16,13,11,8,2,1,5,4,6,8,7,5,3,4,6,8,10,8,7,8,9,12,12,8,5,4,3,2,2,2,2,4,9,12,11,13,15,15,16,14,4,-2,-4,0,3,6,8,8,6,3,4,6,8,10,8,9,9,9,11,11,8,6,4,3,2,2,2,4,7,11,13,12,13,14,15,16,15,-2,-9,-10,-10,2,6,7,8,6,4,5,7,8,10,9,10,9,8,9,10,9,7,5,2,2,2,2,6,13,14,14,12,12,13,15,15,16,-9,-15,-17,-19,0,5,7,8,6,5,5,7,9,10,10,10,10,8,8,9,8,7,5,2,2,2,4,9,15,16,15,13,12,13,14,14,14,-17,-21,-24,-27,-5,4,6,6,4,6,6,7,10,11,10,10,10,8,7,8,7,5,5,3,3,4,6,11,15,17,15,14,12,12,13,14,11,-22,-25,-28,-31,-9,3,6,6,4,6,6,7,10,11,10,10,10,8,7,7,5,5,7,5,5,6,8,12,15,18,16,15,13,12,13,13,11,-27,-29,-31,-33,-15,1,7,7,5,6,6,6,8,10,10,10,9,8,7,6,5,7,10,7,6,8,10,12,15,18,17,15,14,12,12,13,12,-30,-31,-33,-31,-18,0,6,8,7,6,6,6,8,10,10,10,8,7,7,6,5,8,10,8,7,10,12,13,14,17,18,16,14,13,12,13,13,-32,-33,-33,-27,-20,-1,5,7,8,7,7,7,8,10,11,10,7,6,8,6,6,9,9,7,9,11,12,13,13,17,17,17,15,14,12,13,13,-33,-33,-32,-24,-21,-2,3,7,8,8,7,8,8,10,11,10,6,7,8,7,7,9,8,7,10,12,13,12,12,16,17,17,16,13,10,11,11,-33,-34,-28,-22,-21,-3,2,5,7,8,8,8,7,9,10,10,7,8,8,6,7,9,8,7,11,13,13,11,12,15,16,16,16,11,6,6,6,-34,-32,-24,-21,-18,-4,2,5,6,7,8,6,6,8,10,10,8,8,8,6,8,10,7,8,13,13,11,10,11,15,15,16,15,10,5,4,4,-34,-28,-22,-21,-13,-5,3,6,6,7,6,4,5,7,9,10,8,8,8,7,9,11,8,9,16,12,9,8,9,14,14,15,14,10,6,3,4,-32,-25,-21,-19,-9,-5,4,8,6,7,6,4,5,7,10,10,9,8,8,7,10,12,8,8,14,9,6,7,10,13,14,14,13,10,6,3,5,-28,-23,-21,-14,-6,-4,6,9,7,8,6,5,6,8,10,11,10,8,7,8,10,12,9,7,9,4,5,6,11,14,13,13,12,9,6,5,5,-25,-21,-19,-10,-4,-4,6,9,8,8,7,7,7,8,10,12,11,9,9,10,11,12,9,5,4,1,4,8,14,14,13,13,11,7,5,6,6,-23,-21,-14,-6,-4,-3,6,9,8,8,9,9,8,9,10,11,12,10,12,13,12,11,9,4,1,0,3,13,19,13,13,12,10,6,4,5,5,-21,-19,-10,-4,-4,-3,5,9,9,8,9,9,9,9,10,11,13,12,13,15,12,9,7,4,2,3,7,17,19,11,11,11,8,5,3,5,5,-21,-15,-7,-4,-4,-5,4,10,10,7,8,8,8,9,10,11,13,11,12,13,10,7,5,4,4,10,17,20,15,7,8,8,6,4,3,4,4,-19,-11,-5,-5,-5,-5,4,10,11,8,7,8,8,10,10,11,13,11,11,10,8,5,4,4,8,17,23,20,10,4,5,7,6,4,3,2,3,-15,-8,-5,-5,-6,-2,8,12,12,9,8,9,10,11,11,12,14,13,11,9,7,5,2,5,13,21,24,16,7,3,4,6,6,4,2,0,0,-11,-6,-6,-6,-6,2,10,12,12,9,9,12,13,12,12,13,15,13,10,7,6,4,1,7,17,22,21,11,5,3,3,6,6,5,3,0,0,-8,-6,-6,-6,-3,5,10,11,12,10,10,16,15,13,13,14,15,12,8,6,6,3,1,9,21,22,15,9,5,3,4,8,7,6,4,0,0,-5,-6,-7,-6,0,6,8,10,10,9,11,20,16,12,12,14,14,10,6,6,5,2,1,10,22,20,10,8,5,3,6,10,9,6,5,2,0,-3,-6,-7,-3,2,6,6,10,9,7,11,21,16,11,10,13,13,9,5,5,4,2,4,11,20,16,9,8,6,5,7,12,10,6,6,4,2,0,-6,-6,0,4,6,5,10,8,6,10,19,15,9,8,11,12,8,4,4,3,3,6,12,17,12,8,8,6,6,8,13,11,6,6,5,4,2,-6,-3,1,4,5,6,11,7,5,8,15,13,8,7,10,11,7,3,3,3,3,7,13,14,11,9,8,7,7,9,13,11,6,4,5,4,6,-4,0,3,4,4,7,10,6,5,6,10,11,8,8,10,11,8,3,2,2,3,7,13,11,10,10,7,7,7,9,13,11,6,3,4,4,12,0,1,3,4,5,9,7,4,4,5,8,11,10,9,10,12,10,4,0,2,2,5,11,8,9,9,7,7,6,8,11,10,6,4,4,5,17,6,3,3,4,6,10,4,1,2,4,7,11,12,10,10,12,14,6,0,1,2,4,8,6,7,8,6,7,6,7,9,9,6,6,5,6,17,9,5,4,5,8,7,0,-3,0,3,8,10,10,9,10,11,16,11,2,2,3,4,6,4,5,7,7,7,6,7,9,8,6,7,6,7,16,11,6,4,7,10,2,-3,-8,-2,3,9,9,7,7,9,10,16,16,5,3,5,4,4,2,3,6,7,8,7,8,9,7,6,7,6,7,14,12,7,5,8,6,-1,-7,-8,-1,4,10,8,6,7,8,9,15,17,8,3,4,2,1,1,4,7,8,9,8,8,9,7,7,8,7,7,13,13,9,7,10,1,-6,-9,-4,0,5,10,7,7,7,6,8,13,15,8,2,1,-1,-1,1,6,9,9,9,9,8,9,8,9,9,7,7,13,13,10,9,6,-2,-9,-7,-1,1,5,9,8,8,8,6,7,12,14,9,1,-1,-2,0,4,7,9,9,9,10,9,9,9,9,10,8,8,13,12,11,10,1,-7,-10,-3,3,2,5,8,8,8,9,7,7,12,13,8,0,-4,-2,1,7,8,9,10,10,10,10,10,10,9,10,8,8,12,11,9,5,-3,-10,-7,1,6,6,6,6,7,8,8,7,6,11,14,9,0,-5,0,5,10,10,9,10,10,9,10,10,10,9,10,8,8,11,10,4,-3,-8,-11,-1,7,9,12,7,4,6,7,7,6,5,10,15,9,-2,-6,2,9,13,13,10,11,10,9,9,10,10,9,10,9,9,10,7,0,-6,-11,-7,3,10,11,14,8,4,5,7,8,7,6,9,14,7,-4,-4,4,10,13,13,11,11,10,9,8,9,10,10,10,9,9],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
