###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_15',geoSystem=['GDC'],position=(1.238458400333982,103.74782937541922,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.238458400333982,103.74782937541922,0.0),range=4101.627,child1Url=['../../tiles/5/singapore2-10.x3d'],child2Url=['../../tiles/5/singapore2-11.x3d'],child3Url=['../../tiles/5/singapore3-10.x3d'],child4Url=['../../tiles/5/singapore3-11.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore1-5.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.229726687955988,103.7334663412902,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[2,3,25,38,11,3,2,-1,0,3,7,7,6,8,9,10,21,43,57,61,57,47,35,22,10,10,11,8,7,14,18,3,0,-1,0,2,5,3,2,27,33,6,1,2,2,2,5,7,8,6,7,9,11,24,45,59,61,52,40,34,27,12,9,11,11,4,11,10,0,-8,-3,-1,2,3,2,0,19,22,3,0,2,2,3,5,7,8,6,6,9,10,24,49,62,57,46,35,35,30,14,8,9,9,4,10,7,-3,-14,-4,0,2,3,0,-2,8,8,1,0,2,2,3,4,8,9,6,5,9,9,21,51,64,51,38,32,35,32,16,8,7,5,6,10,7,-5,-15,-5,1,2,3,0,-2,4,1,0,1,3,3,3,4,7,9,6,6,9,9,19,45,55,44,33,31,35,32,18,9,6,2,7,11,8,-2,-11,-3,3,4,4,4,-1,6,0,0,2,5,4,3,3,6,8,7,8,9,11,15,32,40,35,30,30,36,32,20,9,6,0,7,12,9,2,-1,0,4,6,6,6,0,8,0,0,3,6,6,4,4,6,7,7,8,9,11,14,22,26,26,25,28,35,30,19,8,5,0,7,12,12,5,2,2,6,8,7,6,5,9,2,1,5,6,6,7,4,6,5,7,7,8,11,13,15,14,15,19,25,31,27,16,6,4,0,5,11,16,3,1,1,6,8,7,5,6,10,3,1,7,5,6,7,5,5,5,7,7,9,12,13,10,8,10,15,22,26,22,14,5,3,1,4,11,14,0,0,1,9,9,7,3,4,9,4,1,7,2,3,6,5,4,4,9,9,12,12,13,11,9,10,15,20,18,13,10,5,5,3,4,11,10,-3,-5,1,13,10,8,3,3,5,2,1,7,1,0,3,4,3,4,10,11,13,12,12,10,9,10,15,17,11,7,6,3,4,3,4,9,6,-6,-7,1,16,11,8,9,2,0,-2,0,7,1,-3,0,4,2,4,12,13,13,11,11,9,8,10,13,12,4,1,0,0,1,3,4,6,5,-3,-4,3,15,10,7,11,3,-2,-5,0,7,2,-3,-1,2,1,4,11,12,12,10,10,8,8,9,11,6,0,-1,-2,-3,-2,0,4,2,3,-5,-2,4,12,10,6,8,3,0,0,4,8,4,0,-1,1,2,4,8,9,12,11,9,8,7,7,8,3,-2,-2,-5,-9,-11,-7,1,0,0,-12,-2,2,8,8,5,6,4,4,4,4,7,6,4,-1,1,1,2,5,8,11,10,8,7,6,5,5,1,-3,-2,-8,-14,-20,-15,-1,0,-2,-16,-1,1,6,5,4,8,4,4,4,0,6,6,2,-4,2,0,0,3,8,10,8,7,6,5,4,4,2,0,-2,-11,-19,-29,-27,-9,2,0,-8,0,2,5,0,2,8,4,5,4,-4,5,7,1,-6,2,-1,-4,2,8,8,6,5,4,2,2,3,3,1,-1,-13,-25,-36,-37,-18,1,0,-2,0,2,4,-3,0,6,4,6,6,0,7,9,2,-8,-2,-4,-4,4,7,6,3,2,1,-2,-2,3,5,5,0,-15,-30,-39,-41,-26,-9,-1,0,0,0,0,-2,3,4,4,6,7,3,9,10,3,-8,-6,-7,-3,5,7,4,0,0,0,-7,-5,3,7,8,2,-15,-35,-42,-43,-33,-20,-5,0,0,0,-2,0,6,3,2,4,6,5,8,9,3,-4,-3,-2,1,8,8,3,0,2,0,-4,-2,7,12,10,4,-14,-38,-43,-41,-33,-24,-13,-3,-2,-2,-3,1,7,2,0,2,5,6,8,8,2,0,-1,0,6,11,9,2,1,3,1,-2,0,10,14,11,5,-13,-41,-44,-39,-33,-26,-20,-8,-6,-4,-3,4,8,4,0,3,7,6,7,7,3,1,1,0,4,10,5,-1,0,5,1,-1,2,8,10,9,6,-12,-43,-42,-38,-32,-26,-21,-16,-13,-1,0,6,8,6,0,4,9,6,7,7,5,4,4,0,3,8,1,-6,0,7,-1,-1,5,6,6,7,7,-10,-44,-41,-38,-32,-27,-23,-22,-20,-1,3,8,8,10,5,7,7,5,6,8,7,5,2,0,2,3,-6,-11,-2,0,-9,-5,4,5,5,6,6,-6,-33,-41,-37,-32,-28,-28,-29,-30,-12,0,5,4,14,12,10,6,4,5,9,9,5,1,0,2,0,-13,-16,-5,-7,-17,-9,3,4,4,4,4,-2,-23,-41,-37,-32,-31,-33,-35,-41,-23,-2,3,1,11,14,12,5,1,7,9,8,1,0,0,0,-2,-14,-15,-10,-16,-16,-4,2,2,3,4,4,0,-13,-24,-21,-22,-34,-36,-39,-39,-30,-13,-6,-8,8,15,13,5,0,8,9,6,-1,-3,-3,-2,-6,-15,-14,-14,-25,-14,1,1,0,1,3,3,1,-1,-5,-5,-12,-38,-40,-42,-37,-38,-23,-18,-20,5,12,13,7,6,10,9,4,-1,-5,-2,-1,-7,-15,-16,-22,-25,-13,-2,-2,0,1,3,2,0,-3,-5,-4,-12,-40,-41,-41,-37,-33,-22,-20,-24,1,9,12,11,12,12,10,3,0,-8,-2,0,-8,-16,-17,-28,-26,-11,-7,-7,-1,1,2,1,-1,-4,-5,-4,-11,-41,-42,-40,-38,-28,-22,-23,-27,3,9,8,8,10,10,5,1,-3,-12,-5,0,-10,-17,-19,-27,-23,-13,-11,-6,1,3,2,0,-3,-5,-4,-3,-11,-42,-41,-39,-34,-25,-22,-24,-27,7,9,4,5,7,8,0,0,-7,-15,-10,0,-11,-17,-21,-24,-21,-15,-14,-5,5,5,2,0,-4,-5,-3,-2,-11,-42,-40,-38,-29,-22,-22,-25,-26,5,10,5,5,8,8,1,0,-9,-15,-12,-4,-11,-17,-21,-23,-19,-14,-13,0,9,4,3,1,-2,-3,-2,-1,-8,-35,-39,-34,-25,-22,-22,-25,-26,3,11,8,6,9,10,2,1,-10,-14,-12,-8,-10,-16,-21,-20,-17,-13,-10,5,14,3,4,4,0,-3,0,0,-5,-27,-38,-29,-22,-22,-22,-25,-26,2,11,9,5,7,7,3,0,-10,-11,-11,-6,-4,-7,-10,-12,-10,-10,-5,13,16,2,3,6,3,0,0,0,-3,-20,-34,-25,-22,-22,-22,-25,-26,2,9,9,2,4,5,4,-3,-10,-8,-8,-3,2,2,0,0,-2,-6,1,22,20,1,2,9,7,4,0,0,-1,-13,-29,-22,-22,-22,-22,-25,-26,3,8,8,3,4,5,3,-6,-10,-6,-3,1,6,5,3,1,1,0,6,22,21,6,3,9,6,1,0,0,-1,-9,-25,-22,-22,-22,-22,-25,-26,4,7,7,5,5,6,1,-10,-11,-5,1,7,7,5,3,1,5,7,11,19,21,14,6,8,3,-2,0,0,-1,-6,-22,-22,-22,-22,-22,-24,-25,3,7,7,6,7,6,-1,-11,-9,-1,5,9,8,6,3,0,4,9,12,14,17,15,7,7,2,-2,-1,-1,-1,-4,-18,-22,-22,-22,-22,-24,-25,3,7,7,7,8,5,-6,-9,-4,0,9,10,8,6,2,0,0,6,10,8,12,15,9,5,1,-2,-3,-2,-2,-3,-13,-22,-22,-22,-22,-24,-25,3,5,6,7,9,4,-6,-6,-1,2,9,9,6,6,2,0,0,3,3,0,6,12,9,5,1,-1,-4,-3,-3,-3,-9,-19,-22,-22,-22,-24,-25,5,3,4,6,8,3,-3,-3,0,2,6,6,3,6,2,-2,-1,0,-6,-9,1,9,9,5,1,-1,-4,-4,-3,-3,-6,-15,-22,-22,-22,-24,-25,7,1,1,6,7,2,-1,-1,1,2,4,6,4,6,3,0,-1,0,-6,-10,0,8,6,3,0,-1,-4,-4,-4,-4,-4,-10,-16,-16,-16,-20,-21,8,2,0,7,7,3,0,0,1,2,3,6,7,7,6,1,-1,1,-1,-3,3,7,3,0,0,-1,-3,-5,-4,-4,-4,-4,-6,-6,-6,-13,-14,8,4,0,7,6,3,0,1,2,3,3,6,7,7,6,3,0,1,2,1,5,6,0,-1,-1,-2,-3,-4,-5,-5,-3,-1,-1,-1,-1,-7,-9],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
