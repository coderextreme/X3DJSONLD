###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_86',geoSystem=['GDC'],position=(1.3607023736258976,103.77655544367725,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.3607023736258976,103.77655544367725,0.0),range=4101.627,child1Url=['../../tiles/5/singapore16-12.x3d'],child2Url=['../../tiles/5/singapore16-13.x3d'],child3Url=['../../tiles/5/singapore17-12.x3d'],child4Url=['../../tiles/5/singapore17-13.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore8-6.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.3519706612479037,103.76219240954823,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[44,53,62,78,96,98,87,73,58,48,49,59,79,104,128,117,103,121,157,162,144,107,86,74,62,52,51,54,60,64,66,68,64,57,54,51,50,38,45,54,69,87,94,87,71,56,49,50,60,79,106,137,130,115,128,155,159,145,116,98,80,65,55,51,55,61,65,68,65,60,58,59,57,56,34,39,47,63,79,90,87,69,53,48,51,61,79,108,145,143,129,137,157,156,141,120,106,84,68,58,54,56,61,66,67,62,56,59,65,65,63,32,38,46,63,78,90,86,66,50,47,50,63,79,107,149,156,143,150,165,156,133,113,105,84,70,62,56,59,61,63,61,57,54,59,69,71,69,32,39,49,64,79,89,82,62,47,46,51,65,80,110,152,165,156,161,173,155,125,104,98,83,70,64,58,61,62,60,55,52,52,59,72,75,73,31,42,54,68,80,85,75,58,46,46,54,67,81,118,156,172,165,170,174,151,119,97,87,78,70,64,60,63,61,58,53,49,50,57,72,77,75,31,45,60,72,79,80,68,55,45,46,56,68,83,125,159,175,168,172,171,145,115,92,78,73,68,65,62,63,60,57,52,47,48,56,70,75,74,31,45,62,72,77,75,63,51,44,45,56,68,85,126,158,174,165,166,162,137,112,90,75,70,65,64,63,59,57,57,51,47,49,56,68,72,71,31,44,61,70,72,69,59,48,43,45,56,67,86,122,153,169,159,157,148,127,109,89,74,68,63,62,62,56,56,56,51,48,49,56,66,68,66,31,44,59,65,65,63,54,45,41,45,56,66,81,113,143,159,152,147,131,116,102,85,75,67,61,60,60,56,56,55,52,49,49,56,64,64,62,32,43,55,57,58,56,49,42,40,45,55,64,75,103,132,150,147,137,114,104,94,81,76,68,59,57,58,58,58,55,55,51,50,55,61,60,58,34,42,48,50,52,51,44,38,38,44,52,60,69,98,126,147,145,129,102,91,85,78,77,69,56,55,58,61,61,59,60,53,49,51,56,56,55,35,40,41,43,47,47,41,35,36,42,50,57,67,98,125,147,145,123,93,79,76,75,78,70,53,53,58,63,64,64,63,56,49,48,51,52,52,36,37,35,37,42,43,38,33,35,43,51,58,70,103,126,146,143,119,86,71,70,71,77,69,51,53,59,63,65,66,64,58,53,48,48,49,49,36,34,31,32,37,39,36,32,34,46,55,62,77,110,129,145,140,115,82,67,66,67,75,65,50,54,60,62,64,67,63,59,58,51,48,47,47,37,33,29,29,33,37,35,31,34,47,58,68,84,114,133,144,136,112,82,64,62,63,73,62,49,55,59,62,65,68,63,60,60,56,52,48,46,37,33,28,27,32,35,35,31,35,49,63,75,91,117,137,143,132,108,82,62,59,61,70,60,49,55,58,61,65,69,64,60,60,61,58,51,48,37,32,28,27,32,35,34,32,38,51,68,82,95,116,138,140,128,104,79,59,57,59,66,58,49,53,56,60,66,70,67,60,59,61,59,53,51,35,30,27,27,33,36,33,32,41,54,73,87,94,111,135,134,123,100,74,55,55,57,62,56,50,49,52,59,68,71,69,60,57,57,58,55,53,32,28,25,27,35,37,33,34,44,56,73,85,87,98,122,120,113,97,71,53,53,55,59,56,53,49,51,60,68,70,68,61,56,55,55,55,55,28,26,25,28,38,39,32,35,46,56,69,76,74,79,102,101,99,95,71,52,52,54,57,58,57,52,53,61,68,67,63,62,57,53,51,54,54,26,25,25,29,39,39,31,34,44,52,62,66,66,69,85,86,87,89,71,53,51,53,56,60,60,56,54,60,67,64,60,63,59,52,50,52,54,27,28,27,30,39,39,29,32,38,44,55,57,63,68,74,75,77,81,71,54,51,52,55,60,64,62,56,57,64,60,57,64,61,53,51,51,52,30,31,30,31,37,36,29,29,34,40,49,52,63,71,72,71,72,76,71,55,50,50,54,60,67,64,57,56,62,59,56,64,62,55,53,52,51,35,34,34,32,33,33,29,28,33,38,46,53,68,79,79,75,71,71,71,58,50,48,52,62,69,63,55,55,63,60,57,63,63,57,57,54,52,38,35,36,32,31,32,29,28,31,38,45,54,68,79,80,76,70,65,67,59,50,48,51,63,67,61,53,54,64,60,57,62,63,59,58,56,53,39,34,35,32,30,32,29,27,30,39,45,53,64,70,72,75,67,58,60,58,50,50,51,62,60,56,51,52,64,59,56,60,62,60,58,57,54,40,34,35,35,31,32,29,27,30,39,45,51,59,63,65,69,64,52,54,57,49,51,52,60,56,54,50,52,63,59,54,58,61,59,57,57,56,42,33,38,41,34,31,29,28,30,39,45,47,53,57,58,60,58,48,51,55,48,49,53,58,57,56,52,54,59,60,54,55,59,57,54,55,57,45,33,39,43,36,31,29,28,29,38,45,43,47,51,52,52,52,44,46,51,46,47,54,58,59,59,55,55,55,59,54,53,56,56,52,55,58,49,35,38,40,35,30,27,26,28,38,44,41,42,45,49,48,46,41,40,44,43,43,51,61,63,63,58,54,52,55,54,53,54,53,51,55,59,52,38,37,37,33,28,25,24,27,37,42,40,40,42,48,47,43,39,37,39,42,41,49,62,67,66,60,54,52,54,54,52,51,51,51,54,57,54,41,36,32,28,25,25,25,27,35,41,40,41,43,49,50,44,39,36,38,44,44,48,61,69,66,60,57,56,57,55,50,49,50,50,50,50,55,42,34,28,24,22,24,26,28,32,38,38,40,43,51,51,44,39,36,39,47,48,48,60,71,67,61,60,61,59,57,52,49,51,50,48,47,53,38,30,25,23,20,23,26,29,29,33,35,38,43,51,50,43,40,36,42,52,52,50,59,72,70,64,64,64,62,61,58,55,54,51,49,48,51,34,26,23,21,20,22,27,30,28,29,32,36,43,51,48,41,39,36,44,56,54,52,59,71,71,67,66,66,63,63,62,60,56,52,50,50,48,30,25,22,21,20,24,28,31,30,29,31,34,44,50,46,38,36,35,44,58,53,52,60,70,69,66,65,64,62,62,64,62,57,52,50,49,47,28,25,22,22,21,26,31,33,32,29,31,34,44,49,44,35,34,35,44,57,53,52,61,68,66,64,63,63,60,61,65,64,58,53,49,48,49,29,26,23,24,24,29,34,35,34,32,32,34,43,45,41,32,33,37,43,53,52,53,61,65,63,62,62,63,59,59,65,66,59,53,49,47,50,30,26,24,25,27,31,36,37,36,34,34,34,40,41,37,31,33,38,42,50,52,54,59,61,60,60,60,63,58,57,65,68,60,53,49,47,50,30,24,22,24,29,33,38,39,37,37,36,35,36,34,33,32,34,37,43,50,51,55,56,55,56,58,59,62,57,56,65,68,61,54,49,47,48,30,22,20,24,30,35,39,39,39,39,38,36,34,30,32,34,37,38,44,52,51,55,53,50,53,56,57,61,57,55,64,66,61,55,49,47,45,28,20,20,24,30,36,39,39,39,40,40,38,35,32,33,36,41,41,46,52,52,54,51,48,53,56,56,60,58,55,61,62,58,54,50,47,41,26,19,20,25,30,35,38,39,39,41,42,41,38,36,36,39,45,44,48,51,53,53,50,47,52,55,55,58,56,54,57,58,55,53,50,47],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
