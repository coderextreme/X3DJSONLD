###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_63',geoSystem=['GDC'],position=(1.3257755241139217,103.69037723890314,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.3257755241139217,103.69037723890314,0.0),range=4101.627,child1Url=['../../tiles/5/singapore12-6.x3d'],child2Url=['../../tiles/5/singapore12-7.x3d'],child3Url=['../../tiles/5/singapore13-6.x3d'],child4Url=['../../tiles/5/singapore13-7.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore6-3.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.3170438117359278,103.67601420477412,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[13,13,12,12,9,10,9,9,11,11,10,11,12,14,14,14,12,15,17,16,16,16,17,16,13,14,14,13,11,12,11,8,7,9,8,9,12,12,13,12,14,10,10,10,11,12,12,11,11,12,14,15,14,13,15,18,17,17,17,17,15,13,13,14,13,12,11,10,10,9,11,9,9,11,12,13,12,14,10,10,10,11,12,11,11,11,11,14,16,14,14,15,18,17,17,17,16,14,13,13,15,14,12,11,10,10,10,13,10,9,10,13,13,13,13,10,10,9,9,12,9,11,10,10,13,15,16,15,16,17,17,17,17,15,13,13,13,14,15,13,12,11,11,10,13,11,9,10,14,13,13,14,10,10,9,9,11,9,11,11,11,13,15,16,16,17,17,17,17,17,15,13,13,13,14,15,13,13,12,12,11,13,11,9,10,15,13,12,15,11,10,10,10,10,10,12,11,13,13,14,16,17,18,17,18,18,17,16,13,12,12,13,14,14,15,14,13,11,13,11,9,10,14,13,12,15,10,10,11,11,10,11,12,12,13,14,14,16,17,18,17,17,18,17,15,13,12,12,13,14,15,16,15,13,11,13,11,10,11,12,12,12,13,9,9,12,12,12,12,11,11,13,14,15,15,16,17,17,17,18,16,15,14,14,13,14,15,16,16,15,13,12,11,12,12,14,12,12,13,12,8,10,12,13,12,13,11,11,13,14,15,15,15,17,16,16,17,16,14,13,14,14,14,15,16,16,14,13,12,10,13,13,14,13,12,12,12,9,11,12,12,11,12,11,11,13,14,15,15,16,16,15,15,16,16,14,12,13,15,14,15,16,15,14,13,12,9,13,11,11,15,11,12,12,11,11,12,11,10,11,11,12,14,14,15,15,15,15,14,14,15,15,14,12,13,15,15,14,16,15,14,13,13,9,14,12,12,20,12,12,13,13,12,12,11,9,10,12,13,15,14,15,15,15,14,14,14,15,14,14,12,13,15,17,13,15,15,14,13,13,11,17,14,15,22,12,13,14,15,13,15,15,13,12,13,13,15,15,16,15,15,14,14,14,14,13,13,12,13,16,17,13,15,15,13,14,14,12,19,16,16,19,12,13,13,14,14,21,24,20,16,15,14,15,15,16,15,14,14,15,15,13,12,13,13,13,15,16,13,15,14,13,14,15,14,20,16,14,17,13,14,13,14,17,29,33,27,19,16,15,15,15,16,16,14,15,16,15,13,12,13,14,14,14,14,13,15,13,13,15,16,15,20,15,13,16,13,16,14,17,24,37,42,31,19,16,15,15,14,16,16,15,16,17,15,13,12,13,13,14,13,12,13,15,14,13,16,15,16,19,14,13,15,14,17,15,18,27,42,46,34,19,16,15,15,14,15,16,16,16,16,15,13,12,13,13,13,13,12,14,15,14,14,16,15,17,17,14,13,15,14,16,16,18,25,41,47,34,19,16,14,14,14,16,15,16,16,15,15,13,12,12,12,13,13,13,15,16,15,15,16,15,15,14,13,13,15,15,15,16,16,21,36,43,31,19,16,14,14,15,15,15,16,15,14,15,13,12,12,12,12,14,14,15,16,15,15,16,15,14,11,13,13,15,15,15,15,14,18,27,32,24,17,16,13,13,13,14,14,15,14,13,14,12,11,11,11,11,13,14,14,15,15,15,14,14,12,11,13,12,15,15,16,15,13,16,20,23,18,16,15,13,13,13,13,13,13,12,12,13,12,10,11,11,11,12,13,13,14,15,15,12,13,11,12,12,12,15,16,16,15,13,14,17,18,15,14,13,12,13,13,13,12,12,11,12,12,11,10,11,11,11,12,14,13,14,14,14,11,12,11,12,11,10,14,15,15,15,13,14,15,16,13,12,12,12,13,14,13,11,11,11,12,12,11,10,10,11,11,12,14,14,13,13,13,11,12,10,11,10,9,13,14,14,14,12,13,13,13,12,11,13,12,13,14,13,11,11,12,12,12,12,11,9,10,11,11,13,12,12,12,12,11,10,9,11,9,8,13,13,13,12,11,13,11,11,12,11,13,13,14,14,14,12,12,13,13,12,12,12,9,10,11,11,13,11,10,11,11,10,10,9,11,8,7,13,13,13,13,12,14,11,12,11,12,14,14,14,13,13,12,12,13,12,11,12,11,9,10,12,12,12,9,8,9,9,10,10,9,11,9,8,14,13,13,15,15,15,12,13,11,13,15,15,14,13,13,12,12,13,11,10,10,11,9,10,13,12,11,8,8,8,7,10,12,10,11,9,9,14,15,13,14,15,16,13,14,12,13,14,14,14,13,12,11,12,12,11,9,10,10,9,10,13,12,10,8,9,7,6,9,12,10,11,10,10,14,17,15,13,14,16,13,15,13,12,12,14,14,13,12,11,11,12,10,9,9,10,9,11,13,13,9,8,10,6,5,9,11,9,12,11,11,14,18,16,14,15,15,14,16,13,13,13,15,15,14,13,11,11,12,10,9,9,10,9,11,13,13,9,8,10,7,6,9,10,9,10,9,10,15,18,18,15,16,16,16,17,14,14,15,16,16,15,14,13,12,11,11,11,10,10,10,12,14,14,10,8,10,8,6,9,9,10,9,8,8,17,18,17,16,18,20,22,19,14,15,17,17,17,15,15,14,13,12,11,11,11,11,11,12,13,13,11,8,9,9,7,8,8,9,9,8,8,20,18,17,16,21,27,29,23,16,17,19,19,18,15,15,15,14,12,12,12,12,12,11,12,11,12,11,8,8,9,8,8,7,8,9,8,8,22,18,17,17,24,31,32,24,20,23,22,21,21,17,16,17,16,13,12,12,12,12,11,12,12,12,10,7,8,8,8,8,8,8,9,8,8,22,17,16,18,28,32,32,24,26,31,27,23,24,20,18,18,17,14,13,12,12,13,12,13,13,12,10,7,7,6,7,9,9,7,8,8,8,21,16,17,19,27,31,32,25,30,33,28,25,25,21,19,19,18,15,13,13,13,12,12,13,13,13,10,6,6,5,6,8,9,7,7,9,8,19,16,18,19,24,29,31,27,33,32,27,25,25,21,20,20,20,16,13,13,12,11,11,13,14,14,10,4,5,5,4,6,8,9,8,10,10,19,18,19,21,24,29,35,30,32,30,25,25,25,22,20,20,19,16,13,13,12,11,11,13,13,13,10,5,5,6,5,6,9,10,8,11,11,20,20,21,24,27,33,41,34,30,26,25,25,26,22,20,18,17,15,13,12,12,11,12,14,11,12,11,8,8,8,7,8,11,11,8,11,12,21,22,24,28,31,36,43,37,30,25,25,24,24,21,19,18,16,15,14,12,12,12,13,12,9,10,11,10,9,9,7,8,12,11,8,10,11,21,24,28,33,36,39,42,38,32,27,25,21,20,18,18,18,16,16,15,13,12,13,12,9,8,9,10,11,9,7,6,7,12,10,7,9,9,22,26,32,38,40,40,42,40,35,27,23,18,18,17,17,17,16,15,15,13,12,12,11,8,9,9,11,14,13,8,7,7,12,9,8,10,10,22,28,37,43,43,41,43,44,37,28,20,16,16,17,16,15,14,15,15,13,12,11,10,9,10,11,15,19,20,11,10,8,11,8,12,13,12,23,28,39,45,44,41,42,43,36,27,18,16,16,17,16,14,14,15,15,14,12,11,10,11,13,13,20,25,27,16,14,12,12,10,13,15,15],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
