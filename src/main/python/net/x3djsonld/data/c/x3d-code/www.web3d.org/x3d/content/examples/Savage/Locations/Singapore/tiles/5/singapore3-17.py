###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    Shape(
      appearance=Appearance(
        material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
        texture=ImageTexture(url=['../../images/5/singapore3-17.jpg'],repeatS=False,repeatT=False)),
      geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.238458400333982,103.83400758019333,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=3.9897318E-4,zDimension=23,zSpacing=3.96896E-4,height=[8,9,7,5,2,0,-3,-6,-10,-13,-11,-6,-2,1,5,7,6,3,2,1,0,-3,-2,0,3,6,9,12,18,28,26,13,2,0,0,1,3,8,9,8,6,2,-1,-3,-4,-6,-7,-5,-3,0,1,4,7,7,5,3,0,0,0,0,0,2,7,12,16,23,33,32,14,2,0,0,0,1,8,9,9,7,4,0,0,-3,-4,-4,-3,-1,0,1,4,6,7,6,6,6,5,4,5,8,12,17,19,20,21,22,18,6,-1,-5,-5,-3,0,8,9,9,8,6,3,0,-1,-1,-1,0,0,0,1,3,5,6,8,9,11,11,9,11,16,21,26,27,24,19,12,5,0,-3,-8,-10,-8,-4,8,9,9,9,8,6,3,1,0,0,1,2,3,3,5,7,8,9,10,11,11,12,17,24,29,31,31,31,27,17,8,2,-1,-6,-9,-9,-7,9,10,10,10,10,8,6,4,3,2,4,5,5,5,7,9,10,11,11,10,12,15,23,33,36,36,36,38,33,21,11,4,0,-4,-8,-11,-11,8,9,10,11,11,11,9,7,6,6,7,8,7,5,6,8,9,10,9,8,9,12,18,28,33,35,35,33,28,22,15,9,4,0,-4,-8,-10,7,9,11,12,13,13,12,11,10,10,10,10,8,4,5,7,8,9,8,6,6,8,14,22,30,35,34,29,24,22,20,15,9,3,-1,-6,-10,7,8,10,12,13,14,14,13,12,11,11,11,8,4,5,7,8,9,7,4,4,5,12,21,28,35,34,29,25,24,21,18,13,8,2,-1,-6,7,8,9,11,13,15,15,14,13,12,11,10,7,3,5,8,9,9,7,2,1,3,10,20,28,34,35,31,27,24,21,19,16,13,8,2,-2,8,9,10,11,12,13,14,14,13,11,11,10,7,4,5,6,7,8,6,3,2,4,10,16,22,26,28,25,23,21,21,20,18,15,12,7,1,10,11,11,11,11,11,12,12,12,11,10,10,7,5,5,5,5,6,6,4,4,6,9,12,15,18,19,18,18,18,19,21,21,18,14,12,7,10,12,12,11,10,10,10,11,12,12,12,12,10,8,7,6,7,9,8,5,5,6,7,8,9,9,10,11,12,13,14,15,13,6,-1,-12,-21,10,12,12,12,9,8,9,11,13,15,15,15,14,12,9,7,9,12,10,7,6,6,6,6,4,1,1,4,7,8,9,9,4,-6,-23,-46,-60,11,13,12,11,10,10,10,12,15,17,19,20,18,15,12,9,9,12,11,8,7,6,6,6,4,2,2,4,5,6,4,-1,-11,-28,-46,-62,-69,13,14,12,10,11,13,13,13,16,19,22,25,22,18,14,10,9,11,11,9,8,7,6,6,6,6,6,6,5,6,0,-13,-31,-53,-68,-73,-69,14,15,13,11,13,15,15,16,19,23,27,29,25,19,14,10,9,9,9,7,7,7,7,7,7,7,7,6,3,0,-11,-31,-50,-64,-71,-68,-58,15,17,14,13,14,16,18,21,24,29,32,33,27,18,13,9,7,7,6,4,4,6,7,6,6,7,7,6,1,-10,-28,-52,-67,-70,-65,-55,-41,17,18,17,16,17,19,21,24,28,32,33,32,24,15,10,7,6,5,4,3,3,5,6,6,6,6,6,5,-5,-26,-45,-60,-66,-62,-52,-38,-23,19,20,20,19,20,22,24,27,31,35,32,28,21,13,8,6,5,4,3,3,3,4,4,5,6,5,3,1,-14,-44,-62,-61,-54,-46,-34,-18,-5,23,26,26,25,25,24,24,26,30,34,30,24,17,11,7,5,3,2,2,2,3,3,4,5,6,5,4,2,-12,-39,-52,-48,-39,-29,-18,-5,2,31,34,35,34,29,24,24,24,27,30,26,21,16,11,7,4,2,0,0,2,3,3,3,5,6,6,5,5,-1,-15,-24,-25,-20,-11,-2,1,3,39,43,43,40,33,25,24,26,29,31,27,21,16,11,8,5,2,0,1,3,3,3,4,5,6,8,8,8,4,-1,-6,-9,-7,-1,3,4,3],
        geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])))])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
