###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_102',geoSystem=['GDC'],position=(1.3956292231378735,103.6616511706451,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.3956292231378735,103.6616511706451,0.0),range=4101.627,child1Url=['../../tiles/5/singapore20-4.x3d'],child2Url=['../../tiles/5/singapore20-5.x3d'],child3Url=['../../tiles/5/singapore21-4.x3d'],child4Url=['../../tiles/5/singapore21-5.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore10-2.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.3868975107598795,103.64728813651608,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=45,zSpacing=3.96896E-4,height=[10,12,11,10,9,9,8,6,5,5,6,7,8,9,10,11,12,15,17,29,30,16,9,19,35,35,20,22,30,26,25,19,23,32,32,29,26,12,12,11,10,9,9,8,6,5,5,6,7,9,9,10,11,11,14,16,25,25,13,10,19,34,37,23,25,35,33,32,23,23,34,36,32,28,14,12,11,9,9,8,7,6,5,6,7,8,9,10,10,11,12,13,16,21,20,11,11,20,30,35,26,26,39,41,40,28,23,34,38,32,27,14,12,10,8,8,8,7,6,5,6,7,9,9,10,10,11,11,12,15,17,15,9,13,22,30,36,29,26,41,48,47,34,25,33,38,31,26,14,11,9,8,8,8,7,6,6,7,8,9,10,10,11,11,10,10,14,14,11,10,15,26,33,37,31,26,42,54,54,41,29,33,35,28,24,13,10,8,8,7,7,7,6,6,7,9,9,10,10,11,11,10,10,13,11,9,10,17,28,36,41,35,27,41,54,58,48,34,32,32,27,24,11,9,7,7,7,7,7,7,7,8,9,10,10,11,11,10,9,10,12,10,9,11,19,30,38,45,40,29,37,50,57,55,41,31,30,28,26,9,7,7,7,7,7,7,7,7,9,9,10,10,11,11,9,8,10,11,10,8,13,22,31,39,48,44,32,37,44,52,56,45,32,28,28,28,8,6,7,7,7,7,7,7,8,9,10,10,11,11,10,9,7,7,8,9,8,15,25,31,36,47,44,36,38,38,42,51,45,32,26,27,29,8,7,7,7,7,7,7,7,9,9,10,10,11,11,9,7,6,5,6,9,9,17,28,32,33,44,42,37,38,34,35,46,43,32,26,27,29,10,9,8,8,8,8,8,8,9,10,10,11,11,10,8,5,4,4,5,9,9,19,29,34,30,36,37,35,36,32,33,41,39,31,28,28,27,11,10,8,8,8,8,8,9,9,10,10,11,11,9,7,4,2,2,3,7,9,19,27,33,26,30,31,32,33,31,31,35,35,32,31,29,27,10,8,9,9,9,9,9,9,9,10,11,11,10,8,5,3,2,2,2,5,7,14,21,28,23,24,23,26,30,31,30,31,31,32,34,31,29,9,8,10,10,9,9,9,9,9,10,11,11,9,7,3,2,2,2,1,3,6,10,16,23,20,19,18,22,28,32,29,28,28,32,36,32,29,11,11,11,10,9,9,9,9,9,10,11,10,9,6,3,2,2,2,1,1,6,9,10,16,18,17,16,20,29,33,30,29,28,31,33,30,28,13,13,12,11,9,9,9,9,9,10,11,10,9,6,2,2,2,2,1,0,6,8,7,12,18,18,17,20,29,35,33,30,28,29,31,28,27,14,15,13,10,9,9,9,9,10,11,10,10,10,9,5,3,2,2,2,2,8,9,8,14,25,27,23,24,29,37,35,31,29,28,27,26,27,15,17,13,10,9,9,9,9,10,11,9,10,11,10,7,5,3,2,3,4,9,11,8,16,30,33,28,26,28,39,36,31,29,27,25,25,26,13,16,12,9,9,9,9,10,12,10,8,10,11,11,9,8,8,6,5,6,12,15,12,17,27,33,30,28,28,38,36,31,29,27,25,25,26,11,14,11,9,9,9,9,11,11,9,7,10,10,11,11,10,13,9,6,8,15,19,15,19,26,33,32,30,29,37,35,30,29,27,25,26,27,11,13,10,10,10,10,10,11,10,8,7,10,10,11,11,11,13,11,8,9,16,23,20,25,27,31,32,33,32,35,33,29,28,28,26,26,27,12,12,10,11,11,11,11,11,9,7,7,10,10,10,11,11,12,13,10,10,17,27,26,30,29,29,32,36,36,35,33,29,28,29,27,27,27,12,14,12,12,12,11,11,10,8,7,7,10,10,10,11,11,12,13,11,9,16,29,31,34,32,32,34,39,40,40,40,33,30,30,28,27,27,13,15,15,13,12,12,11,9,7,7,7,10,10,10,10,11,11,12,13,9,15,31,34,37,35,35,36,41,43,43,45,37,32,31,29,27,27,13,15,15,14,13,11,10,8,7,7,7,10,10,10,10,11,11,12,12,8,14,26,32,36,35,38,40,41,41,41,45,40,34,33,30,27,26,14,15,15,14,12,11,9,7,7,7,7,10,10,10,10,10,11,11,12,8,13,22,29,34,35,40,43,41,39,38,43,41,35,34,30,26,26,14,14,14,13,12,10,8,7,7,7,7,10,10,10,10,10,10,10,11,10,13,16,23,29,32,40,43,37,34,33,38,38,35,34,30,26,25,16,14,12,13,11,9,7,7,7,7,7,10,10,10,10,10,10,9,10,11,13,12,18,25,30,38,41,33,29,29,34,35,35,34,30,27,25,17,14,12,12,10,8,7,7,7,7,8,10,10,10,10,10,9,7,9,12,14,12,19,23,28,36,36,30,31,29,31,33,34,33,30,27,26,20,15,12,12,9,7,7,7,7,7,9,10,10,10,10,9,8,5,6,11,13,13,21,20,26,32,31,29,33,31,28,31,33,33,30,29,28,21,16,13,11,8,7,7,7,7,8,11,10,10,10,10,9,5,1,0,9,13,12,18,16,24,27,27,29,35,34,31,31,33,33,30,29,29,22,16,14,11,7,7,7,7,7,10,12,11,10,10,9,8,2,-1,-3,5,13,11,13,12,21,21,23,32,36,36,33,32,32,32,30,29,30,21,16,14,11,8,7,7,7,8,11,12,11,10,10,9,4,-1,-4,-3,2,13,11,11,9,17,17,24,35,38,37,35,32,32,32,30,30,30,19,14,14,11,9,8,8,8,10,13,12,11,10,9,7,0,-4,-5,-2,0,13,11,9,7,12,15,27,39,38,37,36,34,33,32,32,30,30,18,14,14,11,9,9,9,9,11,13,12,11,10,9,4,-2,-5,-4,-1,0,13,11,8,6,9,13,29,40,37,36,37,35,33,32,32,32,32,17,15,14,12,10,10,10,11,13,13,12,10,9,7,0,-4,-6,-2,0,1,11,12,7,6,7,13,29,39,35,33,36,36,34,33,33,34,35,19,17,15,12,10,10,11,12,13,13,12,10,9,4,-2,-6,-4,0,0,2,11,13,7,6,6,14,27,34,32,31,34,36,35,33,33,34,34,22,20,17,12,10,11,12,13,13,12,11,9,7,0,-5,-6,-1,1,1,3,11,14,8,6,8,16,23,28,27,28,30,35,35,33,33,33,32,25,23,18,13,11,12,13,13,13,12,10,8,6,-2,-6,-3,0,2,3,4,12,14,8,6,8,16,22,25,25,25,28,32,34,32,32,32,30,27,25,19,14,13,13,13,13,12,11,8,6,3,-4,-5,0,2,3,3,4,13,15,9,6,7,16,21,23,24,24,25,29,32,32,32,30,29,28,26,20,15,14,13,13,12,12,9,7,6,3,-3,-3,1,3,4,4,5,14,15,9,6,7,15,20,22,23,24,25,27,30,31,31,29,28,27,26,20,15,14,13,12,11,10,8,6,6,4,0,0,2,4,5,5,8,13,14,11,7,8,12,18,22,23,24,25,27,29,31,31,28,27,25,23,19,15,13,12,11,11,9,7,6,6,5,3,2,4,5,5,6,8,14,16,13,10,10,13,19,24,25,26,27,27,28,29,29,28,28,21,19,17,14,13,11,10,10,8,6,6,6,6,5,4,5,5,6,6,7,16,20,17,14,13,15,23,27,28,29,29,28,29,28,28,30,32,20,18,16,14,12,10,10,8,7,6,6,6,7,7,6,5,5,6,6,7,16,19,19,17,16,17,24,30,30,31,30,29,29,27,27,30,33],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
