###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_134',geoSystem=['GDC'],position=(1.4480194974058374,103.71910330716118,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.4480194974058374,103.71910330716118,0.0),range=4101.627,child1Url=['../../tiles/5/singapore26-8.x3d'],child2Url=['../../tiles/5/singapore26-9.x3d'],child3Url=['../../tiles/5/singapore27-8.x3d'],child4Url=['../../tiles/5/singapore27-9.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore13-4.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.4392877850278434,103.70474027303216,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[22,28,27,25,23,19,19,18,15,12,10,10,12,15,17,17,16,12,10,8,7,9,9,9,10,10,10,10,11,12,13,13,12,11,10,9,9,21,27,27,26,23,18,18,18,16,12,10,9,11,15,17,17,16,12,10,9,8,8,9,10,10,10,9,10,11,10,12,13,12,10,9,8,8,19,26,27,26,22,17,18,19,16,12,10,9,10,14,16,17,15,12,10,10,9,8,9,11,10,10,9,10,10,10,11,13,11,10,8,8,8,18,24,25,24,19,16,17,18,17,12,11,10,10,12,15,15,15,12,11,10,9,8,10,11,9,9,8,9,10,9,11,11,12,10,8,7,7,16,23,24,21,16,14,16,18,17,13,11,10,9,11,13,14,14,12,11,11,10,9,10,12,9,9,8,9,10,9,11,11,12,11,8,7,7,13,17,21,19,14,13,15,16,15,13,11,9,9,10,11,12,12,13,12,12,10,10,10,11,8,8,9,9,10,10,10,11,12,11,8,7,7,9,12,17,18,13,11,14,14,13,13,11,9,8,10,10,10,11,14,14,13,10,10,9,10,8,8,9,9,11,10,10,10,12,11,9,7,7,8,11,14,15,11,9,11,11,11,12,11,9,9,10,9,8,9,13,14,12,10,10,9,9,7,8,9,9,11,10,9,10,11,11,8,8,8,7,10,12,12,10,8,8,8,9,11,11,10,9,9,8,6,7,12,14,12,9,10,9,8,7,8,9,10,10,10,9,10,11,10,8,8,10,5,8,12,13,12,10,8,7,9,11,12,11,10,9,7,7,8,12,12,10,9,9,8,8,8,9,9,10,9,9,9,10,11,9,8,9,11,2,7,12,14,14,12,8,6,8,10,13,12,10,8,7,8,10,12,11,8,9,9,8,8,10,10,8,10,8,9,10,10,10,8,8,10,13,2,5,9,13,14,12,9,6,9,10,12,13,11,9,6,8,11,12,9,8,9,9,9,8,9,9,8,9,8,9,10,11,10,8,8,10,11,2,3,7,11,12,12,10,7,9,10,12,13,12,11,6,8,11,11,8,8,10,10,9,8,9,8,7,7,7,9,10,11,9,8,8,9,9,2,3,5,8,11,13,12,9,9,10,12,13,13,12,8,8,11,11,7,8,9,9,10,9,10,8,7,6,6,9,10,11,10,9,9,9,8,1,3,4,6,9,13,15,12,9,9,12,13,14,13,10,9,10,10,7,8,8,9,9,10,11,8,6,5,6,8,10,12,10,10,10,9,8,0,2,3,4,7,11,13,12,10,9,12,12,13,13,11,10,10,10,7,7,7,8,9,11,11,8,6,5,6,8,10,12,11,10,10,8,7,0,1,2,2,5,7,11,11,10,9,11,11,12,13,13,11,10,10,8,6,6,7,9,11,11,9,6,5,6,8,9,11,12,11,9,8,8,0,1,1,2,3,4,6,10,9,9,10,10,10,12,13,11,10,10,8,5,6,7,9,10,9,8,6,5,6,8,8,11,11,9,7,7,8,0,0,1,2,2,0,0,7,9,8,10,9,9,11,13,11,9,9,8,5,6,7,7,8,7,7,6,5,6,8,9,11,9,7,6,7,7,0,1,1,1,0,-5,-3,5,8,8,9,9,8,10,11,11,10,9,8,6,7,7,8,9,7,7,7,5,7,8,9,10,9,6,6,6,7,0,1,1,0,-4,-10,-8,2,8,7,8,8,7,9,9,10,11,10,9,7,8,9,8,9,8,7,7,8,8,7,8,10,8,5,5,6,6,0,1,0,-2,-8,-12,-8,1,7,7,8,8,8,9,8,10,11,11,10,9,10,10,9,10,9,8,8,9,8,6,7,9,7,5,5,5,6,1,1,0,-6,-11,-12,-7,0,5,6,8,9,9,9,8,9,12,11,11,10,11,11,9,10,10,10,9,9,7,5,5,6,8,6,5,5,5,1,0,-3,-10,-13,-11,-5,0,4,5,7,8,10,8,8,9,12,12,12,11,11,11,8,9,11,11,10,10,8,5,3,5,7,6,5,5,5,1,-1,-7,-12,-13,-11,-5,1,4,5,5,4,9,8,7,10,11,12,12,12,12,11,8,7,10,12,11,11,9,6,4,4,6,7,6,5,5,0,-3,-11,-13,-13,-9,-3,2,5,4,3,2,7,7,6,10,11,12,12,13,12,10,7,5,7,11,12,12,9,6,6,5,6,7,6,5,5,-1,-7,-13,-14,-12,-8,0,3,4,3,1,2,6,6,5,8,10,10,10,10,10,9,6,0,5,10,12,11,8,7,11,9,6,6,6,6,5,-3,-11,-14,-13,-11,-6,1,4,3,1,0,3,5,5,4,7,9,8,10,9,9,8,5,0,4,10,11,10,8,8,13,12,7,6,6,6,5,-5,-12,-14,-13,-10,-2,3,4,2,1,1,2,4,5,5,7,8,8,9,9,9,7,4,0,4,10,10,9,8,9,12,13,10,6,6,6,6,-5,-12,-13,-12,-8,0,4,3,1,0,1,2,4,4,5,7,8,9,9,9,8,6,3,2,4,10,10,9,8,9,12,15,13,8,6,6,6,-1,-6,-9,-9,-3,2,4,2,0,0,1,2,4,4,5,6,8,8,9,9,8,6,3,4,6,9,10,9,8,9,12,14,14,11,7,6,6,1,-1,-5,-5,0,4,3,1,0,0,1,2,4,4,5,6,8,8,9,9,7,5,4,4,6,8,10,10,9,9,12,14,16,13,8,6,6,1,0,0,0,2,4,2,0,0,0,1,3,4,4,5,6,7,8,8,8,7,5,4,5,6,8,9,10,9,10,11,14,16,14,11,7,6,2,2,2,2,3,3,1,0,0,0,2,3,4,4,5,6,7,8,8,8,6,5,5,5,6,8,9,10,10,10,11,13,15,16,13,8,6,3,3,2,2,3,2,1,0,0,0,2,4,4,4,5,6,7,7,8,7,6,5,5,5,6,7,9,9,10,10,11,13,15,16,14,11,8,3,2,2,2,2,1,0,0,0,0,3,4,4,4,5,6,7,7,8,7,6,5,5,5,6,7,9,9,10,10,10,12,15,16,16,13,10,3,2,2,2,2,1,0,0,0,0,2,2,2,3,5,6,6,7,7,6,5,5,5,5,6,7,8,9,9,10,10,12,14,15,15,13,11,2,2,2,3,2,1,1,0,0,0,0,0,0,2,5,6,6,7,7,6,5,5,5,5,6,7,8,9,9,10,10,11,13,15,14,12,11,2,2,3,3,2,1,1,0,0,0,0,0,0,1,3,5,6,6,6,5,5,5,5,5,6,7,8,8,9,9,10,10,13,13,13,12,11,2,3,4,3,2,2,1,0,0,0,0,0,0,0,2,4,6,6,6,5,5,5,5,5,6,7,8,8,9,9,10,10,12,12,12,11,11,3,6,5,3,2,2,1,0,0,0,0,0,0,0,0,0,3,5,5,5,5,5,5,5,6,7,7,8,9,9,10,10,12,12,12,11,11,6,8,6,3,3,2,1,0,0,0,0,0,0,0,0,-2,0,4,5,5,5,5,5,5,6,7,7,8,9,9,10,11,11,13,12,12,11,11,10,5,3,3,2,1,0,0,0,0,0,0,0,-1,-1,0,4,5,5,5,5,5,5,6,7,7,10,10,9,10,11,11,12,12,12,12,17,12,4,3,3,3,2,1,0,0,0,0,0,0,-3,0,0,4,5,5,5,5,5,5,6,7,8,12,12,10,10,11,11,11,13,12,12],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
