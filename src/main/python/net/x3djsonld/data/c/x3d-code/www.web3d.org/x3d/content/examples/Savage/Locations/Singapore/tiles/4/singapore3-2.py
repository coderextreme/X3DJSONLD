###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_32',geoSystem=['GDC'],position=(1.273385249845958,103.6616511706451,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.273385249845958,103.6616511706451,0.0),range=4101.627,child1Url=['../../tiles/5/singapore6-4.x3d'],child2Url=['../../tiles/5/singapore6-5.x3d'],child3Url=['../../tiles/5/singapore7-4.x3d'],child4Url=['../../tiles/5/singapore7-5.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore3-2.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.264653537467964,103.64728813651608,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[0,0,0,0,1,4,2,0,0,0,-1,0,3,5,6,5,0,3,5,9,8,2,2,4,7,2,-6,-8,-4,0,3,6,6,7,8,7,7,0,0,0,0,0,3,3,2,1,0,-1,0,2,5,5,3,1,3,4,6,4,3,3,2,4,1,-8,-12,-7,0,5,6,7,8,9,7,6,0,0,0,0,1,3,4,4,2,0,-1,0,1,4,5,2,1,2,3,4,2,4,3,1,2,0,-10,-16,-9,0,5,6,7,9,10,7,5,0,0,0,1,5,7,8,4,2,1,0,0,0,3,6,3,0,0,1,3,1,3,4,1,0,0,-11,-18,-10,-1,2,4,9,10,9,7,5,0,0,0,3,6,10,11,4,2,2,0,0,0,2,6,4,-1,0,1,3,0,2,3,2,-1,-1,-14,-21,-9,-1,0,4,10,11,7,6,5,0,0,1,1,4,8,10,4,3,3,1,0,0,0,3,2,0,2,3,4,0,1,2,2,-1,-7,-21,-27,-7,1,2,5,11,11,7,6,7,0,1,1,0,2,5,6,1,2,4,3,1,0,0,0,0,3,5,6,4,1,1,2,2,0,-10,-26,-28,-4,4,4,6,13,12,7,7,8,0,2,1,1,2,3,2,-4,-3,1,3,2,0,0,1,0,2,4,5,5,3,3,1,1,2,-6,-17,-15,-1,4,3,5,11,12,7,6,7,2,4,2,3,2,0,-1,-10,-9,0,4,3,0,0,1,0,1,4,5,6,5,4,0,1,5,-2,-8,-3,1,3,3,4,10,12,7,6,6,2,4,5,6,3,0,-2,-8,-7,0,1,2,0,0,0,0,0,5,6,7,5,3,1,1,3,0,-1,0,2,3,5,7,10,9,6,5,5,2,3,8,9,3,0,-2,-5,-4,-1,0,0,0,-1,-2,0,0,6,8,6,5,2,2,2,1,0,2,3,1,2,8,10,10,5,4,4,4,2,2,4,4,1,1,0,0,-1,-1,-1,0,1,-4,-9,-1,0,5,8,7,6,4,4,4,3,2,3,4,2,3,8,11,11,7,4,4,4,1,1,0,0,1,2,2,2,1,0,-2,0,2,-6,-16,-3,0,4,7,7,8,6,5,6,5,3,4,5,3,5,8,11,12,8,5,4,4,2,0,0,2,3,2,1,4,4,0,0,2,5,-5,-13,-1,1,6,7,7,7,6,6,7,4,2,3,4,5,8,7,11,13,11,8,5,4,3,0,0,5,7,2,0,5,7,1,5,5,8,-3,-9,0,4,7,6,7,5,6,7,7,4,1,2,3,7,10,7,10,13,14,11,6,4,3,0,1,5,7,3,-3,0,5,3,7,6,6,-1,-6,0,3,8,7,7,5,6,7,8,4,2,3,3,8,8,7,10,14,15,13,8,6,3,1,1,4,7,3,-6,-6,2,6,9,8,5,0,-3,0,2,8,8,7,5,6,7,7,5,4,4,4,9,6,6,10,15,17,15,11,9,3,2,2,3,4,0,-8,-7,1,6,6,6,5,1,-1,0,2,7,7,7,6,6,7,6,6,6,6,5,9,6,6,10,14,16,16,14,12,4,3,2,2,0,-3,-10,-6,0,6,2,4,5,3,0,2,4,6,6,7,6,7,7,5,7,9,8,7,10,7,6,10,12,16,17,16,15,4,2,0,0,0,-3,-8,-6,-1,3,2,3,5,3,1,4,6,6,6,7,7,7,7,6,7,8,6,5,9,6,6,8,9,13,16,17,16,5,0,-3,-1,0,-2,-6,-6,-3,1,2,2,4,3,3,5,8,7,6,8,8,8,8,8,7,6,2,3,7,6,6,5,6,9,15,18,17,5,0,-2,-1,0,0,-3,-5,-2,0,2,2,4,6,6,6,7,7,7,7,8,9,8,9,9,6,3,3,7,7,6,5,5,6,12,15,14,4,0,0,0,1,2,-2,-4,-1,0,1,2,4,10,9,5,4,5,6,7,9,9,7,9,10,7,5,5,8,9,8,5,4,5,8,10,10,4,2,1,0,3,3,0,-3,0,1,1,2,6,14,14,8,5,5,5,7,9,9,7,10,11,6,5,7,8,9,7,5,4,5,7,9,9,4,4,5,3,5,4,0,-1,0,1,1,2,9,19,19,12,7,4,4,8,9,8,7,10,12,4,4,9,7,8,5,5,5,5,6,8,8,2,5,5,4,5,5,1,0,1,1,1,2,10,20,20,16,12,5,4,7,8,6,6,9,11,4,4,9,6,7,7,7,6,6,8,8,8,0,6,4,3,4,5,3,0,1,1,1,3,11,18,19,20,17,7,6,6,7,5,5,7,10,4,3,9,4,5,12,11,7,8,10,9,8,-1,5,3,3,4,5,4,1,1,1,1,3,12,17,19,19,16,6,7,6,5,3,4,6,8,3,4,9,4,2,11,11,8,11,13,10,8,-1,3,3,3,3,4,4,2,1,1,1,3,12,17,18,16,10,1,7,7,4,1,4,6,6,2,5,9,4,-1,5,8,10,15,16,12,9,0,2,3,3,3,4,4,3,1,1,1,5,13,16,16,14,8,4,10,8,3,1,2,7,6,2,6,8,4,-2,2,5,11,18,18,12,9,0,2,3,3,3,3,4,4,2,1,2,8,15,16,15,13,11,12,14,9,3,2,0,7,7,4,8,6,5,0,0,2,11,21,19,12,9,2,3,3,3,3,3,4,4,3,2,4,11,15,15,15,14,14,16,12,7,3,3,0,6,6,4,8,5,6,1,0,1,10,19,16,10,8,2,3,3,3,3,3,3,4,5,5,7,13,15,15,15,15,18,17,5,3,3,2,1,5,4,5,6,7,6,3,3,2,7,13,10,7,7,3,4,4,4,4,3,3,5,6,7,9,14,15,15,15,16,19,15,0,0,2,2,3,5,3,6,6,8,7,6,6,4,6,10,7,5,6,3,4,4,4,4,4,4,6,7,8,11,14,15,15,15,16,16,13,-2,-2,0,2,4,5,5,10,7,9,8,10,9,7,6,12,8,5,6,4,5,4,4,4,4,5,6,8,8,11,15,15,15,15,16,14,10,-2,-4,0,3,5,5,7,12,9,9,9,14,11,8,6,11,8,3,3,5,6,4,4,4,4,6,7,8,8,11,15,14,14,15,15,13,8,0,-5,-2,3,5,6,10,12,9,9,10,17,10,7,6,8,6,0,0,6,7,5,4,4,5,6,7,8,8,11,14,14,14,15,14,12,6,0,-5,-4,3,5,8,12,11,9,9,13,18,9,5,5,6,5,0,-3,8,9,6,6,4,6,7,8,8,8,10,14,14,14,14,13,11,6,0,-4,-5,1,6,11,13,11,9,10,16,17,9,5,5,6,7,2,0,9,10,8,7,5,6,7,8,8,8,10,14,14,14,14,13,10,6,0,-3,-5,0,7,13,13,11,9,13,19,16,9,5,5,6,8,5,2,9,11,8,7,6,7,8,8,8,8,9,13,14,14,14,12,9,5,0,-2,-5,-2,9,14,13,11,11,16,19,14,7,5,8,8,7,6,5,9,10,9,8,7,7,8,8,8,8,9,13,14,14,14,12,9,5,0,-2,-4,-3,10,14,13,11,13,19,18,12,5,5,10,9,6,7,8,10,9,7,7,6,8,8,8,8,8,9,13,14,14,13,12,8,4,0,-2,-4,-1,8,13,12,13,16,20,16,9,5,7,9,8,5,7,9,10,8,6,6,5,8,8,8,8,8,9,13,14,14,13,11,8,4,0,-1,-3,0,7,13,13,15,20,19,13,6,6,8,9,8,4,7,9],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
