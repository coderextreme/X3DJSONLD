###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_124',geoSystem=['GDC'],position=(1.4305560726498494,103.71910330716118,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.4305560726498494,103.71910330716118,0.0),range=4101.627,child1Url=['../../tiles/5/singapore24-8.x3d'],child2Url=['../../tiles/5/singapore24-9.x3d'],child3Url=['../../tiles/5/singapore25-8.x3d'],child4Url=['../../tiles/5/singapore25-9.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore12-4.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.4218243602718554,103.70474027303216,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[23,23,23,22,21,21,21,21,21,20,19,17,16,14,14,14,12,9,8,7,9,10,9,8,10,8,9,10,8,6,7,8,10,12,12,10,9,25,25,24,23,22,22,21,20,21,20,20,19,18,16,14,14,12,9,9,9,9,9,9,8,9,9,9,10,8,7,6,8,10,13,13,10,10,27,27,26,24,23,22,21,20,21,20,20,20,20,18,14,14,12,10,10,10,9,9,9,8,9,9,10,10,9,7,6,8,10,13,13,11,10,28,28,27,24,23,22,21,20,20,21,20,20,20,18,15,14,12,11,12,11,9,7,9,9,10,11,12,12,10,9,7,8,9,10,10,9,9,29,29,28,24,23,22,21,19,19,20,20,19,20,18,16,15,13,12,15,13,10,7,9,11,12,12,14,13,11,9,7,8,8,7,7,8,8,30,28,26,23,22,21,19,18,19,20,19,19,19,18,16,15,13,13,15,15,11,9,11,12,13,11,13,12,9,9,8,8,8,6,7,8,8,30,28,24,23,22,20,17,17,19,20,18,18,19,18,16,15,14,13,15,16,13,12,13,13,14,11,12,11,8,8,8,8,8,6,7,8,8,29,26,23,21,20,19,16,15,16,17,17,17,17,15,14,15,15,14,14,14,14,13,14,14,14,12,13,11,8,8,9,8,8,7,7,7,7,29,25,22,20,19,18,16,15,14,15,16,16,15,14,14,14,15,14,14,14,15,14,14,15,14,12,13,11,8,8,9,8,9,7,7,7,7,28,26,24,22,20,20,18,16,15,14,14,14,13,13,13,13,13,13,14,15,16,13,13,13,12,12,11,10,8,8,9,9,9,9,9,7,7,28,27,26,24,22,21,21,17,15,13,13,13,12,13,13,12,12,13,15,17,16,13,12,11,11,11,11,9,9,8,8,9,9,10,10,7,7,28,29,27,24,22,20,20,19,17,15,14,13,12,13,13,11,11,13,15,16,15,13,11,10,10,10,10,10,9,8,8,8,8,10,9,8,8,29,30,28,24,22,20,20,21,19,17,15,13,12,12,13,11,11,14,15,16,14,13,11,9,9,9,10,11,9,7,7,7,7,9,9,8,7,28,30,28,23,20,20,21,21,20,17,15,13,11,12,12,11,11,12,14,14,13,14,13,11,9,9,11,10,8,7,6,6,6,8,8,7,6,27,30,27,21,19,20,21,22,21,18,16,13,11,11,12,11,10,10,12,12,13,15,15,13,9,9,11,10,7,6,5,6,6,7,7,6,6,27,30,27,22,19,18,20,21,20,17,15,13,11,11,12,11,10,9,10,11,12,15,17,15,11,10,10,8,7,7,7,7,6,6,7,6,6,27,29,26,22,18,17,19,20,20,17,15,13,12,11,11,11,10,9,8,10,11,15,17,17,13,11,9,7,8,8,8,9,6,6,7,7,7,27,28,27,22,19,16,17,19,19,17,15,14,12,11,10,10,9,9,8,10,11,14,16,16,12,10,9,9,9,9,10,10,7,7,7,8,7,27,27,27,23,19,16,16,18,19,18,15,14,12,11,9,9,9,8,8,10,11,13,14,14,11,9,9,10,11,11,11,11,8,8,8,8,8,27,25,25,22,18,15,14,17,18,18,17,15,13,11,9,9,8,8,8,10,10,12,13,14,12,9,9,10,11,11,11,10,9,8,9,9,9,27,24,23,21,18,14,13,14,17,18,17,17,14,10,10,9,8,8,8,9,10,11,12,13,13,10,10,10,11,11,11,10,10,9,10,11,10,26,24,23,21,17,15,13,13,15,16,16,16,13,9,9,9,9,8,7,8,9,10,11,13,15,12,10,10,11,12,12,11,11,10,10,11,10,24,24,23,20,17,15,13,12,13,13,14,14,11,9,9,10,9,8,7,7,9,10,10,12,16,13,10,10,11,12,14,12,12,11,11,11,10,23,24,23,21,18,16,14,13,13,13,12,12,10,10,10,12,11,10,8,7,8,10,11,13,15,14,11,10,12,13,14,12,13,12,11,11,10,22,24,25,22,19,17,15,15,14,13,12,11,10,11,11,13,13,12,10,7,8,11,13,14,15,14,11,11,12,13,14,13,13,13,11,11,10,21,25,28,25,21,18,16,16,15,14,13,12,11,13,13,14,14,13,11,7,8,12,14,14,15,14,12,11,12,14,14,13,14,13,11,10,10,20,26,31,29,24,19,17,17,17,16,15,14,13,16,15,14,15,14,11,8,9,11,14,13,14,16,12,12,13,14,14,14,14,14,12,10,10,19,25,31,30,26,21,18,19,18,17,15,15,15,17,16,14,14,14,12,10,9,10,14,13,14,16,13,12,13,14,14,14,15,14,13,11,11,17,23,29,30,28,23,20,21,20,18,15,15,16,18,16,14,14,15,13,11,9,10,13,13,14,17,13,12,13,14,14,14,16,15,13,11,11,16,22,27,30,29,24,21,22,21,19,16,15,16,18,16,13,14,14,15,13,9,10,12,13,14,17,14,12,13,13,14,15,17,16,13,11,11,19,22,25,28,28,24,22,21,20,19,16,16,16,17,15,13,14,14,16,14,11,11,12,13,15,17,16,13,13,13,14,15,16,16,13,12,11,21,22,24,26,27,25,21,20,19,18,16,16,15,15,13,12,13,14,15,15,12,11,12,14,15,18,18,14,13,13,14,15,15,15,13,12,11,26,25,24,24,25,24,21,19,17,16,16,16,14,13,11,11,12,13,14,14,11,10,13,14,16,18,19,15,13,13,14,15,15,14,12,11,11,28,26,24,23,23,23,21,18,15,15,16,16,14,12,11,10,12,12,13,13,11,10,13,14,16,19,20,17,13,14,14,15,14,14,12,11,11,28,27,24,21,22,22,20,16,14,15,17,16,15,13,11,10,11,10,12,12,11,9,12,13,15,18,20,19,15,15,16,15,14,14,11,10,10,28,27,24,21,21,21,19,15,14,15,17,17,15,14,13,11,11,9,10,11,10,9,11,13,15,18,20,20,17,16,17,15,14,13,11,10,10,26,26,22,20,21,20,18,16,15,16,17,17,17,17,16,12,11,8,9,10,10,9,9,12,15,16,19,19,19,19,18,16,14,13,12,10,9,25,25,21,20,21,19,18,16,16,15,16,17,17,18,18,14,11,8,8,9,10,9,8,12,14,15,17,19,20,19,18,17,14,13,12,10,9,22,22,20,21,21,19,18,17,15,15,16,17,17,17,18,16,11,8,8,9,9,9,9,11,14,15,15,17,18,18,17,17,14,14,12,10,9,20,21,20,21,21,19,18,17,15,15,15,16,16,17,18,17,11,8,8,8,9,10,9,11,13,15,14,16,17,16,16,16,14,13,12,10,8,17,21,21,21,21,19,19,18,16,14,14,15,15,16,18,17,12,8,8,8,10,10,9,11,13,14,13,13,16,16,15,15,14,13,13,11,9,16,21,23,22,22,19,19,18,16,14,12,13,14,16,18,16,13,10,8,8,11,11,9,11,13,13,11,11,14,15,14,14,13,12,13,11,9,19,25,25,24,23,19,19,18,15,13,11,12,13,16,17,17,14,11,9,8,9,9,9,10,11,11,10,10,12,13,13,14,13,12,11,10,9,22,28,27,25,23,19,19,18,15,12,10,10,12,15,17,17,16,12,10,8,7,9,9,9,10,10,10,10,11,12,13,13,12,11,10,9,9],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
