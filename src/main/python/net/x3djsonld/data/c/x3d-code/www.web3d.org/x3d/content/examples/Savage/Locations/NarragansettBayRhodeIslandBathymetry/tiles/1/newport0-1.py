###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_1_01',geoSystem=['GDC'],position=(41.30704408055511,-71.26358768093407,41002.30113075668),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(41.5,-71.5,0),geoSystem=['GDC'])),
    GeoLOD(center=(41.30704408055511,-71.26358768093407,0.0),range=49202.76,child1Url=['../../tiles/2/newport0-2.x3d'],child2Url=['../../tiles/2/newport0-3.x3d'],child3Url=['../../tiles/2/newport1-2.x3d'],child4Url=['../../tiles/2/newport1-3.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0,0.05,0)),
            texture=ImageTexture(url=['../../images/1/newport0-1.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(41.1135245969,-71.43945829755604,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=52,xSpacing=0.006896887,zDimension=52,zSpacing=0.0075889993,height=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-29,-31,-30,-32,-36,-35,-34,-34,-34,-35,-36,-37,-38,-37,-37,-43,-49,-51,-50,-52,-56,-47,-41,-39,-37,-35,-34,-33,-32,-32,-31,-31,-31,-31,-31,-31,-32,-33,-34,-35,-37,-40,-43,-38,-34,-31,-33,-33,-28,0,0,0,-28,-29,-32,-31,-34,-34,-32,-32,-33,-34,-35,-37,-39,-38,-38,-41,-47,-51,-51,-53,-60,-61,-43,-40,-37,-35,-34,-33,-33,-32,-32,-31,-31,-31,-31,-31,-32,-33,-35,-37,-38,-42,-40,-37,-36,-34,-33,-32,-31,0,0,0,-27,-29,-31,-32,-43,-31,-31,-31,-31,-32,-34,-36,-38,-38,-39,-42,-45,-49,-50,-50,-56,-61,-59,-50,-41,-38,-36,-36,-36,-35,-35,-34,-32,-31,-31,-33,-34,-35,-37,-38,-42,-42,-40,-37,-35,-33,-33,-30,-26,0,0,0,-28,-28,-29,-31,-40,-33,-30,-30,-31,-32,-34,-35,-37,-38,-40,-42,-44,-47,-49,-50,-52,-58,-59,-53,-49,-45,-42,-40,-37,-37,-38,-38,-36,-35,-35,-36,-36,-36,-37,-39,-43,-42,-39,-37,-37,-36,-35,-34,-32,0,0,0,-25,-25,-27,-31,-42,-41,-34,-32,-31,-32,-33,-36,-38,-39,-40,-41,-43,-44,-46,-48,-50,-53,-54,-56,-54,-51,-47,-44,-40,-38,-37,-37,-38,-39,-39,-37,-37,-38,-38,-43,-47,-40,-36,-34,-35,-35,-34,-35,-33,0,0,0,-22,-20,-21,-33,-41,-43,-34,-33,-32,-33,-34,-35,-38,-39,-39,-40,-42,-43,-45,-46,-48,-49,-51,-52,-52,-50,-47,-44,-43,-41,-40,-37,-37,-38,-39,-39,-38,-38,-39,-44,-45,-38,-33,-32,-33,-34,-36,-36,-33,0,0,0,-18,-21,-25,-38,-40,-43,-33,-31,-32,-32,-34,-36,-38,-38,-38,-39,-40,-41,-43,-45,-46,-47,-49,-50,-49,-48,-46,-43,-41,-40,-38,-37,-36,-37,-40,-40,-38,-37,-39,-41,-42,-37,-34,-33,-33,-34,-35,-36,-34,0,0,0,-25,-30,-35,-41,-42,-41,-36,-35,-32,-34,-35,-36,-36,-37,-37,-38,-39,-40,-41,-42,-43,-44,-46,-48,-49,-48,-46,-44,-41,-39,-38,-37,-36,-37,-40,-41,-41,-40,-40,-39,-39,-38,-37,-36,-36,-36,-36,-36,-35,0,0,0,-33,-35,-37,-40,-41,-39,-39,-37,-37,-36,-36,-36,-35,-36,-37,-38,-39,-39,-39,-40,-41,-42,-43,-45,-47,-47,-48,-47,-48,-43,-40,-38,-38,-38,-39,-40,-40,-41,-40,-39,-39,-38,-37,-36,-37,-37,-36,-37,-35,0,0,0,-33,-35,-39,-41,-39,-37,-36,-35,-36,-36,-35,-35,-34,-35,-36,-36,-37,-37,-37,-37,-39,-40,-42,-43,-45,-45,-46,-47,-48,-48,-45,-43,-41,-40,-39,-39,-40,-40,-40,-39,-38,-37,-36,-36,-36,-38,-38,-39,-36,0,0,0,-33,-37,-40,-41,-39,-37,-35,-34,-33,-32,-32,-32,-33,-34,-35,-35,-36,-37,-37,-37,-38,-39,-39,-40,-41,-42,-44,-45,-46,-48,-47,-46,-44,-43,-42,-40,-38,-37,-37,-38,-37,-37,-36,-35,-35,-36,-40,-39,-36,0,0,0,-34,-35,-37,-40,-36,-35,-36,-34,-34,-33,-32,-32,-31,-32,-34,-34,-35,-36,-36,-37,-37,-38,-39,-39,-39,-40,-40,-41,-44,-45,-47,-47,-47,-45,-44,-42,-41,-40,-38,-37,-36,-35,-34,-34,-34,-35,-37,-41,-37,0,0,0,-33,-34,-36,-37,-37,-36,-35,-35,-34,-34,-34,-33,-32,-31,-32,-33,-34,-35,-36,-37,-38,-39,-38,-37,-37,-38,-38,-39,-41,-42,-44,-45,-46,-46,-46,-45,-44,-43,-43,-40,-37,-35,-34,-34,-35,-36,-38,-40,-37,0,0,0,-33,-34,-35,-37,-37,-37,-38,-37,-36,-35,-35,-34,-34,-34,-35,-34,-35,-35,-35,-36,-38,-39,-38,-38,-37,-37,-38,-38,-38,-39,-41,-43,-44,-45,-45,-44,-42,-41,-42,-43,-39,-36,-36,-35,-36,-37,-39,-41,-37,0,0,0,-36,-34,-34,-35,-36,-37,-37,-37,-38,-39,-37,-36,-36,-36,-36,-37,-38,-37,-35,-35,-36,-38,-38,-37,-36,-35,-33,-34,-35,-38,-38,-40,-41,-43,-44,-43,-41,-41,-45,-46,-45,-42,-42,-39,-38,-38,-38,-39,-38,0,0,0,-36,-34,-33,-34,-35,-36,-36,-37,-37,-38,-37,-36,-35,-34,-34,-36,-38,-39,-38,-36,-36,-36,-38,-39,-39,-39,-37,-36,-36,-37,-37,-38,-39,-41,-43,-45,-42,-40,-40,-41,-44,-45,-46,-45,-44,-41,-41,-40,-38,0,0,0,-36,-35,-36,-36,-35,-35,-35,-36,-36,-35,-35,-35,-35,-35,-35,-36,-36,-37,-36,-35,-37,-36,-36,-37,-37,-38,-37,-36,-36,-37,-38,-38,-38,-39,-41,-43,-42,-41,-40,-40,-41,-43,-44,-44,-44,-42,-42,-42,-37,0,0,0,-35,-35,-35,-35,-35,-35,-36,-36,-36,-36,-36,-36,-35,-34,-35,-36,-36,-36,-35,-34,-35,-36,-36,-36,-36,-36,-36,-36,-38,-40,-39,-38,-38,-38,-39,-39,-40,-40,-40,-40,-40,-41,-42,-43,-44,-43,-43,-42,-37,0,0,0,-35,-34,-34,-35,-36,-35,-36,-36,-36,-36,-37,-37,-38,-38,-37,-37,-38,-37,-35,-34,-34,-35,-35,-34,-33,-33,-34,-37,-39,-39,-38,-38,-37,-37,-37,-36,-37,-37,-38,-38,-38,-39,-40,-41,-42,-42,-42,-42,-38,0,0,0,-38,-37,-37,-38,-39,-37,-38,-37,-37,-37,-38,-38,-38,-38,-38,-38,-39,-37,-36,-35,-34,-33,-32,-33,-34,-37,-38,-38,-38,-38,-38,-37,-36,-34,-34,-34,-34,-36,-37,-39,-38,-38,-38,-39,-40,-41,-40,-40,-38,0,0,0,-37,-37,-38,-38,-38,-38,-38,-37,-37,-36,-36,-36,-37,-37,-38,-37,-36,-34,-35,-36,-34,-34,-35,-36,-37,-38,-38,-38,-38,-38,-38,-37,-38,-35,-33,-32,-33,-32,-33,-36,-37,-37,-37,-38,-38,-38,-39,-40,-38,0,0,0,-26,-27,-28,-30,-34,-37,-37,-37,-37,-35,-35,-35,-35,-35,-35,-35,-35,-35,-36,-37,-39,-36,-36,-36,-35,-34,-34,-35,-34,-34,-35,-36,-36,-36,-34,-31,-30,-31,-31,-32,-34,-33,-33,-35,-36,-36,-36,-37,-36,0,0,0,-24,-24,-26,-27,-31,-35,-36,-37,-36,-35,-34,-33,-33,-33,-33,-33,-34,-35,-35,-36,-37,-37,-36,-35,-34,-34,-34,-35,-34,-34,-34,-34,-35,-36,-35,-33,-30,-29,-31,-31,-31,-31,-31,-32,-33,-33,-32,-34,-35,0,0,0,-21,-22,-25,-24,-28,-34,-35,-36,-36,-35,-34,-34,-33,-32,-31,-31,-32,-32,-32,-33,-35,-36,-36,-36,-34,-33,-33,-33,-33,-33,-33,-33,-35,-35,-35,-34,-30,-27,-26,-27,-26,-28,-30,-31,-32,-32,-30,-29,-32,0,0,0,-20,-22,-24,-28,-31,-33,-35,-36,-36,-35,-34,-34,-35,-32,-30,-30,-30,-30,-31,-31,-32,-33,-35,-36,-34,-34,-34,-33,-32,-31,-31,-32,-33,-34,-34,-33,-31,-31,-28,-28,-30,-30,-29,-30,-31,-31,-31,-30,-30,0,0,0,-20,-21,-24,-29,-32,-33,-35,-35,-35,-34,-34,-34,-34,-31,-30,-29,-29,-29,-30,-30,-30,-32,-33,-34,-34,-35,-35,-33,-32,-31,-31,-31,-31,-33,-33,-33,-32,-32,-29,-28,-29,-30,-30,-31,-31,-29,-26,-24,-24,0,0,0,-21,-23,-26,-30,-32,-33,-33,-34,-34,-33,-34,-33,-30,-30,-29,-28,-29,-29,-29,-29,-30,-32,-33,-33,-34,-35,-35,-35,-33,-31,-31,-31,-30,-31,-34,-36,-36,-36,-35,-32,-29,-29,-29,-30,-29,-26,-24,-22,-23,0,0,0,-23,-25,-29,-31,-32,-33,-33,-33,-34,-34,-35,-33,-30,-29,-29,-28,-28,-28,-29,-29,-29,-30,-30,-31,-31,-32,-33,-33,-34,-35,-36,-36,-34,-31,-31,-32,-34,-34,-33,-32,-28,-28,-31,-29,-28,-28,-26,-26,-19,0,0,0,-26,-29,-30,-31,-32,-33,-34,-34,-34,-34,-35,-34,-31,-31,-31,-30,-29,-28,-28,-29,-29,-29,-29,-29,-29,-30,-30,-30,-32,-32,-34,-34,-35,-35,-34,-33,-32,-31,-30,-29,-30,-30,-30,-30,-27,-27,-28,-25,-23,0,0,0,-27,-29,-31,-31,-32,-33,-33,-34,-34,-33,-34,-33,-32,-32,-34,-34,-31,-29,-29,-29,-29,-29,-29,-29,-28,-28,-29,-29,-29,-29,-29,-30,-30,-31,-29,-31,-32,-33,-31,-29,-28,-28,-28,-28,-26,-26,-26,-27,-29,0,0,0,-26,-28,-31,-32,-32,-33,-33,-34,-34,-34,-33,-33,-33,-33,-33,-33,-33,-34,-34,-33,-31,-30,-29,-29,-28,-28,-28,-28,-28,-28,-28,-27,-28,-27,-25,-27,-28,-29,-29,-30,-29,-29,-27,-27,-26,-25,-25,-26,-27,0,0,0,-23,-24,-31,-32,-32,-33,-33,-33,-34,-34,-34,-34,-34,-34,-33,-33,-33,-33,-32,-33,-33,-32,-32,-30,-29,-29,-28,-28,-27,-27,-27,-27,-26,-27,-27,-27,-26,-26,-28,-29,-30,-30,-30,-30,-28,-26,-23,-22,-23,0,0,0,-23,-23,-31,-32,-32,-32,-32,-33,-33,-33,-33,-33,-33,-34,-34,-34,-33,-32,-33,-32,-32,-31,-31,-30,-29,-28,-28,-28,-27,-27,-26,-26,-26,-26,-26,-26,-26,-25,-25,-27,-29,-30,-18,-29,-28,-26,-24,-23,-23,0,0,0,-22,-26,-30,-32,-32,-32,-32,-33,-33,-33,-32,-32,-32,-33,-34,-34,-34,-33,-33,-32,-32,-32,-31,-30,-28,-28,-28,-28,-27,-27,-26,-26,-26,-25,-25,-25,-25,-25,-24,-24,-25,-26,-26,-26,-25,-25,-25,-23,-23,0,0,0,-26,-29,-30,-31,-32,-32,-32,-32,-32,-32,-32,-31,-31,-31,-32,-33,-33,-33,-33,-32,-32,-32,-30,-29,-28,-27,-27,-27,-27,-27,-26,-26,-26,-25,-25,-24,-24,-24,-24,-23,-23,-23,-23,-23,-23,-23,-24,-24,-25,0,0,0,-28,-29,-30,-31,-31,-31,-31,-31,-32,-32,-31,-31,-31,-31,-31,-32,-32,-32,-29,-26,-29,-30,-30,-28,-28,-27,-27,-27,-27,-27,-26,-26,-26,-25,-24,-24,-23,-22,-22,-20,-20,-22,-22,-22,-22,-22,-24,-24,-24,0,0,0,-27,-29,-30,-30,-31,-31,-31,-31,-31,-31,-31,-31,-30,-30,-31,-32,-32,-32,-31,-30,-31,-31,-29,-29,-28,-27,-27,-27,-26,-26,-25,-23,-24,-25,-24,-21,-23,-23,-23,-22,-22,-21,-21,-21,-22,-21,-23,-23,-22,0,0,0,-26,-27,-29,-30,-30,-31,-30,-31,-31,-30,-29,-30,-29,-29,-29,-31,-32,-32,-31,-30,-30,-29,-28,-27,-26,-25,-25,-25,-26,-24,-23,-22,-22,-24,-24,-24,-23,-22,-22,-22,-21,-21,-21,-21,-21,-21,-21,-22,-22,0,0,0,-23,-25,-27,-28,-29,-30,-30,-30,-30,-30,-29,-28,-27,-27,-29,-28,-31,-31,-31,-29,-28,-27,-26,-26,-25,-25,-25,-24,-24,-23,-22,-22,-22,-21,-22,-20,-22,-22,-19,-23,-22,-21,-20,-16,-20,-21,-21,-20,-20,0,0,0,-20,-23,-24,-25,-27,-28,-29,-29,-28,-28,-28,-26,-23,-20,-27,-24,-28,-29,-30,-28,-27,-26,-25,-25,-24,-24,-24,-23,-23,-22,-21,-21,-20,-21,-21,-21,-22,-22,-23,-23,-24,-23,-21,-20,-19,-19,-19,-20,-19,0,0,0,-15,-19,-21,-23,-24,-26,-27,-25,-23,-26,-26,-24,-24,-23,-24,-27,-23,-26,-27,-27,-27,-25,-24,-24,-24,-24,-23,-23,-22,-22,-21,-20,-20,-19,-20,-20,-21,-22,-22,-21,-22,-22,-22,-18,-19,-18,-19,-18,-18,0,0,0,-10,-16,-18,-20,-21,-24,-25,-24,-23,-25,-25,-14,-15,-8,-20,-22,-22,-23,-24,-19,-25,-25,-23,-23,-23,-23,-23,-22,-21,-21,-21,-20,-20,-20,-19,-13,-19,-20,-20,-20,-19,-22,-21,-21,-20,-18,-18,-18,-17,0,0,0,0,-1,-16,-18,-19,-15,-23,-25,-27,-28,-25,-13,-3,-2,-17,-18,-19,-19,-12,-18,-22,-22,-22,-22,-21,-14,-20,-21,-19,-19,-19,-18,-19,-19,-17,-8,-16,-18,-19,-19,-17,-20,-20,-21,-20,-18,-18,-17,-18,0,0,0,0,0,-10,-15,-17,-19,0,-20,-36,-32,-22,-18,0,0,-3,0,-8,-10,-7,-2,-17,-16,-21,-20,-19,-13,-17,-19,-19,-15,-18,-19,-18,-17,-5,-1,-11,-16,-17,-17,-17,-19,-19,-20,-20,-20,-19,-18,-18,0,0,0,0,0,-8,-12,-14,-17,0,0,-27,-31,-38,0,0,0,0,0,0,0,0,0,0,-9,-18,-18,-18,-17,-13,-14,-17,-19,-17,-17,-17,-15,-10,0,0,0,-3,-3,-15,-16,-16,-18,-19,-20,-20,-19,-17,0,0,0,0,0,-6,-10,-12,-16,-4,0,0,-29,-29,-44,0,0,0,0,0,0,0,0,0,-11,-13,-15,-16,-16,-14,-13,-15,-17,-17,-16,-16,-14,-10,-5,0,0,0,-5,-8,-14,-15,-16,-16,-18,-18,-19,-19,0,0,0,0,0,0,0,-13,-12,0,0,0,-1,-11,-33,-36,-46,0,-4,-3,0,0,0,0,-6,-8,-8,-11,-13,-9,-3,-1,-14,-14,-14,-14,-13,-12,-3,0,0,0,0,-1,-3,-6,-12,-15,-16,-15,-17,-16,0,0,0,0,0,0,0,-7,-16,-1,0,-4,0,0,0,-5,-47,-23,-13,0,-5,0,0,0,-3,-4,-1,0,-7,-5,0,0,-1,-12,-13,-12,-12,-8,-5,0,0,0,0,0,0,0,-3,-12,-15,-14,-14,-14,0,0,0,0,0,0,-1,-14,-21,0,0,-1,0,0,-3,-33,-38,-20,-15,0,0,0,0,0,0,0,0,0,0,0,0,-3,-6,-10,-11,-11,-8,-2,0,0,0,0,0,0,0,0,-2,-7,-11,-11,-10,-11,0,0,0,0,0,0,-9,-17,0,-10,-4,0,0,0,-10,-37,-39,0,-14,-8,0,0,0,0,0,0,0,0,0,0,0,0,-6,-8,-9,-9,-4,0,0,0,0,0,0,0,0,0,0,0,0,0,-3,-6,0,0,0,0,0,0,-9,-18,0,-10,-4,0,0,0,-10,-37,-39,0,-14,-8,0,0,0,0,0,0,0,0,0,0,0,0,-6,-8,-9,-9,-4,0,0,0,0,0,0,0,0,0,0,0,0,0,-3,-6,0,0,0],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
