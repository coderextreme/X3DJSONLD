###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    Shape(
      appearance=Appearance(
        material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0,0.05,0)),
        texture=ImageTexture(url=['../../images/4/world15-14.jpg'],repeatS=False,repeatT=False)),
      geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(78.7083383624419,134.95834272103156,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=22,xSpacing=1.0714287,zDimension=24,zSpacing=0.48913044,height=[-32,-25,-22,-20,-21,-15,-6,-9,-21,-26,-35,-36,-36,-35,-34,-36,-37,-37,-38,-38,-42,-44,-30,-28,-25,-24,-22,-20,-20,-21,-25,-31,-35,-35,-34,-38,-16,-40,-41,-42,-44,-47,-51,-51,-47,-45,-42,-37,-30,-30,-29,-28,-30,-33,-34,-34,-36,-39,-44,-46,-47,-53,-60,-61,-60,-52,-68,-62,-58,-54,-52,-50,-49,-46,-44,-41,-42,-43,-45,-46,-47,-49,-55,-62,-67,-69,-74,-77,-153,-198,-97,-73,-68,-68,-62,-60,-59,-61,-62,-59,-59,-61,-63,-65,-68,-73,-78,-83,-88,-91,-2058,-1823,-1340,-800,-343,-120,-87,-82,-83,-81,-79,-78,-77,-76,-76,-74,-74,-77,-85,-92,-97,-100,-2975,-2843,-2592,-2601,-1794,-754,-261,-188,-227,-154,-104,-110,-115,-118,-105,-94,-90,-91,-99,-126,-162,-175,-3362,-3213,-3143,-2904,-2622,-2275,-1883,-1554,-1066,-434,-553,-654,-670,-510,-252,-184,-157,-199,-331,-474,-728,-1060,-3502,-3391,-3255,-3054,-2637,-2330,-2077,-1587,-1596,-1573,-1514,-1550,-1600,-1569,-1598,-1517,-1382,-1507,-1756,-1793,-1998,-1997,-3605,-3403,-3037,-2790,-2254,-2014,-1476,-1621,-1648,-1753,-1985,-2052,-2124,-2198,-2186,-2229,-2235,-2245,-2406,-2435,-2594,-2590,-3680,-3486,-3064,-2582,-1917,-1659,-1572,-851,-1168,-1670,-2000,-2194,-2184,-2393,-2490,-2550,-2571,-2567,-2613,-2690,-2720,-2744,-3833,-3758,-3599,-3438,-3077,-2002,-1627,-1173,-816,-1746,-2009,-2192,-2410,-2490,-2577,-2590,-2577,-2597,-2641,-2701,-2740,-2737,-3961,-3893,-3822,-3664,-3436,-2816,-2272,-1583,-1343,-1837,-2078,-2239,-2419,-2611,-2677,-2735,-2725,-2707,-2698,-2696,-2738,-2797,-4042,-4012,-4010,-3957,-3146,-2429,-2325,-1865,-1437,-1854,-1994,-2157,-2265,-2472,-2594,-2623,-2644,-2677,-2698,-2705,-2686,-2524,-4152,-4134,-4108,-4034,-3800,-3310,-2366,-1359,-1265,-1315,-1425,-1791,-2070,-2211,-2187,-2348,-2544,-2594,-2489,-2657,-2583,-1275,-4100,-4089,-4062,-4013,-3889,-3500,-2863,-2241,-1447,-1381,-1149,-1348,-1785,-2172,-2326,-2328,-2334,-2141,-2443,-2616,-2625,-2101,-4111,-4134,-4175,-4087,-4018,-3794,-3393,-3139,-3067,-2891,-2133,-1396,-1678,-1043,-984,-1823,-2011,-1995,-1350,-2182,-2719,-2662,-4191,-4199,-4184,-4035,-3757,-3701,-3512,-3450,-3344,-3203,-2985,-2624,-2343,-1528,-1398,-1540,-1592,-1822,-2003,-2133,-2257,-2092,-4138,-4137,-4156,-4178,-4010,-3841,-3587,-3384,-2863,-2521,-2241,-1561,-1877,-1426,-1411,-1059,-811,-682,-1244,-1939,-2401,-2421,-4163,-4147,-3892,-3781,-3608,-3593,-3376,-3065,-2853,-2720,-2235,-1443,-1070,-861,-723,-703,-735,-941,-1386,-1814,-2005,-1902,-3957,-3800,-3690,-3448,-3029,-2985,-2824,-2365,-1539,-966,-819,-825,-827,-817,-934,-1073,-1170,-1445,-1544,-1544,-1235,-1019,-3410,-3082,-2831,-2647,-2426,-2214,-2066,-1517,-1220,-1486,-1502,-1534,-1391,-1058,-1052,-1181,-1242,-1237,-1397,-1628,-2000,-2033,-2486,-2449,-2423,-2409,-2373,-2387,-2270,-2191,-1740,-1208,-988,-969,-974,-1045,-1190,-1700,-2234,-2684,-3067,-3360,-3424,-3483,-2431,-2440,-2427,-2389,-2384,-2318,-2155,-1779,-1370,-1054,-984,-992,-1014,-1165,-1575,-2077,-2479,-2954,-3568,-3785,-3834,-3822],
        geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(0.0,0.0,-6378137.0),geoSystem=['GDC'])))])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
