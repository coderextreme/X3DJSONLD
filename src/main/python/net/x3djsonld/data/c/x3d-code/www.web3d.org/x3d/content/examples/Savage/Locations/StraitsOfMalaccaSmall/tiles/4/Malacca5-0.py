###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    Shape(
      appearance=Appearance(
        material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0,0.05,0)),
        texture=ImageTexture(url=['../../images/4/Malacca5-0.jpg'],repeatS=False,repeatT=False)),
      geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(2.116798394735791,98.7885625,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=22,xSpacing=0.019880954,zDimension=23,zSpacing=0.014457387,height=[1361,1515,1522,1457,1455,1308,1109,1122,1130,1146,1168,1132,1123,1154,1198,1232,1211,1219,1266,1410,1412,1471,1299,1384,1460,1478,1489,1331,1173,1146,1145,1146,1153,1154,1145,1168,1205,1219,1194,1232,1267,1455,1386,1334,1393,1432,1443,1459,1425,1246,1209,1154,1140,1136,1164,1166,1166,1164,1189,1190,1220,1266,1308,1423,1397,1354,1376,1394,1424,1540,1328,1175,1140,1287,1166,1153,1172,1178,1169,1162,1165,1240,1224,1222,1379,1402,1361,1345,1399,1429,1533,1456,1270,1169,1165,1220,1208,1179,1184,1187,1137,1187,1162,1258,1216,1426,1464,1412,1382,1346,1384,1477,1499,1381,1243,1184,1182,1241,1180,1213,1194,1163,1213,1206,1269,1273,1246,1479,1465,1455,1451,1350,1419,1461,1479,1374,1255,1208,1273,1247,1214,1222,1229,1228,1254,1239,1237,1250,1482,1435,1474,1460,1496,1395,1393,1443,1441,1313,1256,1249,1393,1277,1272,1270,1261,1274,1304,1303,1294,1270,1425,1445,1477,1488,1510,1566,1400,1513,1359,1317,1402,1482,1379,1330,1316,1311,1320,1361,1287,1349,1251,1393,1423,1448,1465,1489,1472,1532,1495,1464,1362,1436,1417,1423,1385,1378,1358,1386,1363,1409,1345,1386,1355,1363,1431,1454,1476,1484,1448,1440,1472,1416,1378,1408,1410,1405,1391,1378,1419,1450,1415,1400,1383,1394,1416,1366,1441,1430,1444,1436,1394,1359,1439,1376,1376,1401,1401,1411,1418,1437,1459,1462,1434,1397,1373,1368,1393,1448,1352,1362,1364,1405,1373,1359,1338,1371,1426,1429,1426,1431,1447,1470,1497,1498,1444,1275,1323,1132,1434,1448,1226,1043,1220,1398,1296,1351,1226,999,1355,1430,1437,1431,1430,1459,1513,1558,1491,1194,1298,1170,1140,1360,1237,1008,1047,1274,1332,1358,1358,1061,1133,1321,1417,1409,1354,1378,1225,1402,1336,1051,1201,1106,970,935,966,973,992,992,1225,1321,1391,1314,898,910,1273,964,949,961,1116,993,1145,1172,1044,962,927,924,943,954,959,959,966,961,1398,1364,909,904,913,907,909,1006,910,906,897,906,1021,919,916,908,917,928,935,957,964,960,1466,1243,1204,904,904,1026,953,890,906,912,897,907,973,906,898,907,905,911,923,930,941,942,1545,1401,900,895,904,902,913,901,900,906,897,909,898,896,920,898,888,904,910,949,938,948,1627,1073,901,905,900,901,914,903,894,903,908,898,903,908,910,903,902,909,904,909,945,934,1678,1141,903,902,903,904,890,900,906,913,912,900,900,955,934,901,913,899,898,908,910,919,1261,904,902,897,903,891,904,905,912,914,912,900,905,912,1080,936,924,902,901,908,911,937,1235,904,902,895,908,900,903,905,914,914,912,900,909,908,1094,939,933,902,904,908,908,924],
        geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(3.070985940057265,102.12856265864148,0),geoSystem=['GDC'])))])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
