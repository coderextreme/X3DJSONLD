###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    meta(content='Four.x3d',name='title'),
    meta(content='3D Hull Number',name='description'),
    meta(content='Patrick Sullivan',name='creator'),
    meta(content='20 February 2006',name='created'),
    meta(content='14 January 2014',name='modified'),
    meta(content='1.0',name='version'),
    meta(content='Hull Numbers, ship markings',name='subject'),
    meta(content='https://savage.nps.edu/Savage/ModelDetailing/HullNumbers/Four.x3d',name='identifier'),
    meta(content='../../license.html',name='license')]),
  Scene=Scene(
    children=[
    Group(DEF='Four',
      children=[
      Transform(DEF='dad_HullNumber4_copy15',
        children=[
        Shape(DEF='HullNumber4_copy15',
          appearance=Appearance(
            material=Material(DEF='white2_mat',ambientIntensity=1,diffuseColor=(1,1,1),shininess=0,specularColor=(1,1,1))),
          geometry=IndexedFaceSet(coordIndex=[0,1,2,-1,0,2,3,-1,0,3,4,-1,0,4,5,-1,0,6,7,-1,0,7,8,-1,0,5,9,-1,0,9,6,-1,0,8,10,-1,0,10,1,-1,1,11,12,-1,1,12,13,-1,1,13,2,-1,1,10,14,-1,1,14,11,-1,11,14,15,-1,11,15,12,-1,12,15,16,-1,12,16,13,-1,13,16,17,-1,13,17,2,-1,2,17,18,-1,2,18,3,-1,3,19,20,-1,3,20,4,-1,3,18,21,-1,3,21,19,-1,19,22,20,-1,19,21,23,-1,19,23,22,-1,22,23,24,-1,22,24,20,-1,20,25,26,-1,20,26,4,-1,20,24,27,-1,20,27,25,-1,25,27,28,-1,25,28,26,-1,26,28,29,-1,26,29,4,-1,4,30,31,-1,4,31,5,-1,4,29,32,-1,4,32,30,-1,30,33,34,-1,30,34,35,-1,30,35,36,-1,30,36,31,-1,30,32,37,-1,30,37,33,-1,33,37,38,-1,33,38,34,-1,34,38,39,-1,34,39,35,-1,35,40,41,-1,35,41,36,-1,35,39,42,-1,35,42,40,-1,40,43,44,-1,40,44,41,-1,40,42,45,-1,40,45,43,-1,43,46,6,-1,43,6,44,-1,43,45,47,-1,43,47,46,-1,46,48,6,-1,46,47,49,-1,46,49,48,-1,48,49,7,-1,48,7,6,-1,6,9,44,-1,5,31,50,-1,5,50,51,-1,5,51,52,-1,5,52,9,-1,9,52,53,-1,9,53,44,-1,44,53,54,-1,44,54,41,-1,41,54,55,-1,41,55,36,-1,36,55,50,-1,36,50,31,-1,8,18,17,-1,8,17,10,-1,8,7,52,-1,8,52,51,-1,8,51,29,-1,8,29,18,-1,10,15,14,-1,10,17,16,-1,10,16,15,-1,18,29,24,-1,18,24,21,-1,21,24,23,-1,24,29,28,-1,24,28,27,-1,29,51,50,-1,29,50,32,-1,32,38,37,-1,32,55,39,-1,32,39,38,-1,32,50,55,-1,39,55,54,-1,39,54,42,-1,42,54,53,-1,42,53,45,-1,45,53,7,-1,45,7,47,-1,47,7,49,-1,7,53,52,-1],creaseAngle=0.524,
            coord=Coordinate(point=[(-.1019,.28551,-.04102),(-.1019,.15172,-.04102),(.24478,.15172,-.04102),(.24478,.28551,-.04102),(.24478,.5941,-.04102),(-.1019,.5941,-.04102),(-.4642,.28551,-.04102),(-.47423,.28232,-.2),(-.11192,.28232,-.2),(-.2933,.5941,-.04102),(-.11192,.14854,-.2),(-.1019,.01793,-.04102),(.07144,.01793,-.04102),(.24478,.01793,-.04102),(-.11192,.01475,-.2),(.06142,.01475,-.2),(.23476,.01475,-.2),(.23476,.14854,-.2),(.23476,.28232,-.2),(.33463,.28551,-.04102),(.42447,.4398,-.04102),(.3246,.28232,-.2),(.42447,.28551,-.04102),(.41445,.28232,-.2),(.41445,.43662,-.2),(.42447,.5941,-.04102),(.33463,.5941,-.04102),(.41445,.59092,-.2),(.3246,.59092,-.2),(.23476,.59092,-.2),(.24478,1.03404,-.04102),(-.1019,.8192,-.04102),(.23476,1.03086,-.2),(.24478,1.47398,-.04102),(.07144,1.47398,-.04102),(-.1019,1.47398,-.04102),(-.1019,1.0443,-.04102),(.23476,1.4708,-.2),(.06142,1.4708,-.2),(-.11192,1.4708,-.2),(-.4642,1.04332,-.04102),(-.2933,.8192,-.04102),(-.47423,1.04014,-.2),(-.82651,.61266,-.04102),(-.48471,.5941,-.04102),(-.83653,.60947,-.2),(-.82651,.44908,-.04102),(-.83653,.4459,-.2),(-.82651,.28551,-.04102),(-.83653,.28232,-.2),(-.11192,.81602,-.2),(-.11192,.59092,-.2),(-.30333,.59092,-.2),(-.49473,.59092,-.2),(-.30333,.81602,-.2),(-.11192,1.04111,-.2)])))]),
      Transform(DEF='dad_HullNumber4',
        children=[
        Shape(DEF='HullNumber4',
          appearance=Appearance(
            material=Material(DEF='main_mat',ambientIntensity=0.001,diffuseColor=(.001,.001,.001),shininess=0,specularColor=(.001,.001,.001))),
          geometry=IndexedFaceSet(coordIndex=[0,1,2,-1,0,2,3,-1,0,3,4,-1,0,4,5,-1,0,6,7,-1,0,7,8,-1,0,5,9,-1,0,9,6,-1,0,8,10,-1,0,10,1,-1,1,11,12,-1,1,12,13,-1,1,13,2,-1,1,10,14,-1,1,14,11,-1,11,14,15,-1,11,15,12,-1,12,15,16,-1,12,16,13,-1,13,16,17,-1,13,17,2,-1,2,17,18,-1,2,18,3,-1,3,19,20,-1,3,20,4,-1,3,18,21,-1,3,21,19,-1,19,22,20,-1,19,21,23,-1,19,23,22,-1,22,23,24,-1,22,24,20,-1,20,25,26,-1,20,26,4,-1,20,24,27,-1,20,27,25,-1,25,27,28,-1,25,28,26,-1,26,28,29,-1,26,29,4,-1,4,30,31,-1,4,31,5,-1,4,29,32,-1,4,32,30,-1,30,33,34,-1,30,34,35,-1,30,35,36,-1,30,36,31,-1,30,32,37,-1,30,37,33,-1,33,37,38,-1,33,38,34,-1,34,38,39,-1,34,39,35,-1,35,40,41,-1,35,41,36,-1,35,39,42,-1,35,42,40,-1,40,43,44,-1,40,44,41,-1,40,42,45,-1,40,45,43,-1,43,46,6,-1,43,6,44,-1,43,45,47,-1,43,47,46,-1,46,48,6,-1,46,47,49,-1,46,49,48,-1,48,49,7,-1,48,7,6,-1,6,9,44,-1,5,31,50,-1,5,50,51,-1,5,51,52,-1,5,52,9,-1,9,52,53,-1,9,53,44,-1,44,53,54,-1,44,54,41,-1,41,54,55,-1,41,55,36,-1,36,55,50,-1,36,50,31,-1,8,18,17,-1,8,17,10,-1,8,7,52,-1,8,52,51,-1,8,51,29,-1,8,29,18,-1,10,15,14,-1,10,17,16,-1,10,16,15,-1,18,29,24,-1,18,24,21,-1,21,24,23,-1,24,29,28,-1,24,28,27,-1,29,51,50,-1,29,50,32,-1,32,38,37,-1,32,55,39,-1,32,39,38,-1,32,50,55,-1,39,55,54,-1,39,54,42,-1,42,54,53,-1,42,53,45,-1,45,53,7,-1,45,7,47,-1,47,7,49,-1,7,53,52,-1],creaseAngle=0.524,
            coord=Coordinate(point=[(.04346,.27076,-.08798),(.04346,.13697,-.08798),(.39014,.13697,-.08798),(.39014,.27076,-.08798),(.39014,.57935,-.08798),(.04346,.57935,-.08798),(-.31884,.27076,-.08798),(-.32886,.26758,-.24696),(.03344,.26758,-.24696),(-.14794,.57935,-.08798),(.03344,.13379,-.24696),(.04346,.00318,-.08798),(.2168,.00318,-.08798),(.39014,.00318,-.08798),(.03344,0,-.24696),(.20678,0,-.24696),(.38012,0,-.24696),(.38012,.13379,-.24696),(.38012,.26758,-.24696),(.47999,.27076,-.08798),(.56983,.42506,-.08798),(.46997,.26758,-.24696),(.56983,.27076,-.08798),(.55981,.26758,-.24696),(.55981,.42188,-.24696),(.56983,.57935,-.08798),(.47999,.57935,-.08798),(.55981,.57617,-.24696),(.46997,.57617,-.24696),(.38012,.57617,-.24696),(.39014,1.0193,-.08798),(.04346,.80445,-.08798),(.38012,1.01611,-.24696),(.39014,1.45924,-.08798),(.2168,1.45924,-.08798),(.04346,1.45924,-.08798),(.04346,1.02955,-.08798),(.38012,1.45605,-.24696),(.20678,1.45605,-.24696),(.03344,1.45605,-.24696),(-.31884,1.02857,-.08798),(-.14794,.80445,-.08798),(-.32886,1.02539,-.24696),(-.68115,.59791,-.08798),(-.33935,.57935,-.08798),(-.69117,.59473,-.24696),(-.68115,.43434,-.08798),(-.69117,.43115,-.24696),(-.68115,.27076,-.08798),(-.69117,.26758,-.24696),(.03344,.80127,-.24696),(.03344,.57617,-.24696),(-.15796,.57617,-.24696),(-.34937,.57617,-.24696),(-.15796,.80127,-.24696),(.03344,1.02637,-.24696)])))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful for Four.py")
