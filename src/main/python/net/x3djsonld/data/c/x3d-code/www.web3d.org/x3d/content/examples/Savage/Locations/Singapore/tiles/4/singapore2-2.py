###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_22',geoSystem=['GDC'],position=(1.25592182508997,103.6616511706451,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.25592182508997,103.6616511706451,0.0),range=4101.627,child1Url=['../../tiles/5/singapore4-4.x3d'],child2Url=['../../tiles/5/singapore4-5.x3d'],child3Url=['../../tiles/5/singapore5-4.x3d'],child4Url=['../../tiles/5/singapore5-5.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore2-2.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.247190112711976,103.64728813651608,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[0,0,1,0,0,0,0,0,-1,2,2,1,0,2,7,5,0,-1,1,1,1,3,3,0,0,0,0,0,0,1,1,0,0,1,0,0,1,0,0,1,0,1,0,0,0,0,0,0,-1,0,3,8,4,0,-1,0,1,2,3,2,1,1,0,1,2,-1,0,0,0,1,3,1,0,1,1,0,1,1,1,0,0,0,0,-1,0,-1,0,5,6,2,0,-1,0,0,2,3,2,2,2,0,2,3,0,0,0,2,3,3,2,0,1,3,2,1,1,0,1,1,0,-2,-2,2,1,2,5,3,0,0,-2,0,0,0,2,1,1,1,0,2,2,0,0,0,4,4,4,3,1,2,4,3,2,1,0,2,2,0,-1,-2,4,3,2,5,3,0,0,-2,-1,0,0,1,0,1,0,0,1,1,2,1,0,4,4,4,3,2,3,4,1,2,2,0,1,2,1,0,-1,4,3,1,2,4,4,3,0,0,0,0,0,0,1,0,0,1,1,3,2,0,1,3,4,3,3,4,3,0,1,3,1,0,1,1,0,0,3,3,0,0,4,6,5,0,0,0,0,0,0,1,0,0,1,1,4,3,0,0,1,3,3,3,3,2,0,1,2,0,0,0,0,0,0,3,3,0,0,1,5,5,0,0,1,1,0,0,1,0,0,1,1,3,4,2,0,1,1,0,0,1,0,0,1,1,0,-1,0,0,0,0,3,3,0,0,0,3,4,0,0,2,2,0,0,1,1,0,1,1,3,5,4,1,0,0,0,0,0,0,1,2,1,-1,-3,0,1,1,0,2,3,1,0,0,1,1,0,0,2,3,1,0,1,2,0,2,2,3,4,4,1,0,0,0,0,0,0,2,3,0,-2,-3,0,2,3,0,2,3,1,1,1,0,0,0,0,2,3,2,1,1,2,1,2,3,3,3,3,1,0,0,0,1,1,-2,2,3,0,-2,-1,0,2,5,2,1,1,0,0,1,1,0,0,0,1,2,2,0,0,0,1,1,0,1,2,2,2,0,0,1,1,0,-4,1,3,0,-2,0,0,3,7,3,0,0,0,0,0,3,2,0,0,0,2,1,0,0,0,1,0,0,0,0,1,3,0,0,1,1,0,-8,-3,1,0,0,0,1,4,6,3,2,0,-1,0,1,4,4,0,0,0,1,1,1,0,0,4,2,0,0,0,1,2,1,1,1,0,0,-11,-7,0,1,0,0,2,5,6,4,4,0,-2,0,1,5,5,1,1,0,0,1,3,2,1,7,3,0,0,0,1,1,1,2,0,0,0,-10,-7,0,1,0,1,2,3,3,3,3,0,0,1,3,4,1,0,0,0,1,3,4,1,0,4,3,1,1,0,0,2,1,1,-1,-4,-2,-8,-8,0,2,2,2,2,1,0,2,3,0,0,2,4,3,-1,-3,-1,1,3,4,4,1,-1,1,3,2,2,0,0,2,1,0,-5,-7,-5,-3,-5,0,3,5,7,5,0,0,3,2,1,0,0,3,4,0,0,0,2,1,2,4,0,0,2,2,1,2,0,0,2,1,0,-3,-5,-3,1,-2,0,4,9,12,8,-4,0,4,0,1,0,-1,3,4,2,4,3,4,0,0,3,0,3,3,2,0,1,1,1,3,0,0,-2,-2,-1,1,0,3,7,14,21,12,-2,0,1,0,2,0,0,2,5,5,5,3,3,0,0,1,0,2,1,0,0,1,2,2,3,0,-1,-2,-2,-2,2,3,6,9,18,30,16,-1,0,0,0,2,2,0,1,6,7,5,2,1,0,0,0,0,1,0,-1,1,1,3,2,2,0,-2,-2,-3,-3,5,4,7,11,15,19,10,0,2,0,0,1,1,0,0,3,5,4,2,0,0,1,0,0,2,0,-1,0,2,4,3,2,0,-1,-1,-1,0,9,7,8,12,12,7,4,2,4,0,0,1,0,0,0,0,2,4,1,0,0,2,0,0,3,1,0,0,3,4,3,3,1,0,0,0,1,7,8,7,8,8,7,7,5,4,0,1,0,0,0,0,0,1,2,2,0,1,3,1,0,2,2,-1,0,4,3,3,2,1,1,0,1,3,4,8,6,3,4,9,10,8,4,2,3,0,-2,0,1,0,0,0,2,1,2,5,3,0,2,2,-2,0,4,2,2,0,0,2,2,3,4,2,6,6,4,5,9,8,6,3,2,1,0,-1,0,0,0,0,0,2,0,1,2,3,1,2,3,-1,1,4,3,2,0,0,2,3,4,4,0,2,5,5,7,10,5,3,3,0,0,0,0,0,0,-2,0,0,0,0,0,0,3,2,2,5,1,2,3,3,1,0,0,3,3,4,5,0,2,3,4,7,8,4,2,2,0,2,3,0,1,0,-2,0,0,1,1,1,2,4,1,0,4,3,2,2,3,7,5,2,3,4,4,5,2,2,1,3,7,4,3,2,0,1,6,7,2,0,0,-1,0,2,4,4,5,7,5,1,0,3,6,3,1,4,15,11,3,4,4,4,6,0,0,0,2,7,4,2,2,2,3,10,9,2,0,0,0,1,3,4,5,5,7,4,1,0,2,5,2,1,4,16,15,7,4,4,5,6,-1,-1,0,2,6,5,2,4,4,5,13,10,2,0,0,1,2,4,4,6,5,5,3,2,0,1,2,0,0,4,13,19,10,4,3,4,5,-1,-2,0,1,5,6,2,5,6,6,12,10,3,1,0,0,2,3,4,5,2,4,1,2,0,1,2,0,0,3,13,20,13,5,2,4,5,-1,-3,0,2,4,5,1,5,8,5,8,8,4,2,0,0,1,2,6,4,0,2,1,2,0,0,2,0,0,2,13,18,15,6,0,2,5,1,-1,1,3,3,5,2,5,8,5,5,5,3,2,0,0,1,3,6,3,0,1,1,1,0,0,3,1,0,2,11,16,15,7,0,3,6,3,0,2,3,3,6,4,6,7,4,2,1,1,2,1,0,1,4,7,5,1,1,1,0,0,0,3,2,2,2,9,13,14,6,2,6,9,3,1,1,1,3,6,5,5,6,3,0,0,1,2,3,0,2,4,6,6,3,2,1,1,0,0,1,2,4,4,6,11,13,5,2,7,10,2,2,0,-1,1,5,6,4,3,1,0,0,1,4,5,0,2,3,6,5,4,2,2,4,0,0,0,1,6,7,5,8,11,4,1,6,10,1,1,-1,-2,0,3,5,3,2,1,0,0,1,4,5,1,2,2,4,4,4,2,2,4,0,-1,-1,2,7,7,3,5,9,4,2,6,9,1,0,-1,-2,0,1,3,3,2,2,1,0,1,3,4,1,2,1,1,3,6,2,0,2,0,-2,0,3,6,7,1,1,6,6,6,6,6,0,0,0,-1,0,0,2,3,2,1,0,0,1,3,2,1,2,3,1,4,8,4,0,2,0,-2,0,3,5,5,0,0,4,7,8,6,5,-1,-1,0,0,0,0,2,2,2,0,-1,0,3,4,0,0,4,8,4,5,13,5,2,2,0,-2,0,1,2,3,0,0,5,7,8,6,5,-2,-1,1,0,0,1,2,1,1,0,-2,0,3,4,1,0,3,10,6,6,14,6,2,2,1,0,-1,0,0,0,0,1,5,7,8,6,5,-2,-1,0,0,1,3,2,0,0,0,-1,0,3,4,4,3,0,6,6,9,11,4,2,4,5,1,-3,-4,-2,0,2,4,6,7,8,7,6,0,0,0,0,1,4,2,0,0,0,-1,0,3,5,6,5,0,3,5,9,8,2,2,4,7,2,-6,-8,-4,0,3,6,6,7,8,7,7],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
