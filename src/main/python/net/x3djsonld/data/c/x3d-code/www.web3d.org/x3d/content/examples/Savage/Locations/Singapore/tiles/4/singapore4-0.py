###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_40',geoSystem=['GDC'],position=(1.2908486746019459,103.60419903412902,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.2908486746019459,103.60419903412902,0.0),range=4101.627,child1Url=['../../tiles/5/singapore8-0.x3d'],child2Url=['../../tiles/5/singapore8-1.x3d'],child3Url=['../../tiles/5/singapore9-0.x3d'],child4Url=['../../tiles/5/singapore9-1.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore4-0.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.2821169622239519,103.589836,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[1,2,3,2,0,1,2,2,2,4,8,5,5,4,0,0,2,1,0,2,3,7,3,7,4,3,4,4,6,8,7,4,2,2,0,-8,-11,2,3,4,1,0,0,0,0,2,3,5,5,6,4,1,1,2,1,0,1,3,4,0,3,2,1,3,4,6,7,5,2,0,0,-3,-9,-10,3,3,3,1,0,0,-3,0,2,1,2,3,6,5,4,4,2,2,0,0,1,2,0,0,1,0,3,4,5,6,3,0,-1,-2,-7,-10,-10,3,4,3,1,0,0,0,0,0,0,1,2,6,6,7,6,1,2,0,0,2,4,1,0,2,4,5,5,2,2,0,-1,-2,-4,-12,-15,-13,3,3,2,1,0,1,1,0,0,0,1,1,5,7,9,8,1,1,1,0,3,7,2,0,5,9,7,4,1,0,-1,-1,-2,-8,-18,-19,-16,2,1,1,2,3,2,0,0,0,1,1,1,5,7,7,6,2,2,3,3,3,6,1,0,8,10,8,3,0,-1,-2,-2,-4,-12,-21,-23,-20,0,0,1,4,5,2,0,0,1,3,1,1,4,6,5,5,4,3,4,7,4,4,0,2,10,11,7,3,0,-1,-2,-2,-6,-16,-24,-26,-24,0,0,2,5,6,3,0,-1,1,3,2,3,3,3,3,4,5,1,2,6,4,2,0,2,6,6,4,2,0,-1,-2,-3,-10,-18,-24,-26,-25,0,0,4,6,6,3,0,-1,0,2,4,6,3,1,1,4,6,0,0,2,3,1,0,1,2,1,2,1,0,-1,-2,-4,-13,-20,-24,-26,-25,0,1,4,5,3,2,1,0,0,1,3,4,1,0,0,3,6,1,0,2,3,0,0,0,1,0,1,1,1,-1,-1,-4,-14,-22,-25,-26,-24,1,3,4,2,1,2,3,0,-1,0,1,1,0,-2,0,2,5,3,1,3,2,0,0,0,3,1,1,0,2,-1,-1,-5,-16,-22,-26,-27,-22,2,3,3,1,0,0,1,0,-1,0,0,1,0,-2,0,1,2,1,0,2,0,0,0,0,2,4,3,1,2,0,0,-3,-15,-23,-26,-24,-19,3,4,2,0,0,0,0,0,0,0,0,1,-2,-1,2,0,0,0,0,0,0,0,0,0,2,6,5,2,2,1,0,-2,-14,-24,-25,-20,-15,3,4,2,0,0,0,0,0,0,0,0,0,-4,0,2,0,0,0,0,0,-1,0,0,0,1,5,3,2,2,2,0,-2,-10,-20,-22,-17,-13,3,3,3,1,0,0,0,-1,0,0,1,-1,-5,0,1,1,0,0,0,-1,-2,1,0,0,2,2,0,1,1,2,-1,-3,-5,-14,-18,-14,-11,1,2,4,1,0,1,0,-1,0,0,2,-1,-4,0,1,1,0,0,0,0,0,1,2,0,2,2,0,1,1,2,-1,-7,-5,-9,-14,-13,-11,0,1,3,0,0,0,0,0,0,0,2,0,-1,1,1,0,0,-1,-1,1,3,2,5,0,1,2,2,2,2,1,-2,-12,-6,-4,-10,-12,-10,0,0,1,0,0,1,0,0,0,0,0,0,-1,2,2,0,0,-1,-1,2,5,3,3,0,1,0,2,2,2,1,-1,-11,-7,-5,-10,-10,-8,0,0,0,0,2,3,1,0,1,0,-2,-1,-1,3,2,2,1,0,0,2,6,6,0,0,0,-1,0,4,3,2,0,-8,-8,-10,-12,-7,-3,1,0,-1,0,4,4,2,2,2,0,-2,-1,0,4,4,3,2,0,1,3,6,7,0,0,0,-1,0,3,2,2,0,-5,-7,-9,-11,-6,-2,3,0,0,2,5,5,3,5,3,0,0,0,1,5,6,5,1,-1,3,3,6,7,0,1,2,0,0,2,0,1,1,-2,-6,-6,-8,-5,-1,3,0,0,3,5,5,4,6,2,1,0,0,4,5,5,4,0,-1,2,3,4,6,1,1,5,2,1,2,1,0,1,0,-4,-4,-5,-3,0,3,0,1,3,5,6,5,6,2,2,1,0,6,5,2,2,0,-1,1,1,2,7,2,2,10,5,3,5,2,0,1,0,-3,-4,-3,0,1,3,1,1,4,4,5,5,6,2,1,2,0,6,2,0,0,0,0,2,1,0,5,3,3,11,5,4,6,4,1,0,0,-2,-3,-1,1,3,4,2,1,2,2,3,4,4,1,1,3,1,4,0,0,0,0,0,2,1,0,1,1,2,9,5,3,4,4,2,0,0,-1,-2,0,3,5,4,3,0,2,2,3,3,3,1,0,3,1,1,-1,0,0,0,0,2,0,0,0,0,3,7,3,1,3,4,2,0,0,0,0,0,4,6,3,2,1,2,2,3,2,1,2,0,2,0,0,0,0,2,2,0,2,0,0,-1,0,4,6,1,0,1,3,3,1,0,0,0,1,4,6,1,1,2,2,3,4,2,0,3,1,1,0,0,1,1,3,4,1,2,0,0,-1,0,5,7,1,0,0,2,3,1,0,0,0,1,5,7,0,1,2,2,4,4,1,2,4,2,0,0,0,1,0,3,6,2,2,-1,1,0,0,4,6,2,0,0,0,3,2,1,1,1,2,5,7,0,0,2,2,4,3,1,2,4,2,1,0,0,0,0,2,6,3,2,-1,2,2,2,3,6,3,1,0,0,1,3,2,2,2,4,6,8,1,2,2,2,3,1,0,2,4,4,3,1,0,0,0,1,5,1,1,0,4,5,4,1,4,4,2,0,0,0,2,3,4,3,5,8,9,2,3,2,2,2,1,0,1,3,4,4,2,0,0,0,0,4,0,1,0,2,6,5,0,2,4,3,1,0,0,2,4,5,5,7,9,10,3,3,1,2,1,1,3,2,3,3,4,3,0,0,0,0,3,0,2,0,-1,6,5,1,0,2,3,2,0,0,2,4,5,8,10,10,10,3,2,1,2,1,2,4,3,1,2,3,4,0,0,1,0,4,0,2,0,-6,4,5,2,0,1,3,3,1,0,2,5,6,10,12,11,11,2,1,2,4,2,2,4,1,0,2,3,2,1,0,1,2,5,1,2,0,-9,1,4,3,1,0,2,3,2,0,3,5,6,7,8,8,8,2,0,3,5,3,2,3,0,0,2,2,0,1,0,0,3,5,1,2,0,-10,-1,2,3,1,0,1,3,3,2,3,5,6,5,4,5,6,2,3,5,5,4,2,3,0,0,2,0,0,0,3,2,3,5,1,1,0,-7,-1,0,1,1,0,0,2,3,3,3,4,4,3,3,4,5,3,5,6,4,4,3,3,1,1,2,0,0,0,5,4,4,4,2,1,-1,-5,-2,-1,0,1,1,0,1,3,3,4,4,3,3,3,3,4,2,5,5,3,3,4,3,2,2,3,0,0,2,6,7,6,4,2,0,-2,-5,-4,-1,1,2,1,0,0,2,3,3,3,3,3,3,4,5,1,4,5,3,3,5,4,2,3,4,0,0,4,7,10,8,5,2,0,-3,-5,-7,0,3,3,2,2,0,1,2,3,3,3,3,3,5,7,1,3,5,3,4,5,3,3,4,2,1,3,2,8,11,9,6,2,0,-5,-6,-8,3,4,4,4,4,1,1,2,3,3,3,3,3,6,8,1,3,5,4,5,5,2,4,4,0,1,5,0,8,11,9,7,3,-1,-6,-7,-8,7,6,6,5,5,3,2,2,3,3,3,3,4,7,8,0,2,3,4,5,3,2,6,4,0,1,4,0,7,9,8,7,3,-1,-7,-8,-4,6,8,7,7,6,5,3,2,3,3,3,3,5,7,8,0,0,1,3,4,2,3,7,5,1,1,3,0,7,7,7,7,3,-1,-6,-8,-1,2,9,8,8,7,7,4,3,3,3,3,4,6,7,8],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
