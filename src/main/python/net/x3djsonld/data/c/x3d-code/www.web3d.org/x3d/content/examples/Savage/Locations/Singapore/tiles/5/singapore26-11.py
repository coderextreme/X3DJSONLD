###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    Shape(
      appearance=Appearance(
        material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
        texture=ImageTexture(url=['../../images/5/singapore26-11.jpg'],repeatS=False,repeatT=False)),
      geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.4392877850278434,103.74782937541922,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=3.9897318E-4,zDimension=23,zSpacing=3.96896E-4,height=[16,23,28,27,24,22,21,18,14,12,10,9,7,5,4,3,2,2,2,1,0,0,1,3,5,7,9,9,8,7,6,6,10,13,14,14,10,26,28,29,28,27,26,24,21,17,13,10,7,6,4,3,3,2,2,1,0,0,0,1,2,5,8,8,8,8,7,6,6,9,12,14,14,10,35,32,30,30,30,29,27,24,21,15,9,6,5,3,3,2,2,1,1,0,0,0,0,1,5,8,8,8,8,7,6,6,9,11,13,14,10,34,32,32,32,31,30,29,27,24,17,9,5,4,3,3,2,2,1,1,0,0,0,1,3,6,8,8,8,7,7,7,7,9,10,12,12,8,33,34,33,32,32,31,30,29,27,20,9,4,4,3,3,2,2,1,1,0,0,1,3,5,7,8,8,7,7,7,8,8,9,10,10,10,6,33,33,34,33,32,32,31,30,29,22,13,8,4,3,3,2,2,1,1,1,2,3,5,6,7,8,7,7,7,7,8,8,9,9,7,6,2,32,33,33,34,33,32,32,31,30,25,18,12,6,3,3,2,2,1,1,2,3,5,7,8,8,7,7,7,7,7,8,8,8,8,5,2,0,32,32,33,33,34,33,32,32,31,28,24,18,11,6,3,2,2,2,2,3,5,6,7,8,7,7,7,7,7,7,8,7,6,5,1,0,-2,31,32,33,33,33,34,33,32,31,31,30,24,16,10,5,2,2,2,3,5,7,8,8,7,7,7,7,7,7,7,7,7,4,1,-1,-4,-2,31,32,33,33,33,33,34,33,32,32,31,28,23,16,10,5,4,4,5,6,7,8,7,7,7,7,7,7,7,6,5,4,0,-1,-2,-2,0,31,32,32,33,33,33,34,34,33,32,31,30,29,23,16,9,6,5,7,8,8,7,7,7,7,7,7,7,6,6,3,1,-1,-4,-1,0,2,30,31,32,32,33,33,33,33,34,33,32,32,31,27,22,16,9,7,7,8,7,7,7,7,7,7,7,6,5,3,0,-1,-2,-2,0,2,4,30,31,31,32,32,33,33,33,34,34,33,32,31,30,29,22,13,8,8,7,7,7,7,7,7,7,6,5,3,0,-2,-4,-1,0,2,5,6,29,30,31,32,32,32,33,33,33,33,34,33,32,31,28,21,13,8,7,7,7,7,7,7,7,6,5,3,0,-1,-2,-2,0,2,4,6,7,29,30,31,32,32,32,33,33,33,33,34,34,33,30,26,19,12,7,7,7,7,7,7,7,6,5,3,0,-2,-4,-1,0,2,5,6,7,8,28,30,30,31,32,32,33,33,33,33,34,34,34,34,34,31,25,21,20,19,19,18,17,16,14,11,3,-1,-2,-2,0,2,4,6,7,8,8,28,29,30,31,32,32,32,32,33,33,33,33,34,39,45,47,44,41,38,36,35,34,32,30,25,17,4,-3,-1,0,2,5,6,7,8,8,8,27,29,30,31,31,32,32,31,31,32,34,40,48,54,60,62,60,58,56,54,52,51,48,45,39,31,19,9,9,8,8,8,8,8,8,8,8,27,28,30,30,31,31,31,29,28,30,36,50,67,75,76,76,75,75,73,72,70,68,64,61,56,49,41,34,27,21,16,11,9,8,8,8,7,21,23,24,24,24,24,23,22,20,22,28,43,62,74,79,81,81,81,80,79,77,74,71,67,62,57,51,43,35,27,21,15,12,10,9,8,8,13,14,14,13,12,12,11,10,10,10,12,25,45,62,76,82,82,81,80,79,77,75,72,68,63,57,51,44,37,29,24,18,15,13,11,9,9,4,5,6,6,6,6,6,5,5,4,5,14,28,45,63,74,79,81,80,79,78,76,73,69,64,58,52,45,38,30,25,20,17,14,12,10,10,-3,-1,0,1,3,5,6,6,5,5,5,7,13,27,45,62,75,81,81,80,78,77,74,70,65,59,52,45,38,30,24,19,16,13,12,11,11],
        geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])))])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
