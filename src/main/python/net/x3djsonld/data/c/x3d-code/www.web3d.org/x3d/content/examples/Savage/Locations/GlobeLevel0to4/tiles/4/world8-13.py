###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    Shape(
      appearance=Appearance(
        material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0,0.05,0)),
        texture=ImageTexture(url=['../../images/4/world8-13.jpg'],repeatS=False,repeatT=False)),
      geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(-0.041663984490980965,112.4583420504793,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=22,xSpacing=1.0714287,zDimension=24,zSpacing=0.48913044,height=[168,116,40,90,202,-6,-1678,-1683,975,12,228,294,-1924,-2033,-2628,54,-603,-756,0,314,597,2197,111,398,96,115,61,70,-356,-2283,539,-418,103,478,-2654,-2240,-3557,-7,-825,-4,-38,399,567,66,90,72,330,75,51,91,-209,-2488,-30,-727,-4,-976,-3021,-2284,-2945,-5,-1545,-591,76,-1614,-1824,-2618,33,497,557,410,113,10,-1064,-2379,187,-469,-884,-393,-2997,-1996,-2973,-24,-491,-176,-1388,-3534,-3705,-3533,59,26,319,929,164,52,-16,-934,281,1550,410,1522,526,-1709,-1989,766,-620,-1243,-1966,-3526,-3381,-3903,21,131,1326,434,943,55,60,-794,-2313,598,-157,-1626,60,-1825,-1930,289,-257,-2795,-2346,-3998,-3684,-3886,45,312,261,1101,637,280,107,-299,-3153,-1987,-3311,-4608,-3864,-1945,-2133,294,-688,-3903,-3676,-3916,-3301,-3659,9,288,154,923,891,263,7,-3902,-5092,-4553,-5210,-5406,-4682,-1493,-1966,-500,-1709,-4088,-3534,-4386,-3328,-3677,0,12,85,754,589,118,-4,-4029,-4832,-5329,-5345,-5053,-4450,-350,-1678,-3615,-2061,-2927,-3922,-2742,-3297,-4566,-36,-66,30,1023,697,172,-212,-3587,-4347,-4943,-5072,-4723,-4453,14,-1793,-3156,-4442,-3770,-4035,-3140,-2853,-3770,-49,-112,33,261,1039,29,-97,-2962,-4209,-4835,-4989,-4977,-4486,156,-2538,-1950,-5104,-4640,-4269,-4205,-3347,-3875,-76,-74,-2,47,1205,210,-2,-796,-4031,-4766,-4960,-4943,-4679,-395,-1329,-1094,-6169,-4757,-4823,-4103,-3384,-3401,-92,-84,-41,11,857,458,215,-3,-2746,-4464,-4975,-4817,-5005,-50,-2449,-2744,-5108,-4634,-4323,-463,-4512,-2744,-151,-82,-1429,-5,365,121,75,26,6,-4196,-3789,-4830,-5363,-1095,-2674,-6630,-5434,-4917,-3259,-4911,-4085,-3499,-1161,-352,-2292,-131,-39,315,10,-35,-4,-2253,-4997,-4695,-4684,-630,-964,-8138,-5295,-5470,-5550,-5159,-3648,-2837,-1688,-876,-2444,-1445,-58,201,-140,-423,-2034,-4,-4116,-4396,192,1010,-3718,-5948,-5070,-5547,-5537,-4934,-4311,-4723,-1823,-1541,-1901,-2915,-91,1,-97,-2499,-4645,-15,-40,-4402,912,-794,-2452,-6203,-5426,-5581,-5627,-4699,-3093,-2427,-1934,-1981,-1667,-2813,-943,-11,-62,-2746,-4131,-4644,28,-1863,3,242,-429,-6211,-5126,-5403,-5604,-4455,-4334,-2875,-1498,-1682,-675,-1767,-2484,-149,-148,-2286,-3943,-4339,256,86,1626,902,-76,-6140,-5074,-5567,-5769,-4406,-3704,-3933,-1800,-1608,-1569,-3,-2866,-262,-252,-2157,-3572,-4225,-937,67,507,596,-895,-5785,-5242,-5588,-5561,-4717,-4995,-3916,-1591,-1643,-1473,-707,-1649,-1117,-88,-2184,-3432,-4252,-4176,-10,-155,180,-2270,-5829,-6021,-5801,-6000,-5104,-4759,-4044,-1527,-931,-556,-1781,-1395,-2371,276,-1835,-700,-3992,-3480,-426,-1443,-104,-4297,-5969,-5746,-5909,-6036,-5959,-4865,-4840,-2852,-1789,-2537,-2192,-2005,-2261,-324,-301,-1260,-513,-2062,203,-144,55,-5796,-5943,-5764,-5598,-5966,-6119,-5250,-4934,-3223,-1895,-2482,-1902,-2143,-2158,-312,-46,-1356,-851,-1803,1,127,53,-5631,-5863,-5735,-5675,-6019,-6150,-5158,-4972],
        geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(0.0,0.0,-6378137.0),geoSystem=['GDC'])))])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
