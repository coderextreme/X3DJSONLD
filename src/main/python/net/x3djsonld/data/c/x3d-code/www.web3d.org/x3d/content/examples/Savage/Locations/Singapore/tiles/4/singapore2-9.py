###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_29',geoSystem=['GDC'],position=(1.25592182508997,103.86273364845137,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.25592182508997,103.86273364845137,0.0),range=4101.627,child1Url=['../../tiles/5/singapore4-18.x3d'],child2Url=['../../tiles/5/singapore4-19.x3d'],child3Url=['../../tiles/5/singapore5-18.x3d'],child4Url=['../../tiles/5/singapore5-19.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore2-9.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.247190112711976,103.84837061432235,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[3,4,4,3,2,2,2,2,2,2,1,2,8,13,17,9,-1,-4,-5,-3,7,22,31,32,32,33,33,31,26,16,9,7,7,11,8,-1,-7,4,4,3,2,2,2,2,2,2,2,1,2,4,10,11,2,-3,-5,-5,0,15,27,31,31,32,32,33,32,29,22,13,8,7,8,3,-12,-17,4,4,3,2,2,2,2,2,2,2,2,1,2,9,9,0,-4,-5,-3,6,21,28,30,30,31,32,33,33,31,26,17,11,9,7,2,-16,-21,4,3,2,2,2,2,2,2,2,2,2,1,2,10,10,0,-5,-5,0,14,25,28,29,29,30,31,32,33,32,28,23,16,14,8,4,-11,-17,4,3,2,2,2,2,2,2,2,2,2,2,4,12,15,4,-2,-3,5,19,25,26,27,27,28,29,30,31,32,30,26,20,16,8,6,-5,-12,3,2,2,2,2,2,2,2,2,2,2,2,8,19,22,14,3,1,11,21,24,25,25,26,27,28,29,30,31,31,27,23,15,8,7,1,-6,3,2,3,3,3,3,3,3,3,3,3,4,13,24,27,22,11,8,16,21,22,23,23,24,25,26,27,28,30,31,28,24,14,8,7,4,-4,3,4,3,3,3,3,3,3,3,3,3,8,20,26,28,25,20,16,18,20,20,21,21,22,23,24,24,25,27,29,29,21,12,8,7,1,-5,3,5,5,4,4,4,4,4,4,4,5,13,24,27,28,27,26,22,18,18,18,18,19,19,20,21,21,22,24,25,27,17,10,8,6,1,-3,7,6,6,6,5,5,4,4,4,4,9,19,26,28,28,27,26,23,18,15,16,16,16,17,17,18,18,18,19,20,20,12,6,6,6,4,4,10,8,7,7,6,6,5,5,5,6,14,24,27,28,28,26,26,26,19,13,13,13,13,14,14,14,15,15,15,15,12,7,3,4,6,7,11,9,9,8,7,7,6,6,5,5,10,20,26,28,28,27,26,28,32,21,11,11,11,11,11,11,11,12,11,11,10,7,4,3,3,5,9,12,8,10,9,8,8,7,7,6,6,15,25,27,28,28,26,26,30,37,23,9,9,9,9,9,9,9,9,8,7,6,3,2,3,2,5,11,13,7,9,10,9,8,8,7,7,11,20,27,28,28,27,26,28,34,39,21,7,7,7,7,7,7,7,6,6,5,4,2,2,3,2,5,9,11,6,8,11,10,9,9,8,8,16,25,27,28,28,26,26,30,37,40,20,5,5,5,5,5,5,5,4,4,3,3,2,2,2,2,5,8,9,6,7,9,10,10,9,9,13,21,27,28,28,27,26,28,34,39,41,20,4,4,4,4,4,4,4,4,3,3,2,2,2,2,2,6,7,8,6,7,8,11,11,10,10,17,26,27,28,28,26,26,30,38,40,41,20,3,3,3,3,3,3,3,3,3,3,2,2,2,2,3,6,7,7,6,6,7,10,11,11,15,22,27,28,28,27,26,28,34,39,41,41,20,3,3,3,3,3,3,3,3,3,2,2,2,2,2,3,6,6,7,6,6,7,8,11,11,19,26,27,28,28,26,26,30,38,40,41,41,20,3,3,3,3,3,3,3,3,2,2,2,2,2,2,4,6,6,6,5,6,6,8,13,17,22,27,28,28,27,26,28,34,39,41,41,41,20,3,3,3,3,3,3,3,3,2,2,2,2,2,3,4,6,6,5,5,6,6,8,17,22,26,27,28,28,26,26,30,38,40,41,41,41,20,3,3,3,3,3,3,3,2,2,2,2,2,2,4,5,6,5,4,17,17,17,18,22,25,27,28,28,27,26,28,34,39,41,41,41,41,20,3,3,3,3,3,3,3,2,2,2,2,2,3,4,6,6,5,5,30,30,30,29,28,27,27,28,28,26,26,30,38,40,41,41,41,41,20,3,3,3,3,3,3,2,2,2,2,2,2,4,5,6,6,6,5,32,32,32,31,29,28,28,28,27,26,28,34,39,41,41,41,41,41,20,3,3,3,3,3,3,2,2,2,2,2,3,4,6,6,6,7,7,32,33,32,31,29,28,28,28,26,26,30,38,40,41,41,41,41,41,20,3,3,3,3,3,2,2,2,2,2,2,4,5,6,6,8,9,9,33,34,33,31,30,28,28,27,26,28,34,39,41,41,41,41,41,41,20,3,3,3,3,3,2,2,2,2,2,3,4,6,6,7,8,9,10,34,34,33,31,30,28,28,26,26,30,38,40,41,41,41,41,41,41,20,3,3,3,3,2,2,2,2,2,2,4,5,6,6,8,9,10,10,36,37,34,32,30,28,27,26,28,34,40,41,41,41,41,41,41,36,16,2,3,3,3,2,2,2,2,2,3,4,6,6,7,8,10,10,10,39,40,34,32,30,28,26,26,30,38,40,41,41,41,41,41,41,31,11,2,3,3,2,2,2,2,2,2,4,5,6,6,8,9,10,10,10,43,44,36,33,29,26,26,28,34,40,41,41,41,41,41,41,36,22,6,1,2,3,2,2,2,2,2,3,4,6,6,7,8,9,10,10,9,48,47,38,34,29,25,25,30,38,40,41,41,41,41,41,41,31,13,2,1,2,2,2,2,2,2,2,4,5,6,6,8,9,10,10,9,8,48,49,39,31,26,25,27,33,39,41,41,41,41,41,41,36,22,6,1,1,1,2,2,2,2,2,3,4,6,6,7,8,10,10,10,8,7,46,52,41,26,21,25,29,37,40,41,41,41,41,41,41,30,13,2,1,1,1,1,1,1,1,2,4,5,6,6,8,9,10,10,9,7,6,42,47,34,22,21,25,33,39,40,41,41,41,41,41,36,22,6,1,1,1,1,1,1,1,3,5,5,6,6,7,8,10,10,10,8,6,5,36,39,23,19,22,26,36,40,41,41,41,41,41,41,30,12,2,1,1,1,1,1,1,1,4,7,7,6,6,8,9,10,10,9,7,5,5,30,30,16,16,19,26,36,40,41,41,41,41,41,37,22,6,1,1,1,1,1,1,1,3,6,11,10,6,7,8,10,10,10,8,6,3,2,27,22,13,13,12,27,33,39,41,41,41,41,41,30,12,3,1,1,1,1,1,1,1,4,9,14,14,6,8,9,10,10,9,7,5,0,-1,25,16,10,11,11,26,30,36,40,41,41,41,37,22,6,1,1,1,1,1,1,1,3,6,12,16,15,7,8,10,10,10,8,6,2,-1,-3,23,14,9,9,15,23,26,31,39,41,41,41,30,12,3,1,1,1,1,1,1,2,4,9,14,17,13,9,9,10,10,9,7,4,0,-4,-5,20,12,9,10,18,21,23,26,35,40,41,37,22,6,1,1,1,1,1,1,1,3,6,11,16,16,12,10,10,10,10,8,6,2,-1,-5,-5,13,9,9,12,19,20,20,21,29,39,41,31,12,3,1,1,1,1,1,1,2,4,9,14,17,14,12,11,10,10,9,7,4,0,-4,-5,-6,9,8,9,12,19,17,17,17,22,35,37,22,5,1,1,1,1,1,1,1,3,6,11,16,16,12,11,11,10,10,8,6,2,-1,-5,-6,-6,7,8,9,12,16,14,15,15,17,27,28,13,2,1,1,1,1,1,1,2,4,9,14,17,14,12,11,10,10,9,7,4,0,-4,-5,-6,-6,6,8,9,12,14,12,13,14,14,20,19,6,1,1,1,1,1,1,1,3,6,11,16,16,12,11,11,10,10,8,6,2,-2,-5,-6,-6,-6],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
