###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    Shape(
      appearance=Appearance(
        material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0,0.05,0)),
        texture=ImageTexture(url=['../../images/4/world14-8.jpg'],repeatS=False,repeatT=False)),
      geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(67.45833802716578,-0.04166130228196607,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=22,xSpacing=1.0714287,zDimension=24,zSpacing=0.48913044,height=[-2956,-2884,-2876,-2554,-1219,-847,-543,-285,-247,-291,-180,-4,-2,380,792,960,541,338,333,313,151,-3,-3095,-2934,-2864,-1983,-1286,-1008,-400,-396,-401,-436,-322,-42,160,380,788,614,536,463,395,343,49,27,-3274,-3075,-3025,-1665,-1413,-1064,-632,-351,-361,-252,-265,-260,3,280,590,685,638,427,481,360,60,60,-3516,-3218,-2236,-1547,-1400,-1161,-1050,-643,-312,-311,-373,-401,-8,3,1308,1000,545,621,466,305,331,247,-3607,-3278,-2065,-1323,-1277,-1348,-1391,-1376,-914,-431,-281,-200,-312,-263,420,540,1110,1100,828,459,343,368,-3676,-3157,-1964,-1410,-1213,-1191,-1377,-1251,-1955,-1412,-254,-168,-94,-218,-3,420,913,725,742,580,326,291,-3492,-2954,-2724,-2132,-1582,-1631,-1950,-1723,-2553,-2294,-934,-162,-228,1,-18,-1,720,1150,694,569,549,375,-1792,-2430,-3024,-3051,-3053,-3053,-2969,-3023,-2825,-2941,-2858,-1841,-422,-122,100,180,81,256,567,759,734,490,-2758,-3135,-3157,-3259,-3252,-3216,-3190,-3138,-3094,-3028,-2990,-2961,-2855,-2553,-538,-8,-5,8,609,603,1021,652,-2940,-3364,-3245,-3214,-3248,-3271,-3201,-3164,-3123,-2952,-2930,-2924,-2853,-2746,-2433,-1692,-191,-237,-47,239,581,689,-3062,-3158,-3180,-3232,-3194,-3215,-3220,-3071,-3019,-2838,-2850,-2876,-2747,-2674,-2507,-2243,-1675,-176,478,-2,-57,431,-3332,-3249,-3206,-3182,-3233,-3169,-3139,-3114,-2974,-2770,-2706,-2686,-2592,-2482,-2344,-2102,-1353,-456,-257,-180,-215,-154,-3137,-2806,-3004,-3113,-3136,-3160,-3067,-2984,-2834,-2683,-2588,-2452,-2296,-2132,-1994,-1832,-839,-282,-231,-203,-181,-196,-2506,-2627,-2810,-2724,-3065,-2980,-3077,-2887,-2743,-2595,-2428,-2264,-2100,-1822,-1408,-932,-372,-281,-273,-257,-342,-348,-1999,-2616,-2313,-2082,-2694,-2655,-2769,-2719,-2617,-2460,-2229,-2068,-1821,-1474,-1166,-773,-378,-343,-337,-318,-334,-332,-2722,-2287,-2150,-1526,-2994,-2386,-2424,-2564,-2465,-2323,-2156,-1946,-1668,-1315,-876,-442,-408,-344,-354,-396,-385,-398,-2717,-2739,-2623,-2312,-2455,-1966,-2725,-2227,-2409,-2327,-2172,-1935,-1624,-1281,-793,-477,-448,-443,-421,-434,-453,-436,-3135,-2817,-2839,-3211,-3047,-2998,-2507,-2216,-2476,-2382,-2268,-2087,-1868,-1544,-1085,-463,-412,-336,-311,-437,-477,-478,-3366,-2870,-3404,-2742,-3165,-2959,-2694,-2544,-2279,-2608,-2381,-2244,-2099,-1963,-1759,-1299,-268,-189,-64,-86,-296,-246,-3635,-3695,-3695,-3588,-3675,-3216,-3041,-1975,-2536,-2511,-2493,-2396,-2339,-2183,-1796,-872,-211,-172,-82,-43,-77,-95,-3658,-3647,-2077,-2397,-3205,-3125,-2662,-2447,-3401,-2520,-2482,-2346,-2072,-1651,-1001,-297,-198,-147,-31,-35,-41,-51,-3515,-1894,-2874,-2942,-3234,-2701,-2570,-2728,-2254,-2348,-2346,-2150,-1764,-1142,-392,-371,-258,-188,-82,-55,-44,-45,-2065,-2907,-3129,-3241,-2984,-2807,-2171,-2699,-2246,-2290,-2182,-2054,-1723,-1206,-363,-344,-280,-286,-216,-192,-189,-109,-1972,-2590,-3176,-3230,-3216,-2838,-2447,-2956,-2317,-2227,-2101,-2110,-1748,-1239,-493,-292,-196,-292,-247,-216,-199,-143],
        geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(0.0,0.0,-6378137.0),geoSystem=['GDC'])))])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
