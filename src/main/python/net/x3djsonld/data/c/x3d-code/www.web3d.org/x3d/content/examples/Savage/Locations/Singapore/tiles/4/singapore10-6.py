###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_106',geoSystem=['GDC'],position=(1.3956292231378735,103.77655544367725,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.3956292231378735,103.77655544367725,0.0),range=4101.627,child1Url=['../../tiles/5/singapore20-12.x3d'],child2Url=['../../tiles/5/singapore20-13.x3d'],child3Url=['../../tiles/5/singapore21-12.x3d'],child4Url=['../../tiles/5/singapore21-13.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore10-6.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.3868975107598795,103.76219240954823,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=45,zSpacing=3.96896E-4,height=[55,55,47,40,39,45,45,39,36,31,23,26,29,36,41,34,40,54,63,61,49,52,58,51,41,37,39,44,51,49,41,41,47,51,58,64,66,60,55,44,38,37,43,45,38,35,30,23,26,31,38,42,33,40,52,61,58,46,51,57,51,41,36,38,44,51,49,41,44,51,54,61,67,68,62,55,42,37,35,40,43,37,33,29,24,27,33,41,42,33,40,51,60,55,44,50,54,49,39,35,36,44,51,49,41,47,54,57,62,67,68,60,53,42,36,34,37,40,35,32,28,25,28,35,43,41,35,40,50,57,53,42,48,52,47,38,34,35,44,52,49,40,47,55,58,62,64,64,55,50,42,36,34,35,35,33,30,27,26,28,35,43,38,38,42,48,54,51,40,45,51,45,37,32,33,45,54,49,39,46,54,57,60,59,58,50,46,41,36,33,33,33,33,30,27,26,27,34,40,35,39,44,48,52,50,40,42,50,46,39,32,33,45,54,48,39,44,51,55,57,55,54,45,43,40,36,33,33,33,33,30,27,27,25,32,34,33,39,45,48,51,50,42,40,50,48,43,33,34,45,52,46,39,42,48,52,54,52,51,44,43,40,36,33,33,33,33,30,28,28,25,31,31,32,38,44,47,50,50,43,40,51,50,44,33,34,45,51,46,40,41,47,52,53,52,50,48,47,43,38,33,33,35,34,30,29,29,27,31,31,32,38,42,45,48,49,43,39,50,50,42,32,36,45,51,45,41,42,49,54,56,53,50,49,50,47,40,34,35,38,35,31,30,31,30,32,31,32,38,41,43,46,47,42,38,47,49,41,32,37,43,49,44,41,42,49,54,56,54,52,46,50,50,45,38,39,42,38,32,31,34,34,34,34,32,37,42,42,43,44,40,35,41,44,40,34,37,40,45,41,38,41,48,53,56,57,55,40,44,48,47,40,42,46,39,33,32,37,37,38,37,33,37,42,42,42,41,38,35,38,41,38,37,37,37,41,39,38,40,46,52,56,57,57,31,29,38,44,41,44,47,41,35,33,39,40,42,40,34,37,41,43,44,40,38,35,38,39,38,37,37,36,35,37,38,38,43,50,53,56,56,23,19,31,43,41,45,48,42,37,35,40,43,46,44,35,38,41,44,44,41,40,38,39,40,40,39,36,35,31,34,37,37,42,48,51,54,56,19,16,31,44,42,44,48,45,38,34,40,45,50,48,38,39,40,44,43,43,46,43,44,47,46,43,36,34,31,32,34,37,43,48,50,52,53,19,17,34,46,43,43,48,47,39,34,39,48,55,52,42,40,40,44,43,46,50,46,47,53,52,47,37,34,30,30,31,37,44,49,50,50,51,26,27,41,50,45,41,47,49,40,35,39,49,59,56,46,41,40,42,43,45,48,47,50,55,55,50,41,37,28,28,29,36,45,50,51,50,50,33,34,47,53,46,41,47,50,42,37,39,50,63,58,49,43,42,42,42,43,45,47,51,54,56,53,45,39,27,27,29,35,45,50,50,49,49,37,36,45,53,46,42,48,52,46,40,39,52,63,58,48,46,45,42,37,37,40,44,47,49,52,50,48,41,29,27,30,33,43,48,47,46,46,40,37,46,54,47,43,49,53,50,43,40,52,63,57,49,48,49,43,34,33,35,40,43,45,48,47,49,42,31,28,30,31,40,46,44,42,43,36,41,52,56,49,45,49,55,52,44,41,51,61,58,51,50,50,43,35,34,33,36,40,40,45,42,44,38,32,31,31,33,39,40,40,41,42,35,44,56,59,52,48,49,56,54,45,41,49,58,59,53,52,50,43,36,35,33,33,38,36,41,38,40,36,33,33,32,35,37,36,36,39,42,41,45,59,62,56,48,47,56,55,45,40,48,57,60,56,53,48,42,38,37,37,36,37,35,38,35,37,36,35,36,36,37,37,36,36,38,39,47,48,60,65,60,50,47,56,55,46,40,48,56,61,59,54,46,42,41,40,42,41,38,35,36,33,36,38,38,39,40,39,36,35,36,36,36,57,56,61,66,63,54,51,56,55,46,42,50,59,64,63,56,48,45,42,42,46,45,42,37,38,35,38,43,43,43,40,38,34,33,34,35,37,65,62,61,64,63,58,54,56,55,48,45,52,61,66,67,58,50,48,44,44,50,49,46,40,40,37,41,47,47,45,40,38,34,31,31,35,36,69,62,56,57,59,59,58,56,53,49,47,52,60,66,67,59,52,49,43,43,52,51,49,44,43,41,46,50,49,44,39,38,35,32,31,32,33,70,61,51,50,55,59,59,54,50,49,49,51,59,66,67,60,54,50,43,42,52,51,50,48,47,45,50,53,51,44,39,39,36,32,30,30,30,63,55,46,45,51,53,48,41,41,45,50,52,60,66,68,63,58,53,46,41,48,46,49,49,49,48,52,54,51,44,40,42,38,32,30,29,30,55,49,42,41,46,47,35,25,30,37,48,54,61,67,69,66,61,55,50,40,44,41,46,50,51,50,53,53,50,44,41,45,38,32,30,30,31,48,44,39,37,44,43,24,9,11,18,38,52,61,68,70,66,62,57,54,40,40,36,43,49,51,51,52,52,48,42,42,41,36,32,30,31,32,41,39,35,35,42,41,17,-4,-6,0,27,49,61,69,70,66,61,58,56,41,36,31,40,48,50,50,51,51,46,41,41,37,35,33,31,32,34,36,35,33,35,43,40,14,-8,-13,-8,18,46,61,68,69,62,56,56,57,43,33,28,39,48,48,48,48,46,42,36,37,36,37,38,35,36,37,32,32,31,35,44,40,17,-6,-17,-13,10,43,61,67,66,59,51,53,55,45,31,28,38,47,46,45,44,42,38,33,32,36,41,43,40,40,41,29,30,29,34,43,41,23,-1,-18,-16,5,40,62,66,64,57,48,48,52,45,32,28,35,44,45,44,42,39,35,33,33,38,45,47,44,43,43,28,29,29,32,42,44,32,3,-18,-17,0,36,61,65,62,55,48,45,48,44,33,28,31,40,44,44,39,37,35,35,36,41,49,51,47,45,43,27,29,31,34,42,47,37,7,-19,-18,-3,30,59,64,60,56,50,45,44,42,33,29,31,39,43,43,39,37,37,39,41,44,50,53,50,44,42,27,29,34,38,43,50,41,8,-18,-19,-7,24,56,63,57,58,54,48,43,39,32,29,31,39,42,43,39,39,42,43,45,46,50,52,50,43,40,29,32,38,42,47,51,40,9,-16,-15,-6,24,56,62,56,62,60,54,46,38,31,28,31,38,42,43,40,43,47,47,49,48,49,51,49,41,38,32,34,41,46,50,50,37,8,-10,-11,-3,27,59,61,55,66,65,60,51,39,29,27,30,37,43,43,41,47,51,51,51,51,49,49,46,38,35,32,35,42,47,50,47,35,14,-1,-6,0,31,62,59,53,66,67,65,54,40,30,26,29,36,42,43,41,48,54,53,51,50,48,48,44,38,35,31,34,40,46,48,44,35,24,11,0,3,34,64,57,50,63,67,67,55,43,32,25,29,35,42,44,42,49,54,54,49,48,47,46,43,38,37,30,32,37,42,44,41,38,36,28,11,9,36,66,58,49,57,63,65,55,44,32,25,29,35,42,46,45,50,54,54,47,46,46,45,43,39,38,30,28,32,37,39,39,42,47,45,29,17,36,66,61,48,51,55,59,53,45,33,26,29,35,44,48,49,51,54,53,46,45,45,44,42,40,40,29,24,27,33,36,39,44,53,56,46,29,39,64,62,50,48,50,54,53,46,34,26,30,38,46,50,52,52,53,52,44,43,43,42,41,40,39],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
