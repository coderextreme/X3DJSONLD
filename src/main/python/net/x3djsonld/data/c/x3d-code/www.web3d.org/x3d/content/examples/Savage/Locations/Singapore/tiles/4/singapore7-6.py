###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_76',geoSystem=['GDC'],position=(1.3432389488699097,103.77655544367725,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.3432389488699097,103.77655544367725,0.0),range=4101.627,child1Url=['../../tiles/5/singapore14-12.x3d'],child2Url=['../../tiles/5/singapore14-13.x3d'],child3Url=['../../tiles/5/singapore15-12.x3d'],child4Url=['../../tiles/5/singapore15-13.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore7-6.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.3345072364919157,103.76219240954823,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[33,43,48,44,37,37,41,40,38,38,41,39,32,30,33,36,35,35,34,31,30,29,33,32,24,27,23,28,23,19,18,16,14,17,22,24,24,36,46,49,44,37,38,43,43,39,39,42,39,32,31,31,35,35,34,33,30,27,26,29,28,21,25,21,23,21,19,18,17,15,18,24,27,26,37,45,48,43,37,38,44,44,40,40,42,40,34,34,31,35,35,36,32,29,25,24,27,25,20,24,21,21,21,20,18,18,17,21,27,29,27,35,42,45,41,35,36,43,43,39,41,41,41,36,37,33,35,35,38,32,29,24,21,26,24,21,26,23,22,22,22,19,18,18,23,30,31,28,34,39,42,40,34,36,43,43,40,42,41,42,39,40,35,36,37,39,32,29,22,21,25,23,22,27,25,24,23,23,21,19,19,24,32,32,29,36,36,39,39,36,39,43,44,43,44,43,43,41,42,37,38,40,39,32,28,21,21,22,21,24,27,25,26,25,25,22,19,19,24,32,32,30,36,35,38,40,38,42,45,45,45,45,44,43,42,44,38,40,41,36,29,27,22,23,20,20,25,26,25,28,27,26,23,20,19,24,32,32,30,34,34,37,41,41,44,47,48,46,44,42,41,43,44,39,41,40,32,25,25,26,26,21,20,25,25,26,30,28,27,22,20,20,25,31,32,30,33,35,37,42,43,45,48,49,46,42,40,40,43,44,39,40,38,29,22,24,29,28,22,20,23,25,28,32,29,27,22,21,21,25,31,31,30,34,38,38,42,44,46,49,48,44,41,38,38,43,44,37,36,34,26,21,24,30,28,24,21,22,25,32,34,29,26,24,21,20,26,31,30,29,36,40,40,42,44,47,49,47,43,39,36,36,42,42,34,31,30,24,21,25,29,28,24,22,22,25,34,35,28,26,25,21,20,27,32,30,29,38,43,42,44,46,48,48,46,41,38,35,34,38,38,32,28,26,21,20,27,29,28,24,23,22,25,34,34,28,27,27,22,20,27,33,32,30,37,43,43,45,47,48,48,46,41,37,33,31,34,34,30,27,23,21,21,29,29,28,25,25,23,25,32,33,28,28,28,23,21,27,34,34,32,34,38,41,46,49,48,48,47,42,36,31,29,30,31,29,26,21,22,25,30,30,29,25,25,23,25,30,33,30,31,29,23,21,27,34,36,35,32,34,39,46,50,48,48,49,44,37,30,27,28,30,30,26,20,25,30,30,31,31,27,27,24,25,29,33,33,33,30,22,21,27,34,37,37,34,35,39,48,51,48,48,51,48,42,32,26,28,30,31,29,23,28,38,29,33,34,30,30,26,26,30,34,34,34,30,22,22,28,34,37,38,38,38,40,48,50,46,47,51,51,46,34,26,29,32,33,32,26,31,44,29,36,37,33,34,30,29,32,36,35,34,30,22,23,29,35,38,39,41,41,41,44,45,44,46,49,49,46,33,28,31,34,36,35,28,32,42,31,39,39,37,37,34,34,35,37,37,34,30,23,23,30,37,41,41,44,46,43,40,42,44,45,45,46,43,32,30,33,37,38,37,30,32,37,34,41,40,40,40,39,40,39,38,38,35,30,25,24,31,40,44,43,46,49,48,42,42,45,45,44,42,39,31,32,36,39,40,37,31,32,34,37,42,39,42,41,41,46,45,40,39,36,30,28,27,32,43,47,45,46,50,52,48,46,47,46,44,40,36,31,34,39,40,40,36,30,31,31,40,43,37,42,42,42,53,51,44,40,36,31,31,29,34,46,49,48,44,51,55,52,49,50,48,45,40,33,31,37,40,41,40,35,29,30,32,44,46,37,42,43,43,58,57,48,42,36,33,35,33,36,46,49,49,41,50,56,54,52,52,49,46,40,32,32,39,41,41,39,34,27,28,34,47,49,39,41,45,46,61,62,51,44,36,37,39,36,38,45,49,49,39,49,55,56,54,52,49,47,41,32,34,40,41,40,37,31,26,27,36,50,50,41,39,47,51,64,62,52,44,38,41,43,38,37,44,48,48,39,48,54,56,54,51,49,47,41,34,35,40,40,38,34,28,24,29,38,51,50,45,35,47,57,65,58,50,42,40,46,47,39,36,43,48,48,40,48,54,55,53,50,47,45,40,37,37,39,39,35,32,28,25,29,37,48,49,47,35,45,58,64,56,49,42,41,48,49,41,36,43,48,48,42,49,52,50,50,48,45,41,39,40,39,38,37,32,32,30,28,29,35,44,47,48,37,41,54,62,55,48,42,41,47,50,43,38,44,49,51,40,45,45,44,45,46,43,39,40,46,42,38,34,31,33,33,30,31,36,42,48,52,41,40,52,60,54,47,43,44,48,50,44,39,45,52,55,35,37,37,37,39,42,41,39,43,52,46,37,32,32,35,35,33,33,37,42,51,58,45,42,51,58,54,47,46,49,49,50,45,39,46,56,59,33,33,33,33,35,40,41,39,45,56,47,36,32,33,36,37,37,36,39,45,55,63,49,43,51,59,56,49,49,54,52,51,46,40,46,57,61,34,36,34,32,34,40,42,40,46,57,45,35,35,36,35,37,41,38,41,49,60,68,54,43,53,62,62,52,53,59,56,53,46,40,45,56,61,37,39,39,35,36,42,45,43,48,55,43,36,37,39,35,38,46,45,45,53,66,75,58,44,52,64,69,56,56,61,59,55,45,40,44,55,60,42,45,46,41,39,45,49,48,51,51,41,35,39,42,37,39,51,54,51,58,75,84,62,43,47,66,75,59,57,61,61,55,44,38,42,53,58,42,48,49,47,44,48,53,55,56,48,39,34,39,43,39,43,56,61,60,64,82,90,68,45,44,67,79,62,57,61,63,57,45,38,41,51,56,40,46,50,52,50,50,57,62,60,48,38,34,38,40,42,49,61,66,71,74,87,94,77,50,42,66,80,64,56,60,62,59,48,41,41,49,52,36,44,50,55,55,54,61,68,63,49,38,35,38,41,44,53,63,70,79,83,93,97,83,56,42,64,80,66,57,59,63,61,51,43,43,48,50,30,44,50,54,58,60,67,72,65,49,38,36,40,46,46,56,62,72,85,92,99,98,84,61,46,62,79,67,61,61,65,63,54,47,46,49,50,28,44,52,56,63,67,73,74,64,49,39,39,44,53,51,60,65,74,91,100,103,97,82,63,49,59,76,66,63,62,65,65,58,51,49,50,52,31,47,57,60,68,76,80,74,59,47,40,44,52,64,62,63,72,75,97,108,107,90,75,60,49,56,72,62,61,61,65,67,63,54,51,52,55,35,51,62,66,75,86,87,75,55,45,42,47,59,74,75,70,80,84,107,121,115,88,70,58,49,54,67,60,59,61,64,69,66,58,52,53,56,41,56,69,76,87,95,91,76,54,46,44,49,65,84,90,82,91,103,121,143,129,91,68,58,51,53,62,58,58,62,65,70,68,60,53,53,57,45,59,72,83,95,100,93,77,55,47,46,52,70,93,104,94,98,115,135,159,140,96,70,61,54,52,58,57,58,63,65,70,68,60,52,53,56,46,58,69,82,98,100,90,75,57,48,48,56,75,99,117,105,99,118,149,162,143,101,77,68,58,51,53,55,59,63,65,69,67,58,52,50,51,44,53,62,78,96,98,87,73,58,48,49,59,79,104,128,117,103,121,157,162,144,107,86,74,62,52,51,54,60,64,66,68,64,57,54,51,50],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
