###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    Shape(
      appearance=Appearance(
        material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0,0.05,0)),
        texture=ImageTexture(url=['../../images/4/world14-9.jpg'],repeatS=False,repeatT=False)),
      geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(67.45833802716578,22.458339368270288,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=22,xSpacing=1.0714287,zDimension=24,zSpacing=0.48913044,height=[-3,-100,-37,-2,83,122,212,201,121,97,130,88,-9,-6,-2,-29,-81,74,131,112,28,18,27,-1,-24,17,129,136,229,260,216,145,119,85,-7,-13,-41,-118,-102,103,117,76,25,36,60,41,49,45,185,223,306,302,238,146,96,85,-85,-17,-92,84,44,-47,-29,40,13,53,247,148,77,181,201,217,210,363,380,185,44,-48,69,129,147,185,258,216,-51,-24,-36,-75,368,225,186,164,286,188,287,239,340,506,202,114,261,198,191,155,239,243,114,-65,-58,12,291,283,258,195,257,210,256,308,199,134,428,426,204,246,247,205,280,210,-77,-126,-56,9,375,350,367,318,260,407,329,145,113,331,321,239,283,240,248,234,24,-148,-191,-152,-45,-33,490,445,438,340,393,220,248,174,78,117,199,144,272,268,293,-95,-171,-173,-176,-79,10,-133,652,419,433,420,375,166,120,165,184,256,113,38,266,50,-246,-293,-212,-90,-131,-173,-137,-187,689,764,471,315,393,320,201,57,110,1,164,-153,-166,-135,-119,-106,-123,-147,-140,-57,-136,-130,431,680,400,7,568,310,90,140,-14,-117,-203,-230,-204,-156,-129,-144,-185,-190,-154,-71,-98,-109,-154,160,200,353,320,40,440,280,-63,-261,-257,-209,-194,-174,-164,-211,-258,-228,-150,-47,-64,-74,-196,-317,-326,-214,-35,-119,-174,-289,-343,-263,-237,-224,-189,-166,-191,-256,-323,-297,-196,-180,-131,-127,-348,-391,-328,-274,-304,-327,-257,-269,-312,-320,-293,-270,-225,-237,-250,-307,-390,-359,-312,-281,-245,-156,-332,-304,-274,-264,-240,-229,-258,-269,-315,-294,-269,-260,-243,-236,-244,-257,-290,-337,-303,-255,-253,-273,-398,-378,-347,-282,-281,-290,-329,-291,-288,-274,-267,-287,-246,-226,-219,-246,-306,-337,-343,-292,-271,-276,-436,-399,-350,-400,-423,-379,-296,-288,-297,-284,-248,-229,-235,-224,-220,-232,-255,-293,-290,-320,-329,-350,-478,-440,-436,-456,-436,-400,-376,-384,-375,-345,-288,-306,-266,-261,-239,-225,-230,-261,-291,-336,-363,-347,-246,-363,-391,-432,-388,-402,-385,-369,-326,-275,-279,-296,-267,-268,-243,-215,-215,-232,-236,-271,-327,-340,-95,-100,-186,-241,-303,-367,-363,-382,-336,-243,-180,-235,-241,-273,-228,-142,-149,-165,-191,-191,-288,-304,-51,-87,-132,-147,-205,-243,-305,-357,-356,-338,-219,-168,-172,-176,-173,-195,-190,-188,-191,-241,-300,-274,-45,-59,-94,-123,-127,-218,-253,-310,-344,-325,-297,-223,-168,-171,-184,-198,-214,-251,-241,-324,-298,-307,-109,-41,-51,-80,-124,-191,-96,-234,-303,-303,-297,-300,-295,-271,-262,-242,-241,-240,-286,-288,-314,-255,-143,-52,-56,-75,-117,-156,-149,-250,-300,-308,-285,-259,-284,-278,-279,-256,-230,-236,-258,-286,-289,-246],
        geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(0.0,0.0,-6378137.0),geoSystem=['GDC'])))])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
