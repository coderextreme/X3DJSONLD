###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoLOD(center=(41.548943435123995,-71.30755533508956,0.0),range=12300.69,child1Url=['../../tiles/4/newport8-10.x3d'],child2Url=['../../tiles/4/newport8-11.x3d'],child3Url=['../../tiles/4/newport9-10.x3d'],child4Url=['../../tiles/4/newport9-11.x3d'],
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(41.5,-71.5,0),geoSystem=['GDC']),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0,0.05,0)),
            texture=ImageTexture(url=['../../images/3/newport4-5.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(41.50056356421022,-71.35152298924505,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=55,xSpacing=0.0016284316,zDimension=52,zSpacing=0.0018972498,height=[-35,-36,-39,-40,-28,-12,0,0,-1,-2,-10,-13,-12,-14,-10,-9,-6,-6,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-36,-37,-39,-37,-28,-19,-1,0,-2,-7,-11,-11,-7,-14,-8,-7,-6,-5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-37,-39,-39,-34,-27,-26,-8,-4,-5,-8,-11,-9,-4,-12,-5,-3,-1,-3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-38,-40,-38,-33,-26,-26,-18,-14,-13,-13,-11,-8,-12,-10,-3,0,-4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-34,-40,-38,-33,-27,-24,-25,-19,-18,-14,-8,-10,-11,-3,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-30,-37,-37,-33,-29,-25,-26,-22,-19,-12,-8,-8,-10,-4,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-32,-35,-36,-33,-31,-26,-26,-25,-22,-14,-13,-11,-9,-5,0,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-35,-37,-36,-34,-31,-28,-27,-27,-24,-19,-15,-13,-11,-7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-33,-35,-35,-34,-33,-30,-29,-29,-27,-21,-16,-12,-9,-6,-1,0,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-30,-28,-34,-34,-33,-32,-30,-30,-29,-22,-17,-10,-7,-4,-2,-2,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-25,-26,-28,-32,-33,-32,-31,-31,-33,-26,-18,-11,-9,-1,0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-22,-23,-25,-27,-31,-31,-31,-32,-33,-31,-25,-18,-15,-7,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-22,-21,-22,-24,-27,-30,-30,-31,-32,-34,-33,-28,-22,-12,-1,0,0,0,-1,-5,-6,-5,-3,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-23,-22,-22,-22,-25,-29,-32,-31,-31,-33,-33,-32,-29,-22,-17,-12,-8,-4,-7,-9,-11,-8,-8,-6,-3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-22,-22,-22,-20,-19,-22,-31,-33,-32,-32,-32,-31,-29,-26,-21,-19,-16,-15,-13,-11,-11,-10,-8,-7,-3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-22,-21,-21,-19,-12,-8,-15,-26,-31,-32,-31,-30,-27,-24,-20,-18,-16,-14,-12,-11,-11,-4,-2,-9,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-22,-20,-20,-14,0,0,-13,-32,-36,-36,-32,-30,-27,-23,-19,-17,-15,-14,-10,-11,-9,-10,-10,-10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-20,-21,-20,-12,0,0,-9,-26,-31,-37,-34,-30,-28,-23,-19,-16,-15,-15,-11,-12,-12,-11,-10,-9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-20,-19,-17,-12,0,0,-9,-26,-26,-33,-34,-31,-29,-24,-20,-17,-16,-16,-15,-13,-12,-10,-6,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-19,-18,-16,-11,0,0,-13,-21,-22,-28,-31,-30,-28,-25,-21,-18,-17,-16,-17,-15,-11,-8,-7,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-19,-18,-17,-12,0,-1,-15,-18,-18,-24,-29,-28,-26,-25,-22,-19,-17,-17,-17,-18,-12,-9,-7,-7,-3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-18,-18,-18,-18,-1,-9,-15,-14,-15,-19,-23,-25,-25,-24,-23,-20,-18,-17,-17,-18,-16,-12,-9,-7,-5,-3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-18,-18,-18,-19,-18,-16,-12,-12,-14,-16,-20,-22,-23,-23,-23,-21,-19,-17,-16,-17,-17,-14,-11,-8,-7,-5,-3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-18,-18,-18,-18,-15,-13,-12,-12,-14,-15,-18,-20,-21,-22,-22,-22,-20,-18,-17,-16,-16,-16,-13,-9,-6,-4,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-17,-18,-17,-17,-15,-13,-12,-12,-13,-15,-17,-20,-20,-21,-22,-23,-22,-20,-17,-16,-16,-16,-16,-12,-6,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-17,-17,-17,-16,-15,-13,-13,-13,-13,-14,-16,-18,-20,-21,-21,-22,-23,-21,-19,-17,-16,-16,-16,-15,-8,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-16,-16,-16,-15,-14,-13,-13,-13,-13,-14,-15,-17,-18,-20,-21,-22,-23,-23,-21,-18,-16,-16,-16,-16,-13,-4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-16,-15,-15,-15,-14,-13,-13,-12,-13,-13,-15,-16,-18,-19,-20,-21,-22,-24,-23,-20,-16,-16,-15,-15,-16,-9,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-15,-14,-14,-13,-13,-12,-12,-12,-12,-13,-14,-15,-17,-18,-20,-21,-21,-24,-24,-22,-17,-16,-15,-14,-16,-14,-5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-15,-13,-13,-13,-12,-12,-12,-11,-11,-13,-13,-14,-15,-17,-19,-19,-20,-22,-25,-25,-20,-17,-15,-14,-14,-15,-12,-6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-14,-13,-12,-12,-12,-12,-11,-11,-11,-12,-13,-14,-14,-15,-17,-18,-19,-20,-23,-27,-24,-18,-16,-14,-14,-13,-13,-10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-14,-13,-12,-12,-12,-11,-11,-11,-11,-11,-12,-13,-16,-14,-16,-19,-19,-21,-22,-29,-28,-21,-16,-15,-14,-14,-13,-12,-10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-13,-12,-11,-11,-11,-11,-11,-10,-10,-10,-11,-11,-11,-14,-15,-18,-19,-21,-22,-26,-31,-25,-19,-15,-15,-14,-14,-13,-11,-7,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-12,-11,-11,-11,-11,-10,-10,-10,-10,-10,-13,-8,-9,-15,-15,-16,-18,-21,-23,-24,-31,-31,-21,-16,-15,-15,-15,-14,-12,-10,-6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-11,-11,-10,-10,-10,-10,-10,-10,-9,-10,-14,-10,-1,-12,-15,-15,-16,-19,-22,-24,-28,-32,-25,-18,-16,-17,-17,-16,-14,-11,-8,-4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-11,-10,-10,-10,-10,-10,-9,-9,-9,-9,-10,-12,-7,-6,-14,-19,-15,-16,-19,-23,-27,-31,-32,-21,-17,-17,-17,-16,-15,-12,-9,-5,-3,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-10,-10,-10,-10,-9,-9,-9,-9,-9,-8,-9,-9,-9,-9,-6,-14,-15,-15,-17,-21,-26,-31,-32,-27,-19,-17,-17,-16,-14,-12,-9,-5,-3,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-10,-9,-9,-9,-9,-9,-9,-9,-8,-8,-8,-8,-8,-9,-10,-11,-14,-15,-16,-18,-24,-30,-32,-31,-22,-20,-16,-14,-12,-5,-4,-4,-3,-3,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-9,-9,-9,-9,-9,-8,-8,-8,-8,-8,-8,-8,-8,-8,-9,-9,-10,-13,-15,-17,-21,-30,-33,-32,-28,-22,-16,-10,-9,-5,-5,-4,-4,-4,-4,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-9,-9,-9,-9,-9,-9,-8,-8,-8,-8,-8,-8,-8,-8,-8,-9,-9,-10,-13,-15,-20,-28,-34,-31,-29,-24,-18,-10,-7,-5,-4,-6,-6,-9,-10,-8,-8,-6,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-9,-9,-9,-9,-9,-9,-9,-9,-8,-8,-8,-8,-8,-8,-9,-10,-10,-11,-13,-14,-18,-26,-35,-34,-29,-25,-20,-14,-7,-3,-2,-4,-5,-7,-13,-11,-9,-8,-6,-3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-9,-9,-9,-9,-9,-9,-9,-9,-8,-8,-8,-8,-8,-5,-3,-2,-2,-5,-8,-11,-14,-20,-29,-33,-31,-26,-22,-16,-7,-4,-1,0,-2,-4,-10,-15,-10,-10,-9,-5,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-9,-9,-9,-9,-9,-9,-9,-10,-10,-9,-8,-8,-4,-1,0,0,0,0,-3,-5,-9,-14,-24,-26,-29,-26,-21,-19,-11,-5,-1,0,0,-2,-12,-14,-14,-13,-9,-5,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-8,-8,-9,-9,-9,-9,-10,-10,-11,-10,-9,-5,-1,0,0,0,0,0,0,-1,-1,-4,-14,-23,-29,-28,-19,-17,-15,-10,-3,-1,0,-1,-12,-12,-13,-13,-10,-4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-8,-8,-9,-9,-9,-10,-10,-12,-14,-10,-5,-1,0,0,0,0,0,0,0,0,0,0,-2,-18,-28,-33,-29,-18,-15,-15,-8,0,0,0,-13,-11,-12,-15,-10,-4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-8,-8,-9,-9,-9,-10,-11,-15,-12,-7,-1,0,0,0,0,0,0,0,0,0,0,0,0,-7,-23,-30,-33,-27,-21,-16,-10,-1,0,-4,-14,-10,-12,-14,-10,-3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-8,-8,-9,-9,-9,-10,-11,-15,-11,-4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-15,-26,-34,-31,-28,-20,-10,-4,-6,-10,-9,-9,-11,-14,-11,-4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-8,-8,-8,-9,-9,-10,-12,-13,-10,-3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3,-17,-29,-33,-29,-18,-7,-6,-12,-12,-11,-11,-11,-14,-12,-3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-8,-8,-9,-9,-9,-10,-12,-13,-10,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-7,-20,-29,-32,-21,-12,-11,-16,-16,-13,-13,-13,-13,-12,-4,-3,-3,0,0,0,0,0,0,0,0,0,0,0,0,0,-8,-8,-9,-9,-9,-10,-11,-13,-10,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-12,-24,-32,-27,-21,-19,-22,-18,-16,-15,-15,-14,-13,-5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-7,-8,-8,-8,-9,-9,-11,-13,-11,-4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3,-18,-29,-28,-20,-19,-24,-22,-19,-18,-17,-15,-14,-7,-1,-2,-1,0,0,0,0,0,0,0,0,0,0,0,0,-7,-8,-8,-8,-8,-9,-11,-13,-11,-5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-17,-29,-28,-19,-20,-24,-22,-19,-18,-17,-15,-14,-7,-1,-2,-1,-1,0,0,0,0,0,0,0,0,0,0,0],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
