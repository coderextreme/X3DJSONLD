###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    Shape(
      appearance=Appearance(
        material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
        texture=ImageTexture(url=['../../images/5/singapore27-11.jpg'],repeatS=False,repeatT=False)),
      geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.4480194974058374,103.74782937541922,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=3.9897318E-4,zDimension=22,zSpacing=4.1579583E-4,height=[-3,-1,0,1,3,5,6,6,5,5,5,7,13,27,45,62,75,81,81,80,78,77,74,70,65,59,52,45,38,30,24,19,16,13,12,11,11,-8,-5,-2,0,2,4,6,6,6,5,5,4,5,14,28,45,63,75,79,80,79,77,74,71,66,60,52,45,38,30,24,19,16,13,12,12,12,-8,-5,-3,0,1,4,6,6,6,6,5,5,5,7,13,26,44,62,75,81,80,78,75,72,67,61,53,45,37,30,24,18,15,13,12,12,12,-9,-6,-3,0,2,4,6,6,7,6,6,5,5,4,5,14,28,46,64,75,79,79,76,73,68,62,53,45,37,29,23,17,15,13,12,12,12,-10,-6,-3,0,2,5,6,7,7,7,6,6,5,5,5,7,13,27,45,61,74,80,77,74,69,62,53,45,36,28,22,16,14,13,12,12,13,-11,-7,-3,0,4,6,7,7,7,7,7,6,6,5,5,4,5,13,28,45,63,75,76,75,70,63,54,45,36,28,21,15,13,13,12,12,13,-13,-8,-3,0,5,7,8,8,7,7,7,7,6,6,5,5,5,7,14,26,44,60,72,78,71,64,55,46,36,26,20,15,13,12,13,12,11,-13,-7,-2,2,7,7,8,8,8,7,7,7,7,6,6,5,5,4,5,12,27,44,62,73,71,66,57,46,35,25,19,13,12,12,12,12,10,-13,-5,0,4,7,8,8,8,8,8,7,7,7,7,6,6,5,5,5,7,14,24,42,57,68,72,59,45,34,24,16,11,12,12,11,10,8,-10,-1,5,8,8,8,8,8,8,8,8,8,8,7,7,6,6,5,5,5,5,11,24,39,58,67,54,40,30,21,14,9,11,12,10,8,7,-3,4,11,12,11,9,8,8,8,8,8,8,8,8,8,7,6,6,5,5,5,7,13,21,32,39,33,27,20,14,9,7,8,9,8,7,6,4,11,17,16,14,11,8,8,8,8,8,9,9,9,9,9,7,6,6,6,5,5,5,7,12,15,16,16,12,9,6,5,6,7,7,7,6,11,16,17,17,16,13,11,9,8,8,8,9,10,11,11,11,10,9,7,6,6,6,7,8,11,14,16,17,14,11,7,4,5,5,5,6,6,17,18,18,18,17,15,13,11,8,8,8,9,9,11,13,13,13,11,8,7,6,7,9,10,11,13,16,17,14,12,7,4,3,3,4,5,6,15,18,19,18,18,16,14,12,10,8,8,8,9,11,13,15,15,15,12,11,11,11,11,11,12,13,13,12,10,8,5,4,4,4,5,6,7,12,16,19,19,18,17,16,13,11,9,8,8,9,11,13,16,18,18,16,15,15,15,14,13,12,11,10,8,7,6,5,5,5,6,6,6,7,11,13,16,18,18,18,17,14,11,9,9,9,10,12,16,19,21,21,19,17,15,14,13,13,12,11,9,8,7,8,8,9,9,9,9,10,10,10,11,13,16,19,18,18,15,11,11,11,11,11,14,18,22,24,24,23,20,16,14,13,13,12,12,9,8,9,10,12,13,13,13,14,14,13,10,11,11,13,15,15,15,14,13,14,14,14,15,18,22,26,27,28,27,26,21,18,18,17,16,13,11,9,10,11,15,18,20,21,20,20,18,12,10,9,10,11,12,12,13,15,17,17,17,18,21,26,29,31,31,32,31,26,23,23,22,19,15,12,10,11,12,18,24,27,29,27,25,22,11,11,12,13,14,15,15,16,18,19,19,19,19,22,28,32,33,34,33,31,27,24,23,21,18,15,12,10,11,13,18,23,27,30,29,27,24,10,12,14,17,19,20,19,19,20,21,21,20,20,23,29,34,36,37,34,32,28,25,23,20,18,15,11,9,11,14,18,22,27,31,30,29,27],
        geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])))])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
