###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    Shape(
      appearance=Appearance(
        material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
        texture=ImageTexture(url=['../../images/5/singapore27-10.jpg'],repeatS=False,repeatT=False)),
      geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.4480194974058374,103.7334663412902,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=36,xSpacing=4.103724E-4,zDimension=22,zSpacing=4.1579583E-4,height=[5,6,6,7,7,7,7,7,7,7,7,7,8,9,10,10,10,10,10,7,2,-2,-6,-10,-13,-15,-15,-15,-14,-13,-12,-11,-9,-8,-5,-3,5,5,6,6,7,7,8,7,7,6,6,7,7,8,7,6,4,2,1,-1,-6,-11,-15,-19,-21,-22,-21,-20,-19,-18,-17,-15,-14,-12,-10,-8,5,5,5,6,6,7,7,7,7,7,6,7,6,5,3,0,-6,-11,-14,-17,-19,-21,-22,-22,-22,-22,-21,-20,-19,-18,-17,-16,-14,-13,-10,-8,5,5,5,5,6,6,7,7,8,7,7,6,4,2,-2,-8,-15,-20,-24,-26,-26,-25,-24,-24,-23,-22,-21,-20,-19,-18,-17,-16,-15,-13,-11,-9,5,5,5,5,5,6,6,7,7,7,7,5,2,-2,-10,-16,-21,-25,-26,-27,-26,-26,-25,-24,-24,-23,-21,-20,-19,-18,-17,-16,-15,-14,-12,-10,5,5,5,5,5,5,6,6,7,7,7,3,-1,-8,-17,-23,-26,-27,-26,-27,-27,-26,-25,-24,-24,-23,-21,-20,-19,-18,-17,-16,-15,-14,-13,-11,6,5,5,5,5,5,5,6,6,7,6,1,-7,-15,-21,-26,-26,-27,-27,-27,-27,-26,-26,-25,-24,-23,-22,-21,-19,-18,-17,-16,-15,-14,-13,-13,6,6,5,5,5,5,5,5,6,6,4,-2,-12,-20,-25,-27,-27,-27,-28,-27,-27,-26,-26,-25,-24,-23,-22,-21,-19,-18,-17,-16,-15,-15,-14,-13,6,6,6,5,5,5,5,5,4,3,1,-4,-13,-21,-25,-27,-27,-27,-27,-27,-27,-26,-26,-25,-24,-23,-22,-21,-19,-18,-17,-16,-15,-15,-15,-13,6,6,6,6,5,5,5,5,5,3,0,-4,-12,-19,-23,-26,-27,-27,-27,-27,-27,-27,-26,-25,-25,-24,-22,-21,-19,-18,-17,-16,-15,-14,-13,-10,6,6,6,6,6,5,5,6,7,6,3,-1,-7,-13,-19,-23,-25,-27,-27,-27,-27,-27,-26,-26,-25,-24,-23,-22,-20,-18,-17,-16,-15,-14,-9,-3,6,6,6,6,6,6,7,8,9,8,7,2,-1,-7,-14,-19,-23,-26,-27,-27,-27,-27,-27,-27,-25,-24,-23,-22,-20,-18,-17,-16,-15,-13,-3,4,8,7,6,6,7,8,11,11,11,11,10,7,2,-1,-7,-13,-19,-23,-25,-27,-27,-27,-27,-27,-26,-26,-23,-21,-20,-18,-17,-15,-14,-11,0,11,10,8,6,6,7,10,13,13,13,13,13,11,7,2,-1,-7,-13,-19,-22,-26,-27,-27,-27,-27,-27,-26,-24,-21,-20,-18,-16,-14,-12,-9,4,17,11,9,8,8,9,10,12,13,14,14,13,12,10,7,2,-1,-7,-13,-18,-22,-24,-26,-27,-27,-26,-26,-25,-24,-20,-16,-14,-12,-8,-4,5,15,11,10,9,9,9,10,11,12,14,14,13,13,13,11,7,2,-1,-7,-13,-18,-21,-25,-26,-26,-25,-25,-26,-25,-18,-13,-11,-9,-4,0,7,12,11,10,10,10,10,10,10,11,12,13,14,14,13,12,10,6,2,-1,-7,-12,-17,-20,-23,-25,-25,-25,-23,-21,-15,-9,-7,-4,0,4,8,11,11,11,10,10,10,9,9,9,10,11,14,14,13,13,13,11,7,2,-1,-6,-11,-16,-20,-23,-26,-25,-20,-15,-10,-5,-2,0,4,8,9,10,11,11,11,10,10,9,9,9,9,10,12,13,14,14,13,12,10,6,2,-1,-6,-11,-14,-17,-20,-20,-15,-10,-5,-1,0,2,6,9,10,10,11,11,11,11,10,9,9,8,8,9,10,11,14,14,13,13,12,10,6,2,-1,-5,-8,-11,-14,-14,-9,-5,-1,1,3,5,7,10,11,12,12,11,11,11,10,9,9,8,8,8,9,10,12,13,14,13,12,11,9,6,2,-1,-4,-8,-8,-7,-3,0,2,4,6,8,9,10,11,11,12,12,11,11,10,10,9,8,8,8,8,9,10,11,14,14,13,12,11,10,7,3,-1,-3,-2,0,2,4,5,7,8,9,9,10,10,10],
        geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])))])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
