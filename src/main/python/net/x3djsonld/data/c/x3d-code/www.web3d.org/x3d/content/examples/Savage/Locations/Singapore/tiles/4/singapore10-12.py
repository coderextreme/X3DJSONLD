###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_1012',geoSystem=['GDC'],position=(1.3956292231378735,103.94891185322548,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.3956292231378735,103.94891185322548,0.0),range=4101.627,child1Url=['../../tiles/5/singapore20-24.x3d'],child2Url=['../../tiles/5/singapore20-25.x3d'],child3Url=['../../tiles/5/singapore21-24.x3d'],child4Url=['../../tiles/5/singapore21-25.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore10-12.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.3868975107598795,103.93454881909646,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=45,zSpacing=3.96896E-4,height=[6,7,7,7,8,10,10,8,7,7,3,1,1,6,21,31,23,16,18,21,22,20,10,1,0,0,0,-1,-1,-1,-1,0,3,4,3,1,0,6,6,7,7,8,10,10,8,6,6,3,1,0,1,13,28,28,19,17,20,23,23,16,5,0,0,0,0,-1,-1,0,1,3,4,2,0,0,5,6,7,8,8,8,8,7,6,5,4,2,0,0,6,21,31,23,17,19,22,22,20,10,1,0,0,0,-1,0,0,2,4,3,1,0,0,5,6,8,9,8,8,8,7,6,5,4,2,1,0,1,13,29,28,19,18,21,23,23,16,5,0,0,0,0,0,0,3,4,3,0,0,0,6,6,8,9,8,8,8,7,6,5,4,3,2,0,0,5,21,31,23,17,20,22,22,21,10,1,0,0,0,0,2,4,3,1,0,0,0,6,7,9,9,8,8,8,7,6,5,4,3,2,1,0,1,13,29,27,19,19,21,23,23,15,5,0,0,0,0,3,4,3,0,0,0,0,7,8,9,9,9,8,8,8,5,5,4,3,3,2,0,0,5,21,31,23,18,20,22,22,20,10,1,0,0,2,4,3,1,0,0,0,0,7,9,9,9,9,9,7,6,4,4,5,4,3,2,1,0,1,13,29,27,19,19,21,23,23,15,5,0,1,3,4,3,0,0,0,0,0,8,9,10,10,10,9,6,3,3,3,4,4,3,3,2,0,0,5,21,31,23,18,20,22,22,20,10,1,2,4,3,1,0,0,0,0,-1,9,9,10,9,9,8,4,2,2,2,3,4,4,3,2,1,0,1,13,29,27,19,19,21,23,23,16,4,3,4,3,0,0,0,0,-2,-5,10,10,9,7,4,3,3,2,1,2,2,3,4,3,3,2,0,0,5,21,30,23,18,20,22,22,20,8,4,3,1,0,0,0,0,-7,-13,11,9,9,5,1,0,1,1,1,1,1,2,4,4,3,2,1,0,1,13,29,27,19,19,21,23,23,11,4,3,0,0,0,0,-2,-13,-22,11,8,7,3,-1,-1,0,1,1,1,1,1,3,5,3,3,2,0,0,5,21,30,23,18,20,22,22,11,4,1,0,0,0,0,-7,-22,-30,10,7,7,3,-2,-2,0,1,1,1,1,1,2,5,4,3,2,1,0,1,13,29,27,19,19,21,20,10,4,0,0,0,0,-1,-13,-29,-35,9,7,9,7,0,-1,-1,0,1,1,1,1,1,3,5,3,3,2,0,0,5,21,30,23,18,19,17,7,2,0,0,0,0,-7,-22,-32,-36,8,7,10,9,2,-1,-2,0,1,1,1,1,1,2,5,4,3,2,1,0,1,13,29,27,19,18,13,4,0,0,0,0,-1,-13,-29,-36,-36,9,6,7,8,5,0,-1,-1,0,1,1,1,1,1,3,5,3,3,2,0,0,6,21,30,23,17,9,2,0,0,0,0,-7,-22,-32,-36,-36,9,6,5,7,6,2,0,-2,0,1,1,1,1,1,2,5,4,3,2,1,0,0,13,29,27,17,6,0,0,0,0,-1,-13,-29,-36,-36,-36,8,4,4,7,6,4,1,-1,-1,0,1,1,1,1,1,3,5,3,3,2,0,0,6,21,30,20,6,0,0,0,0,-7,-22,-33,-36,-36,-36,8,5,5,8,7,5,2,0,-2,0,1,1,1,1,1,2,5,4,3,2,1,0,0,13,29,23,6,0,0,0,-1,-13,-29,-36,-36,-36,-36,7,9,12,12,10,6,3,1,-1,-1,0,1,1,1,1,1,3,5,3,3,2,0,0,6,21,27,6,0,0,0,-7,-22,-33,-36,-36,-36,-36,7,14,18,16,13,8,4,2,0,-2,0,1,1,1,1,1,2,5,4,3,2,1,0,0,13,28,6,0,0,-1,-14,-29,-35,-36,-36,-36,-35,6,16,22,19,17,12,6,3,1,-1,-1,0,1,1,1,1,1,3,5,3,3,2,0,0,6,17,3,0,0,-7,-22,-33,-36,-36,-36,-36,-35,6,17,25,23,21,16,9,4,2,0,-2,0,1,1,1,1,1,2,5,4,3,2,1,0,1,7,1,0,-1,-13,-29,-35,-36,-36,-36,-34,-32,9,16,23,24,23,20,14,7,3,1,-1,-1,0,1,1,1,1,1,3,5,3,3,2,0,0,3,0,0,-7,-22,-33,-36,-36,-36,-35,-30,-23,10,15,20,25,24,23,18,10,4,2,0,-2,0,1,1,1,1,1,2,5,4,3,2,1,0,0,0,-1,-14,-29,-35,-36,-36,-36,-34,-23,-13,9,12,17,23,25,24,21,15,7,3,1,-1,-1,0,1,1,1,1,1,3,4,3,3,2,0,0,0,-7,-22,-33,-36,-36,-36,-35,-30,-11,0,7,10,13,20,26,25,24,19,11,4,2,0,-2,0,1,1,1,1,1,2,4,4,3,2,1,0,-1,-14,-29,-35,-36,-36,-36,-34,-23,0,9,9,9,10,16,23,26,25,22,15,7,3,1,-1,-1,0,1,1,1,1,1,3,4,3,3,2,0,-6,-22,-33,-36,-36,-36,-35,-30,-11,5,12,11,9,9,12,20,26,26,25,20,11,4,2,0,-2,0,1,1,1,1,1,2,4,4,3,2,0,-13,-29,-35,-36,-36,-35,-34,-23,0,10,12,12,10,9,10,16,23,26,26,23,15,7,3,1,-1,-1,0,1,1,1,1,1,3,4,3,3,1,-20,-33,-36,-36,-36,-35,-29,-11,5,12,12,13,12,9,8,11,20,26,26,25,20,11,4,2,0,-2,0,1,1,1,1,1,2,4,4,3,0,-25,-35,-36,-36,-35,-34,-22,0,10,12,12,13,13,10,8,9,16,23,26,26,23,15,7,3,1,-1,-1,0,1,1,1,1,1,3,4,3,-4,-29,-36,-36,-36,-35,-29,-11,5,12,11,9,12,14,12,9,8,12,20,26,26,25,20,11,4,2,0,-2,0,1,1,1,1,1,2,4,3,-11,-31,-36,-36,-35,-34,-22,0,10,12,9,7,12,13,13,10,8,10,16,23,26,26,23,15,7,3,1,-1,-1,0,1,1,1,1,1,3,3,-19,-33,-36,-36,-35,-29,-11,6,12,11,8,5,12,13,14,12,9,8,12,20,26,26,25,20,11,4,2,0,-2,0,1,1,1,1,1,2,2,-24,-35,-36,-35,-34,-22,0,10,12,9,5,4,11,13,14,13,10,8,9,16,23,26,26,23,15,7,3,1,-2,-1,0,1,1,1,1,1,0,-24,-34,-36,-35,-29,-11,6,12,11,8,4,3,10,13,14,14,12,9,8,12,20,26,26,25,20,11,4,2,0,-2,0,1,1,1,1,0,-1,-20,-33,-35,-34,-22,0,9,11,9,5,3,3,10,12,14,14,13,10,8,9,16,23,26,26,23,15,6,3,1,-2,-1,0,1,1,1,0,-1,-16,-31,-35,-30,-12,6,12,11,8,4,2,2,9,12,13,14,14,12,9,8,12,20,26,26,25,20,11,4,2,0,-2,0,1,1,1,1,0,-11,-27,-33,-22,0,9,11,9,5,3,1,0,9,10,13,14,14,13,11,8,9,15,24,26,26,23,15,6,3,1,-2,-1,0,1,1,1,0,-6,-22,-27,-12,6,12,11,7,4,2,0,-1,8,9,12,13,14,14,12,9,8,12,20,26,26,25,20,11,4,2,0,-2,0,1,1,1,0,-1,-14,-17,0,9,11,9,5,3,1,-1,-4,8,9,10,13,14,14,13,11,8,9,15,24,26,26,24,15,6,3,1,-2,-1,0,1,1,1,0,-7,-6,6,12,11,7,4,2,0,-4,-5,9,8,9,12,13,14,14,12,9,8,11,20,26,26,24,20,11,4,2,0,-2,0,1,1,1,0,-1,3,9,11,9,5,3,1,-2,-4,-4,9,8,9,10,13,14,14,13,10,8,9,15,24,26,26,24,15,6,3,1,-2,-1,0,1,1,1,1,8,11,11,7,4,2,0,-4,-4,-3],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
