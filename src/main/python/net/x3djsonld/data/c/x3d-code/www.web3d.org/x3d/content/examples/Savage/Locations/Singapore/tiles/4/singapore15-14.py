###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_1514',geoSystem=['GDC'],position=(1.4829463469178132,104.00636398974156,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.4829463469178132,104.00636398974156,0.0),range=4101.627,child1Url=['../../tiles/5/singapore30-28.x3d'],child2Url=['../../tiles/5/singapore30-29.x3d'],child3Url=['../../tiles/5/singapore31-28.x3d'],child4Url=['../../tiles/5/singapore31-29.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore15-14.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.4742146345398193,103.99200095561254,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[22,24,24,22,17,14,14,16,16,17,14,12,13,18,24,25,24,22,14,7,7,6,3,3,5,7,10,11,11,11,10,10,9,4,0,-3,-3,25,25,25,22,17,14,14,17,18,18,16,14,13,16,21,25,26,21,12,7,8,7,4,3,4,6,9,10,11,11,11,10,7,2,-2,-4,-4,27,27,25,21,17,14,14,17,18,19,17,16,14,16,20,25,26,21,10,7,8,7,6,3,4,5,8,10,11,11,11,10,5,0,-3,-4,-4,28,28,25,21,17,14,14,17,18,18,18,17,14,15,18,24,25,18,10,8,8,8,7,4,4,4,7,9,11,11,11,8,2,-2,-3,-4,-5,29,29,25,20,16,14,15,16,17,17,17,18,16,13,15,22,23,15,9,9,9,8,7,6,4,4,5,8,10,11,11,6,0,-2,-4,-4,-5,29,29,25,20,16,15,15,15,16,16,18,19,17,13,14,21,22,13,9,10,10,9,8,7,5,4,4,7,9,9,8,3,-1,-3,-4,-5,-5,28,28,24,19,16,15,14,14,15,16,19,19,18,12,12,19,20,12,9,11,10,10,9,7,6,4,4,5,7,6,3,0,-1,-3,-4,-5,-5,27,27,22,18,16,15,15,14,15,16,19,20,17,12,11,18,18,12,9,11,11,11,10,8,7,5,4,4,5,4,1,0,-2,-3,-5,-5,-6,26,25,21,17,17,17,16,15,15,16,19,19,16,13,10,15,17,11,8,10,11,11,10,9,7,6,4,4,4,2,0,0,-2,-4,-5,-5,-6,24,23,19,16,17,18,18,16,16,17,18,18,16,14,11,13,16,12,7,9,11,11,11,10,8,6,5,4,3,1,0,-1,-2,-4,-5,-6,-6,23,21,17,15,16,18,19,17,17,17,18,18,17,16,13,12,15,12,7,8,10,11,11,10,7,6,5,4,3,1,0,-1,-3,-4,-5,-6,-6,20,18,15,14,16,18,19,18,18,18,18,18,18,18,16,12,14,12,7,7,9,11,11,11,6,5,5,5,3,1,0,-1,-3,-4,-6,-6,-7,17,16,13,13,16,18,19,18,17,19,19,18,20,20,17,13,12,10,8,7,8,10,11,11,4,4,5,5,4,1,0,-1,-3,-5,-6,-6,-7,15,14,13,13,16,17,19,18,18,20,20,19,21,21,18,14,11,10,8,8,8,9,11,11,3,3,5,5,4,2,0,-1,-3,-5,-6,-7,-7,12,13,13,15,17,18,19,19,20,21,20,19,21,21,19,15,11,10,9,8,8,8,10,10,4,3,4,5,4,2,0,-1,-3,-5,-6,-7,-7,11,12,14,16,18,19,19,20,21,22,20,19,20,20,19,15,13,11,10,9,8,8,8,9,6,3,3,5,4,2,0,-1,-4,-6,-7,-7,-7,11,13,15,17,19,19,19,19,20,20,20,19,19,18,18,14,16,12,10,9,8,8,7,9,7,4,3,4,5,3,0,-2,-5,-6,-7,-7,-7,11,15,17,18,19,19,18,18,19,19,21,19,17,16,16,12,17,14,11,10,9,7,6,8,8,6,3,3,4,3,0,-2,-5,-7,-7,-7,-7,13,16,18,19,19,18,18,17,18,19,21,19,14,12,13,10,16,17,13,10,8,6,5,7,8,7,4,3,4,4,0,-4,-6,-7,-7,-7,-7,15,17,18,19,19,18,18,17,18,19,20,18,13,11,12,10,14,18,14,11,7,5,4,5,8,8,5,3,3,5,1,-4,-7,-7,-7,-7,-7,15,18,19,20,19,18,17,16,19,20,19,17,13,14,13,11,13,18,16,11,6,5,4,4,7,8,6,3,3,5,2,-5,-8,-7,-7,-7,-7,16,18,19,20,19,17,16,16,19,19,17,15,14,17,15,14,14,17,17,12,5,5,4,3,5,8,7,4,2,4,3,-4,-8,-8,-8,-8,-8,16,19,19,20,19,17,15,16,20,19,17,14,16,19,18,15,15,17,17,11,4,4,4,3,4,7,8,5,2,4,4,-2,-7,-8,-8,-8,-8,17,19,19,20,19,17,15,16,20,19,17,14,17,21,20,17,17,18,17,10,4,4,4,3,3,5,8,5,2,3,3,0,-5,-9,-9,-8,-8,17,18,18,18,18,17,15,16,19,19,17,14,17,21,21,19,19,18,17,9,5,4,4,3,3,4,7,5,3,3,3,1,-3,-7,-9,-8,-8,16,18,18,17,17,17,15,15,19,20,18,15,17,20,21,21,20,19,18,9,5,4,3,4,2,3,5,6,4,3,3,2,0,-6,-9,-9,-9,17,19,18,16,16,17,15,15,18,19,19,16,17,20,20,21,20,19,17,8,7,5,3,3,2,2,4,4,4,3,3,3,0,-3,-7,-9,-9,17,19,18,16,15,16,15,15,16,18,19,16,15,19,20,20,19,19,17,8,8,6,4,2,1,2,2,2,3,4,3,3,2,0,-6,-9,-9,18,19,18,15,14,15,16,17,16,17,18,16,15,17,19,19,18,18,16,9,8,7,6,2,1,5,5,2,3,3,3,3,3,0,-3,-7,-8,18,19,19,15,13,15,17,19,17,16,18,18,16,15,18,19,16,17,15,9,8,8,8,2,0,8,7,4,2,2,3,3,3,2,0,-6,-9,18,19,19,16,14,16,18,19,18,16,18,20,17,15,17,19,17,17,14,9,8,8,6,1,-4,4,7,6,3,2,3,3,3,3,0,-3,-6,19,19,19,17,16,17,19,19,17,16,20,22,19,16,17,20,18,16,13,9,7,8,3,0,-10,0,7,7,5,2,2,3,3,3,2,0,-3,19,18,19,18,16,16,18,19,17,16,20,22,20,16,16,18,17,14,13,9,7,7,0,0,-10,-6,3,7,5,3,2,3,3,3,3,1,0,18,18,20,19,16,14,17,18,16,16,19,22,22,18,14,16,15,13,13,10,6,6,-1,-1,-7,-11,0,6,7,5,2,2,3,3,3,2,1,18,18,19,18,16,15,17,18,15,16,18,20,20,16,13,14,14,14,14,12,6,4,0,-1,-5,-11,-6,2,7,5,3,2,3,3,3,3,2,19,18,18,18,16,17,18,18,15,14,15,17,16,13,12,13,13,16,15,14,6,2,0,-1,-5,-10,-11,-1,6,7,5,3,2,3,3,3,3,19,18,18,17,16,18,19,17,14,14,13,14,15,13,12,13,14,17,16,15,7,2,0,-1,-4,-9,-12,-6,2,7,5,3,2,3,3,3,3,20,18,18,17,17,19,19,17,14,13,10,11,14,13,12,13,16,18,16,16,9,2,0,0,-2,-7,-11,-11,-1,6,7,5,3,2,3,3,3,19,17,16,16,17,20,19,16,14,13,11,12,14,14,12,14,17,18,16,16,12,4,0,0,-1,-5,-10,-12,-6,3,7,5,3,2,3,3,3,18,16,14,15,17,19,18,16,14,13,12,14,16,15,13,15,18,19,17,16,15,8,2,0,0,-2,-8,-12,-11,0,5,7,5,3,2,3,3,17,16,15,16,18,18,17,16,15,14,13,14,17,16,14,15,18,19,18,17,16,11,7,1,0,-1,-5,-10,-12,-6,2,7,5,3,2,3,3,17,16,17,18,18,16,15,15,16,16,15,14,17,16,14,16,19,20,18,17,17,14,12,4,0,-1,-3,-8,-12,-11,-1,5,7,5,3,2,3,18,17,18,19,18,16,15,16,18,17,15,14,17,16,15,18,19,19,18,18,17,15,14,8,3,0,-1,-5,-10,-12,-6,2,7,5,3,2,3,21,19,20,21,19,17,17,19,19,18,15,13,17,17,18,19,19,17,18,17,16,15,15,12,12,4,0,-3,-8,-12,-11,-1,5,7,5,3,2],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
