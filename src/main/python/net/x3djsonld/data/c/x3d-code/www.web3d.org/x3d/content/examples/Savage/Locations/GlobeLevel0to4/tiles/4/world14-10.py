###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    Shape(
      appearance=Appearance(
        material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0,0.05,0)),
        texture=ImageTexture(url=['../../images/4/world14-10.jpg'],repeatS=False,repeatT=False)),
      geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(67.45833802716578,44.95834003882254,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=22,xSpacing=1.0714287,zDimension=24,zSpacing=0.48913044,height=[18,88,75,120,208,224,86,128,101,79,129,80,51,147,828,883,646,124,97,11,11,19,36,31,46,66,92,115,132,95,115,57,62,104,55,73,102,281,465,392,102,3,13,33,53,86,72,61,77,123,138,154,42,148,83,81,63,37,102,65,118,220,109,58,4,2,-75,40,27,35,123,185,145,180,35,168,103,52,94,92,74,136,83,60,507,563,99,4,12,17,-50,-58,148,99,52,42,74,50,98,133,104,69,129,140,127,175,128,165,408,317,9,5,-59,-84,-122,69,78,84,18,54,109,143,162,133,131,149,176,82,171,220,840,746,-33,178,41,-91,-72,-59,40,107,88,30,18,69,46,129,57,60,193,28,178,177,447,324,-133,-85,-66,-64,-20,-26,-37,-46,4,-34,-30,-15,-14,5,-83,41,76,130,119,97,113,135,-187,-126,-65,-47,61,9,-23,-39,-44,-21,-28,-44,-54,-59,-2,-30,140,211,101,1,-6,-102,-130,-118,-77,-45,-39,-33,-93,-91,-72,-29,-29,-63,-175,-79,-55,0,91,17,-27,-86,-86,-23,-109,-94,-101,-91,-78,-78,-103,-29,-101,-119,-224,-300,-295,-92,125,-295,-439,-357,-300,-95,-8,-30,-74,-68,-68,-152,-177,-108,-83,-96,-126,-7,37,60,111,-196,-344,-353,-331,-284,-309,-54,-51,-98,-127,-114,-86,-97,-157,-181,-143,-159,34,17,153,88,-318,-418,-383,-301,-203,-179,-130,-84,-31,-12,-156,-109,-67,-61,-131,-195,-64,30,159,229,100,-232,-520,-397,-138,-105,-118,-124,-129,-52,-49,-36,-273,-288,-285,-226,-133,-111,-100,-13,190,336,227,-158,-315,-158,-106,-128,-115,-99,-96,-107,-119,-117,-276,-290,-269,-250,-216,-188,-162,-78,20,19,412,-56,-248,-365,-143,-150,-101,-103,-49,-57,-88,-136,-350,-337,-314,-303,-262,-251,-202,-95,-54,78,181,227,-129,-231,-356,-124,-102,-87,-83,-97,-67,-53,-347,-323,-327,-289,-219,-230,-236,-169,-90,1,292,234,269,-202,-316,-279,-143,-154,-94,-97,-54,-48,-340,-328,-275,-261,-214,-152,-153,-233,-185,-126,-6,37,495,1,-144,-352,-251,-223,-113,-102,-99,-108,-304,-289,-225,-228,-248,-154,-153,-149,-217,-195,-115,1,101,364,69,-148,-368,-308,-57,-47,-144,-155,-274,-287,-242,-264,-246,-233,-156,-123,-186,-225,-201,19,472,517,496,336,-82,-326,-334,-340,-161,-159,-307,-291,-295,-258,-249,-251,-245,-153,-136,-172,-106,-159,-130,25,816,846,741,439,0,-105,-218,-290,-255,-241,-233,-187,-212,-246,-285,-266,-124,-111,-104,-75,-48,-100,-89,32,63,75,646,548,350,164,-246,-243,-228,-194,-236,-237,-263,-275,-125,-93,-104,-75,-65,-112,-117,-53,144,-17,260,454,292,300],
        geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(0.0,0.0,-6378137.0),geoSystem=['GDC'])))])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
