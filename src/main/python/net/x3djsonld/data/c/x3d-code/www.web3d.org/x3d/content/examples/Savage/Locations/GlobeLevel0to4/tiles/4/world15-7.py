###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    Shape(
      appearance=Appearance(
        material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0,0.05,0)),
        texture=ImageTexture(url=['../../images/4/world15-7.jpg'],repeatS=False,repeatT=False)),
      geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(78.7083383624419,-22.54166197283422,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=22,xSpacing=1.0714287,zDimension=24,zSpacing=0.48913044,height=[310,30,273,-89,552,-140,-215,-299,-280,-178,-173,-302,-272,-225,-939,-1692,-2638,-2702,-3403,-3698,-2677,-1972,152,-1,-12,13,-1,-263,-199,-212,-247,-201,-291,-297,-305,-298,-312,-480,-1573,-2253,-2516,-2405,-3083,-3196,290,286,472,234,1,-118,-131,-253,-301,-262,-252,-284,-399,-298,-281,-185,-323,-1251,-2339,-3161,-3127,-3171,343,7,304,261,-56,65,-209,-389,-387,-365,-301,-206,-235,-229,-268,-224,-219,-1618,-2748,-2987,-3000,-3074,904,147,-23,-3,-28,-199,-397,-246,-200,-203,-184,-173,-200,-203,-247,-273,-341,-977,-2258,-2772,-2891,-2990,1060,504,0,15,-23,-150,-303,-66,-51,-165,-233,-273,-355,-312,-200,-240,-349,-904,-2199,-2656,-2638,-2486,947,649,264,11,-99,-103,-200,-49,-35,-161,-153,-232,-204,-168,-195,-252,-615,-1721,-2209,-2430,-2487,-2703,614,563,605,412,58,-149,-200,-175,-80,-196,-210,-221,-206,-208,-211,-209,-286,-949,-1326,-2529,-2673,-2749,284,328,501,1158,393,1,1,-191,-271,-174,-117,-165,-245,-187,-295,-239,-847,-1420,-2461,-3362,-2616,-2579,47,923,921,696,1221,493,224,1,-10,-108,-130,-66,-200,-48,-70,-376,-1588,-3056,-3319,-3845,-3233,-2770,366,-8,2,358,302,71,19,2,1,1,70,-47,-56,-132,-1204,-2457,-3188,-3160,-3468,-3227,-2806,-2827,11,78,-34,-94,-39,-40,-28,1,1,-58,-195,-179,-282,-2091,-2985,-3120,-3198,-3946,-4022,-3352,-2169,-1740,-8,-84,-105,-126,-116,-125,-155,-153,-183,-193,-492,-1445,-2797,-2889,-3133,-3266,-3871,-4389,-3507,-2399,-2725,-3203,1,380,29,-102,-106,-107,-110,-255,-1683,-2971,-2781,-2996,-3211,-3026,-2960,-3677,-3963,-2902,-3043,-3582,-3916,-3578,-188,-763,-1768,-2242,-2363,-2394,-2144,-2467,-3256,-3424,-3232,-3445,-3498,-3936,-3663,-2658,-3618,-4022,-4142,-3819,-2942,-3158,-1561,-1780,-1804,-2165,-2567,-3458,-3451,-3504,-3621,-3635,-2630,-4076,-3941,-3745,-3534,-2742,-2273,-2480,-3399,-3780,-2790,-2688,-1299,-2415,-1546,-2235,-3582,-3633,-3662,-3719,-3766,-3796,-3805,-3827,-3844,-3898,-3882,-3707,-3867,-3333,-2540,-2891,-2504,-2552,-1569,-1335,-1019,-825,-954,-1116,-2858,-3690,-3863,-3893,-3902,-3824,-3920,-3945,-3574,-4102,-3937,-4032,-3894,-3791,-3734,-3584,-1797,-1752,-1588,-1495,-1830,-944,-925,-949,-988,-2631,-3706,-3678,-3666,-3808,-3920,-4026,-4133,-4104,-4149,-4328,-4551,-4288,-3577,-3490,-3388,-3439,-3426,-3835,-4018,-4071,-4031,-3271,-3770,-3779,-3430,-3884,-4002,-4002,-4053,-4115,-4085,-4173,-4201,-4207,-3936,-4005,-4061,-4091,-4105,-4103,-4089,-4058,-4012,-4000,-4057,-4130,-4163,-4155,-4171,-4181,-4191,-4213,-4207,-4199,-4200,-4202,-4182,-4202,-4214,-4221,-4223,-4216,-4207,-4195,-4195,-4201,-4207,-4212,-4216,-4220,-4223,-4224,-4223,-4218,-4214,-4209,-4205,-4202,-4153,-4186,-4205,-4216,-4224,-4230,-4236,-4241,-4247,-4253,-4261,-4269,-4276,-4283,-4287,-4289,-4287,-4281,-4279,-4268,-4253,-4243,-4192,-4202,-4211,-4219,-4226,-4232,-4238,-4242,-4246,-4252,-4262,-4274,-4284,-4294,-4302,-4308,-4314,-4321,-4308,-4286,-4266,-4254],
        geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(0.0,0.0,-6378137.0),geoSystem=['GDC'])))])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
