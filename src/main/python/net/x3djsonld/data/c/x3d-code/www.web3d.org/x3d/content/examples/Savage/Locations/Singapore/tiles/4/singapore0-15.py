###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_015',geoSystem=['GDC'],position=(1.220994975577994,104.0350900579996,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.220994975577994,104.0350900579996,0.0),range=4101.627,child1Url=['../../tiles/5/singapore0-30.x3d'],child2Url=['../../tiles/5/singapore0-31.x3d'],child3Url=['../../tiles/5/singapore1-30.x3d'],child4Url=['../../tiles/5/singapore1-31.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore0-15.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.2122632632,104.02072702387058,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=36,xSpacing=8.207448E-4,zDimension=44,zSpacing=4.0612617E-4,height=[0,0,7,8,5,7,7,5,5,7,8,7,4,7,10,11,8,8,6,2,5,7,5,3,9,16,13,10,12,7,4,5,5,7,4,9,-2,-3,3,8,8,8,6,4,2,3,7,7,5,4,10,12,7,11,11,4,3,5,6,4,10,16,12,10,9,6,5,7,6,7,4,8,0,-1,5,7,7,7,5,3,3,0,3,5,4,2,9,11,6,9,11,7,5,6,5,3,6,12,12,10,8,5,6,6,6,8,6,7,4,1,9,7,5,6,3,3,4,0,0,4,4,1,8,10,5,6,11,10,8,8,4,0,2,6,11,9,8,4,7,4,6,8,7,6,3,1,9,8,7,6,4,4,5,0,0,3,4,1,8,9,5,4,10,14,13,11,6,1,0,0,6,9,8,5,5,3,6,9,7,3,1,0,8,9,10,7,7,6,6,0,1,2,4,2,8,9,5,3,10,17,17,14,9,4,0,-8,1,8,8,5,3,2,6,11,6,0,3,2,7,9,10,7,8,8,6,2,1,2,4,3,7,9,5,7,13,21,20,14,8,3,-1,-6,1,7,9,7,4,4,4,10,6,0,8,5,5,10,10,7,7,8,6,5,1,1,5,4,5,7,5,12,18,24,22,12,6,1,-1,0,3,7,10,10,7,5,3,6,5,3,7,5,6,11,12,7,6,7,4,5,3,1,5,4,4,5,3,10,16,20,17,9,4,0,-1,2,8,8,8,8,6,6,3,2,3,6,5,3,7,12,13,6,5,5,1,3,6,1,5,2,3,3,2,6,9,11,10,5,2,0,0,5,12,9,7,5,4,5,4,0,1,10,6,2,8,8,10,6,4,3,0,3,7,3,4,1,3,5,3,3,4,6,7,4,3,1,1,5,10,8,8,8,6,5,3,1,3,10,9,2,6,2,2,6,3,2,0,5,6,5,3,0,5,9,6,3,1,5,7,7,7,3,3,5,2,5,11,14,9,3,0,5,6,6,7,1,5,0,0,6,5,0,0,5,6,7,2,1,5,11,8,3,1,4,6,8,9,4,4,4,0,3,13,15,10,5,2,8,9,5,0,0,4,3,1,7,9,0,0,4,6,7,1,3,5,11,9,3,3,5,5,8,10,4,3,6,3,3,13,12,9,8,7,10,11,7,-1,0,4,6,3,7,8,1,1,4,8,9,3,5,5,10,9,3,5,6,5,8,10,4,2,6,6,6,13,11,7,8,8,9,9,7,0,2,4,7,6,7,4,6,3,5,12,11,5,7,6,10,8,4,7,7,5,9,8,3,3,7,9,11,12,10,6,4,4,6,4,6,3,3,3,8,10,7,2,8,4,7,14,10,6,8,9,9,7,5,6,5,5,9,8,2,2,8,10,12,10,10,5,2,2,5,1,4,4,2,0,6,13,11,1,7,5,12,12,7,3,7,12,8,5,6,4,0,1,10,12,1,0,8,8,6,5,8,4,3,4,5,1,2,5,2,0,6,15,11,0,5,5,13,11,5,2,7,13,7,3,8,3,0,1,11,15,3,0,8,3,0,2,5,4,4,7,6,1,3,7,6,2,8,14,8,0,3,4,11,9,9,8,8,11,5,4,9,7,4,5,13,18,7,4,7,-2,-4,3,4,5,8,10,8,5,6,8,8,4,9,12,5,-1,0,4,8,7,9,9,8,8,4,5,9,9,8,7,13,19,11,5,5,-6,-10,3,4,7,10,12,10,8,8,6,7,5,6,7,7,0,-2,6,8,7,5,2,2,7,7,9,11,10,10,8,11,17,9,2,4,-4,-13,0,6,7,6,10,10,9,9,5,6,6,5,5,7,0,-4,6,7,7,3,-1,0,5,8,11,9,10,9,7,10,14,9,1,3,0,-11,0,8,8,4,8,10,10,8,3,4,5,4,6,6,0,-4,5,5,8,2,-1,2,3,5,6,0,2,6,5,8,9,8,7,5,6,1,2,11,13,9,8,5,7,6,2,3,4,4,7,6,-1,-3,6,4,8,3,0,5,4,3,3,-4,-2,4,6,8,6,8,10,6,10,11,5,12,16,12,6,1,5,4,6,9,2,4,5,5,1,4,9,5,3,6,4,9,9,6,5,1,0,6,10,11,13,10,4,1,5,11,8,11,11,8,5,0,4,4,9,12,0,5,4,5,6,11,11,6,1,8,9,12,13,8,7,5,2,8,13,14,18,11,0,-1,1,11,11,9,8,4,3,-2,3,3,6,6,0,7,6,8,10,11,9,5,5,9,9,8,11,8,5,5,6,13,12,13,19,11,2,1,2,6,7,6,3,2,2,-1,2,2,4,1,2,9,7,12,14,11,7,4,8,8,8,6,10,7,4,4,10,16,11,11,19,12,5,4,4,2,3,4,0,0,2,0,0,0,5,2,5,12,12,10,11,6,9,5,5,5,8,7,9,9,5,6,8,12,10,8,13,12,8,8,7,0,-2,4,4,1,2,0,0,-3,6,3,9,16,15,9,10,2,12,6,3,3,8,8,9,9,5,7,7,9,8,4,8,12,11,12,11,-1,-7,5,8,2,2,1,-3,-7,4,-1,5,9,13,10,10,5,11,9,4,5,8,6,7,9,8,8,6,4,6,3,3,7,7,8,8,-2,-6,6,10,5,4,4,0,-1,1,-6,0,3,11,11,11,8,10,12,4,7,8,4,6,9,10,10,5,0,5,3,0,2,4,5,5,-3,-3,6,12,8,5,6,4,3,7,0,1,-2,10,12,6,9,11,11,4,3,7,5,8,12,9,7,4,3,6,3,0,4,4,3,4,1,1,2,3,3,5,7,8,6,13,5,4,-8,9,14,1,10,13,10,4,0,5,6,10,14,9,5,4,6,8,2,1,6,5,1,4,7,8,0,-4,0,4,9,11,9,14,7,7,-1,6,12,0,6,8,6,4,0,3,2,8,15,10,6,7,8,7,3,3,8,6,0,4,7,8,1,-3,0,4,7,8,4,13,9,10,4,4,9,0,0,3,2,4,0,0,-2,6,16,11,9,10,10,7,4,6,10,6,0,3,6,7,5,-2,0,4,5,3,-1,10,9,9,7,4,7,2,4,6,1,3,0,0,-1,6,14,11,8,8,8,5,4,8,9,6,3,3,5,4,5,0,3,9,8,2,-1,8,8,8,9,5,5,5,9,9,1,1,3,2,0,6,13,10,7,5,5,4,6,9,9,7,5,3,3,0,5,3,5,14,11,2,0,8,7,8,9,6,4,6,8,6,0,2,4,4,4,6,9,9,7,7,5,2,6,11,9,8,8,6,5,0,4,5,6,13,13,1,0,9,5,8,9,7,1,7,7,2,0,3,6,6,9,6,6,6,7,9,5,2,7,12,9,9,11,11,6,2,3,6,5,9,15,0,1,2,0,8,9,4,0,5,5,1,-1,5,7,8,9,7,7,6,6,8,8,6,7,9,6,8,12,11,6,3,3,5,5,6,15,3,1,-3,-3,7,10,1,-1,3,2,2,-1,5,8,9,8,7,10,6,5,7,11,11,7,5,3,6,13,9,5,5,4,4,6,4,15,8,1,-3,0,7,10,1,2,3,2,2,0,4,6,8,8,7,12,7,5,5,9,12,8,4,2,6,11,9,7,6,0,-1,8,6,12,11,3],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
