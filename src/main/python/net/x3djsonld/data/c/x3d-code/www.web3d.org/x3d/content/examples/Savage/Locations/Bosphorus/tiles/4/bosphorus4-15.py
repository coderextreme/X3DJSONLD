###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    Shape(
      appearance=Appearance(
        material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0,0.05,0)),
        texture=ImageTexture(url=['../../images/4/bosphorus4-15.jpg'],repeatS=False,repeatT=False)),
      geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(40.84357772961846,29.55022386869132,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=22,xSpacing=0.0035324567,zDimension=24,zSpacing=0.0023768744,height=[219,229,253,311,350,371,365,360,340,353,328,292,279,283,286,256,261,264,284,296,273,277,221,235,262,276,300,355,369,362,359,374,350,319,300,309,292,259,265,272,275,282,277,277,221,226,238,255,286,327,371,374,382,380,348,305,282,282,276,261,270,287,295,304,288,291,212,227,234,241,250,280,340,372,393,379,339,298,280,278,275,261,270,276,310,320,310,308,221,224,228,234,238,256,295,347,370,348,309,275,267,268,264,263,265,276,301,300,320,320,228,232,234,241,253,243,262,287,315,288,279,277,277,272,267,269,268,275,290,288,307,317,236,236,237,237,246,265,248,252,260,262,284,274,269,266,266,269,274,272,280,283,297,305,248,241,241,242,242,246,261,253,254,264,279,282,270,268,276,273,274,278,282,293,301,303,254,241,249,248,248,249,248,256,256,261,265,279,274,273,276,278,279,281,281,300,310,303,251,250,245,256,256,256,254,255,258,265,268,274,283,283,291,283,285,284,282,289,294,290,263,255,246,250,257,285,287,285,274,273,291,311,332,334,344,338,319,306,290,288,292,293,246,257,252,260,256,262,300,303,315,319,345,342,325,336,357,370,367,354,324,315,309,309,228,236,259,248,251,257,259,264,276,305,344,361,357,332,309,326,336,336,332,321,334,336,210,217,245,240,259,257,259,261,265,275,304,323,349,332,323,300,310,311,312,314,320,317,184,208,230,245,266,265,261,263,265,268,276,280,288,292,298,295,296,310,306,309,308,309,208,228,259,274,266,259,265,266,266,268,273,275,278,282,288,292,303,311,308,305,320,323,184,220,243,249,249,252,255,257,269,271,273,276,283,288,290,299,307,308,303,310,314,313,197,194,213,239,250,273,265,268,264,268,272,274,277,282,287,307,307,302,302,312,309,308,228,217,210,222,244,265,270,271,271,271,273,277,279,285,289,298,299,301,311,306,314,317,223,249,253,230,231,249,258,286,279,271,274,271,276,281,284,299,304,302,305,306,309,308,219,249,274,268,243,248,263,296,296,274,256,275,284,290,294,296,309,307,307,304,314,313,219,245,263,258,255,245,258,284,274,248,276,299,305,315,319,317,316,312,308,302,306,308,250,262,257,248,227,240,239,261,245,258,293,312,325,321,340,349,337,321,315,304,298,300,249,264,253,245,224,237,239,254,240,251,290,308,330,321,342,352,342,323,317,305,296,298],
        geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(41.06225017873692,29.030952729968703,0),geoSystem=['GDC'])))])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
