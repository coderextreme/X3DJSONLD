###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    Shape(
      appearance=Appearance(
        material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0,0.05,0)),
        texture=ImageTexture(url=['../../images/4/world15-10.jpg'],repeatS=False,repeatT=False)),
      geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(78.7083383624419,44.95834003882254,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=22,xSpacing=1.0714287,zDimension=24,zSpacing=0.48913044,height=[-246,-243,-228,-194,-236,-237,-263,-275,-125,-93,-104,-75,-65,-112,-117,-53,144,-17,260,454,292,300,-244,-261,-238,-189,-240,-283,-314,-354,-300,-227,-159,-163,-136,-149,-241,-191,-194,-193,-217,-104,-51,174,-250,-241,-240,-253,-230,-309,-321,-349,-351,-301,-201,-150,-162,-190,-192,-205,-192,-118,-93,-178,-90,-181,-339,-242,-246,-235,-315,-269,-249,-240,-250,-225,-252,-240,-220,-244,-297,-337,-328,-309,-286,-320,-348,-353,-263,-303,-234,-284,-257,-243,-258,-234,-264,-245,-207,-186,-163,-191,-282,-294,-318,-339,-336,-348,-345,-339,-202,-285,-239,-227,-311,-293,-309,-286,-254,-269,-229,-225,-209,-189,-194,-176,-256,-283,-285,-288,-343,-358,-189,-104,-88,-166,-316,-337,-323,-293,-302,-206,-209,-189,-192,-186,-200,-191,-212,-191,-243,-335,-388,-466,-257,-227,-279,-336,-271,-166,-55,-195,-424,-375,-194,-258,-188,-193,-168,-234,-137,-192,-201,-264,-427,-484,-339,-320,-384,86,300,-117,-159,-267,381,-62,26,80,7,-74,-130,-161,-162,-194,-272,-193,-285,-366,-246,-198,-44,3,1,54,117,-257,-411,-223,100,1,371,1,-208,60,236,-33,379,3,-195,-451,-303,-137,-54,-90,-91,-291,-172,-289,-386,-83,-55,400,20,-56,-106,5,-289,-289,-141,-29,-392,-511,-167,-177,-187,-143,-143,-188,-338,-305,-333,-181,-144,-106,-297,350,-41,-150,-145,-13,-50,-240,-448,-527,-638,-309,-190,-213,-285,-322,-319,-212,-197,-203,-214,-200,-200,-326,-251,-254,-240,-300,-386,-495,-557,-593,-2709,-2476,-2042,-1811,-1511,-1189,-1040,-504,-355,-326,-292,-309,-304,-292,-320,-688,-984,-1327,-1967,-1905,-1823,-1630,-3539,-3545,-3406,-3410,-3401,-3347,-3354,-3403,-3368,-3221,-3312,-3316,-3318,-3273,-3291,-3229,-3011,-2990,-2976,-2823,-2771,-2707,-3815,-3810,-3810,-3806,-3791,-3771,-3814,-3824,-3800,-3798,-3734,-3628,-3611,-3643,-3459,-3427,-3398,-3394,-3356,-3295,-3306,-3211,-3845,-3839,-3833,-3825,-3817,-3810,-3802,-3794,-3787,-3782,-3784,-3784,-3789,-3693,-3644,-3611,-3592,-3559,-3510,-3471,-3459,-3462,-3859,-3853,-3848,-3842,-3836,-3828,-3817,-3804,-3793,-3784,-3775,-3767,-3754,-3747,-3729,-3706,-3689,-3676,-3669,-3667,-3671,-3676,-3909,-3836,-3847,-3818,-3835,-3834,-3828,-3822,-3816,-3810,-3800,-3785,-3766,-3741,-3717,-3699,-3692,-3694,-3702,-3712,-3723,-3732,-3841,-3873,-3895,-3816,-3804,-3851,-3761,-3807,-3818,-3817,-3814,-3801,-3767,-3682,-3613,-3773,-3773,-3759,-3752,-3756,-3767,-3776,-3151,-3149,-3125,-3718,-3798,-3548,-3355,-3460,-3748,-3759,-3660,-3767,-2832,-2514,-3008,-3324,-3623,-3721,-3747,-3629,-3501,-3420,-3641,-4077,-4294,-4641,-3779,-3986,-4314,-4081,-4232,-3672,-3287,-3174,-3424,-3177,-2662,-1301,-771,-1973,-3717,-4363,-4579,-4556,-3783,-3695,-3630,-3634,-3444,-3456,-3216,-3278,-3756,-3822,-3629,-3502,-3530,-3667,-3928,-3654,-3465,-2850,-2795,-3101,-3379,-3441,-4218,-4014,-3810,-3684,-3509,-3299,-3198,-3152,-3792,-3916,-3800,-3667,-3648,-3650,-3818,-3845,-3573,-3143,-2905,-2917,-3122,-3391],
        geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(0.0,0.0,-6378137.0),geoSystem=['GDC'])))])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
