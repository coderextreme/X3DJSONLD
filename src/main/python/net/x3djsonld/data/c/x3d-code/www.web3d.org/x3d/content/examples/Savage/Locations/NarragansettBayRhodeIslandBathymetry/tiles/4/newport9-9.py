###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoLOD(center=(41.573133370580884,-71.3735068163228,0.0),range=6150.345,child1Url=['../../tiles/5/newport18-18.x3d'],child2Url=['../../tiles/5/newport18-19.x3d'],child3Url=['../../tiles/5/newport19-18.x3d'],child4Url=['../../tiles/5/newport19-19.x3d'],
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(41.5,-71.5,0),geoSystem=['GDC']),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0,0.05,0)),
            texture=ImageTexture(url=['../../images/4/newport9-9.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(41.548943435123995,-71.39549064340055,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=55,xSpacing=8.142158E-4,zDimension=52,zSpacing=9.486249E-4,height=[-8,-7,-9,-11,-14,-14,-8,-5,-4,-4,-3,-3,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-4,-11,-15,-18,-20,-20,-19,-18,-17,-17,-7,-7,-9,-12,-14,-15,-9,-5,-5,-5,-4,-4,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,-9,-14,-18,-20,-20,-19,-18,-17,-17,-8,-8,-9,-11,-13,-14,-10,-7,-5,-5,-5,-4,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-8,-14,-18,-20,-19,-19,-18,-17,-17,-8,-9,-10,-11,-13,-14,-11,-8,-5,-6,-5,-4,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-8,-14,-17,-19,-20,-19,-18,-16,-16,-8,-9,-10,-11,-12,-13,-10,-9,-7,-6,-6,-5,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-6,-13,-17,-18,-19,-18,-17,-16,-16,-8,-8,-9,-10,-11,-12,-10,-9,-8,-7,-6,-5,-2,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-7,-13,-16,-18,-19,-18,-17,-16,-16,-9,-9,-9,-10,-11,-11,-9,-9,-8,-7,-6,-6,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,-7,-13,-16,-17,-17,-18,-17,-16,-16,-10,-10,-9,-9,-10,-9,-9,-9,-9,-8,-7,-6,-2,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-8,-13,-15,-16,-17,-17,-17,-16,-15,-10,-11,-10,-9,-9,-9,-9,-10,-10,-9,-7,-6,-5,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-9,-13,-14,-16,-16,-17,-16,-15,-15,-11,-11,-10,-10,-10,-11,-11,-11,-11,-10,-8,-7,-5,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3,-10,-13,-14,-15,-16,-16,-16,-15,-15,-10,-10,-10,-10,-11,-11,-11,-11,-11,-10,-9,-7,-5,-3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-5,-10,-12,-14,-14,-15,-16,-15,-15,-14,-10,-10,-10,-10,-10,-10,-11,-11,-11,-11,-10,-8,-7,-4,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-6,-11,-12,-13,-14,-15,-15,-15,-14,-14,-9,-10,-10,-10,-10,-10,-10,-10,-11,-11,-10,-10,-7,-5,-3,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-7,-10,-11,-13,-14,-14,-15,-15,-14,-14,-9,-9,-9,-9,-10,-9,-10,-10,-10,-11,-10,-10,-8,-6,-4,-2,-2,-2,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,-8,-10,-12,-13,-14,-14,-14,-14,-14,-13,-9,-9,-9,-9,-9,-9,-10,-10,-10,-10,-10,-9,-8,-7,-5,-3,-4,-3,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3,-9,-11,-12,-13,-13,-14,-14,-14,-13,-13,-9,-9,-9,-9,-9,-9,-9,-9,-10,-10,-10,-9,-8,-8,-7,-5,-5,-4,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-3,-9,-11,-12,-12,-13,-13,-14,-13,-13,-13,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-10,-9,-8,-8,-8,-8,-7,-5,-3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,-5,-10,-11,-12,-12,-13,-13,-14,-13,-12,-12,-8,-8,-8,-9,-9,-9,-9,-9,-9,-9,-9,-9,-8,-8,-8,-8,-7,-7,-5,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-4,-6,-10,-11,-12,-12,-13,-12,-13,-12,-12,-12,-8,-8,-8,-8,-8,-8,-9,-8,-9,-9,-9,-9,-9,-8,-8,-8,-8,-7,-7,-5,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-5,-7,-10,-11,-12,-12,-12,-12,-12,-12,-12,-12,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-9,-9,-9,-8,-8,-8,-8,-8,-7,-7,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-2,-6,-8,-10,-11,-12,-12,-12,-13,-12,-12,-12,-11,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3,-7,-9,-11,-11,-12,-12,-12,-12,-11,-11,-11,-11,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-7,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-3,-7,-11,-12,-12,-12,-12,-12,-12,-11,-11,-11,-11,-8,-8,-8,-8,-8,-8,-8,-7,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-7,-3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-4,-10,-12,-12,-12,-12,-12,-12,-11,-11,-11,-11,-11,-7,-7,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-7,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-7,-12,-13,-12,-12,-12,-12,-11,-11,-11,-11,-10,-10,-7,-7,-7,-7,-8,-8,-7,-7,-7,-8,-8,-8,-8,-8,-8,-7,-7,-7,-8,-7,-8,-7,-8,-6,-2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-4,-9,-13,-13,-12,-12,-12,-12,-11,-10,-10,-10,-10,-10,-7,-8,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-8,-8,-7,-7,-7,-7,-8,-8,-8,-7,-7,-6,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-3,-9,-13,-14,-14,-12,-11,-12,-11,-10,-10,-10,-10,-10,-10,-7,-7,-7,-8,-8,-7,-7,-7,-7,-7,-7,-7,-8,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-8,-5,-2,0,0,0,0,0,0,0,0,0,0,-1,0,-5,-9,-12,-14,-14,-13,-11,-11,-11,-10,-10,-10,-10,-10,-10,-10,-7,-8,-8,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-6,-1,-1,0,0,0,0,-1,-2,-3,-4,-6,-8,-8,-11,-12,-14,-13,-11,-11,-11,-11,-10,-10,-10,-10,-10,-10,-10,-7,-8,-8,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-8,-6,-5,-4,-3,-4,-6,-6,-6,-6,-6,-10,-11,-10,-12,-11,-11,-11,-11,-11,-10,-10,-10,-10,-10,-9,-9,-9,-7,-7,-8,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-6,-7,-7,-7,-7,-7,-7,-6,-6,-6,-6,-11,-11,-11,-12,-11,-11,-11,-11,-11,-10,-10,-10,-9,-9,-9,-9,-9,-9,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-6,-6,-6,-6,-7,-7,-7,-6,-9,-11,-11,-11,-11,-11,-11,-11,-11,-11,-10,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-6,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-8,-8,-9,-9,-11,-11,-10,-10,-10,-10,-11,-11,-11,-11,-11,-11,-11,-11,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-6,-6,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-8,-8,-10,-11,-11,-11,-10,-10,-11,-11,-11,-10,-10,-10,-10,-11,-11,-11,-11,-11,-11,-9,-9,-8,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-9,-7,-8,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-8,-7,-10,-10,-11,-11,-11,-10,-10,-10,-10,-11,-11,-11,-11,-11,-11,-11,-11,-10,-8,-8,-8,-7,-7,-7,-7,-8,-8,-8,-8,-8,-8,-8,-8,-8,-9,-9,-9,-9,-9,-8,-8,-7,-7,-7,-7,-7,-8,-10,-10,-10,-11,-11,-11,-11,-11,-10,-11,-11,-11,-11,-11,-11,-12,-11,-10,-10,-10,-8,-8,-6,-6,-6,-6,-6,-6,-6,-7,-7,-7,-7,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-7,-7,-7,-9,-10,-10,-11,-11,-11,-10,-11,-11,-11,-11,-11,-11,-11,-12,-11,-10,-11,-9,-8,-7,-7,-6,-7,-6,-6,-6,-6,-6,-6,-6,-6,-6,-7,-7,-7,-7,-7,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-11,-11,-11,-11,-10,-10,-11,-11,-11,-11,-11,-11,-11,-11,-11,-9,-9,-7,-7,-7,-7,-7,-7,-7,-7,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-7,-7,-7,-7,-8,-7,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-10,-10,-10,-11,-11,-11,-11,-11,-10,-9,-8,-7,-7,-8,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-6,-7,-7,-7,-7,-6,-6,-6,-6,-6,-6,-6,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-8,-8,-8,-8,-8,-8,-8,-8,-8,-11,-11,-11,-10,-9,-6,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-6,-6,-6,-6,-6,-6,-6,-6,-6,-7,-7,-7,-8,-7,-8,-7,-7,-7,-7,-8,-8,-8,-8,-8,-8,-8,-8,-11,-10,-10,-9,-7,-8,-8,-8,-8,-7,-8,-8,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-9,-7,-7,-7,-7,-7,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-7,-7,-7,-7,-7,-7,-8,-8,-8,-8,-8,-8,-8,-8,-11,-10,-10,-9,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-7,-7,-7,-7,-7,-8,-9,-8,-7,-7,-7,-9,-7,-7,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-7,-7,-7,-7,-7,-8,-8,-8,-8,-8,-8,-8,-8,-10,-10,-10,-8,-8,-8,-8,-8,-8,-7,-8,-8,-8,-8,-8,-7,-7,-7,-8,-9,-7,-7,-7,-8,-8,-8,-8,-8,-7,-6,-5,-5,-6,-6,-6,-6,-6,-6,-6,-6,-6,-7,-7,-7,-7,-7,-7,-7,-7,-8,-8,-8,-8,-8,-8,-10,-10,-9,-8,-9,-8,-8,-8,-8,-7,-8,-8,-8,-8,-8,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-8,-8,-7,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-7,-7,-6,-6,-7,-7,-7,-7,-7,-7,-7,-7,-8,-8,-8,-8,-8,-10,-10,-10,-9,-9,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-7,-7,-7,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-7,-7,-6,-6,-6,-6,-7,-7,-7,-7,-7,-8,-8,-8,-8,-8,-8,-8,-10,-10,-10,-9,-9,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-7,-8,-8,-7,-7,-7,-6,-6,-6,-6,-6,-6,-6,-7,-6,-6,-6,-6,-6,-6,-6,-7,-7,-7,-6,-6,-6,-6,-7,-7,-7,-7,-7,-8,-8,-8,-8,-8,-8,-8,-10,-10,-10,-9,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-7,-7,-7,-6,-6,-6,-6,-6,-6,-7,-6,-6,-5,-6,-6,-6,-6,-6,-7,-7,-7,-6,-6,-6,-6,-6,-6,-6,-7,-7,-7,-7,-8,-8,-8,-8,-8,-10,-10,-10,-9,-9,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-7,-7,-8,-6,-5,-5,-4,-4,-4,-6,-6,-5,-5,-6,-6,-6,-6,-6,-7,-7,-7,-6,-6,-6,-6,-6,-6,-7,-7,-7,-7,-7,-7,-8,-8,-8,-8,-10,-10,-10,-9,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-5,-2,-1,-1,-2,-4,-5,-5,-5,-5,-6,-6,-7,-7,-7,-7,-7,-7,-6,-6,-6,-7,-6,-7,-7,-7,-7,-7,-7,-7,-7,-8,-8,-8,-10,-10,-10,-9,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-7,-5,-3,-2,-2,-4,-5,-6,-6,-6,-6,-6,-6,-7,-7,-7,-7,-7,-7,-6,-6,-6,-6,-6,-6,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-10,-10,-10,-9,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-9,-8,-8,-8,-8,-8,-6,-6,-6,-6,-5,-6,-6,-6,-6,-6,-7,-7,-7,-7,-7,-7,-7,-6,-6,-6,-6,-6,-6,-6,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-10,-10,-10,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-9,-9,-8,-8,-8,-8,-8,-7,-6,-6,-6,-5,-5,-5,-6,-6,-2,-5,-8,-7,-7,-7,-7,-7,-6,-6,-6,-6,-6,-6,-6,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-10,-10,-10,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-8,-9,-9,-8,-8,-8,-8,-8,-7,-6,-6,-5,-5,-5,-5,-6,-6,-3,-5,-8,-8,-7,-7,-7,-7,-6,-6,-6,-6,-6,-6,-6,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
