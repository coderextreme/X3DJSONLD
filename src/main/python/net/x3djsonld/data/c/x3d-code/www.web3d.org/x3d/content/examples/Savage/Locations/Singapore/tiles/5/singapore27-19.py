###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    Shape(
      appearance=Appearance(
        material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
        texture=ImageTexture(url=['../../images/5/singapore27-19.jpg'],repeatS=False,repeatT=False)),
      geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.4480194974058374,103.86273364845137,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=3.9897318E-4,zDimension=22,zSpacing=4.1579583E-4,height=[-21,-19,-17,-12,-5,1,7,9,9,10,10,10,9,9,8,7,6,2,-2,-7,-12,-15,-15,-14,-12,-8,-2,4,12,20,26,31,35,37,36,33,23,-21,-21,-19,-14,-7,0,6,9,9,10,10,10,10,9,9,8,8,6,1,-3,-9,-13,-15,-15,-15,-12,-8,-1,5,13,20,26,31,34,37,36,30,-22,-21,-20,-14,-6,0,7,9,10,10,10,10,10,10,9,9,9,7,6,2,-3,-8,-12,-15,-15,-14,-12,-7,-1,5,12,19,24,29,32,34,34,-21,-20,-17,-10,-2,3,8,10,10,10,10,10,10,10,10,9,9,8,8,6,1,-3,-9,-13,-15,-15,-14,-12,-7,0,6,13,19,23,26,29,33,-20,-18,-12,-4,4,8,10,10,10,10,10,10,10,10,10,10,9,9,9,7,5,2,-3,-8,-12,-15,-15,-13,-11,-6,0,6,13,18,21,23,25,-13,-11,-4,2,8,10,10,10,10,10,10,10,10,10,10,10,10,9,9,8,8,5,1,-3,-9,-13,-15,-15,-13,-10,-5,0,7,13,16,18,18,0,2,5,8,11,11,11,10,10,10,10,10,10,10,10,10,10,10,9,9,8,6,4,1,-4,-9,-13,-15,-14,-12,-8,-2,2,7,12,15,13,12,14,16,15,13,12,11,11,11,10,10,10,10,10,10,10,10,10,10,9,8,7,7,4,0,-4,-9,-13,-14,-13,-11,-6,0,4,9,12,9,21,23,23,21,19,15,12,11,11,10,10,10,10,10,10,10,10,10,10,9,9,8,7,5,3,0,-4,-9,-12,-14,-13,-9,-2,3,8,10,8,29,29,29,27,23,18,14,12,11,11,11,10,10,10,10,10,10,10,10,10,9,9,8,7,6,3,0,-4,-8,-12,-14,-11,-3,2,6,8,8,29,30,29,28,26,23,19,15,12,11,11,10,10,10,10,10,10,10,10,10,10,9,8,7,6,4,2,0,-3,-8,-11,-11,-6,0,3,7,8,29,30,29,29,29,27,23,18,14,12,11,11,11,10,10,10,10,10,10,10,10,9,9,8,6,5,4,3,0,-3,-8,-10,-7,-3,1,5,7,29,30,30,30,29,28,26,23,19,15,12,11,11,10,10,10,10,10,10,10,10,10,10,9,8,6,3,2,3,1,-5,-9,-8,-4,0,3,6,27,29,29,30,29,29,29,27,23,18,14,12,11,11,11,10,10,10,10,10,10,10,10,9,9,6,2,2,7,5,-2,-8,-7,-3,0,2,5,23,26,29,30,30,30,29,28,26,23,19,15,12,11,11,10,10,10,9,9,10,10,10,8,6,3,0,0,3,4,1,-1,-1,0,1,4,7,19,24,27,29,29,30,30,29,29,27,23,18,14,12,11,10,10,9,9,9,10,10,10,7,4,1,-1,-1,2,4,3,3,2,3,4,6,8,13,18,23,26,29,30,30,30,29,28,26,23,18,15,12,10,10,9,9,9,10,10,9,7,4,2,1,1,4,5,5,4,4,4,4,6,8,8,13,19,24,27,29,30,30,30,29,29,27,23,18,13,11,10,9,9,9,9,10,9,7,5,4,5,6,7,7,6,5,5,5,5,6,8,7,10,13,18,23,26,29,30,30,30,29,28,26,22,18,15,12,10,8,8,9,10,12,11,10,9,8,7,6,6,6,6,6,6,5,6,7,9,6,7,13,19,24,27,29,30,30,30,29,29,26,23,18,13,10,8,8,8,10,14,15,15,14,11,8,5,4,5,6,6,6,6,6,5,11,9,7,9,13,18,23,26,29,30,30,30,29,28,26,22,17,14,11,8,6,8,13,17,21,20,15,11,7,5,6,7,7,7,7,7,7,13,11,8,6,7,12,18,24,27,29,30,30,30,29,29,26,22,17,13,9,5,6,13,19,25,25,20,14,10,8,7,7,8,8,9,9,8],
        geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])))])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
