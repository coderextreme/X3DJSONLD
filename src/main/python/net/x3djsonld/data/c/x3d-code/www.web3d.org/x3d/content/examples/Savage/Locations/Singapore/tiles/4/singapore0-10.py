###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_010',geoSystem=['GDC'],position=(1.220994975577994,103.8914597167094,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.220994975577994,103.8914597167094,0.0),range=4101.627,child1Url=['../../tiles/5/singapore0-20.x3d'],child2Url=['../../tiles/5/singapore0-21.x3d'],child3Url=['../../tiles/5/singapore1-20.x3d'],child4Url=['../../tiles/5/singapore1-21.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore0-10.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.2122632632,103.87709668258039,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[3,4,5,8,13,14,8,3,2,2,6,8,3,4,11,8,5,2,4,5,8,10,6,4,7,6,6,4,6,4,4,8,9,4,3,7,9,3,4,4,7,12,12,6,3,3,5,6,6,0,4,8,8,9,3,6,7,9,9,7,5,6,5,5,7,8,4,5,9,9,4,3,6,8,4,4,4,7,12,12,6,3,4,7,7,7,1,4,5,6,9,5,9,6,10,8,7,5,5,4,5,8,8,6,6,9,8,4,5,7,7,4,4,4,7,11,10,6,4,5,9,8,8,3,4,2,4,9,6,10,6,11,8,6,4,5,3,6,8,9,8,6,8,7,5,7,7,7,3,3,4,6,8,6,5,3,7,10,7,7,5,4,2,4,6,6,8,5,11,8,6,5,5,5,7,7,8,9,7,8,6,6,7,8,8,3,3,3,5,4,3,3,3,10,11,4,4,6,4,2,5,4,4,5,4,10,7,6,5,7,8,8,7,8,10,8,8,5,6,7,8,9,5,4,2,3,3,4,5,5,9,11,5,2,8,6,5,6,4,3,6,5,8,5,6,4,6,7,3,5,7,9,8,9,5,6,7,8,9,9,6,1,1,3,7,10,8,9,9,7,2,10,9,8,7,6,3,7,7,8,3,6,4,3,5,-4,3,5,6,7,9,6,5,6,7,7,9,7,1,0,2,7,10,8,7,8,7,3,10,10,8,7,8,5,9,9,6,3,5,4,3,3,-4,2,4,5,7,9,7,5,4,5,6,8,7,1,0,0,4,9,6,6,6,7,5,10,11,6,6,10,9,10,9,3,3,4,5,3,0,0,1,2,4,7,10,7,5,3,4,5,6,4,-1,-3,-1,2,7,6,6,6,7,5,8,10,6,5,10,9,9,8,2,3,3,5,3,0,3,2,1,5,8,11,8,5,3,3,4,6,0,-6,-8,-5,0,4,5,7,6,6,5,6,9,7,5,8,8,8,6,1,3,3,4,3,3,7,4,0,6,10,11,7,5,2,1,2,4,-1,-6,-6,-3,0,3,5,6,5,5,5,4,8,7,5,7,8,6,5,2,3,3,4,4,4,8,8,3,9,12,11,6,5,3,0,0,2,-2,0,1,0,2,3,4,3,2,3,4,4,6,6,6,8,7,2,4,4,4,4,5,6,3,6,12,8,16,16,11,6,6,4,0,0,-1,-3,3,6,3,5,4,4,1,0,1,3,4,4,4,5,8,7,1,3,5,5,6,7,6,3,4,13,12,21,19,9,5,6,5,0,-1,-6,-5,6,7,6,9,8,4,1,0,0,0,4,4,2,3,7,6,2,2,5,6,9,9,5,2,3,9,14,27,20,8,5,6,5,0,0,-9,-4,9,8,8,11,9,5,1,0,0,0,4,4,2,1,6,5,2,2,5,7,13,14,5,1,2,7,16,26,19,7,5,5,3,0,0,-9,-1,8,8,8,9,7,5,2,1,0,1,5,4,4,1,3,4,3,4,6,8,17,20,7,1,2,8,18,20,14,8,7,5,0,-1,0,-9,0,7,8,8,8,7,5,3,1,1,3,5,3,3,0,0,5,4,5,6,8,17,21,8,2,4,11,21,15,11,9,9,5,0,-1,0,-10,0,4,6,8,10,7,3,3,0,1,4,3,1,0,0,0,6,7,8,6,5,9,14,8,4,6,17,24,13,11,10,10,7,3,1,3,-7,1,4,4,8,10,7,3,3,0,1,5,4,1,0,0,-1,6,9,9,6,2,4,9,7,5,8,20,24,11,10,8,10,9,6,5,5,0,5,5,5,8,9,7,6,5,3,6,7,10,5,0,1,0,7,10,9,6,2,4,6,5,4,8,21,17,9,8,6,8,11,7,5,5,4,7,6,6,8,9,8,8,5,6,9,9,15,8,0,2,0,7,10,10,6,1,4,4,3,4,9,20,11,8,7,5,7,12,9,5,5,6,6,6,6,8,8,7,8,5,6,12,10,14,10,3,3,0,8,13,10,6,0,3,1,1,3,12,16,8,9,9,9,8,9,8,6,6,7,6,6,6,8,8,7,8,5,6,14,10,13,11,5,3,0,8,13,8,6,0,3,2,2,5,15,12,6,9,10,11,8,8,8,7,7,7,7,6,7,7,8,7,4,3,9,12,7,7,6,6,0,0,4,6,1,2,1,6,8,10,16,18,12,8,6,9,10,7,7,9,9,9,7,7,7,7,6,8,7,1,2,10,10,5,3,3,7,0,0,1,2,-3,0,3,9,15,17,25,20,11,8,4,8,9,5,6,10,11,9,6,7,8,8,7,7,6,2,5,9,8,6,5,5,11,3,0,4,4,0,2,7,17,24,21,21,13,5,6,5,6,6,4,5,8,8,8,6,7,8,8,7,6,5,3,8,8,8,7,7,6,14,6,1,6,5,2,4,11,23,32,26,17,6,0,5,6,4,3,3,4,6,6,7,8,8,9,7,5,5,7,5,7,7,6,5,3,5,12,6,3,6,5,4,6,9,22,37,26,12,-2,-3,2,4,3,4,4,5,8,6,5,10,10,10,7,3,4,7,5,6,7,5,4,0,4,9,6,5,6,6,5,7,9,20,42,25,7,-10,-6,0,2,2,5,5,7,9,5,4,9,10,11,7,2,3,5,3,6,10,5,2,1,4,8,6,7,6,7,6,4,5,13,28,16,-3,-8,-3,0,2,2,8,7,7,6,4,4,7,10,12,7,0,3,3,0,7,12,5,2,2,5,7,5,8,7,8,8,2,2,5,15,7,-13,-7,0,0,3,2,10,9,6,2,2,4,7,9,11,8,3,3,3,3,7,12,6,5,3,3,5,-2,6,10,12,11,8,6,6,10,4,-6,-3,2,7,9,5,6,5,4,1,2,4,6,9,9,9,7,3,3,5,8,11,6,8,5,3,2,-12,4,13,16,14,14,10,6,5,1,0,0,5,16,16,9,3,2,1,0,3,5,5,6,5,5,6,2,0,4,6,7,4,7,5,3,-7,-38,-2,17,23,14,13,9,4,4,4,4,5,6,19,21,12,3,3,3,2,5,8,4,3,0,1,4,1,0,2,4,2,1,6,4,4,-16,-63,-9,21,30,12,10,7,3,4,7,8,10,6,22,25,15,5,4,5,4,8,11,5,4,0,0,3,0,0,1,2,2,2,3,2,4,-7,-39,-4,25,22,8,6,5,-1,0,6,8,9,5,17,19,11,2,0,2,3,10,13,5,5,0,0,2,0,0,1,1,4,3,1,1,5,4,-7,2,29,12,4,4,4,-6,-3,3,8,8,3,12,13,5,-1,-3,-1,2,11,15,4,4,0,0,3,2,2,2,1,4,4,1,3,6,6,1,6,21,6,4,0,-3,-9,-1,1,6,7,3,11,12,6,-1,-3,0,4,11,14,4,4,0,0,3,5,5,2,0,4,6,4,7,7,5,5,9,10,2,5,-3,-14,-10,1,0,3,4,2,11,11,8,1,-3,2,8,10,10,5,4,0,1,6,5,4,4,3,6,6,5,7,5,7,8,8,5,2,4,-2,-14,-5,1,0,5,4,5,10,9,10,3,0,7,12,11,10,6,5,1,3,8,4,3,5,7,9,7,7,5,4,9,11,6,3,3,2,-1,-10,1,2,2,8,4,9,8,7,10,6,4,11,15,12,9,4,0,0,5,7,2,2,5,9,9,8,8,4,6,17,16,6,3,5,1,0,-5,4,7,6,7,3,8,6,6,8,6,5,12,15,13,11],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
