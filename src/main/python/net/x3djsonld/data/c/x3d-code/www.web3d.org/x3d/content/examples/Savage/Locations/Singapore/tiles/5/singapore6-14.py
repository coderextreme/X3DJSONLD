###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    Shape(
      appearance=Appearance(
        material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
        texture=ImageTexture(url=['../../images/5/singapore6-14.jpg'],repeatS=False,repeatT=False)),
      geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.264653537467964,103.79091847780627,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=36,xSpacing=4.103724E-4,zDimension=23,zSpacing=3.96896E-4,height=[5,3,1,0,-3,0,3,10,16,18,18,17,17,16,14,15,16,18,19,21,21,21,19,18,17,15,14,13,16,20,25,27,25,22,13,7,6,4,3,0,-1,0,-1,3,10,14,18,18,17,16,14,14,14,16,18,19,21,21,20,19,18,17,18,20,23,27,31,32,24,16,10,6,7,6,5,3,1,0,-4,0,3,10,16,17,17,16,14,13,12,14,16,18,21,21,21,20,19,19,23,27,31,35,37,34,21,10,6,5,10,8,6,4,3,0,-1,0,-1,3,10,14,17,16,14,13,12,12,14,17,21,23,22,21,20,22,27,33,39,42,40,33,18,5,4,4,13,10,7,6,5,3,1,0,-4,0,3,10,16,16,14,13,11,11,12,16,21,24,24,24,23,26,31,37,43,45,38,29,14,3,3,4,15,12,10,8,6,4,3,0,-1,-1,0,4,10,14,16,14,8,9,11,15,20,24,28,29,28,30,34,38,41,39,31,21,11,3,3,3,18,16,13,10,8,7,6,4,1,0,-4,-1,2,9,16,14,7,7,10,14,18,24,30,33,33,33,35,36,36,31,21,13,8,5,5,5,18,16,14,12,9,7,6,4,2,0,-1,-1,0,4,10,11,8,8,10,12,16,21,30,34,34,34,34,33,31,27,17,11,8,6,8,9,18,17,16,14,11,9,7,5,4,2,0,-1,-4,0,6,9,10,9,9,10,12,18,29,34,35,35,31,28,25,21,13,7,7,8,11,13,17,17,18,15,13,10,8,7,5,3,1,0,-1,2,7,10,11,10,7,7,9,14,22,28,32,32,28,24,20,15,10,8,9,11,14,16,15,17,18,16,14,12,9,8,6,4,2,1,0,4,9,11,12,10,6,5,6,10,15,21,28,29,25,19,14,10,8,8,11,14,17,20,14,15,17,17,17,13,9,9,8,6,4,3,1,4,8,10,11,10,7,6,6,8,11,15,19,21,17,13,8,6,8,11,15,18,21,22,13,14,14,16,18,14,8,8,9,7,5,4,2,4,6,7,9,9,8,7,7,6,7,9,12,12,10,7,3,3,8,14,18,22,24,25,13,13,12,14,15,12,8,8,9,8,6,5,3,6,8,9,9,9,9,8,7,7,7,8,9,8,7,6,4,5,10,15,21,26,28,27,15,13,11,11,11,9,8,8,9,8,7,5,4,8,12,12,10,10,10,9,8,8,8,8,6,5,5,5,5,8,12,17,25,31,31,30,14,11,9,9,8,7,6,7,8,8,7,8,9,12,15,13,10,9,9,9,9,9,9,8,6,5,5,6,7,9,12,17,25,31,29,27,12,10,8,6,5,5,5,6,7,7,7,10,14,17,18,15,10,8,7,8,8,9,9,8,6,6,7,8,9,10,12,17,25,30,26,23,8,7,7,6,5,6,6,7,8,10,12,15,17,17,18,14,8,7,6,6,8,8,10,9,7,7,10,11,10,10,13,17,22,25,22,19,5,5,5,6,7,8,9,9,10,14,18,20,21,18,16,12,7,5,4,5,7,9,12,11,8,8,12,13,10,10,14,17,19,19,18,16,4,4,5,6,8,9,9,10,10,14,19,18,17,14,11,8,6,5,4,4,6,8,10,10,10,11,13,13,11,10,14,16,16,16,15,14,2,4,5,7,9,9,10,10,11,14,18,15,12,8,5,4,5,5,4,4,5,6,6,8,12,14,14,14,12,12,14,16,14,12,12,11,4,5,5,7,9,10,10,10,9,12,14,12,10,7,4,4,5,6,6,7,8,9,9,11,14,15,15,14,14,15,16,16,15,13,12,11,7,6,6,7,9,9,10,9,7,8,10,10,10,7,5,6,7,9,10,11,13,14,14,15,16,16,16,16,17,18,18,17,16,14,12,11],
        geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])))])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
