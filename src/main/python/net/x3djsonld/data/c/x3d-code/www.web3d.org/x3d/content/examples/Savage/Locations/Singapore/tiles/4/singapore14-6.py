###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_146',geoSystem=['GDC'],position=(1.4654829221618253,103.77655544367725,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.4654829221618253,103.77655544367725,0.0),range=4101.627,child1Url=['../../tiles/5/singapore28-12.x3d'],child2Url=['../../tiles/5/singapore28-13.x3d'],child3Url=['../../tiles/5/singapore29-12.x3d'],child4Url=['../../tiles/5/singapore29-13.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore14-6.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.4567512097838313,103.76219240954823,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[27,21,14,12,13,13,11,10,10,14,21,20,21,19,13,7,5,4,4,4,1,0,4,14,14,14,14,15,12,12,11,10,11,12,17,25,29,27,21,16,14,14,12,11,12,13,16,20,20,21,18,11,6,5,5,5,4,2,1,9,15,14,14,14,16,12,10,9,9,10,14,19,24,27,28,22,18,17,14,12,12,15,17,17,19,21,20,16,10,6,5,5,5,5,4,4,14,14,14,14,16,15,12,8,7,9,11,16,21,24,23,29,25,19,15,13,11,12,16,18,18,19,21,18,15,11,7,6,5,5,5,5,6,15,14,14,15,16,13,10,7,6,8,11,16,22,23,22,30,29,21,11,12,10,12,17,18,18,18,20,17,14,12,7,6,5,5,5,5,7,14,14,14,16,15,12,8,6,4,8,11,17,22,22,20,33,33,23,12,11,12,15,18,18,18,18,18,16,15,16,9,6,5,5,5,5,6,14,14,15,16,14,10,7,5,4,8,10,15,21,22,20,36,38,27,15,12,14,21,20,20,18,17,17,15,17,19,12,7,5,5,5,5,5,13,14,16,16,13,8,6,4,4,7,8,13,19,21,20,35,34,25,19,13,14,21,21,23,21,17,16,15,18,21,11,7,5,5,5,5,5,12,15,16,15,11,7,5,4,4,6,7,7,14,18,17,34,27,22,23,14,13,19,23,27,25,18,15,15,20,21,10,6,5,5,5,5,5,10,15,16,13,9,6,4,4,4,6,6,1,8,13,13,29,24,22,22,12,13,18,22,29,27,19,15,14,18,16,8,5,5,5,5,5,5,10,14,15,11,7,5,4,4,5,6,3,0,5,11,11,23,23,24,19,11,12,16,21,30,29,21,16,14,14,7,6,3,5,5,5,6,7,10,12,12,10,6,4,4,4,5,4,0,0,5,9,9,20,21,23,17,12,14,17,21,29,29,21,16,14,11,2,3,3,6,7,6,7,8,10,11,11,9,6,4,4,5,5,2,0,0,5,8,9,18,19,19,15,14,18,21,22,26,27,22,17,13,9,0,0,4,8,9,10,7,8,10,11,12,10,5,4,4,5,4,0,0,1,6,8,8,16,17,16,14,17,21,23,22,25,26,21,17,14,9,1,2,6,10,10,10,8,9,11,12,11,10,5,4,5,5,2,0,0,3,6,8,7,15,16,14,13,19,23,23,22,24,23,19,17,14,10,7,7,8,11,11,9,7,9,11,12,11,11,7,5,5,4,0,0,0,5,7,7,6,12,14,12,12,20,25,26,24,23,21,18,17,15,13,12,10,11,11,11,7,7,10,12,11,11,11,8,7,6,2,0,0,2,6,7,6,6,8,11,10,12,20,28,30,28,25,19,17,17,17,17,15,11,13,11,9,6,7,10,11,10,10,10,9,10,7,0,-1,0,4,7,7,6,6,8,9,9,11,18,28,32,31,26,19,16,18,21,21,18,13,13,11,8,4,7,11,11,10,10,10,11,12,7,0,0,2,6,7,6,6,5,9,8,8,11,16,26,33,33,28,20,16,20,27,26,20,15,13,10,8,3,6,11,10,9,9,10,12,15,9,3,1,5,7,7,6,5,5,10,8,9,11,16,25,32,34,29,20,16,21,30,29,23,18,14,10,10,4,6,10,9,9,9,11,13,16,10,5,4,6,7,6,6,5,5,10,9,10,13,18,24,30,33,29,21,16,19,30,29,26,21,16,12,11,7,5,7,8,8,9,12,15,15,11,7,6,6,7,6,6,5,5,11,11,12,15,21,25,30,33,30,21,17,19,29,31,28,23,19,14,12,9,5,6,7,8,10,13,16,14,11,8,7,7,6,6,5,5,6,14,16,15,16,23,29,33,34,31,22,19,21,28,33,30,26,24,17,12,9,8,6,7,9,12,15,15,12,11,9,8,7,6,6,5,7,8,18,20,17,16,23,31,35,36,33,24,21,23,29,34,32,28,27,20,13,10,10,8,8,10,13,16,13,12,11,9,8,7,6,5,5,8,9,22,23,18,16,22,30,36,36,33,27,23,25,30,35,33,29,27,23,17,11,11,9,9,11,15,14,11,12,11,10,8,7,6,5,6,8,9,26,26,20,16,20,28,35,36,34,29,25,28,32,35,34,30,27,24,19,12,12,9,10,13,15,11,10,12,11,9,7,6,6,6,7,9,9,26,27,21,17,19,26,34,36,33,30,27,33,34,35,32,29,27,24,19,13,14,10,11,15,14,9,10,13,12,9,7,6,6,5,7,8,9,27,28,23,18,19,24,32,36,33,30,29,35,34,33,29,27,26,23,19,14,17,11,11,16,11,7,11,13,13,8,6,6,5,5,6,9,10,29,30,26,21,20,25,31,35,32,29,27,32,32,29,25,25,24,22,18,17,19,15,12,15,9,6,9,17,12,7,5,5,5,4,5,9,11,31,32,29,25,23,26,31,34,32,28,25,28,28,25,21,23,22,21,17,19,21,19,14,14,7,6,8,18,10,6,5,5,4,4,5,10,12,31,34,34,29,25,27,32,33,30,27,24,25,24,22,19,20,20,17,15,20,22,22,20,16,7,6,8,13,7,5,5,5,4,4,7,10,12,30,37,38,33,28,29,32,32,28,24,22,23,21,20,17,18,18,14,14,19,23,24,24,18,9,8,9,8,5,5,6,5,4,5,8,11,11,27,37,43,37,31,33,33,30,27,24,23,23,20,18,16,16,15,13,13,15,19,25,25,18,11,14,16,12,7,6,6,4,4,7,9,10,10,24,38,47,41,35,36,33,29,27,24,24,23,20,17,15,14,13,13,12,12,15,25,25,18,13,20,22,16,9,7,6,4,5,9,10,9,9,22,33,42,40,38,39,35,31,29,28,27,24,21,16,15,13,13,13,12,11,11,18,20,16,14,23,22,16,11,8,5,4,7,9,10,8,7,20,28,37,39,40,43,36,33,31,32,29,24,22,17,14,14,14,13,11,10,8,12,16,14,14,25,20,16,12,9,4,5,9,10,9,7,5,22,28,34,37,40,42,37,35,32,32,28,23,21,17,15,15,16,15,11,10,8,10,12,12,13,21,16,13,12,7,4,7,9,10,8,5,3,24,28,32,35,39,41,38,37,33,32,27,22,19,17,16,17,19,18,13,10,8,9,8,11,12,17,12,11,11,5,5,9,10,9,7,3,2,24,28,30,33,37,37,34,36,33,29,25,21,18,17,19,19,19,17,13,10,8,9,8,11,12,15,12,12,12,6,7,9,10,8,5,3,2,24,27,29,32,34,32,30,34,32,26,22,20,18,18,22,22,18,15,12,11,8,9,10,11,12,14,12,13,13,8,9,10,9,7,3,2,2,25,27,29,32,32,29,28,32,31,25,21,20,21,21,23,22,17,13,12,11,10,10,11,11,12,13,13,14,12,9,10,10,8,5,3,2,2,25,27,29,31,30,26,26,29,28,24,20,21,24,24,24,21,15,12,12,12,13,10,11,10,12,13,12,14,11,10,12,10,7,4,2,3,3,28,29,30,33,32,28,26,28,27,24,21,23,26,25,24,20,15,12,12,13,16,13,11,10,12,12,12,14,11,11,12,10,6,4,3,4,5,32,32,31,36,34,31,28,27,27,24,24,27,27,25,23,19,16,14,13,15,18,17,12,10,12,12,13,14,12,11,11,10,5,3,5,6,7],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
