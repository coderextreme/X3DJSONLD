###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_93',geoSystem=['GDC'],position=(1.3781657983818856,103.69037723890314,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.3781657983818856,103.69037723890314,0.0),range=4101.627,child1Url=['../../tiles/5/singapore18-6.x3d'],child2Url=['../../tiles/5/singapore18-7.x3d'],child3Url=['../../tiles/5/singapore19-6.x3d'],child4Url=['../../tiles/5/singapore19-7.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore9-3.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.3694340860038916,103.67601420477412,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[14,24,34,44,37,28,19,13,14,20,24,22,22,22,20,14,10,12,15,15,17,20,22,23,21,21,24,27,27,26,26,26,22,18,14,14,13,12,26,41,49,39,29,21,16,15,23,26,23,23,23,21,14,11,12,14,14,16,20,22,23,22,21,24,25,27,26,27,28,24,19,15,13,13,11,30,48,52,40,30,23,18,16,24,27,23,23,24,21,16,11,12,13,13,15,19,23,24,23,22,24,24,25,27,29,29,25,19,16,13,13,13,33,51,51,39,29,22,17,14,21,25,21,21,23,21,17,12,11,12,12,14,19,23,25,24,22,23,23,25,28,31,29,24,18,16,14,13,15,35,51,48,38,28,21,15,11,17,20,17,17,20,20,18,13,10,11,11,14,20,24,26,25,22,23,23,25,29,32,28,23,18,15,15,14,19,37,50,43,35,26,19,13,10,14,16,14,14,17,17,16,13,10,12,12,14,20,25,27,26,24,25,25,26,30,32,29,24,19,16,15,14,22,37,48,38,30,24,17,10,9,11,13,12,12,13,13,13,11,11,14,15,15,20,26,28,27,25,27,28,29,31,32,29,26,21,18,16,15,22,36,45,34,25,20,14,10,9,10,12,12,11,11,10,10,9,12,17,18,17,20,26,29,28,27,28,30,31,32,32,30,28,24,20,17,15,19,33,41,31,21,17,13,10,10,11,12,13,10,8,8,8,8,12,18,21,19,19,25,29,29,29,29,31,33,33,32,31,29,26,23,18,15,16,30,34,26,20,15,12,11,11,11,12,14,10,7,7,7,8,12,18,21,20,20,25,28,29,29,30,32,33,33,32,30,30,27,26,21,17,14,26,27,20,20,16,11,12,12,12,13,16,11,7,7,8,9,11,15,21,21,21,26,27,27,28,30,31,33,32,31,28,29,28,28,24,20,12,21,20,15,21,17,12,13,13,13,14,16,10,7,7,9,12,12,15,20,21,22,27,28,26,28,30,29,32,31,30,27,28,29,29,26,23,9,14,13,12,21,20,12,14,13,14,15,14,9,7,7,10,14,14,16,19,21,23,29,29,27,28,28,27,30,31,30,27,28,29,28,27,24,7,9,9,9,19,21,12,14,13,13,14,12,8,7,7,11,14,14,15,17,19,23,28,30,28,28,27,25,28,30,30,29,29,29,25,25,23,6,6,7,8,15,20,12,14,12,12,13,9,8,9,8,10,12,12,13,14,16,21,27,30,29,27,25,25,27,30,30,32,30,27,23,22,20,6,5,5,7,12,17,11,13,12,11,11,8,9,11,10,10,10,10,10,12,15,20,26,30,29,27,24,24,26,30,31,33,31,26,21,20,20,6,5,5,6,10,12,9,12,12,11,10,8,12,16,14,10,10,10,9,10,14,20,25,28,29,27,25,26,27,31,31,31,30,24,21,21,21,6,5,5,6,9,8,8,12,12,10,9,9,16,21,18,12,10,11,10,10,14,19,24,26,28,27,26,27,28,31,31,28,28,23,22,24,24,6,5,5,6,8,8,8,13,12,9,8,11,20,26,22,15,13,13,12,11,13,18,22,25,26,26,26,27,30,33,31,25,23,22,25,27,28,7,6,6,6,8,8,10,14,11,8,7,12,23,29,25,19,16,15,14,12,13,17,21,24,25,26,25,27,31,34,30,23,21,23,28,30,31,7,7,7,7,7,10,13,14,9,8,7,13,23,29,28,23,19,16,15,13,14,17,21,25,25,25,25,26,30,33,29,24,22,26,29,32,32,7,7,8,7,7,12,16,14,8,8,8,13,21,27,28,25,21,17,17,15,14,16,20,24,25,25,24,25,30,32,28,24,24,28,30,32,31,8,8,9,8,8,11,16,14,9,11,11,14,17,24,26,24,20,18,18,16,14,16,19,24,26,24,23,24,30,31,26,25,27,29,30,31,29,8,8,9,8,8,10,15,12,8,12,13,13,14,20,24,21,18,17,19,18,15,15,19,24,27,24,23,24,28,29,25,26,29,29,30,30,27,7,8,8,7,7,8,11,8,7,10,11,11,10,16,20,16,14,15,18,19,17,17,19,25,28,26,24,24,26,26,25,29,30,28,30,30,27,7,7,8,6,7,6,7,6,6,9,10,9,9,13,16,12,12,14,18,20,19,18,20,27,29,26,24,24,26,24,25,31,31,27,28,29,26,7,7,8,8,8,6,6,5,7,9,9,9,10,12,12,12,13,14,16,19,21,20,22,27,29,26,24,24,27,26,26,31,31,26,25,26,24,7,7,7,8,9,5,5,5,7,9,9,10,12,11,10,12,14,14,14,18,22,22,23,27,28,26,24,25,29,28,27,30,29,24,22,23,23,6,6,7,7,7,4,4,5,7,10,11,13,15,12,11,13,16,16,15,16,21,22,22,25,27,25,25,27,29,29,27,27,25,20,19,21,22,6,6,7,6,6,3,3,5,8,11,13,16,16,13,13,15,17,18,16,16,20,22,22,24,25,25,25,27,30,30,27,25,22,17,18,20,21,5,5,6,7,6,3,5,6,8,11,15,18,16,14,15,16,17,18,17,16,19,22,23,24,25,25,25,27,31,30,28,25,22,18,19,20,20,5,5,6,8,6,4,7,7,8,12,17,19,16,15,17,18,18,19,19,18,20,22,23,23,24,24,25,27,31,30,29,25,23,20,19,20,20,5,5,7,8,6,6,7,8,9,13,17,19,17,16,19,19,18,19,20,20,21,22,22,23,23,23,24,27,30,28,28,26,24,20,18,18,18,5,6,7,8,7,7,8,8,9,13,16,18,17,18,20,20,18,19,21,22,22,22,22,22,22,22,23,26,28,26,26,27,24,20,18,17,17,6,7,6,7,7,7,8,9,10,12,14,18,19,19,21,21,19,21,23,24,23,23,22,21,22,21,22,25,26,25,25,25,24,20,17,16,17,8,7,6,7,7,6,8,11,11,11,13,17,19,20,22,22,21,22,24,25,24,22,22,21,21,21,21,24,25,24,24,23,23,20,17,16,17,9,7,7,8,7,6,10,14,14,11,11,14,17,18,21,22,21,23,24,25,23,21,20,20,21,20,21,23,24,24,23,22,22,19,17,17,17,10,7,7,9,7,6,12,17,16,12,11,12,15,17,20,21,22,23,24,25,23,20,19,20,20,20,22,22,23,23,22,20,21,20,18,18,18,11,9,8,8,6,7,14,19,18,12,11,12,14,16,18,21,21,23,24,24,22,20,19,19,19,19,22,23,23,23,21,19,20,20,19,19,18,12,10,8,7,6,8,16,21,18,12,10,12,14,15,18,20,21,23,24,24,22,21,20,18,18,19,23,23,22,22,19,18,20,20,20,19,18,13,11,9,7,6,8,15,20,16,11,10,11,13,14,16,18,20,21,22,23,22,21,20,18,18,19,23,23,21,21,19,18,20,20,21,20,19,16,12,9,6,7,9,12,17,13,9,8,10,13,13,15,17,19,19,21,22,22,21,20,18,18,19,23,23,20,21,19,18,22,21,22,21,20,20,14,10,7,7,8,10,13,10,7,7,8,11,12,16,18,19,18,19,21,22,22,21,19,18,20,23,24,21,20,19,18,22,21,23,22,21,26,17,10,7,7,8,7,8,9,6,6,7,10,11,16,19,19,18,19,21,23,23,22,19,19,20,23,25,22,21,19,19,21,21,23,22,21],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
