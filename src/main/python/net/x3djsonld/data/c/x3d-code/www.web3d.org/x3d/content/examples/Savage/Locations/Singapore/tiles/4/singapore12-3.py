###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_123',geoSystem=['GDC'],position=(1.4305560726498494,103.69037723890314,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.4305560726498494,103.69037723890314,0.0),range=4101.627,child1Url=['../../tiles/5/singapore24-6.x3d'],child2Url=['../../tiles/5/singapore24-7.x3d'],child3Url=['../../tiles/5/singapore25-6.x3d'],child4Url=['../../tiles/5/singapore25-7.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore12-3.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.4218243602718554,103.67601420477412,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[19,18,27,31,21,8,7,8,10,12,10,9,15,20,22,22,21,19,22,21,14,13,18,20,18,18,20,19,18,20,22,24,23,22,23,23,23,23,20,24,26,17,9,7,8,9,11,10,10,15,20,22,23,21,18,20,21,14,11,13,16,17,18,19,19,19,19,20,24,24,24,25,26,25,26,21,21,21,15,11,8,8,9,12,9,10,15,19,21,22,21,17,19,19,15,10,10,13,16,16,18,19,19,19,19,24,25,25,27,28,27,26,21,18,15,14,13,12,11,10,13,8,8,14,17,19,21,21,16,16,17,12,9,8,12,15,15,17,20,20,17,17,21,24,27,28,29,28,25,20,15,11,13,14,16,13,12,13,7,8,14,15,17,19,21,16,14,15,11,8,6,10,14,15,18,21,20,16,15,18,23,27,29,30,29,20,16,13,12,13,14,16,15,14,11,4,7,13,15,16,19,20,15,13,14,11,8,8,11,14,17,19,21,20,17,14,16,21,26,28,30,30,15,12,12,12,13,14,17,16,15,9,3,6,12,15,16,19,19,14,13,13,11,9,9,12,15,19,21,21,20,17,14,15,20,25,27,30,30,13,13,12,12,13,15,19,18,16,10,6,10,13,13,12,14,17,15,15,13,13,13,12,14,16,19,22,21,20,16,15,17,20,23,25,30,29,10,13,13,12,13,16,21,20,18,11,10,13,14,11,8,11,15,17,16,14,16,16,14,16,17,19,22,20,20,17,16,18,21,20,24,29,29,8,13,17,15,15,20,24,22,18,13,11,13,12,9,6,11,15,14,15,17,19,18,16,18,18,20,21,18,18,17,16,18,20,20,23,28,28,6,14,21,18,18,24,26,23,18,14,12,13,10,7,5,12,15,13,14,19,21,20,17,19,19,21,20,17,17,16,16,19,20,20,23,27,28,8,15,21,20,24,29,29,23,17,13,10,11,9,7,7,12,13,12,14,18,19,18,20,21,20,20,20,17,16,15,16,21,22,21,24,27,28,10,16,22,22,28,33,31,22,15,11,9,8,8,6,10,12,11,11,14,17,17,18,22,23,21,20,21,18,14,14,16,22,23,22,25,28,29,13,18,22,23,26,27,23,16,11,9,8,6,8,9,12,14,12,11,16,18,16,18,23,23,20,20,22,17,13,14,17,23,22,22,25,27,28,15,20,23,23,22,20,14,11,7,8,8,5,8,11,15,16,13,12,17,18,15,18,23,22,19,21,22,17,13,14,19,23,21,23,26,26,27,17,20,21,22,18,14,10,10,7,9,10,7,10,14,18,18,14,13,16,18,16,18,21,21,19,19,20,16,12,15,19,22,20,22,25,26,27,18,20,19,20,15,9,8,10,8,10,12,10,13,18,21,19,15,13,15,18,18,20,21,21,19,17,17,15,12,15,20,21,19,21,25,26,27,18,19,19,19,14,9,6,7,7,10,12,12,13,19,21,17,13,13,15,18,20,21,21,22,19,15,15,14,11,15,19,20,19,22,26,27,27,18,19,18,18,14,9,5,4,6,9,12,13,14,21,21,16,12,12,15,19,22,22,23,24,20,15,14,13,10,14,18,19,18,23,26,27,27,19,19,18,17,13,8,3,1,4,9,11,11,13,21,19,13,11,14,17,20,23,23,24,25,21,16,15,13,10,12,16,19,17,23,26,28,27,19,19,18,16,13,5,0,0,2,9,10,10,11,20,18,12,11,15,19,22,23,23,25,26,22,18,16,13,9,11,15,18,15,21,26,28,27,19,18,18,15,10,3,0,0,2,8,9,8,12,19,17,12,12,16,21,23,23,22,23,24,22,20,17,14,10,10,14,17,13,18,23,26,26,18,18,17,15,7,0,-1,0,2,7,8,7,13,20,17,13,12,18,23,24,23,21,20,22,22,21,18,16,11,10,14,15,11,13,20,24,24,17,18,17,12,3,-1,-1,0,2,5,7,8,13,17,15,12,13,19,23,24,23,20,19,20,22,22,19,17,12,10,13,13,10,11,17,22,23,17,17,15,8,0,-2,-1,0,2,5,7,9,12,14,11,11,13,18,23,24,24,20,18,19,21,23,20,17,13,10,12,12,10,9,15,20,22,15,16,13,4,-1,-2,-1,0,2,5,7,9,12,12,10,11,12,16,20,22,22,19,17,17,20,23,21,17,13,10,11,11,10,10,15,19,21,14,14,9,0,-2,-2,-1,0,3,6,7,9,12,11,11,12,12,13,16,19,20,18,16,15,19,24,21,18,14,10,11,11,10,13,18,19,20,14,13,7,-1,-2,-2,0,0,4,6,8,10,12,11,12,12,11,11,14,15,16,14,13,14,17,21,20,18,15,12,12,11,10,14,18,18,19,14,13,8,-1,-1,-1,0,1,5,7,8,11,12,12,12,12,11,11,13,12,12,10,8,12,15,16,16,17,16,15,14,11,11,13,16,15,17,14,13,9,0,0,0,0,2,6,7,9,11,12,12,13,12,11,11,12,10,9,8,8,13,14,13,15,18,18,18,17,12,11,12,14,15,16,14,14,12,4,1,1,2,5,6,8,11,12,12,13,12,11,11,10,10,8,9,9,11,15,14,12,15,20,20,20,20,16,12,12,14,18,19,14,14,13,7,4,4,5,6,8,9,11,12,12,13,12,11,10,10,9,8,9,10,14,16,12,10,14,20,21,21,22,18,12,12,15,22,21,14,14,11,8,7,7,7,8,9,11,12,12,13,13,12,11,10,9,8,8,9,12,16,15,9,7,13,18,20,22,23,21,14,13,18,26,26,14,13,10,9,9,9,9,9,10,12,12,12,13,13,12,11,9,8,8,8,10,14,16,12,7,6,12,16,19,22,22,21,15,14,19,28,28,14,12,10,9,9,9,9,9,11,12,13,13,13,13,12,10,9,8,8,9,12,16,15,10,5,7,11,14,19,22,20,20,15,14,19,27,28,14,11,9,9,9,9,9,10,11,13,13,13,13,12,11,10,8,8,8,10,14,16,13,7,5,9,9,11,16,22,20,20,15,15,18,26,28,13,10,10,9,9,9,9,10,12,13,13,13,13,12,11,9,8,8,9,12,16,15,10,5,6,9,7,7,13,19,21,21,18,16,17,24,26,12,10,10,9,9,9,9,10,12,13,13,13,13,13,11,10,9,9,10,14,16,13,7,4,8,9,5,4,10,16,20,22,19,16,16,23,25,12,10,10,9,9,8,9,11,12,13,13,13,13,15,16,15,14,15,15,16,15,10,5,6,8,7,3,3,8,14,18,21,18,17,15,21,22,12,11,10,9,9,8,9,11,13,13,13,12,13,16,19,20,19,20,20,19,15,8,4,8,8,4,2,4,7,13,16,19,18,17,15,19,20,12,11,10,9,9,8,9,12,13,13,13,11,13,16,20,23,24,26,27,27,22,11,6,8,6,2,1,2,4,12,15,18,17,17,15,16,17,12,12,11,9,9,7,9,12,13,13,12,11,12,17,21,25,28,31,33,34,28,14,8,8,4,1,0,0,3,11,13,16,16,17,15,13,16,13,13,12,11,10,7,10,13,13,13,11,9,12,17,22,26,28,31,33,34,31,20,9,6,2,0,0,0,1,9,9,12,13,15,15,15,19,13,13,14,13,11,7,10,13,12,12,9,7,12,18,22,26,29,31,33,34,34,24,9,4,1,0,0,-1,0,7,5,7,10,13,14,16,22],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
