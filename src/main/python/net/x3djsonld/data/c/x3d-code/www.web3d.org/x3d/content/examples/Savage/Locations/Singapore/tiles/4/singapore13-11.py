###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_1311',geoSystem=['GDC'],position=(1.4480194974058374,103.92018578496744,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.4480194974058374,103.92018578496744,0.0),range=4101.627,child1Url=['../../tiles/5/singapore26-22.x3d'],child2Url=['../../tiles/5/singapore26-23.x3d'],child3Url=['../../tiles/5/singapore27-22.x3d'],child4Url=['../../tiles/5/singapore27-23.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore13-11.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.4392877850278434,103.90582275083842,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[10,9,9,8,9,8,8,7,7,7,6,7,8,8,6,7,7,8,7,6,7,8,8,8,8,7,7,7,7,7,7,8,10,9,6,4,2,12,11,10,11,9,8,8,6,7,6,6,7,8,8,8,9,8,8,7,7,7,7,8,8,7,7,8,8,7,7,7,7,8,8,6,4,3,12,13,10,13,10,8,8,6,7,6,6,7,8,8,9,10,9,9,7,7,7,7,7,7,7,8,9,8,7,7,7,7,7,7,6,4,3,10,11,10,14,11,10,10,9,8,7,7,7,8,8,9,10,8,8,9,8,7,7,7,7,7,8,12,10,8,8,8,7,7,6,6,5,5,7,10,11,13,13,11,11,11,9,7,8,7,8,8,10,10,8,8,9,8,7,7,7,7,7,9,13,12,8,8,7,7,6,6,6,5,6,8,10,11,12,12,11,11,10,10,7,8,8,8,8,10,10,8,9,9,7,7,7,8,8,7,9,13,11,8,7,6,6,6,5,6,6,6,9,9,10,11,11,10,10,9,10,7,8,9,9,9,10,10,8,9,8,7,7,8,9,8,7,9,13,11,9,6,6,6,6,5,7,6,6,8,9,8,9,10,9,10,8,10,8,7,9,10,10,10,9,8,8,8,8,8,9,8,8,8,9,11,10,8,6,6,5,6,5,7,6,6,8,8,8,7,10,9,10,8,10,8,7,9,11,11,11,9,8,8,8,8,8,9,8,8,8,8,10,10,7,5,6,5,6,6,7,6,6,7,7,8,8,9,8,9,8,9,9,8,10,11,12,13,11,9,9,9,8,8,9,8,8,9,9,9,9,7,6,7,6,7,6,8,7,8,7,6,8,8,9,8,9,9,9,10,9,11,12,12,14,12,10,9,9,8,8,9,8,9,9,10,9,9,8,8,7,7,7,7,8,9,10,7,7,9,9,9,10,11,10,9,10,11,12,12,12,15,13,11,10,9,8,8,9,9,9,10,10,10,8,7,8,7,8,8,7,7,9,10,8,7,10,10,10,12,12,11,9,10,12,13,11,12,17,15,12,10,8,8,9,9,9,10,9,10,10,8,7,7,6,8,8,7,7,9,10,8,8,10,10,10,11,11,10,9,10,12,12,12,13,16,15,12,10,8,8,9,10,10,10,9,9,9,7,7,7,7,9,8,7,8,9,11,9,9,9,10,9,9,11,10,9,10,12,11,13,15,15,15,12,9,8,8,10,12,10,10,9,8,8,7,7,8,8,10,8,7,10,10,12,9,9,10,10,9,9,10,10,10,10,12,12,13,15,15,15,12,10,9,8,11,14,12,10,9,9,9,9,9,10,10,10,9,8,11,11,14,8,10,11,10,9,9,10,10,11,11,12,12,13,15,16,14,12,11,10,8,11,15,14,10,10,10,12,11,12,13,12,10,10,10,12,13,16,6,10,11,10,9,9,10,10,11,12,12,12,13,15,15,13,12,12,11,10,12,16,15,11,10,11,13,13,14,14,13,12,11,11,13,14,17,5,11,11,10,10,9,10,10,11,13,13,13,15,14,14,12,12,13,13,12,14,17,16,13,10,12,15,14,15,14,14,13,12,12,14,15,18,6,11,12,10,10,9,10,10,11,13,13,13,15,14,14,12,13,14,14,14,16,17,16,14,11,13,15,16,16,16,15,15,14,14,15,17,19,7,11,12,11,10,10,10,11,12,14,14,14,15,14,13,13,14,15,15,15,16,15,15,15,14,13,14,17,19,19,18,16,14,17,18,19,21,8,11,12,12,11,12,11,11,13,14,14,14,15,14,13,14,15,17,17,17,16,15,16,17,16,13,14,17,20,21,19,17,16,18,19,20,21,8,12,13,12,11,13,13,13,14,15,15,15,16,15,14,16,17,18,19,18,17,17,18,18,17,14,13,17,19,21,19,19,19,19,19,20,21,8,12,13,12,11,14,13,13,14,16,15,16,17,16,16,19,19,20,21,20,20,20,20,20,18,16,15,17,17,20,19,20,21,21,19,21,21,8,12,12,12,12,14,14,14,15,16,16,19,20,19,19,22,22,22,22,23,23,23,23,22,20,19,17,15,14,19,21,22,22,22,20,21,21,9,12,12,12,12,14,14,15,16,17,18,20,22,21,22,24,23,23,24,26,26,25,24,22,21,21,19,17,14,18,23,23,23,23,21,21,22,12,13,12,13,12,13,14,15,17,18,19,20,21,23,24,24,23,23,25,27,27,25,24,23,22,21,21,20,15,19,24,24,25,25,22,21,22,13,14,12,14,12,13,15,15,17,19,19,20,21,23,25,24,23,24,26,29,28,26,24,23,22,22,22,22,17,18,24,25,25,25,22,21,22,12,14,12,14,12,15,16,17,18,20,20,21,21,23,25,24,24,26,29,31,29,26,26,24,23,23,23,22,19,18,24,26,26,23,22,22,22,11,14,13,14,14,17,18,18,18,22,22,23,22,23,25,25,25,27,31,32,30,27,27,25,25,24,23,22,21,18,23,27,26,23,22,23,23,12,15,14,14,15,19,21,20,19,25,25,25,24,24,26,27,26,31,33,34,32,29,29,28,27,25,24,24,24,21,23,27,26,24,22,23,22,12,15,14,15,17,20,23,22,19,27,26,27,26,25,28,29,28,33,35,35,34,30,29,29,28,26,25,26,26,22,22,27,26,25,23,23,22,13,15,16,18,19,21,23,22,20,25,27,28,27,29,30,30,29,34,36,37,34,29,29,29,27,26,26,27,26,22,22,28,27,25,24,23,22,13,16,17,20,20,22,23,23,21,23,27,29,30,32,32,32,31,35,36,38,34,28,29,29,27,26,27,28,26,23,21,28,27,25,24,23,23,15,18,19,21,21,23,24,25,24,25,29,31,32,33,34,33,32,35,35,34,33,30,32,32,29,29,28,28,26,24,21,26,25,24,25,25,25,16,20,20,22,23,24,26,27,26,26,31,34,34,34,35,35,34,36,34,32,32,33,35,33,32,31,29,29,27,24,21,25,25,24,26,27,26,20,22,24,25,25,26,28,29,27,29,32,36,36,35,37,37,35,36,34,32,33,34,35,35,32,32,30,28,26,24,22,24,25,26,27,27,26,23,25,27,27,27,29,30,31,28,31,33,38,38,36,38,38,36,36,35,32,34,36,36,35,33,32,30,28,26,24,22,23,25,27,28,27,27,25,27,30,32,30,31,33,33,30,32,33,37,38,36,38,37,36,35,34,32,34,34,32,32,33,32,30,28,27,24,22,23,26,27,28,28,29,27,30,33,36,34,33,36,35,33,32,33,36,38,37,37,36,36,33,33,33,34,33,29,30,32,31,30,29,29,25,22,22,26,27,27,28,31,28,31,36,38,36,36,37,36,34,33,34,36,38,39,37,36,36,32,31,33,33,31,29,30,32,31,30,29,29,25,23,22,23,26,26,26,28,30,33,39,41,39,39,38,37,35,34,36,36,38,41,37,36,35,32,30,32,31,30,30,30,32,32,29,29,29,26,26,21,20,24,25,24,26,30,33,39,42,43,43,41,38,36,35,37,37,38,38,35,34,35,31,29,30,31,31,30,31,31,31,29,28,28,26,23,20,20,23,25,26,26,30,33,39,42,46,48,43,39,37,36,37,38,37,33,32,33,34,31,28,29,32,33,31,30,30,30,28,27,27,26,21,19,19,22,24,27,26],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
