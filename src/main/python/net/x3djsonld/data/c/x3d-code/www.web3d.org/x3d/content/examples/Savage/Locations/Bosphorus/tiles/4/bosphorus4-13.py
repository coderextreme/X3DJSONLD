###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    Shape(
      appearance=Appearance(
        material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0,0.05,0)),
        texture=ImageTexture(url=['../../images/4/bosphorus4-13.jpg'],repeatS=False,repeatT=False)),
      geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(40.84357772961846,29.401860686199143,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=22,xSpacing=0.0035324567,zDimension=24,zSpacing=0.0023768744,height=[142,141,145,139,168,182,193,221,234,243,238,220,201,183,166,164,156,133,128,151,133,121,117,121,127,150,171,199,223,230,249,259,244,216,204,179,166,159,150,161,132,158,149,141,117,125,143,155,166,202,224,244,255,250,236,220,200,199,178,184,171,168,141,144,155,154,141,154,159,165,182,197,232,263,248,242,228,219,218,207,189,183,168,147,163,151,164,165,156,162,167,171,188,210,233,263,244,227,218,207,197,187,174,164,151,174,162,163,166,164,149,153,149,168,187,213,234,264,245,228,218,210,202,195,187,187,169,178,165,175,174,172,146,136,159,168,190,213,241,259,243,233,234,218,226,215,198,182,179,163,175,179,185,181,123,137,151,175,196,218,244,256,242,235,245,241,224,211,192,185,175,174,190,197,198,191,125,136,165,165,184,217,242,252,237,233,237,249,235,213,194,182,185,178,203,224,208,205,133,151,175,191,187,211,238,250,235,228,222,241,229,220,199,182,193,187,217,225,228,221,154,150,174,201,204,214,226,240,237,225,217,224,222,221,204,185,200,194,199,225,210,208,154,172,176,196,212,223,225,228,226,226,211,219,220,209,198,187,203,201,201,216,222,219,154,178,194,210,224,224,218,219,218,210,209,214,223,221,205,196,207,208,217,220,259,261,157,179,191,212,229,229,219,211,205,206,204,213,216,229,210,201,214,218,223,219,244,247,169,178,187,207,229,228,217,217,209,206,199,205,207,215,208,209,216,232,239,225,237,240,160,180,190,211,234,234,225,225,212,211,206,193,203,211,213,221,230,247,250,233,248,250,174,178,189,214,239,243,239,230,226,226,219,193,197,214,221,231,248,262,268,263,247,252,174,197,195,218,251,255,246,241,235,235,213,195,195,205,222,253,270,325,322,308,263,265,182,193,211,223,248,251,236,243,242,230,216,198,190,208,215,237,245,315,332,315,307,296,196,191,211,236,241,253,230,236,241,223,208,192,189,203,208,221,231,270,298,268,282,283,200,200,221,230,227,246,231,222,235,228,210,193,181,194,213,220,236,243,249,248,307,294,211,206,214,212,223,245,229,214,226,236,220,200,180,209,206,212,224,242,232,246,271,272,207,204,200,210,229,247,232,216,219,237,210,192,176,187,193,201,224,220,221,251,250,248,207,203,199,211,229,248,235,217,216,235,208,194,178,183,193,199,224,214,224,249,248,244],
        geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(41.06225017873692,29.030952729968703,0),geoSystem=['GDC'])))])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
