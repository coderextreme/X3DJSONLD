###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    Shape(
      appearance=Appearance(
        material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
        texture=ImageTexture(url=['../../images/5/singapore26-19.jpg'],repeatS=False,repeatT=False)),
      geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.4392877850278434,103.86273364845137,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=3.9897318E-4,zDimension=23,zSpacing=3.96896E-4,height=[0,1,2,3,3,4,5,5,6,6,6,6,6,6,6,6,6,6,6,5,4,4,5,8,14,17,16,14,13,13,13,15,18,16,9,2,-1,-1,0,0,2,3,3,4,5,5,6,6,6,6,6,6,6,6,6,6,5,3,2,2,4,10,14,16,16,14,14,13,14,16,16,14,10,4,-2,-1,0,1,2,3,3,4,5,5,6,6,6,6,6,6,6,6,6,5,3,1,0,1,5,10,15,17,16,14,13,13,13,15,17,16,10,-4,-3,-1,0,0,2,3,3,4,5,5,6,6,6,6,6,6,6,6,5,4,2,0,1,3,6,10,14,16,16,14,14,13,14,16,16,14,-4,-4,-3,-2,0,0,2,3,3,4,5,5,6,6,6,6,6,6,6,5,4,3,1,0,0,1,5,10,15,17,16,14,12,12,13,15,17,-2,-3,-4,-3,-2,0,0,2,3,3,4,5,5,6,6,6,6,7,10,11,12,10,5,1,0,1,3,6,10,14,16,16,14,13,13,14,16,0,-2,-4,-4,-3,-2,0,0,2,3,3,4,5,5,6,6,6,8,14,17,20,16,8,3,1,0,0,1,5,10,15,17,16,14,13,13,13,1,0,-2,-3,-4,-3,-2,0,0,1,3,3,4,5,5,6,6,11,19,25,29,25,16,10,5,1,0,1,3,6,10,14,15,16,14,13,13,3,1,0,-2,-4,-4,-3,-2,0,0,2,3,3,4,5,6,6,13,24,32,37,34,25,16,8,3,1,0,0,1,5,10,15,17,16,14,13,4,3,1,0,-2,-3,-4,-3,-2,0,0,1,3,3,4,6,7,15,25,32,38,38,33,25,16,10,5,1,0,1,3,6,10,14,15,16,14,5,5,3,1,0,-1,-4,-4,-3,-2,0,0,2,3,4,6,8,15,25,32,37,39,39,34,25,16,8,3,1,0,0,1,5,10,15,17,16,5,5,4,3,1,0,-2,-3,-4,-3,-2,0,0,0,0,1,3,10,20,27,33,37,39,37,32,25,16,10,5,1,0,1,3,6,10,14,15,6,5,5,5,4,2,0,-1,-4,-4,-4,-3,-3,-4,-6,-5,-2,4,13,21,28,33,37,39,39,34,25,16,9,4,1,1,0,1,5,10,14,5,5,5,5,4,3,1,0,-2,-3,-4,-5,-5,-7,-10,-9,-7,-2,4,12,20,27,33,37,39,37,32,25,16,10,5,2,0,0,2,6,10,5,5,6,5,5,5,4,2,0,-2,-4,-6,-8,-11,-14,-14,-13,-9,-2,4,13,21,28,33,37,39,39,34,25,17,9,4,1,1,0,1,5,4,5,6,5,5,5,4,3,1,0,-1,-3,-6,-10,-14,-15,-15,-12,-8,-2,4,12,20,27,33,37,39,37,32,25,16,10,5,1,0,0,2,4,5,5,5,6,5,5,4,4,3,2,0,-2,-7,-12,-15,-16,-14,-13,-9,-2,4,13,21,28,33,37,39,38,34,25,17,9,4,1,1,1,0,3,4,5,6,5,5,6,6,6,5,3,1,-3,-8,-12,-15,-15,-15,-12,-8,-2,4,12,20,27,33,37,39,37,32,25,16,9,4,1,0,-6,0,4,5,5,5,6,7,8,8,7,7,6,2,-2,-7,-12,-15,-16,-14,-13,-9,-2,4,12,21,27,32,37,39,38,34,25,17,9,4,2,-11,-5,0,3,4,5,6,8,9,9,9,8,8,5,1,-2,-8,-12,-15,-15,-15,-12,-8,-2,4,12,20,27,33,37,39,37,32,25,16,9,5,-17,-11,-5,0,4,6,6,8,9,10,10,9,9,7,6,2,-2,-7,-12,-15,-16,-14,-13,-9,-2,4,12,20,27,32,36,38,37,33,25,17,10,-19,-16,-11,-5,0,4,7,8,9,10,10,9,9,8,8,5,1,-2,-8,-12,-15,-15,-15,-12,-8,-2,4,12,20,27,32,36,38,37,32,24,16,-21,-19,-17,-12,-5,1,7,9,9,10,10,10,9,9,8,7,6,2,-2,-7,-12,-15,-15,-14,-12,-8,-2,4,12,20,26,31,35,37,36,33,23],
        geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])))])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
