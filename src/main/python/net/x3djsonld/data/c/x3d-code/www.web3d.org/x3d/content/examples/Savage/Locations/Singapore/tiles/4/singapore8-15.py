###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_815',geoSystem=['GDC'],position=(1.3607023736258976,104.0350900579996,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.3607023736258976,104.0350900579996,0.0),range=4101.627,child1Url=['../../tiles/5/singapore16-30.x3d'],child2Url=['../../tiles/5/singapore16-31.x3d'],child3Url=['../../tiles/5/singapore17-30.x3d'],child4Url=['../../tiles/5/singapore17-31.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore8-15.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.3519706612479037,104.02072702387058,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=36,xSpacing=8.207448E-4,zDimension=44,zSpacing=4.0612617E-4,height=[3,8,8,8,7,6,6,7,6,5,0,2,6,3,-1,-7,-11,-13,-14,-8,0,3,5,7,8,5,3,1,-1,0,2,0,2,4,4,4,3,7,7,7,5,5,6,6,6,6,2,4,6,4,0,-4,-9,-11,-10,-3,2,3,3,5,7,7,3,0,-1,0,2,0,3,4,4,3,3,6,6,7,4,4,6,6,6,7,5,6,5,4,1,-2,-5,-8,-6,0,2,2,2,4,6,7,4,0,0,1,2,1,4,4,3,3,4,6,6,6,4,4,5,5,6,7,6,6,4,3,2,0,-1,-4,-3,0,0,1,3,5,3,4,4,1,1,2,2,1,3,3,3,3,6,6,6,5,5,5,5,4,5,5,8,4,3,3,3,3,1,0,0,0,0,0,3,5,2,1,5,4,3,3,2,2,3,3,3,3,5,3,5,4,4,5,5,4,4,4,8,3,1,2,5,4,3,1,1,1,0,1,3,5,3,3,5,3,2,2,3,3,3,2,2,2,4,2,4,4,4,5,6,3,2,3,8,2,0,1,5,4,3,4,3,3,2,2,4,6,5,5,5,2,1,1,5,4,3,2,2,2,2,2,5,4,4,5,7,3,1,2,6,2,0,1,5,4,3,5,6,6,5,3,5,6,6,6,4,2,2,3,5,3,2,2,1,1,0,2,5,4,4,5,7,3,1,0,4,2,0,1,3,3,4,6,8,8,6,5,6,6,6,6,4,2,2,4,4,2,1,2,1,1,0,1,4,3,4,6,6,4,3,0,2,1,0,1,1,2,5,8,8,8,7,7,8,7,6,6,4,2,2,4,4,2,1,1,1,1,2,1,3,3,4,6,5,5,5,0,1,0,2,2,0,2,7,9,8,8,8,7,8,6,6,5,4,2,2,4,4,3,2,1,1,1,3,1,3,3,4,6,5,5,5,0,0,0,4,2,0,3,7,9,8,7,8,7,6,5,5,4,3,2,3,5,4,3,3,1,1,1,4,2,3,4,4,5,5,4,4,1,1,2,5,3,1,4,7,9,8,7,8,6,4,3,4,4,3,2,4,6,5,3,3,2,2,2,4,2,3,3,4,4,4,3,4,2,2,4,5,1,2,4,6,8,8,7,8,7,5,3,3,4,3,2,4,7,6,4,3,3,2,2,3,2,4,3,4,3,4,3,3,4,4,5,3,0,2,4,5,7,7,7,9,9,7,4,3,4,3,3,4,6,6,4,3,3,3,2,2,2,5,4,4,3,4,4,4,5,5,6,3,1,4,5,5,6,8,8,10,10,9,6,5,4,3,3,4,6,5,4,3,2,2,2,2,2,5,5,5,4,5,6,5,5,5,5,4,3,5,6,6,6,8,9,11,11,10,9,7,5,3,4,4,4,3,3,3,2,2,3,2,3,5,5,6,5,5,7,6,5,4,5,5,5,6,6,6,7,9,9,10,11,11,10,9,5,3,4,5,3,2,3,2,2,3,4,4,4,4,5,6,6,6,6,7,5,4,5,6,7,7,6,6,8,8,8,8,11,12,10,9,5,3,4,4,3,2,3,1,2,4,5,5,3,4,5,6,6,5,6,7,5,4,6,7,8,7,6,6,8,7,8,7,9,12,10,8,5,2,3,4,5,3,2,1,3,4,6,6,3,4,5,5,6,4,5,6,6,5,6,8,8,7,6,7,7,6,8,8,9,12,11,7,3,2,2,4,7,6,0,2,4,5,6,7,3,4,4,5,5,4,6,6,7,6,6,8,8,7,7,9,7,5,8,8,8,11,10,5,2,1,1,2,4,5,0,3,4,6,5,7,4,4,4,5,5,5,6,7,7,7,5,7,7,7,9,11,6,4,6,7,7,10,9,3,0,0,1,0,-1,3,2,4,5,6,5,8,5,4,5,6,7,8,7,8,8,7,4,5,7,7,10,12,6,4,5,6,7,8,7,2,0,0,0,-1,-3,3,2,3,5,5,4,8,6,6,7,9,10,11,9,11,10,7,4,4,6,7,10,10,6,4,4,6,7,7,4,0,0,0,0,0,1,4,1,2,5,4,4,8,7,8,9,11,12,13,11,12,10,7,4,4,5,7,9,8,6,3,3,5,6,6,3,0,0,0,0,0,2,4,1,1,4,3,3,8,8,10,11,11,13,13,11,10,8,7,5,3,4,7,9,7,4,3,3,4,6,5,3,1,0,-1,0,1,1,2,2,1,2,2,2,8,9,12,12,12,12,12,10,8,8,8,5,3,4,7,8,6,3,3,3,3,5,5,3,2,0,-1,0,1,1,2,2,1,1,2,1,8,9,13,13,12,10,9,9,7,13,11,7,4,3,5,6,4,3,3,3,3,4,4,4,4,2,0,1,2,2,2,2,1,1,1,1,8,8,12,13,12,9,10,7,6,15,13,9,5,3,4,5,3,3,3,3,3,4,4,4,4,4,0,1,3,3,3,2,1,1,1,1,8,8,11,13,10,8,15,6,8,15,15,11,7,4,3,2,2,2,2,3,3,5,5,5,4,4,1,1,5,5,5,2,1,1,1,1,8,8,9,12,11,13,20,5,8,14,15,13,8,5,2,1,1,2,2,3,3,5,6,5,5,3,2,2,5,7,6,3,1,1,1,1,7,8,7,11,17,26,25,4,7,13,15,14,10,5,2,1,1,1,2,2,2,4,6,6,5,3,3,3,5,7,6,4,2,1,2,2,7,8,6,9,20,33,26,5,5,11,15,15,10,5,2,1,1,1,2,2,2,2,5,6,4,3,3,3,4,6,6,5,2,1,2,3,7,8,7,6,19,28,23,9,3,8,13,15,9,5,3,1,1,1,2,2,2,1,2,3,3,3,2,1,2,5,5,5,3,2,3,3,6,7,9,4,16,21,18,11,2,5,11,13,7,5,3,1,1,1,2,2,2,0,0,2,2,3,2,0,0,3,4,5,4,2,3,3,4,2,12,7,14,11,14,10,3,2,6,7,5,4,4,2,1,1,2,3,3,0,1,1,1,2,3,1,0,2,4,4,4,2,2,3,4,0,13,10,10,3,9,8,4,1,3,3,3,4,5,3,2,1,2,3,3,2,2,1,0,1,3,2,0,1,3,4,4,3,2,2,6,5,9,11,4,2,5,6,3,1,2,3,3,3,4,4,2,1,1,3,5,5,3,2,0,0,1,1,0,1,3,4,5,4,2,2,13,14,5,10,0,1,2,4,3,3,3,3,3,3,4,5,3,1,1,4,6,7,4,3,2,0,0,1,1,1,4,5,6,5,2,2,27,28,8,6,0,0,0,3,3,3,3,3,3,3,3,4,2,1,2,5,7,6,4,4,4,0,0,2,1,1,4,5,6,4,2,2,38,39,11,0,0,0,0,1,3,4,3,3,3,3,3,4,3,1,2,6,7,5,4,5,5,2,2,2,1,2,5,6,5,4,3,2,37,41,8,-13,-1,0,0,2,3,4,3,3,3,4,4,4,4,3,2,5,7,5,4,5,6,4,4,3,2,2,5,5,4,3,4,2,32,36,2,-31,-7,0,0,2,3,3,4,3,2,4,3,3,5,5,2,4,6,6,5,5,5,6,6,3,2,2,4,4,3,3,5,2],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
