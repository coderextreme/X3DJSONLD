###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_09',geoSystem=['GDC'],position=(1.220994975577994,103.86273364845137,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.220994975577994,103.86273364845137,0.0),range=4101.627,child1Url=['../../tiles/5/singapore0-18.x3d'],child2Url=['../../tiles/5/singapore0-19.x3d'],child3Url=['../../tiles/5/singapore1-18.x3d'],child4Url=['../../tiles/5/singapore1-19.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore0-9.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.2122632632,103.84837061432235,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[-2,-1,0,5,12,14,12,6,6,8,11,7,4,3,9,9,6,8,8,8,9,7,5,8,9,8,7,4,3,6,10,8,9,12,10,5,3,0,0,1,5,10,11,9,5,4,9,13,7,3,3,12,10,7,9,8,7,8,8,5,7,8,7,7,7,5,8,13,11,9,11,10,3,3,6,2,3,6,10,9,8,5,3,6,8,3,1,4,8,5,8,11,8,3,4,7,7,9,7,5,7,8,5,5,11,12,7,8,8,4,4,14,7,6,7,10,8,6,4,3,2,2,0,0,3,1,0,9,13,8,1,1,7,10,11,6,3,5,7,4,1,7,11,6,6,5,4,4,28,16,12,8,8,6,5,4,2,0,1,1,1,3,0,2,12,12,8,2,2,7,9,9,5,3,5,7,6,3,7,10,8,8,4,3,3,43,27,18,11,5,3,4,3,1,0,1,5,2,3,0,7,14,10,8,7,6,6,7,6,5,5,5,7,9,8,9,10,12,12,5,3,3,45,27,19,13,7,2,3,2,2,0,0,3,2,2,1,9,13,9,7,10,9,8,7,3,2,4,4,6,8,8,11,14,21,16,6,4,5,41,22,18,14,10,2,2,1,2,-1,0,0,1,1,2,9,12,8,7,11,13,9,7,1,0,2,4,6,7,7,14,20,31,20,8,7,9,37,20,17,16,11,3,2,0,2,-1,0,0,1,1,2,9,11,8,7,10,11,8,7,1,0,2,5,7,8,8,13,21,30,16,7,6,9,33,21,17,17,11,4,4,0,1,0,0,0,3,0,2,7,10,9,6,8,7,6,7,4,3,4,6,9,11,9,11,19,22,8,3,4,8,29,21,18,17,10,3,3,0,1,2,1,0,4,1,2,7,8,8,6,6,5,6,7,6,5,5,8,8,9,9,8,13,14,4,3,4,6,27,22,22,16,7,3,2,0,1,2,3,3,4,1,2,6,6,5,5,6,6,7,8,8,7,7,8,6,4,7,6,7,7,3,4,6,6,27,24,22,14,5,3,2,0,0,2,6,6,5,3,2,5,4,4,5,7,6,7,8,8,7,6,7,7,4,7,5,3,4,3,4,6,4,30,26,20,11,2,3,2,0,0,4,10,9,7,5,2,3,3,3,6,8,6,6,7,9,7,4,5,10,8,10,6,3,5,3,2,4,2,32,29,19,8,0,2,2,1,0,6,15,12,8,6,2,3,3,3,6,8,6,5,7,8,6,3,5,13,11,12,6,3,6,3,3,2,-1,34,30,19,7,1,0,2,4,3,10,22,15,8,4,3,4,3,2,4,7,5,3,7,8,4,3,9,15,13,9,5,5,7,3,4,0,-6,34,31,20,10,2,0,3,7,7,17,28,19,11,5,3,3,3,2,3,5,4,3,6,7,4,4,10,14,14,8,5,5,6,3,4,-3,-9,34,31,24,16,7,1,4,9,13,26,31,22,15,5,2,2,2,2,3,4,4,3,5,7,7,7,9,10,11,9,5,5,6,1,2,-6,-9,30,27,23,18,9,3,5,12,21,33,32,23,16,7,1,0,1,2,3,3,3,3,4,7,8,8,8,7,10,9,5,5,6,1,0,-10,-9,18,15,14,13,7,7,8,16,30,36,28,19,15,9,2,0,1,3,3,3,4,3,3,5,6,6,6,5,9,8,6,7,6,1,-1,-13,-10,10,7,7,9,6,9,12,21,38,37,24,17,15,11,3,-1,1,4,3,3,4,3,2,4,5,4,5,4,8,6,7,9,7,0,-4,-12,-7,7,5,6,7,4,9,15,29,41,33,21,19,15,11,6,1,4,6,4,4,3,3,4,6,5,4,4,5,9,4,6,8,8,0,-8,-4,0,4,4,5,4,2,9,20,37,44,30,20,20,15,11,8,5,7,8,5,3,3,4,5,7,6,3,3,6,9,4,6,8,8,-1,-9,1,4,3,4,4,0,2,13,28,44,44,29,22,20,14,11,8,8,13,12,6,3,4,3,3,4,3,1,2,4,8,9,7,5,5,0,-3,4,6,2,3,4,-1,2,15,35,48,43,28,22,18,12,10,8,11,18,15,6,3,4,3,2,2,1,0,1,3,8,12,7,4,3,0,1,7,7,1,3,6,-1,5,15,36,48,40,27,15,10,8,7,7,11,18,14,5,3,4,4,2,1,1,3,4,2,8,12,6,4,5,0,3,6,7,0,3,7,0,8,15,36,46,37,24,10,4,5,6,7,12,17,12,5,4,6,5,2,1,2,5,6,1,8,12,5,4,7,0,4,6,7,1,5,7,2,5,14,32,42,32,18,9,6,6,8,7,9,12,9,6,5,5,5,5,4,5,8,6,0,4,12,6,6,5,1,3,6,6,3,8,7,6,3,14,29,37,26,12,7,6,7,10,8,5,7,6,7,6,4,5,7,7,9,11,6,1,1,12,7,7,4,3,2,6,6,3,5,6,7,5,17,28,31,21,8,4,4,7,9,7,4,6,6,8,7,4,4,4,5,12,14,6,3,5,14,7,5,6,5,4,8,8,4,3,5,7,6,21,27,25,16,5,2,3,7,8,6,3,5,5,10,8,3,4,2,4,15,17,6,6,10,16,7,5,8,6,6,10,10,4,3,6,7,8,18,22,24,18,4,-1,3,7,6,5,4,2,4,9,4,2,4,2,5,19,21,3,2,7,10,3,4,7,4,4,9,9,4,3,7,6,9,15,18,24,21,2,-5,3,6,4,5,5,0,3,8,1,1,5,2,6,24,25,0,0,4,5,0,3,5,2,3,7,7,4,2,3,4,7,10,14,18,13,-8,-14,-2,5,5,9,3,-1,1,4,2,2,4,4,12,30,24,2,2,5,7,2,4,8,5,4,5,7,4,0,0,1,3,4,9,12,5,-19,-22,-8,3,7,11,2,-2,0,1,4,3,3,6,19,34,21,5,4,7,9,3,5,10,8,6,4,6,4,0,0,1,4,1,1,6,1,-14,-16,-8,3,7,9,3,0,0,3,6,3,2,6,18,26,15,5,3,5,7,1,3,10,8,3,4,5,4,-1,1,2,5,0,-6,0,-1,-6,-10,-9,3,8,6,4,0,0,5,6,2,1,6,16,16,10,6,1,3,4,0,2,10,7,0,5,4,3,0,3,7,10,2,-2,1,0,-1,-3,-2,4,6,5,3,0,0,4,4,3,5,13,16,8,5,4,2,3,3,0,2,9,10,4,6,5,2,0,5,12,16,8,3,2,3,2,2,3,5,5,4,2,-1,0,2,1,3,11,19,16,3,1,3,4,4,3,3,3,8,12,7,7,5,3,2,8,16,19,13,9,2,5,5,6,6,2,1,4,-3,-5,0,2,1,2,10,18,13,2,1,4,5,6,4,4,4,9,14,11,5,4,4,5,11,18,21,17,15,2,5,6,10,7,0,-3,2,-9,-10,-2,3,2,2,10,15,9,2,2,5,8,9,6,5,5,10,16,14,3,4,3,4,9,15,18,19,19,5,7,9,13,10,-2,-11,0,-5,-8,-3,6,13,10,11,10,5,1,1,5,9,11,5,5,7,9,13,13,4,5,3,2,5,11,13,19,20,10,8,12,16,13,-3,-19,-2,1,-5,-5,12,27,23,14,6,1,0,0,3,11,11,5,5,8,7,9,10,6,6,3,2,1,8,9,15,17,10,7,11,15,15,0,-15,-2,3,-1,0,22,41,30,11,2,0,-1,-1,1,9,8,4,4,7,7,10,11,7,4],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
