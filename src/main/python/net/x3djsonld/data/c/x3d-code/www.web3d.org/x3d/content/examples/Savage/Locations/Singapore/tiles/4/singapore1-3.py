###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_13',geoSystem=['GDC'],position=(1.238458400333982,103.69037723890314,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.238458400333982,103.69037723890314,0.0),range=4101.627,child1Url=['../../tiles/5/singapore2-6.x3d'],child2Url=['../../tiles/5/singapore2-7.x3d'],child3Url=['../../tiles/5/singapore3-6.x3d'],child4Url=['../../tiles/5/singapore3-7.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore1-3.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.229726687955988,103.67601420477412,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[3,5,3,6,6,3,2,0,3,5,3,1,1,4,5,9,10,5,2,5,4,3,3,3,4,5,6,8,4,5,6,1,0,4,9,9,9,2,5,4,6,3,2,2,2,2,4,4,0,0,1,3,5,6,4,3,4,3,2,2,3,4,4,6,8,4,4,4,2,0,1,9,8,9,2,4,3,4,1,2,1,2,1,4,5,0,-3,0,1,5,5,4,2,2,1,0,1,3,3,3,5,9,5,4,4,2,0,1,10,8,7,3,2,2,1,0,1,1,2,1,5,6,-2,-6,-2,0,5,6,4,2,0,0,0,0,3,2,2,3,9,6,5,5,1,0,2,10,8,5,3,2,3,1,0,2,1,3,4,6,5,-5,-10,-5,-1,6,6,4,2,0,0,0,0,3,2,3,4,7,7,7,6,5,2,3,10,8,5,3,2,5,3,3,5,3,4,7,6,2,-10,-13,-9,-2,5,7,5,3,3,3,2,1,3,3,5,6,5,7,9,8,10,5,5,9,8,6,3,1,5,4,4,5,3,4,7,7,-1,-13,-15,-11,-3,3,6,4,4,4,5,3,3,6,6,7,7,5,9,11,8,12,7,7,8,7,7,2,1,4,3,3,4,1,2,4,6,-8,-15,-13,-10,-5,1,3,2,3,4,6,4,4,9,10,9,8,10,12,9,5,11,8,10,8,6,7,1,2,4,3,2,2,0,2,4,3,-14,-15,-10,-8,-4,1,1,2,3,3,5,4,4,10,11,10,8,11,13,9,4,8,7,10,6,6,6,1,3,4,4,2,0,0,2,6,-2,-18,-15,-5,-4,0,3,1,3,3,1,2,2,4,8,11,10,8,9,10,9,7,5,5,8,4,5,5,1,3,4,3,0,0,-1,2,6,-3,-18,-13,-2,-1,2,5,2,4,3,1,1,2,3,6,9,9,6,7,7,8,7,3,4,6,4,4,4,2,3,3,0,0,0,0,0,4,0,-9,-8,0,-2,3,6,4,5,4,1,1,2,5,5,7,7,5,5,4,7,5,3,3,3,4,3,3,2,2,2,0,0,0,0,0,2,2,-2,-3,1,0,3,7,4,6,5,1,1,3,5,5,7,6,5,3,3,7,4,2,1,2,5,2,1,1,0,0,0,1,0,0,1,2,2,0,1,5,6,6,4,2,6,5,1,1,3,6,6,8,9,5,2,4,8,6,2,0,2,6,3,1,1,0,0,0,3,0,0,2,0,1,1,5,6,10,8,3,2,6,5,1,1,3,5,6,8,10,5,2,5,9,6,1,-2,2,7,3,2,2,0,0,0,4,2,0,-1,-2,0,0,3,1,5,7,8,4,8,6,1,3,4,4,4,7,6,2,3,7,7,5,1,0,2,5,6,5,1,0,0,0,4,2,0,-4,-3,-1,0,0,-1,1,6,9,7,9,7,2,3,3,2,3,5,3,0,5,9,6,4,1,0,3,5,8,9,0,0,-2,0,2,1,0,0,0,0,0,0,0,0,2,7,6,9,9,4,2,1,0,1,2,1,2,8,7,7,4,1,1,4,6,8,9,0,-1,-2,0,1,1,0,0,1,0,0,-2,0,0,0,4,6,8,10,5,1,0,0,0,1,0,3,9,6,7,4,2,1,4,6,8,9,2,0,-1,-1,0,1,0,0,1,0,-1,-1,3,1,0,5,7,6,5,4,2,1,0,2,3,2,3,6,6,6,4,2,0,0,1,6,6,4,0,0,-2,0,1,0,0,0,0,-1,0,6,2,1,5,8,4,1,2,3,2,1,3,5,4,4,5,5,5,4,2,0,0,-1,5,5,2,0,0,0,1,3,2,0,0,0,1,1,5,2,2,5,9,5,0,0,3,4,3,4,6,4,4,7,6,5,4,3,3,2,0,8,9,0,0,0,2,3,4,3,0,0,0,3,4,5,2,2,6,10,6,0,0,3,6,3,4,6,3,4,8,6,5,5,4,5,4,1,10,12,0,-1,0,1,1,0,0,0,-1,0,0,2,2,1,2,6,11,8,4,6,5,5,3,3,5,3,2,6,5,4,7,5,6,5,3,9,7,-2,-2,0,0,0,-2,-1,0,-2,-3,-1,0,0,0,3,6,12,10,10,13,7,3,3,2,4,3,1,4,4,3,9,7,7,5,4,6,3,-2,-1,0,0,0,-1,-1,-2,-2,-3,-1,0,1,0,1,3,10,8,5,8,5,2,3,3,5,5,3,4,7,8,12,7,6,5,4,6,4,-2,0,-1,0,-1,0,-1,-4,-2,-2,0,0,2,0,0,1,7,6,1,2,2,0,3,4,6,8,5,4,10,13,15,5,7,4,4,7,6,-2,0,0,-1,-2,0,0,-2,-2,-3,0,0,2,0,0,2,4,1,0,2,2,1,3,3,6,9,7,3,8,10,11,5,5,3,3,7,8,-4,0,2,-2,-4,-1,0,0,-1,-4,-1,1,2,0,1,3,1,-2,0,1,2,2,2,2,6,10,8,2,5,6,7,4,2,1,2,8,10,-4,-1,1,-2,-3,0,1,0,-2,-3,0,1,1,0,0,2,1,0,0,1,2,3,2,2,4,9,8,3,4,7,7,3,0,-1,1,6,8,-3,-4,0,-1,-2,0,1,0,-3,-1,2,1,0,0,0,0,2,0,0,0,2,3,2,1,3,7,7,5,4,8,7,2,0,-5,0,4,5,-2,-3,1,0,0,1,0,0,-1,0,2,0,0,0,-1,0,2,0,0,0,1,1,5,8,12,9,6,6,4,8,8,2,0,-3,0,1,4,0,-1,3,3,1,1,0,0,0,1,1,0,1,0,0,0,0,0,0,0,0,1,8,19,25,11,5,7,4,8,10,3,0,-1,0,0,5,0,0,2,3,0,0,0,1,0,2,2,0,1,0,0,0,0,0,0,0,-1,2,15,25,22,9,2,4,3,8,13,5,1,0,2,1,5,0,2,0,1,0,-2,0,3,1,4,2,0,1,0,-1,-2,-1,0,0,-3,-4,4,23,31,16,6,0,2,2,7,16,7,1,3,6,5,6,0,4,2,1,0,-2,-1,3,3,4,2,0,1,0,-1,-1,-1,-1,-4,-7,-6,4,22,23,9,5,-1,1,3,6,13,7,3,5,7,6,6,-1,5,6,2,0,-2,-2,2,3,3,1,0,1,1,0,0,-1,-4,-8,-12,-9,4,17,12,3,4,0,1,3,4,10,7,4,5,6,6,6,-1,8,9,3,1,0,-1,1,3,3,1,0,1,1,0,0,1,0,-6,-12,-11,0,11,7,3,5,0,2,4,6,10,7,6,6,6,6,6,1,11,11,5,3,1,0,1,2,3,1,0,0,1,0,1,7,6,-2,-10,-13,-5,4,4,6,7,1,3,6,8,10,7,9,7,6,6,6,1,10,8,4,3,1,0,0,0,3,1,0,1,1,0,1,6,8,2,-6,-12,-8,1,3,7,8,1,3,9,11,11,8,11,8,6,6,6,0,8,1,1,2,0,0,0,-3,1,1,0,2,2,2,1,3,5,4,-2,-10,-8,1,5,7,6,1,2,11,13,12,11,12,10,7,6,6,0,6,0,0,1,0,-2,-1,-3,1,1,1,2,3,1,0,1,3,4,1,-6,-5,1,5,6,4,1,3,13,14,11,12,12,10,8,7,8,0,3,1,1,0,-3,-4,-3,0,2,2,0,0,2,0,0,0,2,3,3,0,0,4,5,5,2,0,7,14,14,8,12,11,10,9,9,11,1,3,6,3,0,-4,-5,-4,0,1,2,0,0,2,0,0,0,1,2,4,2,1,4,5,4,1,2,10,14,13,8,12,10,10,8,10,14],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
