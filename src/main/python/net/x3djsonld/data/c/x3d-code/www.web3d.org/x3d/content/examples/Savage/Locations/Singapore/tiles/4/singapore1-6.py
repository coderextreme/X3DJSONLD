###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_16',geoSystem=['GDC'],position=(1.238458400333982,103.77655544367725,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.238458400333982,103.77655544367725,0.0),range=4101.627,child1Url=['../../tiles/5/singapore2-12.x3d'],child2Url=['../../tiles/5/singapore2-13.x3d'],child3Url=['../../tiles/5/singapore3-12.x3d'],child4Url=['../../tiles/5/singapore3-13.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore1-6.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.229726687955988,103.76219240954823,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[5,10,10,7,7,7,8,11,14,16,7,7,8,7,6,6,4,1,-1,-3,-4,-3,-1,0,-2,-2,2,4,5,5,5,2,-1,-1,0,0,0,3,8,10,7,5,6,9,9,9,9,7,6,5,5,5,5,2,0,0,-3,-4,-4,-2,0,-1,-2,2,5,5,5,5,3,0,0,2,2,2,3,7,11,7,5,7,11,10,7,7,7,6,4,3,3,3,1,0,0,-2,-4,-4,-3,-1,0,-1,3,5,5,5,5,4,3,0,3,4,3,3,8,12,8,6,10,14,11,8,7,9,7,4,3,2,2,1,0,0,0,-3,-4,-4,-2,0,0,4,5,5,5,5,5,4,2,5,6,3,4,8,13,9,7,10,14,12,9,7,10,8,5,4,2,2,1,0,0,0,-2,-4,-4,-3,-1,0,4,5,5,5,5,5,4,1,5,7,5,6,9,12,11,7,9,11,12,10,7,11,9,6,5,4,3,1,0,0,0,-1,-3,-4,-4,-1,2,4,5,5,5,5,4,2,0,3,5,6,7,9,12,11,8,8,10,11,10,8,10,9,6,4,4,3,2,1,0,0,0,-2,-4,-4,-1,2,5,5,5,5,4,3,1,0,1,4,5,7,7,9,10,9,9,10,10,9,8,7,7,4,2,4,4,3,2,0,0,0,-1,-3,-2,-1,2,5,5,5,5,3,1,0,0,0,2,4,7,5,7,10,10,10,10,10,9,7,6,6,4,2,4,4,4,2,1,0,0,0,-2,-1,-1,2,4,5,5,4,2,1,0,0,0,1,3,8,4,6,10,10,11,12,11,9,7,6,5,6,7,5,4,4,3,1,0,0,0,-1,-1,0,1,4,4,4,3,1,0,0,0,0,0,1,8,3,5,9,12,13,14,11,10,8,6,6,7,10,7,5,4,2,1,0,0,0,-1,-1,0,0,4,3,3,2,0,0,0,0,-2,-1,0,7,3,5,10,15,15,14,12,10,7,7,7,7,9,9,6,3,1,0,0,-1,-1,-1,-1,0,0,3,1,1,0,0,0,0,-3,-6,-5,-4,6,4,6,11,17,17,14,11,9,7,7,9,8,9,10,7,2,0,0,-1,-1,-1,-1,-1,0,0,1,0,-1,-1,0,0,0,-5,-8,-8,-7,5,5,9,12,16,19,16,8,5,6,8,9,8,8,9,6,1,0,0,-1,-1,-1,-1,-1,-1,0,-3,-5,-5,-3,-1,0,0,-2,-6,-8,-7,4,6,11,13,15,18,16,5,2,4,7,8,9,8,7,5,0,0,-1,-1,-1,-1,-1,-1,-1,0,-5,-7,-8,-5,-3,-1,0,0,-5,-8,-7,2,8,11,10,12,12,10,3,1,2,2,5,9,8,6,4,1,0,-1,-2,-1,-1,-2,-1,-1,0,-2,-6,-8,-7,-4,-2,0,0,-2,-7,-8,0,9,11,9,8,7,4,1,0,0,-3,0,9,10,7,4,2,0,-2,-2,-1,-1,-2,-2,0,0,0,-5,-7,-8,-5,-3,0,1,0,-6,-9,3,13,11,8,7,5,1,0,-1,-5,-15,-6,6,17,13,4,2,0,-4,-3,-1,-3,-3,-2,0,0,0,-2,-6,-8,-7,-4,-1,2,2,-6,-12,6,14,10,7,5,2,0,-2,-3,-10,-25,-12,4,23,18,6,4,1,-4,-4,-2,-4,-3,-2,1,0,0,0,-5,-7,-8,-6,-3,2,3,-6,-13,7,12,8,5,3,2,0,-1,-4,-12,-22,-17,7,27,22,11,4,2,-2,-7,-5,-5,-3,0,4,3,0,0,-2,-6,-8,-7,-4,0,0,-5,-8,8,10,7,4,1,1,0,0,-4,-13,-21,-19,11,30,26,15,5,2,0,-8,-8,-5,-4,1,7,5,0,0,0,-5,-8,-8,-5,-2,-1,-3,-4,8,9,7,4,0,0,0,0,-3,-11,-17,-7,15,28,28,18,7,4,1,-4,-8,-5,-1,4,8,6,3,0,0,-1,-6,-8,-6,-5,-3,-1,-2,8,8,7,4,0,-1,0,0,-2,-9,-13,2,19,24,29,21,10,6,3,0,-8,-4,0,7,9,8,5,0,0,0,-5,-8,-7,-6,-3,0,0,4,4,5,3,-1,-5,-3,0,0,-4,-4,10,18,21,23,16,9,5,3,0,-3,0,4,8,9,9,6,2,0,2,-2,-6,-4,-2,2,2,0,1,1,3,2,-3,-10,-6,-2,0,0,4,17,18,18,16,12,8,5,3,1,1,1,7,9,9,9,8,3,0,4,0,-4,-1,2,8,5,0,-8,-5,1,1,-3,-10,-8,-5,0,1,9,18,18,17,16,12,8,5,2,0,3,4,8,10,10,9,9,4,0,6,3,-1,0,3,7,7,4,-20,-11,0,0,-3,-8,-11,-8,-2,3,14,18,18,17,15,12,8,5,1,0,4,7,9,12,11,9,9,5,0,8,8,0,1,4,5,7,7,-24,-19,-5,0,-3,-8,-11,-9,-4,4,16,18,18,16,14,11,8,3,1,1,5,6,8,15,11,9,10,6,1,6,7,2,1,3,5,7,7,-27,-25,-10,-1,-3,-7,-11,-11,-6,5,17,18,17,16,14,11,7,2,0,3,6,5,7,18,11,8,12,7,3,5,5,3,2,3,5,6,6,-27,-27,-17,-5,-3,-7,-10,-12,-7,6,18,18,17,15,13,11,6,1,1,4,6,5,8,16,9,4,5,4,3,5,5,3,2,3,5,5,3,-26,-30,-25,-10,-3,-6,-10,-12,-8,6,18,17,16,15,13,10,5,0,3,6,5,5,10,14,6,0,-1,1,2,4,4,3,2,2,4,3,0,-26,-30,-27,-17,-5,-5,-9,-11,-8,6,16,12,9,9,8,7,4,2,4,6,4,5,10,12,3,-1,-2,0,0,2,3,2,2,2,4,0,0,-26,-29,-30,-25,-10,-4,-8,-11,-7,6,15,7,0,0,0,1,4,7,7,5,3,6,10,9,1,-4,-3,-2,0,0,2,2,2,2,2,-1,-3,-26,-29,-31,-28,-17,-6,-6,-10,-6,4,10,2,0,0,0,0,3,7,8,6,3,3,9,10,4,-2,-4,-3,-2,0,1,2,2,2,0,-2,-3,-26,-28,-31,-30,-24,-10,-4,-8,-4,3,4,0,-1,0,0,0,2,6,8,7,3,0,7,13,9,1,-4,-4,-3,-1,0,1,2,1,0,-3,-4,-26,-28,-30,-31,-28,-17,-6,-5,-3,1,1,0,-1,-1,0,0,1,5,9,7,5,1,6,13,11,5,-1,-4,-4,-2,0,0,1,0,-2,-3,-2,-25,-28,-30,-31,-31,-24,-10,-3,-1,0,0,-1,-1,-1,0,0,1,4,9,8,6,2,5,11,11,9,1,-3,-4,-3,-2,0,0,-1,-3,-2,0,-25,-28,-30,-31,-32,-28,-17,-5,-1,0,0,-1,-1,-1,0,0,2,3,8,9,7,3,4,9,11,10,5,-1,-4,-4,-3,-1,0,-2,-3,-1,0,-25,-27,-29,-31,-32,-31,-24,-10,-1,0,-1,-1,-1,-1,-1,0,2,2,7,9,7,5,3,7,11,11,9,1,-3,-4,-4,-2,-2,-3,-2,0,0,-25,-27,-29,-31,-32,-32,-28,-16,-3,-1,-1,-1,-1,-1,-1,0,2,1,6,9,7,6,3,6,9,11,10,5,-2,-4,-4,-3,-3,-3,-1,0,0,-25,-27,-29,-30,-31,-32,-30,-22,-6,-1,-1,-1,-1,-1,-1,-1,1,1,6,9,8,7,4,4,7,10,11,8,1,-3,-4,-4,-4,-2,0,0,0,-21,-23,-25,-26,-27,-28,-29,-24,-7,-2,-2,-2,-2,-2,-2,-2,1,3,6,8,8,7,5,4,6,9,11,10,4,-2,-4,-4,-3,-1,0,0,0,-14,-17,-18,-19,-20,-22,-24,-20,-7,-2,-2,-2,-3,-3,-3,-2,2,9,7,8,8,8,6,4,4,7,10,11,8,1,-3,-4,-2,0,0,0,0,-9,-11,-12,-13,-14,-15,-18,-15,-6,-3,-3,-3,-4,-4,-4,-3,3,11,8,8,8,8,7,5,4,6,9,11,10,4,-1,-4,-2,0,0,0,0],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
