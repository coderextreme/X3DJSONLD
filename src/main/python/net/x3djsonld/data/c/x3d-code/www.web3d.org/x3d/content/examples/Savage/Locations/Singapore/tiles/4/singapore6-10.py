###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_610',geoSystem=['GDC'],position=(1.3257755241139217,103.8914597167094,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.3257755241139217,103.8914597167094,0.0),range=4101.627,child1Url=['../../tiles/5/singapore12-20.x3d'],child2Url=['../../tiles/5/singapore12-21.x3d'],child3Url=['../../tiles/5/singapore13-20.x3d'],child4Url=['../../tiles/5/singapore13-21.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore6-10.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.3170438117359278,103.87709668258039,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[13,12,12,10,11,14,14,12,12,12,14,16,13,12,9,11,14,13,7,7,9,13,19,15,12,12,9,8,8,9,13,17,16,13,9,10,11,12,13,14,11,11,13,14,13,13,12,13,14,12,11,8,8,9,9,7,8,8,14,25,22,14,13,12,11,10,10,12,15,16,13,10,12,12,11,13,15,13,11,11,13,14,13,12,13,12,10,10,8,8,8,9,7,8,8,14,27,24,15,12,12,12,11,9,9,13,14,12,10,12,12,10,13,15,14,11,9,12,14,12,12,13,11,9,10,9,10,10,11,8,8,8,13,26,23,14,11,10,10,11,8,6,9,10,10,9,11,11,9,12,14,13,11,9,11,14,12,12,13,10,9,10,10,12,11,12,9,8,8,11,22,20,13,9,10,9,9,8,7,8,9,8,9,11,11,8,9,10,11,10,9,11,15,13,11,12,9,11,11,10,13,12,11,9,8,8,10,16,14,11,8,10,8,8,8,9,10,10,8,9,11,12,8,8,9,10,10,9,11,14,13,11,12,11,11,11,10,12,12,11,10,9,8,9,11,11,10,9,10,9,7,8,10,11,11,9,9,11,11,9,10,10,9,10,11,12,13,13,12,14,14,9,10,9,10,10,12,11,10,10,10,9,10,9,10,10,10,8,8,9,12,12,9,8,10,10,10,11,11,10,10,12,13,14,13,12,15,16,9,10,9,9,10,12,12,12,10,10,9,10,9,10,9,10,8,8,10,13,13,11,9,10,10,9,10,10,10,12,14,14,15,11,11,14,16,11,10,10,10,10,12,13,12,8,10,9,10,10,9,8,8,7,8,10,15,15,15,13,11,11,10,9,9,10,12,13,13,14,11,12,13,15,13,13,12,12,12,12,13,12,7,10,10,10,11,9,7,7,7,8,11,16,15,16,13,11,11,11,8,7,9,10,10,10,12,12,13,12,13,14,16,14,14,15,12,12,12,10,11,11,11,11,9,6,6,6,9,12,15,13,14,10,9,10,12,8,7,9,9,9,8,10,11,12,11,11,14,19,17,16,15,12,12,11,10,11,12,12,13,10,7,6,7,10,13,14,11,11,9,9,10,14,9,8,9,8,9,9,7,7,10,10,11,13,18,18,15,13,12,12,10,8,10,11,12,16,14,10,7,8,10,13,13,10,11,10,10,10,14,11,10,10,8,9,9,5,5,8,9,12,14,17,18,14,11,12,11,8,7,9,9,12,18,16,12,8,9,12,14,13,10,10,11,10,11,13,12,12,11,9,8,8,6,6,8,9,13,15,16,16,13,11,10,10,7,7,9,9,12,19,16,11,10,10,14,15,13,11,10,10,10,10,13,13,14,12,9,8,7,7,8,9,10,13,15,15,14,11,11,10,9,8,8,9,9,14,22,17,11,12,13,17,15,13,11,10,10,10,10,13,12,14,14,10,8,8,8,8,9,9,12,14,13,11,11,11,11,10,11,10,10,10,19,26,19,14,14,19,20,16,10,9,11,12,11,11,14,12,13,15,12,9,9,9,9,9,9,12,14,13,10,11,11,12,12,14,12,11,11,21,27,22,18,17,23,22,15,7,7,11,13,12,12,15,11,11,13,13,10,10,10,9,9,8,11,14,13,10,11,11,11,12,14,12,10,11,18,24,22,22,20,25,22,14,5,7,10,12,12,12,16,11,11,13,14,12,11,10,10,9,8,11,15,13,11,11,11,10,12,14,11,10,10,14,20,19,22,22,25,20,12,5,8,9,10,11,12,19,15,14,16,16,12,12,11,9,10,9,13,15,12,11,10,10,10,12,14,10,9,10,10,14,14,18,24,22,16,12,7,10,10,9,10,11,22,18,18,20,17,13,13,11,10,10,10,14,16,12,11,10,10,11,13,14,10,9,10,8,10,10,15,24,18,12,12,10,12,11,9,10,11,19,18,20,22,18,13,12,11,11,11,9,14,17,13,12,10,11,12,13,13,10,11,10,8,9,10,15,21,13,9,11,11,12,12,11,10,10,16,16,21,24,18,13,10,11,12,11,9,13,17,15,13,11,12,13,14,13,12,13,11,9,9,11,16,18,9,7,10,12,12,14,12,11,10,15,16,20,22,17,11,10,10,12,12,10,12,16,15,12,12,12,14,13,14,14,14,12,11,10,11,16,14,9,9,13,13,13,14,13,12,12,15,16,19,19,15,10,9,10,11,11,11,11,15,14,11,12,13,14,13,15,16,14,12,13,11,12,15,11,10,12,15,15,14,14,14,13,14,15,17,19,17,12,9,9,9,9,10,12,12,15,14,10,11,14,14,15,17,17,14,12,14,12,13,15,11,12,13,15,15,15,13,13,14,15,15,17,19,15,11,9,9,9,8,9,12,13,16,15,9,10,15,15,17,19,19,14,11,14,14,13,15,12,12,12,12,15,16,13,13,15,17,16,19,20,13,9,9,9,9,8,9,12,15,17,15,10,11,15,16,19,20,20,14,11,13,15,13,14,13,13,11,10,12,14,13,15,18,19,17,21,20,13,9,9,8,8,9,9,11,17,19,14,11,12,15,17,20,20,20,15,11,12,14,12,12,14,14,11,8,9,11,12,18,22,21,15,18,17,12,9,9,8,8,10,10,10,15,17,14,10,12,15,17,18,19,21,17,11,11,12,11,11,14,14,10,8,8,10,14,21,25,25,13,14,14,11,10,10,8,8,10,10,9,11,14,14,9,12,16,17,16,17,21,17,11,10,10,10,10,13,13,10,9,9,10,16,23,27,28,11,13,14,12,10,10,8,8,10,10,9,9,13,14,9,11,15,14,13,14,17,15,11,8,8,8,9,12,12,10,10,10,11,17,24,28,29,11,13,16,14,11,10,9,9,11,10,9,9,14,14,10,11,12,11,11,10,11,11,9,8,6,7,8,10,13,12,11,11,13,18,23,27,28,11,12,15,14,11,11,10,10,11,10,10,11,15,13,10,9,9,9,9,7,7,9,8,8,6,7,8,10,13,12,11,11,13,17,21,24,25,11,10,12,12,11,12,11,11,11,12,12,14,17,12,10,7,6,7,8,6,6,8,7,8,9,8,8,10,13,13,11,10,11,15,20,21,21,10,10,11,12,12,12,12,12,12,13,13,16,17,13,11,7,5,5,7,6,5,7,7,10,11,10,9,11,12,12,11,10,11,14,19,20,20,10,10,11,13,13,13,12,13,14,13,13,16,16,14,12,8,6,4,6,6,6,8,7,13,14,13,10,11,11,12,11,11,12,14,19,21,22,11,10,12,14,15,15,14,15,16,14,14,17,16,15,11,9,7,5,6,6,7,9,7,13,14,14,12,12,10,10,11,12,14,16,20,22,22,12,12,12,15,18,18,17,17,17,16,15,17,18,14,11,9,9,8,7,7,8,11,8,11,12,13,15,14,10,8,11,13,16,21,22,21,21,13,13,14,17,21,21,19,19,19,17,16,18,17,13,10,9,9,11,9,8,9,12,9,11,12,13,16,15,9,8,11,14,17,22,22,21,23,13,14,18,19,21,23,21,21,21,17,18,19,15,12,10,8,8,13,12,9,9,12,12,12,12,13,15,15,10,8,11,16,16,20,20,22,26,13,14,19,21,22,24,23,23,21,17,18,18,14,12,9,8,8,13,13,10,10,11,13,12,11,13,14,13,10,9,12,17,16,18,19,23,27],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
