###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_24',geoSystem=['GDC'],position=(1.25592182508997,103.71910330716118,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.25592182508997,103.71910330716118,0.0),range=4101.627,child1Url=['../../tiles/5/singapore4-8.x3d'],child2Url=['../../tiles/5/singapore4-9.x3d'],child3Url=['../../tiles/5/singapore5-8.x3d'],child4Url=['../../tiles/5/singapore5-9.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore2-4.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.247190112711976,103.70474027303216,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[14,23,31,34,32,33,29,36,60,63,64,64,63,62,61,59,57,51,30,7,2,2,3,0,5,6,6,6,15,19,19,5,1,7,11,10,8,17,28,35,35,34,34,29,32,55,63,63,64,64,63,62,60,57,53,42,13,3,3,3,2,9,6,5,4,11,18,22,9,4,7,10,9,8,19,32,36,35,35,33,26,25,50,63,63,64,64,63,62,61,57,54,48,18,5,3,4,4,10,7,4,3,9,16,22,11,6,8,9,9,9,22,35,36,35,35,31,19,17,43,63,63,63,64,64,63,62,57,54,49,22,6,4,4,4,8,6,3,4,8,16,20,10,7,8,6,7,8,25,36,36,35,33,27,13,11,35,59,63,63,64,64,63,62,58,54,49,25,6,4,4,4,6,6,3,4,7,16,18,10,10,9,4,5,7,32,36,35,34,30,20,7,9,26,51,63,63,63,64,64,62,59,53,50,27,6,4,4,4,5,5,3,5,9,16,16,13,16,8,3,5,6,35,35,34,32,26,13,4,8,19,42,59,63,63,64,65,63,58,53,50,29,7,4,4,4,5,5,4,5,10,16,15,15,18,7,2,6,7,35,34,33,29,19,7,4,8,16,32,52,63,63,63,65,65,55,53,50,30,7,4,4,4,4,5,4,7,13,16,15,13,14,6,3,8,10,32,33,30,25,12,3,5,8,14,25,44,60,63,63,64,64,53,53,50,32,8,4,4,4,4,5,4,9,16,16,15,11,9,5,7,13,14,29,30,27,17,7,3,5,8,14,22,36,54,63,63,61,54,53,53,51,35,8,4,4,4,4,4,5,12,17,16,12,6,1,4,16,20,17,25,27,22,11,3,3,5,8,14,21,30,47,61,63,59,48,52,53,51,40,11,4,4,4,4,4,5,14,17,15,8,1,-1,3,22,25,18,20,24,16,7,3,3,5,8,14,21,28,39,53,62,56,49,48,51,52,45,22,6,4,4,4,4,6,14,16,11,3,-1,0,6,18,20,15,16,19,9,3,3,3,4,8,14,21,28,33,46,59,53,50,46,49,52,50,32,9,4,4,4,4,7,13,14,7,0,-3,1,8,14,14,11,11,12,6,4,4,3,4,8,14,21,29,32,38,46,49,50,46,47,50,52,41,20,6,4,4,4,8,14,11,2,-2,-1,4,10,11,10,9,7,6,3,5,4,3,4,8,14,22,30,31,31,33,44,48,46,45,48,52,50,30,10,4,4,5,9,14,6,0,-3,0,8,10,7,7,8,7,6,4,5,5,3,3,8,17,25,31,31,30,29,35,43,46,45,47,50,52,41,20,6,4,6,12,10,2,-3,-1,4,8,7,6,7,7,8,6,5,6,5,3,3,8,20,27,31,31,30,26,27,37,45,45,45,48,52,50,30,10,6,9,14,5,-1,-3,0,8,8,5,6,7,6,8,7,6,8,6,3,3,8,20,31,34,26,24,23,23,28,38,44,45,47,50,51,40,28,26,25,18,3,-3,-1,4,8,6,5,5,4,2,9,7,8,9,7,2,3,8,19,35,34,21,19,21,18,20,31,43,45,45,48,51,49,47,46,40,22,1,-3,0,8,8,4,4,3,0,0,8,8,8,9,8,4,4,8,16,25,26,18,17,16,14,15,23,38,45,45,48,50,49,48,47,43,33,5,-1,4,8,6,4,3,2,0,0,9,8,9,9,9,7,4,7,12,13,15,15,16,10,11,10,13,31,44,46,47,48,48,48,47,47,45,8,0,8,8,3,3,3,1,0,0,11,9,9,9,9,8,5,5,8,9,11,9,5,6,6,6,10,37,46,46,47,48,48,48,48,47,37,8,3,7,6,3,3,3,1,0,0,13,9,10,10,9,8,6,4,4,6,6,4,-4,2,1,2,8,43,47,47,47,48,48,48,48,46,27,8,6,6,4,3,3,2,1,0,0,10,8,8,9,8,8,7,6,5,6,6,1,-5,-1,0,0,6,35,47,48,48,48,48,48,47,37,18,6,6,5,3,3,3,2,1,0,0,8,7,7,8,7,7,8,8,8,5,6,0,-3,-5,-2,-1,4,26,46,48,48,48,48,48,46,27,9,4,5,5,3,3,2,2,1,0,0,8,7,7,8,8,8,8,9,8,5,2,-5,-5,-7,-4,-2,6,20,37,46,48,48,48,47,38,18,6,4,6,6,4,3,2,2,1,0,0,9,9,7,7,9,10,9,9,7,5,-2,-11,-7,-7,-7,-3,9,14,28,45,48,48,48,46,27,10,4,5,7,7,6,3,2,1,1,0,0,9,10,9,7,8,10,10,9,6,4,-1,-11,-8,-7,-4,2,11,12,21,38,46,48,47,38,19,6,4,6,7,8,7,4,2,1,1,0,0,10,11,10,8,8,10,12,9,5,5,0,-10,-10,-7,-2,8,13,11,15,28,45,48,46,28,11,4,6,7,8,8,8,6,2,1,0,0,0,11,12,9,8,8,9,11,9,5,2,0,-7,-10,-8,0,13,15,11,13,22,38,45,39,20,7,5,7,7,8,9,9,7,4,1,0,0,0,13,14,9,7,7,7,9,9,7,0,-3,-5,-10,-8,2,17,16,12,11,16,29,43,29,13,5,7,8,8,8,9,9,8,6,2,0,0,0,13,12,9,8,8,6,6,8,6,0,-4,-4,-8,-6,2,15,17,13,11,14,23,34,22,9,7,9,9,8,9,9,9,9,6,3,1,2,3,12,10,9,9,8,4,3,7,6,0,-3,-5,-6,-5,1,11,18,13,10,12,19,22,17,7,9,11,9,8,9,9,9,8,6,4,2,4,8,11,9,9,10,9,3,0,4,4,0,-2,-4,-4,-3,0,7,16,14,8,9,14,14,12,7,13,12,8,9,9,9,9,7,6,4,3,8,13,11,9,9,11,11,4,0,1,2,0,-1,-3,-3,-1,0,3,12,17,6,5,9,11,9,8,18,12,8,9,10,10,9,7,5,5,3,12,20,10,9,10,12,12,6,1,0,2,0,0,-1,-2,-1,0,1,8,15,6,6,7,9,7,8,17,12,10,11,12,11,9,6,5,5,4,12,18,8,8,10,12,11,8,3,0,0,2,1,1,0,-2,0,1,6,10,8,10,8,8,7,8,11,12,12,15,15,12,8,5,5,4,4,7,10,8,9,11,11,11,9,4,0,0,2,3,3,1,-2,0,0,6,8,9,11,7,8,7,8,7,11,17,19,16,11,7,5,5,4,5,6,6,10,13,13,11,11,9,5,0,0,1,3,4,3,0,-2,1,7,8,9,10,6,7,7,8,7,10,22,21,15,9,5,5,4,5,5,6,6,11,14,13,11,10,9,5,0,0,0,3,4,5,0,0,3,8,9,10,10,6,7,8,7,5,8,20,19,13,7,5,5,4,5,6,7,6,11,13,12,10,10,8,4,0,0,0,2,4,6,1,2,6,9,10,12,11,7,8,8,6,3,4,11,12,9,5,5,4,4,6,7,7,7,11,13,12,10,10,8,3,0,0,0,1,4,7,2,5,8,10,11,13,11,8,8,8,5,2,1,4,7,6,5,5,4,5,7,8,7,7,12,15,13,10,10,7,2,0,0,0,1,4,5,5,7,10,11,11,12,10,8,9,7,4,3,1,0,5,5,4,4,4,5,7,8,7,7,14,17,14,11,9,6,2,1,0,0,2,5,5,6,8,11,12,12,11,10,8,9,7,4,5,3,0,3,4,4,4,4,5,7,8,8,7],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
