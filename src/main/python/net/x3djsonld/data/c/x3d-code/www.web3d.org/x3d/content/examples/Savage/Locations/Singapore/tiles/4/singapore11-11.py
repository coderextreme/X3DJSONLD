###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_1111',geoSystem=['GDC'],position=(1.4130926478938615,103.92018578496744,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.4130926478938615,103.92018578496744,0.0),range=4101.627,child1Url=['../../tiles/5/singapore22-22.x3d'],child2Url=['../../tiles/5/singapore22-23.x3d'],child3Url=['../../tiles/5/singapore23-22.x3d'],child4Url=['../../tiles/5/singapore23-23.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore11-11.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.4043609355158675,103.90582275083842,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[22,17,13,10,8,9,8,7,5,6,7,8,8,6,6,4,5,2,2,3,4,4,4,6,5,5,4,5,10,15,15,14,12,10,9,9,9,22,19,16,11,9,10,9,8,6,7,7,8,9,8,8,7,4,1,2,4,3,2,2,4,5,5,4,6,10,12,15,15,14,11,9,9,9,24,22,18,11,9,10,10,8,6,6,7,8,10,10,8,9,5,0,3,4,2,1,2,4,5,5,5,6,9,10,13,16,15,13,10,9,9,26,26,21,12,9,9,10,8,7,6,7,8,12,12,8,9,6,1,3,4,2,2,3,5,5,6,8,7,6,9,12,15,16,14,11,9,9,26,28,23,14,9,9,9,7,7,6,7,8,12,13,9,9,7,2,2,3,2,3,4,5,6,8,9,7,5,7,10,13,16,15,13,10,9,25,28,22,16,11,9,8,7,7,6,7,8,11,12,10,9,7,2,0,2,3,3,4,5,8,9,8,6,5,5,9,12,15,16,14,11,10,24,26,21,17,13,9,8,6,7,6,8,8,10,11,11,9,7,3,0,2,4,4,4,6,9,10,7,6,5,4,7,10,13,16,15,13,11,24,24,21,17,15,11,8,6,7,7,9,8,9,9,10,9,8,3,0,3,5,4,5,7,10,10,7,7,5,5,5,9,12,15,16,14,13,24,23,20,19,17,13,8,5,7,6,8,7,7,8,10,10,8,3,0,4,6,5,5,9,10,10,7,7,6,5,4,7,10,13,16,15,14,24,24,22,21,18,14,9,5,5,4,4,4,5,12,13,11,8,3,2,4,7,7,7,9,9,9,7,7,6,5,5,5,9,12,15,16,15,24,25,24,24,20,14,10,5,5,3,1,2,4,14,15,12,7,3,3,5,8,8,9,9,8,9,8,7,7,6,5,4,7,10,13,16,16,26,29,29,26,22,15,10,9,6,4,2,2,5,12,16,13,7,5,5,6,8,9,9,10,9,8,7,7,7,6,5,5,5,9,12,15,15,28,32,32,28,24,16,10,10,8,6,4,5,9,11,15,12,6,5,7,7,8,9,11,11,9,8,7,7,7,7,6,5,4,7,10,13,15,31,34,31,26,25,17,10,8,7,7,9,17,22,17,13,9,6,6,7,8,9,10,12,13,10,9,8,7,7,7,6,5,5,5,9,12,13,35,36,30,26,26,18,10,7,7,7,12,27,32,21,10,6,5,7,7,9,10,10,13,15,11,9,8,7,7,7,7,6,5,4,7,10,12,38,40,35,30,30,19,10,7,6,7,13,27,28,18,8,4,4,7,9,11,10,8,11,14,12,10,9,8,7,7,7,6,5,4,5,9,10,40,43,38,34,33,21,11,7,6,7,13,26,24,15,7,4,4,7,10,13,9,5,9,14,13,11,9,8,7,7,7,7,6,5,4,7,9,41,43,39,35,33,21,12,9,7,8,13,17,18,11,6,4,4,7,11,11,7,4,7,12,13,12,10,9,8,7,7,7,6,5,5,5,7,42,42,39,37,32,20,13,11,8,9,12,10,12,8,4,4,4,8,11,9,5,4,6,10,13,13,11,9,8,7,7,7,7,6,5,4,6,41,40,36,33,30,22,15,11,8,9,10,8,10,8,4,5,7,8,9,6,6,6,5,8,12,13,12,10,9,8,7,7,7,6,5,5,5,39,38,32,29,28,23,17,11,8,10,9,8,8,9,3,6,9,8,7,5,7,7,5,6,10,13,13,11,9,8,7,7,7,7,6,5,4,35,34,28,25,26,26,20,13,9,9,9,7,8,9,3,6,9,7,5,5,7,8,6,6,8,12,13,12,10,9,8,7,7,7,6,5,5,30,29,23,21,24,29,24,17,12,9,9,7,8,10,3,6,7,4,4,5,6,8,8,6,6,11,13,13,11,9,8,7,7,7,7,6,5,24,24,20,19,23,30,27,23,17,10,9,8,9,8,5,7,1,-1,1,4,6,8,8,7,6,8,12,13,12,10,9,8,7,7,7,6,6,19,19,17,17,21,30,30,30,23,11,8,9,9,6,7,7,-4,-7,-2,2,6,7,8,8,6,6,10,13,12,11,9,8,7,7,7,7,7,15,17,19,21,23,29,29,31,25,13,8,12,9,5,7,3,-6,-9,-6,0,4,7,8,8,7,6,8,12,13,12,10,9,8,7,7,7,7,12,14,22,25,26,26,27,30,26,14,7,14,9,5,7,0,-6,-10,-11,-4,2,7,8,9,8,6,6,10,13,13,11,9,8,7,7,7,7,11,15,24,28,25,22,22,26,22,12,7,13,10,5,5,0,-5,-9,-12,-8,0,5,8,9,8,6,6,8,12,13,12,10,9,8,7,7,7,10,17,27,30,23,17,16,19,17,8,6,10,9,6,3,0,-4,-8,-12,-12,-5,2,8,9,9,8,6,6,10,13,13,11,9,8,7,7,7,11,18,29,31,22,13,10,14,12,6,8,10,7,4,2,0,-3,-7,-10,-12,-9,-1,6,8,9,8,6,6,8,12,13,12,10,9,8,7,7,12,18,29,31,22,11,6,9,8,6,11,11,6,2,0,0,-2,-6,-9,-12,-12,-5,2,8,9,9,8,6,6,10,13,13,11,9,8,7,7,12,17,27,29,22,12,6,7,7,6,13,11,4,0,0,0,-2,-5,-7,-11,-13,-10,-1,6,8,9,8,6,6,8,12,13,12,10,9,8,7,10,13,23,27,21,16,9,7,7,7,14,12,3,0,0,0,-2,-4,-6,-9,-12,-12,-6,2,8,9,9,8,6,6,10,13,13,11,9,8,8,9,11,21,24,21,18,10,6,7,10,16,11,2,-1,0,0,-2,-4,-6,-8,-11,-13,-10,-1,6,8,9,9,6,6,8,12,13,12,10,9,8,9,12,20,22,20,18,10,6,7,14,16,10,0,-1,-1,-1,-2,-4,-5,-7,-9,-12,-13,-6,2,8,9,9,8,6,6,10,13,13,11,9,9,9,12,19,20,19,18,11,7,7,21,20,9,0,-2,-1,-1,-2,-3,-5,-6,-8,-11,-13,-10,-1,6,8,9,9,6,6,8,12,13,12,10,9,11,14,19,18,16,16,12,8,8,31,28,9,0,-2,-2,-2,-2,-2,-4,-6,-7,-9,-12,-13,-6,2,8,9,9,8,6,6,10,13,12,11,10,12,13,16,15,13,14,12,8,7,34,31,11,1,-1,-2,-2,-2,-2,-4,-5,-6,-8,-11,-13,-10,-1,6,8,9,9,6,6,8,12,13,11,11,10,10,10,10,9,10,10,7,7,28,29,15,3,-1,-2,-3,-3,-2,-3,-5,-6,-7,-9,-12,-13,-6,3,9,9,9,8,6,6,11,13,12,11,9,7,4,5,6,7,9,5,5,20,25,17,5,0,-2,-3,-3,-2,-3,-4,-5,-6,-8,-11,-13,-8,6,16,16,11,9,7,6,9,13,12,12,7,5,0,0,4,5,6,3,4,11,17,16,8,0,-2,-3,-3,-3,-2,-3,-5,-5,-6,-8,-11,-4,19,33,29,16,11,8,8,10,12,12,12,6,3,-2,-2,2,4,4,3,4,5,11,14,9,2,-1,-3,-3,-3,-2,-3,-3,-1,-1,-1,-2,6,31,43,36,20,13,10,9,10,12,12,12,5,5,0,0,1,4,4,3,4,5,7,10,9,3,0,-2,-3,-3,-3,-2,1,7,11,14,20,28,38,41,32,21,17,11,11,11,12,12,12,5,5,1,0,0,4,4,3,4,4,5,7,8,5,0,-2,-3,-3,-3,0,9,19,23,29,37,44,43,38,29,22,19,12,12,12,12,12,12],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
