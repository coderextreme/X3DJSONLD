###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    Shape(
      appearance=Appearance(
        material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
        texture=ImageTexture(url=['../../images/5/singapore0-13.jpg'],repeatS=False,repeatT=False)),
      geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.2122632632,103.77655544367725,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=3.9897318E-4,zDimension=22,zSpacing=4.1579583E-4,height=[-15,-5,-3,-1,0,0,2,6,10,15,19,21,18,14,9,1,-2,-6,-8,-7,-4,0,2,3,4,3,0,-2,-5,-7,-8,-9,-9,-8,-6,-4,-2,-14,-8,-5,-3,-2,-1,1,5,10,15,19,23,23,22,17,9,1,-4,-7,-7,-3,3,7,6,6,5,3,0,-2,-5,-8,-8,-9,-9,-8,-6,-3,-13,-8,-8,-7,-5,-3,0,4,10,15,20,26,26,26,22,17,10,2,-1,-3,0,4,7,7,7,6,5,2,0,-3,-6,-7,-8,-9,-9,-6,-4,-12,-9,-11,-12,-8,-5,0,4,10,15,22,28,28,28,26,25,18,10,4,0,1,5,6,7,7,7,6,3,0,-1,-5,-6,-8,-8,-8,-6,-4,-12,-11,-12,-12,-8,-6,0,4,11,17,22,27,28,29,29,28,24,18,11,5,3,5,6,6,7,7,7,5,2,-2,-6,-6,-6,-6,-6,-6,-5,-13,-12,-11,-10,-8,-7,0,4,12,19,22,24,26,29,29,29,28,26,19,9,5,5,5,5,6,7,7,6,3,-2,-7,-5,-3,-4,-5,-5,-5,-13,-12,-11,-9,-7,-6,0,4,12,18,21,24,26,28,29,30,30,29,22,10,4,4,4,4,5,6,6,5,2,-1,-6,-4,-3,-3,-4,-4,-4,-12,-11,-10,-9,-6,-4,0,4,11,16,20,24,26,28,29,30,30,30,22,10,4,4,4,4,4,4,4,3,1,0,-2,-2,-2,-2,-3,-3,-3,-12,-11,-10,-8,-5,-3,0,4,10,15,19,23,25,27,28,29,30,30,22,9,3,3,3,3,3,3,3,2,0,0,0,0,-1,-1,-1,-2,-2,-12,-11,-9,-7,-4,-2,1,4,9,14,18,22,25,27,28,29,29,30,21,8,3,3,3,3,3,2,2,1,0,0,0,0,0,0,0,0,0,-12,-11,-9,-7,-4,-1,1,5,9,14,18,22,24,26,27,28,27,26,18,7,2,2,2,2,3,2,2,2,2,1,1,2,3,2,2,1,1,-11,-9,-8,-6,-3,0,1,5,9,14,18,22,24,25,27,28,24,19,12,4,1,1,2,2,2,3,4,4,5,5,5,5,5,5,5,3,2,-3,0,1,1,4,6,8,11,13,17,19,22,24,25,26,27,22,14,8,3,0,0,1,1,1,2,3,4,5,6,6,7,6,5,4,4,3,10,19,19,19,19,20,20,21,22,23,24,25,25,25,25,25,20,14,8,3,0,0,0,0,0,0,0,2,3,5,6,6,5,4,4,4,4,18,27,27,28,28,28,27,27,27,27,26,26,25,25,25,24,21,15,9,3,0,0,0,0,0,0,0,2,3,4,5,4,4,3,3,4,4,19,23,25,28,28,28,28,27,27,27,26,26,25,25,25,24,23,21,14,4,0,0,0,0,0,1,2,3,3,3,2,2,2,3,3,4,4,20,20,23,27,27,28,28,28,27,27,26,26,25,25,25,25,25,25,17,5,0,0,0,0,0,2,3,3,3,3,2,2,2,3,4,5,5,23,19,20,23,25,28,28,28,27,27,26,26,25,25,25,25,25,24,16,5,0,0,0,1,2,3,4,4,3,3,2,3,3,5,6,6,6,26,19,20,20,24,27,27,28,27,27,26,26,25,25,25,25,24,23,15,4,0,0,0,2,3,5,5,5,5,6,7,6,6,7,8,7,7,32,26,22,18,21,23,25,28,27,27,26,26,25,25,25,25,22,18,11,3,0,0,1,3,4,6,7,8,11,16,18,15,12,11,10,8,6,36,32,25,18,20,20,23,27,27,27,26,26,26,26,25,24,19,13,7,1,0,0,2,4,5,7,8,11,14,21,25,22,17,14,10,7,5,39,36,30,24,21,18,21,23,25,27,26,26,26,27,24,19,13,7,2,0,0,0,2,4,6,8,10,12,14,19,23,24,22,14,6,5,4],
        geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])))])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
