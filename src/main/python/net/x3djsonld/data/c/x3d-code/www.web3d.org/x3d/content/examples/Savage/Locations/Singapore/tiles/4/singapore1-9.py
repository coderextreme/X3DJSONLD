###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_19',geoSystem=['GDC'],position=(1.238458400333982,103.86273364845137,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.238458400333982,103.86273364845137,0.0),range=4101.627,child1Url=['../../tiles/5/singapore2-18.x3d'],child2Url=['../../tiles/5/singapore2-19.x3d'],child3Url=['../../tiles/5/singapore3-18.x3d'],child4Url=['../../tiles/5/singapore3-19.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore1-9.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.229726687955988,103.84837061432235,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[3,2,1,8,9,15,17,10,7,11,15,15,0,-15,-2,3,-1,0,22,41,30,11,2,0,-1,-1,1,9,8,4,4,7,7,10,11,7,4,4,3,0,4,6,11,12,8,5,8,13,16,5,-5,0,4,0,7,34,54,36,5,-1,0,-2,-3,-1,7,4,3,3,6,8,13,12,7,1,5,8,0,3,3,6,9,7,6,9,11,14,7,0,3,6,2,11,38,58,38,-1,-10,-3,-3,-3,-2,4,4,5,4,6,11,15,10,6,2,5,14,1,2,2,1,8,8,9,11,10,10,7,1,5,8,4,13,37,57,35,-11,-23,-8,-3,-1,0,1,4,9,6,5,16,16,7,6,5,6,15,2,1,1,0,8,9,8,10,9,9,6,2,5,8,5,8,28,45,26,-19,-34,-14,-4,0,0,0,4,8,7,7,17,15,6,7,7,7,10,4,1,0,0,10,9,5,8,9,9,6,4,3,7,6,0,12,26,13,-27,-43,-20,-6,2,0,-1,3,5,6,11,13,13,7,9,9,7,8,5,1,0,0,9,9,4,6,9,11,8,2,0,5,5,-1,3,11,5,-21,-38,-22,-6,2,0,-2,1,2,6,10,10,10,7,11,9,7,8,5,1,0,0,5,7,4,5,9,17,11,-1,-2,1,5,1,-1,2,3,-6,-21,-20,-6,2,1,0,-2,0,5,8,6,9,7,12,8,7,8,7,2,0,0,3,6,5,6,10,17,11,-2,-4,0,4,3,-2,-1,1,0,-9,-15,-4,2,1,0,-2,-1,5,5,4,8,6,10,6,5,8,9,5,0,-1,0,3,5,9,11,11,9,0,-2,0,2,4,0,-2,0,0,-3,-8,-3,2,1,0,-1,0,3,2,4,7,3,7,2,4,8,10,7,1,-3,0,0,6,11,12,8,5,1,-2,0,1,4,1,0,0,0,0,-3,-2,2,1,0,0,1,3,2,4,6,2,4,0,3,7,8,9,2,-4,0,0,7,12,13,9,0,0,0,0,0,0,1,0,0,0,0,-1,-1,2,1,1,2,3,6,5,3,5,3,3,0,2,6,7,9,2,-4,0,0,10,15,14,10,-3,-3,-1,0,0,0,2,2,0,0,0,0,0,2,2,2,5,7,11,10,4,4,2,2,-1,2,5,6,6,0,-3,-3,2,14,20,16,9,0,-5,-3,0,0,0,2,3,1,0,-1,0,0,3,5,5,7,15,20,17,7,3,0,2,0,1,3,5,3,0,-1,-4,3,17,22,16,9,2,-5,-5,0,0,0,1,4,3,0,0,0,1,4,6,7,9,19,28,26,11,3,0,3,1,2,2,4,2,0,-1,-1,5,15,18,12,11,5,-3,-7,-2,0,0,1,3,4,1,0,0,2,5,6,7,8,16,35,37,14,5,3,8,8,2,2,4,2,0,-1,0,7,13,14,10,13,8,0,-6,-4,0,0,1,2,4,3,0,0,3,6,6,7,7,13,37,42,13,3,5,11,12,2,4,7,3,0,0,1,10,13,12,16,17,14,5,-3,-3,0,0,1,2,4,5,1,0,3,6,6,6,7,12,24,23,0,-10,2,7,7,2,6,9,5,0,0,5,13,13,11,21,20,19,11,0,-2,0,0,1,2,4,5,3,2,4,6,6,6,7,10,12,8,-8,-20,0,5,4,3,8,10,8,3,2,9,12,11,12,19,22,21,17,6,0,0,0,1,2,4,5,4,4,4,5,6,7,6,6,5,3,-3,-9,0,6,6,4,10,11,10,5,5,13,12,10,14,18,23,23,22,13,1,0,0,0,2,3,5,5,5,4,5,6,7,5,2,0,0,0,0,2,8,9,3,7,10,11,8,9,12,11,11,14,18,23,24,23,19,9,1,0,0,2,3,5,5,3,3,4,5,7,5,-3,-3,0,2,6,5,10,15,1,5,10,11,11,14,12,10,11,14,18,22,25,24,23,15,4,0,0,1,3,4,4,2,2,3,4,7,6,-8,-6,-2,6,10,9,12,21,0,3,7,10,11,12,11,10,11,14,18,22,24,25,25,20,10,3,0,1,3,4,2,1,1,1,2,3,1,-1,0,0,5,10,9,8,13,-4,1,5,10,11,11,10,10,11,14,18,22,23,25,25,24,17,5,0,1,2,3,1,0,0,0,0,0,-3,4,7,2,6,10,10,5,7,-7,-1,3,7,10,10,10,10,11,14,18,21,23,25,26,25,21,11,3,1,2,1,0,0,0,0,0,-2,-1,3,4,1,8,10,7,5,5,-11,-4,1,5,10,10,10,10,11,14,18,21,23,24,25,25,24,17,5,1,1,0,0,0,-1,-1,-3,-4,0,2,1,1,11,10,6,5,3,-10,-7,-1,3,7,10,10,10,11,14,17,20,22,24,25,25,25,21,11,3,0,0,-1,-1,-2,-2,-3,-3,0,1,0,1,8,7,9,8,4,-10,-11,-4,1,5,10,10,10,11,14,17,20,22,24,25,25,25,24,18,6,0,-2,-2,-2,-3,-4,-4,-2,0,0,0,3,4,5,13,11,5,-6,-10,-7,-1,3,7,10,10,11,14,17,19,22,24,25,25,25,25,21,7,-1,-2,-3,-3,-4,-4,-4,-2,0,0,0,2,4,5,13,8,4,-2,-10,-11,-4,1,5,10,10,11,14,17,19,22,23,24,25,25,25,24,9,-3,-3,-4,-4,-4,-5,-4,-2,-1,-1,0,2,3,6,11,4,4,1,-11,-12,-7,-1,3,8,10,11,14,16,19,21,23,24,25,25,25,24,9,-3,-4,-4,-5,-5,-5,-3,-2,-1,0,1,2,3,6,10,6,8,7,-11,-12,-11,-4,1,5,9,11,14,16,19,21,23,24,24,25,25,25,8,-4,-4,-5,-5,-5,-4,-3,-2,0,2,3,2,4,7,8,11,12,-21,-26,-15,-10,-7,0,3,8,10,13,16,18,21,23,24,24,25,25,25,9,-4,-4,-5,-5,-5,-4,-3,0,2,8,9,6,7,8,10,13,14,-60,-45,-20,-8,-10,-3,1,5,9,12,16,18,21,22,23,24,24,25,25,9,-4,-4,-5,-5,-5,-4,-3,0,8,14,14,11,10,10,12,15,15,-69,-46,-13,-3,-5,-2,0,3,7,11,15,18,20,22,23,24,24,25,21,6,-4,-5,-5,-5,-3,-2,0,3,11,15,15,14,13,12,13,15,15,-69,-41,-3,1,1,0,0,1,4,9,13,17,20,22,23,23,24,24,16,2,-4,-5,-5,-5,-2,0,0,7,13,15,15,15,15,15,13,15,13,-58,-26,1,3,3,0,0,1,2,7,12,16,20,22,23,23,24,21,10,-1,-5,-5,-3,2,7,8,8,11,13,14,14,16,16,15,13,13,12,-41,-5,3,4,4,2,1,1,2,4,10,15,19,21,22,23,23,16,2,-3,-5,-5,0,14,23,20,20,14,12,13,13,15,16,13,12,11,11,-23,2,3,4,4,2,2,2,1,2,7,13,18,21,22,23,20,10,-1,-4,-5,-2,7,23,30,27,26,19,13,11,12,13,14,12,10,7,7,-5,3,4,4,3,2,2,2,1,2,4,10,16,20,22,22,16,2,-3,-5,-5,0,17,29,32,31,29,23,14,10,11,11,11,12,9,3,1,2,3,4,4,3,2,2,2,2,1,2,7,14,18,21,19,9,-1,-4,-5,-3,7,23,32,33,33,31,26,17,11,9,9,9,12,9,2,0,3,4,4,3,2,2,2,2,2,1,2,4,10,16,20,15,2,-3,-5,-5,1,16,29,32,33,33,32,29,22,13,8,7,8,12,10,3,-2,3,4,4,3,2,2,2,2,2,2,1,2,8,13,17,9,-1,-4,-5,-3,7,22,31,32,32,33,33,31,26,16,9,7,7,11,8,-1,-7],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
