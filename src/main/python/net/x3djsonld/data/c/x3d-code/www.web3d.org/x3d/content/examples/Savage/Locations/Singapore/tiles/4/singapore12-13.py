###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_1213',geoSystem=['GDC'],position=(1.4305560726498494,103.97763792148352,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.4305560726498494,103.97763792148352,0.0),range=4101.627,child1Url=['../../tiles/5/singapore24-26.x3d'],child2Url=['../../tiles/5/singapore24-27.x3d'],child3Url=['../../tiles/5/singapore25-26.x3d'],child4Url=['../../tiles/5/singapore25-27.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore12-13.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.4218243602718554,103.9632748873545,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[12,12,11,10,8,7,5,5,5,5,5,5,5,5,5,5,5,7,10,11,9,6,6,6,6,6,6,6,7,11,12,9,2,0,0,0,0,13,12,11,10,8,7,6,5,5,5,5,5,5,5,5,5,6,9,12,10,8,6,6,6,6,6,6,7,9,12,11,6,0,0,0,0,0,13,13,12,10,9,8,7,6,5,5,5,5,5,5,5,5,7,11,11,9,6,6,6,6,6,6,6,7,11,12,10,3,0,0,0,0,0,13,13,12,10,9,8,8,7,5,5,5,5,5,5,5,6,9,12,11,8,6,6,6,6,6,6,7,9,12,11,6,1,0,0,0,0,0,13,14,12,10,9,8,9,8,6,5,5,5,5,5,5,6,11,11,10,7,6,6,6,6,6,6,7,11,12,10,3,1,0,0,0,0,0,14,14,13,11,9,8,9,10,8,5,5,5,5,5,6,9,12,11,9,7,6,6,6,6,6,7,9,12,11,6,1,1,1,0,0,0,0,14,14,13,11,9,8,9,11,10,6,5,5,5,5,6,11,12,10,8,7,6,6,6,6,6,8,11,12,10,3,1,1,1,1,0,0,0,14,15,13,11,9,7,9,12,12,8,5,5,5,6,9,12,12,10,9,7,6,6,6,6,7,9,12,11,7,1,1,1,1,1,0,0,0,14,15,13,11,9,7,9,13,13,9,6,5,5,7,11,12,12,10,9,7,6,6,6,6,8,11,12,10,4,1,1,1,1,1,1,0,0,14,17,13,11,10,6,7,15,14,9,7,7,7,9,12,12,12,10,9,7,6,6,6,7,9,12,11,8,3,1,1,1,1,1,1,0,0,14,18,13,12,10,7,5,16,15,9,8,8,9,12,12,13,12,11,9,7,6,6,6,7,11,12,10,6,2,1,1,1,1,2,1,1,0,16,17,14,13,12,9,8,15,14,10,10,10,11,12,12,13,12,11,9,7,6,6,7,9,12,11,9,5,2,1,1,1,2,2,1,1,0,17,15,14,14,13,11,12,14,13,10,11,12,13,12,13,14,13,11,9,7,6,6,8,11,13,11,7,4,2,1,1,1,2,2,2,1,0,17,16,14,14,15,13,14,15,15,11,12,12,12,13,14,14,13,11,9,7,6,7,9,12,12,10,7,4,2,1,1,1,2,2,2,1,1,18,17,15,15,16,16,16,16,16,12,13,12,12,13,15,14,13,12,10,7,6,8,11,13,11,9,7,4,2,1,1,1,2,3,3,2,1,18,17,15,15,17,16,17,15,15,12,13,12,12,15,15,14,13,12,10,7,7,9,12,13,11,10,8,4,2,1,1,1,2,3,3,2,1,18,16,15,15,16,16,17,15,14,12,13,12,12,16,16,13,14,13,10,7,8,11,13,12,11,10,8,4,2,1,1,1,2,3,4,2,1,17,16,14,15,16,16,17,15,14,14,13,12,12,15,16,13,14,14,10,8,9,12,12,11,12,11,8,5,1,1,1,1,2,4,4,2,1,16,16,14,15,16,16,16,15,14,16,14,12,11,13,17,13,14,15,10,8,11,13,11,11,12,11,8,5,2,1,1,1,2,4,4,2,1,14,16,15,16,17,17,16,16,15,17,15,12,10,13,15,14,14,14,11,10,12,12,10,10,12,12,8,4,3,1,1,1,2,3,4,2,1,13,16,15,17,17,17,16,16,16,16,15,12,10,12,15,14,14,14,13,12,13,11,9,10,13,13,8,5,4,1,1,1,3,1,4,2,1,12,16,17,18,17,18,17,16,15,15,14,12,11,13,15,15,15,15,15,15,14,12,8,9,14,14,7,5,7,4,1,3,4,0,1,3,1,11,16,19,18,16,17,18,17,15,12,11,11,13,14,16,16,16,16,17,17,16,12,9,9,15,15,4,6,10,7,2,6,5,-2,-2,4,0,10,16,19,18,15,17,18,17,14,11,11,10,14,15,15,15,16,17,18,17,17,14,11,10,14,14,3,5,14,10,5,7,6,-1,-7,0,-2,10,16,18,17,15,17,18,17,13,11,11,9,14,15,14,14,16,17,17,16,17,17,15,13,12,10,2,3,17,11,10,8,7,0,-12,-7,-7,9,15,17,17,15,16,18,17,13,11,11,10,14,14,14,14,16,17,17,17,19,21,20,16,11,8,4,5,16,10,11,10,8,3,-6,-6,-7,8,13,17,17,15,16,17,17,14,12,13,11,15,14,15,14,15,17,16,18,22,25,26,20,12,8,7,8,13,9,12,13,9,8,5,-1,-3,8,11,15,16,15,14,16,16,13,13,12,12,15,14,15,14,15,17,16,19,23,28,29,23,14,9,8,9,10,9,12,13,11,10,9,1,0,7,8,14,15,15,13,14,14,12,13,11,13,15,14,14,15,16,17,16,19,24,29,29,24,17,11,8,10,10,10,11,13,11,10,7,6,6,8,8,12,14,15,13,14,13,12,12,11,14,15,14,13,14,15,17,16,18,23,29,29,25,20,14,10,10,10,9,10,12,11,9,7,9,9,10,10,10,13,15,14,14,13,12,11,12,15,15,14,13,12,15,16,17,17,22,27,28,25,22,18,12,11,10,9,10,10,10,10,8,10,10,12,10,9,12,14,15,15,14,13,11,12,15,15,14,12,11,14,16,16,15,20,24,26,25,22,19,13,10,10,10,9,8,9,9,9,11,11,12,10,9,11,14,16,17,16,15,11,12,14,14,15,12,11,13,15,15,14,17,21,24,24,21,18,13,9,10,10,9,8,8,8,9,12,12,13,10,10,11,14,16,16,17,16,13,13,13,14,14,12,10,12,13,14,13,16,18,21,23,20,17,13,9,10,10,9,8,8,7,8,11,11,13,11,10,12,13,14,15,17,17,15,16,12,13,13,11,10,11,11,13,13,15,16,19,21,19,16,13,10,10,10,9,8,8,7,5,8,10,14,12,12,12,13,13,14,17,19,17,17,11,12,13,11,9,10,10,11,12,14,15,17,19,18,15,13,10,10,11,9,9,8,7,5,6,9,15,14,13,13,14,14,15,18,19,17,12,7,11,12,10,10,9,9,10,13,15,14,14,17,16,13,12,10,10,10,9,9,9,7,5,5,7,16,15,14,14,15,15,15,18,19,17,9,5,11,13,10,10,9,8,10,13,15,14,13,14,14,12,12,10,10,11,10,9,9,8,5,5,7,16,15,15,15,15,14,14,17,18,17,11,6,11,13,11,10,9,9,11,13,14,12,11,12,12,11,12,10,10,11,12,9,8,8,6,6,8,16,15,16,15,15,14,13,15,18,17,13,6,10,14,11,10,8,9,11,14,13,12,11,11,11,11,12,10,10,12,13,8,7,8,7,7,10,17,16,16,16,16,14,14,15,19,18,16,6,10,13,11,9,7,9,11,14,15,14,12,11,11,11,12,10,10,12,13,8,7,9,10,11,13,18,16,17,16,16,15,14,15,19,19,19,7,10,12,11,8,6,8,11,13,14,15,13,11,10,11,11,10,10,13,13,8,7,10,11,13,14,18,17,17,17,17,16,15,14,17,20,18,10,11,11,10,8,7,8,9,10,12,14,15,12,10,10,10,10,11,13,12,10,9,11,11,12,13,18,18,17,17,17,17,16,14,16,19,18,12,11,9,9,9,7,8,9,9,10,13,16,14,10,10,10,11,12,13,11,11,11,13,11,12,13],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
