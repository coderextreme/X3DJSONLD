###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    Shape(
      appearance=Appearance(
        material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0,0.05,0)),
        texture=ImageTexture(url=['../../images/4/world12-14.jpg'],repeatS=False,repeatT=False)),
      geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(44.95833735661353,134.95834272103156,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=22,xSpacing=1.0714287,zDimension=24,zSpacing=0.48913044,height=[715,-1368,-3587,-3768,-3584,-2936,-511,67,555,228,36,-401,-3088,-6425,-6739,-4999,-4826,-5004,-5191,-5375,-5466,-5442,473,167,-3307,-3612,-3610,-2924,-619,204,302,475,176,-109,-170,-3027,-8339,-5614,-5180,-5053,-5256,-5389,-5395,-5419,459,427,-501,-2030,-1378,-1059,-499,-118,709,267,-54,235,-134,-624,-4343,-8788,-6416,-5263,-4977,-5245,-5355,-5478,264,516,207,-1799,-2600,-1051,-263,-81,482,-112,-1452,-2430,-310,-248,-2874,-5359,-8163,-6426,-5142,-5238,-5183,-5076,102,648,566,-102,-1475,-1212,-153,-72,177,-147,-1492,-2774,-1300,261,-3,-2061,-5614,-8320,-5938,-5148,-4869,-4974,165,348,537,403,-1520,-1898,-351,-114,-77,-170,-1075,-3115,-3208,-1015,-755,-585,-1740,-5765,-8049,-5099,-5053,-4823,62,237,710,777,-300,-1840,-1090,-149,-46,-185,-3165,-3257,-3286,-2506,-3049,264,-2282,-2800,-7372,-6032,-4911,-4615,47,91,812,399,456,-1283,-1276,-207,-19,-53,-2919,-3231,-3303,-3215,-3346,-3000,-1548,-2629,-4083,-6900,-4984,-4849,146,247,291,977,553,-167,-1254,-653,394,-354,-2586,-3318,-3324,-3379,-3362,-3140,-2859,-116,-2684,-4769,-6068,-4938,51,151,201,1068,905,-154,-856,-937,177,-406,-1902,-3053,-3193,-3334,-3259,-3388,-3119,-1637,-2172,-2202,-7144,-5059,43,52,151,577,486,183,-590,-125,36,-298,-638,-1501,-2177,-2440,-2578,-3235,-3329,-3118,-458,-216,-5144,-7443,46,30,40,372,900,942,-178,-514,313,-264,-127,-892,-1036,-1452,-1529,-2003,-3097,-2940,-2320,-1093,-2360,-6027,58,90,25,430,642,850,29,-513,903,-236,-18,-707,-1011,-1184,-1294,-1451,-1879,-2301,-1782,-174,-673,-3737,290,103,19,100,928,422,345,-848,788,26,-153,-511,-1063,-1085,-1042,-1031,-1147,-1284,-1830,-708,-308,-959,642,538,74,34,679,549,445,-1202,514,281,-282,-560,-906,-1026,-1083,-1158,-1156,-1386,-1303,-1386,-82,-56,971,1050,778,50,430,685,136,-640,432,541,-458,-619,-1081,-1194,-1206,-1211,-1275,-1257,-1048,-1019,-355,-34,941,788,181,61,119,906,197,-405,172,26,-535,-752,-1244,-1252,-1334,-1374,-1268,-1025,-753,-737,-496,-241,773,892,186,85,356,16,263,-157,105,-265,-767,-1034,-1306,-1281,-1243,-1160,-1070,-938,-707,-469,-526,-365,1212,904,115,108,461,124,4,-8,102,-319,-827,-1429,-1366,-1251,-972,-960,-1026,-817,-669,-411,-351,-88,1382,1883,100,66,188,86,21,-34,85,-108,-743,-1439,-1449,-1191,-1180,-1073,-919,-706,-529,-371,-256,-11,802,1455,149,250,150,3,282,-83,77,-42,-1154,-1572,-1515,-1280,-1230,-1098,-908,-643,-385,-147,-150,14,945,1335,272,11,43,192,91,-33,-3,-119,-1293,-1725,-1742,-1468,-1358,-1116,-689,-449,-235,-86,-120,54,666,1484,455,-50,-41,140,-32,-437,-102,-108,-1417,-1577,-1503,-1127,-965,-832,-470,-447,-469,-183,-109,98,420,1289,468,-98,-49,160,-38,-432,-34,-117,-1436,-1552,-1589,-1077,-832,-777,-435,-419,-459,-231,-127,101],
        geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(0.0,0.0,-6378137.0),geoSystem=['GDC'])))])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
