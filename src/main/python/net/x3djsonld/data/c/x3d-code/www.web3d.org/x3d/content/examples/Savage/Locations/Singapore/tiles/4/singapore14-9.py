###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_149',geoSystem=['GDC'],position=(1.4654829221618253,103.86273364845137,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.4654829221618253,103.86273364845137,0.0),range=4101.627,child1Url=['../../tiles/5/singapore28-18.x3d'],child2Url=['../../tiles/5/singapore28-19.x3d'],child3Url=['../../tiles/5/singapore29-18.x3d'],child4Url=['../../tiles/5/singapore29-19.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore14-9.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.4567512097838313,103.84837061432235,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[9,12,13,0,-9,-15,-12,-1,17,20,20,19,19,15,13,13,14,14,11,6,12,24,29,30,29,26,17,9,6,19,25,14,8,7,8,9,8,6,10,13,6,-5,-13,-13,-7,8,18,20,19,19,14,13,13,14,14,13,9,9,18,26,29,30,26,20,15,6,15,21,12,9,10,9,9,8,5,9,12,12,0,-11,-15,-13,-1,16,20,20,19,14,12,13,13,14,14,11,7,12,23,28,30,26,23,20,6,11,16,8,12,12,10,8,7,5,7,11,12,5,-6,-14,-14,-8,7,18,20,19,14,12,13,13,14,14,13,9,9,17,25,28,26,21,16,6,8,11,7,9,11,9,7,7,4,4,9,13,12,-1,-12,-15,-13,-1,16,20,20,14,12,12,13,13,14,13,11,7,11,20,26,25,18,10,6,4,6,6,6,9,8,6,6,4,4,7,12,13,5,-7,-15,-15,-8,7,18,20,14,12,12,13,13,14,14,12,9,8,14,19,21,16,9,7,4,5,6,6,6,7,6,6,4,4,4,10,13,12,-2,-13,-15,-13,-1,15,20,13,11,12,12,13,13,14,13,11,7,7,11,16,15,8,9,5,5,6,4,4,5,6,6,5,4,4,7,12,13,4,-7,-15,-15,-8,7,18,13,11,12,12,13,13,14,14,12,8,5,6,10,11,7,7,5,6,6,4,4,5,6,6,6,4,4,4,10,13,11,-2,-13,-15,-13,-1,15,13,11,11,12,12,13,13,14,13,10,4,1,2,6,5,4,4,6,5,5,6,6,6,5,6,5,4,4,7,12,13,4,-8,-14,-15,-8,8,11,11,11,12,12,12,13,13,14,10,1,-3,0,3,5,4,5,6,5,7,9,8,6,6,6,6,4,4,5,10,13,11,-2,-13,-15,-13,1,9,10,11,11,11,11,12,12,13,9,-2,-9,-3,1,4,5,6,7,6,9,12,10,7,7,5,6,5,4,4,7,12,13,4,-8,-14,-15,0,8,10,11,11,11,11,11,12,12,8,-4,-10,-2,2,3,4,7,7,6,9,13,10,8,7,5,6,5,4,4,5,10,13,11,-2,-13,-15,1,9,10,10,10,10,10,11,11,11,7,-3,-7,0,3,2,2,7,6,6,8,11,11,8,7,2,5,6,5,4,4,7,12,13,3,-5,-7,4,9,10,10,10,10,10,10,10,10,7,0,-4,1,4,3,3,7,6,6,7,9,10,7,6,0,5,6,5,4,4,5,11,12,10,6,4,8,9,9,9,9,9,9,9,9,9,8,3,0,2,6,6,5,8,6,5,6,8,8,5,5,-4,2,5,6,5,6,6,11,12,12,11,9,9,9,9,9,9,9,9,9,9,9,8,8,5,3,5,6,6,8,6,5,6,7,7,5,5,-9,0,5,6,6,11,11,12,12,13,12,10,9,9,9,9,9,9,9,9,9,8,9,14,13,3,4,5,6,8,6,6,7,7,6,5,6,-12,-4,3,5,6,12,13,13,13,13,12,11,9,8,8,9,9,9,9,9,9,8,11,18,15,3,4,5,6,8,7,7,8,7,6,6,6,-12,-9,0,3,4,8,13,14,13,13,12,11,9,7,7,8,9,9,9,9,8,10,16,20,14,6,4,5,6,7,7,8,8,7,7,6,7,-9,-8,0,2,3,5,12,14,14,13,13,11,9,7,7,8,9,9,9,9,8,10,18,21,15,9,6,5,6,7,7,9,8,8,7,7,7,-1,-1,1,2,3,4,9,13,14,13,13,11,10,7,6,6,8,9,9,9,9,11,16,21,20,13,8,4,6,7,7,9,8,7,7,7,7,2,2,2,3,3,3,6,12,14,14,13,12,10,8,5,5,7,9,10,10,10,11,13,19,22,17,10,5,6,7,7,9,8,7,7,7,7,2,3,3,3,3,3,4,9,13,14,13,12,10,8,5,4,5,8,10,11,11,11,11,14,20,21,15,7,6,7,7,9,8,7,7,6,6,3,3,3,3,3,3,3,6,12,14,14,12,10,8,5,3,4,8,10,11,11,11,9,10,18,23,16,8,7,7,7,8,8,8,8,5,5,3,3,3,3,3,3,3,4,9,13,14,12,11,8,5,3,4,7,9,11,12,11,9,9,14,18,14,8,7,7,6,8,9,8,7,6,5,4,3,3,3,3,3,3,4,7,13,14,13,11,8,5,3,3,6,9,10,11,12,10,9,10,14,11,8,7,7,6,7,10,8,7,6,6,4,3,3,3,3,3,3,4,5,10,13,13,11,8,5,3,3,6,10,10,11,12,11,9,9,11,10,8,7,7,6,5,7,7,7,7,7,4,4,3,3,3,3,3,4,5,8,13,13,12,9,5,2,2,6,11,11,11,12,12,10,9,9,9,8,8,7,5,4,6,6,8,9,9,3,4,3,3,3,3,3,4,5,7,11,13,12,9,6,2,2,6,12,13,11,12,11,10,9,9,8,7,8,8,6,5,6,7,9,12,13,2,4,4,3,3,3,3,4,5,7,9,13,13,9,6,2,1,6,13,15,11,12,11,9,9,9,8,7,8,8,7,6,7,8,10,15,16,2,3,4,3,3,3,3,4,5,7,8,11,13,10,7,2,0,5,15,16,12,12,12,10,11,11,9,8,9,9,8,7,8,9,12,16,16,2,2,4,4,3,3,3,4,5,7,7,9,13,10,7,3,0,5,17,17,12,12,13,12,13,13,10,10,10,10,8,8,8,10,13,16,15,3,2,3,4,3,3,3,4,7,5,8,9,10,8,8,6,5,8,15,15,12,12,14,15,15,15,12,10,12,12,10,9,9,10,13,14,13,4,1,2,4,4,4,3,4,7,4,9,9,9,8,10,10,10,11,13,13,12,11,14,18,17,18,13,11,13,14,11,9,9,9,12,13,12,6,3,2,3,4,4,3,4,7,5,9,12,13,10,10,10,12,12,14,14,12,12,14,16,18,19,14,11,13,15,12,9,9,10,12,12,11,7,4,1,2,4,4,4,4,6,5,10,15,18,13,11,11,12,13,14,14,13,13,14,15,18,20,15,11,13,16,13,9,8,10,12,11,11,7,4,2,2,3,4,4,4,7,7,12,18,22,15,11,11,11,13,14,14,12,12,12,13,17,19,15,11,12,15,13,9,9,11,10,8,8,8,5,3,1,2,3,3,3,7,8,14,22,25,16,12,11,11,12,13,13,12,11,11,10,16,18,14,11,10,13,13,9,11,13,8,6,6,8,5,4,1,2,3,4,5,9,10,14,21,22,15,13,12,9,10,12,12,13,14,12,10,14,18,17,13,11,13,12,10,13,14,9,7,7,9,4,4,1,3,3,5,7,12,12,14,20,19,13,14,13,7,7,10,11,15,17,14,11,13,18,20,17,14,11,10,11,15,16,12,8,8,8,4,4,1,3,4,6,10,13,14,14,15,14,11,14,12,8,8,10,11,15,18,17,14,14,19,23,21,15,10,10,12,15,16,13,10,9,7,5,3,1,3,4,7,14,15,16,14,10,9,9,14,11,8,9,9,11,15,19,20,17,15,21,27,24,16,9,11,13,15,16,15,11,9,7,5,4,2,4,6,9,14,17,17,14,8,7,8,12,11,8,9,8,9,14,19,22,20,15,20,26,25,15,7,10,12,14,15,15,13,11,7,6,6,4,6,8,11,15,19,19,14,7,6,7,10,11,10,9,8,8,12,18,24,23,15,18,25,24,13,6,8,11,14,14,15,14,12],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
