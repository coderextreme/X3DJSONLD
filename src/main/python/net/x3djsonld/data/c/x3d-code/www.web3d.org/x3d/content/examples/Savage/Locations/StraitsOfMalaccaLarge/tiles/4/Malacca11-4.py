###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    Shape(
      appearance=Appearance(
        material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0,0.05,0)),
        texture=ImageTexture(url=['../../images/4/Malacca11-4.jpg'],repeatS=False,repeatT=False)),
      geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(3.369293689925194,96.85450019203219,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=22,xSpacing=0.048130956,zDimension=22,zSpacing=0.04797024,height=[2,2,3,2,2,2,10,762,783,218,983,865,468,644,1311,1504,1944,1727,1547,1171,415,437,1,2,2,2,0,7,546,1170,710,381,572,871,779,1495,1799,1706,2091,1337,1514,1202,210,136,0,0,3,0,3,54,235,921,567,1159,753,1132,864,1879,2063,1579,1347,1751,1176,636,132,132,2,1,1,2,4,1092,739,556,1226,676,1377,1638,1740,1962,1926,2126,1360,1523,723,369,152,160,2,2,1,0,62,633,721,588,1162,1102,1424,1777,2836,2423,2578,1765,954,1451,644,188,385,747,1,1,8,14,654,794,932,1534,985,1221,2095,2020,2697,2642,2630,2072,1410,772,261,473,984,1250,4,9,35,112,160,1322,1710,1313,1297,1785,2399,2648,2491,1942,2544,1885,1700,704,467,1195,2364,2353,5,5,164,725,294,1601,1965,1939,2130,1745,1555,2303,2805,2436,1234,1307,813,517,1016,1531,2440,2076,3,305,436,510,614,828,2024,2620,1795,1925,1926,2417,2327,2467,1680,1320,658,1129,1733,2362,1651,1140,142,235,271,1263,1660,981,1593,2847,2996,2047,2177,2453,2200,2580,1581,634,1190,1930,2043,2485,2046,2053,862,469,764,1372,1830,1854,2180,2829,2692,2399,2330,1792,1934,1642,747,1088,1599,1326,1640,2129,1316,1704,457,596,880,816,1656,1946,2494,2338,1936,1829,1899,2217,1366,886,1201,1322,1624,1600,1166,1284,981,823,495,593,555,1120,1122,1551,1983,1912,2162,2242,1912,1237,1606,1705,1535,1392,1238,1097,1289,700,785,887,1230,871,1478,1463,2138,1961,2370,2245,2162,1526,964,1351,1152,1558,1705,1625,1280,1013,1187,584,1247,1519,830,782,1060,1402,1514,1659,1386,1220,1107,973,888,1098,1705,1946,1810,1350,1478,707,746,854,1279,1009,1219,1211,629,972,868,1193,731,1329,1385,1493,1188,1566,913,959,1248,590,1466,523,1055,1623,751,711,1804,991,1210,1213,644,1360,1686,1476,840,1086,1969,2358,1581,1468,901,597,648,750,1048,1114,170,260,1599,1385,712,740,1508,1646,1694,1290,1701,1893,1640,2083,2473,1186,996,857,383,234,636,513,216,334,1744,1194,1444,1827,2049,1585,1992,1983,2137,1908,1746,2119,2865,1351,946,1053,186,522,522,335,132,149,1575,2206,2061,1849,2045,1987,1211,1641,1538,1127,1617,2353,1938,1486,584,502,796,779,314,107,70,42,2009,2413,2214,1435,1470,879,648,799,838,1656,1706,1580,1144,1283,1003,867,429,84,164,178,28,24,1999,2467,2108,1491,1403,921,681,809,863,1792,1718,1493,1126,1284,1065,814,441,76,175,138,26,27],
        geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(0.3471685463819618,100.89750038406439,0),geoSystem=['GDC'])))])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
