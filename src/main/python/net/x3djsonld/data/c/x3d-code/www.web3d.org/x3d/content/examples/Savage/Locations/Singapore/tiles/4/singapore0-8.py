###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_08',geoSystem=['GDC'],position=(1.220994975577994,103.83400758019333,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.220994975577994,103.83400758019333,0.0),range=4101.627,child1Url=['../../tiles/5/singapore0-16.x3d'],child2Url=['../../tiles/5/singapore0-17.x3d'],child3Url=['../../tiles/5/singapore1-16.x3d'],child4Url=['../../tiles/5/singapore1-17.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore0-8.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.2122632632,103.81964454606431,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[4,4,4,5,3,2,4,6,5,4,3,3,2,3,1,0,0,6,11,9,6,3,3,7,6,9,10,14,7,3,3,0,-1,0,0,-2,-2,5,6,6,7,5,2,3,5,5,1,1,2,2,4,0,0,2,9,15,14,10,2,2,5,6,7,4,6,2,2,5,1,0,1,0,0,0,4,5,7,9,5,1,3,4,1,0,0,2,1,2,1,0,1,8,16,17,13,3,1,1,5,5,2,3,1,0,4,3,0,1,4,5,6,3,5,8,9,4,1,2,2,0,-1,0,1,0,0,1,0,0,6,14,18,14,5,0,-2,5,3,1,2,2,-1,2,4,1,3,9,15,14,5,5,7,7,4,2,2,2,0,0,1,1,0,0,3,0,2,6,11,17,13,5,0,-1,4,3,1,1,1,-1,1,3,3,23,33,31,28,7,6,4,4,4,3,2,2,1,1,3,2,1,2,5,2,6,9,9,15,10,5,1,0,3,3,2,1,0,0,0,3,4,49,63,49,43,9,6,3,2,3,2,1,1,0,1,2,1,0,3,5,5,10,12,8,11,7,4,2,0,1,2,2,1,0,0,0,2,12,60,77,56,45,9,6,1,1,3,2,0,0,0,0,2,0,0,4,5,7,14,14,8,6,3,3,2,0,0,0,2,2,0,0,0,2,20,62,82,59,41,8,4,1,2,1,0,0,1,0,1,2,1,0,3,5,7,15,14,6,3,0,3,3,0,0,2,8,5,2,1,1,3,17,52,76,56,37,7,3,2,3,0,-1,0,1,0,2,3,2,1,3,5,5,13,13,3,0,0,4,3,0,0,6,16,10,4,3,3,4,7,35,64,49,33,6,1,2,3,0,-2,0,1,1,3,2,2,1,2,4,4,10,9,1,0,0,5,3,0,1,11,18,11,6,4,4,4,4,21,46,40,29,5,0,0,3,1,-2,-1,1,3,3,0,2,1,2,3,3,5,5,0,0,0,5,5,0,0,16,15,10,8,6,5,5,5,9,26,31,27,4,0,0,2,2,-1,-1,1,2,2,0,2,1,2,2,2,2,3,0,1,1,4,3,0,0,15,12,9,7,7,7,6,5,5,19,28,27,3,1,0,0,2,0,0,2,2,1,0,3,3,1,2,1,0,3,3,3,1,3,1,-1,0,8,9,9,5,7,10,7,5,7,23,31,30,1,2,0,0,1,0,0,2,3,1,1,3,3,1,2,1,0,4,4,3,1,2,0,0,1,5,8,8,2,5,13,11,7,11,26,33,32,0,2,2,1,0,0,0,2,5,4,3,3,1,1,2,0,0,3,3,4,2,3,2,3,4,5,9,5,-1,4,17,16,12,16,27,33,34,0,1,3,1,0,0,0,3,7,6,4,2,1,1,2,0,0,1,3,4,4,4,2,5,6,6,8,2,-3,2,18,20,16,21,29,33,34,0,0,2,1,0,0,0,4,7,6,3,1,2,2,2,0,-2,0,2,4,5,5,3,3,5,7,5,-1,-3,1,15,21,23,26,28,32,34,0,0,1,1,0,1,2,3,6,4,1,0,3,1,2,-1,-2,0,2,4,6,5,3,2,5,7,4,-2,-4,0,13,24,29,29,26,28,30,0,-1,0,1,1,3,2,1,2,0,-1,1,5,0,0,-1,0,0,1,4,8,4,4,3,4,9,6,0,-4,-1,13,27,32,28,21,19,18,0,-1,0,0,1,4,2,0,0,-1,-3,1,6,0,-2,0,0,1,1,5,8,3,4,3,4,9,6,1,-3,-2,15,30,34,28,18,11,10,0,0,0,0,1,2,1,0,0,-1,-2,0,4,-4,-10,1,2,2,1,4,6,3,4,5,5,7,4,0,-2,1,21,35,34,25,14,8,7,0,0,0,0,0,1,1,0,0,-1,-1,0,1,-5,-16,2,5,4,3,6,6,3,4,6,6,5,2,0,0,5,26,37,31,22,11,5,4,2,2,0,-1,0,1,2,2,0,-1,0,1,1,0,-10,1,9,13,7,10,11,7,4,6,8,5,3,0,-1,6,25,32,24,15,7,4,3,4,4,0,-2,0,1,3,3,0,0,1,2,1,3,-5,2,14,20,11,12,13,9,4,7,9,4,3,0,-1,7,23,27,18,10,4,2,2,3,2,0,0,0,3,4,4,1,0,0,1,2,6,3,7,19,22,14,4,8,8,4,4,6,4,3,0,0,7,15,19,14,8,3,0,1,2,0,0,0,2,3,4,3,2,0,0,1,3,9,9,11,22,22,15,-1,4,7,4,2,4,4,2,1,1,6,8,11,10,7,1,0,0,2,0,0,2,3,2,2,1,3,0,0,2,4,5,6,7,13,17,11,-3,0,9,5,3,4,3,2,2,1,4,4,5,5,5,1,0,1,2,0,0,3,3,2,0,0,3,1,0,4,6,3,4,3,6,13,8,-5,-3,11,7,4,5,3,1,2,1,2,0,0,1,2,1,1,3,1,0,0,2,4,3,3,4,4,2,2,4,5,0,4,2,2,9,8,-3,-1,11,8,5,6,5,4,4,3,2,0,0,0,2,3,3,3,0,0,0,1,4,4,5,6,4,2,3,4,3,-4,4,0,0,6,8,-2,0,12,11,5,8,7,6,7,5,2,1,0,0,2,5,5,4,0,0,0,1,3,2,3,4,3,4,3,1,0,-3,2,2,2,7,5,-1,2,9,7,4,7,6,5,5,3,1,2,0,0,3,5,5,4,-1,2,0,0,3,1,2,2,3,5,3,0,-1,-2,0,4,5,9,2,0,4,6,4,3,5,6,5,4,0,1,2,0,0,3,5,5,4,0,1,1,1,2,0,0,0,1,4,2,0,0,0,0,5,6,8,0,-1,2,2,4,2,5,7,5,5,2,2,1,1,1,3,4,4,4,0,1,2,3,1,0,0,0,0,3,2,-1,0,0,0,6,5,5,0,-2,0,0,4,2,6,7,4,5,3,2,1,2,3,3,3,4,4,1,0,3,5,2,0,0,0,0,1,2,0,0,0,0,3,2,1,-4,-6,0,0,2,0,4,4,3,5,2,2,2,3,3,1,1,4,4,2,0,3,5,4,0,0,0,-1,0,3,2,1,-1,-1,0,0,-1,-7,-9,-3,0,0,-1,1,2,1,5,1,2,2,4,3,0,0,4,4,2,1,2,4,5,2,1,0,0,1,3,2,0,0,1,3,-1,-3,-2,-5,-5,0,0,0,3,2,2,2,0,1,2,3,2,0,0,3,3,1,1,1,3,5,4,3,2,1,3,3,1,0,2,5,6,-2,-3,3,-1,-7,0,0,4,6,3,3,0,-2,0,2,2,1,0,0,2,2,1,2,2,3,6,6,3,2,1,3,2,0,0,3,5,6,-1,0,7,2,-1,0,0,5,8,4,4,0,-1,1,3,2,0,0,1,3,3,2,3,2,3,8,7,3,2,1,3,0,-1,3,4,4,6,0,2,11,7,5,1,1,6,13,6,4,2,0,4,4,2,0,0,2,3,4,4,4,1,2,7,7,3,2,2,3,0,-1,2,2,4,7,1,1,9,9,7,2,2,10,13,6,5,2,1,2,2,1,0,0,1,3,3,7,5,1,2,5,6,3,3,4,3,0,-1,1,1,4,8,6,0,6,9,7,4,4,13,13,5,5,2,2,0,0,0,1,1,1,2,3,7,5,1,1,3,4,3,2,3,3,1,0,2,3,10,8,6,1,4,8,6,6,6,13,10,4,4,2,2,0,-1,0,2,2,1,2,3],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
