###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_813',geoSystem=['GDC'],position=(1.3607023736258976,103.97763792148352,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.3607023736258976,103.97763792148352,0.0),range=4101.627,child1Url=['../../tiles/5/singapore16-26.x3d'],child2Url=['../../tiles/5/singapore16-27.x3d'],child3Url=['../../tiles/5/singapore17-26.x3d'],child4Url=['../../tiles/5/singapore17-27.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore8-13.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.3519706612479037,103.9632748873545,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=44,zSpacing=4.0612617E-4,height=[24,30,31,29,27,28,29,26,23,20,18,14,12,13,12,15,12,9,10,11,9,4,0,-2,3,8,8,10,9,10,14,15,12,14,12,10,10,24,31,33,30,28,29,29,28,23,19,19,15,13,14,13,15,12,8,9,10,7,4,0,0,5,8,7,8,8,10,13,16,13,15,13,9,10,24,31,33,30,29,30,29,29,24,20,19,16,13,15,15,15,13,9,9,9,6,4,1,0,5,8,7,7,7,9,12,16,15,15,13,9,9,24,32,33,30,28,30,29,31,26,23,20,17,16,17,17,17,14,10,8,8,7,5,2,0,4,6,7,7,6,8,11,17,17,14,14,9,9,25,33,32,30,28,29,29,33,28,26,21,18,18,19,19,18,15,11,8,7,8,5,3,2,3,4,7,7,6,6,10,18,19,13,14,10,9,26,34,33,29,27,28,28,33,30,28,22,18,20,18,19,19,17,13,9,7,7,5,4,3,4,4,6,7,6,5,9,18,23,13,13,11,10,28,33,33,27,25,25,26,33,32,29,23,19,20,18,18,19,17,14,9,8,7,6,5,5,6,5,5,8,6,5,8,18,26,15,13,12,12,29,32,32,24,20,21,24,32,32,29,24,20,21,19,17,18,17,14,9,7,7,7,6,5,7,8,7,8,7,6,8,17,26,16,14,15,14,30,31,30,21,16,17,21,31,31,30,26,21,22,21,17,16,16,13,9,7,7,9,7,5,8,9,8,8,7,7,8,16,25,17,15,17,16,29,30,28,18,14,15,18,29,32,31,27,24,24,22,18,15,14,12,8,7,8,10,7,5,7,6,7,7,8,8,9,14,22,18,14,18,15,26,27,25,16,14,15,17,27,32,31,28,25,26,23,20,16,12,10,7,7,8,10,7,5,6,2,3,6,9,9,10,12,18,18,14,19,15,22,23,21,15,14,15,17,26,31,31,27,25,25,23,20,17,11,9,7,7,8,9,7,6,4,0,0,5,8,8,9,10,14,18,14,20,18,19,20,18,14,14,16,17,25,30,28,24,22,22,21,20,18,12,8,6,7,8,8,7,5,2,0,0,4,8,7,7,9,12,17,15,20,21,19,18,16,14,15,17,17,24,28,26,20,19,19,19,20,19,13,9,7,7,8,8,7,6,3,2,1,4,7,6,7,9,11,16,15,20,22,21,17,15,15,16,18,18,24,26,22,16,15,17,17,19,20,14,10,9,8,9,9,8,6,5,6,4,4,5,6,8,10,11,16,14,17,19,21,17,15,15,17,18,20,25,28,22,14,13,15,15,19,21,16,12,10,8,9,9,8,7,7,7,5,4,5,6,8,10,11,15,12,14,15,20,18,16,16,18,20,22,27,30,23,13,11,13,14,18,21,17,13,11,9,9,9,8,7,8,7,4,4,6,6,9,11,12,14,11,11,10,20,19,18,18,21,22,24,28,31,25,14,11,12,14,17,21,18,14,12,10,9,8,7,8,8,7,3,4,6,6,9,12,14,13,11,10,8,20,20,21,21,23,24,27,29,31,26,15,11,12,13,16,20,18,16,14,10,9,7,7,8,7,5,3,4,7,6,9,13,15,14,14,12,10,20,21,23,23,23,24,28,30,31,27,15,12,12,13,15,19,18,16,14,10,10,8,7,9,8,5,4,3,7,6,9,14,14,15,17,15,13,20,21,23,25,23,24,28,31,31,26,15,13,13,13,14,17,16,15,13,11,11,9,8,11,10,6,5,3,6,6,10,13,14,16,19,17,15,20,22,24,26,23,24,27,31,30,26,17,15,15,14,13,15,14,13,12,11,12,9,7,10,10,7,6,4,6,7,9,14,15,19,21,19,17,21,24,25,27,25,23,27,32,30,27,20,17,18,16,13,13,11,11,10,12,13,10,7,8,8,7,7,7,7,6,7,13,19,23,22,19,18,21,26,27,27,26,23,27,31,30,27,22,20,21,18,14,12,9,9,9,13,16,12,7,6,7,7,8,9,7,6,4,12,20,22,20,17,16,22,26,27,28,27,24,28,31,29,27,24,24,23,20,16,14,10,9,10,15,19,14,8,6,7,8,9,9,6,3,1,11,18,17,15,13,13,23,25,27,28,28,26,29,30,29,27,26,25,24,21,17,14,11,10,11,16,20,16,10,6,7,8,8,8,6,2,0,8,15,13,10,10,11,25,23,26,28,30,30,30,29,28,27,26,25,23,20,16,15,13,12,13,17,20,18,13,7,8,8,6,5,6,2,-1,5,13,9,7,8,10,25,23,25,29,32,32,31,30,27,26,25,23,21,18,15,15,15,15,15,17,20,19,15,10,9,8,5,4,6,3,-1,4,11,7,5,5,8,23,24,25,29,32,32,32,32,27,24,23,20,17,15,14,15,16,17,16,17,19,20,18,13,10,9,6,5,7,6,1,4,9,8,7,2,5,22,23,24,29,31,31,31,32,26,22,21,18,14,14,14,15,18,19,17,18,20,21,19,15,9,9,6,6,7,6,2,3,7,9,8,1,3,23,22,22,27,30,30,30,29,24,21,18,17,15,15,16,17,19,19,19,21,23,22,19,13,8,7,7,7,6,4,1,1,6,10,9,1,3,24,21,21,26,30,29,29,28,24,20,17,16,17,17,18,19,20,20,20,23,25,23,18,12,7,6,7,8,6,2,0,0,5,11,10,2,4,23,20,21,26,29,28,30,30,27,23,20,18,19,19,19,20,22,22,22,24,25,23,18,11,7,7,7,7,6,2,-1,-1,6,10,11,6,7,22,19,22,27,30,28,30,32,30,26,22,20,21,20,19,21,23,23,25,26,26,23,17,10,7,7,7,7,6,3,-1,-1,7,9,11,9,9,21,20,24,29,31,31,32,32,31,27,23,20,22,21,20,21,24,25,28,27,25,22,16,10,7,6,7,6,6,5,1,1,8,8,9,9,9,21,22,25,30,32,32,33,32,31,28,24,21,22,22,21,22,25,27,30,28,25,22,16,11,8,6,8,6,7,6,3,4,8,7,7,9,8,23,24,25,31,34,32,34,31,28,27,24,21,22,22,22,23,26,28,29,28,25,20,15,12,9,8,9,7,6,6,5,6,8,7,5,6,7,25,26,26,32,35,30,34,30,26,27,23,22,23,22,22,24,27,29,29,28,24,18,15,14,11,9,9,7,6,6,6,7,7,6,4,3,5,26,28,26,31,33,28,31,31,26,26,23,21,22,22,22,24,28,29,29,28,23,19,16,15,11,9,8,7,7,7,6,6,5,5,1,0,3,26,27,26,30,31,26,29,32,26,26,23,21,22,22,22,24,28,28,29,28,24,20,17,16,12,8,7,7,7,7,6,5,4,4,0,0,2,21,23,27,28,29,25,26,29,26,25,23,21,23,23,23,25,27,27,28,28,24,21,19,17,12,9,7,7,6,6,6,5,4,4,0,2,3,17,19,27,27,26,24,24,26,25,23,23,21,23,24,24,26,27,26,27,28,25,23,21,19,13,10,8,8,7,6,7,6,4,3,1,5,5,17,17,22,25,22,22,22,22,23,22,22,22,24,25,24,25,25,24,25,26,27,26,23,20,15,11,8,9,8,6,8,7,3,3,2,5,7,19,15,18,23,19,20,21,20,20,21,21,22,25,26,24,23,23,23,24,25,28,27,24,21,17,13,9,8,9,6,8,7,3,3,2,4,8],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
