###############################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach greatly simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.

from x3d import *

###############################################

newModel=X3D(profile='Immersive',version='3.1',
  head=head(
    children=[
    component(name='Geospatial',level=1)]),
  Scene=Scene(
    children=[
    GeoViewpoint(description='GeoViewpoint_4_1014',geoSystem=['GDC'],position=(1.3956292231378735,104.00636398974156,2563.5168622784477),orientation=(-1,0,0,1.57),
      geoOrigin=GeoOrigin(DEF='ORIGIN',geoCoords=(1.3519706612479037,103.81964454606431,0),geoSystem=['GDC'])),
    GeoLOD(center=(1.3956292231378735,104.00636398974156,0.0),range=4101.627,child1Url=['../../tiles/5/singapore20-28.x3d'],child2Url=['../../tiles/5/singapore20-29.x3d'],child3Url=['../../tiles/5/singapore21-28.x3d'],child4Url=['../../tiles/5/singapore21-29.x3d'],
      geoOrigin=GeoOrigin(USE='ORIGIN'),
      rootNode=[
      Group(
        children=[
        Shape(
          appearance=Appearance(
            material=Material(diffuseColor=(0.4,0.6,0.3),emissiveColor=(0.6,0.6,0.6)),
            texture=ImageTexture(url=['../../images/4/singapore10-14.jpg'],repeatS=False,repeatT=False)),
          geometry=GeoElevationGrid(colorPerVertex=False,geoGridOrigin=(1.3868975107598795,103.99200095561254,0.0),geoSystem=["GD"],normalPerVertex=False,xDimension=37,xSpacing=7.9794636E-4,zDimension=45,zSpacing=3.96896E-4,height=[6,6,7,7,5,5,8,10,8,6,5,5,7,7,7,6,6,7,10,16,17,12,8,4,3,3,3,2,2,4,5,5,5,5,5,5,5,6,6,7,7,5,4,7,9,8,6,4,2,0,3,4,4,4,4,6,13,13,8,5,4,3,3,3,2,2,3,4,4,4,4,4,4,5,7,7,8,7,6,5,6,7,8,7,4,0,-4,0,1,1,2,2,3,8,8,5,4,4,4,3,3,3,2,2,3,4,4,4,4,4,5,8,8,8,7,6,5,5,6,7,8,5,1,-4,0,0,0,1,1,1,5,5,4,4,4,4,3,3,3,2,2,3,4,4,4,4,5,6,9,9,8,7,6,6,5,5,6,9,8,4,0,0,0,0,0,0,1,4,4,4,4,4,4,4,3,3,3,2,2,3,4,4,5,7,7,10,10,8,6,6,6,4,4,6,9,8,5,1,0,0,0,0,0,1,4,4,4,4,4,4,4,3,3,3,2,2,3,5,5,6,8,9,9,10,8,6,6,6,3,3,5,7,4,3,0,0,0,0,0,0,1,4,4,4,4,4,4,4,4,3,3,3,2,3,6,8,8,9,10,9,10,9,7,6,5,3,2,5,4,0,1,0,0,0,0,0,0,1,4,4,4,4,4,4,4,4,3,3,3,2,2,5,9,9,9,10,8,11,12,10,7,5,3,3,4,1,-5,0,0,0,0,0,0,0,1,4,5,4,4,4,4,4,5,4,2,2,3,2,3,8,9,10,9,8,11,13,12,8,5,4,3,3,0,-7,-1,0,0,0,0,0,0,1,4,5,4,4,4,4,4,5,4,2,2,2,2,1,5,9,9,8,8,10,12,11,9,6,4,4,2,0,-6,-3,0,0,-1,0,0,0,0,4,5,5,4,4,4,4,5,5,2,1,2,2,1,2,7,7,6,8,9,11,11,10,7,5,4,2,0,-5,-4,-1,0,0,0,0,-1,-2,2,4,5,4,4,4,4,5,5,3,0,1,2,1,0,4,5,4,7,9,10,10,9,8,5,3,1,0,-5,-3,-1,-1,0,-1,0,-3,-6,0,4,5,5,4,4,4,5,6,3,0,0,2,2,0,0,2,2,7,8,9,10,9,7,5,3,1,0,-4,-3,-2,-1,0,0,-1,-5,-9,-3,2,4,5,4,4,4,5,7,3,0,0,1,3,-1,-2,0,1,8,8,8,9,9,7,5,3,1,0,-4,-3,-2,-1,-1,0,-2,-8,-9,-7,0,4,5,5,4,4,5,7,4,0,0,1,3,0,-1,0,0,9,8,8,9,8,7,5,3,1,0,-4,-3,-2,-1,-1,0,-3,-9,-10,-10,-3,3,4,5,4,4,6,7,4,0,-1,0,3,2,0,-1,-1,12,8,7,8,8,7,5,3,1,0,-3,-3,-2,-1,-1,-1,-4,-9,-10,-10,-7,0,4,6,5,4,7,6,5,0,-1,0,3,3,0,0,0,15,9,7,8,8,7,5,3,1,0,-3,-3,-2,-1,-1,-1,-4,-8,-9,-10,-10,-3,3,6,5,4,7,6,5,1,0,1,4,4,2,0,0,16,12,8,7,8,7,5,3,1,0,-2,-3,-2,-1,0,-1,-3,-7,-9,-10,-10,-8,0,6,8,4,6,5,6,2,3,4,5,5,3,0,0,17,15,9,7,8,7,5,3,1,0,-2,-2,-2,0,0,0,-2,-5,-8,-9,-10,-11,-3,5,9,4,6,5,7,4,6,6,6,5,5,2,0,17,17,12,8,7,7,5,3,1,0,-2,-2,-2,0,0,0,-1,-4,-7,-8,-9,-11,-8,0,7,4,7,8,8,5,4,5,6,6,5,3,2,17,18,15,9,7,7,5,3,1,0,-2,-2,-2,0,0,0,0,-2,-5,-7,-9,-11,-12,-3,5,5,7,10,9,5,3,4,5,6,5,5,4,17,18,17,12,8,7,6,4,1,0,-3,-2,-2,0,0,0,0,-1,-4,-6,-8,-10,-13,-6,4,5,4,7,9,5,3,3,5,6,6,5,5,16,18,18,15,9,7,7,4,1,0,-3,-3,-2,0,0,0,0,0,-2,-4,-6,-9,-13,-8,3,4,2,4,9,5,3,3,4,5,6,5,5,16,18,18,17,12,8,7,5,2,0,-3,-3,-3,-1,0,0,0,0,-1,-3,-4,-6,-6,-6,3,3,2,2,6,5,3,3,3,4,5,6,5,16,17,18,18,15,9,7,6,2,0,-3,-4,-3,-2,0,0,0,0,0,-2,-2,-3,0,-4,3,3,2,1,4,4,3,3,3,4,5,6,6,16,17,18,18,17,12,8,7,4,0,-3,-4,-3,-3,-1,0,0,0,0,-1,-2,-1,0,-1,2,2,2,1,2,3,3,3,3,3,4,5,6,15,17,17,18,18,15,9,7,6,0,-3,-4,-4,-3,-2,0,0,0,0,0,-2,0,0,0,0,2,2,1,1,2,2,3,3,3,4,5,6,15,17,17,18,18,17,12,8,6,1,-3,-4,-4,-3,-3,-1,0,0,0,0,0,0,0,0,0,1,2,1,1,1,2,2,3,3,3,5,5,15,16,17,17,18,18,15,9,7,3,-3,-4,-4,-4,-3,-1,0,0,0,0,0,0,1,1,0,0,1,1,1,1,1,2,3,3,3,4,4,13,16,17,17,18,18,17,12,8,3,-3,-4,-4,-4,-3,-2,0,0,0,0,1,4,2,1,0,0,1,1,1,1,1,1,2,3,3,3,4,12,15,16,17,17,18,18,15,9,3,-3,-4,-4,-4,-4,-2,0,0,0,1,2,7,3,1,1,0,0,1,1,1,1,1,2,3,3,3,3,8,14,16,17,17,17,18,17,12,4,-3,-4,-4,-4,-4,-2,0,0,1,2,3,7,5,2,1,0,0,0,0,1,1,1,1,2,3,3,3,4,12,15,16,17,17,18,18,15,6,-3,-4,-4,-4,-4,-3,0,0,2,2,3,6,7,4,1,1,0,0,0,1,1,1,1,2,3,3,3,0,8,14,16,17,17,17,18,17,8,-3,-4,-4,-4,-4,-4,-1,2,3,2,3,5,7,6,2,1,0,0,0,0,1,1,1,1,2,3,3,-1,4,12,15,16,17,17,18,18,10,-3,-4,-4,-4,-4,-4,-2,2,4,3,3,5,6,8,4,1,1,0,0,0,1,1,1,1,2,3,3,-2,0,8,14,16,16,17,17,18,11,-3,-4,-4,-4,-4,-4,-1,2,3,3,4,5,6,8,6,2,1,0,0,0,0,1,1,1,1,2,3,-2,-1,4,12,15,16,17,17,18,11,-3,-4,-4,-4,-4,-3,0,0,3,4,4,4,6,7,8,4,1,1,0,0,0,1,1,1,1,2,2,-2,-2,0,8,14,16,16,17,17,11,-3,-4,-4,-4,-4,-2,0,0,3,3,4,4,6,7,8,6,2,1,0,0,0,0,1,1,1,1,2,-2,-2,-1,4,12,15,16,17,17,11,-3,-4,-4,-4,-3,-2,0,0,2,3,4,4,5,7,8,8,4,1,1,0,0,0,1,1,1,1,2,-2,-2,-2,0,8,14,15,16,17,11,-3,-4,-4,-4,-3,-2,0,0,1,3,4,4,5,7,8,8,6,2,1,0,0,0,0,1,1,1,1,-2,-2,-2,-1,4,12,15,16,17,10,-3,-4,-4,-4,-3,-2,0,0,1,2,3,4,4,6,7,8,8,4,1,1,0,0,1,1,1,1,2,-2,-2,-2,-2,0,8,14,15,16,10,-3,-4,-4,-3,-3,-1,0,0,1,2,3,4,4,6,7,8,8,6,2,1,0,1,2,2,2,2,3,-2,-2,-2,-2,0,4,12,15,16,10,-3,-4,-4,-3,-2,-1,0,0,1,2,3,3,4,5,6,7,8,8,4,1,1,3,5,6,6,6,6,-1,-2,-2,-2,-2,0,8,14,15,10,-3,-4,-3,-3,-2,-1,0,0,1,2,3,3,4,4,6,7,8,8,6,3,2,5,7,8,8,8,8],
            geoOrigin=GeoOrigin(USE='ORIGIN')))])])])
) # X3D model complete

###############################################
# Self-test diagnostics
###############################################

if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel))
print('check  newModel.XML() serialization...')
newModelXML = newModel.XML() # test export method XML() for exceptions
# print(newModelXML) # debug

print ("python x3d.py load successful")
