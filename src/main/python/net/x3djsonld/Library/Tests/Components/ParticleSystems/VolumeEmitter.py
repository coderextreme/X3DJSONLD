####################################################################################################
#
# Now available: developmental python x3d.py package on PyPi for import.
#   This approach simplifies Python X3D deployment and use.
#   https://pypi.org/project/x3d
#
# Installation:
#       pip install x3d
# or
#       python -m pip install x3d
#
# Developer options for loading x3d package:
#
#    from x3d import *  # preferred approach, terser source that avoids x3d.* class prefixes
#
# or
#    import x3d         # traditional way to subclass x3d package, all classes require x3d.* prefix,
#                       # but python source is very verbose, for example x3d.Material x3d.Shape etc.
#                       # X3dToPython.xslt stylesheet insertPackagePrefix=true supports this option.
#
####################################################################################################

from x3d import *

newModel=X3D(profile='Full',version='3.3',
  head=head(
    children=[
    meta(name='comment',content='World of Titania'),
    meta(name='created',content='Sun, 01 May 2016 01:57:45 GMT'),
    meta(name='creator',content='holger'),
    meta(name='generator',content='Titania V1.4.2, http://titania.create3000.de'),
    meta(name='identifier',content='file:///home/holger/Projekte/Cobweb/excite/tests/Components/ParticleSystems/VolumeEmitter.x3d'),
    meta(name='modified',content='Sun, 01 May 2016 07:06:03 GMT')]),
  Scene=Scene(
    children=[
    WorldInfo(title='VolumeEmitter',
      metadata=MetadataSet(DEF='Titania',name='Titania',reference='http://titania.create3000.de',
        value=[
        MetadataSet(DEF='NavigationInfo',name='NavigationInfo',reference='http://titania.create3000.de',
          value=[
          MetadataString(DEF='type',name='type',reference='http://titania.create3000.de',value=["EXAMINE"])]),
        MetadataSet(DEF='Viewpoint',name='Viewpoint',reference='http://titania.create3000.de',
          value=[
          MetadataDouble(DEF='position',name='position',reference='http://titania.create3000.de',value=[0,0,10]),
          MetadataDouble(DEF='orientation',name='orientation',reference='http://titania.create3000.de',value=[0,0,1,0]),
          MetadataDouble(DEF='centerOfRotation',name='centerOfRotation',reference='http://titania.create3000.de',value=[0,0,0])]),
        MetadataSet(DEF='Selection',name='Selection',reference='http://titania.create3000.de',
          value=[
          MetadataSet(DEF='previous',name='previous',reference='http://titania.create3000.de')])])),
    Background(DEF='Gray',skyColor=[(0.2,0.2,0.2)]),
    OrthoViewpoint(description='OrthoViewpoint',fieldOfView=-1.5,-1.5,1.5,1.5),
    Viewpoint(description='Viewpoint',position=(0,0,8)),
    ParticleSystem(geometryType='POINT',maxParticles=100000,particleLifetime=60,lifetimeVariation=0.01,particleSize=(0.1,0.1),colorKey=[0,0.1,0.4,1],
      emitter=VolumeEmitter(direction=(0,0,0),mass=0.01,surfaceArea=0.01,
        coord=Coordinate(point=[(0.0277709,-1,1),(2.02777,-1,1),(2.02777,1,1),(0.0277709,1,1),(0.0277709,-1,-1),(2.02777,-1,-1),(2.02777,1,-1),(0.0277709,1,-1),(-1.01983,1,0),(-1.01983,0.974928,-0.222521),(-1.06609,0.974928,-0.217658),(-1.11034,0.974928,-0.203283),(-1.15062,0.974928,-0.180023),(-1.18519,0.974928,-0.148896),(-1.21254,0.974928,-0.11126),(-1.23146,0.974928,-0.0687627),(-1.24113,0.974928,-0.0232598),(-1.24113,0.974928,0.0232598),(-1.23146,0.974928,0.0687627),(-1.21254,0.974928,0.11126),(-1.18519,0.974928,0.148896),(-1.15062,0.974928,0.180023),(-1.11034,0.974928,0.203283),(-1.06609,0.974928,0.217658),(-1.01983,0.974928,0.222521),(-0.973561,0.974928,0.217658),(-0.929318,0.974928,0.203283),(-0.889031,0.974928,0.180023),(-0.85446,0.974928,0.148896),(-0.827116,0.974928,0.11126),(-0.808195,0.974928,0.0687627),(-0.798523,0.974928,0.0232598),(-0.798523,0.974928,-0.0232598),(-0.808195,0.974928,-0.0687627),(-0.827116,0.974928,-0.11126),(-0.85446,0.974928,-0.148896),(-0.889031,0.974928,-0.180023),(-0.929318,0.974928,-0.203283),(-0.973561,0.974928,-0.217658),(-1.01983,0.900969,-0.433884),(-1.11004,0.900969,-0.424402),(-1.19631,0.900969,-0.396373),(-1.27486,0.900969,-0.351019),(-1.34227,0.900969,-0.290325),(-1.39558,0.900969,-0.216942),(-1.43248,0.900969,-0.134077),(-1.45134,0.900969,-0.0453532),(-1.45134,0.900969,0.0453532),(-1.43248,0.900969,0.134077),(-1.39558,0.900969,0.216942),(-1.34227,0.900969,0.290325),(-1.27486,0.900969,0.351019),(-1.19631,0.900969,0.396373),(-1.11004,0.900969,0.424402),(-1.01983,0.900969,0.433884),(-0.929616,0.900969,0.424402),(-0.843349,0.900969,0.396373),(-0.764795,0.900969,0.351019),(-0.697387,0.900969,0.290325),(-0.644071,0.900969,0.216942),(-0.607177,0.900969,0.134077),(-0.588318,0.900969,0.0453532),(-0.588318,0.900969,-0.0453532),(-0.607177,0.900969,-0.134077),(-0.644071,0.900969,-0.216942),(-0.697387,0.900969,-0.290325),(-0.764795,0.900969,-0.351019),(-0.843349,0.900969,-0.396373),(-0.929616,0.900969,-0.424402),(-1.01983,0.781832,-0.62349),(-1.14946,0.781832,-0.609865),(-1.27343,0.781832,-0.569586),(-1.38631,0.781832,-0.504414),(-1.48317,0.781832,-0.417196),(-1.55979,0.781832,-0.311745),(-1.6128,0.781832,-0.192669),(-1.6399,0.781832,-0.0651724),(-1.6399,0.781832,0.0651724),(-1.6128,0.781832,0.192669),(-1.55979,0.781832,0.311745),(-1.48317,0.781832,0.417196),(-1.38631,0.781832,0.504414),(-1.27343,0.781832,0.569586),(-1.14946,0.781832,0.609865),(-1.01983,0.781832,0.62349),(-0.890194,0.781832,0.609865),(-0.766229,0.781832,0.569586),(-0.653347,0.781832,0.504414),(-0.556482,0.781832,0.417196),(-0.479867,0.781832,0.311745),(-0.426851,0.781832,0.192669),(-0.399751,0.781832,0.0651724),(-0.399751,0.781832,-0.0651724),(-0.426851,0.781832,-0.192669),(-0.479867,0.781832,-0.311745),(-0.556482,0.781832,-0.417196),(-0.653347,0.781832,-0.504414),(-0.766229,0.781832,-0.569586),(-0.890194,0.781832,-0.609865),(-1.01983,0.62349,-0.781832),(-1.18238,0.62349,-0.764747),(-1.33783,0.62349,-0.714239),(-1.47938,0.62349,-0.632515),(-1.60084,0.62349,-0.523147),(-1.69692,0.62349,-0.390916),(-1.7634,0.62349,-0.241599),(-1.79738,0.62349,-0.0817236),(-1.79738,0.62349,0.0817236),(-1.7634,0.62349,0.241599),(-1.69692,0.62349,0.390916),(-1.60084,0.62349,0.523147),(-1.47938,0.62349,0.632515),(-1.33783,0.62349,0.714239),(-1.18238,0.62349,0.764747),(-1.01983,0.62349,0.781832),(-0.857273,0.62349,0.764747),(-0.701826,0.62349,0.714239),(-0.560276,0.62349,0.632515),(-0.438811,0.62349,0.523147),(-0.342739,0.62349,0.390916),(-0.276259,0.62349,0.241599),(-0.242277,0.62349,0.0817236),(-0.242277,0.62349,-0.0817236),(-0.276259,0.62349,-0.241599),(-0.342739,0.62349,-0.390916),(-0.438811,0.62349,-0.523147),(-0.560276,0.62349,-0.632515),(-0.701826,0.62349,-0.714239),(-0.857273,0.62349,-0.764747),(-1.01983,0.433884,-0.900969),(-1.20715,0.433884,-0.881281),(-1.38629,0.433884,-0.823076),(-1.54941,0.433884,-0.728899),(-1.68938,0.433884,-0.602866),(-1.80009,0.433884,-0.450484),(-1.8767,0.433884,-0.278415),(-1.91586,0.433884,-0.0941769),(-1.91586,0.433884,0.0941769),(-1.8767,0.433884,0.278415),(-1.80009,0.433884,0.450484),(-1.68938,0.433884,0.602866),(-1.54941,0.433884,0.728899),(-1.38629,0.433884,0.823076),(-1.20715,0.433884,0.881281),(-1.01983,0.433884,0.900969),(-0.832503,0.433884,0.881281),(-0.653368,0.433884,0.823076),(-0.490249,0.433884,0.728899),(-0.350275,0.433884,0.602866),(-0.239563,0.433884,0.450484),(-0.162953,0.433884,0.278415),(-0.123792,0.433884,0.0941769),(-0.123792,0.433884,-0.0941769),(-0.162953,0.433884,-0.278415),(-0.239563,0.433884,-0.450484),(-0.350275,0.433884,-0.602866),(-0.490249,0.433884,-0.728899),(-0.653368,0.433884,-0.823076),(-0.832503,0.433884,-0.881281),(-1.01983,0.222521,-0.974928),(-1.22253,0.222521,-0.953623),(-1.41637,0.222521,-0.890641),(-1.59288,0.222521,-0.788733),(-1.74434,0.222521,-0.652354),(-1.86414,0.222521,-0.487464),(-1.94704,0.222521,-0.301269),(-1.98942,0.222521,-0.101908),(-1.98942,0.222521,0.101908),(-1.94704,0.222521,0.301269),(-1.86414,0.222521,0.487464),(-1.74434,0.222521,0.652354),(-1.59288,0.222521,0.788733),(-1.41637,0.222521,0.890641),(-1.22253,0.222521,0.953623),(-1.01983,0.222521,0.974928),(-0.817126,0.222521,0.953623),(-0.623286,0.222521,0.890641),(-0.446777,0.222521,0.788733),(-0.295313,0.222521,0.652354),(-0.175513,0.222521,0.487464),(-0.0926139,0.222521,0.301269),(-0.0502383,0.222521,0.101908),(-0.0502383,0.222521,-0.101908),(-0.0926139,0.222521,-0.301269),(-0.175513,0.222521,-0.487464),(-0.295313,0.222521,-0.652354),(-0.446777,0.222521,-0.788733),(-0.623286,0.222521,-0.890641),(-0.817126,0.222521,-0.953623),(-1.01983,6.12323e-17,-1),(-1.22774,6.12323e-17,-0.978148),(-1.42657,6.12323e-17,-0.913545),(-1.60761,6.12323e-17,-0.809017),(-1.76297,6.12323e-17,-0.669131),(-1.88585,6.12323e-17,-0.5),(-1.97089,6.12323e-17,-0.309017),(-2.01435,6.12323e-17,-0.104528),(-2.01435,6.12323e-17,0.104528),(-1.97089,6.12323e-17,0.309017),(-1.88585,6.12323e-17,0.5),(-1.76297,6.12323e-17,0.669131),(-1.60761,6.12323e-17,0.809017),(-1.42657,6.12323e-17,0.913545),(-1.22774,6.12323e-17,0.978148),(-1.01983,6.12323e-17,1),(-0.811914,6.12323e-17,0.978148),(-0.613089,6.12323e-17,0.913545),(-0.43204,6.12323e-17,0.809017),(-0.27668,6.12323e-17,0.669131),(-0.1538,6.12323e-17,0.5),(-0.0687689,6.12323e-17,0.309017),(-0.0253035,6.12323e-17,0.104528),(-0.0253035,6.12323e-17,-0.104528),(-0.0687689,6.12323e-17,-0.309017),(-0.1538,6.12323e-17,-0.5),(-0.27668,6.12323e-17,-0.669131),(-0.43204,6.12323e-17,-0.809017),(-0.613089,6.12323e-17,-0.913545),(-0.811914,6.12323e-17,-0.978148),(-1.01983,-0.222521,-0.974928),(-1.22253,-0.222521,-0.953623),(-1.41637,-0.222521,-0.890641),(-1.59288,-0.222521,-0.788733),(-1.74434,-0.222521,-0.652354),(-1.86414,-0.222521,-0.487464),(-1.94704,-0.222521,-0.301269),(-1.98942,-0.222521,-0.101908),(-1.98942,-0.222521,0.101908),(-1.94704,-0.222521,0.301269),(-1.86414,-0.222521,0.487464),(-1.74434,-0.222521,0.652354),(-1.59288,-0.222521,0.788733),(-1.41637,-0.222521,0.890641),(-1.22253,-0.222521,0.953623),(-1.01983,-0.222521,0.974928),(-0.817126,-0.222521,0.953623),(-0.623286,-0.222521,0.890641),(-0.446777,-0.222521,0.788733),(-0.295313,-0.222521,0.652354),(-0.175513,-0.222521,0.487464),(-0.0926139,-0.222521,0.301269),(-0.0502383,-0.222521,0.101908),(-0.0502383,-0.222521,-0.101908),(-0.0926139,-0.222521,-0.301269),(-0.175513,-0.222521,-0.487464),(-0.295313,-0.222521,-0.652354),(-0.446777,-0.222521,-0.788733),(-0.623286,-0.222521,-0.890641),(-0.817126,-0.222521,-0.953623),(-1.01983,-0.433884,-0.900969),(-1.20715,-0.433884,-0.881281),(-1.38629,-0.433884,-0.823076),(-1.54941,-0.433884,-0.728899),(-1.68938,-0.433884,-0.602866),(-1.80009,-0.433884,-0.450484),(-1.8767,-0.433884,-0.278415),(-1.91586,-0.433884,-0.0941769),(-1.91586,-0.433884,0.0941769),(-1.8767,-0.433884,0.278415),(-1.80009,-0.433884,0.450484),(-1.68938,-0.433884,0.602866),(-1.54941,-0.433884,0.728899),(-1.38629,-0.433884,0.823076),(-1.20715,-0.433884,0.881281),(-1.01983,-0.433884,0.900969),(-0.832503,-0.433884,0.881281),(-0.653368,-0.433884,0.823076),(-0.490249,-0.433884,0.728899),(-0.350275,-0.433884,0.602866),(-0.239563,-0.433884,0.450484),(-0.162953,-0.433884,0.278415),(-0.123792,-0.433884,0.0941769),(-0.123792,-0.433884,-0.0941769),(-0.162953,-0.433884,-0.278415),(-0.239563,-0.433884,-0.450484),(-0.350275,-0.433884,-0.602866),(-0.490249,-0.433884,-0.728899),(-0.653368,-0.433884,-0.823076),(-0.832503,-0.433884,-0.881281),(-1.01983,-0.62349,-0.781832),(-1.18238,-0.62349,-0.764747),(-1.33783,-0.62349,-0.714239),(-1.47938,-0.62349,-0.632515),(-1.60084,-0.62349,-0.523147),(-1.69692,-0.62349,-0.390916),(-1.7634,-0.62349,-0.241599),(-1.79738,-0.62349,-0.0817236),(-1.79738,-0.62349,0.0817236),(-1.7634,-0.62349,0.241599),(-1.69692,-0.62349,0.390916),(-1.60084,-0.62349,0.523147),(-1.47938,-0.62349,0.632515),(-1.33783,-0.62349,0.714239),(-1.18238,-0.62349,0.764747),(-1.01983,-0.62349,0.781832),(-0.857273,-0.62349,0.764747),(-0.701826,-0.62349,0.714239),(-0.560276,-0.62349,0.632515),(-0.438811,-0.62349,0.523147),(-0.342739,-0.62349,0.390916),(-0.276259,-0.62349,0.241599),(-0.242277,-0.62349,0.0817236),(-0.242277,-0.62349,-0.0817236),(-0.276259,-0.62349,-0.241599),(-0.342739,-0.62349,-0.390916),(-0.438811,-0.62349,-0.523147),(-0.560276,-0.62349,-0.632515),(-0.701826,-0.62349,-0.714239),(-0.857273,-0.62349,-0.764747),(-1.01983,-0.781832,-0.62349),(-1.14946,-0.781832,-0.609865),(-1.27343,-0.781832,-0.569586),(-1.38631,-0.781832,-0.504414),(-1.48317,-0.781832,-0.417196),(-1.55979,-0.781832,-0.311745),(-1.6128,-0.781832,-0.192669),(-1.6399,-0.781832,-0.0651724),(-1.6399,-0.781832,0.0651724),(-1.6128,-0.781832,0.192669),(-1.55979,-0.781832,0.311745),(-1.48317,-0.781832,0.417196),(-1.38631,-0.781832,0.504414),(-1.27343,-0.781832,0.569586),(-1.14946,-0.781832,0.609865),(-1.01983,-0.781832,0.62349),(-0.890194,-0.781832,0.609865),(-0.766229,-0.781832,0.569586),(-0.653347,-0.781832,0.504414),(-0.556482,-0.781832,0.417196),(-0.479867,-0.781832,0.311745),(-0.426851,-0.781832,0.192669),(-0.399751,-0.781832,0.0651724),(-0.399751,-0.781832,-0.0651724),(-0.426851,-0.781832,-0.192669),(-0.479867,-0.781832,-0.311745),(-0.556482,-0.781832,-0.417196),(-0.653347,-0.781832,-0.504414),(-0.766229,-0.781832,-0.569586),(-0.890194,-0.781832,-0.609865),(-1.01983,-0.900969,-0.433884),(-1.11004,-0.900969,-0.424402),(-1.19631,-0.900969,-0.396373),(-1.27486,-0.900969,-0.351019),(-1.34227,-0.900969,-0.290325),(-1.39558,-0.900969,-0.216942),(-1.43248,-0.900969,-0.134077),(-1.45134,-0.900969,-0.0453532),(-1.45134,-0.900969,0.0453532),(-1.43248,-0.900969,0.134077),(-1.39558,-0.900969,0.216942),(-1.34227,-0.900969,0.290325),(-1.27486,-0.900969,0.351019),(-1.19631,-0.900969,0.396373),(-1.11004,-0.900969,0.424402),(-1.01983,-0.900969,0.433884),(-0.929616,-0.900969,0.424402),(-0.843349,-0.900969,0.396373),(-0.764795,-0.900969,0.351019),(-0.697387,-0.900969,0.290325),(-0.644071,-0.900969,0.216942),(-0.607177,-0.900969,0.134077),(-0.588318,-0.900969,0.0453532),(-0.588318,-0.900969,-0.0453532),(-0.607177,-0.900969,-0.134077),(-0.644071,-0.900969,-0.216942),(-0.697387,-0.900969,-0.290325),(-0.764795,-0.900969,-0.351019),(-0.843349,-0.900969,-0.396373),(-0.929616,-0.900969,-0.424402),(-1.01983,-0.974928,-0.222521),(-1.06609,-0.974928,-0.217658),(-1.11034,-0.974928,-0.203283),(-1.15062,-0.974928,-0.180023),(-1.18519,-0.974928,-0.148896),(-1.21254,-0.974928,-0.11126),(-1.23146,-0.974928,-0.0687627),(-1.24113,-0.974928,-0.0232598),(-1.24113,-0.974928,0.0232598),(-1.23146,-0.974928,0.0687627),(-1.21254,-0.974928,0.11126),(-1.18519,-0.974928,0.148896),(-1.15062,-0.974928,0.180023),(-1.11034,-0.974928,0.203283),(-1.06609,-0.974928,0.217658),(-1.01983,-0.974928,0.222521),(-0.973561,-0.974928,0.217658),(-0.929318,-0.974928,0.203283),(-0.889031,-0.974928,0.180023),(-0.85446,-0.974928,0.148896),(-0.827116,-0.974928,0.11126),(-0.808195,-0.974928,0.0687627),(-0.798523,-0.974928,0.0232598),(-0.798523,-0.974928,-0.0232598),(-0.808195,-0.974928,-0.0687627),(-0.827116,-0.974928,-0.11126),(-0.85446,-0.974928,-0.148896),(-0.889031,-0.974928,-0.180023),(-0.929318,-0.974928,-0.203283),(-0.973561,-0.974928,-0.217658),(-1.01983,-1,0)])),
      color=ColorRGBA(color=[(1,0.38,0,1),(1,0.58,0.06,1),(1,0.37,0,1),(1,0.05,0,1)]),
      appearance=Appearance(
        lineProperties=LineProperties(linewidthScaleFactor=2))),
    ClipPlane(plane=(0,0,1,0.2)),
    ClipPlane(plane=(0,0,-1,0.2)),
    Transform(DEF='IndexedLineSet',
      children=[
      Shape(
        geometry=IndexedLineSet(colorPerVertex=False,colorIndex=[0,1,2],coordIndex=[0,1,-1,2,3,-1,4,5,-1],
          color=Color(color=[(1,0,0),(0,1,0),(0,0,1)]),
          coord=Coordinate(point=[(-1,0,0),(1,0,0),(0,-1,0),(0,1,0),(0,0,-1),(0,0,1)])))])])
) # X3D model complete

####################################################################################################
# Self-test diagnostics
####################################################################################################

print('Self-test diagnostics:')
if        metaDiagnostics(newModel): # built-in utility method in X3D class
    print(metaDiagnostics(newModel)) # display meta info, hint, warning, error, TODO values in this model
# print('check newModel.XML() serialization...')
newModelXML= newModel.XML() # test export method XML() for exceptions during export
newModel.XMLvalidate()
# print(newModelXML) # diagnostic

try:
#   print('check newModel.VRML() serialization...')
    newModelVRML=newModel.VRML() # test export method VRML() for exceptions during export
    # print(prependLineNumbers(newModelVRML)) # debug
    print("Python-to-VRML export of VRML output successful", flush=True)
except Exception as err: # usually BaseException
    # https://stackoverflow.com/questions/18176602/how-to-get-the-name-of-an-exception-that-was-caught-in-python
    print("*** Python-to-VRML export of VRML output failed:", type(err).__name__, err)
    if newModelVRML: # may have failed to generate
        print(prependLineNumbers(newModelVRML, err.lineno))

try:
#   print('check newModel.JSON() serialization...')
    newModelJSON=newModel.JSON() # test export method JSON() for exceptions during export
#   print(prependLineNumbers(newModelJSON)) # debug
    print("Python-to-JSON export of JSON output successful (under development)")
except Exception as err: # usually SyntaxError
    print("*** Python-to-JSON export of JSON output failed:", type(err).__name__, err)
    if newModelJSON: # may have failed to generate
        print(prependLineNumbers(newModelJSON,err.lineno))

print("python load and self-test diagnostics complete.")
