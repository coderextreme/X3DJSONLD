import x3dpsail as x3d
X3D0 = x3d.X3D()
X3D0.setProfile("Immersive")
X3D0.setVersion("3.0")
head1 = x3d.head()
meta2 = x3d.meta()
meta2.setName("title")
meta2.setContent("HeadsUpDisplayPrototype.x3d")

head1.addMeta(meta2)
meta3 = x3d.meta()
meta3.setName("description")
meta3.setContent("Generic Heads Up Display (HUD) prototype to keep children on screen.")

head1.addMeta(meta3)
meta4 = x3d.meta()
meta4.setName("creator")
meta4.setContent("Don Brutzman")

head1.addMeta(meta4)
meta5 = x3d.meta()
meta5.setName("created")
meta5.setContent("9 November 2003")

head1.addMeta(meta5)
meta6 = x3d.meta()
meta6.setName("modified")
meta6.setContent("14 January 2014")

head1.addMeta(meta6)
meta7 = x3d.meta()
meta7.setName("subject")
meta7.setContent("HUD Heads Up Display")

head1.addMeta(meta7)
meta8 = x3d.meta()
meta8.setName("identifier")
meta8.setContent("https://savage.nps.edu/Savage/Tools/HeadsUpDisplays/HeadsUpDisplayPrototype.x3d")

head1.addMeta(meta8)
meta9 = x3d.meta()
meta9.setName("generator")
meta9.setContent("X3D-Edit 3.2, https://savage.nps.edu/X3D-Edit")

head1.addMeta(meta9)
meta10 = x3d.meta()
meta10.setName("license")
meta10.setContent("../../license.html")

head1.addMeta(meta10)

X3D0.setHead(head1)
Scene11 = x3d.Scene()
ProtoDeclare12 = x3d.ProtoDeclare()
ProtoDeclare12.setName("HeadsUpDisplay")
ProtoDeclare12.setAppinfo("HeadsUpDisplay positions child geometry in screen space, movable by the user")
ProtoInterface13 = x3d.ProtoInterface()
field14 = x3d.field()
field14.setName("children")
field14.setAccessType("inputOutput")
field14.setAppinfo("Displayed subscene positioned as a HUD.")
field14.setType("MFNode")
#default is null array of nodes

ProtoInterface13.addField(field14)
field15 = x3d.field()
field15.setName("dragChildren")
field15.setAccessType("inputOutput")
field15.setAppinfo("Additional HUD geometry which can be touched and dragged for repositioning. If this geometry goes offscreen (perhaps due to screen resizing) then it snaps back to original position.")
field15.setType("MFNode")
#default is null array of nodes

ProtoInterface13.addField(field15)
field16 = x3d.field()
field16.setName("locationOffset")
field16.setAccessType("initializeOnly")
field16.setAppinfo("Modified screen location and distance (for size).")
field16.setType("SFVec3f")
field16.setValue("-2 -2 0")

ProtoInterface13.addField(field16)
field17 = x3d.field()
field17.setName("traceEnabled")
field17.setAccessType("initializeOnly")
field17.setAppinfo("Enable/disable console output for troubleshooting.")
field17.setType("SFBool")
field17.setValue("false")

ProtoInterface13.addField(field17)

ProtoDeclare12.setProtoInterface(ProtoInterface13)
ProtoBody18 = x3d.ProtoBody()
Group19 = x3d.Group()
Group19.setBboxCenter([0,0,0])
Group19.setBboxSize([-1,-1,-1])
ProximitySensor20 = x3d.ProximitySensor()
ProximitySensor20.setDEF("WhereSensor")
ProximitySensor20.setSize([1000000000,1000000000,1000000000])
IS21 = x3d.IS()
connect22 = x3d.connect()
connect22.setNodeField("center")
connect22.setProtoField("locationOffset")

IS21.addConnect(connect22)

ProximitySensor20.setIS(IS21)

Group19.addChildren(ProximitySensor20)
Transform23 = x3d.Transform()
Transform23.setDEF("FixedLocation")
Transform23.setBboxCenter([0,0,0])
Transform23.setBboxSize([-1,-1,-1])
Transform24 = x3d.Transform()
Transform24.setDEF("MovableLocation")
Transform24.setBboxCenter([0,0,0])
Transform24.setBboxSize([-1,-1,-1])
Transform25 = x3d.Transform()
Transform25.setDEF("LocationOffset")
Transform25.setBboxCenter([0,0,0])
Transform25.setBboxSize([-1,-1,-1])
IS26 = x3d.IS()
connect27 = x3d.connect()
connect27.setNodeField("translation")
connect27.setProtoField("locationOffset")

IS26.addConnect(connect27)

Transform25.setIS(IS26)
Transform28 = x3d.Transform()
Transform28.setTranslation([0,0,-10])
Transform28.setBboxCenter([0,0,0])
Transform28.setBboxSize([-1,-1,-1])
Group29 = x3d.Group()
Group29.setBboxCenter([0,0,0])
Group29.setBboxSize([-1,-1,-1])
IS30 = x3d.IS()
connect31 = x3d.connect()
connect31.setNodeField("children")
connect31.setProtoField("children")

IS30.addConnect(connect31)

Group29.setIS(IS30)

Transform28.addChildren(Group29)
Group32 = x3d.Group()
Group32.setDEF("PlaneMovementSensorGroup")
Group32.setBboxCenter([0,0,0])
Group32.setBboxSize([-1,-1,-1])
Group33 = x3d.Group()
Group33.setDEF("DragGeometry")
Group33.setBboxCenter([0,0,0])
Group33.setBboxSize([-1,-1,-1])
IS34 = x3d.IS()
connect35 = x3d.connect()
connect35.setNodeField("children")
connect35.setProtoField("dragChildren")

IS34.addConnect(connect35)

Group33.setIS(IS34)

Group32.addChildren(Group33)
PlaneSensor36 = x3d.PlaneSensor()
PlaneSensor36.setDEF("PlaneMovementSensor")
PlaneSensor36.setDescription("click and drag to move interface")
IS37 = x3d.IS()
connect38 = x3d.connect()
connect38.setNodeField("offset")
connect38.setProtoField("locationOffset")

IS37.addConnect(connect38)

PlaneSensor36.setIS(IS37)

Group32.addChildren(PlaneSensor36)
VisibilitySensor39 = x3d.VisibilitySensor()
VisibilitySensor39.setDEF("MovementVisibilitySensor")

Group32.addChildren(VisibilitySensor39)
ROUTE40 = x3d.ROUTE()
ROUTE40.setFromField("isActive")
ROUTE40.setFromNode("PlaneMovementSensor")
ROUTE40.setToField("setPlaneSensorIsActive")
ROUTE40.setToNode("VisibilityControlScript")

Group32.addChildren(ROUTE40)
ROUTE41 = x3d.ROUTE()
ROUTE41.setFromField("translation_changed")
ROUTE41.setFromNode("PlaneMovementSensor")
ROUTE41.setToField("setPlaneSensorTranslation")
ROUTE41.setToNode("VisibilityControlScript")

Group32.addChildren(ROUTE41)
ROUTE42 = x3d.ROUTE()
ROUTE42.setFromField("isActive")
ROUTE42.setFromNode("MovementVisibilitySensor")
ROUTE42.setToField("setIsVisible")
ROUTE42.setToNode("VisibilityControlScript")

Group32.addChildren(ROUTE42)
X3DScript43 = x3d.X3DScript()
X3DScript43.setDEF("VisibilityControlScript")
field44 = x3d.field()
field44.setName("traceEnabled")
field44.setAccessType("initializeOnly")
field44.setType("SFBool")

X3DScript43.addField(field44)
field45 = x3d.field()
field45.setName("isVisible")
field45.setAccessType("initializeOnly")
field45.setType("SFBool")
field45.setValue("true")

X3DScript43.addField(field45)
field46 = x3d.field()
field46.setName("planeSensorTranslation")
field46.setAccessType("initializeOnly")
field46.setType("SFVec3f")
field46.setValue("0 0 0")

X3DScript43.addField(field46)
field47 = x3d.field()
field47.setName("setIsVisible")
field47.setAccessType("inputOnly")
field47.setType("SFBool")

X3DScript43.addField(field47)
field48 = x3d.field()
field48.setName("setPlaneSensorIsActive")
field48.setAccessType("inputOnly")
field48.setType("SFBool")

X3DScript43.addField(field48)
field49 = x3d.field()
field49.setName("setPlaneSensorTranslation")
field49.setAccessType("inputOnly")
field49.setType("SFVec3f")

X3DScript43.addField(field49)
field50 = x3d.field()
field50.setName("translationChanged")
field50.setAccessType("outputOnly")
field50.setType("SFVec3f")

X3DScript43.addField(field50)
field51 = x3d.field()
field51.setName("translationOffsetChanged")
field51.setAccessType("outputOnly")
field51.setType("SFVec3f")

X3DScript43.addField(field51)
IS52 = x3d.IS()
connect53 = x3d.connect()
connect53.setNodeField("traceEnabled")
connect53.setProtoField("traceEnabled")

IS52.addConnect(connect53)

X3DScript43.setIS(IS52)

Group32.addX3DScript(X3DScript43)

Transform28.addChildren(Group32)

Transform25.addChildren(Transform28)

Transform24.addChildren(Transform25)
ROUTE54 = x3d.ROUTE()
ROUTE54.setFromField("translation_changed")
ROUTE54.setFromNode("PlaneMovementSensor")
ROUTE54.setToField("set_translation")
ROUTE54.setToNode("MovableLocation")

Transform24.addChildren(ROUTE54)
ROUTE55 = x3d.ROUTE()
ROUTE55.setFromField("translationChanged")
ROUTE55.setFromNode("VisibilityControlScript")
ROUTE55.setToField("set_translation")
ROUTE55.setToNode("MovableLocation")

Transform24.addChildren(ROUTE55)
ROUTE56 = x3d.ROUTE()
ROUTE56.setFromField("translationOffsetChanged")
ROUTE56.setFromNode("VisibilityControlScript")
ROUTE56.setToField("set_offset")
ROUTE56.setToNode("PlaneMovementSensor")

Transform24.addChildren(ROUTE56)

Transform23.addChildren(Transform24)

Group19.addChildren(Transform23)
ROUTE57 = x3d.ROUTE()
ROUTE57.setFromField("position_changed")
ROUTE57.setFromNode("WhereSensor")
ROUTE57.setToField("set_translation")
ROUTE57.setToNode("FixedLocation")

Group19.addChildren(ROUTE57)
ROUTE58 = x3d.ROUTE()
ROUTE58.setFromField("orientation_changed")
ROUTE58.setFromNode("WhereSensor")
ROUTE58.setToField("set_rotation")
ROUTE58.setToNode("FixedLocation")

Group19.addChildren(ROUTE58)

ProtoBody18.addChildren(Group19)

ProtoDeclare12.setProtoBody(ProtoBody18)

Scene11.addChildren(ProtoDeclare12)
#====================
Background59 = x3d.Background()
Background59.setGroundColor([0.1,0.1,0.3])
Background59.setSkyColor([0.5,0.5,0.1])

Scene11.addChildren(Background59)
Anchor60 = x3d.Anchor()
Anchor60.setDescription("HeadsUpDisplayExample")
Anchor60.setParameter(["target=_blank"])
Anchor60.setUrl(["HeadsUpDisplayExample.x3d","https://savage.nps.edu/Savage/Tools/HeadsUpDisplays/HeadsUpDisplayrExample.x3d","HeadsUpDisplayExample.wrl","https://savage.nps.edu/Savage/Tools/HeadsUpDisplays/HeadsUpDisplayExample.wrl"])
Anchor60.setBboxCenter([0,0,0])
Anchor60.setBboxSize([-1,-1,-1])
Shape61 = x3d.Shape()
Shape61.setBboxCenter([0,0,0])
Shape61.setBboxSize([-1,-1,-1])
Appearance62 = x3d.Appearance()
Material63 = x3d.Material()
Material63.setDiffuseColor([0,1,1])
Material63.setEmissiveColor([0,1,1])

Appearance62.setMaterial(Material63)

Shape61.setAppearance(Appearance62)
Text64 = x3d.Text()
Text64.setString(["HeadsUpDisplayPrototype.x3d","is a Prototype definition file.","","To see an example scene using this node","click this text to view","HeadsUpDisplayExample.x3d"])
FontStyle65 = x3d.FontStyle()
FontStyle65.setJustify(["MIDDLE","MIDDLE"])
FontStyle65.setSize(0.8)

Text64.setFontStyle(FontStyle65)

Shape61.setGeometry(Text64)

Anchor60.addChildren(Shape61)

Scene11.addChildren(Anchor60)

X3D0.setScene(Scene11)
X3D0.toFileX3D("../data/HeadsUpDisplayPrototype_RoundTrip.x3d")
