from x3d import *
from X3Dautoclass import X3dClassLookup


X3dMethodLookup = {
"AcousticProperties" : {
	"absorption" : AcousticProperties.absorption,
	"description" : AcousticProperties.description,
	"diffuse" : AcousticProperties.diffuse,
	"enabled" : AcousticProperties.enabled,
	"IS" : AcousticProperties.IS,
	"metadata" : AcousticProperties.metadata,
	"refraction" : AcousticProperties.refraction,
	"specular" : AcousticProperties.specular,
	"DEF" : AcousticProperties.DEF,
	"USE" : AcousticProperties.USE,
	"class" : AcousticProperties.class_,
	"id" : AcousticProperties.id_,
	"style" : AcousticProperties.style_,
},
"Analyser" : {
	"channelCountMode" : Analyser.channelCountMode,
	"channelInterpretation" : Analyser.channelInterpretation,
	"children" : Analyser.children,
	"description" : Analyser.description,
	"enabled" : Analyser.enabled,
	"fftSize" : Analyser.fftSize,
	"frequencyBinCount" : Analyser.frequencyBinCount,
	"gain" : Analyser.gain,
	"IS" : Analyser.IS,
	"maxDecibels" : Analyser.maxDecibels,
	"metadata" : Analyser.metadata,
	"minDecibels" : Analyser.minDecibels,
	"pauseTime" : Analyser.pauseTime,
	"resumeTime" : Analyser.resumeTime,
	"smoothingTimeConstant" : Analyser.smoothingTimeConstant,
	"startTime" : Analyser.startTime,
	"stopTime" : Analyser.stopTime,
	"tailTime" : Analyser.tailTime,
	"DEF" : Analyser.DEF,
	"USE" : Analyser.USE,
	"class" : Analyser.class_,
	"id" : Analyser.id_,
	"style" : Analyser.style_,
},
"Anchor" : {
	"addChildren" : Anchor.children,
	"autoRefresh" : Anchor.autoRefresh,
	"autoRefreshTimeLimit" : Anchor.autoRefreshTimeLimit,
	"bboxCenter" : Anchor.bboxCenter,
	"bboxDisplay" : Anchor.bboxDisplay,
	"bboxSize" : Anchor.bboxSize,
	"children" : Anchor.children,
	"description" : Anchor.description,
	"IS" : Anchor.IS,
	"load" : Anchor.load,
	"metadata" : Anchor.metadata,
	"parameter" : Anchor.parameter,
	"removeChildren" : Anchor.children,
	"url" : Anchor.url,
	"visible" : Anchor.visible,
	"DEF" : Anchor.DEF,
	"USE" : Anchor.USE,
	"class" : Anchor.class_,
	"id" : Anchor.id_,
	"style" : Anchor.style_,
},
"Appearance" : {
	"acousticProperties" : Appearance.acousticProperties,
	"alphaCutoff" : Appearance.alphaCutoff,
	"alphaMode" : Appearance.alphaMode,
	"fillProperties" : Appearance.fillProperties,
	"IS" : Appearance.IS,
	"lineProperties" : Appearance.lineProperties,
	"material" : Appearance.material,
	"metadata" : Appearance.metadata,
	"pointProperties" : Appearance.pointProperties,
	"shaders" : Appearance.shaders,
	"texture" : Appearance.texture,
	"textureTransform" : Appearance.textureTransform,
	"DEF" : Appearance.DEF,
	"USE" : Appearance.USE,
	"class" : Appearance.class_,
	"id" : Appearance.id_,
	"style" : Appearance.style_,
},
"Arc2D" : {
	"endAngle" : Arc2D.endAngle,
	"IS" : Arc2D.IS,
	"metadata" : Arc2D.metadata,
	"radius" : Arc2D.radius,
	"startAngle" : Arc2D.startAngle,
	"DEF" : Arc2D.DEF,
	"USE" : Arc2D.USE,
	"class" : Arc2D.class_,
	"id" : Arc2D.id_,
	"style" : Arc2D.style_,
},
"ArcClose2D" : {
	"closureType" : ArcClose2D.closureType,
	"endAngle" : ArcClose2D.endAngle,
	"IS" : ArcClose2D.IS,
	"metadata" : ArcClose2D.metadata,
	"radius" : ArcClose2D.radius,
	"solid" : ArcClose2D.solid,
	"startAngle" : ArcClose2D.startAngle,
	"DEF" : ArcClose2D.DEF,
	"USE" : ArcClose2D.USE,
	"class" : ArcClose2D.class_,
	"id" : ArcClose2D.id_,
	"style" : ArcClose2D.style_,
},
"AudioClip" : {
	"autoRefresh" : AudioClip.autoRefresh,
	"autoRefreshTimeLimit" : AudioClip.autoRefreshTimeLimit,
	"description" : AudioClip.description,
	"enabled" : AudioClip.enabled,
	"gain" : AudioClip.gain,
	"IS" : AudioClip.IS,
	"load" : AudioClip.load,
	"loop" : AudioClip.loop,
	"metadata" : AudioClip.metadata,
	"pauseTime" : AudioClip.pauseTime,
	"pitch" : AudioClip.pitch,
	"resumeTime" : AudioClip.resumeTime,
	"startTime" : AudioClip.startTime,
	"stopTime" : AudioClip.stopTime,
	"url" : AudioClip.url,
	"DEF" : AudioClip.DEF,
	"USE" : AudioClip.USE,
	"class" : AudioClip.class_,
	"id" : AudioClip.id_,
	"style" : AudioClip.style_,
},
"AudioDestination" : {
	"channelCountMode" : AudioDestination.channelCountMode,
	"channelInterpretation" : AudioDestination.channelInterpretation,
	"children" : AudioDestination.children,
	"description" : AudioDestination.description,
	"enabled" : AudioDestination.enabled,
	"gain" : AudioDestination.gain,
	"IS" : AudioDestination.IS,
	"maxChannelCount" : AudioDestination.maxChannelCount,
	"mediaDeviceID" : AudioDestination.mediaDeviceID,
	"metadata" : AudioDestination.metadata,
	"DEF" : AudioDestination.DEF,
	"USE" : AudioDestination.USE,
	"class" : AudioDestination.class_,
	"id" : AudioDestination.id_,
	"style" : AudioDestination.style_,
},
"Background" : {
	"backUrl" : Background.backUrl,
	"bottomUrl" : Background.bottomUrl,
	"frontUrl" : Background.frontUrl,
	"groundAngle" : Background.groundAngle,
	"groundColor" : Background.groundColor,
	"IS" : Background.IS,
	"leftUrl" : Background.leftUrl,
	"metadata" : Background.metadata,
	"rightUrl" : Background.rightUrl,
	"skyAngle" : Background.skyAngle,
	"skyColor" : Background.skyColor,
	"topUrl" : Background.topUrl,
	"transparency" : Background.transparency,
	"DEF" : Background.DEF,
	"USE" : Background.USE,
	"class" : Background.class_,
	"id" : Background.id_,
	"style" : Background.style_,
},
"BallJoint" : {
	"anchorPoint" : BallJoint.anchorPoint,
	"body1" : BallJoint.body1,
	"body2" : BallJoint.body2,
	"forceOutput" : BallJoint.forceOutput,
	"IS" : BallJoint.IS,
	"metadata" : BallJoint.metadata,
	"DEF" : BallJoint.DEF,
	"USE" : BallJoint.USE,
	"class" : BallJoint.class_,
	"id" : BallJoint.id_,
	"style" : BallJoint.style_,
},
"Billboard" : {
	"addChildren" : Billboard.children,
	"axisOfRotation" : Billboard.axisOfRotation,
	"bboxCenter" : Billboard.bboxCenter,
	"bboxDisplay" : Billboard.bboxDisplay,
	"bboxSize" : Billboard.bboxSize,
	"children" : Billboard.children,
	"IS" : Billboard.IS,
	"metadata" : Billboard.metadata,
	"removeChildren" : Billboard.children,
	"visible" : Billboard.visible,
	"DEF" : Billboard.DEF,
	"USE" : Billboard.USE,
	"class" : Billboard.class_,
	"id" : Billboard.id_,
	"style" : Billboard.style_,
},
"BiquadFilter" : {
	"channelCountMode" : BiquadFilter.channelCountMode,
	"channelInterpretation" : BiquadFilter.channelInterpretation,
	"children" : BiquadFilter.children,
	"description" : BiquadFilter.description,
	"detune" : BiquadFilter.detune,
	"enabled" : BiquadFilter.enabled,
	"frequency" : BiquadFilter.frequency,
	"gain" : BiquadFilter.gain,
	"IS" : BiquadFilter.IS,
	"metadata" : BiquadFilter.metadata,
	"pauseTime" : BiquadFilter.pauseTime,
	"qualityFactor" : BiquadFilter.qualityFactor,
	"resumeTime" : BiquadFilter.resumeTime,
	"startTime" : BiquadFilter.startTime,
	"stopTime" : BiquadFilter.stopTime,
	"tailTime" : BiquadFilter.tailTime,
	"type" : BiquadFilter.type,
	"DEF" : BiquadFilter.DEF,
	"USE" : BiquadFilter.USE,
	"class" : BiquadFilter.class_,
	"id" : BiquadFilter.id_,
	"style" : BiquadFilter.style_,
},
"BlendedVolumeStyle" : {
	"enabled" : BlendedVolumeStyle.enabled,
	"IS" : BlendedVolumeStyle.IS,
	"metadata" : BlendedVolumeStyle.metadata,
	"renderStyle" : BlendedVolumeStyle.renderStyle,
	"voxels" : BlendedVolumeStyle.voxels,
	"weightConstant1" : BlendedVolumeStyle.weightConstant1,
	"weightConstant2" : BlendedVolumeStyle.weightConstant2,
	"weightFunction1" : BlendedVolumeStyle.weightFunction1,
	"weightFunction2" : BlendedVolumeStyle.weightFunction2,
	"weightTransferFunction1" : BlendedVolumeStyle.weightTransferFunction1,
	"weightTransferFunction2" : BlendedVolumeStyle.weightTransferFunction2,
	"DEF" : BlendedVolumeStyle.DEF,
	"USE" : BlendedVolumeStyle.USE,
	"class" : BlendedVolumeStyle.class_,
	"id" : BlendedVolumeStyle.id_,
	"style" : BlendedVolumeStyle.style_,
},
"BooleanFilter" : {
	"IS" : BooleanFilter.IS,
	"metadata" : BooleanFilter.metadata,
	"DEF" : BooleanFilter.DEF,
	"USE" : BooleanFilter.USE,
	"class" : BooleanFilter.class_,
	"id" : BooleanFilter.id_,
	"style" : BooleanFilter.style_,
},
"BooleanSequencer" : {
	"IS" : BooleanSequencer.IS,
	"key" : BooleanSequencer.key,
	"keyValue" : BooleanSequencer.keyValue,
	"metadata" : BooleanSequencer.metadata,
	"DEF" : BooleanSequencer.DEF,
	"USE" : BooleanSequencer.USE,
	"class" : BooleanSequencer.class_,
	"id" : BooleanSequencer.id_,
	"style" : BooleanSequencer.style_,
},
"BooleanToggle" : {
	"IS" : BooleanToggle.IS,
	"metadata" : BooleanToggle.metadata,
	"toggle" : BooleanToggle.toggle,
	"DEF" : BooleanToggle.DEF,
	"USE" : BooleanToggle.USE,
	"class" : BooleanToggle.class_,
	"id" : BooleanToggle.id_,
	"style" : BooleanToggle.style_,
},
"BooleanTrigger" : {
	"IS" : BooleanTrigger.IS,
	"metadata" : BooleanTrigger.metadata,
	"DEF" : BooleanTrigger.DEF,
	"USE" : BooleanTrigger.USE,
	"class" : BooleanTrigger.class_,
	"id" : BooleanTrigger.id_,
	"style" : BooleanTrigger.style_,
},
"BoundaryEnhancementVolumeStyle" : {
	"boundaryOpacity" : BoundaryEnhancementVolumeStyle.boundaryOpacity,
	"enabled" : BoundaryEnhancementVolumeStyle.enabled,
	"IS" : BoundaryEnhancementVolumeStyle.IS,
	"metadata" : BoundaryEnhancementVolumeStyle.metadata,
	"opacityFactor" : BoundaryEnhancementVolumeStyle.opacityFactor,
	"retainedOpacity" : BoundaryEnhancementVolumeStyle.retainedOpacity,
	"DEF" : BoundaryEnhancementVolumeStyle.DEF,
	"USE" : BoundaryEnhancementVolumeStyle.USE,
	"class" : BoundaryEnhancementVolumeStyle.class_,
	"id" : BoundaryEnhancementVolumeStyle.id_,
	"style" : BoundaryEnhancementVolumeStyle.style_,
},
"BoundedPhysicsModel" : {
	"enabled" : BoundedPhysicsModel.enabled,
	"geometry" : BoundedPhysicsModel.geometry,
	"IS" : BoundedPhysicsModel.IS,
	"metadata" : BoundedPhysicsModel.metadata,
	"DEF" : BoundedPhysicsModel.DEF,
	"USE" : BoundedPhysicsModel.USE,
	"class" : BoundedPhysicsModel.class_,
	"id" : BoundedPhysicsModel.id_,
	"style" : BoundedPhysicsModel.style_,
},
"Box" : {
	"IS" : Box.IS,
	"metadata" : Box.metadata,
	"size" : Box.size,
	"solid" : Box.solid,
	"DEF" : Box.DEF,
	"USE" : Box.USE,
	"class" : Box.class_,
	"id" : Box.id_,
	"style" : Box.style_,
},
"BufferAudioSource" : {
	"autoRefresh" : BufferAudioSource.autoRefresh,
	"autoRefreshTimeLimit" : BufferAudioSource.autoRefreshTimeLimit,
	"buffer" : BufferAudioSource.buffer,
	"bufferDuration" : BufferAudioSource.bufferDuration,
	"channelCountMode" : BufferAudioSource.channelCountMode,
	"channelInterpretation" : BufferAudioSource.channelInterpretation,
	"description" : BufferAudioSource.description,
	"detune" : BufferAudioSource.detune,
	"enabled" : BufferAudioSource.enabled,
	"gain" : BufferAudioSource.gain,
	"IS" : BufferAudioSource.IS,
	"load" : BufferAudioSource.load,
	"loop" : BufferAudioSource.loop,
	"loopEnd" : BufferAudioSource.loopEnd,
	"loopStart" : BufferAudioSource.loopStart,
	"metadata" : BufferAudioSource.metadata,
	"numberOfChannels" : BufferAudioSource.numberOfChannels,
	"pauseTime" : BufferAudioSource.pauseTime,
	"playbackRate" : BufferAudioSource.playbackRate,
	"resumeTime" : BufferAudioSource.resumeTime,
	"sampleRate" : BufferAudioSource.sampleRate,
	"startTime" : BufferAudioSource.startTime,
	"stopTime" : BufferAudioSource.stopTime,
	"url" : BufferAudioSource.url,
	"DEF" : BufferAudioSource.DEF,
	"USE" : BufferAudioSource.USE,
	"class" : BufferAudioSource.class_,
	"id" : BufferAudioSource.id_,
	"style" : BufferAudioSource.style_,
},
"CADAssembly" : {
	"addChildren" : CADAssembly.children,
	"bboxCenter" : CADAssembly.bboxCenter,
	"bboxDisplay" : CADAssembly.bboxDisplay,
	"bboxSize" : CADAssembly.bboxSize,
	"children" : CADAssembly.children,
	"IS" : CADAssembly.IS,
	"metadata" : CADAssembly.metadata,
	"name" : CADAssembly.name,
	"removeChildren" : CADAssembly.children,
	"visible" : CADAssembly.visible,
	"DEF" : CADAssembly.DEF,
	"USE" : CADAssembly.USE,
	"class" : CADAssembly.class_,
	"id" : CADAssembly.id_,
	"style" : CADAssembly.style_,
},
"CADFace" : {
	"bboxCenter" : CADFace.bboxCenter,
	"bboxDisplay" : CADFace.bboxDisplay,
	"bboxSize" : CADFace.bboxSize,
	"IS" : CADFace.IS,
	"metadata" : CADFace.metadata,
	"name" : CADFace.name,
	"shape" : CADFace.shape,
	"visible" : CADFace.visible,
	"DEF" : CADFace.DEF,
	"USE" : CADFace.USE,
	"class" : CADFace.class_,
	"id" : CADFace.id_,
	"style" : CADFace.style_,
},
"CADLayer" : {
	"addChildren" : CADLayer.children,
	"bboxCenter" : CADLayer.bboxCenter,
	"bboxDisplay" : CADLayer.bboxDisplay,
	"bboxSize" : CADLayer.bboxSize,
	"children" : CADLayer.children,
	"IS" : CADLayer.IS,
	"metadata" : CADLayer.metadata,
	"name" : CADLayer.name,
	"removeChildren" : CADLayer.children,
	"visible" : CADLayer.visible,
	"DEF" : CADLayer.DEF,
	"USE" : CADLayer.USE,
	"class" : CADLayer.class_,
	"id" : CADLayer.id_,
	"style" : CADLayer.style_,
},
"CADPart" : {
	"addChildren" : CADPart.children,
	"bboxCenter" : CADPart.bboxCenter,
	"bboxDisplay" : CADPart.bboxDisplay,
	"bboxSize" : CADPart.bboxSize,
	"center" : CADPart.center,
	"children" : CADPart.children,
	"IS" : CADPart.IS,
	"metadata" : CADPart.metadata,
	"name" : CADPart.name,
	"removeChildren" : CADPart.children,
	"rotation" : CADPart.rotation,
	"scale" : CADPart.scale,
	"scaleOrientation" : CADPart.scaleOrientation,
	"translation" : CADPart.translation,
	"visible" : CADPart.visible,
	"DEF" : CADPart.DEF,
	"USE" : CADPart.USE,
	"class" : CADPart.class_,
	"id" : CADPart.id_,
	"style" : CADPart.style_,
},
"CartoonVolumeStyle" : {
	"colorSteps" : CartoonVolumeStyle.colorSteps,
	"enabled" : CartoonVolumeStyle.enabled,
	"IS" : CartoonVolumeStyle.IS,
	"metadata" : CartoonVolumeStyle.metadata,
	"orthogonalColor" : CartoonVolumeStyle.orthogonalColor,
	"parallelColor" : CartoonVolumeStyle.parallelColor,
	"surfaceNormals" : CartoonVolumeStyle.surfaceNormals,
	"DEF" : CartoonVolumeStyle.DEF,
	"USE" : CartoonVolumeStyle.USE,
	"class" : CartoonVolumeStyle.class_,
	"id" : CartoonVolumeStyle.id_,
	"style" : CartoonVolumeStyle.style_,
},
"ChannelMerger" : {
	"channelCountMode" : ChannelMerger.channelCountMode,
	"channelInterpretation" : ChannelMerger.channelInterpretation,
	"children" : ChannelMerger.children,
	"description" : ChannelMerger.description,
	"enabled" : ChannelMerger.enabled,
	"gain" : ChannelMerger.gain,
	"IS" : ChannelMerger.IS,
	"metadata" : ChannelMerger.metadata,
	"DEF" : ChannelMerger.DEF,
	"USE" : ChannelMerger.USE,
	"class" : ChannelMerger.class_,
	"id" : ChannelMerger.id_,
	"style" : ChannelMerger.style_,
},
"ChannelSelector" : {
	"channelCountMode" : ChannelSelector.channelCountMode,
	"channelInterpretation" : ChannelSelector.channelInterpretation,
	"channelSelection" : ChannelSelector.channelSelection,
	"children" : ChannelSelector.children,
	"description" : ChannelSelector.description,
	"enabled" : ChannelSelector.enabled,
	"gain" : ChannelSelector.gain,
	"IS" : ChannelSelector.IS,
	"metadata" : ChannelSelector.metadata,
	"DEF" : ChannelSelector.DEF,
	"USE" : ChannelSelector.USE,
	"class" : ChannelSelector.class_,
	"id" : ChannelSelector.id_,
	"style" : ChannelSelector.style_,
},
"ChannelSplitter" : {
	"channelCountMode" : ChannelSplitter.channelCountMode,
	"channelInterpretation" : ChannelSplitter.channelInterpretation,
	"children" : ChannelSplitter.children,
	"description" : ChannelSplitter.description,
	"enabled" : ChannelSplitter.enabled,
	"gain" : ChannelSplitter.gain,
	"IS" : ChannelSplitter.IS,
	"metadata" : ChannelSplitter.metadata,
	"outputs" : ChannelSplitter.outputs,
	"DEF" : ChannelSplitter.DEF,
	"USE" : ChannelSplitter.USE,
	"class" : ChannelSplitter.class_,
	"id" : ChannelSplitter.id_,
	"style" : ChannelSplitter.style_,
},
"Circle2D" : {
	"IS" : Circle2D.IS,
	"metadata" : Circle2D.metadata,
	"radius" : Circle2D.radius,
	"DEF" : Circle2D.DEF,
	"USE" : Circle2D.USE,
	"class" : Circle2D.class_,
	"id" : Circle2D.id_,
	"style" : Circle2D.style_,
},
"ClipPlane" : {
	"enabled" : ClipPlane.enabled,
	"IS" : ClipPlane.IS,
	"metadata" : ClipPlane.metadata,
	"plane" : ClipPlane.plane,
	"DEF" : ClipPlane.DEF,
	"USE" : ClipPlane.USE,
	"class" : ClipPlane.class_,
	"id" : ClipPlane.id_,
	"style" : ClipPlane.style_,
},
"CollidableOffset" : {
	"bboxCenter" : CollidableOffset.bboxCenter,
	"bboxDisplay" : CollidableOffset.bboxDisplay,
	"bboxSize" : CollidableOffset.bboxSize,
	"collidable" : CollidableOffset.collidable,
	"enabled" : CollidableOffset.enabled,
	"IS" : CollidableOffset.IS,
	"metadata" : CollidableOffset.metadata,
	"rotation" : CollidableOffset.rotation,
	"translation" : CollidableOffset.translation,
	"visible" : CollidableOffset.visible,
	"DEF" : CollidableOffset.DEF,
	"USE" : CollidableOffset.USE,
	"class" : CollidableOffset.class_,
	"id" : CollidableOffset.id_,
	"style" : CollidableOffset.style_,
},
"CollidableShape" : {
	"bboxCenter" : CollidableShape.bboxCenter,
	"bboxDisplay" : CollidableShape.bboxDisplay,
	"bboxSize" : CollidableShape.bboxSize,
	"enabled" : CollidableShape.enabled,
	"IS" : CollidableShape.IS,
	"metadata" : CollidableShape.metadata,
	"rotation" : CollidableShape.rotation,
	"shape" : CollidableShape.shape,
	"translation" : CollidableShape.translation,
	"visible" : CollidableShape.visible,
	"DEF" : CollidableShape.DEF,
	"USE" : CollidableShape.USE,
	"class" : CollidableShape.class_,
	"id" : CollidableShape.id_,
	"style" : CollidableShape.style_,
},
"Collision" : {
	"addChildren" : Collision.children,
	"bboxCenter" : Collision.bboxCenter,
	"bboxDisplay" : Collision.bboxDisplay,
	"bboxSize" : Collision.bboxSize,
	"children" : Collision.children,
	"description" : Collision.description,
	"enabled" : Collision.enabled,
	"IS" : Collision.IS,
	"metadata" : Collision.metadata,
	"proxy" : Collision.proxy,
	"removeChildren" : Collision.children,
	"visible" : Collision.visible,
	"DEF" : Collision.DEF,
	"USE" : Collision.USE,
	"class" : Collision.class_,
	"id" : Collision.id_,
	"style" : Collision.style_,
},
"CollisionCollection" : {
	"appliedParameters" : CollisionCollection.appliedParameters,
	"bboxCenter" : CollisionCollection.bboxCenter,
	"bboxDisplay" : CollisionCollection.bboxDisplay,
	"bboxSize" : CollisionCollection.bboxSize,
	"bounce" : CollisionCollection.bounce,
	"collidables" : CollisionCollection.collidables,
	"description" : CollisionCollection.description,
	"enabled" : CollisionCollection.enabled,
	"frictionCoefficients" : CollisionCollection.frictionCoefficients,
	"IS" : CollisionCollection.IS,
	"metadata" : CollisionCollection.metadata,
	"minBounceSpeed" : CollisionCollection.minBounceSpeed,
	"slipFactors" : CollisionCollection.slipFactors,
	"softnessConstantForceMix" : CollisionCollection.softnessConstantForceMix,
	"softnessErrorCorrection" : CollisionCollection.softnessErrorCorrection,
	"surfaceSpeed" : CollisionCollection.surfaceSpeed,
	"visible" : CollisionCollection.visible,
	"DEF" : CollisionCollection.DEF,
	"USE" : CollisionCollection.USE,
	"class" : CollisionCollection.class_,
	"id" : CollisionCollection.id_,
	"style" : CollisionCollection.style_,
},
"CollisionSensor" : {
	"collider" : CollisionSensor.collider,
	"description" : CollisionSensor.description,
	"enabled" : CollisionSensor.enabled,
	"IS" : CollisionSensor.IS,
	"metadata" : CollisionSensor.metadata,
	"DEF" : CollisionSensor.DEF,
	"USE" : CollisionSensor.USE,
	"class" : CollisionSensor.class_,
	"id" : CollisionSensor.id_,
	"style" : CollisionSensor.style_,
},
"CollisionSpace" : {
	"bboxCenter" : CollisionSpace.bboxCenter,
	"bboxDisplay" : CollisionSpace.bboxDisplay,
	"bboxSize" : CollisionSpace.bboxSize,
	"collidables" : CollisionSpace.collidables,
	"enabled" : CollisionSpace.enabled,
	"IS" : CollisionSpace.IS,
	"metadata" : CollisionSpace.metadata,
	"useGeometry" : CollisionSpace.useGeometry,
	"visible" : CollisionSpace.visible,
	"DEF" : CollisionSpace.DEF,
	"USE" : CollisionSpace.USE,
	"class" : CollisionSpace.class_,
	"id" : CollisionSpace.id_,
	"style" : CollisionSpace.style_,
},
"Color" : {
	"color" : Color.color,
	"IS" : Color.IS,
	"metadata" : Color.metadata,
	"DEF" : Color.DEF,
	"USE" : Color.USE,
	"class" : Color.class_,
	"id" : Color.id_,
	"style" : Color.style_,
},
"ColorChaser" : {
	"duration" : ColorChaser.duration,
	"initialDestination" : ColorChaser.initialDestination,
	"initialValue" : ColorChaser.initialValue,
	"IS" : ColorChaser.IS,
	"metadata" : ColorChaser.metadata,
	"DEF" : ColorChaser.DEF,
	"USE" : ColorChaser.USE,
	"class" : ColorChaser.class_,
	"id" : ColorChaser.id_,
	"style" : ColorChaser.style_,
},
"ColorDamper" : {
	"initialDestination" : ColorDamper.initialDestination,
	"initialValue" : ColorDamper.initialValue,
	"IS" : ColorDamper.IS,
	"metadata" : ColorDamper.metadata,
	"order" : ColorDamper.order,
	"tau" : ColorDamper.tau,
	"tolerance" : ColorDamper.tolerance,
	"DEF" : ColorDamper.DEF,
	"USE" : ColorDamper.USE,
	"class" : ColorDamper.class_,
	"id" : ColorDamper.id_,
	"style" : ColorDamper.style_,
},
"ColorInterpolator" : {
	"IS" : ColorInterpolator.IS,
	"key" : ColorInterpolator.key,
	"keyValue" : ColorInterpolator.keyValue,
	"metadata" : ColorInterpolator.metadata,
	"DEF" : ColorInterpolator.DEF,
	"USE" : ColorInterpolator.USE,
	"class" : ColorInterpolator.class_,
	"id" : ColorInterpolator.id_,
	"style" : ColorInterpolator.style_,
},
"ColorRGBA" : {
	"color" : ColorRGBA.color,
	"IS" : ColorRGBA.IS,
	"metadata" : ColorRGBA.metadata,
	"DEF" : ColorRGBA.DEF,
	"USE" : ColorRGBA.USE,
	"class" : ColorRGBA.class_,
	"id" : ColorRGBA.id_,
	"style" : ColorRGBA.style_,
},
"ComposedCubeMapTexture" : {
	"backTexture" : ComposedCubeMapTexture.backTexture,
	"bottomTexture" : ComposedCubeMapTexture.bottomTexture,
	"description" : ComposedCubeMapTexture.description,
	"frontTexture" : ComposedCubeMapTexture.frontTexture,
	"IS" : ComposedCubeMapTexture.IS,
	"leftTexture" : ComposedCubeMapTexture.leftTexture,
	"metadata" : ComposedCubeMapTexture.metadata,
	"rightTexture" : ComposedCubeMapTexture.rightTexture,
	"topTexture" : ComposedCubeMapTexture.topTexture,
	"DEF" : ComposedCubeMapTexture.DEF,
	"USE" : ComposedCubeMapTexture.USE,
	"class" : ComposedCubeMapTexture.class_,
	"id" : ComposedCubeMapTexture.id_,
	"style" : ComposedCubeMapTexture.style_,
},
"ComposedShader" : {
	"field" : ComposedShader.field,
	"IS" : ComposedShader.IS,
	"language" : ComposedShader.language,
	"metadata" : ComposedShader.metadata,
	"parts" : ComposedShader.parts,
	"DEF" : ComposedShader.DEF,
	"USE" : ComposedShader.USE,
	"class" : ComposedShader.class_,
	"id" : ComposedShader.id_,
	"style" : ComposedShader.style_,
},
"ComposedTexture3D" : {
	"description" : ComposedTexture3D.description,
	"IS" : ComposedTexture3D.IS,
	"metadata" : ComposedTexture3D.metadata,
	"repeatR" : ComposedTexture3D.repeatR,
	"repeatS" : ComposedTexture3D.repeatS,
	"repeatT" : ComposedTexture3D.repeatT,
	"texture" : ComposedTexture3D.texture,
	"textureProperties" : ComposedTexture3D.textureProperties,
	"DEF" : ComposedTexture3D.DEF,
	"USE" : ComposedTexture3D.USE,
	"class" : ComposedTexture3D.class_,
	"id" : ComposedTexture3D.id_,
	"style" : ComposedTexture3D.style_,
},
"ComposedVolumeStyle" : {
	"enabled" : ComposedVolumeStyle.enabled,
	"IS" : ComposedVolumeStyle.IS,
	"metadata" : ComposedVolumeStyle.metadata,
	"renderStyle" : ComposedVolumeStyle.renderStyle,
	"DEF" : ComposedVolumeStyle.DEF,
	"USE" : ComposedVolumeStyle.USE,
	"class" : ComposedVolumeStyle.class_,
	"id" : ComposedVolumeStyle.id_,
	"style" : ComposedVolumeStyle.style_,
},
"Cone" : {
	"bottom" : Cone.bottom,
	"bottomRadius" : Cone.bottomRadius,
	"height" : Cone.height,
	"IS" : Cone.IS,
	"metadata" : Cone.metadata,
	"side" : Cone.side,
	"solid" : Cone.solid,
	"DEF" : Cone.DEF,
	"USE" : Cone.USE,
	"class" : Cone.class_,
	"id" : Cone.id_,
	"style" : Cone.style_,
},
"ConeEmitter" : {
	"angle" : ConeEmitter.angle,
	"direction" : ConeEmitter.direction,
	"IS" : ConeEmitter.IS,
	"mass" : ConeEmitter.mass,
	"metadata" : ConeEmitter.metadata,
	"on" : ConeEmitter.on,
	"position" : ConeEmitter.position,
	"speed" : ConeEmitter.speed,
	"surfaceArea" : ConeEmitter.surfaceArea,
	"variation" : ConeEmitter.variation,
	"DEF" : ConeEmitter.DEF,
	"USE" : ConeEmitter.USE,
	"class" : ConeEmitter.class_,
	"id" : ConeEmitter.id_,
	"style" : ConeEmitter.style_,
},
"Contact" : {
	"appliedParameters" : Contact.appliedParameters,
	"body1" : Contact.body1,
	"body2" : Contact.body2,
	"bounce" : Contact.bounce,
	"contactNormal" : Contact.contactNormal,
	"depth" : Contact.depth,
	"frictionCoefficients" : Contact.frictionCoefficients,
	"frictionDirection" : Contact.frictionDirection,
	"geometry1" : Contact.geometry1,
	"geometry2" : Contact.geometry2,
	"IS" : Contact.IS,
	"metadata" : Contact.metadata,
	"minBounceSpeed" : Contact.minBounceSpeed,
	"position" : Contact.position,
	"slipCoefficients" : Contact.slipCoefficients,
	"softnessConstantForceMix" : Contact.softnessConstantForceMix,
	"softnessErrorCorrection" : Contact.softnessErrorCorrection,
	"surfaceSpeed" : Contact.surfaceSpeed,
	"DEF" : Contact.DEF,
	"USE" : Contact.USE,
	"class" : Contact.class_,
	"id" : Contact.id_,
	"style" : Contact.style_,
},
"Contour2D" : {
	"addChildren" : Contour2D.children,
	"children" : Contour2D.children,
	"IS" : Contour2D.IS,
	"metadata" : Contour2D.metadata,
	"removeChildren" : Contour2D.children,
	"DEF" : Contour2D.DEF,
	"USE" : Contour2D.USE,
	"class" : Contour2D.class_,
	"id" : Contour2D.id_,
	"style" : Contour2D.style_,
},
"ContourPolyline2D" : {
	"controlPoint" : ContourPolyline2D.controlPoint,
	"IS" : ContourPolyline2D.IS,
	"metadata" : ContourPolyline2D.metadata,
	"DEF" : ContourPolyline2D.DEF,
	"USE" : ContourPolyline2D.USE,
	"class" : ContourPolyline2D.class_,
	"id" : ContourPolyline2D.id_,
	"style" : ContourPolyline2D.style_,
},
"Convolver" : {
	"buffer" : Convolver.buffer,
	"channelCountMode" : Convolver.channelCountMode,
	"channelInterpretation" : Convolver.channelInterpretation,
	"children" : Convolver.children,
	"description" : Convolver.description,
	"enabled" : Convolver.enabled,
	"gain" : Convolver.gain,
	"IS" : Convolver.IS,
	"metadata" : Convolver.metadata,
	"normalize" : Convolver.normalize,
	"pauseTime" : Convolver.pauseTime,
	"resumeTime" : Convolver.resumeTime,
	"startTime" : Convolver.startTime,
	"stopTime" : Convolver.stopTime,
	"tailTime" : Convolver.tailTime,
	"DEF" : Convolver.DEF,
	"USE" : Convolver.USE,
	"class" : Convolver.class_,
	"id" : Convolver.id_,
	"style" : Convolver.style_,
},
"Coordinate" : {
	"IS" : Coordinate.IS,
	"metadata" : Coordinate.metadata,
	"point" : Coordinate.point,
	"DEF" : Coordinate.DEF,
	"USE" : Coordinate.USE,
	"class" : Coordinate.class_,
	"id" : Coordinate.id_,
	"style" : Coordinate.style_,
},
"CoordinateChaser" : {
	"duration" : CoordinateChaser.duration,
	"initialDestination" : CoordinateChaser.initialDestination,
	"initialValue" : CoordinateChaser.initialValue,
	"IS" : CoordinateChaser.IS,
	"metadata" : CoordinateChaser.metadata,
	"DEF" : CoordinateChaser.DEF,
	"USE" : CoordinateChaser.USE,
	"class" : CoordinateChaser.class_,
	"id" : CoordinateChaser.id_,
	"style" : CoordinateChaser.style_,
},
"CoordinateDamper" : {
	"initialDestination" : CoordinateDamper.initialDestination,
	"initialValue" : CoordinateDamper.initialValue,
	"IS" : CoordinateDamper.IS,
	"metadata" : CoordinateDamper.metadata,
	"order" : CoordinateDamper.order,
	"tau" : CoordinateDamper.tau,
	"tolerance" : CoordinateDamper.tolerance,
	"DEF" : CoordinateDamper.DEF,
	"USE" : CoordinateDamper.USE,
	"class" : CoordinateDamper.class_,
	"id" : CoordinateDamper.id_,
	"style" : CoordinateDamper.style_,
},
"CoordinateDouble" : {
	"IS" : CoordinateDouble.IS,
	"metadata" : CoordinateDouble.metadata,
	"point" : CoordinateDouble.point,
	"DEF" : CoordinateDouble.DEF,
	"USE" : CoordinateDouble.USE,
	"class" : CoordinateDouble.class_,
	"id" : CoordinateDouble.id_,
	"style" : CoordinateDouble.style_,
},
"CoordinateInterpolator" : {
	"IS" : CoordinateInterpolator.IS,
	"key" : CoordinateInterpolator.key,
	"keyValue" : CoordinateInterpolator.keyValue,
	"metadata" : CoordinateInterpolator.metadata,
	"DEF" : CoordinateInterpolator.DEF,
	"USE" : CoordinateInterpolator.USE,
	"class" : CoordinateInterpolator.class_,
	"id" : CoordinateInterpolator.id_,
	"style" : CoordinateInterpolator.style_,
},
"CoordinateInterpolator2D" : {
	"IS" : CoordinateInterpolator2D.IS,
	"key" : CoordinateInterpolator2D.key,
	"keyValue" : CoordinateInterpolator2D.keyValue,
	"metadata" : CoordinateInterpolator2D.metadata,
	"DEF" : CoordinateInterpolator2D.DEF,
	"USE" : CoordinateInterpolator2D.USE,
	"class" : CoordinateInterpolator2D.class_,
	"id" : CoordinateInterpolator2D.id_,
	"style" : CoordinateInterpolator2D.style_,
},
"Cylinder" : {
	"bottom" : Cylinder.bottom,
	"height" : Cylinder.height,
	"IS" : Cylinder.IS,
	"metadata" : Cylinder.metadata,
	"radius" : Cylinder.radius,
	"side" : Cylinder.side,
	"solid" : Cylinder.solid,
	"top" : Cylinder.top,
	"DEF" : Cylinder.DEF,
	"USE" : Cylinder.USE,
	"class" : Cylinder.class_,
	"id" : Cylinder.id_,
	"style" : Cylinder.style_,
},
"CylinderSensor" : {
	"autoOffset" : CylinderSensor.autoOffset,
	"axisRotation" : CylinderSensor.axisRotation,
	"description" : CylinderSensor.description,
	"diskAngle" : CylinderSensor.diskAngle,
	"enabled" : CylinderSensor.enabled,
	"IS" : CylinderSensor.IS,
	"maxAngle" : CylinderSensor.maxAngle,
	"metadata" : CylinderSensor.metadata,
	"minAngle" : CylinderSensor.minAngle,
	"offset" : CylinderSensor.offset,
	"DEF" : CylinderSensor.DEF,
	"USE" : CylinderSensor.USE,
	"class" : CylinderSensor.class_,
	"id" : CylinderSensor.id_,
	"style" : CylinderSensor.style_,
},
"Delay" : {
	"channelCountMode" : Delay.channelCountMode,
	"channelInterpretation" : Delay.channelInterpretation,
	"children" : Delay.children,
	"delayTime" : Delay.delayTime,
	"description" : Delay.description,
	"enabled" : Delay.enabled,
	"gain" : Delay.gain,
	"IS" : Delay.IS,
	"maxDelayTime" : Delay.maxDelayTime,
	"metadata" : Delay.metadata,
	"pauseTime" : Delay.pauseTime,
	"resumeTime" : Delay.resumeTime,
	"startTime" : Delay.startTime,
	"stopTime" : Delay.stopTime,
	"tailTime" : Delay.tailTime,
	"DEF" : Delay.DEF,
	"USE" : Delay.USE,
	"class" : Delay.class_,
	"id" : Delay.id_,
	"style" : Delay.style_,
},
"DirectionalLight" : {
	"ambientIntensity" : DirectionalLight.ambientIntensity,
	"color" : DirectionalLight.color,
	"direction" : DirectionalLight.direction,
	"global" : DirectionalLight.global_,
	"intensity" : DirectionalLight.intensity,
	"IS" : DirectionalLight.IS,
	"metadata" : DirectionalLight.metadata,
	"on" : DirectionalLight.on,
	"shadowIntensity" : DirectionalLight.shadowIntensity,
	"shadows" : DirectionalLight.shadows,
	"DEF" : DirectionalLight.DEF,
	"USE" : DirectionalLight.USE,
	"class" : DirectionalLight.class_,
	"id" : DirectionalLight.id_,
	"style" : DirectionalLight.style_,
},
"DISEntityManager" : {
	"address" : DISEntityManager.address,
	"applicationID" : DISEntityManager.applicationID,
	"children" : DISEntityManager.children,
	"IS" : DISEntityManager.IS,
	"metadata" : DISEntityManager.metadata,
	"port" : DISEntityManager.port,
	"siteID" : DISEntityManager.siteID,
	"DEF" : DISEntityManager.DEF,
	"USE" : DISEntityManager.USE,
	"class" : DISEntityManager.class_,
	"id" : DISEntityManager.id_,
	"style" : DISEntityManager.style_,
},
"DISEntityTypeMapping" : {
	"autoRefresh" : DISEntityTypeMapping.autoRefresh,
	"autoRefreshTimeLimit" : DISEntityTypeMapping.autoRefreshTimeLimit,
	"category" : DISEntityTypeMapping.category,
	"country" : DISEntityTypeMapping.country,
	"description" : DISEntityTypeMapping.description,
	"domain" : DISEntityTypeMapping.domain,
	"extra" : DISEntityTypeMapping.extra,
	"IS" : DISEntityTypeMapping.IS,
	"kind" : DISEntityTypeMapping.kind,
	"load" : DISEntityTypeMapping.load,
	"metadata" : DISEntityTypeMapping.metadata,
	"specific" : DISEntityTypeMapping.specific,
	"subcategory" : DISEntityTypeMapping.subcategory,
	"url" : DISEntityTypeMapping.url,
	"DEF" : DISEntityTypeMapping.DEF,
	"USE" : DISEntityTypeMapping.USE,
	"class" : DISEntityTypeMapping.class_,
	"id" : DISEntityTypeMapping.id_,
	"style" : DISEntityTypeMapping.style_,
},
"Disk2D" : {
	"innerRadius" : Disk2D.innerRadius,
	"IS" : Disk2D.IS,
	"metadata" : Disk2D.metadata,
	"outerRadius" : Disk2D.outerRadius,
	"solid" : Disk2D.solid,
	"DEF" : Disk2D.DEF,
	"USE" : Disk2D.USE,
	"class" : Disk2D.class_,
	"id" : Disk2D.id_,
	"style" : Disk2D.style_,
},
"DoubleAxisHingeJoint" : {
	"anchorPoint" : DoubleAxisHingeJoint.anchorPoint,
	"axis1" : DoubleAxisHingeJoint.axis1,
	"axis2" : DoubleAxisHingeJoint.axis2,
	"body1" : DoubleAxisHingeJoint.body1,
	"body2" : DoubleAxisHingeJoint.body2,
	"desiredAngularVelocity1" : DoubleAxisHingeJoint.desiredAngularVelocity1,
	"desiredAngularVelocity2" : DoubleAxisHingeJoint.desiredAngularVelocity2,
	"forceOutput" : DoubleAxisHingeJoint.forceOutput,
	"IS" : DoubleAxisHingeJoint.IS,
	"maxAngle1" : DoubleAxisHingeJoint.maxAngle1,
	"maxTorque1" : DoubleAxisHingeJoint.maxTorque1,
	"maxTorque2" : DoubleAxisHingeJoint.maxTorque2,
	"metadata" : DoubleAxisHingeJoint.metadata,
	"minAngle1" : DoubleAxisHingeJoint.minAngle1,
	"stop1Bounce" : DoubleAxisHingeJoint.stop1Bounce,
	"stop1ConstantForceMix" : DoubleAxisHingeJoint.stop1ConstantForceMix,
	"stop1ErrorCorrection" : DoubleAxisHingeJoint.stop1ErrorCorrection,
	"suspensionErrorCorrection" : DoubleAxisHingeJoint.suspensionErrorCorrection,
	"suspensionForce" : DoubleAxisHingeJoint.suspensionForce,
	"DEF" : DoubleAxisHingeJoint.DEF,
	"USE" : DoubleAxisHingeJoint.USE,
	"class" : DoubleAxisHingeJoint.class_,
	"id" : DoubleAxisHingeJoint.id_,
	"style" : DoubleAxisHingeJoint.style_,
},
"DynamicsCompressor" : {
	"attack" : DynamicsCompressor.attack,
	"channelCountMode" : DynamicsCompressor.channelCountMode,
	"channelInterpretation" : DynamicsCompressor.channelInterpretation,
	"children" : DynamicsCompressor.children,
	"description" : DynamicsCompressor.description,
	"enabled" : DynamicsCompressor.enabled,
	"gain" : DynamicsCompressor.gain,
	"IS" : DynamicsCompressor.IS,
	"knee" : DynamicsCompressor.knee,
	"metadata" : DynamicsCompressor.metadata,
	"pauseTime" : DynamicsCompressor.pauseTime,
	"ratio" : DynamicsCompressor.ratio,
	"release" : DynamicsCompressor.release,
	"resumeTime" : DynamicsCompressor.resumeTime,
	"startTime" : DynamicsCompressor.startTime,
	"stopTime" : DynamicsCompressor.stopTime,
	"tailTime" : DynamicsCompressor.tailTime,
	"threshold" : DynamicsCompressor.threshold,
	"DEF" : DynamicsCompressor.DEF,
	"USE" : DynamicsCompressor.USE,
	"class" : DynamicsCompressor.class_,
	"id" : DynamicsCompressor.id_,
	"style" : DynamicsCompressor.style_,
},
"EaseInEaseOut" : {
	"easeInEaseOut" : EaseInEaseOut.easeInEaseOut,
	"IS" : EaseInEaseOut.IS,
	"key" : EaseInEaseOut.key,
	"metadata" : EaseInEaseOut.metadata,
	"DEF" : EaseInEaseOut.DEF,
	"USE" : EaseInEaseOut.USE,
	"class" : EaseInEaseOut.class_,
	"id" : EaseInEaseOut.id_,
	"style" : EaseInEaseOut.style_,
},
"EdgeEnhancementVolumeStyle" : {
	"edgeColor" : EdgeEnhancementVolumeStyle.edgeColor,
	"enabled" : EdgeEnhancementVolumeStyle.enabled,
	"gradientThreshold" : EdgeEnhancementVolumeStyle.gradientThreshold,
	"IS" : EdgeEnhancementVolumeStyle.IS,
	"metadata" : EdgeEnhancementVolumeStyle.metadata,
	"surfaceNormals" : EdgeEnhancementVolumeStyle.surfaceNormals,
	"DEF" : EdgeEnhancementVolumeStyle.DEF,
	"USE" : EdgeEnhancementVolumeStyle.USE,
	"class" : EdgeEnhancementVolumeStyle.class_,
	"id" : EdgeEnhancementVolumeStyle.id_,
	"style" : EdgeEnhancementVolumeStyle.style_,
},
"ElevationGrid" : {
	"attrib" : ElevationGrid.attrib,
	"ccw" : ElevationGrid.ccw,
	"color" : ElevationGrid.color,
	"colorPerVertex" : ElevationGrid.colorPerVertex,
	"creaseAngle" : ElevationGrid.creaseAngle,
	"fogCoord" : ElevationGrid.fogCoord,
	"height" : ElevationGrid.height,
	"IS" : ElevationGrid.IS,
	"metadata" : ElevationGrid.metadata,
	"normal" : ElevationGrid.normal,
	"normalPerVertex" : ElevationGrid.normalPerVertex,
	"solid" : ElevationGrid.solid,
	"texCoord" : ElevationGrid.texCoord,
	"xDimension" : ElevationGrid.xDimension,
	"xSpacing" : ElevationGrid.xSpacing,
	"zDimension" : ElevationGrid.zDimension,
	"zSpacing" : ElevationGrid.zSpacing,
	"DEF" : ElevationGrid.DEF,
	"USE" : ElevationGrid.USE,
	"class" : ElevationGrid.class_,
	"id" : ElevationGrid.id_,
	"style" : ElevationGrid.style_,
},
"EspduTransform" : {
	"addChildren" : EspduTransform.children,
	"address" : EspduTransform.address,
	"applicationID" : EspduTransform.applicationID,
	"articulationParameterArray" : EspduTransform.articulationParameterArray,
	"articulationParameterChangeIndicatorArray" : EspduTransform.articulationParameterChangeIndicatorArray,
	"articulationParameterCount" : EspduTransform.articulationParameterCount,
	"articulationParameterDesignatorArray" : EspduTransform.articulationParameterDesignatorArray,
	"articulationParameterIdPartAttachedToArray" : EspduTransform.articulationParameterIdPartAttachedToArray,
	"articulationParameterTypeArray" : EspduTransform.articulationParameterTypeArray,
	"bboxCenter" : EspduTransform.bboxCenter,
	"bboxDisplay" : EspduTransform.bboxDisplay,
	"bboxSize" : EspduTransform.bboxSize,
	"center" : EspduTransform.center,
	"children" : EspduTransform.children,
	"collisionType" : EspduTransform.collisionType,
	"deadReckoning" : EspduTransform.deadReckoning,
	"description" : EspduTransform.description,
	"detonationLocation" : EspduTransform.detonationLocation,
	"detonationRelativeLocation" : EspduTransform.detonationRelativeLocation,
	"detonationResult" : EspduTransform.detonationResult,
	"enabled" : EspduTransform.enabled,
	"entityCategory" : EspduTransform.entityCategory,
	"entityCountry" : EspduTransform.entityCountry,
	"entityDomain" : EspduTransform.entityDomain,
	"entityExtra" : EspduTransform.entityExtra,
	"entityID" : EspduTransform.entityID,
	"entityKind" : EspduTransform.entityKind,
	"entitySpecific" : EspduTransform.entitySpecific,
	"entitySubcategory" : EspduTransform.entitySubcategory,
	"eventApplicationID" : EspduTransform.eventApplicationID,
	"eventEntityID" : EspduTransform.eventEntityID,
	"eventNumber" : EspduTransform.eventNumber,
	"eventSiteID" : EspduTransform.eventSiteID,
	"fired1" : EspduTransform.fired1,
	"fired2" : EspduTransform.fired2,
	"fireMissionIndex" : EspduTransform.fireMissionIndex,
	"firingRange" : EspduTransform.firingRange,
	"firingRate" : EspduTransform.firingRate,
	"forceID" : EspduTransform.forceID,
	"fuse" : EspduTransform.fuse,
	"geoCoords" : EspduTransform.geoCoords,
	"geoSystem" : EspduTransform.geoSystem,
	"IS" : EspduTransform.IS,
	"linearAcceleration" : EspduTransform.linearAcceleration,
	"linearVelocity" : EspduTransform.linearVelocity,
	"marking" : EspduTransform.marking,
	"metadata" : EspduTransform.metadata,
	"multicastRelayHost" : EspduTransform.multicastRelayHost,
	"multicastRelayPort" : EspduTransform.multicastRelayPort,
	"munitionApplicationID" : EspduTransform.munitionApplicationID,
	"munitionEndPoint" : EspduTransform.munitionEndPoint,
	"munitionEntityID" : EspduTransform.munitionEntityID,
	"munitionQuantity" : EspduTransform.munitionQuantity,
	"munitionSiteID" : EspduTransform.munitionSiteID,
	"munitionStartPoint" : EspduTransform.munitionStartPoint,
	"networkMode" : EspduTransform.networkMode,
	"port" : EspduTransform.port,
	"readInterval" : EspduTransform.readInterval,
	"removeChildren" : EspduTransform.children,
	"rotation" : EspduTransform.rotation,
	"rtpHeaderExpected" : EspduTransform.rtpHeaderExpected,
	"scale" : EspduTransform.scale,
	"scaleOrientation" : EspduTransform.scaleOrientation,
	"siteID" : EspduTransform.siteID,
	"translation" : EspduTransform.translation,
	"visible" : EspduTransform.visible,
	"warhead" : EspduTransform.warhead,
	"writeInterval" : EspduTransform.writeInterval,
	"DEF" : EspduTransform.DEF,
	"USE" : EspduTransform.USE,
	"class" : EspduTransform.class_,
	"id" : EspduTransform.id_,
	"style" : EspduTransform.style_,
},
"ExplosionEmitter" : {
	"IS" : ExplosionEmitter.IS,
	"mass" : ExplosionEmitter.mass,
	"metadata" : ExplosionEmitter.metadata,
	"on" : ExplosionEmitter.on,
	"position" : ExplosionEmitter.position,
	"speed" : ExplosionEmitter.speed,
	"surfaceArea" : ExplosionEmitter.surfaceArea,
	"variation" : ExplosionEmitter.variation,
	"DEF" : ExplosionEmitter.DEF,
	"USE" : ExplosionEmitter.USE,
	"class" : ExplosionEmitter.class_,
	"id" : ExplosionEmitter.id_,
	"style" : ExplosionEmitter.style_,
},
"Extrusion" : {
	"beginCap" : Extrusion.beginCap,
	"ccw" : Extrusion.ccw,
	"convex" : Extrusion.convex,
	"creaseAngle" : Extrusion.creaseAngle,
	"crossSection" : Extrusion.crossSection,
	"endCap" : Extrusion.endCap,
	"IS" : Extrusion.IS,
	"metadata" : Extrusion.metadata,
	"orientation" : Extrusion.orientation,
	"scale" : Extrusion.scale,
	"solid" : Extrusion.solid,
	"spine" : Extrusion.spine,
	"DEF" : Extrusion.DEF,
	"USE" : Extrusion.USE,
	"class" : Extrusion.class_,
	"id" : Extrusion.id_,
	"style" : Extrusion.style_,
},
"FillProperties" : {
	"filled" : FillProperties.filled,
	"hatchColor" : FillProperties.hatchColor,
	"hatched" : FillProperties.hatched,
	"hatchStyle" : FillProperties.hatchStyle,
	"IS" : FillProperties.IS,
	"metadata" : FillProperties.metadata,
	"DEF" : FillProperties.DEF,
	"USE" : FillProperties.USE,
	"class" : FillProperties.class_,
	"id" : FillProperties.id_,
	"style" : FillProperties.style_,
},
"FloatVertexAttribute" : {
	"IS" : FloatVertexAttribute.IS,
	"metadata" : FloatVertexAttribute.metadata,
	"name" : FloatVertexAttribute.name,
	"numComponents" : FloatVertexAttribute.numComponents,
	"value" : FloatVertexAttribute.value,
	"DEF" : FloatVertexAttribute.DEF,
	"USE" : FloatVertexAttribute.USE,
	"class" : FloatVertexAttribute.class_,
	"id" : FloatVertexAttribute.id_,
	"style" : FloatVertexAttribute.style_,
},
"Fog" : {
	"color" : Fog.color,
	"fogType" : Fog.fogType,
	"IS" : Fog.IS,
	"metadata" : Fog.metadata,
	"visibilityRange" : Fog.visibilityRange,
	"DEF" : Fog.DEF,
	"USE" : Fog.USE,
	"class" : Fog.class_,
	"id" : Fog.id_,
	"style" : Fog.style_,
},
"FogCoordinate" : {
	"depth" : FogCoordinate.depth,
	"IS" : FogCoordinate.IS,
	"metadata" : FogCoordinate.metadata,
	"DEF" : FogCoordinate.DEF,
	"USE" : FogCoordinate.USE,
	"class" : FogCoordinate.class_,
	"id" : FogCoordinate.id_,
	"style" : FogCoordinate.style_,
},
"FontStyle" : {
	"class" : FontStyle.class_,
	"family" : FontStyle.family,
	"horizontal" : FontStyle.horizontal,
	"id" : FontStyle.id_,
	"IS" : FontStyle.IS,
	"justify" : FontStyle.justify,
	"language" : FontStyle.language,
	"leftToRight" : FontStyle.leftToRight,
	"metadata" : FontStyle.metadata,
	"size" : FontStyle.size,
	"spacing" : FontStyle.spacing,
	"style" : FontStyle.style_,
	"topToBottom" : FontStyle.topToBottom,
	"DEF" : FontStyle.DEF,
	"USE" : FontStyle.USE,
},
"ForcePhysicsModel" : {
	"enabled" : ForcePhysicsModel.enabled,
	"force" : ForcePhysicsModel.force,
	"IS" : ForcePhysicsModel.IS,
	"metadata" : ForcePhysicsModel.metadata,
	"DEF" : ForcePhysicsModel.DEF,
	"USE" : ForcePhysicsModel.USE,
	"class" : ForcePhysicsModel.class_,
	"id" : ForcePhysicsModel.id_,
	"style" : ForcePhysicsModel.style_,
},
"Gain" : {
	"channelCountMode" : Gain.channelCountMode,
	"channelInterpretation" : Gain.channelInterpretation,
	"children" : Gain.children,
	"description" : Gain.description,
	"enabled" : Gain.enabled,
	"gain" : Gain.gain,
	"IS" : Gain.IS,
	"metadata" : Gain.metadata,
	"pauseTime" : Gain.pauseTime,
	"resumeTime" : Gain.resumeTime,
	"startTime" : Gain.startTime,
	"stopTime" : Gain.stopTime,
	"tailTime" : Gain.tailTime,
	"DEF" : Gain.DEF,
	"USE" : Gain.USE,
	"class" : Gain.class_,
	"id" : Gain.id_,
	"style" : Gain.style_,
},
"GeneratedCubeMapTexture" : {
	"description" : GeneratedCubeMapTexture.description,
	"IS" : GeneratedCubeMapTexture.IS,
	"metadata" : GeneratedCubeMapTexture.metadata,
	"size" : GeneratedCubeMapTexture.size,
	"textureProperties" : GeneratedCubeMapTexture.textureProperties,
	"update" : GeneratedCubeMapTexture.update,
	"DEF" : GeneratedCubeMapTexture.DEF,
	"USE" : GeneratedCubeMapTexture.USE,
	"class" : GeneratedCubeMapTexture.class_,
	"id" : GeneratedCubeMapTexture.id_,
	"style" : GeneratedCubeMapTexture.style_,
},
"GeoCoordinate" : {
	"geoOrigin" : GeoCoordinate.geoOrigin,
	"geoSystem" : GeoCoordinate.geoSystem,
	"IS" : GeoCoordinate.IS,
	"metadata" : GeoCoordinate.metadata,
	"point" : GeoCoordinate.point,
	"DEF" : GeoCoordinate.DEF,
	"USE" : GeoCoordinate.USE,
	"class" : GeoCoordinate.class_,
	"id" : GeoCoordinate.id_,
	"style" : GeoCoordinate.style_,
},
"GeoElevationGrid" : {
	"ccw" : GeoElevationGrid.ccw,
	"color" : GeoElevationGrid.color,
	"colorPerVertex" : GeoElevationGrid.colorPerVertex,
	"creaseAngle" : GeoElevationGrid.creaseAngle,
	"geoGridOrigin" : GeoElevationGrid.geoGridOrigin,
	"geoOrigin" : GeoElevationGrid.geoOrigin,
	"geoSystem" : GeoElevationGrid.geoSystem,
	"height" : GeoElevationGrid.height,
	"IS" : GeoElevationGrid.IS,
	"metadata" : GeoElevationGrid.metadata,
	"normal" : GeoElevationGrid.normal,
	"normalPerVertex" : GeoElevationGrid.normalPerVertex,
	"solid" : GeoElevationGrid.solid,
	"texCoord" : GeoElevationGrid.texCoord,
	"xDimension" : GeoElevationGrid.xDimension,
	"xSpacing" : GeoElevationGrid.xSpacing,
	"yScale" : GeoElevationGrid.yScale,
	"zDimension" : GeoElevationGrid.zDimension,
	"zSpacing" : GeoElevationGrid.zSpacing,
	"DEF" : GeoElevationGrid.DEF,
	"USE" : GeoElevationGrid.USE,
	"class" : GeoElevationGrid.class_,
	"id" : GeoElevationGrid.id_,
	"style" : GeoElevationGrid.style_,
},
"GeoLocation" : {
	"addChildren" : GeoLocation.children,
	"bboxCenter" : GeoLocation.bboxCenter,
	"bboxDisplay" : GeoLocation.bboxDisplay,
	"bboxSize" : GeoLocation.bboxSize,
	"children" : GeoLocation.children,
	"geoCoords" : GeoLocation.geoCoords,
	"geoOrigin" : GeoLocation.geoOrigin,
	"geoSystem" : GeoLocation.geoSystem,
	"IS" : GeoLocation.IS,
	"metadata" : GeoLocation.metadata,
	"removeChildren" : GeoLocation.children,
	"visible" : GeoLocation.visible,
	"DEF" : GeoLocation.DEF,
	"USE" : GeoLocation.USE,
	"class" : GeoLocation.class_,
	"id" : GeoLocation.id_,
	"style" : GeoLocation.style_,
},
"GeoLOD" : {
	"bboxCenter" : GeoLOD.bboxCenter,
	"bboxDisplay" : GeoLOD.bboxDisplay,
	"bboxSize" : GeoLOD.bboxSize,
	"center" : GeoLOD.center,
	"child1Url" : GeoLOD.child1Url,
	"child2Url" : GeoLOD.child2Url,
	"child3Url" : GeoLOD.child3Url,
	"child4Url" : GeoLOD.child4Url,
	"geoOrigin" : GeoLOD.geoOrigin,
	"geoSystem" : GeoLOD.geoSystem,
	"IS" : GeoLOD.IS,
	"metadata" : GeoLOD.metadata,
	"range" : GeoLOD.range,
	"rootNode" : GeoLOD.rootNode,
	"rootUrl" : GeoLOD.rootUrl,
	"visible" : GeoLOD.visible,
	"DEF" : GeoLOD.DEF,
	"USE" : GeoLOD.USE,
	"class" : GeoLOD.class_,
	"id" : GeoLOD.id_,
	"style" : GeoLOD.style_,
},
"GeoMetadata" : {
	"autoRefresh" : GeoMetadata.autoRefresh,
	"autoRefreshTimeLimit" : GeoMetadata.autoRefreshTimeLimit,
	"data" : GeoMetadata.data,
	"description" : GeoMetadata.description,
	"IS" : GeoMetadata.IS,
	"load" : GeoMetadata.load,
	"metadata" : GeoMetadata.metadata,
	"summary" : GeoMetadata.summary,
	"url" : GeoMetadata.url,
	"DEF" : GeoMetadata.DEF,
	"USE" : GeoMetadata.USE,
	"class" : GeoMetadata.class_,
	"id" : GeoMetadata.id_,
	"style" : GeoMetadata.style_,
},
"GeoOrigin" : {
	"geoCoords" : GeoOrigin.geoCoords,
	"geoSystem" : GeoOrigin.geoSystem,
	"IS" : GeoOrigin.IS,
	"metadata" : GeoOrigin.metadata,
	"rotateYUp" : GeoOrigin.rotateYUp,
	"DEF" : GeoOrigin.DEF,
	"USE" : GeoOrigin.USE,
	"class" : GeoOrigin.class_,
	"id" : GeoOrigin.id_,
	"style" : GeoOrigin.style_,
},
"GeoPositionInterpolator" : {
	"geoOrigin" : GeoPositionInterpolator.geoOrigin,
	"geoSystem" : GeoPositionInterpolator.geoSystem,
	"IS" : GeoPositionInterpolator.IS,
	"key" : GeoPositionInterpolator.key,
	"keyValue" : GeoPositionInterpolator.keyValue,
	"metadata" : GeoPositionInterpolator.metadata,
	"DEF" : GeoPositionInterpolator.DEF,
	"USE" : GeoPositionInterpolator.USE,
	"class" : GeoPositionInterpolator.class_,
	"id" : GeoPositionInterpolator.id_,
	"style" : GeoPositionInterpolator.style_,
},
"GeoProximitySensor" : {
	"center" : GeoProximitySensor.center,
	"description" : GeoProximitySensor.description,
	"enabled" : GeoProximitySensor.enabled,
	"geoCenter" : GeoProximitySensor.geoCenter,
	"geoOrigin" : GeoProximitySensor.geoOrigin,
	"geoSystem" : GeoProximitySensor.geoSystem,
	"IS" : GeoProximitySensor.IS,
	"metadata" : GeoProximitySensor.metadata,
	"size" : GeoProximitySensor.size,
	"DEF" : GeoProximitySensor.DEF,
	"USE" : GeoProximitySensor.USE,
	"class" : GeoProximitySensor.class_,
	"id" : GeoProximitySensor.id_,
	"style" : GeoProximitySensor.style_,
},
"GeoTouchSensor" : {
	"description" : GeoTouchSensor.description,
	"enabled" : GeoTouchSensor.enabled,
	"geoOrigin" : GeoTouchSensor.geoOrigin,
	"geoSystem" : GeoTouchSensor.geoSystem,
	"IS" : GeoTouchSensor.IS,
	"metadata" : GeoTouchSensor.metadata,
	"DEF" : GeoTouchSensor.DEF,
	"USE" : GeoTouchSensor.USE,
	"class" : GeoTouchSensor.class_,
	"id" : GeoTouchSensor.id_,
	"style" : GeoTouchSensor.style_,
},
"GeoTransform" : {
	"addChildren" : GeoTransform.children,
	"bboxCenter" : GeoTransform.bboxCenter,
	"bboxDisplay" : GeoTransform.bboxDisplay,
	"bboxSize" : GeoTransform.bboxSize,
	"children" : GeoTransform.children,
	"geoCenter" : GeoTransform.geoCenter,
	"geoOrigin" : GeoTransform.geoOrigin,
	"geoSystem" : GeoTransform.geoSystem,
	"IS" : GeoTransform.IS,
	"metadata" : GeoTransform.metadata,
	"removeChildren" : GeoTransform.children,
	"rotation" : GeoTransform.rotation,
	"scale" : GeoTransform.scale,
	"scaleOrientation" : GeoTransform.scaleOrientation,
	"translation" : GeoTransform.translation,
	"visible" : GeoTransform.visible,
	"DEF" : GeoTransform.DEF,
	"USE" : GeoTransform.USE,
	"class" : GeoTransform.class_,
	"id" : GeoTransform.id_,
	"style" : GeoTransform.style_,
},
"GeoViewpoint" : {
	"centerOfRotation" : GeoViewpoint.centerOfRotation,
	"description" : GeoViewpoint.description,
	"farDistance" : GeoViewpoint.farDistance,
	"fieldOfView" : GeoViewpoint.fieldOfView,
	"geoOrigin" : GeoViewpoint.geoOrigin,
	"geoSystem" : GeoViewpoint.geoSystem,
	"IS" : GeoViewpoint.IS,
	"jump" : GeoViewpoint.jump,
	"metadata" : GeoViewpoint.metadata,
	"navigationInfo" : GeoViewpoint.navigationInfo,
	"nearDistance" : GeoViewpoint.nearDistance,
	"orientation" : GeoViewpoint.orientation,
	"position" : GeoViewpoint.position,
	"retainUserOffsets" : GeoViewpoint.retainUserOffsets,
	"speedFactor" : GeoViewpoint.speedFactor,
	"viewAll" : GeoViewpoint.viewAll,
	"DEF" : GeoViewpoint.DEF,
	"USE" : GeoViewpoint.USE,
	"class" : GeoViewpoint.class_,
	"id" : GeoViewpoint.id_,
	"style" : GeoViewpoint.style_,
},
"Group" : {
	"addChildren" : Group.children,
	"bboxCenter" : Group.bboxCenter,
	"bboxDisplay" : Group.bboxDisplay,
	"bboxSize" : Group.bboxSize,
	"children" : Group.children,
	"IS" : Group.IS,
	"metadata" : Group.metadata,
	"removeChildren" : Group.children,
	"visible" : Group.visible,
	"DEF" : Group.DEF,
	"USE" : Group.USE,
	"class" : Group.class_,
	"id" : Group.id_,
	"style" : Group.style_,
},
"HAnimDisplacer" : {
	"coordIndex" : HAnimDisplacer.coordIndex,
	"description" : HAnimDisplacer.description,
	"displacements" : HAnimDisplacer.displacements,
	"IS" : HAnimDisplacer.IS,
	"metadata" : HAnimDisplacer.metadata,
	"name" : HAnimDisplacer.name,
	"weight" : HAnimDisplacer.weight,
	"DEF" : HAnimDisplacer.DEF,
	"USE" : HAnimDisplacer.USE,
	"class" : HAnimDisplacer.class_,
	"id" : HAnimDisplacer.id_,
	"style" : HAnimDisplacer.style_,
},
"HAnimHumanoid" : {
	"bboxCenter" : HAnimHumanoid.bboxCenter,
	"bboxDisplay" : HAnimHumanoid.bboxDisplay,
	"bboxSize" : HAnimHumanoid.bboxSize,
	"center" : HAnimHumanoid.center,
	"description" : HAnimHumanoid.description,
	"info" : HAnimHumanoid.info,
	"IS" : HAnimHumanoid.IS,
	"jointBindingPositions" : HAnimHumanoid.jointBindingPositions,
	"jointBindingRotations" : HAnimHumanoid.jointBindingRotations,
	"jointBindingScales" : HAnimHumanoid.jointBindingScales,
	"joints" : HAnimHumanoid.joints,
	"loa" : HAnimHumanoid.loa,
	"metadata" : HAnimHumanoid.metadata,
	"motions" : HAnimHumanoid.motions,
	"name" : HAnimHumanoid.name,
	"rotation" : HAnimHumanoid.rotation,
	"scale" : HAnimHumanoid.scale,
	"scaleOrientation" : HAnimHumanoid.scaleOrientation,
	"segments" : HAnimHumanoid.segments,
	"sites" : HAnimHumanoid.sites,
	"skeletalConfiguration" : HAnimHumanoid.skeletalConfiguration,
	"skeleton" : HAnimHumanoid.skeleton,
	"skin" : HAnimHumanoid.skin,
	"skinBindingCoords" : HAnimHumanoid.skinBindingCoords,
	"skinBindingNormals" : HAnimHumanoid.skinBindingNormals,
	"skinCoord" : HAnimHumanoid.skinCoord,
	"skinNormal" : HAnimHumanoid.skinNormal,
	"translation" : HAnimHumanoid.translation,
	"version" : HAnimHumanoid.version,
	"viewpoints" : HAnimHumanoid.viewpoints,
	"visible" : HAnimHumanoid.visible,
	"DEF" : HAnimHumanoid.DEF,
	"USE" : HAnimHumanoid.USE,
	"class" : HAnimHumanoid.class_,
	"id" : HAnimHumanoid.id_,
	"style" : HAnimHumanoid.style_,
},
"HAnimJoint" : {
	"addChildren" : HAnimJoint.children,
	"bboxCenter" : HAnimJoint.bboxCenter,
	"bboxDisplay" : HAnimJoint.bboxDisplay,
	"bboxSize" : HAnimJoint.bboxSize,
	"center" : HAnimJoint.center,
	"children" : HAnimJoint.children,
	"description" : HAnimJoint.description,
	"displacers" : HAnimJoint.displacers,
	"IS" : HAnimJoint.IS,
	"limitOrientation" : HAnimJoint.limitOrientation,
	"llimit" : HAnimJoint.llimit,
	"metadata" : HAnimJoint.metadata,
	"name" : HAnimJoint.name,
	"removeChildren" : HAnimJoint.children,
	"rotation" : HAnimJoint.rotation,
	"scale" : HAnimJoint.scale,
	"scaleOrientation" : HAnimJoint.scaleOrientation,
	"skinCoordIndex" : HAnimJoint.skinCoordIndex,
	"skinCoordWeight" : HAnimJoint.skinCoordWeight,
	"stiffness" : HAnimJoint.stiffness,
	"translation" : HAnimJoint.translation,
	"ulimit" : HAnimJoint.ulimit,
	"visible" : HAnimJoint.visible,
	"DEF" : HAnimJoint.DEF,
	"USE" : HAnimJoint.USE,
	"class" : HAnimJoint.class_,
	"id" : HAnimJoint.id_,
	"style" : HAnimJoint.style_,
},
"HAnimMotion" : {
	"channels" : HAnimMotion.channels,
	"channelsEnabled" : HAnimMotion.channelsEnabled,
	"description" : HAnimMotion.description,
	"enabled" : HAnimMotion.enabled,
	"endFrame" : HAnimMotion.endFrame,
	"frameDuration" : HAnimMotion.frameDuration,
	"frameIncrement" : HAnimMotion.frameIncrement,
	"frameIndex" : HAnimMotion.frameIndex,
	"IS" : HAnimMotion.IS,
	"joints" : HAnimMotion.joints,
	"loa" : HAnimMotion.loa,
	"loop" : HAnimMotion.loop,
	"metadata" : HAnimMotion.metadata,
	"name" : HAnimMotion.name,
	"startFrame" : HAnimMotion.startFrame,
	"values" : HAnimMotion.values,
	"DEF" : HAnimMotion.DEF,
	"USE" : HAnimMotion.USE,
	"class" : HAnimMotion.class_,
	"id" : HAnimMotion.id_,
	"style" : HAnimMotion.style_,
},
"HAnimSegment" : {
	"addChildren" : HAnimSegment.children,
	"bboxCenter" : HAnimSegment.bboxCenter,
	"bboxDisplay" : HAnimSegment.bboxDisplay,
	"bboxSize" : HAnimSegment.bboxSize,
	"centerOfMass" : HAnimSegment.centerOfMass,
	"children" : HAnimSegment.children,
	"coord" : HAnimSegment.coord,
	"description" : HAnimSegment.description,
	"displacers" : HAnimSegment.displacers,
	"IS" : HAnimSegment.IS,
	"mass" : HAnimSegment.mass,
	"metadata" : HAnimSegment.metadata,
	"momentsOfInertia" : HAnimSegment.momentsOfInertia,
	"name" : HAnimSegment.name,
	"removeChildren" : HAnimSegment.children,
	"visible" : HAnimSegment.visible,
	"DEF" : HAnimSegment.DEF,
	"USE" : HAnimSegment.USE,
	"class" : HAnimSegment.class_,
	"id" : HAnimSegment.id_,
	"style" : HAnimSegment.style_,
},
"HAnimSite" : {
	"addChildren" : HAnimSite.children,
	"bboxCenter" : HAnimSite.bboxCenter,
	"bboxDisplay" : HAnimSite.bboxDisplay,
	"bboxSize" : HAnimSite.bboxSize,
	"center" : HAnimSite.center,
	"children" : HAnimSite.children,
	"description" : HAnimSite.description,
	"IS" : HAnimSite.IS,
	"metadata" : HAnimSite.metadata,
	"name" : HAnimSite.name,
	"removeChildren" : HAnimSite.children,
	"rotation" : HAnimSite.rotation,
	"scale" : HAnimSite.scale,
	"scaleOrientation" : HAnimSite.scaleOrientation,
	"translation" : HAnimSite.translation,
	"visible" : HAnimSite.visible,
	"DEF" : HAnimSite.DEF,
	"USE" : HAnimSite.USE,
	"class" : HAnimSite.class_,
	"id" : HAnimSite.id_,
	"style" : HAnimSite.style_,
},
"ImageCubeMapTexture" : {
	"autoRefresh" : ImageCubeMapTexture.autoRefresh,
	"autoRefreshTimeLimit" : ImageCubeMapTexture.autoRefreshTimeLimit,
	"description" : ImageCubeMapTexture.description,
	"IS" : ImageCubeMapTexture.IS,
	"load" : ImageCubeMapTexture.load,
	"metadata" : ImageCubeMapTexture.metadata,
	"textureProperties" : ImageCubeMapTexture.textureProperties,
	"url" : ImageCubeMapTexture.url,
	"DEF" : ImageCubeMapTexture.DEF,
	"USE" : ImageCubeMapTexture.USE,
	"class" : ImageCubeMapTexture.class_,
	"id" : ImageCubeMapTexture.id_,
	"style" : ImageCubeMapTexture.style_,
},
"ImageTexture" : {
	"autoRefresh" : ImageTexture.autoRefresh,
	"autoRefreshTimeLimit" : ImageTexture.autoRefreshTimeLimit,
	"description" : ImageTexture.description,
	"IS" : ImageTexture.IS,
	"load" : ImageTexture.load,
	"metadata" : ImageTexture.metadata,
	"repeatS" : ImageTexture.repeatS,
	"repeatT" : ImageTexture.repeatT,
	"textureProperties" : ImageTexture.textureProperties,
	"url" : ImageTexture.url,
	"DEF" : ImageTexture.DEF,
	"USE" : ImageTexture.USE,
	"class" : ImageTexture.class_,
	"id" : ImageTexture.id_,
	"style" : ImageTexture.style_,
},
"ImageTexture3D" : {
	"autoRefresh" : ImageTexture3D.autoRefresh,
	"autoRefreshTimeLimit" : ImageTexture3D.autoRefreshTimeLimit,
	"description" : ImageTexture3D.description,
	"IS" : ImageTexture3D.IS,
	"load" : ImageTexture3D.load,
	"metadata" : ImageTexture3D.metadata,
	"repeatR" : ImageTexture3D.repeatR,
	"repeatS" : ImageTexture3D.repeatS,
	"repeatT" : ImageTexture3D.repeatT,
	"textureProperties" : ImageTexture3D.textureProperties,
	"url" : ImageTexture3D.url,
	"DEF" : ImageTexture3D.DEF,
	"USE" : ImageTexture3D.USE,
	"class" : ImageTexture3D.class_,
	"id" : ImageTexture3D.id_,
	"style" : ImageTexture3D.style_,
},
"IndexedFaceSet" : {
	"attrib" : IndexedFaceSet.attrib,
	"ccw" : IndexedFaceSet.ccw,
	"color" : IndexedFaceSet.color,
	"colorIndex" : IndexedFaceSet.colorIndex,
	"colorPerVertex" : IndexedFaceSet.colorPerVertex,
	"convex" : IndexedFaceSet.convex,
	"coord" : IndexedFaceSet.coord,
	"coordIndex" : IndexedFaceSet.coordIndex,
	"creaseAngle" : IndexedFaceSet.creaseAngle,
	"fogCoord" : IndexedFaceSet.fogCoord,
	"IS" : IndexedFaceSet.IS,
	"metadata" : IndexedFaceSet.metadata,
	"normal" : IndexedFaceSet.normal,
	"normalIndex" : IndexedFaceSet.normalIndex,
	"normalPerVertex" : IndexedFaceSet.normalPerVertex,
	"solid" : IndexedFaceSet.solid,
	"texCoord" : IndexedFaceSet.texCoord,
	"texCoordIndex" : IndexedFaceSet.texCoordIndex,
	"DEF" : IndexedFaceSet.DEF,
	"USE" : IndexedFaceSet.USE,
	"class" : IndexedFaceSet.class_,
	"id" : IndexedFaceSet.id_,
	"style" : IndexedFaceSet.style_,
},
"IndexedLineSet" : {
	"attrib" : IndexedLineSet.attrib,
	"color" : IndexedLineSet.color,
	"colorIndex" : IndexedLineSet.colorIndex,
	"colorPerVertex" : IndexedLineSet.colorPerVertex,
	"coord" : IndexedLineSet.coord,
	"coordIndex" : IndexedLineSet.coordIndex,
	"fogCoord" : IndexedLineSet.fogCoord,
	"IS" : IndexedLineSet.IS,
	"metadata" : IndexedLineSet.metadata,
	"normal" : IndexedLineSet.normal,
	"DEF" : IndexedLineSet.DEF,
	"USE" : IndexedLineSet.USE,
	"class" : IndexedLineSet.class_,
	"id" : IndexedLineSet.id_,
	"style" : IndexedLineSet.style_,
},
"IndexedQuadSet" : {
	"attrib" : IndexedQuadSet.attrib,
	"ccw" : IndexedQuadSet.ccw,
	"color" : IndexedQuadSet.color,
	"colorPerVertex" : IndexedQuadSet.colorPerVertex,
	"coord" : IndexedQuadSet.coord,
	"fogCoord" : IndexedQuadSet.fogCoord,
	"index" : IndexedQuadSet.index,
	"IS" : IndexedQuadSet.IS,
	"metadata" : IndexedQuadSet.metadata,
	"normal" : IndexedQuadSet.normal,
	"normalPerVertex" : IndexedQuadSet.normalPerVertex,
	"solid" : IndexedQuadSet.solid,
	"texCoord" : IndexedQuadSet.texCoord,
	"DEF" : IndexedQuadSet.DEF,
	"USE" : IndexedQuadSet.USE,
	"class" : IndexedQuadSet.class_,
	"id" : IndexedQuadSet.id_,
	"style" : IndexedQuadSet.style_,
},
"IndexedTriangleFanSet" : {
	"attrib" : IndexedTriangleFanSet.attrib,
	"ccw" : IndexedTriangleFanSet.ccw,
	"color" : IndexedTriangleFanSet.color,
	"colorPerVertex" : IndexedTriangleFanSet.colorPerVertex,
	"coord" : IndexedTriangleFanSet.coord,
	"fogCoord" : IndexedTriangleFanSet.fogCoord,
	"index" : IndexedTriangleFanSet.index,
	"IS" : IndexedTriangleFanSet.IS,
	"metadata" : IndexedTriangleFanSet.metadata,
	"normal" : IndexedTriangleFanSet.normal,
	"normalPerVertex" : IndexedTriangleFanSet.normalPerVertex,
	"solid" : IndexedTriangleFanSet.solid,
	"texCoord" : IndexedTriangleFanSet.texCoord,
	"DEF" : IndexedTriangleFanSet.DEF,
	"USE" : IndexedTriangleFanSet.USE,
	"class" : IndexedTriangleFanSet.class_,
	"id" : IndexedTriangleFanSet.id_,
	"style" : IndexedTriangleFanSet.style_,
},
"IndexedTriangleSet" : {
	"attrib" : IndexedTriangleSet.attrib,
	"ccw" : IndexedTriangleSet.ccw,
	"color" : IndexedTriangleSet.color,
	"colorPerVertex" : IndexedTriangleSet.colorPerVertex,
	"coord" : IndexedTriangleSet.coord,
	"fogCoord" : IndexedTriangleSet.fogCoord,
	"index" : IndexedTriangleSet.index,
	"IS" : IndexedTriangleSet.IS,
	"metadata" : IndexedTriangleSet.metadata,
	"normal" : IndexedTriangleSet.normal,
	"normalPerVertex" : IndexedTriangleSet.normalPerVertex,
	"solid" : IndexedTriangleSet.solid,
	"texCoord" : IndexedTriangleSet.texCoord,
	"DEF" : IndexedTriangleSet.DEF,
	"USE" : IndexedTriangleSet.USE,
	"class" : IndexedTriangleSet.class_,
	"id" : IndexedTriangleSet.id_,
	"style" : IndexedTriangleSet.style_,
},
"IndexedTriangleStripSet" : {
	"attrib" : IndexedTriangleStripSet.attrib,
	"ccw" : IndexedTriangleStripSet.ccw,
	"color" : IndexedTriangleStripSet.color,
	"colorPerVertex" : IndexedTriangleStripSet.colorPerVertex,
	"coord" : IndexedTriangleStripSet.coord,
	"fogCoord" : IndexedTriangleStripSet.fogCoord,
	"index" : IndexedTriangleStripSet.index,
	"IS" : IndexedTriangleStripSet.IS,
	"metadata" : IndexedTriangleStripSet.metadata,
	"normal" : IndexedTriangleStripSet.normal,
	"normalPerVertex" : IndexedTriangleStripSet.normalPerVertex,
	"solid" : IndexedTriangleStripSet.solid,
	"texCoord" : IndexedTriangleStripSet.texCoord,
	"DEF" : IndexedTriangleStripSet.DEF,
	"USE" : IndexedTriangleStripSet.USE,
	"class" : IndexedTriangleStripSet.class_,
	"id" : IndexedTriangleStripSet.id_,
	"style" : IndexedTriangleStripSet.style_,
},
"Inline" : {
	"autoRefresh" : Inline.autoRefresh,
	"autoRefreshTimeLimit" : Inline.autoRefreshTimeLimit,
	"bboxCenter" : Inline.bboxCenter,
	"bboxDisplay" : Inline.bboxDisplay,
	"bboxSize" : Inline.bboxSize,
	"description" : Inline.description,
	"global" : Inline.global_,
	"IS" : Inline.IS,
	"load" : Inline.load,
	"metadata" : Inline.metadata,
	"url" : Inline.url,
	"visible" : Inline.visible,
	"DEF" : Inline.DEF,
	"USE" : Inline.USE,
	"class" : Inline.class_,
	"id" : Inline.id_,
	"style" : Inline.style_,
},
"IntegerSequencer" : {
	"IS" : IntegerSequencer.IS,
	"key" : IntegerSequencer.key,
	"keyValue" : IntegerSequencer.keyValue,
	"metadata" : IntegerSequencer.metadata,
	"DEF" : IntegerSequencer.DEF,
	"USE" : IntegerSequencer.USE,
	"class" : IntegerSequencer.class_,
	"id" : IntegerSequencer.id_,
	"style" : IntegerSequencer.style_,
},
"IntegerTrigger" : {
	"integerKey" : IntegerTrigger.integerKey,
	"IS" : IntegerTrigger.IS,
	"metadata" : IntegerTrigger.metadata,
	"DEF" : IntegerTrigger.DEF,
	"USE" : IntegerTrigger.USE,
	"class" : IntegerTrigger.class_,
	"id" : IntegerTrigger.id_,
	"style" : IntegerTrigger.style_,
},
"IsoSurfaceVolumeData" : {
	"bboxCenter" : IsoSurfaceVolumeData.bboxCenter,
	"bboxDisplay" : IsoSurfaceVolumeData.bboxDisplay,
	"bboxSize" : IsoSurfaceVolumeData.bboxSize,
	"contourStepSize" : IsoSurfaceVolumeData.contourStepSize,
	"dimensions" : IsoSurfaceVolumeData.dimensions,
	"gradients" : IsoSurfaceVolumeData.gradients,
	"IS" : IsoSurfaceVolumeData.IS,
	"metadata" : IsoSurfaceVolumeData.metadata,
	"renderStyle" : IsoSurfaceVolumeData.renderStyle,
	"surfaceTolerance" : IsoSurfaceVolumeData.surfaceTolerance,
	"surfaceValues" : IsoSurfaceVolumeData.surfaceValues,
	"visible" : IsoSurfaceVolumeData.visible,
	"voxels" : IsoSurfaceVolumeData.voxels,
	"DEF" : IsoSurfaceVolumeData.DEF,
	"USE" : IsoSurfaceVolumeData.USE,
	"class" : IsoSurfaceVolumeData.class_,
	"id" : IsoSurfaceVolumeData.id_,
	"style" : IsoSurfaceVolumeData.style_,
},
"KeySensor" : {
	"description" : KeySensor.description,
	"enabled" : KeySensor.enabled,
	"IS" : KeySensor.IS,
	"metadata" : KeySensor.metadata,
	"DEF" : KeySensor.DEF,
	"USE" : KeySensor.USE,
	"class" : KeySensor.class_,
	"id" : KeySensor.id_,
	"style" : KeySensor.style_,
},
"Layer" : {
	"addChildren" : Layer.children,
	"children" : Layer.children,
	"IS" : Layer.IS,
	"metadata" : Layer.metadata,
	"objectType" : Layer.objectType,
	"pickable" : Layer.pickable,
	"removeChildren" : Layer.children,
	"viewport" : Layer.viewport,
	"visible" : Layer.visible,
	"DEF" : Layer.DEF,
	"USE" : Layer.USE,
	"class" : Layer.class_,
	"id" : Layer.id_,
	"style" : Layer.style_,
},
"LayerSet" : {
	"activeLayer" : LayerSet.activeLayer,
	"IS" : LayerSet.IS,
	"layers" : LayerSet.layers,
	"metadata" : LayerSet.metadata,
	"order" : LayerSet.order,
	"DEF" : LayerSet.DEF,
	"USE" : LayerSet.USE,
	"class" : LayerSet.class_,
	"id" : LayerSet.id_,
	"style" : LayerSet.style_,
},
"Layout" : {
	"align" : Layout.align,
	"IS" : Layout.IS,
	"metadata" : Layout.metadata,
	"offset" : Layout.offset,
	"offsetUnits" : Layout.offsetUnits,
	"scaleMode" : Layout.scaleMode,
	"size" : Layout.size,
	"sizeUnits" : Layout.sizeUnits,
	"DEF" : Layout.DEF,
	"USE" : Layout.USE,
	"class" : Layout.class_,
	"id" : Layout.id_,
	"style" : Layout.style_,
},
"LayoutGroup" : {
	"addChildren" : LayoutGroup.children,
	"bboxCenter" : LayoutGroup.bboxCenter,
	"bboxDisplay" : LayoutGroup.bboxDisplay,
	"bboxSize" : LayoutGroup.bboxSize,
	"children" : LayoutGroup.children,
	"IS" : LayoutGroup.IS,
	"layout" : LayoutGroup.layout,
	"metadata" : LayoutGroup.metadata,
	"removeChildren" : LayoutGroup.children,
	"viewport" : LayoutGroup.viewport,
	"visible" : LayoutGroup.visible,
	"DEF" : LayoutGroup.DEF,
	"USE" : LayoutGroup.USE,
	"class" : LayoutGroup.class_,
	"id" : LayoutGroup.id_,
	"style" : LayoutGroup.style_,
},
"LayoutLayer" : {
	"addChildren" : LayoutLayer.children,
	"children" : LayoutLayer.children,
	"IS" : LayoutLayer.IS,
	"layout" : LayoutLayer.layout,
	"metadata" : LayoutLayer.metadata,
	"objectType" : LayoutLayer.objectType,
	"pickable" : LayoutLayer.pickable,
	"removeChildren" : LayoutLayer.children,
	"viewport" : LayoutLayer.viewport,
	"visible" : LayoutLayer.visible,
	"DEF" : LayoutLayer.DEF,
	"USE" : LayoutLayer.USE,
	"class" : LayoutLayer.class_,
	"id" : LayoutLayer.id_,
	"style" : LayoutLayer.style_,
},
"LinePickSensor" : {
	"description" : LinePickSensor.description,
	"enabled" : LinePickSensor.enabled,
	"intersectionType" : LinePickSensor.intersectionType,
	"IS" : LinePickSensor.IS,
	"matchCriterion" : LinePickSensor.matchCriterion,
	"metadata" : LinePickSensor.metadata,
	"objectType" : LinePickSensor.objectType,
	"pickingGeometry" : LinePickSensor.pickingGeometry,
	"pickTarget" : LinePickSensor.pickTarget,
	"sortOrder" : LinePickSensor.sortOrder,
	"DEF" : LinePickSensor.DEF,
	"USE" : LinePickSensor.USE,
	"class" : LinePickSensor.class_,
	"id" : LinePickSensor.id_,
	"style" : LinePickSensor.style_,
},
"LineProperties" : {
	"applied" : LineProperties.applied,
	"IS" : LineProperties.IS,
	"linetype" : LineProperties.linetype,
	"linewidthScaleFactor" : LineProperties.linewidthScaleFactor,
	"metadata" : LineProperties.metadata,
	"DEF" : LineProperties.DEF,
	"USE" : LineProperties.USE,
	"class" : LineProperties.class_,
	"id" : LineProperties.id_,
	"style" : LineProperties.style_,
},
"LineSet" : {
	"attrib" : LineSet.attrib,
	"color" : LineSet.color,
	"coord" : LineSet.coord,
	"fogCoord" : LineSet.fogCoord,
	"IS" : LineSet.IS,
	"metadata" : LineSet.metadata,
	"normal" : LineSet.normal,
	"vertexCount" : LineSet.vertexCount,
	"DEF" : LineSet.DEF,
	"USE" : LineSet.USE,
	"class" : LineSet.class_,
	"id" : LineSet.id_,
	"style" : LineSet.style_,
},
"ListenerPointSource" : {
	"description" : ListenerPointSource.description,
	"dopplerEnabled" : ListenerPointSource.dopplerEnabled,
	"enabled" : ListenerPointSource.enabled,
	"gain" : ListenerPointSource.gain,
	"interauralDistance" : ListenerPointSource.interauralDistance,
	"IS" : ListenerPointSource.IS,
	"metadata" : ListenerPointSource.metadata,
	"orientation" : ListenerPointSource.orientation,
	"pauseTime" : ListenerPointSource.pauseTime,
	"position" : ListenerPointSource.position,
	"resumeTime" : ListenerPointSource.resumeTime,
	"startTime" : ListenerPointSource.startTime,
	"stopTime" : ListenerPointSource.stopTime,
	"trackCurrentView" : ListenerPointSource.trackCurrentView,
	"DEF" : ListenerPointSource.DEF,
	"USE" : ListenerPointSource.USE,
	"class" : ListenerPointSource.class_,
	"id" : ListenerPointSource.id_,
	"style" : ListenerPointSource.style_,
},
"LoadSensor" : {
	"children" : LoadSensor.children,
	"description" : LoadSensor.description,
	"enabled" : LoadSensor.enabled,
	"IS" : LoadSensor.IS,
	"metadata" : LoadSensor.metadata,
	"timeOut" : LoadSensor.timeOut,
	"DEF" : LoadSensor.DEF,
	"USE" : LoadSensor.USE,
	"class" : LoadSensor.class_,
	"id" : LoadSensor.id_,
	"style" : LoadSensor.style_,
},
"LocalFog" : {
	"color" : LocalFog.color,
	"enabled" : LocalFog.enabled,
	"fogType" : LocalFog.fogType,
	"IS" : LocalFog.IS,
	"metadata" : LocalFog.metadata,
	"visibilityRange" : LocalFog.visibilityRange,
	"DEF" : LocalFog.DEF,
	"USE" : LocalFog.USE,
	"class" : LocalFog.class_,
	"id" : LocalFog.id_,
	"style" : LocalFog.style_,
},
"LOD" : {
	"addChildren" : LOD.children,
	"bboxCenter" : LOD.bboxCenter,
	"bboxDisplay" : LOD.bboxDisplay,
	"bboxSize" : LOD.bboxSize,
	"center" : LOD.center,
	"children" : LOD.children,
	"forceTransitions" : LOD.forceTransitions,
	"IS" : LOD.IS,
	"metadata" : LOD.metadata,
	"range" : LOD.range,
	"removeChildren" : LOD.children,
	"visible" : LOD.visible,
	"DEF" : LOD.DEF,
	"USE" : LOD.USE,
	"class" : LOD.class_,
	"id" : LOD.id_,
	"style" : LOD.style_,
},
"Material" : {
	"ambientIntensity" : Material.ambientIntensity,
	"ambientTexture" : Material.ambientTexture,
	"ambientTextureMapping" : Material.ambientTextureMapping,
	"diffuseColor" : Material.diffuseColor,
	"diffuseTexture" : Material.diffuseTexture,
	"diffuseTextureMapping" : Material.diffuseTextureMapping,
	"emissiveColor" : Material.emissiveColor,
	"emissiveTexture" : Material.emissiveTexture,
	"emissiveTextureMapping" : Material.emissiveTextureMapping,
	"IS" : Material.IS,
	"metadata" : Material.metadata,
	"normalScale" : Material.normalScale,
	"normalTexture" : Material.normalTexture,
	"normalTextureMapping" : Material.normalTextureMapping,
	"occlusionStrength" : Material.occlusionStrength,
	"occlusionTexture" : Material.occlusionTexture,
	"occlusionTextureMapping" : Material.occlusionTextureMapping,
	"shininess" : Material.shininess,
	"shininessTexture" : Material.shininessTexture,
	"shininessTextureMapping" : Material.shininessTextureMapping,
	"specularColor" : Material.specularColor,
	"specularTexture" : Material.specularTexture,
	"specularTextureMapping" : Material.specularTextureMapping,
	"transparency" : Material.transparency,
	"DEF" : Material.DEF,
	"USE" : Material.USE,
	"class" : Material.class_,
	"id" : Material.id_,
	"style" : Material.style_,
},
"Matrix3VertexAttribute" : {
	"IS" : Matrix3VertexAttribute.IS,
	"metadata" : Matrix3VertexAttribute.metadata,
	"name" : Matrix3VertexAttribute.name,
	"value" : Matrix3VertexAttribute.value,
	"DEF" : Matrix3VertexAttribute.DEF,
	"USE" : Matrix3VertexAttribute.USE,
	"class" : Matrix3VertexAttribute.class_,
	"id" : Matrix3VertexAttribute.id_,
	"style" : Matrix3VertexAttribute.style_,
},
"Matrix4VertexAttribute" : {
	"IS" : Matrix4VertexAttribute.IS,
	"metadata" : Matrix4VertexAttribute.metadata,
	"name" : Matrix4VertexAttribute.name,
	"value" : Matrix4VertexAttribute.value,
	"DEF" : Matrix4VertexAttribute.DEF,
	"USE" : Matrix4VertexAttribute.USE,
	"class" : Matrix4VertexAttribute.class_,
	"id" : Matrix4VertexAttribute.id_,
	"style" : Matrix4VertexAttribute.style_,
},
"MetadataBoolean" : {
	"IS" : MetadataBoolean.IS,
	"metadata" : MetadataBoolean.metadata,
	"name" : MetadataBoolean.name,
	"reference" : MetadataBoolean.reference,
	"value" : MetadataBoolean.value,
	"DEF" : MetadataBoolean.DEF,
	"USE" : MetadataBoolean.USE,
	"class" : MetadataBoolean.class_,
	"id" : MetadataBoolean.id_,
	"style" : MetadataBoolean.style_,
},
"MetadataDouble" : {
	"IS" : MetadataDouble.IS,
	"metadata" : MetadataDouble.metadata,
	"name" : MetadataDouble.name,
	"reference" : MetadataDouble.reference,
	"value" : MetadataDouble.value,
	"DEF" : MetadataDouble.DEF,
	"USE" : MetadataDouble.USE,
	"class" : MetadataDouble.class_,
	"id" : MetadataDouble.id_,
	"style" : MetadataDouble.style_,
},
"MetadataFloat" : {
	"IS" : MetadataFloat.IS,
	"metadata" : MetadataFloat.metadata,
	"name" : MetadataFloat.name,
	"reference" : MetadataFloat.reference,
	"value" : MetadataFloat.value,
	"DEF" : MetadataFloat.DEF,
	"USE" : MetadataFloat.USE,
	"class" : MetadataFloat.class_,
	"id" : MetadataFloat.id_,
	"style" : MetadataFloat.style_,
},
"MetadataInteger" : {
	"IS" : MetadataInteger.IS,
	"metadata" : MetadataInteger.metadata,
	"name" : MetadataInteger.name,
	"reference" : MetadataInteger.reference,
	"value" : MetadataInteger.value,
	"DEF" : MetadataInteger.DEF,
	"USE" : MetadataInteger.USE,
	"class" : MetadataInteger.class_,
	"id" : MetadataInteger.id_,
	"style" : MetadataInteger.style_,
},
"MetadataSet" : {
	"IS" : MetadataSet.IS,
	"metadata" : MetadataSet.metadata,
	"name" : MetadataSet.name,
	"reference" : MetadataSet.reference,
	"value" : MetadataSet.value,
	"DEF" : MetadataSet.DEF,
	"USE" : MetadataSet.USE,
	"class" : MetadataSet.class_,
	"id" : MetadataSet.id_,
	"style" : MetadataSet.style_,
},
"MetadataString" : {
	"IS" : MetadataString.IS,
	"metadata" : MetadataString.metadata,
	"name" : MetadataString.name,
	"reference" : MetadataString.reference,
	"value" : MetadataString.value,
	"DEF" : MetadataString.DEF,
	"USE" : MetadataString.USE,
	"class" : MetadataString.class_,
	"id" : MetadataString.id_,
	"style" : MetadataString.style_,
},
"MicrophoneSource" : {
	"description" : MicrophoneSource.description,
	"enabled" : MicrophoneSource.enabled,
	"gain" : MicrophoneSource.gain,
	"IS" : MicrophoneSource.IS,
	"mediaDeviceID" : MicrophoneSource.mediaDeviceID,
	"metadata" : MicrophoneSource.metadata,
	"pauseTime" : MicrophoneSource.pauseTime,
	"resumeTime" : MicrophoneSource.resumeTime,
	"startTime" : MicrophoneSource.startTime,
	"stopTime" : MicrophoneSource.stopTime,
	"DEF" : MicrophoneSource.DEF,
	"USE" : MicrophoneSource.USE,
	"class" : MicrophoneSource.class_,
	"id" : MicrophoneSource.id_,
	"style" : MicrophoneSource.style_,
},
"MotorJoint" : {
	"autoCalc" : MotorJoint.autoCalc,
	"axis1Angle" : MotorJoint.axis1Angle,
	"axis1Torque" : MotorJoint.axis1Torque,
	"axis2Angle" : MotorJoint.axis2Angle,
	"axis2Torque" : MotorJoint.axis2Torque,
	"axis3Angle" : MotorJoint.axis3Angle,
	"axis3Torque" : MotorJoint.axis3Torque,
	"body1" : MotorJoint.body1,
	"body2" : MotorJoint.body2,
	"enabledAxes" : MotorJoint.enabledAxes,
	"forceOutput" : MotorJoint.forceOutput,
	"IS" : MotorJoint.IS,
	"metadata" : MotorJoint.metadata,
	"motor1Axis" : MotorJoint.motor1Axis,
	"motor2Axis" : MotorJoint.motor2Axis,
	"motor3Axis" : MotorJoint.motor3Axis,
	"stop1Bounce" : MotorJoint.stop1Bounce,
	"stop1ErrorCorrection" : MotorJoint.stop1ErrorCorrection,
	"stop2Bounce" : MotorJoint.stop2Bounce,
	"stop2ErrorCorrection" : MotorJoint.stop2ErrorCorrection,
	"stop3Bounce" : MotorJoint.stop3Bounce,
	"stop3ErrorCorrection" : MotorJoint.stop3ErrorCorrection,
	"DEF" : MotorJoint.DEF,
	"USE" : MotorJoint.USE,
	"class" : MotorJoint.class_,
	"id" : MotorJoint.id_,
	"style" : MotorJoint.style_,
},
"MovieTexture" : {
	"autoRefresh" : MovieTexture.autoRefresh,
	"autoRefreshTimeLimit" : MovieTexture.autoRefreshTimeLimit,
	"description" : MovieTexture.description,
	"enabled" : MovieTexture.enabled,
	"gain" : MovieTexture.gain,
	"IS" : MovieTexture.IS,
	"load" : MovieTexture.load,
	"loop" : MovieTexture.loop,
	"metadata" : MovieTexture.metadata,
	"pauseTime" : MovieTexture.pauseTime,
	"pitch" : MovieTexture.pitch,
	"repeatS" : MovieTexture.repeatS,
	"repeatT" : MovieTexture.repeatT,
	"resumeTime" : MovieTexture.resumeTime,
	"speed" : MovieTexture.speed,
	"startTime" : MovieTexture.startTime,
	"stopTime" : MovieTexture.stopTime,
	"textureProperties" : MovieTexture.textureProperties,
	"url" : MovieTexture.url,
	"DEF" : MovieTexture.DEF,
	"USE" : MovieTexture.USE,
	"class" : MovieTexture.class_,
	"id" : MovieTexture.id_,
	"style" : MovieTexture.style_,
},
"MultiTexture" : {
	"alpha" : MultiTexture.alpha,
	"color" : MultiTexture.color,
	"description" : MultiTexture.description,
	"function" : MultiTexture.function,
	"IS" : MultiTexture.IS,
	"metadata" : MultiTexture.metadata,
	"mode" : MultiTexture.mode,
	"source" : MultiTexture.source,
	"texture" : MultiTexture.texture,
	"DEF" : MultiTexture.DEF,
	"USE" : MultiTexture.USE,
	"class" : MultiTexture.class_,
	"id" : MultiTexture.id_,
	"style" : MultiTexture.style_,
},
"MultiTextureCoordinate" : {
	"IS" : MultiTextureCoordinate.IS,
	"metadata" : MultiTextureCoordinate.metadata,
	"texCoord" : MultiTextureCoordinate.texCoord,
	"DEF" : MultiTextureCoordinate.DEF,
	"USE" : MultiTextureCoordinate.USE,
	"class" : MultiTextureCoordinate.class_,
	"id" : MultiTextureCoordinate.id_,
	"style" : MultiTextureCoordinate.style_,
},
"MultiTextureTransform" : {
	"IS" : MultiTextureTransform.IS,
	"metadata" : MultiTextureTransform.metadata,
	"textureTransform" : MultiTextureTransform.textureTransform,
	"DEF" : MultiTextureTransform.DEF,
	"USE" : MultiTextureTransform.USE,
	"class" : MultiTextureTransform.class_,
	"id" : MultiTextureTransform.id_,
	"style" : MultiTextureTransform.style_,
},
"NavigationInfo" : {
	"avatarSize" : NavigationInfo.avatarSize,
	"headlight" : NavigationInfo.headlight,
	"IS" : NavigationInfo.IS,
	"metadata" : NavigationInfo.metadata,
	"speed" : NavigationInfo.speed,
	"transitionTime" : NavigationInfo.transitionTime,
	"transitionType" : NavigationInfo.transitionType,
	"type" : NavigationInfo.type,
	"visibilityLimit" : NavigationInfo.visibilityLimit,
	"DEF" : NavigationInfo.DEF,
	"USE" : NavigationInfo.USE,
	"class" : NavigationInfo.class_,
	"id" : NavigationInfo.id_,
	"style" : NavigationInfo.style_,
},
"Normal" : {
	"IS" : Normal.IS,
	"metadata" : Normal.metadata,
	"vector" : Normal.vector,
	"DEF" : Normal.DEF,
	"USE" : Normal.USE,
	"class" : Normal.class_,
	"id" : Normal.id_,
	"style" : Normal.style_,
},
"NormalInterpolator" : {
	"IS" : NormalInterpolator.IS,
	"key" : NormalInterpolator.key,
	"keyValue" : NormalInterpolator.keyValue,
	"metadata" : NormalInterpolator.metadata,
	"DEF" : NormalInterpolator.DEF,
	"USE" : NormalInterpolator.USE,
	"class" : NormalInterpolator.class_,
	"id" : NormalInterpolator.id_,
	"style" : NormalInterpolator.style_,
},
"NurbsCurve" : {
	"closed" : NurbsCurve.closed,
	"controlPoint" : NurbsCurve.controlPoint,
	"IS" : NurbsCurve.IS,
	"knot" : NurbsCurve.knot,
	"metadata" : NurbsCurve.metadata,
	"order" : NurbsCurve.order,
	"tessellation" : NurbsCurve.tessellation,
	"weight" : NurbsCurve.weight,
	"DEF" : NurbsCurve.DEF,
	"USE" : NurbsCurve.USE,
	"class" : NurbsCurve.class_,
	"id" : NurbsCurve.id_,
	"style" : NurbsCurve.style_,
},
"NurbsCurve2D" : {
	"closed" : NurbsCurve2D.closed,
	"controlPoint" : NurbsCurve2D.controlPoint,
	"IS" : NurbsCurve2D.IS,
	"knot" : NurbsCurve2D.knot,
	"metadata" : NurbsCurve2D.metadata,
	"order" : NurbsCurve2D.order,
	"tessellation" : NurbsCurve2D.tessellation,
	"weight" : NurbsCurve2D.weight,
	"DEF" : NurbsCurve2D.DEF,
	"USE" : NurbsCurve2D.USE,
	"class" : NurbsCurve2D.class_,
	"id" : NurbsCurve2D.id_,
	"style" : NurbsCurve2D.style_,
},
"NurbsOrientationInterpolator" : {
	"controlPoint" : NurbsOrientationInterpolator.controlPoint,
	"IS" : NurbsOrientationInterpolator.IS,
	"knot" : NurbsOrientationInterpolator.knot,
	"metadata" : NurbsOrientationInterpolator.metadata,
	"order" : NurbsOrientationInterpolator.order,
	"weight" : NurbsOrientationInterpolator.weight,
	"DEF" : NurbsOrientationInterpolator.DEF,
	"USE" : NurbsOrientationInterpolator.USE,
	"class" : NurbsOrientationInterpolator.class_,
	"id" : NurbsOrientationInterpolator.id_,
	"style" : NurbsOrientationInterpolator.style_,
},
"NurbsPatchSurface" : {
	"controlPoint" : NurbsPatchSurface.controlPoint,
	"IS" : NurbsPatchSurface.IS,
	"metadata" : NurbsPatchSurface.metadata,
	"solid" : NurbsPatchSurface.solid,
	"texCoord" : NurbsPatchSurface.texCoord,
	"uClosed" : NurbsPatchSurface.uClosed,
	"uDimension" : NurbsPatchSurface.uDimension,
	"uKnot" : NurbsPatchSurface.uKnot,
	"uOrder" : NurbsPatchSurface.uOrder,
	"uTessellation" : NurbsPatchSurface.uTessellation,
	"vClosed" : NurbsPatchSurface.vClosed,
	"vDimension" : NurbsPatchSurface.vDimension,
	"vKnot" : NurbsPatchSurface.vKnot,
	"vOrder" : NurbsPatchSurface.vOrder,
	"vTessellation" : NurbsPatchSurface.vTessellation,
	"weight" : NurbsPatchSurface.weight,
	"DEF" : NurbsPatchSurface.DEF,
	"USE" : NurbsPatchSurface.USE,
	"class" : NurbsPatchSurface.class_,
	"id" : NurbsPatchSurface.id_,
	"style" : NurbsPatchSurface.style_,
},
"NurbsPositionInterpolator" : {
	"controlPoint" : NurbsPositionInterpolator.controlPoint,
	"IS" : NurbsPositionInterpolator.IS,
	"knot" : NurbsPositionInterpolator.knot,
	"metadata" : NurbsPositionInterpolator.metadata,
	"order" : NurbsPositionInterpolator.order,
	"weight" : NurbsPositionInterpolator.weight,
	"DEF" : NurbsPositionInterpolator.DEF,
	"USE" : NurbsPositionInterpolator.USE,
	"class" : NurbsPositionInterpolator.class_,
	"id" : NurbsPositionInterpolator.id_,
	"style" : NurbsPositionInterpolator.style_,
},
"NurbsSet" : {
	"addGeometry" : NurbsSet.geometry,
	"bboxCenter" : NurbsSet.bboxCenter,
	"bboxDisplay" : NurbsSet.bboxDisplay,
	"bboxSize" : NurbsSet.bboxSize,
	"geometry" : NurbsSet.geometry,
	"IS" : NurbsSet.IS,
	"metadata" : NurbsSet.metadata,
	"removeGeometry" : NurbsSet.geometry,
	"tessellationScale" : NurbsSet.tessellationScale,
	"visible" : NurbsSet.visible,
	"DEF" : NurbsSet.DEF,
	"USE" : NurbsSet.USE,
	"class" : NurbsSet.class_,
	"id" : NurbsSet.id_,
	"style" : NurbsSet.style_,
},
"NurbsSurfaceInterpolator" : {
	"controlPoint" : NurbsSurfaceInterpolator.controlPoint,
	"IS" : NurbsSurfaceInterpolator.IS,
	"metadata" : NurbsSurfaceInterpolator.metadata,
	"uDimension" : NurbsSurfaceInterpolator.uDimension,
	"uKnot" : NurbsSurfaceInterpolator.uKnot,
	"uOrder" : NurbsSurfaceInterpolator.uOrder,
	"vDimension" : NurbsSurfaceInterpolator.vDimension,
	"vKnot" : NurbsSurfaceInterpolator.vKnot,
	"vOrder" : NurbsSurfaceInterpolator.vOrder,
	"weight" : NurbsSurfaceInterpolator.weight,
	"DEF" : NurbsSurfaceInterpolator.DEF,
	"USE" : NurbsSurfaceInterpolator.USE,
	"class" : NurbsSurfaceInterpolator.class_,
	"id" : NurbsSurfaceInterpolator.id_,
	"style" : NurbsSurfaceInterpolator.style_,
},
"NurbsSweptSurface" : {
	"ccw" : NurbsSweptSurface.ccw,
	"crossSectionCurve" : NurbsSweptSurface.crossSectionCurve,
	"IS" : NurbsSweptSurface.IS,
	"metadata" : NurbsSweptSurface.metadata,
	"solid" : NurbsSweptSurface.solid,
	"trajectoryCurve" : NurbsSweptSurface.trajectoryCurve,
	"DEF" : NurbsSweptSurface.DEF,
	"USE" : NurbsSweptSurface.USE,
	"class" : NurbsSweptSurface.class_,
	"id" : NurbsSweptSurface.id_,
	"style" : NurbsSweptSurface.style_,
},
"NurbsSwungSurface" : {
	"ccw" : NurbsSwungSurface.ccw,
	"IS" : NurbsSwungSurface.IS,
	"metadata" : NurbsSwungSurface.metadata,
	"profileCurve" : NurbsSwungSurface.profileCurve,
	"solid" : NurbsSwungSurface.solid,
	"trajectoryCurve" : NurbsSwungSurface.trajectoryCurve,
	"DEF" : NurbsSwungSurface.DEF,
	"USE" : NurbsSwungSurface.USE,
	"class" : NurbsSwungSurface.class_,
	"id" : NurbsSwungSurface.id_,
	"style" : NurbsSwungSurface.style_,
},
"NurbsTextureCoordinate" : {
	"controlPoint" : NurbsTextureCoordinate.controlPoint,
	"IS" : NurbsTextureCoordinate.IS,
	"metadata" : NurbsTextureCoordinate.metadata,
	"uDimension" : NurbsTextureCoordinate.uDimension,
	"uKnot" : NurbsTextureCoordinate.uKnot,
	"uOrder" : NurbsTextureCoordinate.uOrder,
	"vDimension" : NurbsTextureCoordinate.vDimension,
	"vKnot" : NurbsTextureCoordinate.vKnot,
	"vOrder" : NurbsTextureCoordinate.vOrder,
	"weight" : NurbsTextureCoordinate.weight,
	"DEF" : NurbsTextureCoordinate.DEF,
	"USE" : NurbsTextureCoordinate.USE,
	"class" : NurbsTextureCoordinate.class_,
	"id" : NurbsTextureCoordinate.id_,
	"style" : NurbsTextureCoordinate.style_,
},
"NurbsTrimmedSurface" : {
	"addTrimmingContour" : NurbsTrimmedSurface.trimmingContour,
	"controlPoint" : NurbsTrimmedSurface.controlPoint,
	"IS" : NurbsTrimmedSurface.IS,
	"metadata" : NurbsTrimmedSurface.metadata,
	"removeTrimmingContour" : NurbsTrimmedSurface.trimmingContour,
	"solid" : NurbsTrimmedSurface.solid,
	"texCoord" : NurbsTrimmedSurface.texCoord,
	"trimmingContour" : NurbsTrimmedSurface.trimmingContour,
	"uClosed" : NurbsTrimmedSurface.uClosed,
	"uDimension" : NurbsTrimmedSurface.uDimension,
	"uKnot" : NurbsTrimmedSurface.uKnot,
	"uOrder" : NurbsTrimmedSurface.uOrder,
	"uTessellation" : NurbsTrimmedSurface.uTessellation,
	"vClosed" : NurbsTrimmedSurface.vClosed,
	"vDimension" : NurbsTrimmedSurface.vDimension,
	"vKnot" : NurbsTrimmedSurface.vKnot,
	"vOrder" : NurbsTrimmedSurface.vOrder,
	"vTessellation" : NurbsTrimmedSurface.vTessellation,
	"weight" : NurbsTrimmedSurface.weight,
	"DEF" : NurbsTrimmedSurface.DEF,
	"USE" : NurbsTrimmedSurface.USE,
	"class" : NurbsTrimmedSurface.class_,
	"id" : NurbsTrimmedSurface.id_,
	"style" : NurbsTrimmedSurface.style_,
},
"OpacityMapVolumeStyle" : {
	"enabled" : OpacityMapVolumeStyle.enabled,
	"IS" : OpacityMapVolumeStyle.IS,
	"metadata" : OpacityMapVolumeStyle.metadata,
	"transferFunction" : OpacityMapVolumeStyle.transferFunction,
	"DEF" : OpacityMapVolumeStyle.DEF,
	"USE" : OpacityMapVolumeStyle.USE,
	"class" : OpacityMapVolumeStyle.class_,
	"id" : OpacityMapVolumeStyle.id_,
	"style" : OpacityMapVolumeStyle.style_,
},
"OrientationChaser" : {
	"duration" : OrientationChaser.duration,
	"initialDestination" : OrientationChaser.initialDestination,
	"initialValue" : OrientationChaser.initialValue,
	"IS" : OrientationChaser.IS,
	"metadata" : OrientationChaser.metadata,
	"DEF" : OrientationChaser.DEF,
	"USE" : OrientationChaser.USE,
	"class" : OrientationChaser.class_,
	"id" : OrientationChaser.id_,
	"style" : OrientationChaser.style_,
},
"OrientationDamper" : {
	"initialDestination" : OrientationDamper.initialDestination,
	"initialValue" : OrientationDamper.initialValue,
	"IS" : OrientationDamper.IS,
	"metadata" : OrientationDamper.metadata,
	"order" : OrientationDamper.order,
	"tau" : OrientationDamper.tau,
	"tolerance" : OrientationDamper.tolerance,
	"DEF" : OrientationDamper.DEF,
	"USE" : OrientationDamper.USE,
	"class" : OrientationDamper.class_,
	"id" : OrientationDamper.id_,
	"style" : OrientationDamper.style_,
},
"OrientationInterpolator" : {
	"IS" : OrientationInterpolator.IS,
	"key" : OrientationInterpolator.key,
	"keyValue" : OrientationInterpolator.keyValue,
	"metadata" : OrientationInterpolator.metadata,
	"DEF" : OrientationInterpolator.DEF,
	"USE" : OrientationInterpolator.USE,
	"class" : OrientationInterpolator.class_,
	"id" : OrientationInterpolator.id_,
	"style" : OrientationInterpolator.style_,
},
"OrthoViewpoint" : {
	"centerOfRotation" : OrthoViewpoint.centerOfRotation,
	"description" : OrthoViewpoint.description,
	"farDistance" : OrthoViewpoint.farDistance,
	"fieldOfView" : OrthoViewpoint.fieldOfView,
	"IS" : OrthoViewpoint.IS,
	"jump" : OrthoViewpoint.jump,
	"metadata" : OrthoViewpoint.metadata,
	"navigationInfo" : OrthoViewpoint.navigationInfo,
	"nearDistance" : OrthoViewpoint.nearDistance,
	"orientation" : OrthoViewpoint.orientation,
	"position" : OrthoViewpoint.position,
	"retainUserOffsets" : OrthoViewpoint.retainUserOffsets,
	"viewAll" : OrthoViewpoint.viewAll,
	"DEF" : OrthoViewpoint.DEF,
	"USE" : OrthoViewpoint.USE,
	"class" : OrthoViewpoint.class_,
	"id" : OrthoViewpoint.id_,
	"style" : OrthoViewpoint.style_,
},
"OscillatorSource" : {
	"description" : OscillatorSource.description,
	"detune" : OscillatorSource.detune,
	"enabled" : OscillatorSource.enabled,
	"frequency" : OscillatorSource.frequency,
	"gain" : OscillatorSource.gain,
	"IS" : OscillatorSource.IS,
	"metadata" : OscillatorSource.metadata,
	"pauseTime" : OscillatorSource.pauseTime,
	"resumeTime" : OscillatorSource.resumeTime,
	"startTime" : OscillatorSource.startTime,
	"stopTime" : OscillatorSource.stopTime,
	"DEF" : OscillatorSource.DEF,
	"USE" : OscillatorSource.USE,
	"class" : OscillatorSource.class_,
	"id" : OscillatorSource.id_,
	"style" : OscillatorSource.style_,
},
"PackagedShader" : {
	"autoRefresh" : PackagedShader.autoRefresh,
	"autoRefreshTimeLimit" : PackagedShader.autoRefreshTimeLimit,
	"description" : PackagedShader.description,
	"field" : PackagedShader.field,
	"IS" : PackagedShader.IS,
	"language" : PackagedShader.language,
	"load" : PackagedShader.load,
	"metadata" : PackagedShader.metadata,
	"url" : PackagedShader.url,
	"DEF" : PackagedShader.DEF,
	"USE" : PackagedShader.USE,
	"class" : PackagedShader.class_,
	"id" : PackagedShader.id_,
	"style" : PackagedShader.style_,
},
"ParticleSystem" : {
	"appearance" : ParticleSystem.appearance,
	"bboxCenter" : ParticleSystem.bboxCenter,
	"bboxDisplay" : ParticleSystem.bboxDisplay,
	"bboxSize" : ParticleSystem.bboxSize,
	"castShadow" : ParticleSystem.castShadow,
	"color" : ParticleSystem.color,
	"colorKey" : ParticleSystem.colorKey,
	"createParticles" : ParticleSystem.createParticles,
	"emitter" : ParticleSystem.emitter,
	"enabled" : ParticleSystem.enabled,
	"geometry" : ParticleSystem.geometry,
	"geometryType" : ParticleSystem.geometryType,
	"IS" : ParticleSystem.IS,
	"lifetimeVariation" : ParticleSystem.lifetimeVariation,
	"maxParticles" : ParticleSystem.maxParticles,
	"metadata" : ParticleSystem.metadata,
	"particleLifetime" : ParticleSystem.particleLifetime,
	"particleSize" : ParticleSystem.particleSize,
	"physics" : ParticleSystem.physics,
	"texCoord" : ParticleSystem.texCoord,
	"texCoordKey" : ParticleSystem.texCoordKey,
	"visible" : ParticleSystem.visible,
	"DEF" : ParticleSystem.DEF,
	"USE" : ParticleSystem.USE,
	"class" : ParticleSystem.class_,
	"id" : ParticleSystem.id_,
	"style" : ParticleSystem.style_,
},
"PeriodicWave" : {
	"description" : PeriodicWave.description,
	"enabled" : PeriodicWave.enabled,
	"IS" : PeriodicWave.IS,
	"metadata" : PeriodicWave.metadata,
	"optionsImag" : PeriodicWave.optionsImag,
	"optionsReal" : PeriodicWave.optionsReal,
	"type" : PeriodicWave.type,
	"DEF" : PeriodicWave.DEF,
	"USE" : PeriodicWave.USE,
	"class" : PeriodicWave.class_,
	"id" : PeriodicWave.id_,
	"style" : PeriodicWave.style_,
},
"PhysicalMaterial" : {
	"baseColor" : PhysicalMaterial.baseColor,
	"baseTexture" : PhysicalMaterial.baseTexture,
	"baseTextureMapping" : PhysicalMaterial.baseTextureMapping,
	"emissiveColor" : PhysicalMaterial.emissiveColor,
	"emissiveTexture" : PhysicalMaterial.emissiveTexture,
	"emissiveTextureMapping" : PhysicalMaterial.emissiveTextureMapping,
	"IS" : PhysicalMaterial.IS,
	"metadata" : PhysicalMaterial.metadata,
	"metallic" : PhysicalMaterial.metallic,
	"metallicRoughnessTexture" : PhysicalMaterial.metallicRoughnessTexture,
	"metallicRoughnessTextureMapping" : PhysicalMaterial.metallicRoughnessTextureMapping,
	"normalScale" : PhysicalMaterial.normalScale,
	"normalTexture" : PhysicalMaterial.normalTexture,
	"normalTextureMapping" : PhysicalMaterial.normalTextureMapping,
	"occlusionStrength" : PhysicalMaterial.occlusionStrength,
	"occlusionTexture" : PhysicalMaterial.occlusionTexture,
	"occlusionTextureMapping" : PhysicalMaterial.occlusionTextureMapping,
	"roughness" : PhysicalMaterial.roughness,
	"transparency" : PhysicalMaterial.transparency,
	"DEF" : PhysicalMaterial.DEF,
	"USE" : PhysicalMaterial.USE,
	"class" : PhysicalMaterial.class_,
	"id" : PhysicalMaterial.id_,
	"style" : PhysicalMaterial.style_,
},
"PickableGroup" : {
	"addChildren" : PickableGroup.children,
	"bboxCenter" : PickableGroup.bboxCenter,
	"bboxDisplay" : PickableGroup.bboxDisplay,
	"bboxSize" : PickableGroup.bboxSize,
	"children" : PickableGroup.children,
	"description" : PickableGroup.description,
	"IS" : PickableGroup.IS,
	"metadata" : PickableGroup.metadata,
	"objectType" : PickableGroup.objectType,
	"pickable" : PickableGroup.pickable,
	"removeChildren" : PickableGroup.children,
	"visible" : PickableGroup.visible,
	"DEF" : PickableGroup.DEF,
	"USE" : PickableGroup.USE,
	"class" : PickableGroup.class_,
	"id" : PickableGroup.id_,
	"style" : PickableGroup.style_,
},
"PixelTexture" : {
	"description" : PixelTexture.description,
	"image" : PixelTexture.image,
	"IS" : PixelTexture.IS,
	"metadata" : PixelTexture.metadata,
	"repeatS" : PixelTexture.repeatS,
	"repeatT" : PixelTexture.repeatT,
	"textureProperties" : PixelTexture.textureProperties,
	"DEF" : PixelTexture.DEF,
	"USE" : PixelTexture.USE,
	"class" : PixelTexture.class_,
	"id" : PixelTexture.id_,
	"style" : PixelTexture.style_,
},
"PixelTexture3D" : {
	"description" : PixelTexture3D.description,
	"image" : PixelTexture3D.image,
	"IS" : PixelTexture3D.IS,
	"metadata" : PixelTexture3D.metadata,
	"repeatR" : PixelTexture3D.repeatR,
	"repeatS" : PixelTexture3D.repeatS,
	"repeatT" : PixelTexture3D.repeatT,
	"textureProperties" : PixelTexture3D.textureProperties,
	"DEF" : PixelTexture3D.DEF,
	"USE" : PixelTexture3D.USE,
	"class" : PixelTexture3D.class_,
	"id" : PixelTexture3D.id_,
	"style" : PixelTexture3D.style_,
},
"PlaneSensor" : {
	"autoOffset" : PlaneSensor.autoOffset,
	"axisRotation" : PlaneSensor.axisRotation,
	"description" : PlaneSensor.description,
	"enabled" : PlaneSensor.enabled,
	"IS" : PlaneSensor.IS,
	"maxPosition" : PlaneSensor.maxPosition,
	"metadata" : PlaneSensor.metadata,
	"minPosition" : PlaneSensor.minPosition,
	"offset" : PlaneSensor.offset,
	"DEF" : PlaneSensor.DEF,
	"USE" : PlaneSensor.USE,
	"class" : PlaneSensor.class_,
	"id" : PlaneSensor.id_,
	"style" : PlaneSensor.style_,
},
"PointEmitter" : {
	"direction" : PointEmitter.direction,
	"IS" : PointEmitter.IS,
	"mass" : PointEmitter.mass,
	"metadata" : PointEmitter.metadata,
	"on" : PointEmitter.on,
	"position" : PointEmitter.position,
	"speed" : PointEmitter.speed,
	"surfaceArea" : PointEmitter.surfaceArea,
	"variation" : PointEmitter.variation,
	"DEF" : PointEmitter.DEF,
	"USE" : PointEmitter.USE,
	"class" : PointEmitter.class_,
	"id" : PointEmitter.id_,
	"style" : PointEmitter.style_,
},
"PointLight" : {
	"ambientIntensity" : PointLight.ambientIntensity,
	"attenuation" : PointLight.attenuation,
	"color" : PointLight.color,
	"global" : PointLight.global_,
	"intensity" : PointLight.intensity,
	"IS" : PointLight.IS,
	"location" : PointLight.location,
	"metadata" : PointLight.metadata,
	"on" : PointLight.on,
	"radius" : PointLight.radius,
	"shadowIntensity" : PointLight.shadowIntensity,
	"shadows" : PointLight.shadows,
	"DEF" : PointLight.DEF,
	"USE" : PointLight.USE,
	"class" : PointLight.class_,
	"id" : PointLight.id_,
	"style" : PointLight.style_,
},
"PointPickSensor" : {
	"description" : PointPickSensor.description,
	"enabled" : PointPickSensor.enabled,
	"intersectionType" : PointPickSensor.intersectionType,
	"IS" : PointPickSensor.IS,
	"matchCriterion" : PointPickSensor.matchCriterion,
	"metadata" : PointPickSensor.metadata,
	"objectType" : PointPickSensor.objectType,
	"pickingGeometry" : PointPickSensor.pickingGeometry,
	"pickTarget" : PointPickSensor.pickTarget,
	"sortOrder" : PointPickSensor.sortOrder,
	"DEF" : PointPickSensor.DEF,
	"USE" : PointPickSensor.USE,
	"class" : PointPickSensor.class_,
	"id" : PointPickSensor.id_,
	"style" : PointPickSensor.style_,
},
"PointProperties" : {
	"attenuation" : PointProperties.attenuation,
	"IS" : PointProperties.IS,
	"metadata" : PointProperties.metadata,
	"pointSizeMaxValue" : PointProperties.pointSizeMaxValue,
	"pointSizeMinValue" : PointProperties.pointSizeMinValue,
	"pointSizeScaleFactor" : PointProperties.pointSizeScaleFactor,
	"DEF" : PointProperties.DEF,
	"USE" : PointProperties.USE,
	"class" : PointProperties.class_,
	"id" : PointProperties.id_,
	"style" : PointProperties.style_,
},
"PointSet" : {
	"attrib" : PointSet.attrib,
	"color" : PointSet.color,
	"coord" : PointSet.coord,
	"fogCoord" : PointSet.fogCoord,
	"IS" : PointSet.IS,
	"metadata" : PointSet.metadata,
	"normal" : PointSet.normal,
	"DEF" : PointSet.DEF,
	"USE" : PointSet.USE,
	"class" : PointSet.class_,
	"id" : PointSet.id_,
	"style" : PointSet.style_,
},
"Polyline2D" : {
	"IS" : Polyline2D.IS,
	"lineSegments" : Polyline2D.lineSegments,
	"metadata" : Polyline2D.metadata,
	"DEF" : Polyline2D.DEF,
	"USE" : Polyline2D.USE,
	"class" : Polyline2D.class_,
	"id" : Polyline2D.id_,
	"style" : Polyline2D.style_,
},
"PolylineEmitter" : {
	"coord" : PolylineEmitter.coord,
	"coordIndex" : PolylineEmitter.coordIndex,
	"direction" : PolylineEmitter.direction,
	"IS" : PolylineEmitter.IS,
	"mass" : PolylineEmitter.mass,
	"metadata" : PolylineEmitter.metadata,
	"on" : PolylineEmitter.on,
	"speed" : PolylineEmitter.speed,
	"surfaceArea" : PolylineEmitter.surfaceArea,
	"variation" : PolylineEmitter.variation,
	"DEF" : PolylineEmitter.DEF,
	"USE" : PolylineEmitter.USE,
	"class" : PolylineEmitter.class_,
	"id" : PolylineEmitter.id_,
	"style" : PolylineEmitter.style_,
},
"Polypoint2D" : {
	"IS" : Polypoint2D.IS,
	"metadata" : Polypoint2D.metadata,
	"point" : Polypoint2D.point,
	"DEF" : Polypoint2D.DEF,
	"USE" : Polypoint2D.USE,
	"class" : Polypoint2D.class_,
	"id" : Polypoint2D.id_,
	"style" : Polypoint2D.style_,
},
"PositionChaser" : {
	"duration" : PositionChaser.duration,
	"initialDestination" : PositionChaser.initialDestination,
	"initialValue" : PositionChaser.initialValue,
	"IS" : PositionChaser.IS,
	"metadata" : PositionChaser.metadata,
	"DEF" : PositionChaser.DEF,
	"USE" : PositionChaser.USE,
	"class" : PositionChaser.class_,
	"id" : PositionChaser.id_,
	"style" : PositionChaser.style_,
},
"PositionChaser2D" : {
	"duration" : PositionChaser2D.duration,
	"initialDestination" : PositionChaser2D.initialDestination,
	"initialValue" : PositionChaser2D.initialValue,
	"IS" : PositionChaser2D.IS,
	"metadata" : PositionChaser2D.metadata,
	"DEF" : PositionChaser2D.DEF,
	"USE" : PositionChaser2D.USE,
	"class" : PositionChaser2D.class_,
	"id" : PositionChaser2D.id_,
	"style" : PositionChaser2D.style_,
},
"PositionDamper" : {
	"initialDestination" : PositionDamper.initialDestination,
	"initialValue" : PositionDamper.initialValue,
	"IS" : PositionDamper.IS,
	"metadata" : PositionDamper.metadata,
	"order" : PositionDamper.order,
	"tau" : PositionDamper.tau,
	"tolerance" : PositionDamper.tolerance,
	"DEF" : PositionDamper.DEF,
	"USE" : PositionDamper.USE,
	"class" : PositionDamper.class_,
	"id" : PositionDamper.id_,
	"style" : PositionDamper.style_,
},
"PositionDamper2D" : {
	"initialDestination" : PositionDamper2D.initialDestination,
	"initialValue" : PositionDamper2D.initialValue,
	"IS" : PositionDamper2D.IS,
	"metadata" : PositionDamper2D.metadata,
	"order" : PositionDamper2D.order,
	"tau" : PositionDamper2D.tau,
	"tolerance" : PositionDamper2D.tolerance,
	"DEF" : PositionDamper2D.DEF,
	"USE" : PositionDamper2D.USE,
	"class" : PositionDamper2D.class_,
	"id" : PositionDamper2D.id_,
	"style" : PositionDamper2D.style_,
},
"PositionInterpolator" : {
	"IS" : PositionInterpolator.IS,
	"key" : PositionInterpolator.key,
	"keyValue" : PositionInterpolator.keyValue,
	"metadata" : PositionInterpolator.metadata,
	"DEF" : PositionInterpolator.DEF,
	"USE" : PositionInterpolator.USE,
	"class" : PositionInterpolator.class_,
	"id" : PositionInterpolator.id_,
	"style" : PositionInterpolator.style_,
},
"PositionInterpolator2D" : {
	"IS" : PositionInterpolator2D.IS,
	"key" : PositionInterpolator2D.key,
	"keyValue" : PositionInterpolator2D.keyValue,
	"metadata" : PositionInterpolator2D.metadata,
	"DEF" : PositionInterpolator2D.DEF,
	"USE" : PositionInterpolator2D.USE,
	"class" : PositionInterpolator2D.class_,
	"id" : PositionInterpolator2D.id_,
	"style" : PositionInterpolator2D.style_,
},
"PrimitivePickSensor" : {
	"description" : PrimitivePickSensor.description,
	"enabled" : PrimitivePickSensor.enabled,
	"intersectionType" : PrimitivePickSensor.intersectionType,
	"IS" : PrimitivePickSensor.IS,
	"matchCriterion" : PrimitivePickSensor.matchCriterion,
	"metadata" : PrimitivePickSensor.metadata,
	"objectType" : PrimitivePickSensor.objectType,
	"pickingGeometry" : PrimitivePickSensor.pickingGeometry,
	"pickTarget" : PrimitivePickSensor.pickTarget,
	"sortOrder" : PrimitivePickSensor.sortOrder,
	"DEF" : PrimitivePickSensor.DEF,
	"USE" : PrimitivePickSensor.USE,
	"class" : PrimitivePickSensor.class_,
	"id" : PrimitivePickSensor.id_,
	"style" : PrimitivePickSensor.style_,
},
"ProgramShader" : {
	"IS" : ProgramShader.IS,
	"language" : ProgramShader.language,
	"metadata" : ProgramShader.metadata,
	"programs" : ProgramShader.programs,
	"DEF" : ProgramShader.DEF,
	"USE" : ProgramShader.USE,
	"class" : ProgramShader.class_,
	"id" : ProgramShader.id_,
	"style" : ProgramShader.style_,
},
"ProjectionVolumeStyle" : {
	"enabled" : ProjectionVolumeStyle.enabled,
	"intensityThreshold" : ProjectionVolumeStyle.intensityThreshold,
	"IS" : ProjectionVolumeStyle.IS,
	"metadata" : ProjectionVolumeStyle.metadata,
	"type" : ProjectionVolumeStyle.type,
	"DEF" : ProjectionVolumeStyle.DEF,
	"USE" : ProjectionVolumeStyle.USE,
	"class" : ProjectionVolumeStyle.class_,
	"id" : ProjectionVolumeStyle.id_,
	"style" : ProjectionVolumeStyle.style_,
},
"ProtoInstance" : {
	"fieldValue" : ProtoInstance.fieldValue,
	"IS" : ProtoInstance.IS,
	"metadata" : ProtoInstance.metadata,
	"name" : ProtoInstance.name,
	"DEF" : ProtoInstance.DEF,
	"USE" : ProtoInstance.USE,
	"class" : ProtoInstance.class_,
	"id" : ProtoInstance.id_,
	"style" : ProtoInstance.style_,
},
"ProximitySensor" : {
	"center" : ProximitySensor.center,
	"description" : ProximitySensor.description,
	"enabled" : ProximitySensor.enabled,
	"IS" : ProximitySensor.IS,
	"metadata" : ProximitySensor.metadata,
	"size" : ProximitySensor.size,
	"DEF" : ProximitySensor.DEF,
	"USE" : ProximitySensor.USE,
	"class" : ProximitySensor.class_,
	"id" : ProximitySensor.id_,
	"style" : ProximitySensor.style_,
},
"QuadSet" : {
	"attrib" : QuadSet.attrib,
	"ccw" : QuadSet.ccw,
	"color" : QuadSet.color,
	"colorPerVertex" : QuadSet.colorPerVertex,
	"coord" : QuadSet.coord,
	"fogCoord" : QuadSet.fogCoord,
	"IS" : QuadSet.IS,
	"metadata" : QuadSet.metadata,
	"normal" : QuadSet.normal,
	"normalPerVertex" : QuadSet.normalPerVertex,
	"solid" : QuadSet.solid,
	"texCoord" : QuadSet.texCoord,
	"DEF" : QuadSet.DEF,
	"USE" : QuadSet.USE,
	"class" : QuadSet.class_,
	"id" : QuadSet.id_,
	"style" : QuadSet.style_,
},
"ReceiverPdu" : {
	"address" : ReceiverPdu.address,
	"applicationID" : ReceiverPdu.applicationID,
	"bboxCenter" : ReceiverPdu.bboxCenter,
	"bboxDisplay" : ReceiverPdu.bboxDisplay,
	"bboxSize" : ReceiverPdu.bboxSize,
	"description" : ReceiverPdu.description,
	"enabled" : ReceiverPdu.enabled,
	"entityID" : ReceiverPdu.entityID,
	"geoCoords" : ReceiverPdu.geoCoords,
	"geoSystem" : ReceiverPdu.geoSystem,
	"IS" : ReceiverPdu.IS,
	"metadata" : ReceiverPdu.metadata,
	"multicastRelayHost" : ReceiverPdu.multicastRelayHost,
	"multicastRelayPort" : ReceiverPdu.multicastRelayPort,
	"networkMode" : ReceiverPdu.networkMode,
	"port" : ReceiverPdu.port,
	"radioID" : ReceiverPdu.radioID,
	"readInterval" : ReceiverPdu.readInterval,
	"receivedPower" : ReceiverPdu.receivedPower,
	"receiverState" : ReceiverPdu.receiverState,
	"rtpHeaderExpected" : ReceiverPdu.rtpHeaderExpected,
	"siteID" : ReceiverPdu.siteID,
	"transmitterApplicationID" : ReceiverPdu.transmitterApplicationID,
	"transmitterEntityID" : ReceiverPdu.transmitterEntityID,
	"transmitterRadioID" : ReceiverPdu.transmitterRadioID,
	"transmitterSiteID" : ReceiverPdu.transmitterSiteID,
	"visible" : ReceiverPdu.visible,
	"whichGeometry" : ReceiverPdu.whichGeometry,
	"writeInterval" : ReceiverPdu.writeInterval,
	"DEF" : ReceiverPdu.DEF,
	"USE" : ReceiverPdu.USE,
	"class" : ReceiverPdu.class_,
	"id" : ReceiverPdu.id_,
	"style" : ReceiverPdu.style_,
},
"Rectangle2D" : {
	"IS" : Rectangle2D.IS,
	"metadata" : Rectangle2D.metadata,
	"size" : Rectangle2D.size,
	"solid" : Rectangle2D.solid,
	"DEF" : Rectangle2D.DEF,
	"USE" : Rectangle2D.USE,
	"class" : Rectangle2D.class_,
	"id" : Rectangle2D.id_,
	"style" : Rectangle2D.style_,
},
"RigidBody" : {
	"angularDampingFactor" : RigidBody.angularDampingFactor,
	"angularVelocity" : RigidBody.angularVelocity,
	"autoDamp" : RigidBody.autoDamp,
	"autoDisable" : RigidBody.autoDisable,
	"bboxCenter" : RigidBody.bboxCenter,
	"bboxDisplay" : RigidBody.bboxDisplay,
	"bboxSize" : RigidBody.bboxSize,
	"centerOfMass" : RigidBody.centerOfMass,
	"disableAngularSpeed" : RigidBody.disableAngularSpeed,
	"disableLinearSpeed" : RigidBody.disableLinearSpeed,
	"disableTime" : RigidBody.disableTime,
	"enabled" : RigidBody.enabled,
	"finiteRotationAxis" : RigidBody.finiteRotationAxis,
	"fixed" : RigidBody.fixed,
	"forces" : RigidBody.forces,
	"geometry" : RigidBody.geometry,
	"inertia" : RigidBody.inertia,
	"IS" : RigidBody.IS,
	"linearDampingFactor" : RigidBody.linearDampingFactor,
	"linearVelocity" : RigidBody.linearVelocity,
	"mass" : RigidBody.mass,
	"massDensityModel" : RigidBody.massDensityModel,
	"metadata" : RigidBody.metadata,
	"orientation" : RigidBody.orientation,
	"position" : RigidBody.position,
	"torques" : RigidBody.torques,
	"useFiniteRotation" : RigidBody.useFiniteRotation,
	"useGlobalGravity" : RigidBody.useGlobalGravity,
	"visible" : RigidBody.visible,
	"DEF" : RigidBody.DEF,
	"USE" : RigidBody.USE,
	"class" : RigidBody.class_,
	"id" : RigidBody.id_,
	"style" : RigidBody.style_,
},
"RigidBodyCollection" : {
	"autoDisable" : RigidBodyCollection.autoDisable,
	"bboxCenter" : RigidBodyCollection.bboxCenter,
	"bboxDisplay" : RigidBodyCollection.bboxDisplay,
	"bboxSize" : RigidBodyCollection.bboxSize,
	"bodies" : RigidBodyCollection.bodies,
	"collider" : RigidBodyCollection.collider,
	"constantForceMix" : RigidBodyCollection.constantForceMix,
	"contactSurfaceThickness" : RigidBodyCollection.contactSurfaceThickness,
	"disableAngularSpeed" : RigidBodyCollection.disableAngularSpeed,
	"disableLinearSpeed" : RigidBodyCollection.disableLinearSpeed,
	"disableTime" : RigidBodyCollection.disableTime,
	"enabled" : RigidBodyCollection.enabled,
	"errorCorrection" : RigidBodyCollection.errorCorrection,
	"gravity" : RigidBodyCollection.gravity,
	"IS" : RigidBodyCollection.IS,
	"iterations" : RigidBodyCollection.iterations,
	"joints" : RigidBodyCollection.joints,
	"maxCorrectionSpeed" : RigidBodyCollection.maxCorrectionSpeed,
	"metadata" : RigidBodyCollection.metadata,
	"preferAccuracy" : RigidBodyCollection.preferAccuracy,
	"visible" : RigidBodyCollection.visible,
	"DEF" : RigidBodyCollection.DEF,
	"USE" : RigidBodyCollection.USE,
	"class" : RigidBodyCollection.class_,
	"id" : RigidBodyCollection.id_,
	"style" : RigidBodyCollection.style_,
},
"ScalarChaser" : {
	"duration" : ScalarChaser.duration,
	"initialDestination" : ScalarChaser.initialDestination,
	"initialValue" : ScalarChaser.initialValue,
	"IS" : ScalarChaser.IS,
	"metadata" : ScalarChaser.metadata,
	"DEF" : ScalarChaser.DEF,
	"USE" : ScalarChaser.USE,
	"class" : ScalarChaser.class_,
	"id" : ScalarChaser.id_,
	"style" : ScalarChaser.style_,
},
"ScalarDamper" : {
	"initialDestination" : ScalarDamper.initialDestination,
	"initialValue" : ScalarDamper.initialValue,
	"IS" : ScalarDamper.IS,
	"metadata" : ScalarDamper.metadata,
	"order" : ScalarDamper.order,
	"tau" : ScalarDamper.tau,
	"tolerance" : ScalarDamper.tolerance,
	"DEF" : ScalarDamper.DEF,
	"USE" : ScalarDamper.USE,
	"class" : ScalarDamper.class_,
	"id" : ScalarDamper.id_,
	"style" : ScalarDamper.style_,
},
"ScalarInterpolator" : {
	"IS" : ScalarInterpolator.IS,
	"key" : ScalarInterpolator.key,
	"keyValue" : ScalarInterpolator.keyValue,
	"metadata" : ScalarInterpolator.metadata,
	"DEF" : ScalarInterpolator.DEF,
	"USE" : ScalarInterpolator.USE,
	"class" : ScalarInterpolator.class_,
	"id" : ScalarInterpolator.id_,
	"style" : ScalarInterpolator.style_,
},
"ScreenFontStyle" : {
	"class" : ScreenFontStyle.class_,
	"family" : ScreenFontStyle.family,
	"horizontal" : ScreenFontStyle.horizontal,
	"id" : ScreenFontStyle.id_,
	"IS" : ScreenFontStyle.IS,
	"justify" : ScreenFontStyle.justify,
	"language" : ScreenFontStyle.language,
	"leftToRight" : ScreenFontStyle.leftToRight,
	"metadata" : ScreenFontStyle.metadata,
	"pointSize" : ScreenFontStyle.pointSize,
	"spacing" : ScreenFontStyle.spacing,
	"style" : ScreenFontStyle.style_,
	"topToBottom" : ScreenFontStyle.topToBottom,
	"DEF" : ScreenFontStyle.DEF,
	"USE" : ScreenFontStyle.USE,
},
"ScreenGroup" : {
	"addChildren" : ScreenGroup.children,
	"bboxCenter" : ScreenGroup.bboxCenter,
	"bboxDisplay" : ScreenGroup.bboxDisplay,
	"bboxSize" : ScreenGroup.bboxSize,
	"children" : ScreenGroup.children,
	"IS" : ScreenGroup.IS,
	"metadata" : ScreenGroup.metadata,
	"removeChildren" : ScreenGroup.children,
	"visible" : ScreenGroup.visible,
	"DEF" : ScreenGroup.DEF,
	"USE" : ScreenGroup.USE,
	"class" : ScreenGroup.class_,
	"id" : ScreenGroup.id_,
	"style" : ScreenGroup.style_,
},
"Script" : {
	"autoRefresh" : Script.autoRefresh,
	"autoRefreshTimeLimit" : Script.autoRefreshTimeLimit,
	"description" : Script.description,
	"directOutput" : Script.directOutput,
	"field" : Script.field,
	"IS" : Script.IS,
	"load" : Script.load,
	"metadata" : Script.metadata,
	"mustEvaluate" : Script.mustEvaluate,
	"sourceCode" : Script.sourceCode,
	"url" : Script.url,
	"DEF" : Script.DEF,
	"USE" : Script.USE,
	"class" : Script.class_,
	"id" : Script.id_,
	"style" : Script.style_,
},
"SegmentedVolumeData" : {
	"bboxCenter" : SegmentedVolumeData.bboxCenter,
	"bboxDisplay" : SegmentedVolumeData.bboxDisplay,
	"bboxSize" : SegmentedVolumeData.bboxSize,
	"dimensions" : SegmentedVolumeData.dimensions,
	"IS" : SegmentedVolumeData.IS,
	"metadata" : SegmentedVolumeData.metadata,
	"renderStyle" : SegmentedVolumeData.renderStyle,
	"segmentEnabled" : SegmentedVolumeData.segmentEnabled,
	"segmentIdentifiers" : SegmentedVolumeData.segmentIdentifiers,
	"visible" : SegmentedVolumeData.visible,
	"voxels" : SegmentedVolumeData.voxels,
	"DEF" : SegmentedVolumeData.DEF,
	"USE" : SegmentedVolumeData.USE,
	"class" : SegmentedVolumeData.class_,
	"id" : SegmentedVolumeData.id_,
	"style" : SegmentedVolumeData.style_,
},
"ShadedVolumeStyle" : {
	"enabled" : ShadedVolumeStyle.enabled,
	"IS" : ShadedVolumeStyle.IS,
	"lighting" : ShadedVolumeStyle.lighting,
	"material" : ShadedVolumeStyle.material,
	"metadata" : ShadedVolumeStyle.metadata,
	"phaseFunction" : ShadedVolumeStyle.phaseFunction,
	"shadows" : ShadedVolumeStyle.shadows,
	"surfaceNormals" : ShadedVolumeStyle.surfaceNormals,
	"DEF" : ShadedVolumeStyle.DEF,
	"USE" : ShadedVolumeStyle.USE,
	"class" : ShadedVolumeStyle.class_,
	"id" : ShadedVolumeStyle.id_,
	"style" : ShadedVolumeStyle.style_,
},
"ShaderPart" : {
	"autoRefresh" : ShaderPart.autoRefresh,
	"autoRefreshTimeLimit" : ShaderPart.autoRefreshTimeLimit,
	"description" : ShaderPart.description,
	"IS" : ShaderPart.IS,
	"load" : ShaderPart.load,
	"metadata" : ShaderPart.metadata,
	"sourceCode" : ShaderPart.sourceCode,
	"type" : ShaderPart.type,
	"url" : ShaderPart.url,
	"DEF" : ShaderPart.DEF,
	"USE" : ShaderPart.USE,
	"class" : ShaderPart.class_,
	"id" : ShaderPart.id_,
	"style" : ShaderPart.style_,
},
"ShaderProgram" : {
	"autoRefresh" : ShaderProgram.autoRefresh,
	"autoRefreshTimeLimit" : ShaderProgram.autoRefreshTimeLimit,
	"description" : ShaderProgram.description,
	"field" : ShaderProgram.field,
	"IS" : ShaderProgram.IS,
	"load" : ShaderProgram.load,
	"metadata" : ShaderProgram.metadata,
	"sourceCode" : ShaderProgram.sourceCode,
	"type" : ShaderProgram.type,
	"url" : ShaderProgram.url,
	"DEF" : ShaderProgram.DEF,
	"USE" : ShaderProgram.USE,
	"class" : ShaderProgram.class_,
	"id" : ShaderProgram.id_,
	"style" : ShaderProgram.style_,
},
"Shape" : {
	"appearance" : Shape.appearance,
	"bboxCenter" : Shape.bboxCenter,
	"bboxDisplay" : Shape.bboxDisplay,
	"bboxSize" : Shape.bboxSize,
	"castShadow" : Shape.castShadow,
	"geometry" : Shape.geometry,
	"IS" : Shape.IS,
	"metadata" : Shape.metadata,
	"visible" : Shape.visible,
	"DEF" : Shape.DEF,
	"USE" : Shape.USE,
	"class" : Shape.class_,
	"id" : Shape.id_,
	"style" : Shape.style_,
},
"SignalPdu" : {
	"address" : SignalPdu.address,
	"applicationID" : SignalPdu.applicationID,
	"bboxCenter" : SignalPdu.bboxCenter,
	"bboxDisplay" : SignalPdu.bboxDisplay,
	"bboxSize" : SignalPdu.bboxSize,
	"data" : SignalPdu.data,
	"dataLength" : SignalPdu.dataLength,
	"description" : SignalPdu.description,
	"enabled" : SignalPdu.enabled,
	"encodingScheme" : SignalPdu.encodingScheme,
	"entityID" : SignalPdu.entityID,
	"geoCoords" : SignalPdu.geoCoords,
	"geoSystem" : SignalPdu.geoSystem,
	"IS" : SignalPdu.IS,
	"metadata" : SignalPdu.metadata,
	"multicastRelayHost" : SignalPdu.multicastRelayHost,
	"multicastRelayPort" : SignalPdu.multicastRelayPort,
	"networkMode" : SignalPdu.networkMode,
	"port" : SignalPdu.port,
	"radioID" : SignalPdu.radioID,
	"readInterval" : SignalPdu.readInterval,
	"rtpHeaderExpected" : SignalPdu.rtpHeaderExpected,
	"sampleRate" : SignalPdu.sampleRate,
	"samples" : SignalPdu.samples,
	"siteID" : SignalPdu.siteID,
	"tdlType" : SignalPdu.tdlType,
	"visible" : SignalPdu.visible,
	"whichGeometry" : SignalPdu.whichGeometry,
	"writeInterval" : SignalPdu.writeInterval,
	"DEF" : SignalPdu.DEF,
	"USE" : SignalPdu.USE,
	"class" : SignalPdu.class_,
	"id" : SignalPdu.id_,
	"style" : SignalPdu.style_,
},
"SilhouetteEnhancementVolumeStyle" : {
	"enabled" : SilhouetteEnhancementVolumeStyle.enabled,
	"IS" : SilhouetteEnhancementVolumeStyle.IS,
	"metadata" : SilhouetteEnhancementVolumeStyle.metadata,
	"silhouetteBoundaryOpacity" : SilhouetteEnhancementVolumeStyle.silhouetteBoundaryOpacity,
	"silhouetteRetainedOpacity" : SilhouetteEnhancementVolumeStyle.silhouetteRetainedOpacity,
	"silhouetteSharpness" : SilhouetteEnhancementVolumeStyle.silhouetteSharpness,
	"surfaceNormals" : SilhouetteEnhancementVolumeStyle.surfaceNormals,
	"DEF" : SilhouetteEnhancementVolumeStyle.DEF,
	"USE" : SilhouetteEnhancementVolumeStyle.USE,
	"class" : SilhouetteEnhancementVolumeStyle.class_,
	"id" : SilhouetteEnhancementVolumeStyle.id_,
	"style" : SilhouetteEnhancementVolumeStyle.style_,
},
"SingleAxisHingeJoint" : {
	"anchorPoint" : SingleAxisHingeJoint.anchorPoint,
	"axis" : SingleAxisHingeJoint.axis,
	"body1" : SingleAxisHingeJoint.body1,
	"body2" : SingleAxisHingeJoint.body2,
	"forceOutput" : SingleAxisHingeJoint.forceOutput,
	"IS" : SingleAxisHingeJoint.IS,
	"maxAngle" : SingleAxisHingeJoint.maxAngle,
	"metadata" : SingleAxisHingeJoint.metadata,
	"minAngle" : SingleAxisHingeJoint.minAngle,
	"stopBounce" : SingleAxisHingeJoint.stopBounce,
	"stopErrorCorrection" : SingleAxisHingeJoint.stopErrorCorrection,
	"DEF" : SingleAxisHingeJoint.DEF,
	"USE" : SingleAxisHingeJoint.USE,
	"class" : SingleAxisHingeJoint.class_,
	"id" : SingleAxisHingeJoint.id_,
	"style" : SingleAxisHingeJoint.style_,
},
"SliderJoint" : {
	"axis" : SliderJoint.axis,
	"body1" : SliderJoint.body1,
	"body2" : SliderJoint.body2,
	"forceOutput" : SliderJoint.forceOutput,
	"IS" : SliderJoint.IS,
	"maxSeparation" : SliderJoint.maxSeparation,
	"metadata" : SliderJoint.metadata,
	"minSeparation" : SliderJoint.minSeparation,
	"sliderForce" : SliderJoint.sliderForce,
	"stopBounce" : SliderJoint.stopBounce,
	"stopErrorCorrection" : SliderJoint.stopErrorCorrection,
	"DEF" : SliderJoint.DEF,
	"USE" : SliderJoint.USE,
	"class" : SliderJoint.class_,
	"id" : SliderJoint.id_,
	"style" : SliderJoint.style_,
},
"Sound" : {
	"description" : Sound.description,
	"direction" : Sound.direction,
	"enabled" : Sound.enabled,
	"intensity" : Sound.intensity,
	"IS" : Sound.IS,
	"location" : Sound.location,
	"maxBack" : Sound.maxBack,
	"maxFront" : Sound.maxFront,
	"metadata" : Sound.metadata,
	"minBack" : Sound.minBack,
	"minFront" : Sound.minFront,
	"priority" : Sound.priority,
	"source" : Sound.source,
	"spatialize" : Sound.spatialize,
	"DEF" : Sound.DEF,
	"USE" : Sound.USE,
	"class" : Sound.class_,
	"id" : Sound.id_,
	"style" : Sound.style_,
},
"SpatialSound" : {
	"children" : SpatialSound.children,
	"coneInnerAngle" : SpatialSound.coneInnerAngle,
	"coneOuterAngle" : SpatialSound.coneOuterAngle,
	"coneOuterGain" : SpatialSound.coneOuterGain,
	"description" : SpatialSound.description,
	"direction" : SpatialSound.direction,
	"distanceModel" : SpatialSound.distanceModel,
	"dopplerEnabled" : SpatialSound.dopplerEnabled,
	"enabled" : SpatialSound.enabled,
	"enableHRTF" : SpatialSound.enableHRTF,
	"gain" : SpatialSound.gain,
	"intensity" : SpatialSound.intensity,
	"IS" : SpatialSound.IS,
	"location" : SpatialSound.location,
	"maxDistance" : SpatialSound.maxDistance,
	"metadata" : SpatialSound.metadata,
	"priority" : SpatialSound.priority,
	"referenceDistance" : SpatialSound.referenceDistance,
	"rolloffFactor" : SpatialSound.rolloffFactor,
	"spatialize" : SpatialSound.spatialize,
	"DEF" : SpatialSound.DEF,
	"USE" : SpatialSound.USE,
	"class" : SpatialSound.class_,
	"id" : SpatialSound.id_,
	"style" : SpatialSound.style_,
},
"Sphere" : {
	"IS" : Sphere.IS,
	"metadata" : Sphere.metadata,
	"radius" : Sphere.radius,
	"solid" : Sphere.solid,
	"DEF" : Sphere.DEF,
	"USE" : Sphere.USE,
	"class" : Sphere.class_,
	"id" : Sphere.id_,
	"style" : Sphere.style_,
},
"SphereSensor" : {
	"autoOffset" : SphereSensor.autoOffset,
	"description" : SphereSensor.description,
	"enabled" : SphereSensor.enabled,
	"IS" : SphereSensor.IS,
	"metadata" : SphereSensor.metadata,
	"offset" : SphereSensor.offset,
	"DEF" : SphereSensor.DEF,
	"USE" : SphereSensor.USE,
	"class" : SphereSensor.class_,
	"id" : SphereSensor.id_,
	"style" : SphereSensor.style_,
},
"SplinePositionInterpolator" : {
	"closed" : SplinePositionInterpolator.closed,
	"IS" : SplinePositionInterpolator.IS,
	"key" : SplinePositionInterpolator.key,
	"keyValue" : SplinePositionInterpolator.keyValue,
	"keyVelocity" : SplinePositionInterpolator.keyVelocity,
	"metadata" : SplinePositionInterpolator.metadata,
	"normalizeVelocity" : SplinePositionInterpolator.normalizeVelocity,
	"DEF" : SplinePositionInterpolator.DEF,
	"USE" : SplinePositionInterpolator.USE,
	"class" : SplinePositionInterpolator.class_,
	"id" : SplinePositionInterpolator.id_,
	"style" : SplinePositionInterpolator.style_,
},
"SplinePositionInterpolator2D" : {
	"closed" : SplinePositionInterpolator2D.closed,
	"IS" : SplinePositionInterpolator2D.IS,
	"key" : SplinePositionInterpolator2D.key,
	"keyValue" : SplinePositionInterpolator2D.keyValue,
	"keyVelocity" : SplinePositionInterpolator2D.keyVelocity,
	"metadata" : SplinePositionInterpolator2D.metadata,
	"normalizeVelocity" : SplinePositionInterpolator2D.normalizeVelocity,
	"DEF" : SplinePositionInterpolator2D.DEF,
	"USE" : SplinePositionInterpolator2D.USE,
	"class" : SplinePositionInterpolator2D.class_,
	"id" : SplinePositionInterpolator2D.id_,
	"style" : SplinePositionInterpolator2D.style_,
},
"SplineScalarInterpolator" : {
	"closed" : SplineScalarInterpolator.closed,
	"IS" : SplineScalarInterpolator.IS,
	"key" : SplineScalarInterpolator.key,
	"keyValue" : SplineScalarInterpolator.keyValue,
	"keyVelocity" : SplineScalarInterpolator.keyVelocity,
	"metadata" : SplineScalarInterpolator.metadata,
	"normalizeVelocity" : SplineScalarInterpolator.normalizeVelocity,
	"DEF" : SplineScalarInterpolator.DEF,
	"USE" : SplineScalarInterpolator.USE,
	"class" : SplineScalarInterpolator.class_,
	"id" : SplineScalarInterpolator.id_,
	"style" : SplineScalarInterpolator.style_,
},
"SpotLight" : {
	"ambientIntensity" : SpotLight.ambientIntensity,
	"attenuation" : SpotLight.attenuation,
	"beamWidth" : SpotLight.beamWidth,
	"color" : SpotLight.color,
	"cutOffAngle" : SpotLight.cutOffAngle,
	"direction" : SpotLight.direction,
	"global" : SpotLight.global_,
	"intensity" : SpotLight.intensity,
	"IS" : SpotLight.IS,
	"location" : SpotLight.location,
	"metadata" : SpotLight.metadata,
	"on" : SpotLight.on,
	"radius" : SpotLight.radius,
	"shadowIntensity" : SpotLight.shadowIntensity,
	"shadows" : SpotLight.shadows,
	"DEF" : SpotLight.DEF,
	"USE" : SpotLight.USE,
	"class" : SpotLight.class_,
	"id" : SpotLight.id_,
	"style" : SpotLight.style_,
},
"SquadOrientationInterpolator" : {
	"IS" : SquadOrientationInterpolator.IS,
	"key" : SquadOrientationInterpolator.key,
	"keyValue" : SquadOrientationInterpolator.keyValue,
	"metadata" : SquadOrientationInterpolator.metadata,
	"normalizeVelocity" : SquadOrientationInterpolator.normalizeVelocity,
	"DEF" : SquadOrientationInterpolator.DEF,
	"USE" : SquadOrientationInterpolator.USE,
	"class" : SquadOrientationInterpolator.class_,
	"id" : SquadOrientationInterpolator.id_,
	"style" : SquadOrientationInterpolator.style_,
},
"StaticGroup" : {
	"bboxCenter" : StaticGroup.bboxCenter,
	"bboxDisplay" : StaticGroup.bboxDisplay,
	"bboxSize" : StaticGroup.bboxSize,
	"children" : StaticGroup.children,
	"IS" : StaticGroup.IS,
	"metadata" : StaticGroup.metadata,
	"visible" : StaticGroup.visible,
	"DEF" : StaticGroup.DEF,
	"USE" : StaticGroup.USE,
	"class" : StaticGroup.class_,
	"id" : StaticGroup.id_,
	"style" : StaticGroup.style_,
},
"StreamAudioDestination" : {
	"channelCountMode" : StreamAudioDestination.channelCountMode,
	"channelInterpretation" : StreamAudioDestination.channelInterpretation,
	"children" : StreamAudioDestination.children,
	"description" : StreamAudioDestination.description,
	"enabled" : StreamAudioDestination.enabled,
	"gain" : StreamAudioDestination.gain,
	"IS" : StreamAudioDestination.IS,
	"mediaDeviceID" : StreamAudioDestination.mediaDeviceID,
	"metadata" : StreamAudioDestination.metadata,
	"streamIdentifier" : StreamAudioDestination.streamIdentifier,
	"DEF" : StreamAudioDestination.DEF,
	"USE" : StreamAudioDestination.USE,
	"class" : StreamAudioDestination.class_,
	"id" : StreamAudioDestination.id_,
	"style" : StreamAudioDestination.style_,
},
"StreamAudioSource" : {
	"channelCountMode" : StreamAudioSource.channelCountMode,
	"channelInterpretation" : StreamAudioSource.channelInterpretation,
	"description" : StreamAudioSource.description,
	"enabled" : StreamAudioSource.enabled,
	"gain" : StreamAudioSource.gain,
	"IS" : StreamAudioSource.IS,
	"metadata" : StreamAudioSource.metadata,
	"pauseTime" : StreamAudioSource.pauseTime,
	"resumeTime" : StreamAudioSource.resumeTime,
	"startTime" : StreamAudioSource.startTime,
	"stopTime" : StreamAudioSource.stopTime,
	"streamIdentifier" : StreamAudioSource.streamIdentifier,
	"DEF" : StreamAudioSource.DEF,
	"USE" : StreamAudioSource.USE,
	"class" : StreamAudioSource.class_,
	"id" : StreamAudioSource.id_,
	"style" : StreamAudioSource.style_,
},
"StringSensor" : {
	"deletionAllowed" : StringSensor.deletionAllowed,
	"description" : StringSensor.description,
	"enabled" : StringSensor.enabled,
	"IS" : StringSensor.IS,
	"metadata" : StringSensor.metadata,
	"DEF" : StringSensor.DEF,
	"USE" : StringSensor.USE,
	"class" : StringSensor.class_,
	"id" : StringSensor.id_,
	"style" : StringSensor.style_,
},
"SurfaceEmitter" : {
	"coordIndex" : SurfaceEmitter.coordIndex,
	"IS" : SurfaceEmitter.IS,
	"mass" : SurfaceEmitter.mass,
	"metadata" : SurfaceEmitter.metadata,
	"on" : SurfaceEmitter.on,
	"speed" : SurfaceEmitter.speed,
	"surface" : SurfaceEmitter.surface,
	"surfaceArea" : SurfaceEmitter.surfaceArea,
	"variation" : SurfaceEmitter.variation,
	"DEF" : SurfaceEmitter.DEF,
	"USE" : SurfaceEmitter.USE,
	"class" : SurfaceEmitter.class_,
	"id" : SurfaceEmitter.id_,
	"style" : SurfaceEmitter.style_,
},
"Switch" : {
	"addChildren" : Switch.children,
	"bboxCenter" : Switch.bboxCenter,
	"bboxDisplay" : Switch.bboxDisplay,
	"bboxSize" : Switch.bboxSize,
	"children" : Switch.children,
	"IS" : Switch.IS,
	"metadata" : Switch.metadata,
	"removeChildren" : Switch.children,
	"visible" : Switch.visible,
	"whichChoice" : Switch.whichChoice,
	"DEF" : Switch.DEF,
	"USE" : Switch.USE,
	"class" : Switch.class_,
	"id" : Switch.id_,
	"style" : Switch.style_,
},
"TexCoordChaser2D" : {
	"duration" : TexCoordChaser2D.duration,
	"initialDestination" : TexCoordChaser2D.initialDestination,
	"initialValue" : TexCoordChaser2D.initialValue,
	"IS" : TexCoordChaser2D.IS,
	"metadata" : TexCoordChaser2D.metadata,
	"DEF" : TexCoordChaser2D.DEF,
	"USE" : TexCoordChaser2D.USE,
	"class" : TexCoordChaser2D.class_,
	"id" : TexCoordChaser2D.id_,
	"style" : TexCoordChaser2D.style_,
},
"TexCoordDamper2D" : {
	"initialDestination" : TexCoordDamper2D.initialDestination,
	"initialValue" : TexCoordDamper2D.initialValue,
	"IS" : TexCoordDamper2D.IS,
	"metadata" : TexCoordDamper2D.metadata,
	"order" : TexCoordDamper2D.order,
	"tau" : TexCoordDamper2D.tau,
	"tolerance" : TexCoordDamper2D.tolerance,
	"DEF" : TexCoordDamper2D.DEF,
	"USE" : TexCoordDamper2D.USE,
	"class" : TexCoordDamper2D.class_,
	"id" : TexCoordDamper2D.id_,
	"style" : TexCoordDamper2D.style_,
},
"Text" : {
	"fontStyle" : Text.fontStyle,
	"IS" : Text.IS,
	"length" : Text.length,
	"maxExtent" : Text.maxExtent,
	"metadata" : Text.metadata,
	"solid" : Text.solid,
	"string" : Text.string,
	"DEF" : Text.DEF,
	"USE" : Text.USE,
	"class" : Text.class_,
	"id" : Text.id_,
	"style" : Text.style_,
},
"TextureBackground" : {
	"backTexture" : TextureBackground.backTexture,
	"bottomTexture" : TextureBackground.bottomTexture,
	"frontTexture" : TextureBackground.frontTexture,
	"groundAngle" : TextureBackground.groundAngle,
	"groundColor" : TextureBackground.groundColor,
	"IS" : TextureBackground.IS,
	"leftTexture" : TextureBackground.leftTexture,
	"metadata" : TextureBackground.metadata,
	"rightTexture" : TextureBackground.rightTexture,
	"skyAngle" : TextureBackground.skyAngle,
	"skyColor" : TextureBackground.skyColor,
	"topTexture" : TextureBackground.topTexture,
	"transparency" : TextureBackground.transparency,
	"DEF" : TextureBackground.DEF,
	"USE" : TextureBackground.USE,
	"class" : TextureBackground.class_,
	"id" : TextureBackground.id_,
	"style" : TextureBackground.style_,
},
"TextureCoordinate" : {
	"IS" : TextureCoordinate.IS,
	"mapping" : TextureCoordinate.mapping,
	"metadata" : TextureCoordinate.metadata,
	"point" : TextureCoordinate.point,
	"DEF" : TextureCoordinate.DEF,
	"USE" : TextureCoordinate.USE,
	"class" : TextureCoordinate.class_,
	"id" : TextureCoordinate.id_,
	"style" : TextureCoordinate.style_,
},
"TextureCoordinate3D" : {
	"IS" : TextureCoordinate3D.IS,
	"mapping" : TextureCoordinate3D.mapping,
	"metadata" : TextureCoordinate3D.metadata,
	"point" : TextureCoordinate3D.point,
	"DEF" : TextureCoordinate3D.DEF,
	"USE" : TextureCoordinate3D.USE,
	"class" : TextureCoordinate3D.class_,
	"id" : TextureCoordinate3D.id_,
	"style" : TextureCoordinate3D.style_,
},
"TextureCoordinate4D" : {
	"IS" : TextureCoordinate4D.IS,
	"mapping" : TextureCoordinate4D.mapping,
	"metadata" : TextureCoordinate4D.metadata,
	"point" : TextureCoordinate4D.point,
	"DEF" : TextureCoordinate4D.DEF,
	"USE" : TextureCoordinate4D.USE,
	"class" : TextureCoordinate4D.class_,
	"id" : TextureCoordinate4D.id_,
	"style" : TextureCoordinate4D.style_,
},
"TextureCoordinateGenerator" : {
	"IS" : TextureCoordinateGenerator.IS,
	"mapping" : TextureCoordinateGenerator.mapping,
	"metadata" : TextureCoordinateGenerator.metadata,
	"mode" : TextureCoordinateGenerator.mode,
	"parameter" : TextureCoordinateGenerator.parameter,
	"DEF" : TextureCoordinateGenerator.DEF,
	"USE" : TextureCoordinateGenerator.USE,
	"class" : TextureCoordinateGenerator.class_,
	"id" : TextureCoordinateGenerator.id_,
	"style" : TextureCoordinateGenerator.style_,
},
"TextureProjector" : {
	"ambientIntensity" : TextureProjector.ambientIntensity,
	"color" : TextureProjector.color,
	"description" : TextureProjector.description,
	"direction" : TextureProjector.direction,
	"farDistance" : TextureProjector.farDistance,
	"fieldOfView" : TextureProjector.fieldOfView,
	"global" : TextureProjector.global_,
	"intensity" : TextureProjector.intensity,
	"IS" : TextureProjector.IS,
	"location" : TextureProjector.location,
	"metadata" : TextureProjector.metadata,
	"nearDistance" : TextureProjector.nearDistance,
	"on" : TextureProjector.on,
	"shadowIntensity" : TextureProjector.shadowIntensity,
	"shadows" : TextureProjector.shadows,
	"texture" : TextureProjector.texture,
	"upVector" : TextureProjector.upVector,
	"DEF" : TextureProjector.DEF,
	"USE" : TextureProjector.USE,
	"class" : TextureProjector.class_,
	"id" : TextureProjector.id_,
	"style" : TextureProjector.style_,
},
"TextureProjectorParallel" : {
	"ambientIntensity" : TextureProjectorParallel.ambientIntensity,
	"color" : TextureProjectorParallel.color,
	"description" : TextureProjectorParallel.description,
	"direction" : TextureProjectorParallel.direction,
	"farDistance" : TextureProjectorParallel.farDistance,
	"fieldOfView" : TextureProjectorParallel.fieldOfView,
	"global" : TextureProjectorParallel.global_,
	"intensity" : TextureProjectorParallel.intensity,
	"IS" : TextureProjectorParallel.IS,
	"location" : TextureProjectorParallel.location,
	"metadata" : TextureProjectorParallel.metadata,
	"nearDistance" : TextureProjectorParallel.nearDistance,
	"on" : TextureProjectorParallel.on,
	"shadowIntensity" : TextureProjectorParallel.shadowIntensity,
	"shadows" : TextureProjectorParallel.shadows,
	"texture" : TextureProjectorParallel.texture,
	"DEF" : TextureProjectorParallel.DEF,
	"USE" : TextureProjectorParallel.USE,
	"class" : TextureProjectorParallel.class_,
	"id" : TextureProjectorParallel.id_,
	"style" : TextureProjectorParallel.style_,
},
"TextureProperties" : {
	"anisotropicDegree" : TextureProperties.anisotropicDegree,
	"borderColor" : TextureProperties.borderColor,
	"borderWidth" : TextureProperties.borderWidth,
	"boundaryModeR" : TextureProperties.boundaryModeR,
	"boundaryModeS" : TextureProperties.boundaryModeS,
	"boundaryModeT" : TextureProperties.boundaryModeT,
	"generateMipMaps" : TextureProperties.generateMipMaps,
	"IS" : TextureProperties.IS,
	"magnificationFilter" : TextureProperties.magnificationFilter,
	"metadata" : TextureProperties.metadata,
	"minificationFilter" : TextureProperties.minificationFilter,
	"textureCompression" : TextureProperties.textureCompression,
	"texturePriority" : TextureProperties.texturePriority,
	"DEF" : TextureProperties.DEF,
	"USE" : TextureProperties.USE,
	"class" : TextureProperties.class_,
	"id" : TextureProperties.id_,
	"style" : TextureProperties.style_,
},
"TextureTransform" : {
	"center" : TextureTransform.center,
	"IS" : TextureTransform.IS,
	"metadata" : TextureTransform.metadata,
	"rotation" : TextureTransform.rotation,
	"scale" : TextureTransform.scale,
	"translation" : TextureTransform.translation,
	"DEF" : TextureTransform.DEF,
	"USE" : TextureTransform.USE,
	"class" : TextureTransform.class_,
	"id" : TextureTransform.id_,
	"style" : TextureTransform.style_,
},
"TextureTransform3D" : {
	"center" : TextureTransform3D.center,
	"IS" : TextureTransform3D.IS,
	"metadata" : TextureTransform3D.metadata,
	"rotation" : TextureTransform3D.rotation,
	"scale" : TextureTransform3D.scale,
	"translation" : TextureTransform3D.translation,
	"DEF" : TextureTransform3D.DEF,
	"USE" : TextureTransform3D.USE,
	"class" : TextureTransform3D.class_,
	"id" : TextureTransform3D.id_,
	"style" : TextureTransform3D.style_,
},
"TextureTransformMatrix3D" : {
	"IS" : TextureTransformMatrix3D.IS,
	"matrix" : TextureTransformMatrix3D.matrix,
	"metadata" : TextureTransformMatrix3D.metadata,
	"DEF" : TextureTransformMatrix3D.DEF,
	"USE" : TextureTransformMatrix3D.USE,
	"class" : TextureTransformMatrix3D.class_,
	"id" : TextureTransformMatrix3D.id_,
	"style" : TextureTransformMatrix3D.style_,
},
"TimeSensor" : {
	"cycleInterval" : TimeSensor.cycleInterval,
	"description" : TimeSensor.description,
	"enabled" : TimeSensor.enabled,
	"IS" : TimeSensor.IS,
	"loop" : TimeSensor.loop,
	"metadata" : TimeSensor.metadata,
	"pauseTime" : TimeSensor.pauseTime,
	"resumeTime" : TimeSensor.resumeTime,
	"startTime" : TimeSensor.startTime,
	"stopTime" : TimeSensor.stopTime,
	"DEF" : TimeSensor.DEF,
	"USE" : TimeSensor.USE,
	"class" : TimeSensor.class_,
	"id" : TimeSensor.id_,
	"style" : TimeSensor.style_,
},
"TimeTrigger" : {
	"IS" : TimeTrigger.IS,
	"metadata" : TimeTrigger.metadata,
	"DEF" : TimeTrigger.DEF,
	"USE" : TimeTrigger.USE,
	"class" : TimeTrigger.class_,
	"id" : TimeTrigger.id_,
	"style" : TimeTrigger.style_,
},
"ToneMappedVolumeStyle" : {
	"coolColor" : ToneMappedVolumeStyle.coolColor,
	"enabled" : ToneMappedVolumeStyle.enabled,
	"IS" : ToneMappedVolumeStyle.IS,
	"metadata" : ToneMappedVolumeStyle.metadata,
	"surfaceNormals" : ToneMappedVolumeStyle.surfaceNormals,
	"warmColor" : ToneMappedVolumeStyle.warmColor,
	"DEF" : ToneMappedVolumeStyle.DEF,
	"USE" : ToneMappedVolumeStyle.USE,
	"class" : ToneMappedVolumeStyle.class_,
	"id" : ToneMappedVolumeStyle.id_,
	"style" : ToneMappedVolumeStyle.style_,
},
"TouchSensor" : {
	"description" : TouchSensor.description,
	"enabled" : TouchSensor.enabled,
	"IS" : TouchSensor.IS,
	"metadata" : TouchSensor.metadata,
	"DEF" : TouchSensor.DEF,
	"USE" : TouchSensor.USE,
	"class" : TouchSensor.class_,
	"id" : TouchSensor.id_,
	"style" : TouchSensor.style_,
},
"Transform" : {
	"addChildren" : Transform.children,
	"bboxCenter" : Transform.bboxCenter,
	"bboxDisplay" : Transform.bboxDisplay,
	"bboxSize" : Transform.bboxSize,
	"center" : Transform.center,
	"children" : Transform.children,
	"IS" : Transform.IS,
	"metadata" : Transform.metadata,
	"removeChildren" : Transform.children,
	"rotation" : Transform.rotation,
	"scale" : Transform.scale,
	"scaleOrientation" : Transform.scaleOrientation,
	"translation" : Transform.translation,
	"visible" : Transform.visible,
	"DEF" : Transform.DEF,
	"USE" : Transform.USE,
	"class" : Transform.class_,
	"id" : Transform.id_,
	"style" : Transform.style_,
},
"TransformSensor" : {
	"center" : TransformSensor.center,
	"description" : TransformSensor.description,
	"enabled" : TransformSensor.enabled,
	"IS" : TransformSensor.IS,
	"metadata" : TransformSensor.metadata,
	"size" : TransformSensor.size,
	"targetObject" : TransformSensor.targetObject,
	"DEF" : TransformSensor.DEF,
	"USE" : TransformSensor.USE,
	"class" : TransformSensor.class_,
	"id" : TransformSensor.id_,
	"style" : TransformSensor.style_,
},
"TransmitterPdu" : {
	"address" : TransmitterPdu.address,
	"antennaLocation" : TransmitterPdu.antennaLocation,
	"antennaPatternLength" : TransmitterPdu.antennaPatternLength,
	"antennaPatternType" : TransmitterPdu.antennaPatternType,
	"applicationID" : TransmitterPdu.applicationID,
	"bboxCenter" : TransmitterPdu.bboxCenter,
	"bboxDisplay" : TransmitterPdu.bboxDisplay,
	"bboxSize" : TransmitterPdu.bboxSize,
	"cryptoKeyID" : TransmitterPdu.cryptoKeyID,
	"cryptoSystem" : TransmitterPdu.cryptoSystem,
	"description" : TransmitterPdu.description,
	"enabled" : TransmitterPdu.enabled,
	"entityID" : TransmitterPdu.entityID,
	"frequency" : TransmitterPdu.frequency,
	"geoCoords" : TransmitterPdu.geoCoords,
	"geoSystem" : TransmitterPdu.geoSystem,
	"inputSource" : TransmitterPdu.inputSource,
	"IS" : TransmitterPdu.IS,
	"lengthOfModulationParameters" : TransmitterPdu.lengthOfModulationParameters,
	"metadata" : TransmitterPdu.metadata,
	"modulationTypeDetail" : TransmitterPdu.modulationTypeDetail,
	"modulationTypeMajor" : TransmitterPdu.modulationTypeMajor,
	"modulationTypeSpreadSpectrum" : TransmitterPdu.modulationTypeSpreadSpectrum,
	"modulationTypeSystem" : TransmitterPdu.modulationTypeSystem,
	"multicastRelayHost" : TransmitterPdu.multicastRelayHost,
	"multicastRelayPort" : TransmitterPdu.multicastRelayPort,
	"networkMode" : TransmitterPdu.networkMode,
	"port" : TransmitterPdu.port,
	"power" : TransmitterPdu.power,
	"radioEntityTypeCategory" : TransmitterPdu.radioEntityTypeCategory,
	"radioEntityTypeCountry" : TransmitterPdu.radioEntityTypeCountry,
	"radioEntityTypeDomain" : TransmitterPdu.radioEntityTypeDomain,
	"radioEntityTypeKind" : TransmitterPdu.radioEntityTypeKind,
	"radioEntityTypeNomenclature" : TransmitterPdu.radioEntityTypeNomenclature,
	"radioEntityTypeNomenclatureVersion" : TransmitterPdu.radioEntityTypeNomenclatureVersion,
	"radioID" : TransmitterPdu.radioID,
	"readInterval" : TransmitterPdu.readInterval,
	"relativeAntennaLocation" : TransmitterPdu.relativeAntennaLocation,
	"rtpHeaderExpected" : TransmitterPdu.rtpHeaderExpected,
	"siteID" : TransmitterPdu.siteID,
	"transmitFrequencyBandwidth" : TransmitterPdu.transmitFrequencyBandwidth,
	"transmitState" : TransmitterPdu.transmitState,
	"visible" : TransmitterPdu.visible,
	"whichGeometry" : TransmitterPdu.whichGeometry,
	"writeInterval" : TransmitterPdu.writeInterval,
	"DEF" : TransmitterPdu.DEF,
	"USE" : TransmitterPdu.USE,
	"class" : TransmitterPdu.class_,
	"id" : TransmitterPdu.id_,
	"style" : TransmitterPdu.style_,
},
"TriangleFanSet" : {
	"attrib" : TriangleFanSet.attrib,
	"ccw" : TriangleFanSet.ccw,
	"color" : TriangleFanSet.color,
	"colorPerVertex" : TriangleFanSet.colorPerVertex,
	"coord" : TriangleFanSet.coord,
	"fanCount" : TriangleFanSet.fanCount,
	"fogCoord" : TriangleFanSet.fogCoord,
	"IS" : TriangleFanSet.IS,
	"metadata" : TriangleFanSet.metadata,
	"normal" : TriangleFanSet.normal,
	"normalPerVertex" : TriangleFanSet.normalPerVertex,
	"solid" : TriangleFanSet.solid,
	"texCoord" : TriangleFanSet.texCoord,
	"DEF" : TriangleFanSet.DEF,
	"USE" : TriangleFanSet.USE,
	"class" : TriangleFanSet.class_,
	"id" : TriangleFanSet.id_,
	"style" : TriangleFanSet.style_,
},
"TriangleSet" : {
	"attrib" : TriangleSet.attrib,
	"ccw" : TriangleSet.ccw,
	"color" : TriangleSet.color,
	"colorPerVertex" : TriangleSet.colorPerVertex,
	"coord" : TriangleSet.coord,
	"fogCoord" : TriangleSet.fogCoord,
	"IS" : TriangleSet.IS,
	"metadata" : TriangleSet.metadata,
	"normal" : TriangleSet.normal,
	"normalPerVertex" : TriangleSet.normalPerVertex,
	"solid" : TriangleSet.solid,
	"texCoord" : TriangleSet.texCoord,
	"DEF" : TriangleSet.DEF,
	"USE" : TriangleSet.USE,
	"class" : TriangleSet.class_,
	"id" : TriangleSet.id_,
	"style" : TriangleSet.style_,
},
"TriangleSet2D" : {
	"IS" : TriangleSet2D.IS,
	"metadata" : TriangleSet2D.metadata,
	"solid" : TriangleSet2D.solid,
	"vertices" : TriangleSet2D.vertices,
	"DEF" : TriangleSet2D.DEF,
	"USE" : TriangleSet2D.USE,
	"class" : TriangleSet2D.class_,
	"id" : TriangleSet2D.id_,
	"style" : TriangleSet2D.style_,
},
"TriangleStripSet" : {
	"attrib" : TriangleStripSet.attrib,
	"ccw" : TriangleStripSet.ccw,
	"color" : TriangleStripSet.color,
	"colorPerVertex" : TriangleStripSet.colorPerVertex,
	"coord" : TriangleStripSet.coord,
	"fogCoord" : TriangleStripSet.fogCoord,
	"IS" : TriangleStripSet.IS,
	"metadata" : TriangleStripSet.metadata,
	"normal" : TriangleStripSet.normal,
	"normalPerVertex" : TriangleStripSet.normalPerVertex,
	"solid" : TriangleStripSet.solid,
	"stripCount" : TriangleStripSet.stripCount,
	"texCoord" : TriangleStripSet.texCoord,
	"DEF" : TriangleStripSet.DEF,
	"USE" : TriangleStripSet.USE,
	"class" : TriangleStripSet.class_,
	"id" : TriangleStripSet.id_,
	"style" : TriangleStripSet.style_,
},
"TwoSidedMaterial" : {
	"ambientIntensity" : TwoSidedMaterial.ambientIntensity,
	"backAmbientIntensity" : TwoSidedMaterial.backAmbientIntensity,
	"backDiffuseColor" : TwoSidedMaterial.backDiffuseColor,
	"backEmissiveColor" : TwoSidedMaterial.backEmissiveColor,
	"backShininess" : TwoSidedMaterial.backShininess,
	"backSpecularColor" : TwoSidedMaterial.backSpecularColor,
	"backTransparency" : TwoSidedMaterial.backTransparency,
	"diffuseColor" : TwoSidedMaterial.diffuseColor,
	"emissiveColor" : TwoSidedMaterial.emissiveColor,
	"IS" : TwoSidedMaterial.IS,
	"metadata" : TwoSidedMaterial.metadata,
	"separateBackColor" : TwoSidedMaterial.separateBackColor,
	"shininess" : TwoSidedMaterial.shininess,
	"specularColor" : TwoSidedMaterial.specularColor,
	"transparency" : TwoSidedMaterial.transparency,
	"DEF" : TwoSidedMaterial.DEF,
	"USE" : TwoSidedMaterial.USE,
	"class" : TwoSidedMaterial.class_,
	"id" : TwoSidedMaterial.id_,
	"style" : TwoSidedMaterial.style_,
},
"UniversalJoint" : {
	"anchorPoint" : UniversalJoint.anchorPoint,
	"axis1" : UniversalJoint.axis1,
	"axis2" : UniversalJoint.axis2,
	"body1" : UniversalJoint.body1,
	"body2" : UniversalJoint.body2,
	"forceOutput" : UniversalJoint.forceOutput,
	"IS" : UniversalJoint.IS,
	"metadata" : UniversalJoint.metadata,
	"stop1Bounce" : UniversalJoint.stop1Bounce,
	"stop1ErrorCorrection" : UniversalJoint.stop1ErrorCorrection,
	"stop2Bounce" : UniversalJoint.stop2Bounce,
	"stop2ErrorCorrection" : UniversalJoint.stop2ErrorCorrection,
	"DEF" : UniversalJoint.DEF,
	"USE" : UniversalJoint.USE,
	"class" : UniversalJoint.class_,
	"id" : UniversalJoint.id_,
	"style" : UniversalJoint.style_,
},
"UnlitMaterial" : {
	"emissiveColor" : UnlitMaterial.emissiveColor,
	"emissiveTexture" : UnlitMaterial.emissiveTexture,
	"emissiveTextureMapping" : UnlitMaterial.emissiveTextureMapping,
	"IS" : UnlitMaterial.IS,
	"metadata" : UnlitMaterial.metadata,
	"normalScale" : UnlitMaterial.normalScale,
	"normalTexture" : UnlitMaterial.normalTexture,
	"normalTextureMapping" : UnlitMaterial.normalTextureMapping,
	"transparency" : UnlitMaterial.transparency,
	"DEF" : UnlitMaterial.DEF,
	"USE" : UnlitMaterial.USE,
	"class" : UnlitMaterial.class_,
	"id" : UnlitMaterial.id_,
	"style" : UnlitMaterial.style_,
},
"Viewpoint" : {
	"centerOfRotation" : Viewpoint.centerOfRotation,
	"description" : Viewpoint.description,
	"farDistance" : Viewpoint.farDistance,
	"fieldOfView" : Viewpoint.fieldOfView,
	"IS" : Viewpoint.IS,
	"jump" : Viewpoint.jump,
	"metadata" : Viewpoint.metadata,
	"navigationInfo" : Viewpoint.navigationInfo,
	"nearDistance" : Viewpoint.nearDistance,
	"orientation" : Viewpoint.orientation,
	"position" : Viewpoint.position,
	"retainUserOffsets" : Viewpoint.retainUserOffsets,
	"viewAll" : Viewpoint.viewAll,
	"DEF" : Viewpoint.DEF,
	"USE" : Viewpoint.USE,
	"class" : Viewpoint.class_,
	"id" : Viewpoint.id_,
	"style" : Viewpoint.style_,
},
"ViewpointGroup" : {
	"center" : ViewpointGroup.center,
	"children" : ViewpointGroup.children,
	"description" : ViewpointGroup.description,
	"displayed" : ViewpointGroup.displayed,
	"IS" : ViewpointGroup.IS,
	"metadata" : ViewpointGroup.metadata,
	"retainUserOffsets" : ViewpointGroup.retainUserOffsets,
	"size" : ViewpointGroup.size,
	"DEF" : ViewpointGroup.DEF,
	"USE" : ViewpointGroup.USE,
	"class" : ViewpointGroup.class_,
	"id" : ViewpointGroup.id_,
	"style" : ViewpointGroup.style_,
},
"Viewport" : {
	"addChildren" : Viewport.children,
	"bboxCenter" : Viewport.bboxCenter,
	"bboxDisplay" : Viewport.bboxDisplay,
	"bboxSize" : Viewport.bboxSize,
	"children" : Viewport.children,
	"clipBoundary" : Viewport.clipBoundary,
	"IS" : Viewport.IS,
	"metadata" : Viewport.metadata,
	"removeChildren" : Viewport.children,
	"visible" : Viewport.visible,
	"DEF" : Viewport.DEF,
	"USE" : Viewport.USE,
	"class" : Viewport.class_,
	"id" : Viewport.id_,
	"style" : Viewport.style_,
},
"VisibilitySensor" : {
	"center" : VisibilitySensor.center,
	"description" : VisibilitySensor.description,
	"enabled" : VisibilitySensor.enabled,
	"IS" : VisibilitySensor.IS,
	"metadata" : VisibilitySensor.metadata,
	"size" : VisibilitySensor.size,
	"DEF" : VisibilitySensor.DEF,
	"USE" : VisibilitySensor.USE,
	"class" : VisibilitySensor.class_,
	"id" : VisibilitySensor.id_,
	"style" : VisibilitySensor.style_,
},
"VolumeData" : {
	"bboxCenter" : VolumeData.bboxCenter,
	"bboxDisplay" : VolumeData.bboxDisplay,
	"bboxSize" : VolumeData.bboxSize,
	"dimensions" : VolumeData.dimensions,
	"IS" : VolumeData.IS,
	"metadata" : VolumeData.metadata,
	"renderStyle" : VolumeData.renderStyle,
	"visible" : VolumeData.visible,
	"voxels" : VolumeData.voxels,
	"DEF" : VolumeData.DEF,
	"USE" : VolumeData.USE,
	"class" : VolumeData.class_,
	"id" : VolumeData.id_,
	"style" : VolumeData.style_,
},
"VolumeEmitter" : {
	"coord" : VolumeEmitter.coord,
	"coordIndex" : VolumeEmitter.coordIndex,
	"direction" : VolumeEmitter.direction,
	"internal" : VolumeEmitter.internal,
	"IS" : VolumeEmitter.IS,
	"mass" : VolumeEmitter.mass,
	"metadata" : VolumeEmitter.metadata,
	"on" : VolumeEmitter.on,
	"speed" : VolumeEmitter.speed,
	"surfaceArea" : VolumeEmitter.surfaceArea,
	"variation" : VolumeEmitter.variation,
	"DEF" : VolumeEmitter.DEF,
	"USE" : VolumeEmitter.USE,
	"class" : VolumeEmitter.class_,
	"id" : VolumeEmitter.id_,
	"style" : VolumeEmitter.style_,
},
"VolumePickSensor" : {
	"description" : VolumePickSensor.description,
	"enabled" : VolumePickSensor.enabled,
	"intersectionType" : VolumePickSensor.intersectionType,
	"IS" : VolumePickSensor.IS,
	"matchCriterion" : VolumePickSensor.matchCriterion,
	"metadata" : VolumePickSensor.metadata,
	"objectType" : VolumePickSensor.objectType,
	"pickingGeometry" : VolumePickSensor.pickingGeometry,
	"pickTarget" : VolumePickSensor.pickTarget,
	"sortOrder" : VolumePickSensor.sortOrder,
	"DEF" : VolumePickSensor.DEF,
	"USE" : VolumePickSensor.USE,
	"class" : VolumePickSensor.class_,
	"id" : VolumePickSensor.id_,
	"style" : VolumePickSensor.style_,
},
"WaveShaper" : {
	"channelCountMode" : WaveShaper.channelCountMode,
	"channelInterpretation" : WaveShaper.channelInterpretation,
	"children" : WaveShaper.children,
	"description" : WaveShaper.description,
	"enabled" : WaveShaper.enabled,
	"gain" : WaveShaper.gain,
	"IS" : WaveShaper.IS,
	"metadata" : WaveShaper.metadata,
	"oversample" : WaveShaper.oversample,
	"pauseTime" : WaveShaper.pauseTime,
	"resumeTime" : WaveShaper.resumeTime,
	"startTime" : WaveShaper.startTime,
	"stopTime" : WaveShaper.stopTime,
	"tailTime" : WaveShaper.tailTime,
	"DEF" : WaveShaper.DEF,
	"USE" : WaveShaper.USE,
	"class" : WaveShaper.class_,
	"id" : WaveShaper.id_,
	"style" : WaveShaper.style_,
},
"WindPhysicsModel" : {
	"direction" : WindPhysicsModel.direction,
	"enabled" : WindPhysicsModel.enabled,
	"gustiness" : WindPhysicsModel.gustiness,
	"IS" : WindPhysicsModel.IS,
	"metadata" : WindPhysicsModel.metadata,
	"speed" : WindPhysicsModel.speed,
	"turbulence" : WindPhysicsModel.turbulence,
	"DEF" : WindPhysicsModel.DEF,
	"USE" : WindPhysicsModel.USE,
	"class" : WindPhysicsModel.class_,
	"id" : WindPhysicsModel.id_,
	"style" : WindPhysicsModel.style_,
},
"WorldInfo" : {
	"info" : WorldInfo.info,
	"IS" : WorldInfo.IS,
	"metadata" : WorldInfo.metadata,
	"title" : WorldInfo.title,
	"DEF" : WorldInfo.DEF,
	"USE" : WorldInfo.USE,
	"class" : WorldInfo.class_,
	"id" : WorldInfo.id_,
	"style" : WorldInfo.style_,
},
"component" : {
	"class" : component.class_,
	"id" : component.id_,
	"level" : component.level,
	"name" : component.name,
	"style" : component.style_,
},
"connect" : {
	"class" : connect.class_,
	"id" : connect.id_,
	"nodeField" : connect.nodeField,
	"protoField" : connect.protoField,
	"style" : connect.style_,
},
"EXPORT" : {
	"AS" : EXPORT.AS,
	"class" : EXPORT.class_,
	"id" : EXPORT.id_,
	"localDEF" : EXPORT.localDEF,
	"style" : EXPORT.style_,
},
"ExternProtoDeclare" : {
	"appinfo" : ExternProtoDeclare.appinfo,
	"class" : ExternProtoDeclare.class_,
	"documentation" : ExternProtoDeclare.documentation,
	"field" : ExternProtoDeclare.field,
	"id" : ExternProtoDeclare.id_,
	"name" : ExternProtoDeclare.name,
	"style" : ExternProtoDeclare.style_,
	"url" : ExternProtoDeclare.url,
},
"field" : {
	"accessType" : field.accessType,
	"appinfo" : field.appinfo,
	"children" : field.children,
	"class" : field.class_,
	"documentation" : field.documentation,
	"id" : field.id_,
	"name" : field.name,
	"style" : field.style_,
	"type" : field.type,
	"value" : field.value,
},
"fieldValue" : {
	"children" : fieldValue.children,
	"class" : fieldValue.class_,
	"id" : fieldValue.id_,
	"name" : fieldValue.name,
	"style" : fieldValue.style_,
	"value" : fieldValue.value,
},
"head" : {
	"class" : head.class_,
	"children" : head.children,
	"component" : head.children,
	"id" : head.id_,
	"children" : head.children,
	"meta" : head.children,
	"style" : head.style_,
	"children" : head.children,
	"unit" : head.children,
},
"IMPORT" : {
	"AS" : IMPORT.AS,
	"class" : IMPORT.class_,
	"id" : IMPORT.id_,
	"importedDEF" : IMPORT.importedDEF,
	"inlineDEF" : IMPORT.inlineDEF,
	"style" : IMPORT.style_,
},
"IS" : {
	"class" : IS.class_,
	"connect" : IS.connect,
	"id" : IS.id_,
	"style" : IS.style_,
},
"meta" : {
	"class" : meta.class_,
	"content" : meta.content,
	"dir" : meta.dir,
	"http-equiv" : meta.httpequiv,
	"id" : meta.id_,
	"lang" : meta.lang,
	"name" : meta.name,
	"scheme" : meta.scheme,
	"style" : meta.style_,
},
"ProtoBody" : {
	"children" : ProtoBody.children,
	"class" : ProtoBody.class_,
	"id" : ProtoBody.id_,
	"style" : ProtoBody.style_,
},
"ProtoDeclare" : {
	"appinfo" : ProtoDeclare.appinfo,
	"class" : ProtoDeclare.class_,
	"documentation" : ProtoDeclare.documentation,
	"id" : ProtoDeclare.id_,
	"name" : ProtoDeclare.name,
	"ProtoBody" : ProtoDeclare.ProtoBody,
	"ProtoInterface" : ProtoDeclare.ProtoInterface,
	"style" : ProtoDeclare.style_,
},
"ProtoInterface" : {
	"class" : ProtoInterface.class_,
	"field" : ProtoInterface.field,
	"id" : ProtoInterface.id_,
	"style" : ProtoInterface.style_,
},
"ROUTE" : {
	"class" : ROUTE.class_,
	"fromField" : ROUTE.fromField,
	"fromNode" : ROUTE.fromNode,
	"id" : ROUTE.id_,
	"style" : ROUTE.style_,
	"toField" : ROUTE.toField,
	"toNode" : ROUTE.toNode,
},
"Scene" : {
	"children" : Scene.children,
	"class" : Scene.class_,
	"id" : Scene.id_,
	"style" : Scene.style_,
},
"unit" : {
	"category" : unit.category,
	"class" : unit.class_,
	"conversionFactor" : unit.conversionFactor,
	"id" : unit.id_,
	"name" : unit.name,
	"style" : unit.style_,
},
"X3D" : {
	"class" : X3D.class_,
	"head" : X3D.head,
	"id" : X3D.id_,
	"profile" : X3D.profile,
	"Scene" : X3D.Scene,
	"style" : X3D.style_,
	"version" : X3D.version,
},
};
