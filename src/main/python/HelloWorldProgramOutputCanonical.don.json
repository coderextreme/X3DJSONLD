{
    "X3D":
    {
        "encoding":"UTF-8",
        "$id":   "https://www.web3d.org/specifications/x3d-4.0-JSONSchema.json",
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "@version":"3.3",
        "@profile":"Immersive",
    "head" :     {
        "-children": [
            { "#comment" : " comment #1 " },
            { "#comment" : " comment #2 " },
            { "#comment" : " comment #3 " },
            { "#comment" : " comment #4 " }
        ],
        "-component": [
            {
            "@level":"3",
            "@name":"Navigation"
            },
            {
            "@name":"Shaders"
            },
            {
            "@name":"Layering"
            }
        ],
        "-unit": [
            {
            "@category":"angle",
            "@name":"AngleUnitConversion"
            },
            {
            "@category":"length",
            "@name":"LengthUnitConversion"
            }
        ],
        "-meta": [
            {
            "@content":"HelloWorldProgramOutputCanonical.x3d",
            "@name":"title"
            },
            {
            "@content":"Example HelloWorldProgram creates an X3D model using the X3D Java Scene Access Interface Library (X3DJSAIL)",
            "@name":"description"
            },
            {
            "@content":"http://www.web3d.org/specifications/java/X3DJSAIL.html",
            "@name":"reference"
            },
            {
            "@content":"HelloWorldProgramOutput.java",
            "@name":"generator"
            },
            {
            "@content":"6 September 2016",
            "@name":"created"
            },
            {
            "@content":"27 December 2018",
            "@name":"modified"
            },
            {
            "@content":"X3D Java Scene Access Interface Library (X3DJSAIL)",
            "@name":"generator"
            },
            {
            "@content":"http://www.web3d.org/specifications/java/examples/HelloWorldProgram.java",
            "@name":"generator"
            },
            {
            "@content":"Netbeans http://www.netbeans.org",
            "@name":"generator"
            },
            {
            "@content":"Don Brutzman",
            "@name":"creator"
            },
            {
            "@content":"https://sourceforge.net/p/x3d/code/HEAD/tree/www.web3d.org/x3d/stylesheets/java/examples/HelloWorldProgramOutput.x3d",
            "@name":"reference"
            },
            {
            "@content":"Console output, ClassicVRML encoding, VRML97 encoding and pretty-print documentation:",
            "@name":"reference"
            },
            {
            "@content":"HelloWorldProgramOutput.txt",
            "@name":"reference"
            },
            {
            "@content":"HelloWorldProgramOutput.x3dv",
            "@name":"reference"
            },
            {
            "@content":"HelloWorldProgramOutput.wrl",
            "@name":"reference"
            },
            {
            "@content":"HelloWorldProgramOutput.html",
            "@name":"reference"
            },
            {
            "@content":"https://savage.nps.edu/X3dValidator?url=http://www.web3d.org/specifications/java/examples/HelloWorldProgramOutput.x3d",
            "@name":"reference"
            },
            {
            "@content":"http://www.web3d.org/specifications/java/examples/HelloWorldProgramOutput.x3d",
            "@name":"identifier"
            },
            {
            "@content":"../license.html",
            "@name":"license"
            },
            {
            "@content":"17 July 2023",
            "@name":"translated"
            },
            {
            "@content":"X3dToJson.xslt, https://www.web3d.org/x3d/stylesheets/X3dToJson.html",
            "@name":"generator"
            },
            {
            "@content":"X3D JSON encoding: https://www.web3d.org/wiki/index.php/X3D_JSON_Encoding",
            "@name":"reference"
            }
        ]
    },
    "Scene" :     {
                "-children": [
                    { "ViewpointGroup" : {
                    "@description":"Available viewpoints"
,                                "-children": [
                                    { "Viewpoint" : {
                                    "@DEF":"DefaultView",
                                    "@description":"Hello X3DJSAIL"
                                    }
                                    },
                                    { "Viewpoint" : {
                                    "@DEF":"TopDownView",
                                    "@description":"top-down view from above",
                                    "@orientation":"1 0 0 -1.570796",
                                    "@position":"0 100 0"
                                    }
                                    }
                                ]                    }
                    },
                    { "NavigationInfo" : {
                    "@type":""&quot;EXAMINE&quot; &quot;FLY&quot; &quot;ANY&quot;""
                    }
                    },
                    { "WorldInfo" : {
                    "@DEF":"WorldInfoDEF",
                    "@title":"HelloWorldProgram produced by X3D Java SAI Library (X3DJSAIL)"
                    }
                    { "WorldInfo" : {
                    "@USE":"WorldInfoDEF"
                    }
                    { "WorldInfo" : {
                    "@USE":"WorldInfoDEF"
                    }
                    { "MetadataString" : {
                    "@DEF":"scene.addChildMetadata",
                    "@name":"test",
                    "@value":""Top-level root Metadata node beneath Scene needs to be one of '-children' in JSON encoding""
                    }
                    },
                    { "LayerSet" : {
                    "@DEF":"scene.addChildLayerSetTest"
                    }
                    },
                    { "Transform" : {
                    "@DEF":"LogoGeometryTransform",
                    "@translation":"0 1.5 0"
,                                "-children": [
                                    { "Anchor" : {
                                    "@description":"select for X3D Java SAI Library (X3DJSAIL) description",
                                    "@url":""../X3DJSAIL.html" "http://www.web3d.org/specifications/java/X3DJSAIL.html""
,                                                "-children": [
                                                    { "Shape" : {
                                                    "@DEF":"BoxShape"
,                                                        { "Appearance" :                                                             { "Material" : {
                                                            "@DEF":"GreenMaterial",
                                                            "@diffuseColor":"0 1 1",
                                                            "@emissiveColor":"0.8 0 0",
                                                            "@transparency":"0.1"
                                                            }
                                                            },
                                                            { "ImageTexture" : {
                                                            "@url":""images/X3dJavaSceneAccessInterfaceSaiLibrary.png" "http://www.web3d.org/specifications/java/examples/images/X3dJavaSceneAccessInterfaceSaiLibrary.png""
                                                            }
                                                            },
                                                        }
                                                        },
                                                        { "Box" : {
                                                        "@DEF":"test-NMTOKEN_regex.0123456789",
                                                        "@class":"untextured"
                                                        }
                                                        },
                                                    }
                                                    }
                                                ]                                    }
                                    }
                                ]                    }
                    },
                    { "Shape" : {
                    "@DEF":"LineShape"
,                        { "Appearance" :                             { "Material" : {
                            "@emissiveColor":"0.6 0.19607843 0.8"
                            }
                            },
                        }
                        },
                        { "IndexedLineSet" : {
                        "@coordIndex":"0 1 2 3 4 0"
,                            { "Coordinate" : {
                            "@point":"0 1.5 0 2 1.5 0 2 1.5 -2 -2 1.5 -2 -2 1.5 0 0 1.5 0"
                            }
                            },
                        }
                        },
                    }
                    },
                    { "PositionInterpolator" : {
                    "@DEF":"BoxPathAnimator",
                    "@key":"0.0 0.125 0.375 0.625 0.875 1.0",
                    "@keyValue":"0 1.5 0 2 1.5 0 2 1.5 -2 -2 1.5 -2 -2 1.5 0 0 1.5 0"
                    }
                    },
                    { "TimeSensor" : {
                    "@DEF":"OrbitClock",
                    "@cycleInterval":"8.0",
                    "@loop":"true"
                    }
                    },
                    { "ROUTE" : {
                    "@fromField":"fraction_changed",
                    "@fromNode":"OrbitClock",
                    "@toField":"set_fraction",
                    "@toNode":"BoxPathAnimator"
                    }
                    },
                    { "ROUTE" : {
                    "@fromField":"value_changed",
                    "@fromNode":"BoxPathAnimator",
                    "@toField":"set_translation",
                    "@toNode":"LogoGeometryTransform"
                    }
                    },
                    { "Transform" : {
                    "@DEF":"TextTransform",
                    "@translation":"0 -1.5 0"
,                                "-children": [
                                    { "Shape" :                                         { "Appearance" :                                             { "Material" : {
                                            "@USE":"GreenMaterial"
                                            }
                                            },
                                        }
                                        },
                                        { "Text" : {
                                        "@string":""X3D Java" "SAI Library" "X3DJSAIL""
,                                            { "FontStyle" : {
                                            "@justify":""MIDDLE" "MIDDLE""
                                            }
                                            },
                                            { "MetadataSet" : {
                                            "@name":"EscapedQuotationMarksMetadataSet"
,                                                        "-value": [
                                                            { "MetadataString" : {
                                                            "@name":"quotesTestC",
                                                            "@value":""MFString example C, backslash-escaped quotes: He said, &quot;Immel did it!&quot;""
                                                            }
                                                            },
                                                            { "MetadataString" : {
                                                            "@name":"extraChildTest",
                                                            "@value":""checks MetadataSetObject addValue() method""
                                                            }
                                                            }
                                                        ]                                            }
                                            },
                                        }
                                        },
                                    }
                                    },
                                    { "Collision" :                                         { "Shape" : {
                                        "@DEF":"ProxyShape"
,                                            { "Text" : {
                                            "@string":""One, Two, Text" "" "He said, &quot;Immel did it!&quot; &quot;&quot;""
                                            }
                                            },
                                        }
                                        },
                                                "-children": [
                          { "#comment" : " test containerField='proxy' " }
                                                ]                                    }
                                    },
                  { "#comment" : " It's a beautiful world " }                  { "#comment" : " ... for you! " }                  { "#comment" : " https://en.wikipedia.org/wiki/Beautiful_World_(Devo_song) " }
                                ]                    }
                    },
          { "#comment" : " repeatedly spin 180 degrees as a readable special effect " }                    { "OrientationInterpolator" : {
                    "@DEF":"SpinInterpolator",
                    "@key":"0.0 0.5 1.0",
                    "@keyValue":"0.0 1.0 0.0 4.712389 0.0 1.0 0.0 0.0 0.0 1.0 0.0 1.5707964"
                    }
                    },
                    { "TimeSensor" : {
                    "@DEF":"SpinClock",
                    "@cycleInterval":"5.0",
                    "@loop":"true"
                    }
                    },
                    { "ROUTE" : {
                    "@fromField":"fraction_changed",
                    "@fromNode":"SpinClock",
                    "@toField":"set_fraction",
                    "@toNode":"SpinInterpolator"
                    }
                    },
                    { "ROUTE" : {
                    "@fromField":"value_changed",
                    "@fromNode":"SpinInterpolator",
                    "@toField":"rotation",
                    "@toNode":"TextTransform"
                    }
                    },
                    { "Group" : {
                    "@DEF":"BackgroundGroup"
,                                "-children": [
                                    { "Background" : {
                                    "@DEF":"GradualBackground"
                                    }
                                    },
                                    { "Script" : {
                                    "@DEF":"colorTypeConversionScript",
                                    "@sourceCode":"['', '', 'ecmascript:', '', 'function colorInput (eventValue) // Example source code', '{', '   colorsOutput = new MFColor(eventValue); // assigning value sends output event', &quot;// Browser.print('colorInput=' + eventValue + ', colorsOutput=' + colorsOutput + '
');&quot;, '}', '', '']"
,                                                "-field": [
                                                    { "field" : {
                                                    "@accessType":"inputOnly",
                                                    "@name":"colorInput",
                                                    "@type":"SFColor"
                                                    }
                                                    },
                                                    { "field" : {
                                                    "@accessType":"outputOnly",
                                                    "@name":"colorsOutput",
                                                    "@type":"MFColor"
                                                    }
                                                    }
                                                ]                                    }
                                    },
                                    { "ColorInterpolator" : {
                                    "@DEF":"ColorAnimator",
                                    "@key":"0.0 0.5 1.0",
                                    "@keyValue":"0.9411765 1 1 0.29411766 0 0.50980395 0.9411765 1 1"
                                    }
                                    },
                                    { "TimeSensor" : {
                                    "@DEF":"ColorClock",
                                    "@cycleInterval":"60.0",
                                    "@loop":"true"
                                    }
                                    },
                                    { "ROUTE" : {
                                    "@fromField":"colorsOutput",
                                    "@fromNode":"colorTypeConversionScript",
                                    "@toField":"skyColor",
                                    "@toNode":"GradualBackground"
                                    }
                                    },
                                    { "ROUTE" : {
                                    "@fromField":"value_changed",
                                    "@fromNode":"ColorAnimator",
                                    "@toField":"colorInput",
                                    "@toNode":"colorTypeConversionScript"
                                    }
                                    },
                                    { "ROUTE" : {
                                    "@fromField":"fraction_changed",
                                    "@fromNode":"ColorClock",
                                    "@toField":"set_fraction",
                                    "@toNode":"ColorAnimator"
                                    }
                                    }
                                ]                    }
                    },
                    { "ProtoDeclare" : {
                    "@appinfo":"tooltip: ArtDeco01Material prototype is a Material node",
                    "@name":"ArtDeco01Material"
,                        { "ProtoInterface" :                                     "-field": [
                                        { "field" : {
                                        "@accessType":"inputOutput",
                                        "@appinfo":"tooltip for descriptionField",
                                        "@name":"description",
                                        "@type":"SFString",
                                        "@value":"ArtDeco01Material prototype is a Material node"
                                        }
                                        },
                                        { "field" : {
                                        "@accessType":"inputOutput",
                                        "@name":"enabled",
                                        "@type":"SFBool",
                                        "@value":"True"
                                        }
                                        }
                                    ]                        }
                        },
                        { "ProtoBody" :                                     "-children": [
                    { "#comment" : " Initial node of ProtoBody determines prototype node type " }                                        { "Material" : {
                                        "@ambientIntensity":"0.25",
                                        "@diffuseColor":"0.282435 0.085159 0.134462",
                                        "@shininess":"0.127273",
                                        "@specularColor":"0.276305 0.11431 0.139857"
                                        }
                                        },
                    { "#comment" : " [HelloWorldProgram diagnostic] should be connected to scene graph: artDeco01ProtoDeclare.getNodeType()="Material" " }                    { "#comment" : " presence of follow-on TouchSensor shows that additional nodes are allowed in ProtoBody after initial node, regardless of node types " }                                        { "TouchSensor" : {
                                        "@description":"within ProtoBody"
,                                            { "IS" :                                                         "-connect": [
                                                            { "connect" : {
                                                            "@nodeField":"description",
                                                            "@protoField":"description"
                                                            }
                                                            },
                                                            { "connect" : {
                                                            "@nodeField":"enabled",
                                                            "@protoField":"enabled"
                                                            }
                                                            }
                                                        ]                                            }
                                            },
                                        }
                                        }
                                    ]                        }
                        },
                    }
                    },
                    { "ExternProtoDeclare" : {
                    "@appinfo":"this is a different Material node",
                    "@name":"ArtDeco02Material",
                    "@url":""http://X3dGraphics.com/examples/X3dForWebAuthors/Chapter14Prototypes/ArtDecoPrototypesExcerpt.x3d#ArtDeco02Material" "http://X3dGraphics.com/examples/X3dForWebAuthors/Chapter14Prototypes/ArtDecoPrototypesExcerpt.x3dv#ArtDeco02Material""
,                                "-field": [
                                    { "field" : {
                                    "@accessType":"inputOutput",
                                    "@appinfo":"tooltip for descriptionField",
                                    "@name":"description",
                                    "@type":"SFString"
                                    }
                                    }
                                ]                    }
                    },
          { "#comment" : " Tested ArtDeco01ProtoInstance, ArtDeco02ProtoInstance for improper node type when ProtoInstance is added in wrong place " }                    { "Shape" : {
                    "@DEF":"TestShape1"
,                        { "Appearance" : {
                        "@DEF":"TestAppearance1"
,                            { "ProtoInstance" : {
                            "@name":"ArtDeco01Material"
,                                        "-fieldValue": [
                                            { "fieldValue" : {
                                            "@name":"description",
                                            "@value":"ArtDeco01Material can substitute for a Material node"
                                            }
                                            }
                                        ]                            }
                            },
                        }
                        },
                        { "Sphere" : {
                        "@radius":"0.001"
                        }
                        },
                    }
                    },
                    { "Shape" : {
                    "@DEF":"TestShape2"
,                        { "Appearance" : {
                        "@DEF":"TestAppearance2"
,                            { "ProtoInstance" : {
                            "@DEF":"ArtDeco02MaterialDEF",
                            "@name":"ArtDeco02Material"
,                                        "-fieldValue": [
                                            { "fieldValue" : {
                                            "@name":"description",
                                            "@value":"ArtDeco02Material can substitute for another Material node"
                                            }
                                            }
                                        ]                            }
                            },
                        }
                        },
                        { "Cone" : {
                        "@bottomRadius":"0.001",
                        "@height":"0.001"
                        }
                        },
                    }
                    },
                    { "Shape" : {
                    "@DEF":"TestShape3"
,                        { "Appearance" : {
                        "@DEF":"TestAppearance3"
,                            { "ProtoInstance" : {
                            "@USE":"ArtDeco02MaterialDEF"
                            }
                            },
                        }
                        },
                        { "Cylinder" : {
                        "@height":"0.001",
                        "@radius":"0.001"
                        }
                        },
                    }
                    },
                    { "Inline" : {
                    "@DEF":"inlineSceneDef",
                    "@url":""someOtherScene.x3d" "http://www.web3d.org/specifications/java/examples/someOtherScene.x3d""
                    }
                    },
                    { "IMPORT" : {
                    "@AS":"WorldInfoDEF2",
                    "@importedDEF":"WorldInfoDEF",
                    "@inlineDEF":"inlineSceneDef"
                    }
                    },
                    { "EXPORT" : {
                    "@AS":"WorldInfoDEF3",
                    "@localDEF":"WorldInfoDEF"
                    }
                    },
                    { "ProtoDeclare" : {
                    "@appinfo":"mimic a Material node and modulate fields as an animation effect",
                    "@documentation":"http://x3dgraphics.com/examples/X3dForWebAuthors/Chapter14Prototypes/MaterialModulatorIndex.html",
                    "@name":"MaterialModulator"
,                        { "ProtoInterface" :                                     "-field": [
                                        { "field" : {
                                        "@accessType":"inputOutput",
                                        "@name":"enabled",
                                        "@type":"SFBool",
                                        "@value":"True"
                                        }
                                        },
                                        { "field" : {
                                        "@accessType":"inputOutput",
                                        "@name":"diffuseColor",
                                        "@type":"SFColor",
                                        "@value":"(0, 0, 0)"
                                        }
                                        },
                                        { "field" : {
                                        "@accessType":"inputOutput",
                                        "@name":"emissiveColor",
                                        "@type":"SFColor",
                                        "@value":"(0.05, 0.05, 0.5)"
                                        }
                                        },
                                        { "field" : {
                                        "@accessType":"inputOutput",
                                        "@name":"specularColor",
                                        "@type":"SFColor",
                                        "@value":"(0, 0, 0)"
                                        }
                                        },
                                        { "field" : {
                                        "@accessType":"inputOutput",
                                        "@name":"transparency",
                                        "@type":"SFFloat"
                                        }
                                        },
                                        { "field" : {
                                        "@accessType":"inputOutput",
                                        "@name":"shininess",
                                        "@type":"SFFloat"
                                        }
                                        },
                                        { "field" : {
                                        "@accessType":"inputOutput",
                                        "@name":"ambientIntensity",
                                        "@type":"SFFloat"
                                        }
                                        }
                                    ]                        }
                        },
                        { "ProtoBody" :                                     "-children": [
                                        { "Material" : {
                                        "@DEF":"MaterialNode"
,                                            { "IS" :                                                         "-connect": [
                                                            { "connect" : {
                                                            "@nodeField":"diffuseColor",
                                                            "@protoField":"diffuseColor"
                                                            }
                                                            },
                                                            { "connect" : {
                                                            "@nodeField":"emissiveColor",
                                                            "@protoField":"emissiveColor"
                                                            }
                                                            },
                                                            { "connect" : {
                                                            "@nodeField":"specularColor",
                                                            "@protoField":"specularColor"
                                                            }
                                                            },
                                                            { "connect" : {
                                                            "@nodeField":"transparency",
                                                            "@protoField":"transparency"
                                                            }
                                                            },
                                                            { "connect" : {
                                                            "@nodeField":"shininess",
                                                            "@protoField":"shininess"
                                                            }
                                                            },
                                                            { "connect" : {
                                                            "@nodeField":"ambientIntensity",
                                                            "@protoField":"ambientIntensity"
                                                            }
                                                            }
                                                        ]                                            }
                                            },
                                        }
                                        },
                    { "#comment" : " Only first node (the node type) is renderable, others are along for the ride " }                                        { "Script" : {
                                        "@DEF":"MaterialModulatorScript",
                                        "@sourceCode":"['', '', 'ecmascript:', 'function initialize ()', '{', '    newColor = diffuseColor; // start with correct color', '}', 'function set_enabled (newValue)', '{', '	enabled = newValue;', '}', 'function clockTrigger (timeValue)', '{', '    if (!enabled) return;', '    red   = newColor.r;', '    green = newColor.g;', '    blue  = newColor.b;', '', '    // note different modulation rates for each color component, % is modulus operator', '    newColor = new SFColor ((red + 0.02) % 1, (green + 0.03) % 1, (blue + 0.04) % 1);', '	if (enabled)', '	{', &quot;		Browser.print ('diffuseColor=(' + red + ',' + green + ',' + blue + ') newColor=' + newColor.toString() + '
');&quot;, '	}', '}', '', '']"
,                                            { "IS" :                                                         "-connect": [
                                                            { "connect" : {
                                                            "@nodeField":"enabled",
                                                            "@protoField":"enabled"
                                                            }
                                                            },
                                                            { "connect" : {
                                                            "@nodeField":"diffuseColor",
                                                            "@protoField":"diffuseColor"
                                                            }
                                                            }
                                                        ]                                            }
                                            },
                                                    "-field": [
                                                        { "field" : {
                                                        "@accessType":"inputOutput",
                                                        "@name":"enabled",
                                                        "@type":"SFBool"
                                                        }
                                                        },
                                                        { "field" : {
                                                        "@accessType":"inputOutput",
                                                        "@name":"diffuseColor",
                                                        "@type":"SFColor"
                                                        }
                                                        },
                                                        { "field" : {
                                                        "@accessType":"outputOnly",
                                                        "@name":"newColor",
                                                        "@type":"SFColor"
                                                        }
                                                        },
                                                        { "field" : {
                                                        "@accessType":"inputOnly",
                                                        "@name":"clockTrigger",
                                                        "@type":"SFTime"
                                                        }
                                                        }
                                                    ]                                        }
                                        }
                                    ]                        }
                        },
                    }
                    },
          { "#comment" : " Test success: declarative statement createDeclarativeShapeTests() " }                    { "Group" : {
                    "@DEF":"DeclarativeGroupExample"
,                                "-children": [
                                    { "Shape" :                                         { "Appearance" : {
                                        "@DEF":"DeclarativeAppearanceExample"
,                                            { "ProtoInstance" : {
                                            "@DEF":"MyMaterialModulator",
                                            "@name":"MaterialModulator"
                                            }
                                            },
                                        }
                                        },
                                        { "Cone" : {
                                        "@bottom":"false",
                                        "@bottomRadius":"0.05",
                                        "@height":"0.1"
                                        }
                                        },
                                        { "MetadataString" : {
                                        "@DEF":"FindableMetadataStringTest",
                                        "@name":"findThisNameValue",
                                        "@value":""test case""
                                        }
                                        },
                                    }
                                    },
                  { "#comment" : " Test success: declarativeGroup.addChild() singleton pipeline method " }
                                ]                    }
                    },
          { "#comment" : " Test success: declarative statement addChild() " }          { "#comment" : " Test success: x3dModel.findNodeByDEF(DeclarativeAppearanceExample) = <Appearance DEF='DeclarativeAppearanceExample'/> i.e. <Appearance DEF='DeclarativeAppearanceExample'> <!- - DeclarativeMaterialExample gets overridden by subsequently added MaterialModulator ProtoInstance - -> <ProtoInstance DEF='MyMaterialModulator' name='MaterialModulator' containerField='material'/> </Appearance> " }          { "#comment" : " Test success: x3dModel.findElementByNameValue(findThisNameValue) = <MetadataString DEF='FindableMetadataStringTest' name='findThisNameValue' value='"test case"'/> " }          { "#comment" : " Test success: x3dModel.findElementByNameValue("ArtDeco01Material", "ProtoDeclare") found " }          { "#comment" : " Test success: x3dModel.findElementByNameValue("MaterialModulator", "ProtoDeclare") found " }          { "#comment" : " Test success: x3dModel.findElementByNameValue("MaterialModulator", "ProtoInstance") found " }                    { "Group" : {
                    "@DEF":"TestFieldObjectsGroup"
,                                "-children": [
                  { "#comment" : " testFieldObjects() results " }                  { "#comment" : " SFBool default=true, true=true, false=false, negate()=true " }                  { "#comment" : " MFBool default=, initial=true false true, negate()=false true false " }                  { "#comment" : " SFFloat default=0.0, initial=1.0, setValue(2)=2.0, setValue(3.0f)=3.0, setValue(4.0)=4.0 " }                  { "#comment" : " MFFloat default=, initial=1 2 3, append(5)=1 2 3 5, inserts(3,4)(0,0)=0 1 2 3 4 5, append(6)=0 1 2 3 4 5 6, size()=7 " }                  { "#comment" : " ... get1Value[3]=3.0, remove[1]=0 2 3 4 5 6, set1Value(0,10)=10 2 3 4 5 6, multiply(2)=20 4 6 8 10 12, clear= " }                  { "#comment" : " SFVec3f default=0 0 0, initial=1 2 3, setValue=4 5 6, multiply(2)=8 10 12, normalize()=0.45584232 0.5698029 0.68376344, regex matches()=true " }                  { "#comment" : " regex test SFVec3f().matches("1 2 3")=true, regex test SFVec3f().matches("1 2 3 4")=false, regex test (SFRotationObject.matches("0 0 0 0")=true, failure detecting illegal (zero axis) rotation value " }
                                ]                    }
                    },
                    { "Sound" : {
                    "@location":"0 1.6 0"
,                        { "AudioClip" : {
                        "@description":"chimes",
                        "@url":""chimes.wav" "http://www.web3d.org/x3d/content/examples/ConformanceNist/Sounds/AudioClip/chimes.wav""
                        }
                        },
                    }
                    },
                    { "Sound" : {
                    "@location":"0 1.6 0"
,                        { "MovieTexture" : {
                        "@description":"mpgsys.mpg from ConformanceNist suite",
                        "@url":""mpgsys.mpg" "http://www.web3d.org/x3d/content/examples/ConformanceNist/Appearance/MovieTexture/mpgsys.mpg""
                        }
                        },
                    }
                    },
          { "#comment" : " Test success: AnchorObject.isNode()=true, siteAnchor.isNode()=true " }          { "#comment" : " Test success: AnchorObject.isStatement()=false, siteAnchor.isStatement()=false " }          { "#comment" : " Test success: ROUTEObject.isNode()=false, orbitPositionROUTE.isNode()=false " }          { "#comment" : " Test success: ROUTEObject.isStatement()=true, orbitPositionROUTE.isStatement()=true " }          { "#comment" : " Test success: CommentsBlock.isNode()=false, testComments.isNode()=false " }          { "#comment" : " Test failure: CommentsBlock.isStatement()=true, testComments.isStatement()=true " }                    { "Shape" : {
                    "@DEF":"ExtrusionShape"
,                        { "Appearance" : {
                        "@DEF":"TransparentAppearance"
,                            { "Material" : {
                            "@transparency":"1.0"
                            }
                            },
                        }
                        },
                        { "Extrusion" : {
                        "@DEF":"ExampleExtrusion"
                        }
                        },
                    }
                    },
                    { "Group" :                                 "-children": [
                  { "#comment" : " Test MFNode children array as an ordered list consisting of comments, statements, ProtoInstance and nodes " }                                    { "ProtoDeclare" : {
                                    "@name":"NewWorldInfo"
,                                        { "ProtoInterface" :                                                     "-field": [
                                                        { "field" : {
                                                        "@accessType":"initializeOnly",
                                                        "@name":"description",
                                                        "@type":"SFString"
                                                        }
                                                        }
                                                    ]                                        }
                                        },
                                        { "ProtoBody" :                                                     "-children": [
                                                        { "WorldInfo" :                                                         }
                                                    ]                                        }
                                        },
                                    }
                                    },
                                    { "ProtoInstance" : {
                                    "@DEF":"Proto1",
                                    "@name":"NewWorldInfo"
,                                                "-fieldValue": [
                                                    { "fieldValue" : {
                                                    "@name":"description",
                                                    "@value":"testing 1 2 3"
                                                    }
                                                    }
                                                ]                                    }
                                    },
                                    { "Group" : {
                                    "@DEF":"Node2"
,                                                "-children": [
                          { "#comment" : " intentionally empty " }
                                                ]                                    }
                                    },
                                    { "ProtoInstance" : {
                                    "@DEF":"Proto3",
                                    "@name":"NewWorldInfo"
                                    }
                                    },
                                    { "Transform" : {
                                    "@DEF":"Node4"
,                                                "-children": [
                          { "#comment" : " intentionally empty " }
                                                ]                                    }
                                    },
                  { "#comment" : " Test satisfactorily creates MFNode children array as an ordered list with mixed content " }
                                ]                    }
                    },
                    { "ProtoDeclare" : {
                    "@name":"ShaderProto"
,                        { "ProtoBody" :                                     "-children": [
                                        { "ProgramShader" :                                         }
                                        }
                                    ]                        }
                        },
                    }
                    },
                    { "Shape" :                         { "Appearance" :                                     "-shaders": [
                                        { "ProgramShader" : {
                                        "@DEF":"TestShader1"
,                                                    "-programs": [
                                                        { "ShaderProgram" : {
                                                        "@DEF":"TestShader2"
                                                        }
                                                        }
                                                    ]                                        }
                                        },
                                        { "ProtoInstance" : {
                                        "@DEF":"TestShader3",
                                        "@name":"ShaderProto"
                                        }
                                        },
                                        { "ComposedShader" : {
                                        "@DEF":"TestShader4"
,                                                    "-parts": [
                                                        { "ShaderPart" : {
                                                        "@DEF":"TestShader5"
                                                        }
                                                        }
                                                    ]                                        }
                                        }
                                    ]                        }
                        },
                    }
                    }
                ]    }
    },

        }
}

