load('X3Dautoclass.js');
var ConfigurationProperties = Packages.org.web3d.x3d.jsail.ConfigurationProperties;
ConfigurationProperties.showDefaultAttributes = false;
ConfigurationProperties.xsltEngine = ConfigurationProperties.XSLT_ENGINE_NATIVE_JAVA;
ConfigurationProperties.deleteIntermediateFiles = false;
ConfigurationProperties.setStripTrailingZeroes(true);
var ProtoInstance0 = null;
var ProtoInstance1 = null;
var ProtoInstance2 = null;
var ProtoInstance3 = null;
      var X3D0 =  new X3D().setProfile("Immersive").setVersion("3.3")
      .setHead(new head()
        .addComponent(new component().setName("Geospatial").setLevel(1))
        .addComponent(new component().setName("NURBS").setLevel(2))
        .addComponent(new component().setName("Core").setLevel(2))
        .addComponent(new component().setName("Navigation").setLevel(1))
        .addComponent(new component().setName("Text").setLevel(1))
        .addMeta(new meta().setName("title").setContent("X3dHeaderPrototypeSyntaxExamples.x3d"))
        .addMeta(new meta().setName("description").setContent("X3D scene header and prototype syntax examples. This example header indicates that the content is XML encoded, follows the Interactive Profile and explicitly lists additional necessary components. The X3D header may also contain additional semantic information. Used for specification EXAMPLE excerpts in 19776:1 XML Encoding."))
        .addMeta(new meta().setName("created").setContent("14 October 2002"))
        .addMeta(new meta().setName("modified").setContent("27 May 2017"))
        .addMeta(new meta().setName("creator").setContent("Don Brutzman"))
        .addMeta(new meta().setName("specificationSection").setContent("X3D encodings, ISO/IEC 19776-1.3, Part 1: XML encoding, 4.3 XML file syntax"))
        .addMeta(new meta().setName("specificationUrl").setContent("http://www.web3d.org/documents/specifications/19776-1/V3.3/Part01/concepts.html#XMLFileSyntax"))
        .addMeta(new meta().setName("identifier").setContent("http://www.web3d.org/x3d/content/examples/Basic/X3dSpecifications/X3dHeaderPrototypeSyntaxExamples.x3d"))
        .addMeta(new meta().setName("generator").setContent("X3D-Edit 3.3, https://savage.nps.edu/X3D-Edit"))
        .addMeta(new meta().setName("license").setContent("../license.html")))
      .setScene(new Scene()
        .addChild(new ExternProtoDeclare().setName("ViewPositionOrientation").setUrl(Java.to(["../../Savage/Tools/Authoring/ViewPositionOrientationPrototype.x3d#ViewPositionOrientation","https://savage.nps.edu/Savage/Tools/Authoring/ViewPositionOrientationPrototype.x3d#ViewPositionOrientation","../../Savage/Tools/Authoring/ViewPositionOrientationPrototype.wrl#ViewPositionOrientation","https://savage.nps.edu/Savage/Tools/Authoring/ViewPositionOrientationPrototype.wrl#ViewPositionOrientation"], Java.type("java.lang.String[]")))
          .addField(new field().setType(field.TYPE_SFBOOL).setName("enabled").setAccessType(field.ACCESSTYPE_INPUTOUTPUT))
          .addField(new field().setType(field.TYPE_SFBOOL).setName("traceEnabled").setAccessType(field.ACCESSTYPE_INITIALIZEONLY))
          .addField(new field().setType(field.TYPE_SFBOOL).setName("set_traceEnabled").setAccessType(field.ACCESSTYPE_INPUTONLY))
          .addField(new field().setType(field.TYPE_SFVEC3F).setName("position_changed").setAccessType(field.ACCESSTYPE_OUTPUTONLY))
          .addField(new field().setType(field.TYPE_SFROTATION).setName("orientation_changed").setAccessType(field.ACCESSTYPE_OUTPUTONLY))
          .addField(new field().setType(field.TYPE_MFSTRING).setName("outputViewpointString").setAccessType(field.ACCESSTYPE_OUTPUTONLY)))
        .addChild(new ProtoDeclare().setName("NewWorldInfoNode")
          .setProtoBody(new ProtoBody()
            .addChild(new WorldInfo().setDEF("ExamplePrototypeBody"))))
        .addChild(ProtoInstance0 = new ProtoInstance().setName("NewWorldInfoNode"))
        .addChild(new ProtoDeclare().setName("EmissiveMaterial")
          .setProtoInterface(new ProtoInterface()
            .addField(new field().setType(field.TYPE_SFCOLOR).setName("onlyColor").setAccessType(field.ACCESSTYPE_INPUTOUTPUT).setValue("1 0 0")))
          .setProtoBody(new ProtoBody()
            .addComments(new CommentsBlock("Override default diffuseColor value 0.8 0.8 0.8"))
            .addChild(new Material().setDiffuseColor(Java.to([0,0,0], Java.type("float[]")))
              .addComments(new CommentsBlock("Connect emissiveColor field of current node to onlyColor field of parent ProtoDeclare."))
              .setIS(new IS()
                .addConnect(new connect().setNodeField("emissiveColor").setProtoField("onlyColor"))))))
        .addChild(new ProtoDeclare().setName("ShiftGroupUp2m")
          .setProtoInterface(new ProtoInterface()
            .addField(new field().setType(field.TYPE_MFNODE).setName("children").setAccessType(field.ACCESSTYPE_INPUTOUTPUT)
              .addChild(new Group().setDEF("DefaultNodeValue").setBboxSize(Java.to([2,2,2], Java.type("float[]")))
                .addComments(new CommentsBlock("Authors need to override this node when creating the ProtoInstance fieldValue name=\"children\"")))))
          .setProtoBody(new ProtoBody()
            .addChild(new Transform().setTranslation(Java.to([0,2,0], Java.type("float[]")))
              .addChild(new Group()
                .setIS(new IS()
                  .addConnect(new connect().setNodeField("children").setProtoField("children")))))))
        .addChild(ProtoInstance1 = new ProtoInstance().setName("ShiftGroupUp2m"))
        .addComments(new CommentsBlock("===================="))
        .addChild(new Viewpoint().setDEF("ExampleSingleElement").setDescription("Hello syntax"))
        .addChild(new Group().setDEF("ExampleChildElement")
          .addChild(new Shape()
            .setGeometry(new Box())
            .setAppearance(new Appearance()
              .setMaterial(new Material().setDiffuseColor(Java.to([0.6,0.4,0.2], Java.type("float[]")))))))
        .addChild(new Transform().setDEF("TransformExampleUSE").setRotation(Java.to([0,1,0,0.78], Java.type("float[]"))).setTranslation(Java.to([0,2.5,0], Java.type("float[]")))
          .addChild(new Group().setUSE("ExampleChildElement")))
        .addChild(new Collision()
          .setProxy(new Shape()
            .addComments(new CommentsBlock("note that Collision proxy Shape is not rendered"))
            .setGeometry(new Sphere())
            .setAppearance(new Appearance()
              .setMaterial(new Material())))
          .addChild(new Group().setUSE("ExampleChildElement")))
        .addChild(new Transform().setTranslation(Java.to([0,-2.5,0], Java.type("float[]")))
          .addChild(new Shape()
            .setAppearance(new Appearance()
              .setMaterial(ProtoInstance2 = new ProtoInstance().setName("EmissiveMaterial")))
            .setGeometry(new Text().setString(Java.to(["X3D Header Prototype syntax examples","(view console for EXTERNPROTO output)"], Java.type("java.lang.String[]")))
              .setFontStyle(new FontStyle().setJustify(Java.to(["MIDDLE","MIDDLE"], Java.type("java.lang.String[]"))).setSize(0.6)))))
        .addChild(ProtoInstance3 = new ProtoInstance().setName("ViewPositionOrientation"))
        .addChild(new TimeSensor().setDEF("Clock").setCycleInterval(4).setLoop(true))
        .addChild(new OrientationInterpolator().setDEF("Spinner").setKey(Java.to([0,0.5,1], Java.type("float[]"))).setKeyValue(Java.to([0,1,0,0,0,1,0,3.14159,0,1,0,6.28318], Java.type("float[]"))))
        .addChild(new ROUTE().setFromField("fraction_changed").setFromNode("Clock").setToField("set_fraction").setToNode("Spinner"))
        .addChild(new ROUTE().setFromField("value_changed").setFromNode("Spinner").setToField("rotation").setToNode("TransformExampleUSE"))
        .addChild(new Inline().setDEF("someInline").setUrl(Java.to(["someUrl.x3d","http://www.web3d.org/x3d/content/examples/Basic/X3dSpecifications/someUrl.x3d"], Java.type("java.lang.String[]"))))
        .addChild(new IMPORT().setAS("someInlineRoot").setImportedDEF("someName").setInlineDEF("someInline"))
        .addChild(new PositionInterpolator().setDEF("StayInPlace").setKey(Java.to([0,1], Java.type("float[]"))).setKeyValue(Java.to([0,0,0,0,0,0], Java.type("float[]"))))
        .addChild(new ROUTE().setFromField("fraction_changed").setFromNode("Clock").setToField("set_fraction").setToNode("StayInPlace"))
        .addChild(new ROUTE().setFromField("value_changed").setFromNode("StayInPlace").setToField("set_translation").setToNode("someInlineRoot")))      ;
ProtoInstance2
                .addFieldValue(new fieldValue().setName("onlyColor").setValue("0.2 0.6 0.6"));
ProtoInstance3
          .addFieldValue(new fieldValue().setName("enabled").setValue("true"));
    X3D0.toFileX3D("../data/X3dHeaderPrototypeSyntaxExamples.new.x3d");
