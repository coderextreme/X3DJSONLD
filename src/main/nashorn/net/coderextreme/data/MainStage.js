load('X3Dautoclass.js');
var ConfigurationProperties = Packages.org.web3d.x3d.jsail.ConfigurationProperties;
ConfigurationProperties.showDefaultAttributes = false;
ConfigurationProperties.xsltEngine = ConfigurationProperties.XSLT_ENGINE_NATIVE_JAVA;
ConfigurationProperties.deleteIntermediateFiles = false;
ConfigurationProperties.setStripTrailingZeroes(true);
      var X3D0 =  new X3D().setProfile("Interchange").setVersion("4.0")
      .setHead(new head()
        .addMeta(new meta().setName("title").setContent("MainStage.x3d"))
        .addMeta(new meta().setName("description").setContent("Main stage for HAnim scene Winter and Spring."))
        .addMeta(new meta().setName("creator").setContent("Joe Williams"))
        .addMeta(new meta().setName("translator").setContent("Joe Williams and Don Brutzman"))
        .addMeta(new meta().setName("created").setContent("25 May 2023"))
        .addMeta(new meta().setName("modified").setContent("27 May 2023"))
        .addMeta(new meta().setName("reference").setContent("originals/0MainStageScene0525.x3dv"))
        .addMeta(new meta().setName("identifier").setContent("https://www.web3d.org/x3d/content/examples/HumanoidAnimation/WinterAndSpring/MainStage.x3d"))
        .addMeta(new meta().setName("generator").setContent("X3D-Edit 4.0, https://savage.nps.edu/X3D-Edit"))
        .addComponent(new component().setName("HAnim").setLevel(1)))
      .setScene(new Scene()
        .addChild(new WorldInfo().setTitle("MainStage.x3d"))
        .addChild(new NavigationInfo().setHeadlight(false))
        .addChild(new DirectionalLight().setGlobal(true).setAmbientIntensity(1).setDirection(Java.to([-0.5,-0.5,-0.5], Java.type("double[]"))))
        .addChild(new DirectionalLight().setGlobal(true).setAmbientIntensity(1).setDirection(Java.to([-1,-1,-1], Java.type("double[]"))))
        .addChild(new DirectionalLight().setGlobal(true).setIntensity(0.5).setAmbientIntensity(1).setDirection(Java.to([1,1,-1], Java.type("double[]"))))
        .addChild(new Viewpoint().setDEF("Scene_StageFrontViewFar").setDescription("hanim_Stage Front View").setPosition(Java.to([0,4,10], Java.type("double[]"))).setOrientation(Java.to([1,0,0,-0.449999988], Java.type("double[]"))))
        .addChild(new Viewpoint().setDEF("Scene_InclinedView").setDescription("hanim_Inclined View").setPosition(Java.to([2.62,1.05,4.06], Java.type("double[]"))).setOrientation(Java.to([-0.112999998,0.992999971,0.034699999,0.671000004], Java.type("double[]"))))
        .addChild(new Viewpoint().setDEF("Scene_StageFrontView").setDescription("hanim_Stage Front View").setPosition(Java.to([0,1,5], Java.type("double[]"))))
        .addChild(new Viewpoint().setDEF("Scene_FeetStageBottomView").setDescription("hanim_feet View").setPosition(Java.to([0,-10,0], Java.type("double[]"))).setOrientation(Java.to([1,0,0,1.570000052], Java.type("double[]"))))
        .addChild(new Viewpoint().setDEF("Scene_HeadTopView").setDescription("hanim_Head Top View").setPosition(Java.to([0,15,0], Java.type("double[]"))).setOrientation(Java.to([1,0,0,-1.570000052], Java.type("double[]"))))
        .addChild(new Viewpoint().setDEF("Scene_TopFrontCloseView").setDescription("hanim_Head Top View").setPosition(Java.to([0,8,3], Java.type("double[]"))).setOrientation(Java.to([1,0,0,-1.100000024], Java.type("double[]"))))
        .addChild(new Group().setDEF("HAnimStage")
          .addChild(new Transform().setDEF("cordsysfloor").setScale(Java.to([0.175,0.175,0.175], Java.type("double[]")))
            .addChild(new Inline().setUrl(Java.to(["JointCoordinateAxes.x3dv"], Java.type("java.lang.String[]")))))
          .addChild(new Transform().setDEF("StageGeometry").setTranslation(Java.to([0,-0.01,0], Java.type("double[]"))).setScale(Java.to([1,0.01,1], Java.type("double[]")))
            .addChild(new Shape()
              .setAppearance(new Appearance()
                .setMaterial(new Material().setTransparency(0.6)))
              .setGeometry(new Box().setSize(Java.to([9,1,9], Java.type("double[]")))))
            .addChild(new Transform().setDEF("Circle0")
              .addChild(new Shape()
                .setAppearance(new Appearance().setDEF("LineColor")
                  .setMaterial(new Material().setAmbientIntensity(1).setDiffuseColor(Java.to([0.7,0,0.9], Java.type("double[]"))).setSpecularColor(Java.to([0,0,1], Java.type("double[]"))).setEmissiveColor(Java.to([0.45,0.45,1], Java.type("double[]"))).setShininess(1)))
                .setGeometry(new IndexedLineSet().setDEF("Orbit1").setCoordIndex(Java.to([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,-1], Java.type("int[]")))
                  .setCoord(new Coordinate().setPoint(Java.to([1,0,0,0.995,0,-0.105,0.979,0,-0.208,0.951,0,-0.309,0.914,0,-0.407,0.866,0,-0.5,0.809,0,-0.588,0.743,0,-0.669,0.669,0,-0.743,0.588,0,-0.809,0.5,0,-0.866,0.407,0,-0.914,0.309,0,-0.951,0.208,0,-0.978,0.105,0,-0.995,0,0,-1,-0.105,0,-0.994522,-0.208,0,-0.978,-0.309,0,-0.951,-0.407,0,-0.914,-0.5,0,-0.866,-0.588,0,-0.809,-0.669,0,-0.743,-0.743,0,-0.669,-0.809,0,-0.588,-0.866,0,-0.5,-0.914,0,-0.407,-0.951,0,-0.309,-0.978,0,-0.208,-0.995,0,-0.105,-1,0,0,-0.995,0,0.105,-0.978,0,0.208,-0.951,0,0.309,-0.914,0,0.407,-0.866,0,0.5,-0.809,0,0.588,-0.743,0,0.669,-0.669,0,0.743,-0.588,0,0.809,-0.5,0,0.866,-0.407,0,0.914,-0.309,0,0.951,-0.208,0,0.978,-0.105,0,0.995,0,0,1,0.105,0,0.995,0.208,0,0.978,0.309,0,0.951,0.407,0,0.914,0.5,0,0.866,0.588,0,0.809,0.669,0,0.743,0.743,0,0.669,0.809,0,0.588,0.866,0,0.5,0.914,0,0.407,0.951,0,0.309,0.978,0,0.208,0.995,0,0.104,1,0,0], Java.type("double[]")))))))
            .addChild(new Transform().setDEF("Circle1").setScale(Java.to([0.5,1,0.5], Java.type("double[]")))
              .addChild(new Shape()
                .setAppearance(new Appearance().setUSE("LineColor"))
                .setGeometry(new IndexedLineSet().setUSE("Orbit1"))))
            .addChild(new Transform().setDEF("Circle2").setScale(Java.to([0.25,1,0.25], Java.type("double[]")))
              .addChild(new Shape()
                .setAppearance(new Appearance().setUSE("LineColor"))
                .setGeometry(new IndexedLineSet().setUSE("Orbit1"))))
            .addChild(new Transform().setDEF("Circle3").setScale(Java.to([2,1,2], Java.type("double[]")))
              .addChild(new Shape()
                .setAppearance(new Appearance().setUSE("LineColor"))
                .setGeometry(new IndexedLineSet().setUSE("Orbit1"))))
            .addChild(new Transform().setDEF("Circle4").setScale(Java.to([3,1,3], Java.type("double[]")))
              .addChild(new Shape()
                .setAppearance(new Appearance().setUSE("LineColor"))
                .setGeometry(new IndexedLineSet().setUSE("Orbit1")))))))      ;
    X3D0.toFileJSON("../data/MainStage.new.graal.json");
