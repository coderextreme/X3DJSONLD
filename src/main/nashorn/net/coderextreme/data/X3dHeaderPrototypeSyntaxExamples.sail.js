load('X3Dautoclass.js');
var ConfigurationProperties = Packages.org.web3d.x3d.jsail.ConfigurationProperties;
ConfigurationProperties.showDefaultAttributes = false;
ConfigurationProperties.xsltEngine = ConfigurationProperties.XSLT_ENGINE_NATIVE_JAVA;
ConfigurationProperties.deleteIntermediateFiles = false;
ConfigurationProperties.setStripTrailingZeroes(true);
var ProtoInstance0 = null;
var ProtoInstance1 = null;
var ProtoInstance2 = null;
var ProtoInstance3 = null;
      var X3D0 =  new X3DObject().setProfile("Immersive").setVersion("3.3")
      .setHead(new headObject()
        .addComponent(new componentObject().setLevel(1).setName("Geospatial"))
        .addComponent(new componentObject().setLevel(2).setName("NURBS"))
        .addComponent(new componentObject().setLevel(2).setName("Core"))
        .addComponent(new componentObject().setLevel(1).setName("Navigation"))
        .addComponent(new componentObject().setLevel(1).setName("Text"))
        .addMeta(new metaObject().setContent("X3dHeaderPrototypeSyntaxExamples.x3d").setName("title"))
        .addMeta(new metaObject().setContent("X3D scene header and prototype syntax examples. This example header indicates that the content is XML encoded, follows the Interactive Profile and explicitly lists additional necessary components. The X3D header may also contain additional semantic information. Used for specification EXAMPLE excerpts in 19776:1 XML Encoding.").setName("description"))
        .addMeta(new metaObject().setContent("14 October 2002").setName("created"))
        .addMeta(new metaObject().setContent("7 May 2017").setName("modified"))
        .addMeta(new metaObject().setContent("Don Brutzman").setName("creator"))
        .addMeta(new metaObject().setContent("X3D encodings, ISO/IEC 19776-1.3, Part 1: XML encoding, 4.3 XML file syntax").setName("specificationSection"))
        .addMeta(new metaObject().setContent("http://www.web3d.org/documents/specifications/19776-1/V3.3/Part01/concepts.html#XMLFileSyntax").setName("specificationUrl"))
        .addMeta(new metaObject().setContent("http://www.web3d.org/x3d/content/examples/Basic/X3dSpecifications/X3dHeaderPrototypeSyntaxExamples.x3d").setName("identifier"))
        .addMeta(new metaObject().setContent("X3D-Edit 3.3, https://savage.nps.edu/X3D-Edit").setName("generator"))
        .addMeta(new metaObject().setContent("../license.html").setName("license")))
      .setScene(new SceneObject()
        .addChild(new ExternProtoDeclareObject().setName("ViewPositionOrientation").setUrl(Java.to(["../../Savage/Tools/Authoring/ViewPositionOrientationPrototype.x3d#ViewPositionOrientation","https://savage.nps.edu/Savage/Tools/Authoring/ViewPositionOrientationPrototype.x3d#ViewPositionOrientation","../../Savage/Tools/Authoring/ViewPositionOrientationPrototype.wrl#ViewPositionOrientation","https://savage.nps.edu/Savage/Tools/Authoring/ViewPositionOrientationPrototype.wrl#ViewPositionOrientation"], Java.type("java.lang.String[]")))
          .addField(new fieldObject().setType(fieldObject.TYPE_SFBOOL).setAccessType(fieldObject.ACCESSTYPE_INPUTOUTPUT).setName("enabled"))
          .addField(new fieldObject().setType(fieldObject.TYPE_SFBOOL).setAccessType(fieldObject.ACCESSTYPE_INITIALIZEONLY).setName("traceEnabled"))
          .addField(new fieldObject().setType(fieldObject.TYPE_SFBOOL).setAccessType(fieldObject.ACCESSTYPE_INPUTONLY).setName("set_traceEnabled"))
          .addField(new fieldObject().setType(fieldObject.TYPE_SFVEC3F).setAccessType(fieldObject.ACCESSTYPE_OUTPUTONLY).setName("position_changed"))
          .addField(new fieldObject().setType(fieldObject.TYPE_SFROTATION).setAccessType(fieldObject.ACCESSTYPE_OUTPUTONLY).setName("orientation_changed"))
          .addField(new fieldObject().setType(fieldObject.TYPE_MFSTRING).setAccessType(fieldObject.ACCESSTYPE_OUTPUTONLY).setName("outputViewpointString")))
        .addChild(new ProtoDeclareObject().setName("NewWorldInfoNode")
          .setProtoBody(new ProtoBodyObject()
            .addChild(new WorldInfoObject().setDEF("ExamplePrototypeBody"))))
        .addChild(ProtoInstance0 = new ProtoInstanceObject().setName("NewWorldInfoNode"))
        .addChild(new ProtoDeclareObject().setName("EmissiveMaterial")
          .setProtoInterface(new ProtoInterfaceObject()
            .addField(new fieldObject().setType(fieldObject.TYPE_SFCOLOR).setAccessType(fieldObject.ACCESSTYPE_INPUTOUTPUT).setName("onlyColor").setValue("1 0 0")))
          .setProtoBody(new ProtoBodyObject()
            .addComments(new CommentsBlock(' Override default diffuseColor value 0.8 0.8 0.8 '))
            .addChild(new MaterialObject().setDiffuseColor(Java.to([0,0,0], Java.type("float[]")))
              .addComments(new CommentsBlock(' Connect emissiveColor field of current node to onlyColor field of parent ProtoDeclare. '))
              .setIS(new ISObject()
                .addConnect(new connectObject().setNodeField("emissiveColor").setProtoField("onlyColor"))))))
        .addChild(new ProtoDeclareObject().setName("ShiftGroupUp2m")
          .setProtoInterface(new ProtoInterfaceObject()
            .addField(new fieldObject().setType(fieldObject.TYPE_MFNODE).setAccessType(fieldObject.ACCESSTYPE_INPUTOUTPUT).setName("children")
              .addChild(new GroupObject().setDEF("DefaultNodeValue").setBboxSize(Java.to([2,2,2], Java.type("float[]")))
                .addComments(new CommentsBlock(' Authors need to override this node when creating the ProtoInstance fieldValue name="children" ')))))
          .setProtoBody(new ProtoBodyObject()
            .addChild(new TransformObject().setTranslation(Java.to([0,2,0], Java.type("float[]")))
              .addChild(new GroupObject()
                .setIS(new ISObject()
                  .addConnect(new connectObject().setNodeField("children").setProtoField("children")))))))
        .addChild(ProtoInstance1 = new ProtoInstanceObject().setName("ShiftGroupUp2m"))
        .addComments(new CommentsBlock(' ==================== '))
        .addChild(new ViewpointObject().setDEF("ExampleSingleElement").setDescription("Hello syntax"))
        .addChild(new GroupObject().setDEF("ExampleChildElement")
          .addChild(new ShapeObject()
            .setGeometry(new BoxObject())
            .setAppearance(new AppearanceObject()
              .setMaterial(new MaterialObject().setDiffuseColor(Java.to([0.6,0.4,0.2], Java.type("float[]")))))))
        .addChild(new TransformObject().setDEF("TransformExampleUSE").setRotation(Java.to([0,1,0,0.78], Java.type("float[]"))).setTranslation(Java.to([0,2.5,0], Java.type("float[]")))
          .addChild(new GroupObject().setUSE("ExampleChildElement")))
        .addChild(new CollisionObject()
          .setProxy(new ShapeObject()
            .addComments(new CommentsBlock(' note that Collision proxy Shape is not rendered '))
            .addComments(new CommentsBlock(' alternative: Text string=\'"He said, \\&quot;Immel did it!\\&quot;"\' '))
            .setGeometry(new TextObject().setString(Java.to(["He said, \"Immel did it!\""], Java.type("java.lang.String[]"))))
            .setAppearance(new AppearanceObject()
              .setMaterial(new MaterialObject())))
          .addChild(new GroupObject().setUSE("ExampleChildElement")))
        .addChild(new TransformObject().setTranslation(Java.to([0,-2.5,0], Java.type("float[]")))
          .addChild(new ShapeObject()
            .setAppearance(new AppearanceObject()
              .setMaterial(ProtoInstance2 = new ProtoInstanceObject().setName("EmissiveMaterial")))
            .setGeometry(new TextObject().setString(Java.to(["X3D Header Prototype syntax examples","(view console for EXTERNPROTO output)"], Java.type("java.lang.String[]")))
              .setFontStyle(new FontStyleObject().setJustify(Java.to(["MIDDLE","MIDDLE"], Java.type("java.lang.String[]"))).setSize(0.6)))))
        .addChild(ProtoInstance3 = new ProtoInstanceObject().setName("ViewPositionOrientation"))
        .addChild(new TimeSensorObject().setDEF("Clock").setCycleInterval(4).setLoop(true))
        .addChild(new OrientationInterpolatorObject().setDEF("Spinner").setKey(Java.to([0,0.5,1], Java.type("float[]"))).setKeyValue(Java.to([0,1,0,0,0,1,0,3.14159,0,1,0,6.28318], Java.type("float[]"))))
        .addChild(new ROUTEObject().setFromField("fraction_changed").setFromNode("Clock").setToField("set_fraction").setToNode("Spinner"))
        .addChild(new ROUTEObject().setFromField("value_changed").setFromNode("Spinner").setToField("rotation").setToNode("TransformExampleUSE"))
        .addChild(new InlineObject().setDEF("someInline").setUrl(Java.to(["someUrl.x3d","http://www.web3d.org/x3d/content/examples/Basic/X3dSpecifications/someUrl.x3d"], Java.type("java.lang.String[]"))))
        .addChild(new IMPORTObject().setAS("someInlineRoot").setImportedDEF("someName").setInlineDEF("someInline"))
        .addChild(new PositionInterpolatorObject().setDEF("StayInPlace").setKey(Java.to([0,1], Java.type("float[]"))).setKeyValue(Java.to([0,0,0,0,0,0], Java.type("float[]"))))
        .addChild(new ROUTEObject().setFromField("fraction_changed").setFromNode("Clock").setToField("set_fraction").setToNode("StayInPlace"))
        .addChild(new ROUTEObject().setFromField("value_changed").setFromNode("StayInPlace").setToField("set_translation").setToNode("someInlineRoot")))      ;
ProtoInstance2
                .addFieldValue(new fieldValueObject().setName("onlyColor").setValue("0.2 0.6 0.6"));
ProtoInstance3
          .addFieldValue(new fieldValueObject().setName("enabled").setValue("true"));
    X3D0.toFileX3D("../data/X3dHeaderPrototypeSyntaxExamples.new.x3d");
