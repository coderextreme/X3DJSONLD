load('X3Dautoclass.js');

// Javadoc annotations follow, see below for source.
/**
 * <p> In the last demo, there are two sound sources in different positions. Through the immersion in the X3D scene the user could attend a rational navigation. Whenever the camera moves in the direction of an existing sound source, the strength of this source increases, while the sound strength of the other (the second one) decreases and vice versa. Through this process, great realism of the scene is achieved, since it emulates the spatial sound in real world. </p>
 <p> Related links: <a href="../../../AudioSpatialSound/SpatialAudioCameraAnimation.java">SpatialAudioCameraAnimation.java</a> source, <a href="../../../AudioSpatialSound/SpatialAudioCameraAnimationIndex.html" target="_top">SpatialAudioCameraAnimation catalog page</a>, <a href="https://www.web3d.org/x3d/content/examples/X3dResources.html" target="_blank">X3D Resources</a>, <a href="https://www.web3d.org/x3d/content/examples/X3dSceneAuthoringHints.html" target="_blank">X3D Scene Authoring Hints</a> and <a href="https://www.web3d.org/x3d/content/X3dTooltips.html" target="_blank">X3D Tooltips</a>. </p>
	<table style="color:black; border:0px solid; border-spacing:10px 0px;" summary="Scene Metadata">
		<tr style="background-color:silver; border-color:silver;">
			<td style="text-align:center; padding:10px 0px;"><i>meta tags</i></td>
			<td style="text-align:left;   padding:10px 0px;">&nbsp; Document Metadata </td>
		</tr>

		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> title </i> </td>
			<td> <a href="../../../AudioSpatialSound/SpatialAudioCameraAnimation.x3d">SpatialAudioCameraAnimation.x3d</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> description </i> </td>
			<td> In the last demo, there are two sound sources in different positions. Through the immersion in the X3D scene the user could attend a rational navigation. Whenever the camera moves in the direction of an existing sound source, the strength of this source increases, while the sound strength of the other (the second one) decreases and vice versa. Through this process, great realism of the scene is achieved, since it emulates the spatial sound in real world. </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> info </i> </td>
			<td> This work presents an innovative solution of the spatial sound in X3DOM framework, that based on a combinational methodology. Specifically, we suggested the enrichment of X3DOM with spatial sound features, using both the X3D sound nodes and the structure of Web Audio API. </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> creator </i> </td>
			<td> Efi Lakka, Athanasios Malamos, Dick Puk, Don Brutzman </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> created </i> </td>
			<td> 28 October 2020 </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> modified </i> </td>
			<td> 18 November 2020 </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> reference </i> </td>
			<td> CHANGELOG.txt </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> TODO </i> </td>
			<td> credit for audio files </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> reference </i> </td>
			<td> <a href="http://www.medialab.teicrete.gr/minipages/x3domAudio" target="_blank">http://www.medialab.teicrete.gr/minipages/x3domAudio</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> identifier </i> </td>
			<td> <a href="https://x3dgraphics.com/examples/X3dForAdvancedModeling/AudioSpatialSound/SpatialAudioCameraAnimation.x3d" target="_blank">https://x3dgraphics.com/examples/X3dForAdvancedModeling/AudioSpatialSound/SpatialAudioCameraAnimation.x3d</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> generator </i> </td>
			<td> X3D-Edit 4.0, <a href="https://savage.nps.edu/X3D-Edit" target="_blank">https://savage.nps.edu/X3D-Edit</a> </td>
		</tr>
		<tr>
			<td style="text-align:right; vertical-align: text-top;"> <i> license </i> </td>
			<td> <a href="../../../AudioSpatialSound/../license.html">../license.html</a> </td>
		</tr>
		<tr style="background-color:silver; border-color:silver;">
			<td style="text-align:center;" colspan="2">  &nbsp; </td>
		</tr>
	</table>

	<p>
		This program uses the
		<a href="https://www.web3d.org/specifications/java/X3DJSAIL.html" target="_blank">X3D Java Scene Access Interface Library (X3DJSAIL)</a>.
		It has been produced using the 
		<a href="https://www.web3d.org/x3d/stylesheets/X3dToES5.xslt" target="_blank">X3dToES5.xslt</a>
		stylesheet to create ES5 source code from an <code>.x3d</code> scene.
	</p>

	* @author Efi Lakka, Athanasios Malamos, Dick Puk, Don Brutzman
 */

function SpatialAudioCameraAnimation
  /** Default constructor to create this object. */
  ()
  {
    /** The initialized model object, created within initialize() method. */
    this.x3dModel = {};
    this.initialize();
    return this;
  }
SpatialAudioCameraAnimation.prototype = {
  /** Create and initialize the X3D model. */
  initialize : function ()
  {

	/** Large attribute array: PositionInterpolator DEF='Camera001-POS-INTERP' key field, scene-graph level=3, element #19, 1001 total numbers */
	this.Camera001_POS_INTERP_3_19_key = new MFFloat(Java.to([0.000000,0.001000,0.002000,0.003000,0.004000,0.005000,0.006000,0.007000,0.008000,0.009000,0.010000,0.011000,0.012000,0.013000,0.014000,0.015000,0.016000,0.017000,0.018000,0.019000,0.020000,0.021000,0.022000,0.023000,0.024000,0.025000,0.026000,0.027000,0.028000,0.029000,0.030000,0.031000,0.032000,0.033000,0.034000,0.035000,0.036000,0.037000,0.038000,0.039000,0.040000,0.041000,0.042000,0.043000,0.044000,0.045000,0.046000,0.047000,0.048000,0.049000,0.050000,0.051000,0.052000,0.053000,0.054000,0.055000,0.056000,0.057000,0.058000,0.059000,0.060000,0.061000,0.062000,0.063000,0.064000,0.065000,0.066000,0.067000,0.068000,0.069000,0.070000,0.071000,0.072000,0.073000,0.074000,0.075000,0.076000,0.077000,0.078000,0.079000,0.080000,0.081000,0.082000,0.083000,0.084000,0.085000,0.086000,0.087000,0.088000,0.089000,0.090000,0.091000,0.092000,0.093000,0.094000,0.095000,0.096000,0.097000,0.098000,0.099000,0.100000,0.101000,0.102000,0.103000,0.104000,0.105000,0.106000,0.107000,0.108000,0.109000,0.110000,0.111000,0.112000,0.113000,0.114000,0.115000,0.116000,0.117000,0.118000,0.119000,0.120000,0.121000,0.122000,0.123000,0.124000,0.125000,0.126000,0.127000,0.128000,0.129000,0.130000,0.131000,0.132000,0.133000,0.134000,0.135000,0.136000,0.137000,0.138000,0.139000,0.140000,0.141000,0.142000,0.143000,0.144000,0.145000,0.146000,0.147000,0.148000,0.149000,0.150000,0.151000,0.152000,0.153000,0.154000,0.155000,0.156000,0.157000,0.158000,0.159000,0.160000,0.161000,0.162000,0.163000,0.164000,0.165000,0.166000,0.167000,0.168000,0.169000,0.170000,0.171000,0.172000,0.173000,0.174000,0.175000,0.176000,0.177000,0.178000,0.179000,0.180000,0.181000,0.182000,0.183000,0.184000,0.185000,0.186000,0.187000,0.188000,0.189000,0.190000,0.191000,0.192000,0.193000,0.194000,0.195000,0.196000,0.197000,0.198000,0.199000,0.200000,0.201000,0.202000,0.203000,0.204000,0.205000,0.206000,0.207000,0.208000,0.209000,0.210000,0.211000,0.212000,0.213000,0.214000,0.215000,0.216000,0.217000,0.218000,0.219000,0.220000,0.221000,0.222000,0.223000,0.224000,0.225000,0.226000,0.227000,0.228000,0.229000,0.230000,0.231000,0.232000,0.233000,0.234000,0.235000,0.236000,0.237000,0.238000,0.239000,0.240000,0.241000,0.242000,0.243000,0.244000,0.245000,0.246000,0.247000,0.248000,0.249000,0.250000,0.251000,0.252000,0.253000,0.254000,0.255000,0.256000,0.257000,0.258000,0.259000,0.260000,0.261000,0.262000,0.263000,0.264000,0.265000,0.266000,0.267000,0.268000,0.269000,0.270000,0.271000,0.272000,0.273000,0.274000,0.275000,0.276000,0.277000,0.278000,0.279000,0.280000,0.281000,0.282000,0.283000,0.284000,0.285000,0.286000,0.287000,0.288000,0.289000,0.290000,0.291000,0.292000,0.293000,0.294000,0.295000,0.296000,0.297000,0.298000,0.299000,0.300000,0.301000,0.302000,0.303000,0.304000,0.305000,0.306000,0.307000,0.308000,0.309000,0.310000,0.311000,0.312000,0.313000,0.314000,0.315000,0.316000,0.317000,0.318000,0.319000,0.320000,0.321000,0.322000,0.323000,0.324000,0.325000,0.326000,0.327000,0.328000,0.329000,0.330000,0.331000,0.332000,0.333000,0.334000,0.335000,0.336000,0.337000,0.338000,0.339000,0.340000,0.341000,0.342000,0.343000,0.344000,0.345000,0.346000,0.347000,0.348000,0.349000,0.350000,0.351000,0.352000,0.353000,0.354000,0.355000,0.356000,0.357000,0.358000,0.359000,0.360000,0.361000,0.362000,0.363000,0.364000,0.365000,0.366000,0.367000,0.368000,0.369000,0.370000,0.371000,0.372000,0.373000,0.374000,0.375000,0.376000,0.377000,0.378000,0.379000,0.380000,0.381000,0.382000,0.383000,0.384000,0.385000,0.386000,0.387000,0.388000,0.389000,0.390000,0.391000,0.392000,0.393000,0.394000,0.395000,0.396000,0.397000,0.398000,0.399000,0.400000,0.401000,0.402000,0.403000,0.404000,0.405000,0.406000,0.407000,0.408000,0.409000,0.410000,0.411000,0.412000,0.413000,0.414000,0.415000,0.416000,0.417000,0.418000,0.419000,0.420000,0.421000,0.422000,0.423000,0.424000,0.425000,0.426000,0.427000,0.428000,0.429000,0.430000,0.431000,0.432000,0.433000,0.434000,0.435000,0.436000,0.437000,0.438000,0.439000,0.440000,0.441000,0.442000,0.443000,0.444000,0.445000,0.446000,0.447000,0.448000,0.449000,0.450000,0.451000,0.452000,0.453000,0.454000,0.455000,0.456000,0.457000,0.458000,0.459000,0.460000,0.461000,0.462000,0.463000,0.464000,0.465000,0.466000,0.467000,0.468000,0.469000,0.470000,0.471000,0.472000,0.473000,0.474000,0.475000,0.476000,0.477000,0.478000,0.479000,0.480000,0.481000,0.482000,0.483000,0.484000,0.485000,0.486000,0.487000,0.488000,0.489000,0.490000,0.491000,0.492000,0.493000,0.494000,0.495000,0.496000,0.497000,0.498000,0.499000,0.500000,0.501000,0.502000,0.503000,0.504000,0.505000,0.506000,0.507000,0.508000,0.509000,0.510000,0.511000,0.512000,0.513000,0.514000,0.515000,0.516000,0.517000,0.518000,0.519000,0.520000,0.521000,0.522000,0.523000,0.524000,0.525000,0.526000,0.527000,0.528000,0.529000,0.530000,0.531000,0.532000,0.533000,0.534000,0.535000,0.536000,0.537000,0.538000,0.539000,0.540000,0.541000,0.542000,0.543000,0.544000,0.545000,0.546000,0.547000,0.548000,0.549000,0.550000,0.551000,0.552000,0.553000,0.554000,0.555000,0.556000,0.557000,0.558000,0.559000,0.560000,0.561000,0.562000,0.563000,0.564000,0.565000,0.566000,0.567000,0.568000,0.569000,0.570000,0.571000,0.572000,0.573000,0.574000,0.575000,0.576000,0.577000,0.578000,0.579000,0.580000,0.581000,0.582000,0.583000,0.584000,0.585000,0.586000,0.587000,0.588000,0.589000,0.590000,0.591000,0.592000,0.593000,0.594000,0.595000,0.596000,0.597000,0.598000,0.599000,0.600000,0.601000,0.602000,0.603000,0.604000,0.605000,0.606000,0.607000,0.608000,0.609000,0.610000,0.611000,0.612000,0.613000,0.614000,0.615000,0.616000,0.617000,0.618000,0.619000,0.620000,0.621000,0.622000,0.623000,0.624000,0.625000,0.626000,0.627000,0.628000,0.629000,0.630000,0.631000,0.632000,0.633000,0.634000,0.635000,0.636000,0.637000,0.638000,0.639000,0.640000,0.641000,0.642000,0.643000,0.644000,0.645000,0.646000,0.647000,0.648000,0.649000,0.650000,0.651000,0.652000,0.653000,0.654000,0.655000,0.656000,0.657000,0.658000,0.659000,0.660000,0.661000,0.662000,0.663000,0.664000,0.665000,0.666000,0.667000,0.668000,0.669000,0.670000,0.671000,0.672000,0.673000,0.674000,0.675000,0.676000,0.677000,0.678000,0.679000,0.680000,0.681000,0.682000,0.683000,0.684000,0.685000,0.686000,0.687000,0.688000,0.689000,0.690000,0.691000,0.692000,0.693000,0.694000,0.695000,0.696000,0.697000,0.698000,0.699000,0.700000,0.701000,0.702000,0.703000,0.704000,0.705000,0.706000,0.707000,0.708000,0.709000,0.710000,0.711000,0.712000,0.713000,0.714000,0.715000,0.716000,0.717000,0.718000,0.719000,0.720000,0.721000,0.722000,0.723000,0.724000,0.725000,0.726000,0.727000,0.728000,0.729000,0.730000,0.731000,0.732000,0.733000,0.734000,0.735000,0.736000,0.737000,0.738000,0.739000,0.740000,0.741000,0.742000,0.743000,0.744000,0.745000,0.746000,0.747000,0.748000,0.749000,0.750000,0.751000,0.752000,0.753000,0.754000,0.755000,0.756000,0.757000,0.758000,0.759000,0.760000,0.761000,0.762000,0.763000,0.764000,0.765000,0.766000,0.767000,0.768000,0.769000,0.770000,0.771000,0.772000,0.773000,0.774000,0.775000,0.776000,0.777000,0.778000,0.779000,0.780000,0.781000,0.782000,0.783000,0.784000,0.785000,0.786000,0.787000,0.788000,0.789000,0.790000,0.791000,0.792000,0.793000,0.794000,0.795000,0.796000,0.797000,0.798000,0.799000,0.800000,0.801000,0.802000,0.803000,0.804000,0.805000,0.806000,0.807000,0.808000,0.809000,0.810000,0.811000,0.812000,0.813000,0.814000,0.815000,0.816000,0.817000,0.818000,0.819000,0.820000,0.821000,0.822000,0.823000,0.824000,0.825000,0.826000,0.827000,0.828000,0.829000,0.830000,0.831000,0.832000,0.833000,0.834000,0.835000,0.836000,0.837000,0.838000,0.839000,0.840000,0.841000,0.842000,0.843000,0.844000,0.845000,0.846000,0.847000,0.848000,0.849000,0.850000,0.851000,0.852000,0.853000,0.854000,0.855000,0.856000,0.857000,0.858000,0.859000,0.860000,0.861000,0.862000,0.863000,0.864000,0.865000,0.866000,0.867000,0.868000,0.869000,0.870000,0.871000,0.872000,0.873000,0.874000,0.875000,0.876000,0.877000,0.878000,0.879000,0.880000,0.881000,0.882000,0.883000,0.884000,0.885000,0.886000,0.887000,0.888000,0.889000,0.890000,0.891000,0.892000,0.893000,0.894000,0.895000,0.896000,0.897000,0.898000,0.899000,0.900000,0.901000,0.902000,0.903000,0.904000,0.905000,0.906000,0.907000,0.908000,0.909000,0.910000,0.911000,0.912000,0.913000,0.914000,0.915000,0.916000,0.917000,0.918000,0.919000,0.920000,0.921000,0.922000,0.923000,0.924000,0.925000,0.926000,0.927000,0.928000,0.929000,0.930000,0.931000,0.932000,0.933000,0.934000,0.935000,0.936000,0.937000,0.938000,0.939000,0.940000,0.941000,0.942000,0.943000,0.944000,0.945000,0.946000,0.947000,0.948000,0.949000,0.950000,0.951000,0.952000,0.953000,0.954000,0.955000,0.956000,0.957000,0.958000,0.959000,0.960000,0.961000,0.962000,0.963000,0.964000,0.965000,0.966000,0.967000,0.968000,0.969000,0.970000,0.971000,0.972000,0.973000,0.974000,0.975000,0.976000,0.977000,0.978000,0.979000,0.980000,0.981000,0.982000,0.983000,0.984000,0.985000,0.986000,0.987000,0.988000,0.989000,0.990000,0.991000,0.992000,0.993000,0.994000,0.995000,0.996000,0.997000,0.998000,0.999000,1.000000], Java.type("float[]")));

	/** Large attribute array: PositionInterpolator DEF='Camera001-POS-INTERP' keyValue field, scene-graph level=3, element #19, 3003 total numbers made up of 1001 3-tuple values */
	this.Camera001_POS_INTERP_3_19_keyValue = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([0.000000,2000.000000,3500.000000,0.000000,2000.000000,3499.916016,0.000000,2000.000000,3499.664795,0.000000,2000.000000,3499.247070,0.000000,2000.000000,3498.663086,0.000000,2000.000000,3497.914063,0.000000,2000.000000,3497.000244,0.000000,2000.000000,3495.922363,0.000000,2000.000000,3494.681396,0.000000,2000.000000,3493.277588], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,3491.711914,0.000000,2000.000000,3489.985107,0.000000,2000.000000,3488.097656,0.000000,2000.000000,3486.050049,0.000000,2000.000000,3483.843262,0.000000,2000.000000,3481.478027,0.000000,2000.000000,3478.954834,0.000000,2000.000000,3476.274170,0.000000,2000.000000,3473.437256,0.000000,2000.000000,3470.444092], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,3467.295898,0.000000,2000.000000,3463.993164,0.000000,2000.000000,3460.536621,0.000000,2000.000000,3456.926758,0.000000,2000.000000,3453.164307,0.000000,2000.000000,3449.250000,0.000000,2000.000000,3445.184570,0.000000,2000.000000,3440.968506,0.000000,2000.000000,3436.602539,0.000000,2000.000000,3432.087646], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,3427.424072,0.000000,2000.000000,3422.612549,0.000000,2000.000000,3417.654053,0.000000,2000.000000,3412.548828,0.000000,2000.000000,3407.298096,0.000000,2000.000000,3401.902100,0.000000,2000.000000,3396.361572,0.000000,2000.000000,3390.677246,0.000000,2000.000000,3384.849609,0.000000,2000.000000,3378.879639], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,3372.768066,0.000000,2000.000000,3366.515137,0.000000,2000.000000,3360.121826,0.000000,2000.000000,3353.588867,0.000000,2000.000000,3346.916504,0.000000,2000.000000,3340.105957,0.000000,2000.000000,3333.157715,0.000000,2000.000000,3326.072266,0.000000,2000.000000,3318.850342,0.000000,2000.000000,3311.492676], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,3304.000000,0.000000,2000.000000,3296.372803,0.000000,2000.000000,3288.612061,0.000000,2000.000000,3280.718262,0.000000,2000.000000,3272.691895,0.000000,2000.000000,3264.533936,0.000000,2000.000000,3256.245117,0.000000,2000.000000,3247.825684,0.000000,2000.000000,3239.276611,0.000000,2000.000000,3230.598389], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,3221.791992,0.000000,2000.000000,3212.857910,0.000000,2000.000000,3203.796631,0.000000,2000.000000,3194.609131,0.000000,2000.000000,3185.296143,0.000000,2000.000000,3175.857910,0.000000,2000.000000,3166.295654,0.000000,2000.000000,3156.609619,0.000000,2000.000000,3146.800293,0.000000,2000.000000,3136.869141], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,3126.815918,0.000000,2000.000000,3116.642090,0.000000,2000.000000,3106.347900,0.000000,2000.000000,3095.933838,0.000000,2000.000000,3085.401123,0.000000,2000.000000,3074.750000,0.000000,2000.000000,3063.981445,0.000000,2000.000000,3053.095703,0.000000,2000.000000,3042.093750,0.000000,2000.000000,3030.976318], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,3019.743896,0.000000,2000.000000,3008.397461,0.000000,2000.000000,2996.937256,0.000000,2000.000000,2985.364258,0.000000,2000.000000,2973.678955,0.000000,2000.000000,2961.882080,0.000000,2000.000000,2949.974365,0.000000,2000.000000,2937.956299,0.000000,2000.000000,2925.828857,0.000000,2000.000000,2913.592529], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,2901.248047,0.000000,2000.000000,2888.795898,0.000000,2000.000000,2876.237061,0.000000,2000.000000,2863.572021,0.000000,2000.000000,2850.801514,0.000000,2000.000000,2837.926025,0.000000,2000.000000,2824.946289,0.000000,2000.000000,2811.863525,0.000000,2000.000000,2798.677490,0.000000,2000.000000,2785.389404], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,2772.000000,0.000000,2000.000000,2758.509766,0.000000,2000.000000,2744.919189,0.000000,2000.000000,2731.229492,0.000000,2000.000000,2717.440918,0.000000,2000.000000,2703.553955,0.000000,2000.000000,2689.569824,0.000000,2000.000000,2675.488770,0.000000,2000.000000,2661.311768,0.000000,2000.000000,2647.039307], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,2632.672119,0.000000,2000.000000,2618.210693,0.000000,2000.000000,2603.656006,0.000000,2000.000000,2589.008545,0.000000,2000.000000,2574.268799,0.000000,2000.000000,2559.437988,0.000000,2000.000000,2544.516357,0.000000,2000.000000,2529.504639,0.000000,2000.000000,2514.403564,0.000000,2000.000000,2499.213867], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,2483.936035,0.000000,2000.000000,2468.570801,0.000000,2000.000000,2453.118896,0.000000,2000.000000,2437.581055,0.000000,2000.000000,2421.958008,0.000000,2000.000000,2406.250000,0.000000,2000.000000,2390.458008,0.000000,2000.000000,2374.583008,0.000000,2000.000000,2358.625244,0.000000,2000.000000,2342.585449], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,2326.464111,0.000000,2000.000000,2310.262207,0.000000,2000.000000,2293.980469,0.000000,2000.000000,2277.619385,0.000000,2000.000000,2261.179443,0.000000,2000.000000,2244.662109,0.000000,2000.000000,2228.067139,0.000000,2000.000000,2211.395752,0.000000,2000.000000,2194.648193,0.000000,2000.000000,2177.825195], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,2160.927979,0.000000,2000.000000,2143.956787,0.000000,2000.000000,2126.912109,0.000000,2000.000000,2109.795166,0.000000,2000.000000,2092.606445,0.000000,2000.000000,2075.346191,0.000000,2000.000000,2058.015381,0.000000,2000.000000,2040.614502,0.000000,2000.000000,2023.144653,0.000000,2000.000000,2005.606201], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,1988.000122,0.000000,2000.000000,1970.326538,0.000000,2000.000000,1952.586548,0.000000,2000.000000,1934.780640,0.000000,2000.000000,1916.909668,0.000000,2000.000000,1898.973999,0.000000,2000.000000,1880.974609,0.000000,2000.000000,1862.911987,0.000000,2000.000000,1844.786743,0.000000,2000.000000,1826.600098], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,1808.352051,0.000000,2000.000000,1790.043457,0.000000,2000.000000,1771.675171,0.000000,2000.000000,1753.247559,0.000000,2000.000000,1734.761597,0.000000,2000.000000,1716.217773,0.000000,2000.000000,1697.617554,0.000000,2000.000000,1678.959961,0.000000,2000.000000,1660.246826,0.000000,2000.000000,1641.478638], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,1622.655884,0.000000,2000.000000,1603.779541,0.000000,2000.000000,1584.850342,0.000000,2000.000000,1565.868408,0.000000,2000.000000,1546.834839,0.000000,2000.000000,1527.750122,0.000000,2000.000000,1508.614868,0.000000,2000.000000,1489.429932,0.000000,2000.000000,1470.196167,0.000000,2000.000000,1450.913818], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,1431.583984,0.000000,2000.000000,1412.207153,0.000000,2000.000000,1392.783569,0.000000,2000.000000,1373.314575,0.000000,2000.000000,1353.800415,0.000000,2000.000000,1334.241821,0.000000,2000.000000,1314.639893,0.000000,2000.000000,1294.994629,0.000000,2000.000000,1275.307373,0.000000,2000.000000,1255.578369], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,1235.807983,0.000000,2000.000000,1215.997559,0.000000,2000.000000,1196.147339,0.000000,2000.000000,1176.258301,0.000000,2000.000000,1156.330933,0.000000,2000.000000,1136.366211,0.000000,2000.000000,1116.364136,0.000000,2000.000000,1096.325928,0.000000,2000.000000,1076.251831,0.000000,2000.000000,1056.142944], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,1035.999756,0.000000,2000.000000,1015.823303,0.000000,2000.000000,995.613586,0.000000,2000.000000,975.371948,0.000000,2000.000000,955.098328,0.000000,2000.000000,934.794006,0.000000,2000.000000,914.459351,0.000000,2000.000000,894.095154,0.000000,2000.000000,873.702087,0.000000,2000.000000,853.280640], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,832.832092,0.000000,2000.000000,812.356506,0.000000,2000.000000,791.854309,0.000000,2000.000000,771.326904,0.000000,2000.000000,750.774536,0.000000,2000.000000,730.197998,0.000000,2000.000000,709.597900,0.000000,2000.000000,688.975342,0.000000,2000.000000,668.330139,0.000000,2000.000000,647.663330], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,626.976013,0.000000,2000.000000,606.268494,0.000000,2000.000000,585.541382,0.000000,2000.000000,564.795471,0.000000,2000.000000,544.031799,0.000000,2000.000000,523.250122,0.000000,2000.000000,502.451721,0.000000,2000.000000,481.637451,0.000000,2000.000000,460.807343,0.000000,2000.000000,439.962708], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,419.103912,0.000000,2000.000000,398.231628,0.000000,2000.000000,377.346954,0.000000,2000.000000,356.449768,0.000000,2000.000000,335.541412,0.000000,2000.000000,314.622009,0.000000,2000.000000,293.692688,0.000000,2000.000000,272.753754,0.000000,2000.000000,251.806290,0.000000,2000.000000,230.850998], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,209.887985,0.000000,2000.000000,188.918503,0.000000,2000.000000,167.942657,0.000000,2000.000000,146.961594,0.000000,2000.000000,125.975639,0.000000,2000.000000,104.985924,0.000000,2000.000000,83.992661,0.000000,2000.000000,62.997101,0.000000,2000.000000,41.999146,0.000000,2000.000000,21.000042], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,0.000000,0.000000,2000.000000,-20.999521,0.000000,2000.000000,-41.999252,0.000000,2000.000000,-62.996895,0.000000,2000.000000,-83.992867,0.000000,2000.000000,-104.985718,0.000000,2000.000000,-125.976059,0.000000,2000.000000,-146.961807,0.000000,2000.000000,-167.942352,0.000000,2000.000000,-188.918503], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,-209.887985,0.000000,2000.000000,-230.850998,0.000000,2000.000000,-251.806290,0.000000,2000.000000,-272.754272,0.000000,2000.000000,-293.692688,0.000000,2000.000000,-314.621674,0.000000,2000.000000,-335.541321,0.000000,2000.000000,-356.449677,0.000000,2000.000000,-377.347168,0.000000,2000.000000,-398.231750], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,-419.104218,0.000000,2000.000000,-439.962708,0.000000,2000.000000,-460.807434,0.000000,2000.000000,-481.637360,0.000000,2000.000000,-502.451416,0.000000,2000.000000,-523.250061,0.000000,2000.000000,-544.031372,0.000000,2000.000000,-564.795776,0.000000,2000.000000,-585.541382,0.000000,2000.000000,-606.268677], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,-626.976135,0.000000,2000.000000,-647.663147,0.000000,2000.000000,-668.330139,0.000000,2000.000000,-688.974792,0.000000,2000.000000,-709.598206,0.000000,2000.000000,-730.197998,0.000000,2000.000000,-750.774658,0.000000,2000.000000,-771.326904,0.000000,2000.000000,-791.853882,0.000000,2000.000000,-812.356323], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,-832.831787,0.000000,2000.000000,-853.280945,0.000000,2000.000000,-873.701965,0.000000,2000.000000,-894.095459,0.000000,2000.000000,-914.459534,0.000000,2000.000000,-934.793823,0.000000,2000.000000,-955.098633,0.000000,2000.000000,-975.371765,0.000000,2000.000000,-995.614014,0.000000,2000.000000,-1015.823303], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,-1036.000000,0.000000,2000.000000,-1056.142944,0.000000,2000.000000,-1076.251953,0.000000,2000.000000,-1096.326050,0.000000,2000.000000,-1116.364014,0.000000,2000.000000,-1136.366333,0.000000,2000.000000,-1156.330933,0.000000,2000.000000,-1176.258789,0.000000,2000.000000,-1196.147217,0.000000,2000.000000,-1215.997437], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,-1235.808105,0.000000,2000.000000,-1255.578003,0.000000,2000.000000,-1275.307251,0.000000,2000.000000,-1294.994629,0.000000,2000.000000,-1314.640015,0.000000,2000.000000,-1334.241943,0.000000,2000.000000,-1353.800781,0.000000,2000.000000,-1373.314331,0.000000,2000.000000,-1392.783691,0.000000,2000.000000,-1412.207153], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,-1431.583740,0.000000,2000.000000,-1450.914429,0.000000,2000.000000,-1470.196167,0.000000,2000.000000,-1489.430542,0.000000,2000.000000,-1508.614746,0.000000,2000.000000,-1527.749390,0.000000,2000.000000,-1546.834839,0.000000,2000.000000,-1565.868408,0.000000,2000.000000,-1584.850342,0.000000,2000.000000,-1603.779785], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,-1622.656494,0.000000,2000.000000,-1641.478882,0.000000,2000.000000,-1660.246582,0.000000,2000.000000,-1678.959961,0.000000,2000.000000,-1697.616821,0.000000,2000.000000,-1716.218140,0.000000,2000.000000,-1734.761475,0.000000,2000.000000,-1753.247681,0.000000,2000.000000,-1771.675171,0.000000,2000.000000,-1790.043091], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,-1808.352051,0.000000,2000.000000,-1826.599976,0.000000,2000.000000,-1844.787109,0.000000,2000.000000,-1862.912109,0.000000,2000.000000,-1880.974731,0.000000,2000.000000,-1898.973877,0.000000,2000.000000,-1916.909302,0.000000,2000.000000,-1934.780762,0.000000,2000.000000,-1952.586182,0.000000,2000.000000,-1970.326782], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,-1987.999634,0.000000,2000.000000,-2005.606445,0.000000,2000.000000,-2023.144775,0.000000,2000.000000,-2040.614380,0.000000,2000.000000,-2058.015625,0.000000,2000.000000,-2075.345703,0.000000,2000.000000,-2092.606201,0.000000,2000.000000,-2109.794922,0.000000,2000.000000,-2126.912354,0.000000,2000.000000,-2143.956299], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,-2160.928223,0.000000,2000.000000,-2177.825195,0.000000,2000.000000,-2194.647705,0.000000,2000.000000,-2211.395264,0.000000,2000.000000,-2228.067139,0.000000,2000.000000,-2244.662109,0.000000,2000.000000,-2261.179443,0.000000,2000.000000,-2277.619385,0.000000,2000.000000,-2293.980713,0.000000,2000.000000,-2310.261963], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,-2326.464355,0.000000,2000.000000,-2342.585205,0.000000,2000.000000,-2358.625000,0.000000,2000.000000,-2374.583008,0.000000,2000.000000,-2390.458252,0.000000,2000.000000,-2406.250000,0.000000,2000.000000,-2421.957520,0.000000,2000.000000,-2437.581299,0.000000,2000.000000,-2453.118652,0.000000,2000.000000,-2468.571289], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,-2483.936279,0.000000,2000.000000,-2499.213623,0.000000,2000.000000,-2514.403809,0.000000,2000.000000,-2529.504150,0.000000,2000.000000,-2544.516602,0.000000,2000.000000,-2559.437744,0.000000,2000.000000,-2574.269043,0.000000,2000.000000,-2589.008301,0.000000,2000.000000,-2603.656006,0.000000,2000.000000,-2618.210449], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,-2632.671631,0.000000,2000.000000,-2647.039063,0.000000,2000.000000,-2661.311768,0.000000,2000.000000,-2675.488770,0.000000,2000.000000,-2689.569580,0.000000,2000.000000,-2703.553955,0.000000,2000.000000,-2717.441162,0.000000,2000.000000,-2731.229980,0.000000,2000.000000,-2744.919678,0.000000,2000.000000,-2758.509277], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,-2772.000732,0.000000,2000.000000,-2785.389160,0.000000,2000.000000,-2798.677734,0.000000,2000.000000,-2811.863037,0.000000,2000.000000,-2824.946533,0.000000,2000.000000,-2837.925781,0.000000,2000.000000,-2850.801270,0.000000,2000.000000,-2863.571777,0.000000,2000.000000,-2876.237305,0.000000,2000.000000,-2888.796143], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,-2901.248047,0.000000,2000.000000,-2913.592529,0.000000,2000.000000,-2925.829346,0.000000,2000.000000,-2937.956543,0.000000,2000.000000,-2949.974365,0.000000,2000.000000,-2961.881836,0.000000,2000.000000,-2973.678711,0.000000,2000.000000,-2985.364258,0.000000,2000.000000,-2996.937744,0.000000,2000.000000,-3008.396973], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,-3019.744141,0.000000,2000.000000,-3030.976318,0.000000,2000.000000,-3042.093262,0.000000,2000.000000,-3053.095459,0.000000,2000.000000,-3063.981689,0.000000,2000.000000,-3074.750244,0.000000,2000.000000,-3085.401123,0.000000,2000.000000,-3095.934082,0.000000,2000.000000,-3106.347900,0.000000,2000.000000,-3116.641846], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,-3126.815918,0.000000,2000.000000,-3136.868896,0.000000,2000.000000,-3146.800537,0.000000,2000.000000,-3156.609375,0.000000,2000.000000,-3166.295654,0.000000,2000.000000,-3175.858398,0.000000,2000.000000,-3185.295654,0.000000,2000.000000,-3194.609619,0.000000,2000.000000,-3203.797119,0.000000,2000.000000,-3212.858154], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,-3221.791748,0.000000,2000.000000,-3230.598877,0.000000,2000.000000,-3239.276367,0.000000,2000.000000,-3247.825928,0.000000,2000.000000,-3256.244873,0.000000,2000.000000,-3264.533936,0.000000,2000.000000,-3272.692139,0.000000,2000.000000,-3280.718018,0.000000,2000.000000,-3288.611572,0.000000,2000.000000,-3296.373047], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,-3304.000000,0.000000,2000.000000,-3311.492676,0.000000,2000.000000,-3318.850586,0.000000,2000.000000,-3326.072021,0.000000,2000.000000,-3333.156982,0.000000,2000.000000,-3340.105957,0.000000,2000.000000,-3346.916992,0.000000,2000.000000,-3353.588867,0.000000,2000.000000,-3360.122070,0.000000,2000.000000,-3366.514893], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,-3372.768311,0.000000,2000.000000,-3378.879395,0.000000,2000.000000,-3384.850098,0.000000,2000.000000,-3390.676758,0.000000,2000.000000,-3396.361572,0.000000,2000.000000,-3401.901855,0.000000,2000.000000,-3407.298340,0.000000,2000.000000,-3412.548828,0.000000,2000.000000,-3417.653809,0.000000,2000.000000,-3422.612549], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,-3427.424072,0.000000,2000.000000,-3432.087158,0.000000,2000.000000,-3436.602783,0.000000,2000.000000,-3440.968262,0.000000,2000.000000,-3445.184814,0.000000,2000.000000,-3449.250000,0.000000,2000.000000,-3453.164307,0.000000,2000.000000,-3456.927002,0.000000,2000.000000,-3460.536865,0.000000,2000.000000,-3463.993164], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,-3467.296387,0.000000,2000.000000,-3470.444092,0.000000,2000.000000,-3473.437012,0.000000,2000.000000,-3476.274414,0.000000,2000.000000,-3478.954834,0.000000,2000.000000,-3481.477783,0.000000,2000.000000,-3483.843506,0.000000,2000.000000,-3486.049805,0.000000,2000.000000,-3488.098145,0.000000,2000.000000,-3489.984863], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,-3491.711670,0.000000,2000.000000,-3493.277588,0.000000,2000.000000,-3494.681641,0.000000,2000.000000,-3495.921875,0.000000,2000.000000,-3497.000000,0.000000,2000.000000,-3497.913818,0.000000,2000.000000,-3498.663086,0.000000,2000.000000,-3499.247314,0.000000,2000.000000,-3499.664551,0.000000,2000.000000,-3499.916016], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,-3500.000000,0.000000,2000.000000,-3499.916016,0.000000,2000.000000,-3499.664795,0.000000,2000.000000,-3499.247070,0.000000,2000.000000,-3498.663086,0.000000,2000.000000,-3497.914063,0.000000,2000.000000,-3497.000244,0.000000,2000.000000,-3495.922363,0.000000,2000.000000,-3494.681396,0.000000,2000.000000,-3493.277588], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,-3491.711914,0.000000,2000.000000,-3489.985107,0.000000,2000.000000,-3488.097656,0.000000,2000.000000,-3486.050049,0.000000,2000.000000,-3483.843262,0.000000,2000.000000,-3481.478027,0.000000,2000.000000,-3478.954834,0.000000,2000.000000,-3476.274170,0.000000,2000.000000,-3473.437256,0.000000,2000.000000,-3470.444336], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,-3467.295898,0.000000,2000.000000,-3463.993164,0.000000,2000.000000,-3460.536621,0.000000,2000.000000,-3456.926758,0.000000,2000.000000,-3453.164307,0.000000,2000.000000,-3449.250000,0.000000,2000.000000,-3445.184570,0.000000,2000.000000,-3440.968506,0.000000,2000.000000,-3436.602539,0.000000,2000.000000,-3432.087646], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,-3427.424072,0.000000,2000.000000,-3422.612549,0.000000,2000.000000,-3417.654053,0.000000,2000.000000,-3412.549072,0.000000,2000.000000,-3407.298096,0.000000,2000.000000,-3401.902100,0.000000,2000.000000,-3396.361572,0.000000,2000.000000,-3390.677246,0.000000,2000.000000,-3384.849609,0.000000,2000.000000,-3378.879883], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,-3372.768066,0.000000,2000.000000,-3366.515137,0.000000,2000.000000,-3360.121826,0.000000,2000.000000,-3353.588867,0.000000,2000.000000,-3346.916748,0.000000,2000.000000,-3340.105957,0.000000,2000.000000,-3333.157715,0.000000,2000.000000,-3326.072266,0.000000,2000.000000,-3318.850342,0.000000,2000.000000,-3311.492676], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,-3304.000000,0.000000,2000.000000,-3296.373047,0.000000,2000.000000,-3288.612061,0.000000,2000.000000,-3280.718262,0.000000,2000.000000,-3272.691895,0.000000,2000.000000,-3264.534180,0.000000,2000.000000,-3256.245117,0.000000,2000.000000,-3247.825684,0.000000,2000.000000,-3239.276611,0.000000,2000.000000,-3230.598389], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,-3221.791992,0.000000,2000.000000,-3212.857910,0.000000,2000.000000,-3203.796875,0.000000,2000.000000,-3194.609375,0.000000,2000.000000,-3185.296143,0.000000,2000.000000,-3175.858154,0.000000,2000.000000,-3166.295654,0.000000,2000.000000,-3156.609619,0.000000,2000.000000,-3146.800537,0.000000,2000.000000,-3136.869141], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,-3126.816162,0.000000,2000.000000,-3116.642090,0.000000,2000.000000,-3106.347900,0.000000,2000.000000,-3095.934082,0.000000,2000.000000,-3085.401123,0.000000,2000.000000,-3074.750000,0.000000,2000.000000,-3063.981445,0.000000,2000.000000,-3053.095703,0.000000,2000.000000,-3042.093750,0.000000,2000.000000,-3030.976563], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,-3019.744141,0.000000,2000.000000,-3008.397461,0.000000,2000.000000,-2996.937256,0.000000,2000.000000,-2985.364258,0.000000,2000.000000,-2973.678955,0.000000,2000.000000,-2961.882080,0.000000,2000.000000,-2949.974365,0.000000,2000.000000,-2937.956543,0.000000,2000.000000,-2925.828857,0.000000,2000.000000,-2913.592529], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,-2901.248047,0.000000,2000.000000,-2888.796143,0.000000,2000.000000,-2876.237061,0.000000,2000.000000,-2863.572021,0.000000,2000.000000,-2850.801514,0.000000,2000.000000,-2837.926025,0.000000,2000.000000,-2824.946533,0.000000,2000.000000,-2811.863525,0.000000,2000.000000,-2798.677734,0.000000,2000.000000,-2785.389648], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,-2772.000000,0.000000,2000.000000,-2758.509766,0.000000,2000.000000,-2744.919434,0.000000,2000.000000,-2731.229492,0.000000,2000.000000,-2717.440918,0.000000,2000.000000,-2703.554199,0.000000,2000.000000,-2689.569824,0.000000,2000.000000,-2675.488770,0.000000,2000.000000,-2661.312012,0.000000,2000.000000,-2647.039307], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,-2632.672119,0.000000,2000.000000,-2618.210693,0.000000,2000.000000,-2603.656006,0.000000,2000.000000,-2589.008545,0.000000,2000.000000,-2574.269043,0.000000,2000.000000,-2559.438232,0.000000,2000.000000,-2544.516602,0.000000,2000.000000,-2529.504883,0.000000,2000.000000,-2514.403809,0.000000,2000.000000,-2499.213867], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,-2483.936035,0.000000,2000.000000,-2468.571045,0.000000,2000.000000,-2453.119141,0.000000,2000.000000,-2437.581299,0.000000,2000.000000,-2421.958008,0.000000,2000.000000,-2406.250000,0.000000,2000.000000,-2390.458252,0.000000,2000.000000,-2374.583008,0.000000,2000.000000,-2358.625244,0.000000,2000.000000,-2342.585205], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,-2326.464111,0.000000,2000.000000,-2310.262207,0.000000,2000.000000,-2293.980713,0.000000,2000.000000,-2277.619629,0.000000,2000.000000,-2261.179932,0.000000,2000.000000,-2244.662109,0.000000,2000.000000,-2228.067139,0.000000,2000.000000,-2211.395752,0.000000,2000.000000,-2194.648193,0.000000,2000.000000,-2177.825195], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,-2160.928223,0.000000,2000.000000,-2143.957031,0.000000,2000.000000,-2126.912354,0.000000,2000.000000,-2109.795410,0.000000,2000.000000,-2092.606445,0.000000,2000.000000,-2075.346191,0.000000,2000.000000,-2058.015381,0.000000,2000.000000,-2040.614868,0.000000,2000.000000,-2023.145020,0.000000,2000.000000,-2005.606567], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,-1988.000122,0.000000,2000.000000,-1970.326538,0.000000,2000.000000,-1952.586548,0.000000,2000.000000,-1934.780640,0.000000,2000.000000,-1916.909668,0.000000,2000.000000,-1898.974243,0.000000,2000.000000,-1880.974731,0.000000,2000.000000,-1862.912231,0.000000,2000.000000,-1844.787109,0.000000,2000.000000,-1826.600098], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,-1808.352051,0.000000,2000.000000,-1790.043457,0.000000,2000.000000,-1771.675415,0.000000,2000.000000,-1753.247925,0.000000,2000.000000,-1734.761963,0.000000,2000.000000,-1716.218140,0.000000,2000.000000,-1697.617188,0.000000,2000.000000,-1678.959961,0.000000,2000.000000,-1660.246826,0.000000,2000.000000,-1641.478638], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,-1622.656250,0.000000,2000.000000,-1603.779907,0.000000,2000.000000,-1584.850342,0.000000,2000.000000,-1565.868408,0.000000,2000.000000,-1546.834839,0.000000,2000.000000,-1527.750122,0.000000,2000.000000,-1508.614868,0.000000,2000.000000,-1489.430420,0.000000,2000.000000,-1470.196411,0.000000,2000.000000,-1450.914063], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,-1431.584106,0.000000,2000.000000,-1412.207153,0.000000,2000.000000,-1392.783569,0.000000,2000.000000,-1373.314575,0.000000,2000.000000,-1353.800415,0.000000,2000.000000,-1334.242310,0.000000,2000.000000,-1314.640137,0.000000,2000.000000,-1294.994751,0.000000,2000.000000,-1275.307373,0.000000,2000.000000,-1255.578369], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,-1235.807983,0.000000,2000.000000,-1215.997559,0.000000,2000.000000,-1196.147339,0.000000,2000.000000,-1176.258667,0.000000,2000.000000,-1156.331177,0.000000,2000.000000,-1136.366211,0.000000,2000.000000,-1116.364136,0.000000,2000.000000,-1096.325928,0.000000,2000.000000,-1076.251831,0.000000,2000.000000,-1056.142944], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,-1036.000244,0.000000,2000.000000,-1015.823486,0.000000,2000.000000,-995.614014,0.000000,2000.000000,-975.371948,0.000000,2000.000000,-955.098328,0.000000,2000.000000,-934.794006,0.000000,2000.000000,-914.459351,0.000000,2000.000000,-894.095154,0.000000,2000.000000,-873.702393,0.000000,2000.000000,-853.281067], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,-832.832092,0.000000,2000.000000,-812.356506,0.000000,2000.000000,-791.854309,0.000000,2000.000000,-771.326904,0.000000,2000.000000,-750.774536,0.000000,2000.000000,-730.197998,0.000000,2000.000000,-709.598083,0.000000,2000.000000,-688.975342,0.000000,2000.000000,-668.330139,0.000000,2000.000000,-647.663330], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,-626.976013,0.000000,2000.000000,-606.268494,0.000000,2000.000000,-585.541382,0.000000,2000.000000,-564.795654,0.000000,2000.000000,-544.031799,0.000000,2000.000000,-523.250122,0.000000,2000.000000,-502.451721,0.000000,2000.000000,-481.637451,0.000000,2000.000000,-460.807343,0.000000,2000.000000,-439.962708], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,-419.103912,0.000000,2000.000000,-398.232056,0.000000,2000.000000,-377.346954,0.000000,2000.000000,-356.449768,0.000000,2000.000000,-335.541412,0.000000,2000.000000,-314.622009,0.000000,2000.000000,-293.692688,0.000000,2000.000000,-272.753754,0.000000,2000.000000,-251.806290,0.000000,2000.000000,-230.850998], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,-209.887985,0.000000,2000.000000,-188.918503,0.000000,2000.000000,-167.942657,0.000000,2000.000000,-146.961594,0.000000,2000.000000,-125.975639,0.000000,2000.000000,-104.985924,0.000000,2000.000000,-83.992661,0.000000,2000.000000,-62.997101,0.000000,2000.000000,-41.999146,0.000000,2000.000000,-21.000042], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,0.000000,0.000000,2000.000000,20.999521,0.000000,2000.000000,41.999252,0.000000,2000.000000,62.996895,0.000000,2000.000000,83.992867,0.000000,2000.000000,104.985718,0.000000,2000.000000,125.976059,0.000000,2000.000000,146.961807,0.000000,2000.000000,167.942352,0.000000,2000.000000,188.918503], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,209.887985,0.000000,2000.000000,230.850998,0.000000,2000.000000,251.806290,0.000000,2000.000000,272.754272,0.000000,2000.000000,293.692688,0.000000,2000.000000,314.622314,0.000000,2000.000000,335.541321,0.000000,2000.000000,356.449677,0.000000,2000.000000,377.347168,0.000000,2000.000000,398.231750], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,419.104218,0.000000,2000.000000,439.962708,0.000000,2000.000000,460.807434,0.000000,2000.000000,481.637360,0.000000,2000.000000,502.451416,0.000000,2000.000000,523.250061,0.000000,2000.000000,544.031372,0.000000,2000.000000,564.795776,0.000000,2000.000000,585.541382,0.000000,2000.000000,606.268677], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,626.976135,0.000000,2000.000000,647.663147,0.000000,2000.000000,668.330139,0.000000,2000.000000,688.974792,0.000000,2000.000000,709.598206,0.000000,2000.000000,730.197998,0.000000,2000.000000,750.774658,0.000000,2000.000000,771.326904,0.000000,2000.000000,791.854919,0.000000,2000.000000,812.356323], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,832.831787,0.000000,2000.000000,853.280945,0.000000,2000.000000,873.701965,0.000000,2000.000000,894.095459,0.000000,2000.000000,914.459534,0.000000,2000.000000,934.794189,0.000000,2000.000000,955.098633,0.000000,2000.000000,975.371765,0.000000,2000.000000,995.614014,0.000000,2000.000000,1015.823303], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,1036.000000,0.000000,2000.000000,1056.142944,0.000000,2000.000000,1076.252319,0.000000,2000.000000,1096.326050,0.000000,2000.000000,1116.364014,0.000000,2000.000000,1136.366333,0.000000,2000.000000,1156.330933,0.000000,2000.000000,1176.258789,0.000000,2000.000000,1196.147217,0.000000,2000.000000,1215.997925], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,1235.808105,0.000000,2000.000000,1255.578369,0.000000,2000.000000,1275.307251,0.000000,2000.000000,1294.994629,0.000000,2000.000000,1314.640015,0.000000,2000.000000,1334.241943,0.000000,2000.000000,1353.800781,0.000000,2000.000000,1373.314331,0.000000,2000.000000,1392.784058,0.000000,2000.000000,1412.207153], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,1431.583740,0.000000,2000.000000,1450.914429,0.000000,2000.000000,1470.196167,0.000000,2000.000000,1489.430542,0.000000,2000.000000,1508.614746,0.000000,2000.000000,1527.750488,0.000000,2000.000000,1546.834839,0.000000,2000.000000,1565.868408,0.000000,2000.000000,1584.850342,0.000000,2000.000000,1603.779785], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,1622.656494,0.000000,2000.000000,1641.478882,0.000000,2000.000000,1660.247070,0.000000,2000.000000,1678.959961,0.000000,2000.000000,1697.617554,0.000000,2000.000000,1716.218140,0.000000,2000.000000,1734.761475,0.000000,2000.000000,1753.247681,0.000000,2000.000000,1771.675171,0.000000,2000.000000,1790.043701], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,1808.352051,0.000000,2000.000000,1826.600586,0.000000,2000.000000,1844.787109,0.000000,2000.000000,1862.912109,0.000000,2000.000000,1880.974731,0.000000,2000.000000,1898.973877,0.000000,2000.000000,1916.909912,0.000000,2000.000000,1934.780762,0.000000,2000.000000,1952.586792,0.000000,2000.000000,1970.326782], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,1987.999634,0.000000,2000.000000,2005.606445,0.000000,2000.000000,2023.144775,0.000000,2000.000000,2040.614502,0.000000,2000.000000,2058.015625,0.000000,2000.000000,2075.345703,0.000000,2000.000000,2092.606201,0.000000,2000.000000,2109.795898,0.000000,2000.000000,2126.912354,0.000000,2000.000000,2143.956299], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,2160.928223,0.000000,2000.000000,2177.825195,0.000000,2000.000000,2194.648438,0.000000,2000.000000,2211.395264,0.000000,2000.000000,2228.067627,0.000000,2000.000000,2244.662109,0.000000,2000.000000,2261.179443,0.000000,2000.000000,2277.619385,0.000000,2000.000000,2293.980713,0.000000,2000.000000,2310.262695], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,2326.464355,0.000000,2000.000000,2342.585205,0.000000,2000.000000,2358.625000,0.000000,2000.000000,2374.583008,0.000000,2000.000000,2390.458252,0.000000,2000.000000,2406.250000,0.000000,2000.000000,2421.958496,0.000000,2000.000000,2437.581299,0.000000,2000.000000,2453.119385,0.000000,2000.000000,2468.571289], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,2483.936279,0.000000,2000.000000,2499.213623,0.000000,2000.000000,2514.403809,0.000000,2000.000000,2529.505127,0.000000,2000.000000,2544.516602,0.000000,2000.000000,2559.438232,0.000000,2000.000000,2574.269043,0.000000,2000.000000,2589.008301,0.000000,2000.000000,2603.656006,0.000000,2000.000000,2618.210449], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,2632.672119,0.000000,2000.000000,2647.039063,0.000000,2000.000000,2661.312256,0.000000,2000.000000,2675.488770,0.000000,2000.000000,2689.570068,0.000000,2000.000000,2703.553955,0.000000,2000.000000,2717.441162,0.000000,2000.000000,2731.229980,0.000000,2000.000000,2744.919678,0.000000,2000.000000,2758.509766], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,2772.000732,0.000000,2000.000000,2785.390137,0.000000,2000.000000,2798.677734,0.000000,2000.000000,2811.863037,0.000000,2000.000000,2824.946533,0.000000,2000.000000,2837.925781,0.000000,2000.000000,2850.802002,0.000000,2000.000000,2863.571777,0.000000,2000.000000,2876.237061,0.000000,2000.000000,2888.796143], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,2901.248047,0.000000,2000.000000,2913.592529,0.000000,2000.000000,2925.829346,0.000000,2000.000000,2937.956543,0.000000,2000.000000,2949.974365,0.000000,2000.000000,2961.882324,0.000000,2000.000000,2973.678711,0.000000,2000.000000,2985.364258,0.000000,2000.000000,2996.937744,0.000000,2000.000000,3008.396973], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,3019.744141,0.000000,2000.000000,3030.976318,0.000000,2000.000000,3042.093994,0.000000,2000.000000,3053.095459,0.000000,2000.000000,3063.981689,0.000000,2000.000000,3074.750244,0.000000,2000.000000,3085.401123,0.000000,2000.000000,3095.934082,0.000000,2000.000000,3106.347900,0.000000,2000.000000,3116.642578], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,3126.815918,0.000000,2000.000000,3136.868896,0.000000,2000.000000,3146.800537,0.000000,2000.000000,3156.609375,0.000000,2000.000000,3166.295654,0.000000,2000.000000,3175.858398,0.000000,2000.000000,3185.296631,0.000000,2000.000000,3194.609619,0.000000,2000.000000,3203.797119,0.000000,2000.000000,3212.858154], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,3221.791748,0.000000,2000.000000,3230.598877,0.000000,2000.000000,3239.276367,0.000000,2000.000000,3247.825928,0.000000,2000.000000,3256.244873,0.000000,2000.000000,3264.533936,0.000000,2000.000000,3272.692139,0.000000,2000.000000,3280.718018,0.000000,2000.000000,3288.611572,0.000000,2000.000000,3296.373047], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,3304.000000,0.000000,2000.000000,3311.492676,0.000000,2000.000000,3318.850586,0.000000,2000.000000,3326.072021,0.000000,2000.000000,3333.156982,0.000000,2000.000000,3340.105957,0.000000,2000.000000,3346.916992,0.000000,2000.000000,3353.588867,0.000000,2000.000000,3360.122070,0.000000,2000.000000,3366.514893], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,3372.768311,0.000000,2000.000000,3378.879395,0.000000,2000.000000,3384.850098,0.000000,2000.000000,3390.676758,0.000000,2000.000000,3396.361572,0.000000,2000.000000,3401.901855,0.000000,2000.000000,3407.298340,0.000000,2000.000000,3412.548828,0.000000,2000.000000,3417.653809,0.000000,2000.000000,3422.612549], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,3427.424072,0.000000,2000.000000,3432.087158,0.000000,2000.000000,3436.602783,0.000000,2000.000000,3440.968262,0.000000,2000.000000,3445.184814,0.000000,2000.000000,3449.250000,0.000000,2000.000000,3453.164307,0.000000,2000.000000,3456.927002,0.000000,2000.000000,3460.536865,0.000000,2000.000000,3463.993164], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,3467.296387,0.000000,2000.000000,3470.444092,0.000000,2000.000000,3473.437012,0.000000,2000.000000,3476.274414,0.000000,2000.000000,3478.954834,0.000000,2000.000000,3481.477783,0.000000,2000.000000,3483.843506,0.000000,2000.000000,3486.049805,0.000000,2000.000000,3488.098145,0.000000,2000.000000,3489.984863], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,3491.711670,0.000000,2000.000000,3493.277588,0.000000,2000.000000,3494.681641,0.000000,2000.000000,3495.921875,0.000000,2000.000000,3497.000000,0.000000,2000.000000,3497.913818,0.000000,2000.000000,3498.663086,0.000000,2000.000000,3499.247314,0.000000,2000.000000,3499.664551,0.000000,2000.000000,3499.916016], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,2000.000000,3500.000000], Java.type("float[]"))));

	/** Large attribute array: OrientationInterpolator DEF='Camera001-ROT-INTERP' key field, scene-graph level=3, element #20, 1001 total numbers */
	this.Camera001_ROT_INTERP_3_20_key = new MFFloat(Java.to([0.000000,0.001000,0.002000,0.003000,0.004000,0.005000,0.006000,0.007000,0.008000,0.009000,0.010000,0.011000,0.012000,0.013000,0.014000,0.015000,0.016000,0.017000,0.018000,0.019000,0.020000,0.021000,0.022000,0.023000,0.024000,0.025000,0.026000,0.027000,0.028000,0.029000,0.030000,0.031000,0.032000,0.033000,0.034000,0.035000,0.036000,0.037000,0.038000,0.039000,0.040000,0.041000,0.042000,0.043000,0.044000,0.045000,0.046000,0.047000,0.048000,0.049000,0.050000,0.051000,0.052000,0.053000,0.054000,0.055000,0.056000,0.057000,0.058000,0.059000,0.060000,0.061000,0.062000,0.063000,0.064000,0.065000,0.066000,0.067000,0.068000,0.069000,0.070000,0.071000,0.072000,0.073000,0.074000,0.075000,0.076000,0.077000,0.078000,0.079000,0.080000,0.081000,0.082000,0.083000,0.084000,0.085000,0.086000,0.087000,0.088000,0.089000,0.090000,0.091000,0.092000,0.093000,0.094000,0.095000,0.096000,0.097000,0.098000,0.099000,0.100000,0.101000,0.102000,0.103000,0.104000,0.105000,0.106000,0.107000,0.108000,0.109000,0.110000,0.111000,0.112000,0.113000,0.114000,0.115000,0.116000,0.117000,0.118000,0.119000,0.120000,0.121000,0.122000,0.123000,0.124000,0.125000,0.126000,0.127000,0.128000,0.129000,0.130000,0.131000,0.132000,0.133000,0.134000,0.135000,0.136000,0.137000,0.138000,0.139000,0.140000,0.141000,0.142000,0.143000,0.144000,0.145000,0.146000,0.147000,0.148000,0.149000,0.150000,0.151000,0.152000,0.153000,0.154000,0.155000,0.156000,0.157000,0.158000,0.159000,0.160000,0.161000,0.162000,0.163000,0.164000,0.165000,0.166000,0.167000,0.168000,0.169000,0.170000,0.171000,0.172000,0.173000,0.174000,0.175000,0.176000,0.177000,0.178000,0.179000,0.180000,0.181000,0.182000,0.183000,0.184000,0.185000,0.186000,0.187000,0.188000,0.189000,0.190000,0.191000,0.192000,0.193000,0.194000,0.195000,0.196000,0.197000,0.198000,0.199000,0.200000,0.201000,0.202000,0.203000,0.204000,0.205000,0.206000,0.207000,0.208000,0.209000,0.210000,0.211000,0.212000,0.213000,0.214000,0.215000,0.216000,0.217000,0.218000,0.219000,0.220000,0.221000,0.222000,0.223000,0.224000,0.225000,0.226000,0.227000,0.228000,0.229000,0.230000,0.231000,0.232000,0.233000,0.234000,0.235000,0.236000,0.237000,0.238000,0.239000,0.240000,0.241000,0.242000,0.243000,0.244000,0.245000,0.246000,0.247000,0.248000,0.249000,0.250000,0.251000,0.252000,0.253000,0.254000,0.255000,0.256000,0.257000,0.258000,0.259000,0.260000,0.261000,0.262000,0.263000,0.264000,0.265000,0.266000,0.267000,0.268000,0.269000,0.270000,0.271000,0.272000,0.273000,0.274000,0.275000,0.276000,0.277000,0.278000,0.279000,0.280000,0.281000,0.282000,0.283000,0.284000,0.285000,0.286000,0.287000,0.288000,0.289000,0.290000,0.291000,0.292000,0.293000,0.294000,0.295000,0.296000,0.297000,0.298000,0.299000,0.300000,0.301000,0.302000,0.303000,0.304000,0.305000,0.306000,0.307000,0.308000,0.309000,0.310000,0.311000,0.312000,0.313000,0.314000,0.315000,0.316000,0.317000,0.318000,0.319000,0.320000,0.321000,0.322000,0.323000,0.324000,0.325000,0.326000,0.327000,0.328000,0.329000,0.330000,0.331000,0.332000,0.333000,0.334000,0.335000,0.336000,0.337000,0.338000,0.339000,0.340000,0.341000,0.342000,0.343000,0.344000,0.345000,0.346000,0.347000,0.348000,0.349000,0.350000,0.351000,0.352000,0.353000,0.354000,0.355000,0.356000,0.357000,0.358000,0.359000,0.360000,0.361000,0.362000,0.363000,0.364000,0.365000,0.366000,0.367000,0.368000,0.369000,0.370000,0.371000,0.372000,0.373000,0.374000,0.375000,0.376000,0.377000,0.378000,0.379000,0.380000,0.381000,0.382000,0.383000,0.384000,0.385000,0.386000,0.387000,0.388000,0.389000,0.390000,0.391000,0.392000,0.393000,0.394000,0.395000,0.396000,0.397000,0.398000,0.399000,0.400000,0.401000,0.402000,0.403000,0.404000,0.405000,0.406000,0.407000,0.408000,0.409000,0.410000,0.411000,0.412000,0.413000,0.414000,0.415000,0.416000,0.417000,0.418000,0.419000,0.420000,0.421000,0.422000,0.423000,0.424000,0.425000,0.426000,0.427000,0.428000,0.429000,0.430000,0.431000,0.432000,0.433000,0.434000,0.435000,0.436000,0.437000,0.438000,0.439000,0.440000,0.441000,0.442000,0.443000,0.444000,0.445000,0.446000,0.447000,0.448000,0.449000,0.450000,0.451000,0.452000,0.453000,0.454000,0.455000,0.456000,0.457000,0.458000,0.459000,0.460000,0.461000,0.462000,0.463000,0.464000,0.465000,0.466000,0.467000,0.468000,0.469000,0.470000,0.471000,0.472000,0.473000,0.474000,0.475000,0.476000,0.477000,0.478000,0.479000,0.480000,0.481000,0.482000,0.483000,0.484000,0.485000,0.486000,0.487000,0.488000,0.489000,0.490000,0.491000,0.492000,0.493000,0.494000,0.495000,0.496000,0.497000,0.498000,0.499000,0.500000,0.501000,0.502000,0.503000,0.504000,0.505000,0.506000,0.507000,0.508000,0.509000,0.510000,0.511000,0.512000,0.513000,0.514000,0.515000,0.516000,0.517000,0.518000,0.519000,0.520000,0.521000,0.522000,0.523000,0.524000,0.525000,0.526000,0.527000,0.528000,0.529000,0.530000,0.531000,0.532000,0.533000,0.534000,0.535000,0.536000,0.537000,0.538000,0.539000,0.540000,0.541000,0.542000,0.543000,0.544000,0.545000,0.546000,0.547000,0.548000,0.549000,0.550000,0.551000,0.552000,0.553000,0.554000,0.555000,0.556000,0.557000,0.558000,0.559000,0.560000,0.561000,0.562000,0.563000,0.564000,0.565000,0.566000,0.567000,0.568000,0.569000,0.570000,0.571000,0.572000,0.573000,0.574000,0.575000,0.576000,0.577000,0.578000,0.579000,0.580000,0.581000,0.582000,0.583000,0.584000,0.585000,0.586000,0.587000,0.588000,0.589000,0.590000,0.591000,0.592000,0.593000,0.594000,0.595000,0.596000,0.597000,0.598000,0.599000,0.600000,0.601000,0.602000,0.603000,0.604000,0.605000,0.606000,0.607000,0.608000,0.609000,0.610000,0.611000,0.612000,0.613000,0.614000,0.615000,0.616000,0.617000,0.618000,0.619000,0.620000,0.621000,0.622000,0.623000,0.624000,0.625000,0.626000,0.627000,0.628000,0.629000,0.630000,0.631000,0.632000,0.633000,0.634000,0.635000,0.636000,0.637000,0.638000,0.639000,0.640000,0.641000,0.642000,0.643000,0.644000,0.645000,0.646000,0.647000,0.648000,0.649000,0.650000,0.651000,0.652000,0.653000,0.654000,0.655000,0.656000,0.657000,0.658000,0.659000,0.660000,0.661000,0.662000,0.663000,0.664000,0.665000,0.666000,0.667000,0.668000,0.669000,0.670000,0.671000,0.672000,0.673000,0.674000,0.675000,0.676000,0.677000,0.678000,0.679000,0.680000,0.681000,0.682000,0.683000,0.684000,0.685000,0.686000,0.687000,0.688000,0.689000,0.690000,0.691000,0.692000,0.693000,0.694000,0.695000,0.696000,0.697000,0.698000,0.699000,0.700000,0.701000,0.702000,0.703000,0.704000,0.705000,0.706000,0.707000,0.708000,0.709000,0.710000,0.711000,0.712000,0.713000,0.714000,0.715000,0.716000,0.717000,0.718000,0.719000,0.720000,0.721000,0.722000,0.723000,0.724000,0.725000,0.726000,0.727000,0.728000,0.729000,0.730000,0.731000,0.732000,0.733000,0.734000,0.735000,0.736000,0.737000,0.738000,0.739000,0.740000,0.741000,0.742000,0.743000,0.744000,0.745000,0.746000,0.747000,0.748000,0.749000,0.750000,0.751000,0.752000,0.753000,0.754000,0.755000,0.756000,0.757000,0.758000,0.759000,0.760000,0.761000,0.762000,0.763000,0.764000,0.765000,0.766000,0.767000,0.768000,0.769000,0.770000,0.771000,0.772000,0.773000,0.774000,0.775000,0.776000,0.777000,0.778000,0.779000,0.780000,0.781000,0.782000,0.783000,0.784000,0.785000,0.786000,0.787000,0.788000,0.789000,0.790000,0.791000,0.792000,0.793000,0.794000,0.795000,0.796000,0.797000,0.798000,0.799000,0.800000,0.801000,0.802000,0.803000,0.804000,0.805000,0.806000,0.807000,0.808000,0.809000,0.810000,0.811000,0.812000,0.813000,0.814000,0.815000,0.816000,0.817000,0.818000,0.819000,0.820000,0.821000,0.822000,0.823000,0.824000,0.825000,0.826000,0.827000,0.828000,0.829000,0.830000,0.831000,0.832000,0.833000,0.834000,0.835000,0.836000,0.837000,0.838000,0.839000,0.840000,0.841000,0.842000,0.843000,0.844000,0.845000,0.846000,0.847000,0.848000,0.849000,0.850000,0.851000,0.852000,0.853000,0.854000,0.855000,0.856000,0.857000,0.858000,0.859000,0.860000,0.861000,0.862000,0.863000,0.864000,0.865000,0.866000,0.867000,0.868000,0.869000,0.870000,0.871000,0.872000,0.873000,0.874000,0.875000,0.876000,0.877000,0.878000,0.879000,0.880000,0.881000,0.882000,0.883000,0.884000,0.885000,0.886000,0.887000,0.888000,0.889000,0.890000,0.891000,0.892000,0.893000,0.894000,0.895000,0.896000,0.897000,0.898000,0.899000,0.900000,0.901000,0.902000,0.903000,0.904000,0.905000,0.906000,0.907000,0.908000,0.909000,0.910000,0.911000,0.912000,0.913000,0.914000,0.915000,0.916000,0.917000,0.918000,0.919000,0.920000,0.921000,0.922000,0.923000,0.924000,0.925000,0.926000,0.927000,0.928000,0.929000,0.930000,0.931000,0.932000,0.933000,0.934000,0.935000,0.936000,0.937000,0.938000,0.939000,0.940000,0.941000,0.942000,0.943000,0.944000,0.945000,0.946000,0.947000,0.948000,0.949000,0.950000,0.951000,0.952000,0.953000,0.954000,0.955000,0.956000,0.957000,0.958000,0.959000,0.960000,0.961000,0.962000,0.963000,0.964000,0.965000,0.966000,0.967000,0.968000,0.969000,0.970000,0.971000,0.972000,0.973000,0.974000,0.975000,0.976000,0.977000,0.978000,0.979000,0.980000,0.981000,0.982000,0.983000,0.984000,0.985000,0.986000,0.987000,0.988000,0.989000,0.990000,0.991000,0.992000,0.993000,0.994000,0.995000,0.996000,0.997000,0.998000,0.999000,1.000000], Java.type("float[]")));

	/** Large attribute array: OrientationInterpolator DEF='Camera001-ROT-INTERP' keyValue field, scene-graph level=3, element #20, 4004 total numbers made up of 1001 4-tuple values */
	this.Camera001_ROT_INTERP_3_20_keyValue = new MFRotation() /* splitting up long array to improve readability */
	.append(new MFRotation(Java.to([1.000000,0.000000,-0.000000,-0.523599,1.000000,0.000000,0.000000,-0.523636,1.000000,0.000000,0.000000,-0.523749,1.000000,0.000001,0.000000,-0.523935,1.000000,0.000001,0.000000,-0.524195,1.000000,0.000002,0.000000,-0.524529,1.000000,0.000003,0.000001,-0.524934,1.000000,0.000004,0.000001,-0.525411,1.000000,0.000005,0.000001,-0.525960,1.000000,0.000006,0.000002,-0.526579], Java.type("float[]"))))
	.append(new MFRotation(Java.to([1.000000,0.000007,0.000002,-0.527268,1.000000,0.000009,0.000002,-0.528027,1.000000,0.000011,0.000003,-0.528854,1.000000,0.000013,0.000003,-0.529749,1.000000,0.000015,0.000004,-0.530712,1.000000,0.000017,0.000005,-0.531742,1.000000,0.000019,0.000005,-0.532838,1.000000,0.000022,0.000006,-0.534000,1.000000,0.000025,0.000007,-0.535227,1.000000,0.000028,0.000008,-0.536519], Java.type("float[]"))))
	.append(new MFRotation(Java.to([1.000000,0.000031,0.000008,-0.537874,1.000000,0.000034,0.000009,-0.539293,1.000000,0.000037,0.000010,-0.540775,1.000000,0.000041,0.000011,-0.542318,1.000000,0.000044,0.000012,-0.543924,1.000000,0.000048,0.000014,-0.545590,1.000000,0.000052,0.000015,-0.547316,1.000000,0.000057,0.000016,-0.549103,1.000000,0.000061,0.000017,-0.550948,1.000000,0.000065,0.000019,-0.552852], Java.type("float[]"))))
	.append(new MFRotation(Java.to([1.000000,0.000070,0.000020,-0.554814,1.000000,0.000075,0.000021,-0.556833,1.000000,0.000080,0.000023,-0.558908,1.000000,0.000085,0.000024,-0.561040,1.000000,0.000090,0.000026,-0.563228,1.000000,0.000095,0.000028,-0.565470,1.000000,0.000101,0.000029,-0.567766,1.000000,0.000107,0.000031,-0.570117,1.000000,0.000112,0.000033,-0.572520,1.000000,0.000118,0.000035,-0.574976], Java.type("float[]"))))
	.append(new MFRotation(Java.to([1.000000,0.000124,0.000037,-0.577483,1.000000,0.000131,0.000039,-0.580042,1.000000,0.000137,0.000041,-0.582652,1.000000,0.000144,0.000043,-0.585312,1.000000,0.000150,0.000045,-0.588021,1.000000,0.000157,0.000048,-0.590779,1.000000,0.000164,0.000050,-0.593585,1.000000,0.000171,0.000053,-0.596439,1.000000,0.000178,0.000055,-0.599340,1.000000,0.000185,0.000058,-0.602287], Java.type("float[]"))))
	.append(new MFRotation(Java.to([1.000000,0.000193,0.000060,-0.605280,1.000000,0.000200,0.000063,-0.608319,1.000000,0.000208,0.000066,-0.611402,1.000000,0.000216,0.000068,-0.614529,1.000000,0.000224,0.000071,-0.617699,1.000000,0.000232,0.000074,-0.620913,1.000000,0.000240,0.000077,-0.624168,1.000000,0.000248,0.000080,-0.627465,1.000000,0.000256,0.000084,-0.630804,1.000000,0.000265,0.000087,-0.634182], Java.type("float[]"))))
	.append(new MFRotation(Java.to([1.000000,0.000273,0.000090,-0.637601,1.000000,0.000282,0.000094,-0.641059,1.000000,0.000291,0.000097,-0.644555,1.000000,0.000300,0.000101,-0.648089,1.000000,0.000309,0.000104,-0.651661,1.000000,0.000318,0.000108,-0.655269,1.000000,0.000327,0.000112,-0.658914,1.000000,0.000336,0.000116,-0.662594,1.000000,0.000345,0.000120,-0.666309,1.000000,0.000355,0.000124,-0.670059], Java.type("float[]"))))
	.append(new MFRotation(Java.to([1.000000,0.000364,0.000128,-0.673842,1.000000,0.000374,0.000132,-0.677659,1.000000,0.000384,0.000136,-0.681508,1.000000,0.000393,0.000140,-0.685389,1.000000,0.000403,0.000145,-0.689301,1.000000,0.000413,0.000149,-0.693245,1.000000,0.000423,0.000154,-0.697218,1.000000,0.000433,0.000158,-0.701221,1.000000,0.000443,0.000163,-0.705253,1.000000,0.000454,0.000168,-0.709313], Java.type("float[]"))))
	.append(new MFRotation(Java.to([1.000000,0.000464,0.000173,-0.713401,1.000000,0.000474,0.000178,-0.717516,1.000000,0.000485,0.000183,-0.721658,1.000000,0.000495,0.000188,-0.725826,1.000000,0.000506,0.000193,-0.730019,1.000000,0.000517,0.000199,-0.734236,1.000000,0.000528,0.000204,-0.738478,1.000000,0.000538,0.000210,-0.742743,1.000000,0.000549,0.000215,-0.747032,1.000000,0.000560,0.000221,-0.751342], Java.type("float[]"))))
	.append(new MFRotation(Java.to([1.000000,0.000571,0.000227,-0.755675,1.000000,0.000582,0.000233,-0.760028,1.000000,0.000594,0.000239,-0.764402,1.000000,0.000605,0.000245,-0.768796,1.000000,0.000616,0.000251,-0.773209,1.000000,0.000627,0.000257,-0.777641,1.000000,0.000639,0.000263,-0.782090,1.000000,0.000650,0.000270,-0.786558,1.000000,0.000662,0.000276,-0.791042,1.000000,0.000674,0.000283,-0.795543], Java.type("float[]"))))
	.append(new MFRotation(Java.to([1.000000,0.000685,0.000290,-0.800059,1.000000,0.000697,0.000297,-0.804591,1.000000,0.000709,0.000303,-0.809136,1.000000,0.000721,0.000310,-0.813696,1.000000,0.000732,0.000318,-0.818269,1.000000,0.000744,0.000325,-0.822854,1.000000,0.000756,0.000332,-0.827452,1.000000,0.000769,0.000340,-0.832061,1.000000,0.000781,0.000347,-0.836681,1.000000,0.000793,0.000355,-0.841312], Java.type("float[]"))))
	.append(new MFRotation(Java.to([1.000000,0.000805,0.000362,-0.845951,1.000000,0.000817,0.000370,-0.850600,1.000000,0.000830,0.000378,-0.855258,1.000000,0.000842,0.000386,-0.859923,1.000000,0.000855,0.000394,-0.864596,1.000000,0.000867,0.000403,-0.869275,1.000000,0.000880,0.000411,-0.873960,1.000000,0.000892,0.000419,-0.878650,1.000000,0.000905,0.000428,-0.883346,0.999999,0.000918,0.000437,-0.888046], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.999999,0.000931,0.000445,-0.892749,0.999999,0.000943,0.000454,-0.897455,0.999999,0.000956,0.000463,-0.902164,0.999999,0.000969,0.000472,-0.906874,0.999999,0.000982,0.000482,-0.911586,0.999999,0.000995,0.000491,-0.916298,0.999999,0.001009,0.000500,-0.921011,0.999999,0.001022,0.000510,-0.925722,0.999999,0.001035,0.000520,-0.930433,0.999999,0.001048,0.000529,-0.935141], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.999999,0.001062,0.000539,-0.939848,0.999999,0.001075,0.000549,-0.944551,0.999999,0.001089,0.000559,-0.949251,0.999999,0.001102,0.000570,-0.953946,0.999999,0.001116,0.000580,-0.958637,0.999999,0.001129,0.000590,-0.963322,0.999999,0.001143,0.000601,-0.968001,0.999999,0.001157,0.000612,-0.972673,0.999999,0.001171,0.000622,-0.977339,0.999999,0.001185,0.000633,-0.981996], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.999999,0.001199,0.000644,-0.986645,0.999999,0.001213,0.000656,-0.991285,0.999999,0.001227,0.000667,-0.995915,0.999999,0.001241,0.000678,-1.000535,0.999999,0.001255,0.000690,-1.005144,0.999999,0.001270,0.000702,-1.009742,0.999999,0.001284,0.000713,-1.014328,0.999999,0.001298,0.000725,-1.018901,0.999999,0.001313,0.000737,-1.023461,0.999999,0.001328,0.000750,-1.028006], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.999999,0.001342,0.000762,-1.032538,0.999999,0.001357,0.000774,-1.037054,0.999999,0.001372,0.000787,-1.041555,0.999999,0.001387,0.000799,-1.046039,0.999999,0.001402,0.000812,-1.050506,0.999999,0.001417,0.000825,-1.054956,0.999999,0.001432,0.000838,-1.059388,0.999999,0.001447,0.000851,-1.063801,0.999999,0.001462,0.000865,-1.068195,0.999999,0.001478,0.000878,-1.072569], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.999999,0.001493,0.000892,-1.076922,0.999998,0.001509,0.000906,-1.081255,0.999998,0.001524,0.000919,-1.085565,0.999998,0.001540,0.000933,-1.089854,0.999998,0.001556,0.000947,-1.094119,0.999998,0.001572,0.000962,-1.098361,0.999998,0.001588,0.000976,-1.102579,0.999998,0.001604,0.000991,-1.106772,0.999998,0.001620,0.001005,-1.110939,0.999998,0.001636,0.001020,-1.115081], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.999998,0.001652,0.001035,-1.119196,0.999998,0.001669,0.001050,-1.123284,0.999998,0.001685,0.001065,-1.127344,0.999998,0.001702,0.001081,-1.131376,0.999998,0.001719,0.001096,-1.135379,0.999998,0.001736,0.001112,-1.139353,0.999998,0.001753,0.001128,-1.143296,0.999998,0.001770,0.001143,-1.147209,0.999998,0.001787,0.001160,-1.151090,0.999998,0.001804,0.001176,-1.154939], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.999998,0.001822,0.001192,-1.158756,0.999998,0.001840,0.001209,-1.162539,0.999997,0.001857,0.001225,-1.166289,0.999997,0.001875,0.001242,-1.170004,0.999997,0.001893,0.001259,-1.173684,0.999997,0.001911,0.001276,-1.177329,0.999997,0.001929,0.001293,-1.180937,0.999997,0.001948,0.001311,-1.184509,0.999997,0.001966,0.001328,-1.188043,0.999997,0.001985,0.001346,-1.191540], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.999997,0.002004,0.001363,-1.194998,0.999997,0.002023,0.001381,-1.198416,0.999997,0.002042,0.001400,-1.201795,0.999997,0.002061,0.001418,-1.205133,0.999997,0.002080,0.001436,-1.208430,0.999997,0.002100,0.001455,-1.211686,0.999997,0.002120,0.001473,-1.214899,0.999997,0.002140,0.001492,-1.218070,0.999997,0.002160,0.001511,-1.221197,0.999996,0.002180,0.001531,-1.224280], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.999996,0.002200,0.001550,-1.227319,0.999996,0.002221,0.001569,-1.230312,0.999996,0.002242,0.001589,-1.233260,0.999996,0.002263,0.001609,-1.236161,0.999996,0.002284,0.001629,-1.239015,0.999996,0.002305,0.001649,-1.241821,0.999996,0.002327,0.001669,-1.244579,0.999996,0.002349,0.001690,-1.247288,0.999996,0.002370,0.001710,-1.249948,0.999996,0.002393,0.001731,-1.252558], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.999996,0.002415,0.001752,-1.255116,0.999995,0.002438,0.001773,-1.257624,0.999995,0.002461,0.001794,-1.260080,0.999995,0.002484,0.001816,-1.262483,0.999995,0.002507,0.001837,-1.264834,0.999995,0.002530,0.001859,-1.267130,0.999995,0.002554,0.001881,-1.269373,0.999995,0.002578,0.001903,-1.271560,0.999995,0.002603,0.001925,-1.273692,0.999995,0.002627,0.001947,-1.275768], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.999995,0.002652,0.001970,-1.277787,0.999994,0.002677,0.001993,-1.279749,0.999994,0.002702,0.002016,-1.281653,0.999994,0.002728,0.002039,-1.283499,0.999994,0.002754,0.002062,-1.285285,0.999994,0.002780,0.002085,-1.287012,0.999994,0.002807,0.002109,-1.288678,0.999994,0.002834,0.002133,-1.290283,0.999994,0.002861,0.002156,-1.291827,0.999993,0.002888,0.002181,-1.293309], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.999993,0.002916,0.002205,-1.294728,0.999993,0.002944,0.002229,-1.296084,0.999993,0.002973,0.002254,-1.297375,0.999993,0.003002,0.002279,-1.298603,0.999993,0.003031,0.002304,-1.299765,0.999993,0.003061,0.002329,-1.300861,0.999992,0.003090,0.002354,-1.301891,0.999992,0.003121,0.002379,-1.302854,0.999992,0.003152,0.002405,-1.303749,0.999992,0.003183,0.002431,-1.304577], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.999992,0.003214,0.002457,-1.305335,0.999992,0.003246,0.002483,-1.306025,0.999991,0.003279,0.002510,-1.306644,0.999991,0.003311,0.002536,-1.307193,0.999991,0.003345,0.002563,-1.307670,0.999991,0.003378,0.002590,-1.308076,0.999991,0.003412,0.002617,-1.308409,0.999991,0.003447,0.002644,-1.308669,0.999990,0.003482,0.002672,-1.308856,0.999990,0.003518,0.002699,-1.308969], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.999990,0.003554,0.002727,-1.309007,0.999990,0.003590,0.002755,-1.308903,0.999990,0.003626,0.002781,-1.308592,0.999989,0.003662,0.002808,-1.308077,0.999989,0.003698,0.002833,-1.307362,0.999989,0.003734,0.002858,-1.306448,0.999989,0.003770,0.002882,-1.305338,0.999989,0.003806,0.002906,-1.304036,0.999988,0.003842,0.002929,-1.302544,0.999988,0.003878,0.002951,-1.300865], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.999988,0.003915,0.002973,-1.299002,0.999988,0.003951,0.002994,-1.296957,0.999987,0.003988,0.003015,-1.294734,0.999987,0.004025,0.003035,-1.292334,0.999987,0.004062,0.003055,-1.289761,0.999987,0.004100,0.003075,-1.287018,0.999987,0.004138,0.003094,-1.284108,0.999986,0.004176,0.003113,-1.281032,0.999986,0.004215,0.003131,-1.277795,0.999986,0.004254,0.003149,-1.274399], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.999986,0.004294,0.003167,-1.270846,0.999986,0.004334,0.003184,-1.267140,0.999985,0.004375,0.003201,-1.263282,0.999985,0.004417,0.003218,-1.259277,0.999985,0.004459,0.003235,-1.255127,0.999985,0.004502,0.003251,-1.250834,0.999984,0.004546,0.003267,-1.246401,0.999984,0.004590,0.003283,-1.241832,0.999984,0.004636,0.003299,-1.237129,0.999984,0.004682,0.003315,-1.232294], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.999983,0.004729,0.003331,-1.227331,0.999983,0.004777,0.003346,-1.222243,0.999983,0.004826,0.003362,-1.217031,0.999982,0.004876,0.003378,-1.211699,0.999982,0.004927,0.003393,-1.206250,0.999982,0.004979,0.003409,-1.200687,0.999981,0.005032,0.003424,-1.195012,0.999981,0.005087,0.003440,-1.189228,0.999981,0.005143,0.003456,-1.183338,0.999980,0.005200,0.003472,-1.177344], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.999980,0.005259,0.003488,-1.171251,0.999980,0.005319,0.003504,-1.165059,0.999979,0.005381,0.003520,-1.158772,0.999979,0.005444,0.003537,-1.152394,0.999979,0.005508,0.003554,-1.145925,0.999978,0.005575,0.003571,-1.139371,0.999978,0.005643,0.003588,-1.132732,0.999977,0.005713,0.003606,-1.126013,0.999977,0.005785,0.003624,-1.119215,0.999976,0.005859,0.003642,-1.112342], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.999976,0.005934,0.003660,-1.105397,0.999975,0.006012,0.003679,-1.098382,0.999975,0.006092,0.003699,-1.091299,0.999974,0.006174,0.003718,-1.084153,0.999973,0.006259,0.003739,-1.076944,0.999973,0.006346,0.003759,-1.069678,0.999972,0.006435,0.003780,-1.062356,0.999971,0.006527,0.003802,-1.054980,0.999971,0.006622,0.003824,-1.047554,0.999970,0.006719,0.003847,-1.040081], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.999969,0.006819,0.003871,-1.032563,0.999968,0.006922,0.003895,-1.025003,0.999968,0.007028,0.003919,-1.017405,0.999967,0.007137,0.003944,-1.009769,0.999966,0.007250,0.003970,-1.002101,0.999965,0.007365,0.003997,-0.994402,0.999964,0.007485,0.004024,-0.986674,0.999963,0.007607,0.004052,-0.978922,0.999962,0.007734,0.004081,-0.971148,0.999961,0.007864,0.004111,-0.963353], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.999959,0.007998,0.004141,-0.955543,0.999958,0.008136,0.004172,-0.947718,0.999957,0.008278,0.004204,-0.939882,0.999956,0.008425,0.004237,-0.932038,0.999954,0.008576,0.004271,-0.924188,0.999953,0.008732,0.004306,-0.916335,0.999951,0.008892,0.004342,-0.908483,0.999949,0.009057,0.004378,-0.900633,0.999948,0.009227,0.004416,-0.892789,0.999946,0.009402,0.004455,-0.884953], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.999944,0.009583,0.004494,-0.877129,0.999942,0.009769,0.004535,-0.869319,0.999940,0.009960,0.004577,-0.861525,0.999938,0.010157,0.004620,-0.853751,0.999935,0.010360,0.004664,-0.846000,0.999933,0.010570,0.004709,-0.838273,0.999931,0.010785,0.004755,-0.830575,0.999928,0.011007,0.004803,-0.822907,0.999925,0.011236,0.004851,-0.815273,0.999922,0.011471,0.004901,-0.807675], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.999919,0.011713,0.004953,-0.800117,0.999916,0.011962,0.005005,-0.792600,0.999913,0.012219,0.005059,-0.785129,0.999909,0.012483,0.005114,-0.777704,0.999905,0.012755,0.005170,-0.770330,0.999901,0.013034,0.005228,-0.763010,0.999897,0.013321,0.005287,-0.755745,0.999893,0.013617,0.005348,-0.748539,0.999888,0.013921,0.005410,-0.741394,0.999884,0.014233,0.005473,-0.734314], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.999879,0.014555,0.005538,-0.727301,0.999874,0.014885,0.005605,-0.720358,0.999868,0.015224,0.005673,-0.713488,0.999862,0.015572,0.005742,-0.706693,0.999856,0.015929,0.005814,-0.699976,0.999850,0.016296,0.005886,-0.693341,0.999843,0.016672,0.005960,-0.686789,0.999836,0.017059,0.006036,-0.680324,0.999829,0.017455,0.006114,-0.673949,0.999821,0.017861,0.006193,-0.667666], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.999813,0.018277,0.006274,-0.661478,0.999805,0.018703,0.006357,-0.655388,0.999796,0.019139,0.006441,-0.649399,0.999787,0.019586,0.006527,-0.643513,0.999777,0.020043,0.006615,-0.637734,0.999767,0.020511,0.006705,-0.632063,0.999757,0.020988,0.006797,-0.626505,0.999746,0.021476,0.006890,-0.621061,0.999734,0.021975,0.006986,-0.615734,0.999722,0.022484,0.007083,-0.610528], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.999710,0.023002,0.007182,-0.605445,0.999697,0.023531,0.007283,-0.600488,0.999683,0.024070,0.007386,-0.595660,0.999669,0.024619,0.007491,-0.590963,0.999654,0.025177,0.007598,-0.586401,0.999639,0.025745,0.007708,-0.581975,0.999623,0.026322,0.007819,-0.577689,0.999606,0.026907,0.007932,-0.573546,0.999589,0.027502,0.008047,-0.569549,0.999572,0.028104,0.008165,-0.565700], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.999553,0.028714,0.008284,-0.562001,0.999534,0.029332,0.008406,-0.558457,0.999515,0.029956,0.008530,-0.555069,0.999495,0.030587,0.008656,-0.551841,0.999474,0.031224,0.008785,-0.548775,0.999452,0.031866,0.008915,-0.545874,0.999430,0.032513,0.009048,-0.543141,0.999408,0.033164,0.009183,-0.540579,0.999385,0.033819,0.009321,-0.538190,0.999361,0.034476,0.009461,-0.535977], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.999336,0.035135,0.009603,-0.533943,0.999312,0.035795,0.009748,-0.532091,0.999286,0.036456,0.009895,-0.530424,0.999260,0.037116,0.010044,-0.528943,0.999234,0.037775,0.010196,-0.527654,0.999208,0.038432,0.010350,-0.526557,0.999181,0.039085,0.010507,-0.525656,0.999153,0.039735,0.010667,-0.524953,0.999126,0.040380,0.010829,-0.524452,0.999098,0.041019,0.010993,-0.524154], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.999070,0.041651,0.011160,-0.524064,0.998962,0.043995,0.011788,-0.524118,0.998674,0.049720,0.013323,-0.524262,0.998149,0.058749,0.015742,-0.524526,0.997295,0.070995,0.019023,-0.524955,0.995995,0.086360,0.023140,-0.525609,0.994105,0.104727,0.028062,-0.526563,0.991461,0.125961,0.033751,-0.527903,0.987885,0.149897,0.040165,-0.529725,0.983195,0.176339,0.047250,-0.532135], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.977207,0.205056,0.054945,-0.535243,0.969751,0.235780,0.063177,-0.539162,0.960677,0.268206,0.071866,-0.544008,0.949868,0.301998,0.080920,-0.549893,0.937245,0.336792,0.090243,-0.556925,0.922775,0.372209,0.099733,-0.565203,0.906479,0.407864,0.109287,-0.574818,0.888426,0.443380,0.118803,-0.585848,0.868736,0.478400,0.128187,-0.598356,0.847570,0.512601,0.137351,-0.612392], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.825125,0.545701,0.146220,-0.627989,0.801620,0.577464,0.154731,-0.645168,0.777288,0.607707,0.162835,-0.663932,0.752364,0.636301,0.170496,-0.684274,0.727076,0.663163,0.177694,-0.706173,0.701637,0.688256,0.184418,-0.729598,0.676240,0.711579,0.190667,-0.754511,0.651056,0.733166,0.196451,-0.780865,0.626230,0.753073,0.201785,-0.808609,0.601880,0.771375,0.206689,-0.837688], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.578103,0.788160,0.211187,-0.868042,0.554972,0.803524,0.215304,-0.899612,0.532540,0.817564,0.219066,-0.932334,0.510843,0.830382,0.222500,-0.966147,0.489901,0.842073,0.225633,-1.000990,0.469725,0.852732,0.228489,-1.036799,0.450312,0.862448,0.231092,-1.073515,0.431653,0.871303,0.233465,-1.111076,0.413733,0.879377,0.235628,-1.149426,0.396532,0.886740,0.237601,-1.188504], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.380026,0.893458,0.239401,-1.228256,0.364190,0.899591,0.241045,-1.268625,0.348995,0.905193,0.242546,-1.309559,0.334415,0.910314,0.243918,-1.351002,0.320420,0.914998,0.245173,-1.392905,0.306984,0.919286,0.246322,-1.435216,0.294077,0.923214,0.247374,-1.477885,0.281674,0.926816,0.248339,-1.520864,0.269748,0.930120,0.249225,-1.564104,0.258275,0.933153,0.250038,-1.607558], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.247232,0.935940,0.250784,-1.651181,0.236594,0.938502,0.251471,-1.694926,0.226343,0.940858,0.252102,-1.738749,0.216456,0.943026,0.252683,-1.782604,0.206916,0.945022,0.253218,-1.826449,0.197705,0.946860,0.253710,-1.870240,0.188806,0.948553,0.254164,-1.913934,0.180204,0.950113,0.254582,-1.957489,-0.171885,-0.951550,-0.254967,-4.282323,-0.163835,-0.952874,-0.255322,-4.239172], Java.type("float[]"))))
	.append(new MFRotation(Java.to([-0.156042,-0.954094,-0.255649,-4.196284,-0.148495,-0.955217,-0.255950,-4.153701,-0.141183,-0.956251,-0.256227,-4.111464,-0.134096,-0.957202,-0.256481,-4.069612,-0.127226,-0.958077,-0.256716,-4.028184,-0.120565,-0.958880,-0.256931,-3.987222,-0.114105,-0.959617,-0.257129,-3.946765,-0.107840,-0.960293,-0.257310,-3.906851,-0.101764,-0.960911,-0.257475,-3.867519,-0.095873,-0.961476,-0.257627,-3.828809], Java.type("float[]"))))
	.append(new MFRotation(Java.to([-0.090160,-0.961992,-0.257765,-3.790758,-0.084624,-0.962461,-0.257891,-3.753406,-0.079259,-0.962887,-0.258005,-3.716791,-0.074064,-0.963273,-0.258108,-3.680950,-0.069037,-0.963621,-0.258201,-3.645921,-0.064175,-0.963935,-0.258285,-3.611743,-0.059477,-0.964216,-0.258361,-3.578453,-0.054943,-0.964467,-0.258428,-3.546088,-0.050573,-0.964690,-0.258488,-3.514685,-0.046366,-0.964887,-0.258541,-3.484282], Java.type("float[]"))))
	.append(new MFRotation(Java.to([-0.042324,-0.965060,-0.258587,-3.454916,-0.038448,-0.965212,-0.258628,-3.426624,-0.034738,-0.965343,-0.258663,-3.399443,-0.031197,-0.965456,-0.258693,-3.373409,-0.027828,-0.965552,-0.258719,-3.348559,-0.024632,-0.965633,-0.258741,-3.324930,-0.021612,-0.965700,-0.258759,-3.302557,-0.018772,-0.965756,-0.258773,-3.281478,-0.016115,-0.965800,-0.258785,-3.261729,-0.013644,-0.965836,-0.258795,-3.243345], Java.type("float[]"))))
	.append(new MFRotation(Java.to([-0.011364,-0.965863,-0.258802,-3.226364,-0.009279,-0.965884,-0.258808,-3.210821,-0.007392,-0.965899,-0.258812,-3.196752,-0.005708,-0.965910,-0.258815,-3.184194,-0.004232,-0.965917,-0.258817,-3.173182,-0.002969,-0.965922,-0.258818,-3.163752,-0.001922,-0.965924,-0.258819,-3.155940,-0.001097,-0.965925,-0.258819,-3.149782,-0.000499,-0.965926,-0.258819,-3.145314,-0.000131,-0.965926,-0.258819,-3.142573], Java.type("float[]"))))
	.append(new MFRotation(Java.to([-0.000000,-0.965926,-0.258819,-3.141593,0.000012,-0.965921,-0.258837,-3.141506,0.000023,-0.965906,-0.258891,-3.141421,0.000034,-0.965882,-0.258982,-3.141336,0.000046,-0.965849,-0.259107,-3.141253,0.000057,-0.965805,-0.259268,-3.141171,0.000068,-0.965753,-0.259464,-3.141089,0.000079,-0.965691,-0.259694,-3.141008,0.000089,-0.965620,-0.259959,-3.140929,0.000100,-0.965539,-0.260258,-3.140850], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.000111,-0.965449,-0.260591,-3.140772,0.000121,-0.965350,-0.260957,-3.140695,0.000132,-0.965242,-0.261356,-3.140620,0.000142,-0.965125,-0.261788,-3.140545,0.000152,-0.964999,-0.262253,-3.140471,0.000163,-0.964864,-0.262750,-3.140398,0.000173,-0.964720,-0.263279,-3.140325,0.000183,-0.964567,-0.263839,-3.140254,0.000193,-0.964405,-0.264431,-3.140184,0.000203,-0.964234,-0.265053,-3.140114], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.000213,-0.964054,-0.265707,-3.140046,0.000223,-0.963865,-0.266391,-3.139978,0.000233,-0.963667,-0.267105,-3.139911,0.000243,-0.963461,-0.267848,-3.139845,0.000253,-0.963246,-0.268622,-3.139780,0.000262,-0.963022,-0.269424,-3.139716,0.000272,-0.962789,-0.270255,-3.139653,0.000282,-0.962547,-0.271115,-3.139591,0.000292,-0.962296,-0.272003,-3.139529,0.000301,-0.962037,-0.272919,-3.139468], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.000311,-0.961769,-0.273862,-3.139409,0.000321,-0.961492,-0.274833,-3.139350,0.000330,-0.961206,-0.275831,-3.139292,0.000340,-0.960912,-0.276855,-3.139234,0.000349,-0.960608,-0.277906,-3.139178,0.000359,-0.960296,-0.278983,-3.139122,0.000368,-0.959975,-0.280086,-3.139067,0.000378,-0.959645,-0.281213,-3.139013,0.000387,-0.959307,-0.282366,-3.138960,0.000397,-0.958959,-0.283544,-3.138907], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.000406,-0.958603,-0.284746,-3.138856,0.000416,-0.958238,-0.285973,-3.138805,0.000425,-0.957864,-0.287222,-3.138755,0.000435,-0.957481,-0.288496,-3.138706,0.000444,-0.957089,-0.289793,-3.138657,0.000454,-0.956689,-0.291112,-3.138610,0.000463,-0.956279,-0.292454,-3.138563,0.000473,-0.955861,-0.293819,-3.138516,0.000482,-0.955434,-0.295205,-3.138471,0.000492,-0.954998,-0.296612,-3.138426], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.000501,-0.954553,-0.298041,-3.138382,0.000511,-0.954099,-0.299491,-3.138339,0.000520,-0.953636,-0.300962,-3.138297,0.000530,-0.953164,-0.302452,-3.138255,0.000539,-0.952684,-0.303963,-3.138214,0.000548,-0.952194,-0.305493,-3.138174,0.000558,-0.951696,-0.307043,-3.138134,0.000567,-0.951188,-0.308611,-3.138095,0.000577,-0.950672,-0.310199,-3.138057,0.000586,-0.950146,-0.311804,-3.138019], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.000596,-0.949612,-0.313428,-3.137982,0.000605,-0.949069,-0.315069,-3.137946,0.000615,-0.948516,-0.316727,-3.137911,0.000624,-0.947955,-0.318403,-3.137876,0.000634,-0.947385,-0.320095,-3.137842,0.000643,-0.946806,-0.321804,-3.137808,0.000653,-0.946218,-0.323529,-3.137775,0.000662,-0.945621,-0.325270,-3.137743,0.000672,-0.945015,-0.327026,-3.137711,0.000681,-0.944400,-0.328797,-3.137680], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.000691,-0.943777,-0.330583,-3.137650,0.000700,-0.943144,-0.332383,-3.137620,0.000709,-0.942503,-0.334198,-3.137591,0.000719,-0.941852,-0.336026,-3.137563,0.000728,-0.941193,-0.337868,-3.137534,0.000738,-0.940525,-0.339723,-3.137507,0.000747,-0.939848,-0.341591,-3.137480,0.000757,-0.939163,-0.343471,-3.137454,0.000766,-0.938469,-0.345364,-3.137428,0.000776,-0.937766,-0.347268,-3.137403], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.000785,-0.937054,-0.349184,-3.137379,0.000795,-0.936333,-0.351112,-3.137355,0.000804,-0.935604,-0.353050,-3.137331,0.000813,-0.934866,-0.354999,-3.137308,0.000823,-0.934120,-0.356958,-3.137286,0.000832,-0.933365,-0.358927,-3.137264,0.000842,-0.932602,-0.360906,-3.137243,0.000851,-0.931830,-0.362894,-3.137222,0.000860,-0.931050,-0.364891,-3.137202,0.000870,-0.930261,-0.366897,-3.137182], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.000879,-0.929464,-0.368911,-3.137163,0.000889,-0.928659,-0.370933,-3.137144,0.000898,-0.927846,-0.372963,-3.137125,0.000907,-0.927024,-0.375001,-3.137108,0.000916,-0.926194,-0.377045,-3.137090,0.000926,-0.925357,-0.379097,-3.137073,0.000935,-0.924511,-0.381155,-3.137057,0.000944,-0.923657,-0.383219,-3.137041,0.000954,-0.922796,-0.385289,-3.137025,0.000963,-0.921926,-0.387364,-3.137010], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.000972,-0.921049,-0.389445,-3.136995,0.000981,-0.920164,-0.391531,-3.136981,0.000990,-0.919272,-0.393621,-3.136967,0.001000,-0.918372,-0.395716,-3.136953,0.001009,-0.917465,-0.397815,-3.136940,0.001018,-0.916551,-0.399918,-3.136928,0.001027,-0.915629,-0.402024,-3.136915,0.001036,-0.914700,-0.404133,-3.136903,0.001045,-0.913764,-0.406244,-3.136891,0.001054,-0.912821,-0.408359,-3.136880], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.001063,-0.911871,-0.410475,-3.136869,0.001072,-0.910914,-0.412594,-3.136859,0.001081,-0.909951,-0.414714,-3.136848,0.001090,-0.908981,-0.416835,-3.136839,0.001099,-0.908005,-0.418958,-3.136829,0.001108,-0.907022,-0.421081,-3.136820,0.001117,-0.906033,-0.423205,-3.136811,0.001126,-0.905038,-0.425328,-3.136802,0.001134,-0.904037,-0.427452,-3.136794,0.001143,-0.903030,-0.429575,-3.136786], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.001152,-0.902018,-0.431698,-3.136779,0.001161,-0.900999,-0.433819,-3.136771,0.001170,-0.899975,-0.435939,-3.136764,0.001178,-0.898946,-0.438057,-3.136757,0.001187,-0.897912,-0.440174,-3.136750,0.001196,-0.896872,-0.442288,-3.136744,0.001204,-0.895828,-0.444400,-3.136738,0.001213,-0.894778,-0.446509,-3.136732,0.001221,-0.893724,-0.448616,-3.136726,0.001230,-0.892665,-0.450718,-3.136721], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.001238,-0.891602,-0.452818,-3.136715,0.001247,-0.890535,-0.454913,-3.136710,0.001255,-0.889463,-0.457005,-3.136706,0.001264,-0.888388,-0.459092,-3.136701,0.001272,-0.887309,-0.461174,-3.136697,0.001281,-0.886226,-0.463251,-3.136693,0.001289,-0.885140,-0.465323,-3.136688,0.001297,-0.884050,-0.467390,-3.136684,0.001306,-0.882958,-0.469451,-3.136681,0.001314,-0.881862,-0.471506,-3.136677], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.001322,-0.880764,-0.473554,-3.136674,0.001331,-0.879663,-0.475596,-3.136670,0.001339,-0.878559,-0.477631,-3.136667,0.001347,-0.877454,-0.479660,-3.136664,0.001355,-0.876346,-0.481681,-3.136661,0.001363,-0.875236,-0.483694,-3.136658,0.001372,-0.874125,-0.485699,-3.136656,0.001380,-0.873012,-0.487697,-3.136653,0.001388,-0.871898,-0.489686,-3.136651,0.001396,-0.870783,-0.491666,-3.136648], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.001404,-0.869666,-0.493638,-3.136646,0.001412,-0.868550,-0.495600,-3.136644,0.001420,-0.867432,-0.497554,-3.136641,0.001428,-0.866314,-0.499497,-3.136639,0.001436,-0.865196,-0.501431,-3.136637,0.001444,-0.864079,-0.503355,-3.136635,0.001452,-0.862961,-0.505268,-3.136633,0.001460,-0.861844,-0.507171,-3.136631,0.001468,-0.860728,-0.509063,-3.136629,0.001476,-0.859612,-0.510945,-3.136627], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.001484,-0.858498,-0.512814,-3.136625,0.001492,-0.857385,-0.514673,-3.136623,0.001499,-0.856274,-0.516520,-3.136621,0.001507,-0.855165,-0.518354,-3.136619,0.001515,-0.854057,-0.520177,-3.136617,0.001523,-0.852952,-0.521987,-3.136615,0.001531,-0.851849,-0.523785,-3.136613,0.001539,-0.850749,-0.525569,-3.136611,0.001547,-0.849652,-0.527341,-3.136609,0.001554,-0.848558,-0.529099,-3.136607], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.001562,-0.847468,-0.530844,-3.136605,0.001570,-0.846381,-0.532575,-3.136602,0.001578,-0.845298,-0.534292,-3.136600,0.001586,-0.844219,-0.535995,-3.136598,0.001594,-0.843145,-0.537684,-3.136595,0.001601,-0.842075,-0.539358,-3.136592,0.001609,-0.841010,-0.541017,-3.136590,0.001617,-0.839950,-0.542661,-3.136587,0.001625,-0.838895,-0.544290,-3.136584,0.001633,-0.837846,-0.545904,-3.136581], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.001641,-0.836803,-0.547502,-3.136578,0.001648,-0.835766,-0.549084,-3.136575,0.001656,-0.834735,-0.550650,-3.136571,0.001664,-0.833710,-0.552199,-3.136568,0.001672,-0.832693,-0.553732,-3.136564,0.001680,-0.831683,-0.555249,-3.136560,0.001688,-0.830679,-0.556749,-3.136556,0.001696,-0.829684,-0.558231,-3.136552,0.001704,-0.828696,-0.559696,-3.136547,0.001712,-0.827716,-0.561144,-3.136543], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.001720,-0.826745,-0.562574,-3.136538,0.001728,-0.825782,-0.563987,-3.136533,0.001736,-0.824828,-0.565381,-3.136528,0.001744,-0.823883,-0.566757,-3.136522,0.001752,-0.822948,-0.568114,-3.136517,0.001760,-0.822022,-0.569453,-3.136511,0.001768,-0.821106,-0.570773,-3.136505,0.001776,-0.820200,-0.572074,-3.136499,0.001785,-0.819305,-0.573356,-3.136492,0.001793,-0.818420,-0.574618,-3.136485], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.001801,-0.817546,-0.575861,-3.136478,0.001810,-0.816683,-0.577084,-3.136471,0.001818,-0.815832,-0.578287,-3.136464,0.001826,-0.814992,-0.579469,-3.136456,0.001835,-0.814164,-0.580632,-3.136447,0.001843,-0.813349,-0.581773,-3.136439,0.001852,-0.812546,-0.582894,-3.136430,0.001860,-0.811755,-0.583995,-3.136421,0.001869,-0.810978,-0.585073,-3.136412,0.001877,-0.810214,-0.586131,-3.136402], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.001886,-0.809463,-0.587167,-3.136392,0.001895,-0.808727,-0.588182,-3.136382,0.001904,-0.808004,-0.589174,-3.136371,0.001912,-0.807295,-0.590145,-3.136361,0.001921,-0.806601,-0.591093,-3.136349,0.001930,-0.805922,-0.592019,-3.136337,0.001939,-0.805258,-0.592922,-3.136325,0.001948,-0.804609,-0.593802,-3.136313,0.001957,-0.803975,-0.594660,-3.136300,0.001966,-0.803358,-0.595494,-3.136287], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.001976,-0.802756,-0.596304,-3.136273,0.001985,-0.802171,-0.597091,-3.136259,0.001994,-0.801602,-0.597855,-3.136245,0.002004,-0.801050,-0.598594,-3.136230,0.002013,-0.800515,-0.599309,-3.136215,0.002023,-0.799997,-0.600000,-3.136199,0.002032,-0.799497,-0.600666,-3.136183,0.002042,-0.799015,-0.601308,-3.136167,0.002051,-0.798550,-0.601925,-3.136150,0.002061,-0.798104,-0.602516,-3.136132], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.002071,-0.797677,-0.603082,-3.136114,0.002081,-0.797268,-0.603622,-3.136096,0.002091,-0.796878,-0.604137,-3.136077,0.002101,-0.796507,-0.604626,-3.136058,0.002111,-0.796155,-0.605089,-3.136038,0.002121,-0.795824,-0.605525,-3.136017,0.002131,-0.795512,-0.605935,-3.135996,0.002142,-0.795220,-0.606318,-3.135975,0.002152,-0.794948,-0.606673,-3.135953,0.002162,-0.794697,-0.607002,-3.135931], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.002173,-0.794467,-0.607303,-3.135907,0.002184,-0.794258,-0.607577,-3.135884,0.002194,-0.794070,-0.607823,-3.135859,0.002205,-0.793903,-0.608041,-3.135835,0.002216,-0.793758,-0.608230,-3.135810,0.002227,-0.793634,-0.608391,-3.135784,0.002237,-0.793533,-0.608523,-3.135757,0.002248,-0.793454,-0.608626,-3.135730,0.002259,-0.793397,-0.608700,-3.135703,0.002271,-0.793363,-0.608745,-3.135674], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.002282,-0.793351,-0.608760,-3.135645,0.002293,-0.793383,-0.608718,-3.135616,0.002303,-0.793478,-0.608595,-3.135587,0.002313,-0.793634,-0.608391,-3.135559,0.002322,-0.793852,-0.608107,-3.135530,0.002330,-0.794130,-0.607744,-3.135502,0.002339,-0.794467,-0.607303,-3.135474,0.002346,-0.794862,-0.606786,-3.135447,0.002353,-0.795314,-0.606193,-3.135419,0.002359,-0.795823,-0.605525,-3.135392], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.002365,-0.796387,-0.604783,-3.135365,0.002370,-0.797005,-0.603968,-3.135338,0.002375,-0.797676,-0.603082,-3.135311,0.002379,-0.798399,-0.602124,-3.135284,0.002383,-0.799173,-0.601096,-3.135257,0.002386,-0.799997,-0.600000,-3.135231,0.002388,-0.800869,-0.598835,-3.135204,0.002391,-0.801789,-0.597603,-3.135178,0.002392,-0.802755,-0.596304,-3.135152,0.002394,-0.803767,-0.594940,-3.135125], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.002394,-0.804822,-0.593511,-3.135099,0.002395,-0.805921,-0.592018,-3.135073,0.002395,-0.807061,-0.590463,-3.135047,0.002394,-0.808242,-0.588845,-3.135020,0.002393,-0.809463,-0.587167,-3.134995,0.002392,-0.810721,-0.585428,-3.134968,0.002390,-0.812017,-0.583629,-3.134942,0.002388,-0.813348,-0.581773,-3.134916,0.002385,-0.814714,-0.579858,-3.134890,0.002383,-0.816113,-0.577887,-3.134863], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.002379,-0.817545,-0.575860,-3.134837,0.002376,-0.819007,-0.573778,-3.134811,0.002372,-0.820500,-0.571642,-3.134784,0.002367,-0.822021,-0.569452,-3.134758,0.002363,-0.823569,-0.567211,-3.134731,0.002358,-0.825144,-0.564917,-3.134704,0.002353,-0.826744,-0.562574,-3.134677,0.002347,-0.828367,-0.560180,-3.134650,0.002342,-0.830014,-0.557738,-3.134623,0.002336,-0.831681,-0.555248,-3.134596], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.002329,-0.833369,-0.552711,-3.134569,0.002323,-0.835077,-0.550129,-3.134541,0.002316,-0.836802,-0.547501,-3.134514,0.002309,-0.838544,-0.544829,-3.134486,0.002302,-0.840302,-0.542114,-3.134458,0.002294,-0.842074,-0.539357,-3.134429,0.002286,-0.843860,-0.536559,-3.134401,0.002278,-0.845658,-0.533721,-3.134372,0.002270,-0.847467,-0.530844,-3.134344,0.002262,-0.849286,-0.527928,-3.134315], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.002254,-0.851115,-0.524975,-3.134285,0.002245,-0.852951,-0.521986,-3.134255,0.002236,-0.854794,-0.518963,-3.134225,0.002227,-0.856643,-0.515905,-3.134195,0.002218,-0.858497,-0.512814,-3.134165,0.002209,-0.860355,-0.509691,-3.134134,0.002200,-0.862215,-0.506537,-3.134103,0.002191,-0.864077,-0.503354,-3.134072,0.002181,-0.865941,-0.500142,-3.134040,0.002172,-0.867803,-0.496903,-3.134008], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.002162,-0.869665,-0.493637,-3.133975,0.002152,-0.871525,-0.490346,-3.133942,0.002142,-0.873382,-0.487031,-3.133909,0.002132,-0.875235,-0.483693,-3.133875,0.002122,-0.877083,-0.480333,-3.133841,0.002113,-0.878926,-0.476953,-3.133807,0.002102,-0.880763,-0.473554,-3.133772,0.002092,-0.882592,-0.470136,-3.133737,0.002082,-0.884413,-0.466701,-3.133700,0.002072,-0.886225,-0.463251,-3.133664], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.002062,-0.888028,-0.459786,-3.133627,0.002052,-0.889820,-0.456307,-3.133590,0.002042,-0.891601,-0.452817,-3.133552,0.002032,-0.893370,-0.449316,-3.133513,0.002022,-0.895127,-0.445806,-3.133474,0.002012,-0.896871,-0.442288,-3.133434,0.002002,-0.898601,-0.438763,-3.133394,0.001992,-0.900316,-0.435232,-3.133352,0.001982,-0.902017,-0.431697,-3.133311,0.001972,-0.903701,-0.428159,-3.133268], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.001962,-0.905370,-0.424620,-3.133225,0.001952,-0.907021,-0.421081,-3.133182,0.001943,-0.908655,-0.417542,-3.133137,0.001933,-0.910272,-0.414007,-3.133092,0.001924,-0.911870,-0.410475,-3.133046,0.001914,-0.913449,-0.406948,-3.132999,0.001905,-0.915009,-0.403429,-3.132951,0.001896,-0.916549,-0.399917,-3.132903,0.001887,-0.918070,-0.396415,-3.132854,0.001878,-0.919569,-0.392924,-3.132804], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.001869,-0.921048,-0.389445,-3.132753,0.001860,-0.922505,-0.385980,-3.132701,0.001852,-0.923941,-0.382530,-3.132648,0.001843,-0.925355,-0.379096,-3.132595,0.001835,-0.926747,-0.375681,-3.132540,0.001827,-0.928117,-0.372285,-3.132484,0.001819,-0.929463,-0.368911,-3.132428,0.001811,-0.930787,-0.365558,-3.132370,0.001803,-0.932087,-0.362230,-3.132311,0.001796,-0.933364,-0.358927,-3.132252], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.001789,-0.934617,-0.355650,-3.132191,0.001782,-0.935847,-0.352402,-3.132129,0.001775,-0.937053,-0.349184,-3.132066,0.001768,-0.938234,-0.345997,-3.132002,0.001762,-0.939391,-0.342843,-3.131936,0.001756,-0.940524,-0.339722,-3.131870,0.001750,-0.941632,-0.336638,-3.131802,0.001744,-0.942716,-0.333591,-3.131733,0.001739,-0.943776,-0.330582,-3.131663,0.001734,-0.944810,-0.327614,-3.131592], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.001729,-0.945820,-0.324687,-3.131519,0.001725,-0.946805,-0.321804,-3.131445,0.001720,-0.947765,-0.318965,-3.131369,0.001716,-0.948700,-0.316172,-3.131293,0.001713,-0.949611,-0.313427,-3.131215,0.001709,-0.950496,-0.310731,-3.131135,0.001706,-0.951357,-0.308086,-3.131054,0.001704,-0.952193,-0.305493,-3.130972,0.001701,-0.953004,-0.302953,-3.130888,0.001700,-0.953790,-0.300469,-3.130803], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.001698,-0.954552,-0.298041,-3.130716,0.001697,-0.955288,-0.295671,-3.130628,0.001696,-0.956000,-0.293361,-3.130538,0.001696,-0.956688,-0.291112,-3.130447,0.001696,-0.957350,-0.288925,-3.130354,0.001696,-0.957988,-0.286803,-3.130260,0.001697,-0.958602,-0.284746,-3.130164,0.001699,-0.959190,-0.282756,-3.130066,0.001701,-0.959755,-0.280834,-3.129967,0.001703,-0.960295,-0.278983,-3.129866], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.001706,-0.960810,-0.277202,-3.129763,0.001710,-0.961301,-0.275495,-3.129659,0.001714,-0.961767,-0.273862,-3.129553,0.001719,-0.962209,-0.272305,-3.129445,0.001724,-0.962627,-0.270825,-3.129335,0.001730,-0.963020,-0.269424,-3.129224,0.001737,-0.963389,-0.268103,-3.129111,0.001744,-0.963733,-0.266863,-3.128996,0.001752,-0.964052,-0.265706,-3.128880,0.001761,-0.964347,-0.264634,-3.128761], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.001770,-0.964617,-0.263648,-3.128641,0.001780,-0.964863,-0.262749,-3.128518,0.001791,-0.965083,-0.261939,-3.128394,0.001803,-0.965278,-0.261219,-3.128268,0.001816,-0.965448,-0.260590,-3.128140,0.001829,-0.965592,-0.260055,-3.128011,0.001843,-0.965711,-0.259613,-3.127879,0.001859,-0.965804,-0.259268,-3.127745,0.001875,-0.965870,-0.259019,-3.127610,0.001892,-0.965911,-0.258869,-3.127472], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.001910,-0.965924,-0.258819,-3.127333,0.002050,-0.965924,-0.258819,-3.126295,0.002426,-0.965923,-0.258818,-3.123487,0.003034,-0.965921,-0.258818,-3.118945,0.003871,-0.965919,-0.258817,-3.112705,0.004929,-0.965914,-0.258816,-3.104803,0.006207,-0.965907,-0.258814,-3.095275,0.007697,-0.965897,-0.258811,-3.084157,0.009396,-0.965883,-0.258808,-3.071487,0.011300,-0.965864,-0.258803,-3.057299], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.013404,-0.965839,-0.258796,-3.041631,0.015703,-0.965807,-0.258787,-3.024518,0.018194,-0.965766,-0.258776,-3.005998,0.020873,-0.965715,-0.258763,-2.986106,0.023737,-0.965654,-0.258746,-2.964879,0.026782,-0.965579,-0.258726,-2.942353,0.030004,-0.965491,-0.258703,-2.918566,0.033402,-0.965387,-0.258675,-2.893553,0.036973,-0.965265,-0.258642,-2.867353,0.040715,-0.965125,-0.258604,-2.840001], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.044625,-0.964964,-0.258561,-2.811535,0.048703,-0.964780,-0.258512,-2.781992,0.052948,-0.964571,-0.258456,-2.751409,0.057359,-0.964336,-0.258393,-2.719824,0.061936,-0.964071,-0.258322,-2.687273,0.066680,-0.963776,-0.258243,-2.653795,0.071591,-0.963447,-0.258155,-2.619428,0.076671,-0.963083,-0.258057,-2.584209,0.081921,-0.962679,-0.257949,-2.548177,0.087344,-0.962234,-0.257830,-2.511369], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.092944,-0.961745,-0.257699,-2.473824,0.098723,-0.961207,-0.257555,-2.435580,0.104686,-0.960618,-0.257397,-2.396677,0.110838,-0.959974,-0.257224,-2.357153,0.117184,-0.959271,-0.257036,-2.317048,0.123730,-0.958504,-0.256830,-2.276400,0.130484,-0.957668,-0.256606,-2.235250,0.137453,-0.956758,-0.256362,-2.193637,0.144645,-0.955768,-0.256097,-2.151601,0.152070,-0.954692,-0.255809,-2.109183], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.159738,-0.953523,-0.255496,-2.066423,0.167660,-0.952253,-0.255155,-2.023363,0.175849,-0.950874,-0.254786,-1.980043,0.184316,-0.949377,-0.254385,-1.936505,0.193077,-0.947751,-0.253949,-1.892792,0.202146,-0.945985,-0.253476,-1.848945,0.211540,-0.944066,-0.252962,-1.805009,0.221276,-0.941982,-0.252403,-1.761025,0.231373,-0.939716,-0.251796,-1.717038,0.241851,-0.937251,-0.251136,-1.673094], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.252731,-0.934569,-0.250417,-1.629235,0.264035,-0.931648,-0.249634,-1.585510,0.275789,-0.928466,-0.248782,-1.541963,0.288015,-0.924996,-0.247852,-1.498643,0.300742,-0.921209,-0.246837,-1.455597,0.313996,-0.917074,-0.245729,-1.412875,0.327805,-0.912554,-0.244518,-1.370526,0.342200,-0.907610,-0.243193,-1.328602,0.357209,-0.902198,-0.241743,-1.287155,0.372862,-0.896270,-0.240155,-1.246238], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.389189,-0.889770,-0.238413,-1.205905,0.406219,-0.882640,-0.236503,-1.166213,0.423977,-0.874813,-0.234405,-1.127219,0.442489,-0.866217,-0.232102,-1.088981,0.461773,-0.856775,-0.229572,-1.051560,0.481844,-0.846399,-0.226792,-1.015016,0.502709,-0.835000,-0.223738,-0.979412,0.524366,-0.822479,-0.220383,-0.944812,0.546802,-0.808733,-0.216699,-0.911279,0.569987,-0.793656,-0.212660,-0.878880], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.593878,-0.777141,-0.208234,-0.847679,0.618408,-0.759080,-0.203395,-0.817740,0.643490,-0.739372,-0.198114,-0.789127,0.669012,-0.717926,-0.192368,-0.761900,0.694832,-0.694667,-0.186135,-0.736118,0.720783,-0.669542,-0.179403,-0.711832,0.746672,-0.642527,-0.172164,-0.689088,0.772280,-0.613636,-0.164423,-0.667926,0.797368,-0.582930,-0.156195,-0.648373,0.821688,-0.550517,-0.147511,-0.630446], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.844987,-0.516564,-0.138413,-0.614148,0.867022,-0.481293,-0.128962,-0.599469,0.887569,-0.444978,-0.119232,-0.586382,0.906439,-0.407946,-0.109309,-0.574842,0.923486,-0.370561,-0.099292,-0.564791,0.938614,-0.333215,-0.089285,-0.556154,0.951785,-0.296314,-0.079397,-0.548841,0.963016,-0.260262,-0.069737,-0.542751,0.972381,-0.225447,-0.060408,-0.537773,0.979996,-0.192234,-0.051509,-0.533791], Java.type("float[]"))))
	.append(new MFRotation(Java.to([0.986019,-0.160952,-0.043127,-0.530681,0.990635,-0.131888,-0.035339,-0.528323,0.994041,-0.105291,-0.028213,-0.526595,0.996446,-0.081368,-0.021802,-0.525382,0.998050,-0.060291,-0.016155,-0.524575,0.999045,-0.042199,-0.011307,-0.524077,0.999603,-0.027208,-0.007290,-0.523797,0.999873,-0.015413,-0.004130,-0.523662,0.999974,-0.006898,-0.001848,-0.523612,0.999998,-0.001737,-0.000465,-0.523600], Java.type("float[]"))))
	.append(new MFRotation(Java.to([1.000000,-0.000001,-0.000000,-0.523599], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet DEF='Box001-GEOMETRY' coordIndex field, scene-graph level=5, element #27, 48 total numbers */
	this.Box001_GEOMETRY_5_27_coordIndex = new MFInt32(Java.to([0,1,2,-1,3,4,5,-1,6,7,8,-1,9,10,11,-1,12,13,14,-1,15,16,17,-1,18,19,20,-1,21,22,23,-1,24,25,26,-1,27,28,29,-1,30,31,32,-1,33,34,35,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=6, element #27, 108 total numbers made up of 36 3-tuple values */
	this.Coordinate_6_27_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([-1000.000000,0.000000,1000.000000,-1000.000000,0.000000,-1000.000000,1000.000000,0.000000,-1000.000000,1000.000000,0.000000,-1000.000000,1000.000000,0.000000,1000.000000,-1000.000000,0.000000,1000.000000,-1000.000000,8.031588,1000.000000,1000.000000,8.031588,1000.000000,1000.000000,8.031588,-1000.000000,1000.000000,8.031588,-1000.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-1000.000000,8.031588,-1000.000000,-1000.000000,8.031588,1000.000000,-1000.000000,0.000000,1000.000000,1000.000000,0.000000,1000.000000,1000.000000,8.031588,1000.000000,1000.000000,8.031588,1000.000000,-1000.000000,8.031588,1000.000000,-1000.000000,0.000000,1000.000000,1000.000000,0.000000,1000.000000,1000.000000,0.000000,-1000.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([1000.000000,8.031588,-1000.000000,1000.000000,8.031588,-1000.000000,1000.000000,8.031588,1000.000000,1000.000000,0.000000,1000.000000,1000.000000,0.000000,-1000.000000,-1000.000000,0.000000,-1000.000000,-1000.000000,8.031588,-1000.000000,-1000.000000,8.031588,-1000.000000,1000.000000,8.031588,-1000.000000,1000.000000,0.000000,-1000.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-1000.000000,0.000000,-1000.000000,-1000.000000,0.000000,1000.000000,-1000.000000,8.031588,1000.000000,-1000.000000,8.031588,1000.000000,-1000.000000,8.031588,-1000.000000,-1000.000000,0.000000,-1000.000000], Java.type("float[]"))));

	/** Large attribute array: Normal vector field, scene-graph level=6, element #28, 108 total numbers made up of 36 3-tuple values */
	this.Normal_6_28_vector = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([0.000000,-1.000000,0.000000,0.000000,-1.000000,0.000000,0.000000,-1.000000,0.000000,0.000000,-1.000000,0.000000,0.000000,-1.000000,0.000000,0.000000,-1.000000,0.000000,0.000000,1.000000,0.000000,0.000000,1.000000,0.000000,0.000000,1.000000,0.000000,0.000000,1.000000,0.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,1.000000,0.000000,0.000000,1.000000,0.000000,0.000000,0.000000,1.000000,0.000000,0.000000,1.000000,0.000000,0.000000,1.000000,0.000000,0.000000,1.000000,0.000000,0.000000,1.000000,0.000000,0.000000,1.000000,1.000000,0.000000,0.000000,1.000000,0.000000,0.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([1.000000,0.000000,0.000000,1.000000,0.000000,0.000000,1.000000,0.000000,0.000000,1.000000,0.000000,0.000000,0.000000,0.000000,-1.000000,0.000000,0.000000,-1.000000,0.000000,0.000000,-1.000000,0.000000,0.000000,-1.000000,0.000000,0.000000,-1.000000,0.000000,0.000000,-1.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-1.000000,0.000000,0.000000,-1.000000,0.000000,0.000000,-1.000000,0.000000,0.000000,-1.000000,0.000000,0.000000,-1.000000,0.000000,0.000000,-1.000000,0.000000,0.000000], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet DEF='Sphere001-GEOMETRY' coordIndex field, scene-graph level=5, element #34, 3840 total numbers */
	this.Sphere001_GEOMETRY_5_34_coordIndex = new MFInt32(Java.to([0,1,2,-1,3,4,5,-1,6,7,8,-1,9,10,11,-1,12,13,14,-1,15,16,17,-1,18,19,20,-1,21,22,23,-1,24,25,26,-1,27,28,29,-1,30,31,32,-1,33,34,35,-1,36,37,38,-1,39,40,41,-1,42,43,44,-1,45,46,47,-1,48,49,50,-1,51,52,53,-1,54,55,56,-1,57,58,59,-1,60,61,62,-1,63,64,65,-1,66,67,68,-1,69,70,71,-1,72,73,74,-1,75,76,77,-1,78,79,80,-1,81,82,83,-1,84,85,86,-1,87,88,89,-1,90,91,92,-1,93,94,95,-1,96,97,98,-1,99,100,101,-1,102,103,104,-1,105,106,107,-1,108,109,110,-1,111,112,113,-1,114,115,116,-1,117,118,119,-1,120,121,122,-1,123,124,125,-1,126,127,128,-1,129,130,131,-1,132,133,134,-1,135,136,137,-1,138,139,140,-1,141,142,143,-1,144,145,146,-1,147,148,149,-1,150,151,152,-1,153,154,155,-1,156,157,158,-1,159,160,161,-1,162,163,164,-1,165,166,167,-1,168,169,170,-1,171,172,173,-1,174,175,176,-1,177,178,179,-1,180,181,182,-1,183,184,185,-1,186,187,188,-1,189,190,191,-1,192,193,194,-1,195,196,197,-1,198,199,200,-1,201,202,203,-1,204,205,206,-1,207,208,209,-1,210,211,212,-1,213,214,215,-1,216,217,218,-1,219,220,221,-1,222,223,224,-1,225,226,227,-1,228,229,230,-1,231,232,233,-1,234,235,236,-1,237,238,239,-1,240,241,242,-1,243,244,245,-1,246,247,248,-1,249,250,251,-1,252,253,254,-1,255,256,257,-1,258,259,260,-1,261,262,263,-1,264,265,266,-1,267,268,269,-1,270,271,272,-1,273,274,275,-1,276,277,278,-1,279,280,281,-1,282,283,284,-1,285,286,287,-1,288,289,290,-1,291,292,293,-1,294,295,296,-1,297,298,299,-1,300,301,302,-1,303,304,305,-1,306,307,308,-1,309,310,311,-1,312,313,314,-1,315,316,317,-1,318,319,320,-1,321,322,323,-1,324,325,326,-1,327,328,329,-1,330,331,332,-1,333,334,335,-1,336,337,338,-1,339,340,341,-1,342,343,344,-1,345,346,347,-1,348,349,350,-1,351,352,353,-1,354,355,356,-1,357,358,359,-1,360,361,362,-1,363,364,365,-1,366,367,368,-1,369,370,371,-1,372,373,374,-1,375,376,377,-1,378,379,380,-1,381,382,383,-1,384,385,386,-1,387,388,389,-1,390,391,392,-1,393,394,395,-1,396,397,398,-1,399,400,401,-1,402,403,404,-1,405,406,407,-1,408,409,410,-1,411,412,413,-1,414,415,416,-1,417,418,419,-1,420,421,422,-1,423,424,425,-1,426,427,428,-1,429,430,431,-1,432,433,434,-1,435,436,437,-1,438,439,440,-1,441,442,443,-1,444,445,446,-1,447,448,449,-1,450,451,452,-1,453,454,455,-1,456,457,458,-1,459,460,461,-1,462,463,464,-1,465,466,467,-1,468,469,470,-1,471,472,473,-1,474,475,476,-1,477,478,479,-1,480,481,482,-1,483,484,485,-1,486,487,488,-1,489,490,491,-1,492,493,494,-1,495,496,497,-1,498,499,500,-1,501,502,503,-1,504,505,506,-1,507,508,509,-1,510,511,512,-1,513,514,515,-1,516,517,518,-1,519,520,521,-1,522,523,524,-1,525,526,527,-1,528,529,530,-1,531,532,533,-1,534,535,536,-1,537,538,539,-1,540,541,542,-1,543,544,545,-1,546,547,548,-1,549,550,551,-1,552,553,554,-1,555,556,557,-1,558,559,560,-1,561,562,563,-1,564,565,566,-1,567,568,569,-1,570,571,572,-1,573,574,575,-1,576,577,578,-1,579,580,581,-1,582,583,584,-1,585,586,587,-1,588,589,590,-1,591,592,593,-1,594,595,596,-1,597,598,599,-1,600,601,602,-1,603,604,605,-1,606,607,608,-1,609,610,611,-1,612,613,614,-1,615,616,617,-1,618,619,620,-1,621,622,623,-1,624,625,626,-1,627,628,629,-1,630,631,632,-1,633,634,635,-1,636,637,638,-1,639,640,641,-1,642,643,644,-1,645,646,647,-1,648,649,650,-1,651,652,653,-1,654,655,656,-1,657,658,659,-1,660,661,662,-1,663,664,665,-1,666,667,668,-1,669,670,671,-1,672,673,674,-1,675,676,677,-1,678,679,680,-1,681,682,683,-1,684,685,686,-1,687,688,689,-1,690,691,692,-1,693,694,695,-1,696,697,698,-1,699,700,701,-1,702,703,704,-1,705,706,707,-1,708,709,710,-1,711,712,713,-1,714,715,716,-1,717,718,719,-1,720,721,722,-1,723,724,725,-1,726,727,728,-1,729,730,731,-1,732,733,734,-1,735,736,737,-1,738,739,740,-1,741,742,743,-1,744,745,746,-1,747,748,749,-1,750,751,752,-1,753,754,755,-1,756,757,758,-1,759,760,761,-1,762,763,764,-1,765,766,767,-1,768,769,770,-1,771,772,773,-1,774,775,776,-1,777,778,779,-1,780,781,782,-1,783,784,785,-1,786,787,788,-1,789,790,791,-1,792,793,794,-1,795,796,797,-1,798,799,800,-1,801,802,803,-1,804,805,806,-1,807,808,809,-1,810,811,812,-1,813,814,815,-1,816,817,818,-1,819,820,821,-1,822,823,824,-1,825,826,827,-1,828,829,830,-1,831,832,833,-1,834,835,836,-1,837,838,839,-1,840,841,842,-1,843,844,845,-1,846,847,848,-1,849,850,851,-1,852,853,854,-1,855,856,857,-1,858,859,860,-1,861,862,863,-1,864,865,866,-1,867,868,869,-1,870,871,872,-1,873,874,875,-1,876,877,878,-1,879,880,881,-1,882,883,884,-1,885,886,887,-1,888,889,890,-1,891,892,893,-1,894,895,896,-1,897,898,899,-1,900,901,902,-1,903,904,905,-1,906,907,908,-1,909,910,911,-1,912,913,914,-1,915,916,917,-1,918,919,920,-1,921,922,923,-1,924,925,926,-1,927,928,929,-1,930,931,932,-1,933,934,935,-1,936,937,938,-1,939,940,941,-1,942,943,944,-1,945,946,947,-1,948,949,950,-1,951,952,953,-1,954,955,956,-1,957,958,959,-1,960,961,962,-1,963,964,965,-1,966,967,968,-1,969,970,971,-1,972,973,974,-1,975,976,977,-1,978,979,980,-1,981,982,983,-1,984,985,986,-1,987,988,989,-1,990,991,992,-1,993,994,995,-1,996,997,998,-1,999,1000,1001,-1,1002,1003,1004,-1,1005,1006,1007,-1,1008,1009,1010,-1,1011,1012,1013,-1,1014,1015,1016,-1,1017,1018,1019,-1,1020,1021,1022,-1,1023,1024,1025,-1,1026,1027,1028,-1,1029,1030,1031,-1,1032,1033,1034,-1,1035,1036,1037,-1,1038,1039,1040,-1,1041,1042,1043,-1,1044,1045,1046,-1,1047,1048,1049,-1,1050,1051,1052,-1,1053,1054,1055,-1,1056,1057,1058,-1,1059,1060,1061,-1,1062,1063,1064,-1,1065,1066,1067,-1,1068,1069,1070,-1,1071,1072,1073,-1,1074,1075,1076,-1,1077,1078,1079,-1,1080,1081,1082,-1,1083,1084,1085,-1,1086,1087,1088,-1,1089,1090,1091,-1,1092,1093,1094,-1,1095,1096,1097,-1,1098,1099,1100,-1,1101,1102,1103,-1,1104,1105,1106,-1,1107,1108,1109,-1,1110,1111,1112,-1,1113,1114,1115,-1,1116,1117,1118,-1,1119,1120,1121,-1,1122,1123,1124,-1,1125,1126,1127,-1,1128,1129,1130,-1,1131,1132,1133,-1,1134,1135,1136,-1,1137,1138,1139,-1,1140,1141,1142,-1,1143,1144,1145,-1,1146,1147,1148,-1,1149,1150,1151,-1,1152,1153,1154,-1,1155,1156,1157,-1,1158,1159,1160,-1,1161,1162,1163,-1,1164,1165,1166,-1,1167,1168,1169,-1,1170,1171,1172,-1,1173,1174,1175,-1,1176,1177,1178,-1,1179,1180,1181,-1,1182,1183,1184,-1,1185,1186,1187,-1,1188,1189,1190,-1,1191,1192,1193,-1,1194,1195,1196,-1,1197,1198,1199,-1,1200,1201,1202,-1,1203,1204,1205,-1,1206,1207,1208,-1,1209,1210,1211,-1,1212,1213,1214,-1,1215,1216,1217,-1,1218,1219,1220,-1,1221,1222,1223,-1,1224,1225,1226,-1,1227,1228,1229,-1,1230,1231,1232,-1,1233,1234,1235,-1,1236,1237,1238,-1,1239,1240,1241,-1,1242,1243,1244,-1,1245,1246,1247,-1,1248,1249,1250,-1,1251,1252,1253,-1,1254,1255,1256,-1,1257,1258,1259,-1,1260,1261,1262,-1,1263,1264,1265,-1,1266,1267,1268,-1,1269,1270,1271,-1,1272,1273,1274,-1,1275,1276,1277,-1,1278,1279,1280,-1,1281,1282,1283,-1,1284,1285,1286,-1,1287,1288,1289,-1,1290,1291,1292,-1,1293,1294,1295,-1,1296,1297,1298,-1,1299,1300,1301,-1,1302,1303,1304,-1,1305,1306,1307,-1,1308,1309,1310,-1,1311,1312,1313,-1,1314,1315,1316,-1,1317,1318,1319,-1,1320,1321,1322,-1,1323,1324,1325,-1,1326,1327,1328,-1,1329,1330,1331,-1,1332,1333,1334,-1,1335,1336,1337,-1,1338,1339,1340,-1,1341,1342,1343,-1,1344,1345,1346,-1,1347,1348,1349,-1,1350,1351,1352,-1,1353,1354,1355,-1,1356,1357,1358,-1,1359,1360,1361,-1,1362,1363,1364,-1,1365,1366,1367,-1,1368,1369,1370,-1,1371,1372,1373,-1,1374,1375,1376,-1,1377,1378,1379,-1,1380,1381,1382,-1,1383,1384,1385,-1,1386,1387,1388,-1,1389,1390,1391,-1,1392,1393,1394,-1,1395,1396,1397,-1,1398,1399,1400,-1,1401,1402,1403,-1,1404,1405,1406,-1,1407,1408,1409,-1,1410,1411,1412,-1,1413,1414,1415,-1,1416,1417,1418,-1,1419,1420,1421,-1,1422,1423,1424,-1,1425,1426,1427,-1,1428,1429,1430,-1,1431,1432,1433,-1,1434,1435,1436,-1,1437,1438,1439,-1,1440,1441,1442,-1,1443,1444,1445,-1,1446,1447,1448,-1,1449,1450,1451,-1,1452,1453,1454,-1,1455,1456,1457,-1,1458,1459,1460,-1,1461,1462,1463,-1,1464,1465,1466,-1,1467,1468,1469,-1,1470,1471,1472,-1,1473,1474,1475,-1,1476,1477,1478,-1,1479,1480,1481,-1,1482,1483,1484,-1,1485,1486,1487,-1,1488,1489,1490,-1,1491,1492,1493,-1,1494,1495,1496,-1,1497,1498,1499,-1,1500,1501,1502,-1,1503,1504,1505,-1,1506,1507,1508,-1,1509,1510,1511,-1,1512,1513,1514,-1,1515,1516,1517,-1,1518,1519,1520,-1,1521,1522,1523,-1,1524,1525,1526,-1,1527,1528,1529,-1,1530,1531,1532,-1,1533,1534,1535,-1,1536,1537,1538,-1,1539,1540,1541,-1,1542,1543,1544,-1,1545,1546,1547,-1,1548,1549,1550,-1,1551,1552,1553,-1,1554,1555,1556,-1,1557,1558,1559,-1,1560,1561,1562,-1,1563,1564,1565,-1,1566,1567,1568,-1,1569,1570,1571,-1,1572,1573,1574,-1,1575,1576,1577,-1,1578,1579,1580,-1,1581,1582,1583,-1,1584,1585,1586,-1,1587,1588,1589,-1,1590,1591,1592,-1,1593,1594,1595,-1,1596,1597,1598,-1,1599,1600,1601,-1,1602,1603,1604,-1,1605,1606,1607,-1,1608,1609,1610,-1,1611,1612,1613,-1,1614,1615,1616,-1,1617,1618,1619,-1,1620,1621,1622,-1,1623,1624,1625,-1,1626,1627,1628,-1,1629,1630,1631,-1,1632,1633,1634,-1,1635,1636,1637,-1,1638,1639,1640,-1,1641,1642,1643,-1,1644,1645,1646,-1,1647,1648,1649,-1,1650,1651,1652,-1,1653,1654,1655,-1,1656,1657,1658,-1,1659,1660,1661,-1,1662,1663,1664,-1,1665,1666,1667,-1,1668,1669,1670,-1,1671,1672,1673,-1,1674,1675,1676,-1,1677,1678,1679,-1,1680,1681,1682,-1,1683,1684,1685,-1,1686,1687,1688,-1,1689,1690,1691,-1,1692,1693,1694,-1,1695,1696,1697,-1,1698,1699,1700,-1,1701,1702,1703,-1,1704,1705,1706,-1,1707,1708,1709,-1,1710,1711,1712,-1,1713,1714,1715,-1,1716,1717,1718,-1,1719,1720,1721,-1,1722,1723,1724,-1,1725,1726,1727,-1,1728,1729,1730,-1,1731,1732,1733,-1,1734,1735,1736,-1,1737,1738,1739,-1,1740,1741,1742,-1,1743,1744,1745,-1,1746,1747,1748,-1,1749,1750,1751,-1,1752,1753,1754,-1,1755,1756,1757,-1,1758,1759,1760,-1,1761,1762,1763,-1,1764,1765,1766,-1,1767,1768,1769,-1,1770,1771,1772,-1,1773,1774,1775,-1,1776,1777,1778,-1,1779,1780,1781,-1,1782,1783,1784,-1,1785,1786,1787,-1,1788,1789,1790,-1,1791,1792,1793,-1,1794,1795,1796,-1,1797,1798,1799,-1,1800,1801,1802,-1,1803,1804,1805,-1,1806,1807,1808,-1,1809,1810,1811,-1,1812,1813,1814,-1,1815,1816,1817,-1,1818,1819,1820,-1,1821,1822,1823,-1,1824,1825,1826,-1,1827,1828,1829,-1,1830,1831,1832,-1,1833,1834,1835,-1,1836,1837,1838,-1,1839,1840,1841,-1,1842,1843,1844,-1,1845,1846,1847,-1,1848,1849,1850,-1,1851,1852,1853,-1,1854,1855,1856,-1,1857,1858,1859,-1,1860,1861,1862,-1,1863,1864,1865,-1,1866,1867,1868,-1,1869,1870,1871,-1,1872,1873,1874,-1,1875,1876,1877,-1,1878,1879,1880,-1,1881,1882,1883,-1,1884,1885,1886,-1,1887,1888,1889,-1,1890,1891,1892,-1,1893,1894,1895,-1,1896,1897,1898,-1,1899,1900,1901,-1,1902,1903,1904,-1,1905,1906,1907,-1,1908,1909,1910,-1,1911,1912,1913,-1,1914,1915,1916,-1,1917,1918,1919,-1,1920,1921,1922,-1,1923,1924,1925,-1,1926,1927,1928,-1,1929,1930,1931,-1,1932,1933,1934,-1,1935,1936,1937,-1,1938,1939,1940,-1,1941,1942,1943,-1,1944,1945,1946,-1,1947,1948,1949,-1,1950,1951,1952,-1,1953,1954,1955,-1,1956,1957,1958,-1,1959,1960,1961,-1,1962,1963,1964,-1,1965,1966,1967,-1,1968,1969,1970,-1,1971,1972,1973,-1,1974,1975,1976,-1,1977,1978,1979,-1,1980,1981,1982,-1,1983,1984,1985,-1,1986,1987,1988,-1,1989,1990,1991,-1,1992,1993,1994,-1,1995,1996,1997,-1,1998,1999,2000,-1,2001,2002,2003,-1,2004,2005,2006,-1,2007,2008,2009,-1,2010,2011,2012,-1,2013,2014,2015,-1,2016,2017,2018,-1,2019,2020,2021,-1,2022,2023,2024,-1,2025,2026,2027,-1,2028,2029,2030,-1,2031,2032,2033,-1,2034,2035,2036,-1,2037,2038,2039,-1,2040,2041,2042,-1,2043,2044,2045,-1,2046,2047,2048,-1,2049,2050,2051,-1,2052,2053,2054,-1,2055,2056,2057,-1,2058,2059,2060,-1,2061,2062,2063,-1,2064,2065,2066,-1,2067,2068,2069,-1,2070,2071,2072,-1,2073,2074,2075,-1,2076,2077,2078,-1,2079,2080,2081,-1,2082,2083,2084,-1,2085,2086,2087,-1,2088,2089,2090,-1,2091,2092,2093,-1,2094,2095,2096,-1,2097,2098,2099,-1,2100,2101,2102,-1,2103,2104,2105,-1,2106,2107,2108,-1,2109,2110,2111,-1,2112,2113,2114,-1,2115,2116,2117,-1,2118,2119,2120,-1,2121,2122,2123,-1,2124,2125,2126,-1,2127,2128,2129,-1,2130,2131,2132,-1,2133,2134,2135,-1,2136,2137,2138,-1,2139,2140,2141,-1,2142,2143,2144,-1,2145,2146,2147,-1,2148,2149,2150,-1,2151,2152,2153,-1,2154,2155,2156,-1,2157,2158,2159,-1,2160,2161,2162,-1,2163,2164,2165,-1,2166,2167,2168,-1,2169,2170,2171,-1,2172,2173,2174,-1,2175,2176,2177,-1,2178,2179,2180,-1,2181,2182,2183,-1,2184,2185,2186,-1,2187,2188,2189,-1,2190,2191,2192,-1,2193,2194,2195,-1,2196,2197,2198,-1,2199,2200,2201,-1,2202,2203,2204,-1,2205,2206,2207,-1,2208,2209,2210,-1,2211,2212,2213,-1,2214,2215,2216,-1,2217,2218,2219,-1,2220,2221,2222,-1,2223,2224,2225,-1,2226,2227,2228,-1,2229,2230,2231,-1,2232,2233,2234,-1,2235,2236,2237,-1,2238,2239,2240,-1,2241,2242,2243,-1,2244,2245,2246,-1,2247,2248,2249,-1,2250,2251,2252,-1,2253,2254,2255,-1,2256,2257,2258,-1,2259,2260,2261,-1,2262,2263,2264,-1,2265,2266,2267,-1,2268,2269,2270,-1,2271,2272,2273,-1,2274,2275,2276,-1,2277,2278,2279,-1,2280,2281,2282,-1,2283,2284,2285,-1,2286,2287,2288,-1,2289,2290,2291,-1,2292,2293,2294,-1,2295,2296,2297,-1,2298,2299,2300,-1,2301,2302,2303,-1,2304,2305,2306,-1,2307,2308,2309,-1,2310,2311,2312,-1,2313,2314,2315,-1,2316,2317,2318,-1,2319,2320,2321,-1,2322,2323,2324,-1,2325,2326,2327,-1,2328,2329,2330,-1,2331,2332,2333,-1,2334,2335,2336,-1,2337,2338,2339,-1,2340,2341,2342,-1,2343,2344,2345,-1,2346,2347,2348,-1,2349,2350,2351,-1,2352,2353,2354,-1,2355,2356,2357,-1,2358,2359,2360,-1,2361,2362,2363,-1,2364,2365,2366,-1,2367,2368,2369,-1,2370,2371,2372,-1,2373,2374,2375,-1,2376,2377,2378,-1,2379,2380,2381,-1,2382,2383,2384,-1,2385,2386,2387,-1,2388,2389,2390,-1,2391,2392,2393,-1,2394,2395,2396,-1,2397,2398,2399,-1,2400,2401,2402,-1,2403,2404,2405,-1,2406,2407,2408,-1,2409,2410,2411,-1,2412,2413,2414,-1,2415,2416,2417,-1,2418,2419,2420,-1,2421,2422,2423,-1,2424,2425,2426,-1,2427,2428,2429,-1,2430,2431,2432,-1,2433,2434,2435,-1,2436,2437,2438,-1,2439,2440,2441,-1,2442,2443,2444,-1,2445,2446,2447,-1,2448,2449,2450,-1,2451,2452,2453,-1,2454,2455,2456,-1,2457,2458,2459,-1,2460,2461,2462,-1,2463,2464,2465,-1,2466,2467,2468,-1,2469,2470,2471,-1,2472,2473,2474,-1,2475,2476,2477,-1,2478,2479,2480,-1,2481,2482,2483,-1,2484,2485,2486,-1,2487,2488,2489,-1,2490,2491,2492,-1,2493,2494,2495,-1,2496,2497,2498,-1,2499,2500,2501,-1,2502,2503,2504,-1,2505,2506,2507,-1,2508,2509,2510,-1,2511,2512,2513,-1,2514,2515,2516,-1,2517,2518,2519,-1,2520,2521,2522,-1,2523,2524,2525,-1,2526,2527,2528,-1,2529,2530,2531,-1,2532,2533,2534,-1,2535,2536,2537,-1,2538,2539,2540,-1,2541,2542,2543,-1,2544,2545,2546,-1,2547,2548,2549,-1,2550,2551,2552,-1,2553,2554,2555,-1,2556,2557,2558,-1,2559,2560,2561,-1,2562,2563,2564,-1,2565,2566,2567,-1,2568,2569,2570,-1,2571,2572,2573,-1,2574,2575,2576,-1,2577,2578,2579,-1,2580,2581,2582,-1,2583,2584,2585,-1,2586,2587,2588,-1,2589,2590,2591,-1,2592,2593,2594,-1,2595,2596,2597,-1,2598,2599,2600,-1,2601,2602,2603,-1,2604,2605,2606,-1,2607,2608,2609,-1,2610,2611,2612,-1,2613,2614,2615,-1,2616,2617,2618,-1,2619,2620,2621,-1,2622,2623,2624,-1,2625,2626,2627,-1,2628,2629,2630,-1,2631,2632,2633,-1,2634,2635,2636,-1,2637,2638,2639,-1,2640,2641,2642,-1,2643,2644,2645,-1,2646,2647,2648,-1,2649,2650,2651,-1,2652,2653,2654,-1,2655,2656,2657,-1,2658,2659,2660,-1,2661,2662,2663,-1,2664,2665,2666,-1,2667,2668,2669,-1,2670,2671,2672,-1,2673,2674,2675,-1,2676,2677,2678,-1,2679,2680,2681,-1,2682,2683,2684,-1,2685,2686,2687,-1,2688,2689,2690,-1,2691,2692,2693,-1,2694,2695,2696,-1,2697,2698,2699,-1,2700,2701,2702,-1,2703,2704,2705,-1,2706,2707,2708,-1,2709,2710,2711,-1,2712,2713,2714,-1,2715,2716,2717,-1,2718,2719,2720,-1,2721,2722,2723,-1,2724,2725,2726,-1,2727,2728,2729,-1,2730,2731,2732,-1,2733,2734,2735,-1,2736,2737,2738,-1,2739,2740,2741,-1,2742,2743,2744,-1,2745,2746,2747,-1,2748,2749,2750,-1,2751,2752,2753,-1,2754,2755,2756,-1,2757,2758,2759,-1,2760,2761,2762,-1,2763,2764,2765,-1,2766,2767,2768,-1,2769,2770,2771,-1,2772,2773,2774,-1,2775,2776,2777,-1,2778,2779,2780,-1,2781,2782,2783,-1,2784,2785,2786,-1,2787,2788,2789,-1,2790,2791,2792,-1,2793,2794,2795,-1,2796,2797,2798,-1,2799,2800,2801,-1,2802,2803,2804,-1,2805,2806,2807,-1,2808,2809,2810,-1,2811,2812,2813,-1,2814,2815,2816,-1,2817,2818,2819,-1,2820,2821,2822,-1,2823,2824,2825,-1,2826,2827,2828,-1,2829,2830,2831,-1,2832,2833,2834,-1,2835,2836,2837,-1,2838,2839,2840,-1,2841,2842,2843,-1,2844,2845,2846,-1,2847,2848,2849,-1,2850,2851,2852,-1,2853,2854,2855,-1,2856,2857,2858,-1,2859,2860,2861,-1,2862,2863,2864,-1,2865,2866,2867,-1,2868,2869,2870,-1,2871,2872,2873,-1,2874,2875,2876,-1,2877,2878,2879,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=6, element #34, 8640 total numbers made up of 2880 3-tuple values */
	this.Coordinate_6_34_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([0.000000,50.000000,0.000000,0.000000,49.039261,-9.754517,-1.903015,49.039261,-9.567078,0.000000,50.000000,0.000000,-1.903015,49.039261,-9.567078,-3.732910,49.039261,-9.012024,0.000000,50.000000,0.000000,-3.732910,49.039261,-9.012024,-5.419312,49.039261,-8.110596,0.000000,50.000000,0.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-5.419312,49.039261,-8.110596,-6.897461,49.039261,-6.897461,0.000000,50.000000,0.000000,-6.897461,49.039261,-6.897461,-8.110596,49.039261,-5.419312,0.000000,50.000000,0.000000,-8.110596,49.039261,-5.419312,-9.012024,49.039261,-3.732910,0.000000,50.000000,0.000000,-9.012024,49.039261,-3.732910], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-9.567078,49.039261,-1.903015,0.000000,50.000000,0.000000,-9.567078,49.039261,-1.903015,-9.754517,49.039261,0.000000,0.000000,50.000000,0.000000,-9.754517,49.039261,0.000000,-9.567078,49.039261,1.903015,0.000000,50.000000,0.000000,-9.567078,49.039261,1.903015,-9.012024,49.039261,3.732910], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,50.000000,0.000000,-9.012024,49.039261,3.732910,-8.110596,49.039261,5.419312,0.000000,50.000000,0.000000,-8.110596,49.039261,5.419312,-6.897461,49.039261,6.897461,0.000000,50.000000,0.000000,-6.897461,49.039261,6.897461,-5.419312,49.039261,8.110596,0.000000,50.000000,0.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-5.419312,49.039261,8.110596,-3.732910,49.039261,9.012024,0.000000,50.000000,0.000000,-3.732910,49.039261,9.012024,-1.903015,49.039261,9.567078,0.000000,50.000000,0.000000,-1.903015,49.039261,9.567078,0.000000,49.039261,9.754517,0.000000,50.000000,0.000000,0.000000,49.039261,9.754517], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([1.903015,49.039261,9.567078,0.000000,50.000000,0.000000,1.903015,49.039261,9.567078,3.732910,49.039261,9.012024,0.000000,50.000000,0.000000,3.732910,49.039261,9.012024,5.419312,49.039261,8.110596,0.000000,50.000000,0.000000,5.419312,49.039261,8.110596,6.897522,49.039261,6.897461], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,50.000000,0.000000,6.897522,49.039261,6.897461,8.110596,49.039261,5.419312,0.000000,50.000000,0.000000,8.110596,49.039261,5.419312,9.012024,49.039261,3.732849,0.000000,50.000000,0.000000,9.012024,49.039261,3.732849,9.567078,49.039261,1.903015,0.000000,50.000000,0.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([9.567078,49.039261,1.903015,9.754517,49.039261,0.000000,0.000000,50.000000,0.000000,9.754517,49.039261,0.000000,9.567078,49.039261,-1.903015,0.000000,50.000000,0.000000,9.567078,49.039261,-1.903015,9.011963,49.039261,-3.732910,0.000000,50.000000,0.000000,9.011963,49.039261,-3.732910], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([8.110596,49.039261,-5.419312,0.000000,50.000000,0.000000,8.110596,49.039261,-5.419312,6.897461,49.039261,-6.897522,0.000000,50.000000,0.000000,6.897461,49.039261,-6.897522,5.419312,49.039261,-8.110596,0.000000,50.000000,0.000000,5.419312,49.039261,-8.110596,3.732849,49.039261,-9.012024], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,50.000000,0.000000,3.732849,49.039261,-9.012024,1.903015,49.039261,-9.567078,0.000000,50.000000,0.000000,1.903015,49.039261,-9.567078,0.000000,49.039261,-9.754517,0.000000,49.039261,-9.754517,0.000000,46.193974,-19.134155,-3.732910,46.193974,-18.766541,0.000000,49.039261,-9.754517], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-3.732910,46.193974,-18.766541,-1.903015,49.039261,-9.567078,-1.903015,49.039261,-9.567078,-3.732910,46.193974,-18.766541,-7.322327,46.193974,-17.677673,-1.903015,49.039261,-9.567078,-7.322327,46.193974,-17.677673,-3.732910,49.039261,-9.012024,-3.732910,49.039261,-9.012024,-7.322327,46.193974,-17.677673], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-10.630371,46.193974,-15.909485,-3.732910,49.039261,-9.012024,-10.630371,46.193974,-15.909485,-5.419312,49.039261,-8.110596,-5.419312,49.039261,-8.110596,-10.630371,46.193974,-15.909485,-13.529907,46.193974,-13.529907,-5.419312,49.039261,-8.110596,-13.529907,46.193974,-13.529907,-6.897461,49.039261,-6.897461], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-6.897461,49.039261,-6.897461,-13.529907,46.193974,-13.529907,-15.909485,46.193974,-10.630371,-6.897461,49.039261,-6.897461,-15.909485,46.193974,-10.630371,-8.110596,49.039261,-5.419312,-8.110596,49.039261,-5.419312,-15.909485,46.193974,-10.630371,-17.677673,46.193974,-7.322327,-8.110596,49.039261,-5.419312], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-17.677673,46.193974,-7.322327,-9.012024,49.039261,-3.732910,-9.012024,49.039261,-3.732910,-17.677673,46.193974,-7.322327,-18.766541,46.193974,-3.732910,-9.012024,49.039261,-3.732910,-18.766541,46.193974,-3.732910,-9.567078,49.039261,-1.903015,-9.567078,49.039261,-1.903015,-18.766541,46.193974,-3.732910], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-19.134155,46.193974,0.000000,-9.567078,49.039261,-1.903015,-19.134155,46.193974,0.000000,-9.754517,49.039261,0.000000,-9.754517,49.039261,0.000000,-19.134155,46.193974,0.000000,-18.766541,46.193974,3.732910,-9.754517,49.039261,0.000000,-18.766541,46.193974,3.732910,-9.567078,49.039261,1.903015], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-9.567078,49.039261,1.903015,-18.766541,46.193974,3.732910,-17.677673,46.193974,7.322327,-9.567078,49.039261,1.903015,-17.677673,46.193974,7.322327,-9.012024,49.039261,3.732910,-9.012024,49.039261,3.732910,-17.677673,46.193974,7.322327,-15.909485,46.193974,10.630371,-9.012024,49.039261,3.732910], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-15.909485,46.193974,10.630371,-8.110596,49.039261,5.419312,-8.110596,49.039261,5.419312,-15.909485,46.193974,10.630371,-13.529907,46.193974,13.529907,-8.110596,49.039261,5.419312,-13.529907,46.193974,13.529907,-6.897461,49.039261,6.897461,-6.897461,49.039261,6.897461,-13.529907,46.193974,13.529907], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-10.630371,46.193974,15.909485,-6.897461,49.039261,6.897461,-10.630371,46.193974,15.909485,-5.419312,49.039261,8.110596,-5.419312,49.039261,8.110596,-10.630371,46.193974,15.909485,-7.322327,46.193974,17.677673,-5.419312,49.039261,8.110596,-7.322327,46.193974,17.677673,-3.732910,49.039261,9.012024], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-3.732910,49.039261,9.012024,-7.322327,46.193974,17.677673,-3.732849,46.193974,18.766541,-3.732910,49.039261,9.012024,-3.732849,46.193974,18.766541,-1.903015,49.039261,9.567078,-1.903015,49.039261,9.567078,-3.732849,46.193974,18.766541,0.000000,46.193974,19.134155,-1.903015,49.039261,9.567078], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,46.193974,19.134155,0.000000,49.039261,9.754517,0.000000,49.039261,9.754517,0.000000,46.193974,19.134155,3.732910,46.193974,18.766541,0.000000,49.039261,9.754517,3.732910,46.193974,18.766541,1.903015,49.039261,9.567078,1.903015,49.039261,9.567078,3.732910,46.193974,18.766541], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([7.322327,46.193974,17.677673,1.903015,49.039261,9.567078,7.322327,46.193974,17.677673,3.732910,49.039261,9.012024,3.732910,49.039261,9.012024,7.322327,46.193974,17.677673,10.630371,46.193974,15.909485,3.732910,49.039261,9.012024,10.630371,46.193974,15.909485,5.419312,49.039261,8.110596], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([5.419312,49.039261,8.110596,10.630371,46.193974,15.909485,13.529907,46.193974,13.529907,5.419312,49.039261,8.110596,13.529907,46.193974,13.529907,6.897522,49.039261,6.897461,6.897522,49.039261,6.897461,13.529907,46.193974,13.529907,15.909485,46.193974,10.630371,6.897522,49.039261,6.897461], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([15.909485,46.193974,10.630371,8.110596,49.039261,5.419312,8.110596,49.039261,5.419312,15.909485,46.193974,10.630371,17.677673,46.193974,7.322327,8.110596,49.039261,5.419312,17.677673,46.193974,7.322327,9.012024,49.039261,3.732849,9.012024,49.039261,3.732849,17.677673,46.193974,7.322327], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([18.766541,46.193974,3.732849,9.012024,49.039261,3.732849,18.766541,46.193974,3.732849,9.567078,49.039261,1.903015,9.567078,49.039261,1.903015,18.766541,46.193974,3.732849,19.134155,46.193974,-0.000061,9.567078,49.039261,1.903015,19.134155,46.193974,-0.000061,9.754517,49.039261,0.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([9.754517,49.039261,0.000000,19.134155,46.193974,-0.000061,18.766479,46.193974,-3.732910,9.754517,49.039261,0.000000,18.766479,46.193974,-3.732910,9.567078,49.039261,-1.903015,9.567078,49.039261,-1.903015,18.766479,46.193974,-3.732910,17.677673,46.193974,-7.322388,9.567078,49.039261,-1.903015], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([17.677673,46.193974,-7.322388,9.011963,49.039261,-3.732910,9.011963,49.039261,-3.732910,17.677673,46.193974,-7.322388,15.909485,46.193974,-10.630432,9.011963,49.039261,-3.732910,15.909485,46.193974,-10.630432,8.110596,49.039261,-5.419312,8.110596,49.039261,-5.419312,15.909485,46.193974,-10.630432], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([13.529846,46.193974,-13.529907,8.110596,49.039261,-5.419312,13.529846,46.193974,-13.529907,6.897461,49.039261,-6.897522,6.897461,49.039261,-6.897522,13.529846,46.193974,-13.529907,10.630371,46.193974,-15.909485,6.897461,49.039261,-6.897522,10.630371,46.193974,-15.909485,5.419312,49.039261,-8.110596], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([5.419312,49.039261,-8.110596,10.630371,46.193974,-15.909485,7.322266,46.193974,-17.677673,5.419312,49.039261,-8.110596,7.322266,46.193974,-17.677673,3.732849,49.039261,-9.012024,3.732849,49.039261,-9.012024,7.322266,46.193974,-17.677673,3.732849,46.193974,-18.766541,3.732849,49.039261,-9.012024], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([3.732849,46.193974,-18.766541,1.903015,49.039261,-9.567078,1.903015,49.039261,-9.567078,3.732849,46.193974,-18.766541,0.000000,46.193974,-19.134155,1.903015,49.039261,-9.567078,0.000000,46.193974,-19.134155,0.000000,49.039261,-9.754517,0.000000,46.193974,-19.134155,0.000000,41.573479,-27.778503], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-5.419312,41.573479,-27.244751,0.000000,46.193974,-19.134155,-5.419312,41.573479,-27.244751,-3.732910,46.193974,-18.766541,-3.732910,46.193974,-18.766541,-5.419312,41.573479,-27.244751,-10.630371,41.573479,-25.664001,-3.732910,46.193974,-18.766541,-10.630371,41.573479,-25.664001,-7.322327,46.193974,-17.677673], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-7.322327,46.193974,-17.677673,-10.630371,41.573479,-25.664001,-15.432922,41.573479,-23.096985,-7.322327,46.193974,-17.677673,-15.432922,41.573479,-23.096985,-10.630371,46.193974,-15.909485,-10.630371,46.193974,-15.909485,-15.432922,41.573479,-23.096985,-19.642395,41.573479,-19.642395,-10.630371,46.193974,-15.909485], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-19.642395,41.573479,-19.642395,-13.529907,46.193974,-13.529907,-13.529907,46.193974,-13.529907,-19.642395,41.573479,-19.642395,-23.096985,41.573479,-15.432922,-13.529907,46.193974,-13.529907,-23.096985,41.573479,-15.432922,-15.909485,46.193974,-10.630371,-15.909485,46.193974,-10.630371,-23.096985,41.573479,-15.432922], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-25.664001,41.573479,-10.630371,-15.909485,46.193974,-10.630371,-25.664001,41.573479,-10.630371,-17.677673,46.193974,-7.322327,-17.677673,46.193974,-7.322327,-25.664001,41.573479,-10.630371,-27.244751,41.573479,-5.419312,-17.677673,46.193974,-7.322327,-27.244751,41.573479,-5.419312,-18.766541,46.193974,-3.732910], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-18.766541,46.193974,-3.732910,-27.244751,41.573479,-5.419312,-27.778503,41.573479,0.000000,-18.766541,46.193974,-3.732910,-27.778503,41.573479,0.000000,-19.134155,46.193974,0.000000,-19.134155,46.193974,0.000000,-27.778503,41.573479,0.000000,-27.244751,41.573479,5.419312,-19.134155,46.193974,0.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-27.244751,41.573479,5.419312,-18.766541,46.193974,3.732910,-18.766541,46.193974,3.732910,-27.244751,41.573479,5.419312,-25.664001,41.573479,10.630371,-18.766541,46.193974,3.732910,-25.664001,41.573479,10.630371,-17.677673,46.193974,7.322327,-17.677673,46.193974,7.322327,-25.664001,41.573479,10.630371], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-23.096985,41.573479,15.432922,-17.677673,46.193974,7.322327,-23.096985,41.573479,15.432922,-15.909485,46.193974,10.630371,-15.909485,46.193974,10.630371,-23.096985,41.573479,15.432922,-19.642334,41.573479,19.642395,-15.909485,46.193974,10.630371,-19.642334,41.573479,19.642395,-13.529907,46.193974,13.529907], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-13.529907,46.193974,13.529907,-19.642334,41.573479,19.642395,-15.432922,41.573479,23.096985,-13.529907,46.193974,13.529907,-15.432922,41.573479,23.096985,-10.630371,46.193974,15.909485,-10.630371,46.193974,15.909485,-15.432922,41.573479,23.096985,-10.630371,41.573479,25.664001,-10.630371,46.193974,15.909485], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-10.630371,41.573479,25.664001,-7.322327,46.193974,17.677673,-7.322327,46.193974,17.677673,-10.630371,41.573479,25.664001,-5.419312,41.573479,27.244751,-7.322327,46.193974,17.677673,-5.419312,41.573479,27.244751,-3.732849,46.193974,18.766541,-3.732849,46.193974,18.766541,-5.419312,41.573479,27.244751], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,41.573479,27.778503,-3.732849,46.193974,18.766541,0.000000,41.573479,27.778503,0.000000,46.193974,19.134155,0.000000,46.193974,19.134155,0.000000,41.573479,27.778503,5.419373,41.573479,27.244751,0.000000,46.193974,19.134155,5.419373,41.573479,27.244751,3.732910,46.193974,18.766541], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([3.732910,46.193974,18.766541,5.419373,41.573479,27.244751,10.630432,41.573479,25.664001,3.732910,46.193974,18.766541,10.630432,41.573479,25.664001,7.322327,46.193974,17.677673,7.322327,46.193974,17.677673,10.630432,41.573479,25.664001,15.432922,41.573479,23.096985,7.322327,46.193974,17.677673], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([15.432922,41.573479,23.096985,10.630371,46.193974,15.909485,10.630371,46.193974,15.909485,15.432922,41.573479,23.096985,19.642395,41.573479,19.642334,10.630371,46.193974,15.909485,19.642395,41.573479,19.642334,13.529907,46.193974,13.529907,13.529907,46.193974,13.529907,19.642395,41.573479,19.642334], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([23.096985,41.573479,15.432861,13.529907,46.193974,13.529907,23.096985,41.573479,15.432861,15.909485,46.193974,10.630371,15.909485,46.193974,10.630371,23.096985,41.573479,15.432861,25.664001,41.573479,10.630310,15.909485,46.193974,10.630371,25.664001,41.573479,10.630310,17.677673,46.193974,7.322327], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([17.677673,46.193974,7.322327,25.664001,41.573479,10.630310,27.244751,41.573479,5.419250,17.677673,46.193974,7.322327,27.244751,41.573479,5.419250,18.766541,46.193974,3.732849,18.766541,46.193974,3.732849,27.244751,41.573479,5.419250,27.778503,41.573479,-0.000061,18.766541,46.193974,3.732849], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([27.778503,41.573479,-0.000061,19.134155,46.193974,-0.000061,19.134155,46.193974,-0.000061,27.778503,41.573479,-0.000061,27.244751,41.573479,-5.419373,19.134155,46.193974,-0.000061,27.244751,41.573479,-5.419373,18.766479,46.193974,-3.732910,18.766479,46.193974,-3.732910,27.244751,41.573479,-5.419373], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([25.664001,41.573479,-10.630432,18.766479,46.193974,-3.732910,25.664001,41.573479,-10.630432,17.677673,46.193974,-7.322388,17.677673,46.193974,-7.322388,25.664001,41.573479,-10.630432,23.096985,41.573479,-15.432983,17.677673,46.193974,-7.322388,23.096985,41.573479,-15.432983,15.909485,46.193974,-10.630432], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([15.909485,46.193974,-10.630432,23.096985,41.573479,-15.432983,19.642334,41.573479,-19.642395,15.909485,46.193974,-10.630432,19.642334,41.573479,-19.642395,13.529846,46.193974,-13.529907,13.529846,46.193974,-13.529907,19.642334,41.573479,-19.642395,15.432861,41.573479,-23.097046,13.529846,46.193974,-13.529907], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([15.432861,41.573479,-23.097046,10.630371,46.193974,-15.909485,10.630371,46.193974,-15.909485,15.432861,41.573479,-23.097046,10.630310,41.573479,-25.664001,10.630371,46.193974,-15.909485,10.630310,41.573479,-25.664001,7.322266,46.193974,-17.677673,7.322266,46.193974,-17.677673,10.630310,41.573479,-25.664001], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([5.419250,41.573479,-27.244751,7.322266,46.193974,-17.677673,5.419250,41.573479,-27.244751,3.732849,46.193974,-18.766541,3.732849,46.193974,-18.766541,5.419250,41.573479,-27.244751,0.000000,41.573479,-27.778503,3.732849,46.193974,-18.766541,0.000000,41.573479,-27.778503,0.000000,46.193974,-19.134155], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,41.573479,-27.778503,0.000000,35.355339,-35.355347,-6.897461,35.355339,-34.675964,0.000000,41.573479,-27.778503,-6.897461,35.355339,-34.675964,-5.419312,41.573479,-27.244751,-5.419312,41.573479,-27.244751,-6.897461,35.355339,-34.675964,-13.529907,35.355339,-32.664063,-5.419312,41.573479,-27.244751], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-13.529907,35.355339,-32.664063,-10.630371,41.573479,-25.664001,-10.630371,41.573479,-25.664001,-13.529907,35.355339,-32.664063,-19.642395,35.355339,-29.396912,-10.630371,41.573479,-25.664001,-19.642395,35.355339,-29.396912,-15.432922,41.573479,-23.096985,-15.432922,41.573479,-23.096985,-19.642395,35.355339,-29.396912], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-25.000000,35.355339,-25.000000,-15.432922,41.573479,-23.096985,-25.000000,35.355339,-25.000000,-19.642395,41.573479,-19.642395,-19.642395,41.573479,-19.642395,-25.000000,35.355339,-25.000000,-29.396912,35.355339,-19.642395,-19.642395,41.573479,-19.642395,-29.396912,35.355339,-19.642395,-23.096985,41.573479,-15.432922], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-23.096985,41.573479,-15.432922,-29.396912,35.355339,-19.642395,-32.664063,35.355339,-13.529907,-23.096985,41.573479,-15.432922,-32.664063,35.355339,-13.529907,-25.664001,41.573479,-10.630371,-25.664001,41.573479,-10.630371,-32.664063,35.355339,-13.529907,-34.676025,35.355339,-6.897461,-25.664001,41.573479,-10.630371], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-34.676025,35.355339,-6.897461,-27.244751,41.573479,-5.419312,-27.244751,41.573479,-5.419312,-34.676025,35.355339,-6.897461,-35.355347,35.355339,0.000000,-27.244751,41.573479,-5.419312,-35.355347,35.355339,0.000000,-27.778503,41.573479,0.000000,-27.778503,41.573479,0.000000,-35.355347,35.355339,0.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-34.675964,35.355339,6.897522,-27.778503,41.573479,0.000000,-34.675964,35.355339,6.897522,-27.244751,41.573479,5.419312,-27.244751,41.573479,5.419312,-34.675964,35.355339,6.897522,-32.664063,35.355339,13.529907,-27.244751,41.573479,5.419312,-32.664063,35.355339,13.529907,-25.664001,41.573479,10.630371], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-25.664001,41.573479,10.630371,-32.664063,35.355339,13.529907,-29.396851,35.355339,19.642395,-25.664001,41.573479,10.630371,-29.396851,35.355339,19.642395,-23.096985,41.573479,15.432922,-23.096985,41.573479,15.432922,-29.396851,35.355339,19.642395,-25.000000,35.355339,25.000000,-23.096985,41.573479,15.432922], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-25.000000,35.355339,25.000000,-19.642334,41.573479,19.642395,-19.642334,41.573479,19.642395,-25.000000,35.355339,25.000000,-19.642334,35.355339,29.396912,-19.642334,41.573479,19.642395,-19.642334,35.355339,29.396912,-15.432922,41.573479,23.096985,-15.432922,41.573479,23.096985,-19.642334,35.355339,29.396912], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-13.529846,35.355339,32.664063,-15.432922,41.573479,23.096985,-13.529846,35.355339,32.664063,-10.630371,41.573479,25.664001,-10.630371,41.573479,25.664001,-13.529846,35.355339,32.664063,-6.897461,35.355339,34.676025,-10.630371,41.573479,25.664001,-6.897461,35.355339,34.676025,-5.419312,41.573479,27.244751], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-5.419312,41.573479,27.244751,-6.897461,35.355339,34.676025,0.000061,35.355339,35.355347,-5.419312,41.573479,27.244751,0.000061,35.355339,35.355347,0.000000,41.573479,27.778503,0.000000,41.573479,27.778503,0.000061,35.355339,35.355347,6.897522,35.355339,34.675964,0.000000,41.573479,27.778503], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([6.897522,35.355339,34.675964,5.419373,41.573479,27.244751,5.419373,41.573479,27.244751,6.897522,35.355339,34.675964,13.529968,35.355339,32.664063,5.419373,41.573479,27.244751,13.529968,35.355339,32.664063,10.630432,41.573479,25.664001,10.630432,41.573479,25.664001,13.529968,35.355339,32.664063], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([19.642395,35.355339,29.396851,10.630432,41.573479,25.664001,19.642395,35.355339,29.396851,15.432922,41.573479,23.096985,15.432922,41.573479,23.096985,19.642395,35.355339,29.396851,25.000061,35.355339,24.999939,15.432922,41.573479,23.096985,25.000061,35.355339,24.999939,19.642395,41.573479,19.642334], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([19.642395,41.573479,19.642334,25.000061,35.355339,24.999939,29.396912,35.355339,19.642334,19.642395,41.573479,19.642334,29.396912,35.355339,19.642334,23.096985,41.573479,15.432861,23.096985,41.573479,15.432861,29.396912,35.355339,19.642334,32.664124,35.355339,13.529846,23.096985,41.573479,15.432861], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([32.664124,35.355339,13.529846,25.664001,41.573479,10.630310,25.664001,41.573479,10.630310,32.664124,35.355339,13.529846,34.676025,35.355339,6.897461,25.664001,41.573479,10.630310,34.676025,35.355339,6.897461,27.244751,41.573479,5.419250,27.244751,41.573479,5.419250,34.676025,35.355339,6.897461], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([35.355347,35.355339,-0.000061,27.244751,41.573479,5.419250,35.355347,35.355339,-0.000061,27.778503,41.573479,-0.000061,27.778503,41.573479,-0.000061,35.355347,35.355339,-0.000061,34.675964,35.355339,-6.897522,27.778503,41.573479,-0.000061,34.675964,35.355339,-6.897522,27.244751,41.573479,-5.419373], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([27.244751,41.573479,-5.419373,34.675964,35.355339,-6.897522,32.664063,35.355339,-13.529968,27.244751,41.573479,-5.419373,32.664063,35.355339,-13.529968,25.664001,41.573479,-10.630432,25.664001,41.573479,-10.630432,32.664063,35.355339,-13.529968,29.396851,35.355339,-19.642456,25.664001,41.573479,-10.630432], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([29.396851,35.355339,-19.642456,23.096985,41.573479,-15.432983,23.096985,41.573479,-15.432983,29.396851,35.355339,-19.642456,24.999939,35.355339,-25.000061,23.096985,41.573479,-15.432983,24.999939,35.355339,-25.000061,19.642334,41.573479,-19.642395,19.642334,41.573479,-19.642395,24.999939,35.355339,-25.000061], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([19.642334,35.355339,-29.396912,19.642334,41.573479,-19.642395,19.642334,35.355339,-29.396912,15.432861,41.573479,-23.097046,15.432861,41.573479,-23.097046,19.642334,35.355339,-29.396912,13.529846,35.355339,-32.664124,15.432861,41.573479,-23.097046,13.529846,35.355339,-32.664124,10.630310,41.573479,-25.664001], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([10.630310,41.573479,-25.664001,13.529846,35.355339,-32.664124,6.897400,35.355339,-34.676025,10.630310,41.573479,-25.664001,6.897400,35.355339,-34.676025,5.419250,41.573479,-27.244751,5.419250,41.573479,-27.244751,6.897400,35.355339,-34.676025,0.000000,35.355339,-35.355347,5.419250,41.573479,-27.244751], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,35.355339,-35.355347,0.000000,41.573479,-27.778503,0.000000,35.355339,-35.355347,0.000000,27.778509,-41.573486,-8.110596,27.778509,-40.774658,0.000000,35.355339,-35.355347,-8.110596,27.778509,-40.774658,-6.897461,35.355339,-34.675964,-6.897461,35.355339,-34.675964,-8.110596,27.778509,-40.774658], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-15.909485,27.778509,-38.408875,-6.897461,35.355339,-34.675964,-15.909485,27.778509,-38.408875,-13.529907,35.355339,-32.664063,-13.529907,35.355339,-32.664063,-15.909485,27.778509,-38.408875,-23.096985,27.778509,-34.567078,-13.529907,35.355339,-32.664063,-23.096985,27.778509,-34.567078,-19.642395,35.355339,-29.396912], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-19.642395,35.355339,-29.396912,-23.096985,27.778509,-34.567078,-29.396912,27.778509,-29.396912,-19.642395,35.355339,-29.396912,-29.396912,27.778509,-29.396912,-25.000000,35.355339,-25.000000,-25.000000,35.355339,-25.000000,-29.396912,27.778509,-29.396912,-34.567078,27.778509,-23.096985,-25.000000,35.355339,-25.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-34.567078,27.778509,-23.096985,-29.396912,35.355339,-19.642395,-29.396912,35.355339,-19.642395,-34.567078,27.778509,-23.096985,-38.408875,27.778509,-15.909485,-29.396912,35.355339,-19.642395,-38.408875,27.778509,-15.909485,-32.664063,35.355339,-13.529907,-32.664063,35.355339,-13.529907,-38.408875,27.778509,-15.909485], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-40.774658,27.778509,-8.110596,-32.664063,35.355339,-13.529907,-40.774658,27.778509,-8.110596,-34.676025,35.355339,-6.897461,-34.676025,35.355339,-6.897461,-40.774658,27.778509,-8.110596,-41.573486,27.778509,0.000000,-34.676025,35.355339,-6.897461,-41.573486,27.778509,0.000000,-35.355347,35.355339,0.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-35.355347,35.355339,0.000000,-41.573486,27.778509,0.000000,-40.774658,27.778509,8.110596,-35.355347,35.355339,0.000000,-40.774658,27.778509,8.110596,-34.675964,35.355339,6.897522,-34.675964,35.355339,6.897522,-40.774658,27.778509,8.110596,-38.408875,27.778509,15.909485,-34.675964,35.355339,6.897522], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-38.408875,27.778509,15.909485,-32.664063,35.355339,13.529907,-32.664063,35.355339,13.529907,-38.408875,27.778509,15.909485,-34.567078,27.778509,23.096985,-32.664063,35.355339,13.529907,-34.567078,27.778509,23.096985,-29.396851,35.355339,19.642395,-29.396851,35.355339,19.642395,-34.567078,27.778509,23.096985], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-29.396851,27.778509,29.396912,-29.396851,35.355339,19.642395,-29.396851,27.778509,29.396912,-25.000000,35.355339,25.000000,-25.000000,35.355339,25.000000,-29.396851,27.778509,29.396912,-23.096985,27.778509,34.567078,-25.000000,35.355339,25.000000,-23.096985,27.778509,34.567078,-19.642334,35.355339,29.396912], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-19.642334,35.355339,29.396912,-23.096985,27.778509,34.567078,-15.909424,27.778509,38.408875,-19.642334,35.355339,29.396912,-15.909424,27.778509,38.408875,-13.529846,35.355339,32.664063,-13.529846,35.355339,32.664063,-15.909424,27.778509,38.408875,-8.110535,27.778509,40.774658,-13.529846,35.355339,32.664063], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-8.110535,27.778509,40.774658,-6.897461,35.355339,34.676025,-6.897461,35.355339,34.676025,-8.110535,27.778509,40.774658,0.000061,27.778509,41.573486,-6.897461,35.355339,34.676025,0.000061,27.778509,41.573486,0.000061,35.355339,35.355347,0.000061,35.355339,35.355347,0.000061,27.778509,41.573486], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([8.110657,27.778509,40.774658,0.000061,35.355339,35.355347,8.110657,27.778509,40.774658,6.897522,35.355339,34.675964,6.897522,35.355339,34.675964,8.110657,27.778509,40.774658,15.909546,27.778509,38.408875,6.897522,35.355339,34.675964,15.909546,27.778509,38.408875,13.529968,35.355339,32.664063], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([13.529968,35.355339,32.664063,15.909546,27.778509,38.408875,23.097046,27.778509,34.567078,13.529968,35.355339,32.664063,23.097046,27.778509,34.567078,19.642395,35.355339,29.396851,19.642395,35.355339,29.396851,23.097046,27.778509,34.567078,29.396912,27.778509,29.396851,19.642395,35.355339,29.396851], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([29.396912,27.778509,29.396851,25.000061,35.355339,24.999939,25.000061,35.355339,24.999939,29.396912,27.778509,29.396851,34.567139,27.778509,23.096924,25.000061,35.355339,24.999939,34.567139,27.778509,23.096924,29.396912,35.355339,19.642334,29.396912,35.355339,19.642334,34.567139,27.778509,23.096924], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([38.408936,27.778509,15.909424,29.396912,35.355339,19.642334,38.408936,27.778509,15.909424,32.664124,35.355339,13.529846,32.664124,35.355339,13.529846,38.408936,27.778509,15.909424,40.774658,27.778509,8.110535,32.664124,35.355339,13.529846,40.774658,27.778509,8.110535,34.676025,35.355339,6.897461], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([34.676025,35.355339,6.897461,40.774658,27.778509,8.110535,41.573486,27.778509,-0.000061,34.676025,35.355339,6.897461,41.573486,27.778509,-0.000061,35.355347,35.355339,-0.000061,35.355347,35.355339,-0.000061,41.573486,27.778509,-0.000061,40.774658,27.778509,-8.110657,35.355347,35.355339,-0.000061], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([40.774658,27.778509,-8.110657,34.675964,35.355339,-6.897522,34.675964,35.355339,-6.897522,40.774658,27.778509,-8.110657,38.408875,27.778509,-15.909546,34.675964,35.355339,-6.897522,38.408875,27.778509,-15.909546,32.664063,35.355339,-13.529968,32.664063,35.355339,-13.529968,38.408875,27.778509,-15.909546], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([34.567017,27.778509,-23.097046,32.664063,35.355339,-13.529968,34.567017,27.778509,-23.097046,29.396851,35.355339,-19.642456,29.396851,35.355339,-19.642456,34.567017,27.778509,-23.097046,29.396851,27.778509,-29.396973,29.396851,35.355339,-19.642456,29.396851,27.778509,-29.396973,24.999939,35.355339,-25.000061], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([24.999939,35.355339,-25.000061,29.396851,27.778509,-29.396973,23.096924,27.778509,-34.567139,24.999939,35.355339,-25.000061,23.096924,27.778509,-34.567139,19.642334,35.355339,-29.396912,19.642334,35.355339,-29.396912,23.096924,27.778509,-34.567139,15.909424,27.778509,-38.408936,19.642334,35.355339,-29.396912], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([15.909424,27.778509,-38.408936,13.529846,35.355339,-32.664124,13.529846,35.355339,-32.664124,15.909424,27.778509,-38.408936,8.110474,27.778509,-40.774658,13.529846,35.355339,-32.664124,8.110474,27.778509,-40.774658,6.897400,35.355339,-34.676025,6.897400,35.355339,-34.676025,8.110474,27.778509,-40.774658], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,27.778509,-41.573486,6.897400,35.355339,-34.676025,0.000000,27.778509,-41.573486,0.000000,35.355339,-35.355347,0.000000,27.778509,-41.573486,0.000000,19.134171,-46.193970,-9.012024,19.134171,-45.306396,0.000000,27.778509,-41.573486,-9.012024,19.134171,-45.306396,-8.110596,27.778509,-40.774658], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-8.110596,27.778509,-40.774658,-9.012024,19.134171,-45.306396,-17.677673,19.134171,-42.677673,-8.110596,27.778509,-40.774658,-17.677673,19.134171,-42.677673,-15.909485,27.778509,-38.408875,-15.909485,27.778509,-38.408875,-17.677673,19.134171,-42.677673,-25.664001,19.134171,-38.408875,-15.909485,27.778509,-38.408875], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-25.664001,19.134171,-38.408875,-23.096985,27.778509,-34.567078,-23.096985,27.778509,-34.567078,-25.664001,19.134171,-38.408875,-32.664063,19.134171,-32.664063,-23.096985,27.778509,-34.567078,-32.664063,19.134171,-32.664063,-29.396912,27.778509,-29.396912,-29.396912,27.778509,-29.396912,-32.664063,19.134171,-32.664063], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-38.408875,19.134171,-25.664001,-29.396912,27.778509,-29.396912,-38.408875,19.134171,-25.664001,-34.567078,27.778509,-23.096985,-34.567078,27.778509,-23.096985,-38.408875,19.134171,-25.664001,-42.677673,19.134171,-17.677673,-34.567078,27.778509,-23.096985,-42.677673,19.134171,-17.677673,-38.408875,27.778509,-15.909485], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-38.408875,27.778509,-15.909485,-42.677673,19.134171,-17.677673,-45.306396,19.134171,-9.011963,-38.408875,27.778509,-15.909485,-45.306396,19.134171,-9.011963,-40.774658,27.778509,-8.110596,-40.774658,27.778509,-8.110596,-45.306396,19.134171,-9.011963,-46.193970,19.134171,0.000000,-40.774658,27.778509,-8.110596], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-46.193970,19.134171,0.000000,-41.573486,27.778509,0.000000,-41.573486,27.778509,0.000000,-46.193970,19.134171,0.000000,-45.306335,19.134171,9.012024,-41.573486,27.778509,0.000000,-45.306335,19.134171,9.012024,-40.774658,27.778509,8.110596,-40.774658,27.778509,8.110596,-45.306335,19.134171,9.012024], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-42.677673,19.134171,17.677673,-40.774658,27.778509,8.110596,-42.677673,19.134171,17.677673,-38.408875,27.778509,15.909485,-38.408875,27.778509,15.909485,-42.677673,19.134171,17.677673,-38.408875,19.134171,25.664001,-38.408875,27.778509,15.909485,-38.408875,19.134171,25.664001,-34.567078,27.778509,23.096985], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-34.567078,27.778509,23.096985,-38.408875,19.134171,25.664001,-32.664063,19.134171,32.664124,-34.567078,27.778509,23.096985,-32.664063,19.134171,32.664124,-29.396851,27.778509,29.396912,-29.396851,27.778509,29.396912,-32.664063,19.134171,32.664124,-25.663940,19.134171,38.408875,-29.396851,27.778509,29.396912], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-25.663940,19.134171,38.408875,-23.096985,27.778509,34.567078,-23.096985,27.778509,34.567078,-25.663940,19.134171,38.408875,-17.677612,19.134171,42.677673,-23.096985,27.778509,34.567078,-17.677612,19.134171,42.677673,-15.909424,27.778509,38.408875,-15.909424,27.778509,38.408875,-17.677612,19.134171,42.677673], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-9.011963,19.134171,45.306396,-15.909424,27.778509,38.408875,-9.011963,19.134171,45.306396,-8.110535,27.778509,40.774658,-8.110535,27.778509,40.774658,-9.011963,19.134171,45.306396,0.000061,19.134171,46.193970,-8.110535,27.778509,40.774658,0.000061,19.134171,46.193970,0.000061,27.778509,41.573486], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000061,27.778509,41.573486,0.000061,19.134171,46.193970,9.012024,19.134171,45.306335,0.000061,27.778509,41.573486,9.012024,19.134171,45.306335,8.110657,27.778509,40.774658,8.110657,27.778509,40.774658,9.012024,19.134171,45.306335,17.677734,19.134171,42.677673,8.110657,27.778509,40.774658], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([17.677734,19.134171,42.677673,15.909546,27.778509,38.408875,15.909546,27.778509,38.408875,17.677734,19.134171,42.677673,25.664063,19.134171,38.408875,15.909546,27.778509,38.408875,25.664063,19.134171,38.408875,23.097046,27.778509,34.567078,23.097046,27.778509,34.567078,25.664063,19.134171,38.408875], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([32.664124,19.134171,32.664001,23.097046,27.778509,34.567078,32.664124,19.134171,32.664001,29.396912,27.778509,29.396851,29.396912,27.778509,29.396851,32.664124,19.134171,32.664001,38.408936,19.134171,25.663940,29.396912,27.778509,29.396851,38.408936,19.134171,25.663940,34.567139,27.778509,23.096924], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([34.567139,27.778509,23.096924,38.408936,19.134171,25.663940,42.677673,19.134171,17.677612,34.567139,27.778509,23.096924,42.677673,19.134171,17.677612,38.408936,27.778509,15.909424,38.408936,27.778509,15.909424,42.677673,19.134171,17.677612,45.306396,19.134171,9.011902,38.408936,27.778509,15.909424], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([45.306396,19.134171,9.011902,40.774658,27.778509,8.110535,40.774658,27.778509,8.110535,45.306396,19.134171,9.011902,46.193970,19.134171,-0.000061,40.774658,27.778509,8.110535,46.193970,19.134171,-0.000061,41.573486,27.778509,-0.000061,41.573486,27.778509,-0.000061,46.193970,19.134171,-0.000061], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([45.306335,19.134171,-9.012085,41.573486,27.778509,-0.000061,45.306335,19.134171,-9.012085,40.774658,27.778509,-8.110657,40.774658,27.778509,-8.110657,45.306335,19.134171,-9.012085,42.677612,19.134171,-17.677734,40.774658,27.778509,-8.110657,42.677612,19.134171,-17.677734,38.408875,27.778509,-15.909546], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([38.408875,27.778509,-15.909546,42.677612,19.134171,-17.677734,38.408813,19.134171,-25.664063,38.408875,27.778509,-15.909546,38.408813,19.134171,-25.664063,34.567017,27.778509,-23.097046,34.567017,27.778509,-23.097046,38.408813,19.134171,-25.664063,32.664001,19.134171,-32.664124,34.567017,27.778509,-23.097046], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([32.664001,19.134171,-32.664124,29.396851,27.778509,-29.396973,29.396851,27.778509,-29.396973,32.664001,19.134171,-32.664124,25.663940,19.134171,-38.408936,29.396851,27.778509,-29.396973,25.663940,19.134171,-38.408936,23.096924,27.778509,-34.567139,23.096924,27.778509,-34.567139,25.663940,19.134171,-38.408936], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([17.677551,19.134171,-42.677673,23.096924,27.778509,-34.567139,17.677551,19.134171,-42.677673,15.909424,27.778509,-38.408936,15.909424,27.778509,-38.408936,17.677551,19.134171,-42.677673,9.011902,19.134171,-45.306396,15.909424,27.778509,-38.408936,9.011902,19.134171,-45.306396,8.110474,27.778509,-40.774658], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([8.110474,27.778509,-40.774658,9.011902,19.134171,-45.306396,0.000000,19.134171,-46.193970,8.110474,27.778509,-40.774658,0.000000,19.134171,-46.193970,0.000000,27.778509,-41.573486,0.000000,19.134171,-46.193970,0.000000,9.754518,-49.039246,-9.567078,9.754518,-48.096985,0.000000,19.134171,-46.193970], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-9.567078,9.754518,-48.096985,-9.012024,19.134171,-45.306396,-9.012024,19.134171,-45.306396,-9.567078,9.754518,-48.096985,-18.766541,9.754518,-45.306396,-9.012024,19.134171,-45.306396,-18.766541,9.754518,-45.306396,-17.677673,19.134171,-42.677673,-17.677673,19.134171,-42.677673,-18.766541,9.754518,-45.306396], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-27.244751,9.754518,-40.774658,-17.677673,19.134171,-42.677673,-27.244751,9.754518,-40.774658,-25.664001,19.134171,-38.408875,-25.664001,19.134171,-38.408875,-27.244751,9.754518,-40.774658,-34.675964,9.754518,-34.675964,-25.664001,19.134171,-38.408875,-34.675964,9.754518,-34.675964,-32.664063,19.134171,-32.664063], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-32.664063,19.134171,-32.664063,-34.675964,9.754518,-34.675964,-40.774658,9.754518,-27.244751,-32.664063,19.134171,-32.664063,-40.774658,9.754518,-27.244751,-38.408875,19.134171,-25.664001,-38.408875,19.134171,-25.664001,-40.774658,9.754518,-27.244751,-45.306396,9.754518,-18.766479,-38.408875,19.134171,-25.664001], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-45.306396,9.754518,-18.766479,-42.677673,19.134171,-17.677673,-42.677673,19.134171,-17.677673,-45.306396,9.754518,-18.766479,-48.096985,9.754518,-9.567078,-42.677673,19.134171,-17.677673,-48.096985,9.754518,-9.567078,-45.306396,19.134171,-9.011963,-45.306396,19.134171,-9.011963,-48.096985,9.754518,-9.567078], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-49.039246,9.754518,0.000000,-45.306396,19.134171,-9.011963,-49.039246,9.754518,0.000000,-46.193970,19.134171,0.000000,-46.193970,19.134171,0.000000,-49.039246,9.754518,0.000000,-48.096985,9.754518,9.567078,-46.193970,19.134171,0.000000,-48.096985,9.754518,9.567078,-45.306335,19.134171,9.012024], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-45.306335,19.134171,9.012024,-48.096985,9.754518,9.567078,-45.306335,9.754518,18.766541,-45.306335,19.134171,9.012024,-45.306335,9.754518,18.766541,-42.677673,19.134171,17.677673,-42.677673,19.134171,17.677673,-45.306335,9.754518,18.766541,-40.774658,9.754518,27.244751,-42.677673,19.134171,17.677673], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-40.774658,9.754518,27.244751,-38.408875,19.134171,25.664001,-38.408875,19.134171,25.664001,-40.774658,9.754518,27.244751,-34.675964,9.754518,34.676025,-38.408875,19.134171,25.664001,-34.675964,9.754518,34.676025,-32.664063,19.134171,32.664124,-32.664063,19.134171,32.664124,-34.675964,9.754518,34.676025], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-27.244751,9.754518,40.774658,-32.664063,19.134171,32.664124,-27.244751,9.754518,40.774658,-25.663940,19.134171,38.408875,-25.663940,19.134171,38.408875,-27.244751,9.754518,40.774658,-18.766479,9.754518,45.306396,-25.663940,19.134171,38.408875,-18.766479,9.754518,45.306396,-17.677612,19.134171,42.677673], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-17.677612,19.134171,42.677673,-18.766479,9.754518,45.306396,-9.567017,9.754518,48.096985,-17.677612,19.134171,42.677673,-9.567017,9.754518,48.096985,-9.011963,19.134171,45.306396,-9.011963,19.134171,45.306396,-9.567017,9.754518,48.096985,0.000061,9.754518,49.039246,-9.011963,19.134171,45.306396], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000061,9.754518,49.039246,0.000061,19.134171,46.193970,0.000061,19.134171,46.193970,0.000061,9.754518,49.039246,9.567139,9.754518,48.096985,0.000061,19.134171,46.193970,9.567139,9.754518,48.096985,9.012024,19.134171,45.306335,9.012024,19.134171,45.306335,9.567139,9.754518,48.096985], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([18.766541,9.754518,45.306335,9.012024,19.134171,45.306335,18.766541,9.754518,45.306335,17.677734,19.134171,42.677673,17.677734,19.134171,42.677673,18.766541,9.754518,45.306335,27.244812,9.754518,40.774597,17.677734,19.134171,42.677673,27.244812,9.754518,40.774597,25.664063,19.134171,38.408875], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([25.664063,19.134171,38.408875,27.244812,9.754518,40.774597,34.676025,9.754518,34.675964,25.664063,19.134171,38.408875,34.676025,9.754518,34.675964,32.664124,19.134171,32.664001,32.664124,19.134171,32.664001,34.676025,9.754518,34.675964,40.774719,9.754518,27.244690,32.664124,19.134171,32.664001], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([40.774719,9.754518,27.244690,38.408936,19.134171,25.663940,38.408936,19.134171,25.663940,40.774719,9.754518,27.244690,45.306396,9.754518,18.766418,38.408936,19.134171,25.663940,45.306396,9.754518,18.766418,42.677673,19.134171,17.677612,42.677673,19.134171,17.677612,45.306396,9.754518,18.766418], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([48.096985,9.754518,9.567017,42.677673,19.134171,17.677612,48.096985,9.754518,9.567017,45.306396,19.134171,9.011902,45.306396,19.134171,9.011902,48.096985,9.754518,9.567017,49.039246,9.754518,-0.000061,45.306396,19.134171,9.011902,49.039246,9.754518,-0.000061,46.193970,19.134171,-0.000061], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([46.193970,19.134171,-0.000061,49.039246,9.754518,-0.000061,48.096985,9.754518,-9.567139,46.193970,19.134171,-0.000061,48.096985,9.754518,-9.567139,45.306335,19.134171,-9.012085,45.306335,19.134171,-9.012085,48.096985,9.754518,-9.567139,45.306335,9.754518,-18.766602,45.306335,19.134171,-9.012085], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([45.306335,9.754518,-18.766602,42.677612,19.134171,-17.677734,42.677612,19.134171,-17.677734,45.306335,9.754518,-18.766602,40.774597,9.754518,-27.244812,42.677612,19.134171,-17.677734,40.774597,9.754518,-27.244812,38.408813,19.134171,-25.664063,38.408813,19.134171,-25.664063,40.774597,9.754518,-27.244812], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([34.675903,9.754518,-34.676086,38.408813,19.134171,-25.664063,34.675903,9.754518,-34.676086,32.664001,19.134171,-32.664124,32.664001,19.134171,-32.664124,34.675903,9.754518,-34.676086,27.244690,9.754518,-40.774719,32.664001,19.134171,-32.664124,27.244690,9.754518,-40.774719,25.663940,19.134171,-38.408936], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([25.663940,19.134171,-38.408936,27.244690,9.754518,-40.774719,18.766418,9.754518,-45.306396,25.663940,19.134171,-38.408936,18.766418,9.754518,-45.306396,17.677551,19.134171,-42.677673,17.677551,19.134171,-42.677673,18.766418,9.754518,-45.306396,9.566956,9.754518,-48.096985,17.677551,19.134171,-42.677673], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([9.566956,9.754518,-48.096985,9.011902,19.134171,-45.306396,9.011902,19.134171,-45.306396,9.566956,9.754518,-48.096985,0.000000,9.754518,-49.039246,9.011902,19.134171,-45.306396,0.000000,9.754518,-49.039246,0.000000,19.134171,-46.193970,0.000000,9.754518,-49.039246,0.000000,0.000004,-50.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-9.754517,0.000004,-49.039246,0.000000,9.754518,-49.039246,-9.754517,0.000004,-49.039246,-9.567078,9.754518,-48.096985,-9.567078,9.754518,-48.096985,-9.754517,0.000004,-49.039246,-19.134155,0.000004,-46.193970,-9.567078,9.754518,-48.096985,-19.134155,0.000004,-46.193970,-18.766541,9.754518,-45.306396], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-18.766541,9.754518,-45.306396,-19.134155,0.000004,-46.193970,-27.778503,0.000004,-41.573486,-18.766541,9.754518,-45.306396,-27.778503,0.000004,-41.573486,-27.244751,9.754518,-40.774658,-27.244751,9.754518,-40.774658,-27.778503,0.000004,-41.573486,-35.355347,0.000004,-35.355347,-27.244751,9.754518,-40.774658], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-35.355347,0.000004,-35.355347,-34.675964,9.754518,-34.675964,-34.675964,9.754518,-34.675964,-35.355347,0.000004,-35.355347,-41.573486,0.000004,-27.778503,-34.675964,9.754518,-34.675964,-41.573486,0.000004,-27.778503,-40.774658,9.754518,-27.244751,-40.774658,9.754518,-27.244751,-41.573486,0.000004,-27.778503], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-46.193970,0.000004,-19.134155,-40.774658,9.754518,-27.244751,-46.193970,0.000004,-19.134155,-45.306396,9.754518,-18.766479,-45.306396,9.754518,-18.766479,-46.193970,0.000004,-19.134155,-49.039246,0.000004,-9.754517,-45.306396,9.754518,-18.766479,-49.039246,0.000004,-9.754517,-48.096985,9.754518,-9.567078], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-48.096985,9.754518,-9.567078,-49.039246,0.000004,-9.754517,-50.000000,0.000004,0.000000,-48.096985,9.754518,-9.567078,-50.000000,0.000004,0.000000,-49.039246,9.754518,0.000000,-49.039246,9.754518,0.000000,-50.000000,0.000004,0.000000,-49.039246,0.000004,9.754517,-49.039246,9.754518,0.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-49.039246,0.000004,9.754517,-48.096985,9.754518,9.567078,-48.096985,9.754518,9.567078,-49.039246,0.000004,9.754517,-46.193970,0.000004,19.134216,-48.096985,9.754518,9.567078,-46.193970,0.000004,19.134216,-45.306335,9.754518,18.766541,-45.306335,9.754518,18.766541,-46.193970,0.000004,19.134216], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-41.573486,0.000004,27.778564,-45.306335,9.754518,18.766541,-41.573486,0.000004,27.778564,-40.774658,9.754518,27.244751,-40.774658,9.754518,27.244751,-41.573486,0.000004,27.778564,-35.355286,0.000004,35.355347,-40.774658,9.754518,27.244751,-35.355286,0.000004,35.355347,-34.675964,9.754518,34.676025], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-34.675964,9.754518,34.676025,-35.355286,0.000004,35.355347,-27.778503,0.000004,41.573486,-34.675964,9.754518,34.676025,-27.778503,0.000004,41.573486,-27.244751,9.754518,40.774658,-27.244751,9.754518,40.774658,-27.778503,0.000004,41.573486,-19.134155,0.000004,46.193970,-27.244751,9.754518,40.774658], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-19.134155,0.000004,46.193970,-18.766479,9.754518,45.306396,-18.766479,9.754518,45.306396,-19.134155,0.000004,46.193970,-9.754456,0.000004,49.039246,-18.766479,9.754518,45.306396,-9.754456,0.000004,49.039246,-9.567017,9.754518,48.096985,-9.567017,9.754518,48.096985,-9.754456,0.000004,49.039246], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000061,0.000004,50.000000,-9.567017,9.754518,48.096985,0.000061,0.000004,50.000000,0.000061,9.754518,49.039246,0.000061,9.754518,49.039246,0.000061,0.000004,50.000000,9.754578,0.000004,49.039246,0.000061,9.754518,49.039246,9.754578,0.000004,49.039246,9.567139,9.754518,48.096985], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([9.567139,9.754518,48.096985,9.754578,0.000004,49.039246,19.134216,0.000004,46.193970,9.567139,9.754518,48.096985,19.134216,0.000004,46.193970,18.766541,9.754518,45.306335,18.766541,9.754518,45.306335,19.134216,0.000004,46.193970,27.778564,0.000004,41.573425,18.766541,9.754518,45.306335], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([27.778564,0.000004,41.573425,27.244812,9.754518,40.774597,27.244812,9.754518,40.774597,27.778564,0.000004,41.573425,35.355408,0.000004,35.355286,27.244812,9.754518,40.774597,35.355408,0.000004,35.355286,34.676025,9.754518,34.675964,34.676025,9.754518,34.675964,35.355408,0.000004,35.355286], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([41.573547,0.000004,27.778442,34.676025,9.754518,34.675964,41.573547,0.000004,27.778442,40.774719,9.754518,27.244690,40.774719,9.754518,27.244690,41.573547,0.000004,27.778442,46.194031,0.000004,19.134094,40.774719,9.754518,27.244690,46.194031,0.000004,19.134094,45.306396,9.754518,18.766418], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([45.306396,9.754518,18.766418,46.194031,0.000004,19.134094,49.039246,0.000004,9.754456,45.306396,9.754518,18.766418,49.039246,0.000004,9.754456,48.096985,9.754518,9.567017,48.096985,9.754518,9.567017,49.039246,0.000004,9.754456,50.000000,0.000004,-0.000061,48.096985,9.754518,9.567017], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([50.000000,0.000004,-0.000061,49.039246,9.754518,-0.000061,49.039246,9.754518,-0.000061,50.000000,0.000004,-0.000061,49.039246,0.000004,-9.754578,49.039246,9.754518,-0.000061,49.039246,0.000004,-9.754578,48.096985,9.754518,-9.567139,48.096985,9.754518,-9.567139,49.039246,0.000004,-9.754578], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([46.193970,0.000004,-19.134277,48.096985,9.754518,-9.567139,46.193970,0.000004,-19.134277,45.306335,9.754518,-18.766602,45.306335,9.754518,-18.766602,46.193970,0.000004,-19.134277,41.573425,0.000004,-27.778564,45.306335,9.754518,-18.766602,41.573425,0.000004,-27.778564,40.774597,9.754518,-27.244812], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([40.774597,9.754518,-27.244812,41.573425,0.000004,-27.778564,35.355286,0.000004,-35.355408,40.774597,9.754518,-27.244812,35.355286,0.000004,-35.355408,34.675903,9.754518,-34.676086,34.675903,9.754518,-34.676086,35.355286,0.000004,-35.355408,27.778442,0.000004,-41.573547,34.675903,9.754518,-34.676086], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([27.778442,0.000004,-41.573547,27.244690,9.754518,-40.774719,27.244690,9.754518,-40.774719,27.778442,0.000004,-41.573547,19.134094,0.000004,-46.194031,27.244690,9.754518,-40.774719,19.134094,0.000004,-46.194031,18.766418,9.754518,-45.306396,18.766418,9.754518,-45.306396,19.134094,0.000004,-46.194031], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([9.754395,0.000004,-49.039307,18.766418,9.754518,-45.306396,9.754395,0.000004,-49.039307,9.566956,9.754518,-48.096985,9.566956,9.754518,-48.096985,9.754395,0.000004,-49.039307,0.000000,0.000004,-50.000000,9.566956,9.754518,-48.096985,0.000000,0.000004,-50.000000,0.000000,9.754518,-49.039246], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,0.000004,-50.000000,0.000000,-9.754510,-49.039246,-9.567078,-9.754510,-48.096985,0.000000,0.000004,-50.000000,-9.567078,-9.754510,-48.096985,-9.754517,0.000004,-49.039246,-9.754517,0.000004,-49.039246,-9.567078,-9.754510,-48.096985,-18.766541,-9.754510,-45.306396,-9.754517,0.000004,-49.039246], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-18.766541,-9.754510,-45.306396,-19.134155,0.000004,-46.193970,-19.134155,0.000004,-46.193970,-18.766541,-9.754510,-45.306396,-27.244751,-9.754510,-40.774658,-19.134155,0.000004,-46.193970,-27.244751,-9.754510,-40.774658,-27.778503,0.000004,-41.573486,-27.778503,0.000004,-41.573486,-27.244751,-9.754510,-40.774658], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-34.675964,-9.754510,-34.675964,-27.778503,0.000004,-41.573486,-34.675964,-9.754510,-34.675964,-35.355347,0.000004,-35.355347,-35.355347,0.000004,-35.355347,-34.675964,-9.754510,-34.675964,-40.774658,-9.754510,-27.244751,-35.355347,0.000004,-35.355347,-40.774658,-9.754510,-27.244751,-41.573486,0.000004,-27.778503], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-41.573486,0.000004,-27.778503,-40.774658,-9.754510,-27.244751,-45.306396,-9.754510,-18.766479,-41.573486,0.000004,-27.778503,-45.306396,-9.754510,-18.766479,-46.193970,0.000004,-19.134155,-46.193970,0.000004,-19.134155,-45.306396,-9.754510,-18.766479,-48.096985,-9.754510,-9.567078,-46.193970,0.000004,-19.134155], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-48.096985,-9.754510,-9.567078,-49.039246,0.000004,-9.754517,-49.039246,0.000004,-9.754517,-48.096985,-9.754510,-9.567078,-49.039246,-9.754510,0.000000,-49.039246,0.000004,-9.754517,-49.039246,-9.754510,0.000000,-50.000000,0.000004,0.000000,-50.000000,0.000004,0.000000,-49.039246,-9.754510,0.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-48.096985,-9.754510,9.567078,-50.000000,0.000004,0.000000,-48.096985,-9.754510,9.567078,-49.039246,0.000004,9.754517,-49.039246,0.000004,9.754517,-48.096985,-9.754510,9.567078,-45.306335,-9.754510,18.766541,-49.039246,0.000004,9.754517,-45.306335,-9.754510,18.766541,-46.193970,0.000004,19.134216], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-46.193970,0.000004,19.134216,-45.306335,-9.754510,18.766541,-40.774658,-9.754510,27.244751,-46.193970,0.000004,19.134216,-40.774658,-9.754510,27.244751,-41.573486,0.000004,27.778564,-41.573486,0.000004,27.778564,-40.774658,-9.754510,27.244751,-34.675964,-9.754510,34.676025,-41.573486,0.000004,27.778564], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-34.675964,-9.754510,34.676025,-35.355286,0.000004,35.355347,-35.355286,0.000004,35.355347,-34.675964,-9.754510,34.676025,-27.244751,-9.754510,40.774658,-35.355286,0.000004,35.355347,-27.244751,-9.754510,40.774658,-27.778503,0.000004,41.573486,-27.778503,0.000004,41.573486,-27.244751,-9.754510,40.774658], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-18.766479,-9.754510,45.306396,-27.778503,0.000004,41.573486,-18.766479,-9.754510,45.306396,-19.134155,0.000004,46.193970,-19.134155,0.000004,46.193970,-18.766479,-9.754510,45.306396,-9.567017,-9.754510,48.096985,-19.134155,0.000004,46.193970,-9.567017,-9.754510,48.096985,-9.754456,0.000004,49.039246], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-9.754456,0.000004,49.039246,-9.567017,-9.754510,48.096985,0.000061,-9.754510,49.039246,-9.754456,0.000004,49.039246,0.000061,-9.754510,49.039246,0.000061,0.000004,50.000000,0.000061,0.000004,50.000000,0.000061,-9.754510,49.039246,9.567139,-9.754510,48.096985,0.000061,0.000004,50.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([9.567139,-9.754510,48.096985,9.754578,0.000004,49.039246,9.754578,0.000004,49.039246,9.567139,-9.754510,48.096985,18.766541,-9.754510,45.306335,9.754578,0.000004,49.039246,18.766541,-9.754510,45.306335,19.134216,0.000004,46.193970,19.134216,0.000004,46.193970,18.766541,-9.754510,45.306335], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([27.244812,-9.754510,40.774597,19.134216,0.000004,46.193970,27.244812,-9.754510,40.774597,27.778564,0.000004,41.573425,27.778564,0.000004,41.573425,27.244812,-9.754510,40.774597,34.676025,-9.754510,34.675964,27.778564,0.000004,41.573425,34.676025,-9.754510,34.675964,35.355408,0.000004,35.355286], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([35.355408,0.000004,35.355286,34.676025,-9.754510,34.675964,40.774719,-9.754510,27.244690,35.355408,0.000004,35.355286,40.774719,-9.754510,27.244690,41.573547,0.000004,27.778442,41.573547,0.000004,27.778442,40.774719,-9.754510,27.244690,45.306396,-9.754510,18.766418,41.573547,0.000004,27.778442], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([45.306396,-9.754510,18.766418,46.194031,0.000004,19.134094,46.194031,0.000004,19.134094,45.306396,-9.754510,18.766418,48.096985,-9.754510,9.567017,46.194031,0.000004,19.134094,48.096985,-9.754510,9.567017,49.039246,0.000004,9.754456,49.039246,0.000004,9.754456,48.096985,-9.754510,9.567017], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([49.039246,-9.754510,-0.000061,49.039246,0.000004,9.754456,49.039246,-9.754510,-0.000061,50.000000,0.000004,-0.000061,50.000000,0.000004,-0.000061,49.039246,-9.754510,-0.000061,48.096985,-9.754510,-9.567139,50.000000,0.000004,-0.000061,48.096985,-9.754510,-9.567139,49.039246,0.000004,-9.754578], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([49.039246,0.000004,-9.754578,48.096985,-9.754510,-9.567139,45.306335,-9.754510,-18.766602,49.039246,0.000004,-9.754578,45.306335,-9.754510,-18.766602,46.193970,0.000004,-19.134277,46.193970,0.000004,-19.134277,45.306335,-9.754510,-18.766602,40.774597,-9.754510,-27.244812,46.193970,0.000004,-19.134277], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([40.774597,-9.754510,-27.244812,41.573425,0.000004,-27.778564,41.573425,0.000004,-27.778564,40.774597,-9.754510,-27.244812,34.675903,-9.754510,-34.676086,41.573425,0.000004,-27.778564,34.675903,-9.754510,-34.676086,35.355286,0.000004,-35.355408,35.355286,0.000004,-35.355408,34.675903,-9.754510,-34.676086], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([27.244690,-9.754510,-40.774719,35.355286,0.000004,-35.355408,27.244690,-9.754510,-40.774719,27.778442,0.000004,-41.573547,27.778442,0.000004,-41.573547,27.244690,-9.754510,-40.774719,18.766418,-9.754510,-45.306396,27.778442,0.000004,-41.573547,18.766418,-9.754510,-45.306396,19.134094,0.000004,-46.194031], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([19.134094,0.000004,-46.194031,18.766418,-9.754510,-45.306396,9.566956,-9.754510,-48.096985,19.134094,0.000004,-46.194031,9.566956,-9.754510,-48.096985,9.754395,0.000004,-49.039307,9.754395,0.000004,-49.039307,9.566956,-9.754510,-48.096985,0.000000,-9.754510,-49.039246,9.754395,0.000004,-49.039307], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,-9.754510,-49.039246,0.000000,0.000004,-50.000000,0.000000,-9.754510,-49.039246,0.000000,-19.134163,-46.193970,-9.012024,-19.134163,-45.306396,0.000000,-9.754510,-49.039246,-9.012024,-19.134163,-45.306396,-9.567078,-9.754510,-48.096985,-9.567078,-9.754510,-48.096985,-9.012024,-19.134163,-45.306396], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-17.677673,-19.134163,-42.677673,-9.567078,-9.754510,-48.096985,-17.677673,-19.134163,-42.677673,-18.766541,-9.754510,-45.306396,-18.766541,-9.754510,-45.306396,-17.677673,-19.134163,-42.677673,-25.664001,-19.134163,-38.408875,-18.766541,-9.754510,-45.306396,-25.664001,-19.134163,-38.408875,-27.244751,-9.754510,-40.774658], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-27.244751,-9.754510,-40.774658,-25.664001,-19.134163,-38.408875,-32.664063,-19.134163,-32.664063,-27.244751,-9.754510,-40.774658,-32.664063,-19.134163,-32.664063,-34.675964,-9.754510,-34.675964,-34.675964,-9.754510,-34.675964,-32.664063,-19.134163,-32.664063,-38.408875,-19.134163,-25.664001,-34.675964,-9.754510,-34.675964], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-38.408875,-19.134163,-25.664001,-40.774658,-9.754510,-27.244751,-40.774658,-9.754510,-27.244751,-38.408875,-19.134163,-25.664001,-42.677673,-19.134163,-17.677673,-40.774658,-9.754510,-27.244751,-42.677673,-19.134163,-17.677673,-45.306396,-9.754510,-18.766479,-45.306396,-9.754510,-18.766479,-42.677673,-19.134163,-17.677673], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-45.306396,-19.134163,-9.011963,-45.306396,-9.754510,-18.766479,-45.306396,-19.134163,-9.011963,-48.096985,-9.754510,-9.567078,-48.096985,-9.754510,-9.567078,-45.306396,-19.134163,-9.011963,-46.193970,-19.134163,0.000000,-48.096985,-9.754510,-9.567078,-46.193970,-19.134163,0.000000,-49.039246,-9.754510,0.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-49.039246,-9.754510,0.000000,-46.193970,-19.134163,0.000000,-45.306396,-19.134163,9.012024,-49.039246,-9.754510,0.000000,-45.306396,-19.134163,9.012024,-48.096985,-9.754510,9.567078,-48.096985,-9.754510,9.567078,-45.306396,-19.134163,9.012024,-42.677673,-19.134163,17.677673,-48.096985,-9.754510,9.567078], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-42.677673,-19.134163,17.677673,-45.306335,-9.754510,18.766541,-45.306335,-9.754510,18.766541,-42.677673,-19.134163,17.677673,-38.408875,-19.134163,25.664001,-45.306335,-9.754510,18.766541,-38.408875,-19.134163,25.664001,-40.774658,-9.754510,27.244751,-40.774658,-9.754510,27.244751,-38.408875,-19.134163,25.664001], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-32.664063,-19.134163,32.664124,-40.774658,-9.754510,27.244751,-32.664063,-19.134163,32.664124,-34.675964,-9.754510,34.676025,-34.675964,-9.754510,34.676025,-32.664063,-19.134163,32.664124,-25.664001,-19.134163,38.408936,-34.675964,-9.754510,34.676025,-25.664001,-19.134163,38.408936,-27.244751,-9.754510,40.774658], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-27.244751,-9.754510,40.774658,-25.664001,-19.134163,38.408936,-17.677612,-19.134163,42.677673,-27.244751,-9.754510,40.774658,-17.677612,-19.134163,42.677673,-18.766479,-9.754510,45.306396,-18.766479,-9.754510,45.306396,-17.677612,-19.134163,42.677673,-9.011963,-19.134163,45.306396,-18.766479,-9.754510,45.306396], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-9.011963,-19.134163,45.306396,-9.567017,-9.754510,48.096985,-9.567017,-9.754510,48.096985,-9.011963,-19.134163,45.306396,0.000061,-19.134163,46.193970,-9.567017,-9.754510,48.096985,0.000061,-19.134163,46.193970,0.000061,-9.754510,49.039246,0.000061,-9.754510,49.039246,0.000061,-19.134163,46.193970], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([9.012024,-19.134163,45.306335,0.000061,-9.754510,49.039246,9.012024,-19.134163,45.306335,9.567139,-9.754510,48.096985,9.567139,-9.754510,48.096985,9.012024,-19.134163,45.306335,17.677734,-19.134163,42.677673,9.567139,-9.754510,48.096985,17.677734,-19.134163,42.677673,18.766541,-9.754510,45.306335], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([18.766541,-9.754510,45.306335,17.677734,-19.134163,42.677673,25.664063,-19.134163,38.408875,18.766541,-9.754510,45.306335,25.664063,-19.134163,38.408875,27.244812,-9.754510,40.774597,27.244812,-9.754510,40.774597,25.664063,-19.134163,38.408875,32.664124,-19.134163,32.664001,27.244812,-9.754510,40.774597], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([32.664124,-19.134163,32.664001,34.676025,-9.754510,34.675964,34.676025,-9.754510,34.675964,32.664124,-19.134163,32.664001,38.408936,-19.134163,25.663940,34.676025,-9.754510,34.675964,38.408936,-19.134163,25.663940,40.774719,-9.754510,27.244690,40.774719,-9.754510,27.244690,38.408936,-19.134163,25.663940], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([42.677673,-19.134163,17.677612,40.774719,-9.754510,27.244690,42.677673,-19.134163,17.677612,45.306396,-9.754510,18.766418,45.306396,-9.754510,18.766418,42.677673,-19.134163,17.677612,45.306396,-19.134163,9.011902,45.306396,-9.754510,18.766418,45.306396,-19.134163,9.011902,48.096985,-9.754510,9.567017], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([48.096985,-9.754510,9.567017,45.306396,-19.134163,9.011902,46.193970,-19.134163,-0.000061,48.096985,-9.754510,9.567017,46.193970,-19.134163,-0.000061,49.039246,-9.754510,-0.000061,49.039246,-9.754510,-0.000061,46.193970,-19.134163,-0.000061,45.306335,-19.134163,-9.012085,49.039246,-9.754510,-0.000061], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([45.306335,-19.134163,-9.012085,48.096985,-9.754510,-9.567139,48.096985,-9.754510,-9.567139,45.306335,-19.134163,-9.012085,42.677612,-19.134163,-17.677734,48.096985,-9.754510,-9.567139,42.677612,-19.134163,-17.677734,45.306335,-9.754510,-18.766602,45.306335,-9.754510,-18.766602,42.677612,-19.134163,-17.677734], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([38.408813,-19.134163,-25.664063,45.306335,-9.754510,-18.766602,38.408813,-19.134163,-25.664063,40.774597,-9.754510,-27.244812,40.774597,-9.754510,-27.244812,38.408813,-19.134163,-25.664063,32.664001,-19.134163,-32.664124,40.774597,-9.754510,-27.244812,32.664001,-19.134163,-32.664124,34.675903,-9.754510,-34.676086], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([34.675903,-9.754510,-34.676086,32.664001,-19.134163,-32.664124,25.663940,-19.134163,-38.408936,34.675903,-9.754510,-34.676086,25.663940,-19.134163,-38.408936,27.244690,-9.754510,-40.774719,27.244690,-9.754510,-40.774719,25.663940,-19.134163,-38.408936,17.677551,-19.134163,-42.677734,27.244690,-9.754510,-40.774719], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([17.677551,-19.134163,-42.677734,18.766418,-9.754510,-45.306396,18.766418,-9.754510,-45.306396,17.677551,-19.134163,-42.677734,9.011902,-19.134163,-45.306396,18.766418,-9.754510,-45.306396,9.011902,-19.134163,-45.306396,9.566956,-9.754510,-48.096985,9.566956,-9.754510,-48.096985,9.011902,-19.134163,-45.306396], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,-19.134163,-46.193970,9.566956,-9.754510,-48.096985,0.000000,-19.134163,-46.193970,0.000000,-9.754510,-49.039246,0.000000,-19.134163,-46.193970,0.000000,-27.778509,-41.573486,-8.110596,-27.778509,-40.774658,0.000000,-19.134163,-46.193970,-8.110596,-27.778509,-40.774658,-9.012024,-19.134163,-45.306396], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-9.012024,-19.134163,-45.306396,-8.110596,-27.778509,-40.774658,-15.909485,-27.778509,-38.408875,-9.012024,-19.134163,-45.306396,-15.909485,-27.778509,-38.408875,-17.677673,-19.134163,-42.677673,-17.677673,-19.134163,-42.677673,-15.909485,-27.778509,-38.408875,-23.096985,-27.778509,-34.567078,-17.677673,-19.134163,-42.677673], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-23.096985,-27.778509,-34.567078,-25.664001,-19.134163,-38.408875,-25.664001,-19.134163,-38.408875,-23.096985,-27.778509,-34.567078,-29.396912,-27.778509,-29.396912,-25.664001,-19.134163,-38.408875,-29.396912,-27.778509,-29.396912,-32.664063,-19.134163,-32.664063,-32.664063,-19.134163,-32.664063,-29.396912,-27.778509,-29.396912], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-34.567078,-27.778509,-23.096985,-32.664063,-19.134163,-32.664063,-34.567078,-27.778509,-23.096985,-38.408875,-19.134163,-25.664001,-38.408875,-19.134163,-25.664001,-34.567078,-27.778509,-23.096985,-38.408875,-27.778509,-15.909485,-38.408875,-19.134163,-25.664001,-38.408875,-27.778509,-15.909485,-42.677673,-19.134163,-17.677673], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-42.677673,-19.134163,-17.677673,-38.408875,-27.778509,-15.909485,-40.774658,-27.778509,-8.110596,-42.677673,-19.134163,-17.677673,-40.774658,-27.778509,-8.110596,-45.306396,-19.134163,-9.011963,-45.306396,-19.134163,-9.011963,-40.774658,-27.778509,-8.110596,-41.573486,-27.778509,0.000000,-45.306396,-19.134163,-9.011963], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-41.573486,-27.778509,0.000000,-46.193970,-19.134163,0.000000,-46.193970,-19.134163,0.000000,-41.573486,-27.778509,0.000000,-40.774658,-27.778509,8.110596,-46.193970,-19.134163,0.000000,-40.774658,-27.778509,8.110596,-45.306396,-19.134163,9.012024,-45.306396,-19.134163,9.012024,-40.774658,-27.778509,8.110596], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-38.408875,-27.778509,15.909485,-45.306396,-19.134163,9.012024,-38.408875,-27.778509,15.909485,-42.677673,-19.134163,17.677673,-42.677673,-19.134163,17.677673,-38.408875,-27.778509,15.909485,-34.567078,-27.778509,23.096985,-42.677673,-19.134163,17.677673,-34.567078,-27.778509,23.096985,-38.408875,-19.134163,25.664001], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-38.408875,-19.134163,25.664001,-34.567078,-27.778509,23.096985,-29.396851,-27.778509,29.396912,-38.408875,-19.134163,25.664001,-29.396851,-27.778509,29.396912,-32.664063,-19.134163,32.664124,-32.664063,-19.134163,32.664124,-29.396851,-27.778509,29.396912,-23.096985,-27.778509,34.567078,-32.664063,-19.134163,32.664124], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-23.096985,-27.778509,34.567078,-25.664001,-19.134163,38.408936,-25.664001,-19.134163,38.408936,-23.096985,-27.778509,34.567078,-15.909424,-27.778509,38.408875,-25.664001,-19.134163,38.408936,-15.909424,-27.778509,38.408875,-17.677612,-19.134163,42.677673,-17.677612,-19.134163,42.677673,-15.909424,-27.778509,38.408875], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-8.110535,-27.778509,40.774658,-17.677612,-19.134163,42.677673,-8.110535,-27.778509,40.774658,-9.011963,-19.134163,45.306396,-9.011963,-19.134163,45.306396,-8.110535,-27.778509,40.774658,0.000061,-27.778509,41.573486,-9.011963,-19.134163,45.306396,0.000061,-27.778509,41.573486,0.000061,-19.134163,46.193970], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000061,-19.134163,46.193970,0.000061,-27.778509,41.573486,8.110657,-27.778509,40.774658,0.000061,-19.134163,46.193970,8.110657,-27.778509,40.774658,9.012024,-19.134163,45.306335,9.012024,-19.134163,45.306335,8.110657,-27.778509,40.774658,15.909546,-27.778509,38.408875,9.012024,-19.134163,45.306335], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([15.909546,-27.778509,38.408875,17.677734,-19.134163,42.677673,17.677734,-19.134163,42.677673,15.909546,-27.778509,38.408875,23.097046,-27.778509,34.567078,17.677734,-19.134163,42.677673,23.097046,-27.778509,34.567078,25.664063,-19.134163,38.408875,25.664063,-19.134163,38.408875,23.097046,-27.778509,34.567078], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([29.396912,-27.778509,29.396851,25.664063,-19.134163,38.408875,29.396912,-27.778509,29.396851,32.664124,-19.134163,32.664001,32.664124,-19.134163,32.664001,29.396912,-27.778509,29.396851,34.567139,-27.778509,23.096924,32.664124,-19.134163,32.664001,34.567139,-27.778509,23.096924,38.408936,-19.134163,25.663940], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([38.408936,-19.134163,25.663940,34.567139,-27.778509,23.096924,38.408936,-27.778509,15.909424,38.408936,-19.134163,25.663940,38.408936,-27.778509,15.909424,42.677673,-19.134163,17.677612,42.677673,-19.134163,17.677612,38.408936,-27.778509,15.909424,40.774658,-27.778509,8.110535,42.677673,-19.134163,17.677612], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([40.774658,-27.778509,8.110535,45.306396,-19.134163,9.011902,45.306396,-19.134163,9.011902,40.774658,-27.778509,8.110535,41.573486,-27.778509,-0.000061,45.306396,-19.134163,9.011902,41.573486,-27.778509,-0.000061,46.193970,-19.134163,-0.000061,46.193970,-19.134163,-0.000061,41.573486,-27.778509,-0.000061], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([40.774658,-27.778509,-8.110657,46.193970,-19.134163,-0.000061,40.774658,-27.778509,-8.110657,45.306335,-19.134163,-9.012085,45.306335,-19.134163,-9.012085,40.774658,-27.778509,-8.110657,38.408875,-27.778509,-15.909546,45.306335,-19.134163,-9.012085,38.408875,-27.778509,-15.909546,42.677612,-19.134163,-17.677734], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([42.677612,-19.134163,-17.677734,38.408875,-27.778509,-15.909546,34.567017,-27.778509,-23.097046,42.677612,-19.134163,-17.677734,34.567017,-27.778509,-23.097046,38.408813,-19.134163,-25.664063,38.408813,-19.134163,-25.664063,34.567017,-27.778509,-23.097046,29.396851,-27.778509,-29.396973,38.408813,-19.134163,-25.664063], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([29.396851,-27.778509,-29.396973,32.664001,-19.134163,-32.664124,32.664001,-19.134163,-32.664124,29.396851,-27.778509,-29.396973,23.096924,-27.778509,-34.567139,32.664001,-19.134163,-32.664124,23.096924,-27.778509,-34.567139,25.663940,-19.134163,-38.408936,25.663940,-19.134163,-38.408936,23.096924,-27.778509,-34.567139], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([15.909424,-27.778509,-38.408936,25.663940,-19.134163,-38.408936,15.909424,-27.778509,-38.408936,17.677551,-19.134163,-42.677734,17.677551,-19.134163,-42.677734,15.909424,-27.778509,-38.408936,8.110474,-27.778509,-40.774658,17.677551,-19.134163,-42.677734,8.110474,-27.778509,-40.774658,9.011902,-19.134163,-45.306396], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([9.011902,-19.134163,-45.306396,8.110474,-27.778509,-40.774658,0.000000,-27.778509,-41.573486,9.011902,-19.134163,-45.306396,0.000000,-27.778509,-41.573486,0.000000,-19.134163,-46.193970,0.000000,-27.778509,-41.573486,0.000000,-35.355339,-35.355347,-6.897461,-35.355339,-34.675964,0.000000,-27.778509,-41.573486], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-6.897461,-35.355339,-34.675964,-8.110596,-27.778509,-40.774658,-8.110596,-27.778509,-40.774658,-6.897461,-35.355339,-34.675964,-13.529907,-35.355339,-32.664063,-8.110596,-27.778509,-40.774658,-13.529907,-35.355339,-32.664063,-15.909485,-27.778509,-38.408875,-15.909485,-27.778509,-38.408875,-13.529907,-35.355339,-32.664063], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-19.642395,-35.355339,-29.396912,-15.909485,-27.778509,-38.408875,-19.642395,-35.355339,-29.396912,-23.096985,-27.778509,-34.567078,-23.096985,-27.778509,-34.567078,-19.642395,-35.355339,-29.396912,-25.000000,-35.355339,-25.000000,-23.096985,-27.778509,-34.567078,-25.000000,-35.355339,-25.000000,-29.396912,-27.778509,-29.396912], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-29.396912,-27.778509,-29.396912,-25.000000,-35.355339,-25.000000,-29.396912,-35.355339,-19.642395,-29.396912,-27.778509,-29.396912,-29.396912,-35.355339,-19.642395,-34.567078,-27.778509,-23.096985,-34.567078,-27.778509,-23.096985,-29.396912,-35.355339,-19.642395,-32.664063,-35.355339,-13.529907,-34.567078,-27.778509,-23.096985], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-32.664063,-35.355339,-13.529907,-38.408875,-27.778509,-15.909485,-38.408875,-27.778509,-15.909485,-32.664063,-35.355339,-13.529907,-34.676025,-35.355339,-6.897461,-38.408875,-27.778509,-15.909485,-34.676025,-35.355339,-6.897461,-40.774658,-27.778509,-8.110596,-40.774658,-27.778509,-8.110596,-34.676025,-35.355339,-6.897461], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-35.355347,-35.355339,0.000000,-40.774658,-27.778509,-8.110596,-35.355347,-35.355339,0.000000,-41.573486,-27.778509,0.000000,-41.573486,-27.778509,0.000000,-35.355347,-35.355339,0.000000,-34.675964,-35.355339,6.897522,-41.573486,-27.778509,0.000000,-34.675964,-35.355339,6.897522,-40.774658,-27.778509,8.110596], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-40.774658,-27.778509,8.110596,-34.675964,-35.355339,6.897522,-32.664063,-35.355339,13.529907,-40.774658,-27.778509,8.110596,-32.664063,-35.355339,13.529907,-38.408875,-27.778509,15.909485,-38.408875,-27.778509,15.909485,-32.664063,-35.355339,13.529907,-29.396851,-35.355339,19.642395,-38.408875,-27.778509,15.909485], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-29.396851,-35.355339,19.642395,-34.567078,-27.778509,23.096985,-34.567078,-27.778509,23.096985,-29.396851,-35.355339,19.642395,-25.000000,-35.355339,25.000000,-34.567078,-27.778509,23.096985,-25.000000,-35.355339,25.000000,-29.396851,-27.778509,29.396912,-29.396851,-27.778509,29.396912,-25.000000,-35.355339,25.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-19.642334,-35.355339,29.396912,-29.396851,-27.778509,29.396912,-19.642334,-35.355339,29.396912,-23.096985,-27.778509,34.567078,-23.096985,-27.778509,34.567078,-19.642334,-35.355339,29.396912,-13.529846,-35.355339,32.664063,-23.096985,-27.778509,34.567078,-13.529846,-35.355339,32.664063,-15.909424,-27.778509,38.408875], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-15.909424,-27.778509,38.408875,-13.529846,-35.355339,32.664063,-6.897461,-35.355339,34.676025,-15.909424,-27.778509,38.408875,-6.897461,-35.355339,34.676025,-8.110535,-27.778509,40.774658,-8.110535,-27.778509,40.774658,-6.897461,-35.355339,34.676025,0.000061,-35.355339,35.355347,-8.110535,-27.778509,40.774658], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000061,-35.355339,35.355347,0.000061,-27.778509,41.573486,0.000061,-27.778509,41.573486,0.000061,-35.355339,35.355347,6.897522,-35.355339,34.675964,0.000061,-27.778509,41.573486,6.897522,-35.355339,34.675964,8.110657,-27.778509,40.774658,8.110657,-27.778509,40.774658,6.897522,-35.355339,34.675964], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([13.529968,-35.355339,32.664063,8.110657,-27.778509,40.774658,13.529968,-35.355339,32.664063,15.909546,-27.778509,38.408875,15.909546,-27.778509,38.408875,13.529968,-35.355339,32.664063,19.642395,-35.355339,29.396851,15.909546,-27.778509,38.408875,19.642395,-35.355339,29.396851,23.097046,-27.778509,34.567078], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([23.097046,-27.778509,34.567078,19.642395,-35.355339,29.396851,25.000061,-35.355339,24.999939,23.097046,-27.778509,34.567078,25.000061,-35.355339,24.999939,29.396912,-27.778509,29.396851,29.396912,-27.778509,29.396851,25.000061,-35.355339,24.999939,29.396912,-35.355339,19.642334,29.396912,-27.778509,29.396851], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([29.396912,-35.355339,19.642334,34.567139,-27.778509,23.096924,34.567139,-27.778509,23.096924,29.396912,-35.355339,19.642334,32.664124,-35.355339,13.529846,34.567139,-27.778509,23.096924,32.664124,-35.355339,13.529846,38.408936,-27.778509,15.909424,38.408936,-27.778509,15.909424,32.664124,-35.355339,13.529846], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([34.676025,-35.355339,6.897461,38.408936,-27.778509,15.909424,34.676025,-35.355339,6.897461,40.774658,-27.778509,8.110535,40.774658,-27.778509,8.110535,34.676025,-35.355339,6.897461,35.355347,-35.355339,-0.000061,40.774658,-27.778509,8.110535,35.355347,-35.355339,-0.000061,41.573486,-27.778509,-0.000061], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([41.573486,-27.778509,-0.000061,35.355347,-35.355339,-0.000061,34.675964,-35.355339,-6.897522,41.573486,-27.778509,-0.000061,34.675964,-35.355339,-6.897522,40.774658,-27.778509,-8.110657,40.774658,-27.778509,-8.110657,34.675964,-35.355339,-6.897522,32.664063,-35.355339,-13.529968,40.774658,-27.778509,-8.110657], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([32.664063,-35.355339,-13.529968,38.408875,-27.778509,-15.909546,38.408875,-27.778509,-15.909546,32.664063,-35.355339,-13.529968,29.396851,-35.355339,-19.642456,38.408875,-27.778509,-15.909546,29.396851,-35.355339,-19.642456,34.567017,-27.778509,-23.097046,34.567017,-27.778509,-23.097046,29.396851,-35.355339,-19.642456], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([24.999939,-35.355339,-25.000061,34.567017,-27.778509,-23.097046,24.999939,-35.355339,-25.000061,29.396851,-27.778509,-29.396973,29.396851,-27.778509,-29.396973,24.999939,-35.355339,-25.000061,19.642334,-35.355339,-29.396912,29.396851,-27.778509,-29.396973,19.642334,-35.355339,-29.396912,23.096924,-27.778509,-34.567139], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([23.096924,-27.778509,-34.567139,19.642334,-35.355339,-29.396912,13.529846,-35.355339,-32.664124,23.096924,-27.778509,-34.567139,13.529846,-35.355339,-32.664124,15.909424,-27.778509,-38.408936,15.909424,-27.778509,-38.408936,13.529846,-35.355339,-32.664124,6.897400,-35.355339,-34.676025,15.909424,-27.778509,-38.408936], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([6.897400,-35.355339,-34.676025,8.110474,-27.778509,-40.774658,8.110474,-27.778509,-40.774658,6.897400,-35.355339,-34.676025,0.000000,-35.355339,-35.355347,8.110474,-27.778509,-40.774658,0.000000,-35.355339,-35.355347,0.000000,-27.778509,-41.573486,0.000000,-35.355339,-35.355347,0.000000,-41.573483,-27.778503], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-5.419312,-41.573483,-27.244751,0.000000,-35.355339,-35.355347,-5.419312,-41.573483,-27.244751,-6.897461,-35.355339,-34.675964,-6.897461,-35.355339,-34.675964,-5.419312,-41.573483,-27.244751,-10.630371,-41.573483,-25.664001,-6.897461,-35.355339,-34.675964,-10.630371,-41.573483,-25.664001,-13.529907,-35.355339,-32.664063], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-13.529907,-35.355339,-32.664063,-10.630371,-41.573483,-25.664001,-15.432922,-41.573483,-23.096985,-13.529907,-35.355339,-32.664063,-15.432922,-41.573483,-23.096985,-19.642395,-35.355339,-29.396912,-19.642395,-35.355339,-29.396912,-15.432922,-41.573483,-23.096985,-19.642395,-41.573483,-19.642395,-19.642395,-35.355339,-29.396912], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-19.642395,-41.573483,-19.642395,-25.000000,-35.355339,-25.000000,-25.000000,-35.355339,-25.000000,-19.642395,-41.573483,-19.642395,-23.096985,-41.573483,-15.432922,-25.000000,-35.355339,-25.000000,-23.096985,-41.573483,-15.432922,-29.396912,-35.355339,-19.642395,-29.396912,-35.355339,-19.642395,-23.096985,-41.573483,-15.432922], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-25.664001,-41.573483,-10.630371,-29.396912,-35.355339,-19.642395,-25.664001,-41.573483,-10.630371,-32.664063,-35.355339,-13.529907,-32.664063,-35.355339,-13.529907,-25.664001,-41.573483,-10.630371,-27.244751,-41.573483,-5.419312,-32.664063,-35.355339,-13.529907,-27.244751,-41.573483,-5.419312,-34.676025,-35.355339,-6.897461], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-34.676025,-35.355339,-6.897461,-27.244751,-41.573483,-5.419312,-27.778503,-41.573483,0.000000,-34.676025,-35.355339,-6.897461,-27.778503,-41.573483,0.000000,-35.355347,-35.355339,0.000000,-35.355347,-35.355339,0.000000,-27.778503,-41.573483,0.000000,-27.244751,-41.573483,5.419312,-35.355347,-35.355339,0.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-27.244751,-41.573483,5.419312,-34.675964,-35.355339,6.897522,-34.675964,-35.355339,6.897522,-27.244751,-41.573483,5.419312,-25.664001,-41.573483,10.630371,-34.675964,-35.355339,6.897522,-25.664001,-41.573483,10.630371,-32.664063,-35.355339,13.529907,-32.664063,-35.355339,13.529907,-25.664001,-41.573483,10.630371], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-23.096985,-41.573483,15.432922,-32.664063,-35.355339,13.529907,-23.096985,-41.573483,15.432922,-29.396851,-35.355339,19.642395,-29.396851,-35.355339,19.642395,-23.096985,-41.573483,15.432922,-19.642334,-41.573483,19.642395,-29.396851,-35.355339,19.642395,-19.642334,-41.573483,19.642395,-25.000000,-35.355339,25.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-25.000000,-35.355339,25.000000,-19.642334,-41.573483,19.642395,-15.432922,-41.573483,23.096985,-25.000000,-35.355339,25.000000,-15.432922,-41.573483,23.096985,-19.642334,-35.355339,29.396912,-19.642334,-35.355339,29.396912,-15.432922,-41.573483,23.096985,-10.630371,-41.573483,25.664001,-19.642334,-35.355339,29.396912], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-10.630371,-41.573483,25.664001,-13.529846,-35.355339,32.664063,-13.529846,-35.355339,32.664063,-10.630371,-41.573483,25.664001,-5.419312,-41.573483,27.244751,-13.529846,-35.355339,32.664063,-5.419312,-41.573483,27.244751,-6.897461,-35.355339,34.676025,-6.897461,-35.355339,34.676025,-5.419312,-41.573483,27.244751], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,-41.573483,27.778503,-6.897461,-35.355339,34.676025,0.000000,-41.573483,27.778503,0.000061,-35.355339,35.355347,0.000061,-35.355339,35.355347,0.000000,-41.573483,27.778503,5.419373,-41.573483,27.244751,0.000061,-35.355339,35.355347,5.419373,-41.573483,27.244751,6.897522,-35.355339,34.675964], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([6.897522,-35.355339,34.675964,5.419373,-41.573483,27.244751,10.630432,-41.573483,25.664001,6.897522,-35.355339,34.675964,10.630432,-41.573483,25.664001,13.529968,-35.355339,32.664063,13.529968,-35.355339,32.664063,10.630432,-41.573483,25.664001,15.432922,-41.573483,23.096985,13.529968,-35.355339,32.664063], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([15.432922,-41.573483,23.096985,19.642395,-35.355339,29.396851,19.642395,-35.355339,29.396851,15.432922,-41.573483,23.096985,19.642395,-41.573483,19.642334,19.642395,-35.355339,29.396851,19.642395,-41.573483,19.642334,25.000061,-35.355339,24.999939,25.000061,-35.355339,24.999939,19.642395,-41.573483,19.642334], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([23.096985,-41.573483,15.432861,25.000061,-35.355339,24.999939,23.096985,-41.573483,15.432861,29.396912,-35.355339,19.642334,29.396912,-35.355339,19.642334,23.096985,-41.573483,15.432861,25.664001,-41.573483,10.630310,29.396912,-35.355339,19.642334,25.664001,-41.573483,10.630310,32.664124,-35.355339,13.529846], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([32.664124,-35.355339,13.529846,25.664001,-41.573483,10.630310,27.244751,-41.573483,5.419250,32.664124,-35.355339,13.529846,27.244751,-41.573483,5.419250,34.676025,-35.355339,6.897461,34.676025,-35.355339,6.897461,27.244751,-41.573483,5.419250,27.778503,-41.573483,-0.000061,34.676025,-35.355339,6.897461], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([27.778503,-41.573483,-0.000061,35.355347,-35.355339,-0.000061,35.355347,-35.355339,-0.000061,27.778503,-41.573483,-0.000061,27.244751,-41.573483,-5.419373,35.355347,-35.355339,-0.000061,27.244751,-41.573483,-5.419373,34.675964,-35.355339,-6.897522,34.675964,-35.355339,-6.897522,27.244751,-41.573483,-5.419373], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([25.664001,-41.573483,-10.630432,34.675964,-35.355339,-6.897522,25.664001,-41.573483,-10.630432,32.664063,-35.355339,-13.529968,32.664063,-35.355339,-13.529968,25.664001,-41.573483,-10.630432,23.096985,-41.573483,-15.432983,32.664063,-35.355339,-13.529968,23.096985,-41.573483,-15.432983,29.396851,-35.355339,-19.642456], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([29.396851,-35.355339,-19.642456,23.096985,-41.573483,-15.432983,19.642334,-41.573483,-19.642395,29.396851,-35.355339,-19.642456,19.642334,-41.573483,-19.642395,24.999939,-35.355339,-25.000061,24.999939,-35.355339,-25.000061,19.642334,-41.573483,-19.642395,15.432861,-41.573483,-23.097046,24.999939,-35.355339,-25.000061], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([15.432861,-41.573483,-23.097046,19.642334,-35.355339,-29.396912,19.642334,-35.355339,-29.396912,15.432861,-41.573483,-23.097046,10.630310,-41.573483,-25.664001,19.642334,-35.355339,-29.396912,10.630310,-41.573483,-25.664001,13.529846,-35.355339,-32.664124,13.529846,-35.355339,-32.664124,10.630310,-41.573483,-25.664001], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([5.419250,-41.573483,-27.244751,13.529846,-35.355339,-32.664124,5.419250,-41.573483,-27.244751,6.897400,-35.355339,-34.676025,6.897400,-35.355339,-34.676025,5.419250,-41.573483,-27.244751,0.000000,-41.573483,-27.778503,6.897400,-35.355339,-34.676025,0.000000,-41.573483,-27.778503,0.000000,-35.355339,-35.355347], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,-41.573483,-27.778503,0.000000,-46.193981,-19.134155,-3.732910,-46.193981,-18.766479,0.000000,-41.573483,-27.778503,-3.732910,-46.193981,-18.766479,-5.419312,-41.573483,-27.244751,-5.419312,-41.573483,-27.244751,-3.732910,-46.193981,-18.766479,-7.322327,-46.193981,-17.677673,-5.419312,-41.573483,-27.244751], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-7.322327,-46.193981,-17.677673,-10.630371,-41.573483,-25.664001,-10.630371,-41.573483,-25.664001,-7.322327,-46.193981,-17.677673,-10.630371,-46.193981,-15.909485,-10.630371,-41.573483,-25.664001,-10.630371,-46.193981,-15.909485,-15.432922,-41.573483,-23.096985,-15.432922,-41.573483,-23.096985,-10.630371,-46.193981,-15.909485], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-13.529907,-46.193981,-13.529907,-15.432922,-41.573483,-23.096985,-13.529907,-46.193981,-13.529907,-19.642395,-41.573483,-19.642395,-19.642395,-41.573483,-19.642395,-13.529907,-46.193981,-13.529907,-15.909485,-46.193981,-10.630371,-19.642395,-41.573483,-19.642395,-15.909485,-46.193981,-10.630371,-23.096985,-41.573483,-15.432922], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-23.096985,-41.573483,-15.432922,-15.909485,-46.193981,-10.630371,-17.677673,-46.193981,-7.322327,-23.096985,-41.573483,-15.432922,-17.677673,-46.193981,-7.322327,-25.664001,-41.573483,-10.630371,-25.664001,-41.573483,-10.630371,-17.677673,-46.193981,-7.322327,-18.766479,-46.193981,-3.732910,-25.664001,-41.573483,-10.630371], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-18.766479,-46.193981,-3.732910,-27.244751,-41.573483,-5.419312,-27.244751,-41.573483,-5.419312,-18.766479,-46.193981,-3.732910,-19.134155,-46.193981,0.000000,-27.244751,-41.573483,-5.419312,-19.134155,-46.193981,0.000000,-27.778503,-41.573483,0.000000,-27.778503,-41.573483,0.000000,-19.134155,-46.193981,0.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-18.766479,-46.193981,3.732910,-27.778503,-41.573483,0.000000,-18.766479,-46.193981,3.732910,-27.244751,-41.573483,5.419312,-27.244751,-41.573483,5.419312,-18.766479,-46.193981,3.732910,-17.677673,-46.193981,7.322327,-27.244751,-41.573483,5.419312,-17.677673,-46.193981,7.322327,-25.664001,-41.573483,10.630371], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-25.664001,-41.573483,10.630371,-17.677673,-46.193981,7.322327,-15.909485,-46.193981,10.630371,-25.664001,-41.573483,10.630371,-15.909485,-46.193981,10.630371,-23.096985,-41.573483,15.432922,-23.096985,-41.573483,15.432922,-15.909485,-46.193981,10.630371,-13.529907,-46.193981,13.529907,-23.096985,-41.573483,15.432922], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-13.529907,-46.193981,13.529907,-19.642334,-41.573483,19.642395,-19.642334,-41.573483,19.642395,-13.529907,-46.193981,13.529907,-10.630371,-46.193981,15.909485,-19.642334,-41.573483,19.642395,-10.630371,-46.193981,15.909485,-15.432922,-41.573483,23.096985,-15.432922,-41.573483,23.096985,-10.630371,-46.193981,15.909485], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-7.322327,-46.193981,17.677673,-15.432922,-41.573483,23.096985,-7.322327,-46.193981,17.677673,-10.630371,-41.573483,25.664001,-10.630371,-41.573483,25.664001,-7.322327,-46.193981,17.677673,-3.732849,-46.193981,18.766479,-10.630371,-41.573483,25.664001,-3.732849,-46.193981,18.766479,-5.419312,-41.573483,27.244751], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-5.419312,-41.573483,27.244751,-3.732849,-46.193981,18.766479,0.000000,-46.193981,19.134155,-5.419312,-41.573483,27.244751,0.000000,-46.193981,19.134155,0.000000,-41.573483,27.778503,0.000000,-41.573483,27.778503,0.000000,-46.193981,19.134155,3.732910,-46.193981,18.766479,0.000000,-41.573483,27.778503], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([3.732910,-46.193981,18.766479,5.419373,-41.573483,27.244751,5.419373,-41.573483,27.244751,3.732910,-46.193981,18.766479,7.322327,-46.193981,17.677673,5.419373,-41.573483,27.244751,7.322327,-46.193981,17.677673,10.630432,-41.573483,25.664001,10.630432,-41.573483,25.664001,7.322327,-46.193981,17.677673], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([10.630371,-46.193981,15.909485,10.630432,-41.573483,25.664001,10.630371,-46.193981,15.909485,15.432922,-41.573483,23.096985,15.432922,-41.573483,23.096985,10.630371,-46.193981,15.909485,13.529907,-46.193981,13.529907,15.432922,-41.573483,23.096985,13.529907,-46.193981,13.529907,19.642395,-41.573483,19.642334], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([19.642395,-41.573483,19.642334,13.529907,-46.193981,13.529907,15.909485,-46.193981,10.630371,19.642395,-41.573483,19.642334,15.909485,-46.193981,10.630371,23.096985,-41.573483,15.432861,23.096985,-41.573483,15.432861,15.909485,-46.193981,10.630371,17.677673,-46.193981,7.322327,23.096985,-41.573483,15.432861], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([17.677673,-46.193981,7.322327,25.664001,-41.573483,10.630310,25.664001,-41.573483,10.630310,17.677673,-46.193981,7.322327,18.766541,-46.193981,3.732849,25.664001,-41.573483,10.630310,18.766541,-46.193981,3.732849,27.244751,-41.573483,5.419250,27.244751,-41.573483,5.419250,18.766541,-46.193981,3.732849], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([19.134155,-46.193981,-0.000061,27.244751,-41.573483,5.419250,19.134155,-46.193981,-0.000061,27.778503,-41.573483,-0.000061,27.778503,-41.573483,-0.000061,19.134155,-46.193981,-0.000061,18.766479,-46.193981,-3.732910,27.778503,-41.573483,-0.000061,18.766479,-46.193981,-3.732910,27.244751,-41.573483,-5.419373], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([27.244751,-41.573483,-5.419373,18.766479,-46.193981,-3.732910,17.677673,-46.193981,-7.322388,27.244751,-41.573483,-5.419373,17.677673,-46.193981,-7.322388,25.664001,-41.573483,-10.630432,25.664001,-41.573483,-10.630432,17.677673,-46.193981,-7.322388,15.909485,-46.193981,-10.630432,25.664001,-41.573483,-10.630432], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([15.909485,-46.193981,-10.630432,23.096985,-41.573483,-15.432983,23.096985,-41.573483,-15.432983,15.909485,-46.193981,-10.630432,13.529846,-46.193981,-13.529907,23.096985,-41.573483,-15.432983,13.529846,-46.193981,-13.529907,19.642334,-41.573483,-19.642395,19.642334,-41.573483,-19.642395,13.529846,-46.193981,-13.529907], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([10.630310,-46.193981,-15.909485,19.642334,-41.573483,-19.642395,10.630310,-46.193981,-15.909485,15.432861,-41.573483,-23.097046,15.432861,-41.573483,-23.097046,10.630310,-46.193981,-15.909485,7.322266,-46.193981,-17.677673,15.432861,-41.573483,-23.097046,7.322266,-46.193981,-17.677673,10.630310,-41.573483,-25.664001], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([10.630310,-41.573483,-25.664001,7.322266,-46.193981,-17.677673,3.732849,-46.193981,-18.766541,10.630310,-41.573483,-25.664001,3.732849,-46.193981,-18.766541,5.419250,-41.573483,-27.244751,5.419250,-41.573483,-27.244751,3.732849,-46.193981,-18.766541,0.000000,-46.193981,-19.134155,5.419250,-41.573483,-27.244751], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,-46.193981,-19.134155,0.000000,-41.573483,-27.778503,0.000000,-46.193981,-19.134155,0.000000,-49.039265,-9.754517,-1.903015,-49.039265,-9.567078,0.000000,-46.193981,-19.134155,-1.903015,-49.039265,-9.567078,-3.732910,-46.193981,-18.766479,-3.732910,-46.193981,-18.766479,-1.903015,-49.039265,-9.567078], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-3.732910,-49.039265,-9.011963,-3.732910,-46.193981,-18.766479,-3.732910,-49.039265,-9.011963,-7.322327,-46.193981,-17.677673,-7.322327,-46.193981,-17.677673,-3.732910,-49.039265,-9.011963,-5.419312,-49.039265,-8.110596,-7.322327,-46.193981,-17.677673,-5.419312,-49.039265,-8.110596,-10.630371,-46.193981,-15.909485], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-10.630371,-46.193981,-15.909485,-5.419312,-49.039265,-8.110596,-6.897461,-49.039265,-6.897461,-10.630371,-46.193981,-15.909485,-6.897461,-49.039265,-6.897461,-13.529907,-46.193981,-13.529907,-13.529907,-46.193981,-13.529907,-6.897461,-49.039265,-6.897461,-8.110596,-49.039265,-5.419312,-13.529907,-46.193981,-13.529907], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-8.110596,-49.039265,-5.419312,-15.909485,-46.193981,-10.630371,-15.909485,-46.193981,-10.630371,-8.110596,-49.039265,-5.419312,-9.011963,-49.039265,-3.732910,-15.909485,-46.193981,-10.630371,-9.011963,-49.039265,-3.732910,-17.677673,-46.193981,-7.322327,-17.677673,-46.193981,-7.322327,-9.011963,-49.039265,-3.732910], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-9.567078,-49.039265,-1.903015,-17.677673,-46.193981,-7.322327,-9.567078,-49.039265,-1.903015,-18.766479,-46.193981,-3.732910,-18.766479,-46.193981,-3.732910,-9.567078,-49.039265,-1.903015,-9.754517,-49.039265,0.000000,-18.766479,-46.193981,-3.732910,-9.754517,-49.039265,0.000000,-19.134155,-46.193981,0.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-19.134155,-46.193981,0.000000,-9.754517,-49.039265,0.000000,-9.567078,-49.039265,1.903015,-19.134155,-46.193981,0.000000,-9.567078,-49.039265,1.903015,-18.766479,-46.193981,3.732910,-18.766479,-46.193981,3.732910,-9.567078,-49.039265,1.903015,-9.011963,-49.039265,3.732910,-18.766479,-46.193981,3.732910], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-9.011963,-49.039265,3.732910,-17.677673,-46.193981,7.322327,-17.677673,-46.193981,7.322327,-9.011963,-49.039265,3.732910,-8.110596,-49.039265,5.419312,-17.677673,-46.193981,7.322327,-8.110596,-49.039265,5.419312,-15.909485,-46.193981,10.630371,-15.909485,-46.193981,10.630371,-8.110596,-49.039265,5.419312], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-6.897461,-49.039265,6.897461,-15.909485,-46.193981,10.630371,-6.897461,-49.039265,6.897461,-13.529907,-46.193981,13.529907,-13.529907,-46.193981,13.529907,-6.897461,-49.039265,6.897461,-5.419312,-49.039265,8.110596,-13.529907,-46.193981,13.529907,-5.419312,-49.039265,8.110596,-10.630371,-46.193981,15.909485], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-10.630371,-46.193981,15.909485,-5.419312,-49.039265,8.110596,-3.732910,-49.039265,9.011963,-10.630371,-46.193981,15.909485,-3.732910,-49.039265,9.011963,-7.322327,-46.193981,17.677673,-7.322327,-46.193981,17.677673,-3.732910,-49.039265,9.011963,-1.903015,-49.039265,9.567078,-7.322327,-46.193981,17.677673], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-1.903015,-49.039265,9.567078,-3.732849,-46.193981,18.766479,-3.732849,-46.193981,18.766479,-1.903015,-49.039265,9.567078,0.000000,-49.039265,9.754517,-3.732849,-46.193981,18.766479,0.000000,-49.039265,9.754517,0.000000,-46.193981,19.134155,0.000000,-46.193981,19.134155,0.000000,-49.039265,9.754517], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([1.903015,-49.039265,9.567078,0.000000,-46.193981,19.134155,1.903015,-49.039265,9.567078,3.732910,-46.193981,18.766479,3.732910,-46.193981,18.766479,1.903015,-49.039265,9.567078,3.732910,-49.039265,9.011963,3.732910,-46.193981,18.766479,3.732910,-49.039265,9.011963,7.322327,-46.193981,17.677673], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([7.322327,-46.193981,17.677673,3.732910,-49.039265,9.011963,5.419312,-49.039265,8.110596,7.322327,-46.193981,17.677673,5.419312,-49.039265,8.110596,10.630371,-46.193981,15.909485,10.630371,-46.193981,15.909485,5.419312,-49.039265,8.110596,6.897461,-49.039265,6.897461,10.630371,-46.193981,15.909485], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([6.897461,-49.039265,6.897461,13.529907,-46.193981,13.529907,13.529907,-46.193981,13.529907,6.897461,-49.039265,6.897461,8.110596,-49.039265,5.419312,13.529907,-46.193981,13.529907,8.110596,-49.039265,5.419312,15.909485,-46.193981,10.630371,15.909485,-46.193981,10.630371,8.110596,-49.039265,5.419312], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([9.011963,-49.039265,3.732849,15.909485,-46.193981,10.630371,9.011963,-49.039265,3.732849,17.677673,-46.193981,7.322327,17.677673,-46.193981,7.322327,9.011963,-49.039265,3.732849,9.567078,-49.039265,1.903015,17.677673,-46.193981,7.322327,9.567078,-49.039265,1.903015,18.766541,-46.193981,3.732849], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([18.766541,-46.193981,3.732849,9.567078,-49.039265,1.903015,9.754517,-49.039265,0.000000,18.766541,-46.193981,3.732849,9.754517,-49.039265,0.000000,19.134155,-46.193981,-0.000061,19.134155,-46.193981,-0.000061,9.754517,-49.039265,0.000000,9.567078,-49.039265,-1.903015,19.134155,-46.193981,-0.000061], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([9.567078,-49.039265,-1.903015,18.766479,-46.193981,-3.732910,18.766479,-46.193981,-3.732910,9.567078,-49.039265,-1.903015,9.011963,-49.039265,-3.732910,18.766479,-46.193981,-3.732910,9.011963,-49.039265,-3.732910,17.677673,-46.193981,-7.322388,17.677673,-46.193981,-7.322388,9.011963,-49.039265,-3.732910], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([8.110535,-49.039265,-5.419312,17.677673,-46.193981,-7.322388,8.110535,-49.039265,-5.419312,15.909485,-46.193981,-10.630432,15.909485,-46.193981,-10.630432,8.110535,-49.039265,-5.419312,6.897461,-49.039265,-6.897461,15.909485,-46.193981,-10.630432,6.897461,-49.039265,-6.897461,13.529846,-46.193981,-13.529907], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([13.529846,-46.193981,-13.529907,6.897461,-49.039265,-6.897461,5.419312,-49.039265,-8.110596,13.529846,-46.193981,-13.529907,5.419312,-49.039265,-8.110596,10.630310,-46.193981,-15.909485,10.630310,-46.193981,-15.909485,5.419312,-49.039265,-8.110596,3.732849,-49.039265,-9.012024,10.630310,-46.193981,-15.909485], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([3.732849,-49.039265,-9.012024,7.322266,-46.193981,-17.677673,7.322266,-46.193981,-17.677673,3.732849,-49.039265,-9.012024,1.903015,-49.039265,-9.567078,7.322266,-46.193981,-17.677673,1.903015,-49.039265,-9.567078,3.732849,-46.193981,-18.766541,3.732849,-46.193981,-18.766541,1.903015,-49.039265,-9.567078], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,-49.039265,-9.754517,3.732849,-46.193981,-18.766541,0.000000,-49.039265,-9.754517,0.000000,-46.193981,-19.134155,0.000000,-50.000000,0.000000,-1.903015,-49.039265,-9.567078,0.000000,-49.039265,-9.754517,0.000000,-50.000000,0.000000,-3.732910,-49.039265,-9.011963,-1.903015,-49.039265,-9.567078], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,-50.000000,0.000000,-5.419312,-49.039265,-8.110596,-3.732910,-49.039265,-9.011963,0.000000,-50.000000,0.000000,-6.897461,-49.039265,-6.897461,-5.419312,-49.039265,-8.110596,0.000000,-50.000000,0.000000,-8.110596,-49.039265,-5.419312,-6.897461,-49.039265,-6.897461,0.000000,-50.000000,0.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-9.011963,-49.039265,-3.732910,-8.110596,-49.039265,-5.419312,0.000000,-50.000000,0.000000,-9.567078,-49.039265,-1.903015,-9.011963,-49.039265,-3.732910,0.000000,-50.000000,0.000000,-9.754517,-49.039265,0.000000,-9.567078,-49.039265,-1.903015,0.000000,-50.000000,0.000000,-9.567078,-49.039265,1.903015], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-9.754517,-49.039265,0.000000,0.000000,-50.000000,0.000000,-9.011963,-49.039265,3.732910,-9.567078,-49.039265,1.903015,0.000000,-50.000000,0.000000,-8.110596,-49.039265,5.419312,-9.011963,-49.039265,3.732910,0.000000,-50.000000,0.000000,-6.897461,-49.039265,6.897461,-8.110596,-49.039265,5.419312], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,-50.000000,0.000000,-5.419312,-49.039265,8.110596,-6.897461,-49.039265,6.897461,0.000000,-50.000000,0.000000,-3.732910,-49.039265,9.011963,-5.419312,-49.039265,8.110596,0.000000,-50.000000,0.000000,-1.903015,-49.039265,9.567078,-3.732910,-49.039265,9.011963,0.000000,-50.000000,0.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,-49.039265,9.754517,-1.903015,-49.039265,9.567078,0.000000,-50.000000,0.000000,1.903015,-49.039265,9.567078,0.000000,-49.039265,9.754517,0.000000,-50.000000,0.000000,3.732910,-49.039265,9.011963,1.903015,-49.039265,9.567078,0.000000,-50.000000,0.000000,5.419312,-49.039265,8.110596], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([3.732910,-49.039265,9.011963,0.000000,-50.000000,0.000000,6.897461,-49.039265,6.897461,5.419312,-49.039265,8.110596,0.000000,-50.000000,0.000000,8.110596,-49.039265,5.419312,6.897461,-49.039265,6.897461,0.000000,-50.000000,0.000000,9.011963,-49.039265,3.732849,8.110596,-49.039265,5.419312], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,-50.000000,0.000000,9.567078,-49.039265,1.903015,9.011963,-49.039265,3.732849,0.000000,-50.000000,0.000000,9.754517,-49.039265,0.000000,9.567078,-49.039265,1.903015,0.000000,-50.000000,0.000000,9.567078,-49.039265,-1.903015,9.754517,-49.039265,0.000000,0.000000,-50.000000,0.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([9.011963,-49.039265,-3.732910,9.567078,-49.039265,-1.903015,0.000000,-50.000000,0.000000,8.110535,-49.039265,-5.419312,9.011963,-49.039265,-3.732910,0.000000,-50.000000,0.000000,6.897461,-49.039265,-6.897461,8.110535,-49.039265,-5.419312,0.000000,-50.000000,0.000000,5.419312,-49.039265,-8.110596], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([6.897461,-49.039265,-6.897461,0.000000,-50.000000,0.000000,3.732849,-49.039265,-9.012024,5.419312,-49.039265,-8.110596,0.000000,-50.000000,0.000000,1.903015,-49.039265,-9.567078,3.732849,-49.039265,-9.012024,0.000000,-50.000000,0.000000,0.000000,-49.039265,-9.754517,1.903015,-49.039265,-9.567078], Java.type("float[]"))));

	/** Large attribute array: Normal vector field, scene-graph level=6, element #35, 8640 total numbers made up of 2880 3-tuple values */
	this.Normal_6_35_vector = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([-0.000000,1.000000,-0.000000,-0.000000,0.979598,-0.200969,-0.039207,0.979598,-0.197107,-0.000000,1.000000,-0.000000,-0.039207,0.979598,-0.197107,-0.076908,0.979598,-0.185671,-0.000000,1.000000,-0.000000,-0.076908,0.979598,-0.185671,-0.111652,0.979598,-0.167100,-0.000000,1.000000,-0.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.111652,0.979598,-0.167100,-0.142106,0.979598,-0.142107,-0.000000,1.000000,-0.000000,-0.142106,0.979598,-0.142107,-0.167100,0.979598,-0.111652,-0.000000,1.000000,-0.000000,-0.167100,0.979598,-0.111652,-0.185671,0.979598,-0.076907,-0.000000,1.000000,-0.000000,-0.185671,0.979598,-0.076907], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.197107,0.979598,-0.039207,-0.000000,1.000000,-0.000000,-0.197107,0.979598,-0.039207,-0.200969,0.979598,0.000000,-0.000000,1.000000,-0.000000,-0.200969,0.979598,0.000000,-0.197107,0.979598,0.039207,-0.000000,1.000000,-0.000000,-0.197107,0.979598,0.039207,-0.185671,0.979598,0.076908], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.000000,1.000000,-0.000000,-0.185671,0.979598,0.076908,-0.167100,0.979598,0.111652,-0.000000,1.000000,-0.000000,-0.167100,0.979598,0.111652,-0.142106,0.979598,0.142107,-0.000000,1.000000,-0.000000,-0.142106,0.979598,0.142107,-0.111652,0.979598,0.167100,-0.000000,1.000000,-0.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.111652,0.979598,0.167100,-0.076907,0.979598,0.185671,-0.000000,1.000000,-0.000000,-0.076907,0.979598,0.185671,-0.039207,0.979598,0.197107,-0.000000,1.000000,-0.000000,-0.039207,0.979598,0.197107,0.000000,0.979598,0.200969,-0.000000,1.000000,-0.000000,0.000000,0.979598,0.200969], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.039207,0.979598,0.197107,-0.000000,1.000000,-0.000000,0.039207,0.979598,0.197107,0.076908,0.979598,0.185671,-0.000000,1.000000,-0.000000,0.076908,0.979598,0.185671,0.111653,0.979598,0.167099,-0.000000,1.000000,-0.000000,0.111653,0.979598,0.167099,0.142107,0.979598,0.142106], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.000000,1.000000,-0.000000,0.142107,0.979598,0.142106,0.167100,0.979598,0.111652,-0.000000,1.000000,-0.000000,0.167100,0.979598,0.111652,0.185671,0.979598,0.076907,-0.000000,1.000000,-0.000000,0.185671,0.979598,0.076907,0.197107,0.979598,0.039207,-0.000000,1.000000,-0.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.197107,0.979598,0.039207,0.200969,0.979598,-0.000000,-0.000000,1.000000,-0.000000,0.200969,0.979598,-0.000000,0.197107,0.979598,-0.039207,-0.000000,1.000000,-0.000000,0.197107,0.979598,-0.039207,0.185671,0.979598,-0.076908,-0.000000,1.000000,-0.000000,0.185671,0.979598,-0.076908], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.167099,0.979598,-0.111653,-0.000000,1.000000,-0.000000,0.167099,0.979598,-0.111653,0.142106,0.979598,-0.142107,-0.000000,1.000000,-0.000000,0.142106,0.979598,-0.142107,0.111652,0.979598,-0.167100,-0.000000,1.000000,-0.000000,0.111652,0.979598,-0.167100,0.076907,0.979598,-0.185671], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.000000,1.000000,-0.000000,0.076907,0.979598,-0.185671,0.039207,0.979598,-0.197107,-0.000000,1.000000,-0.000000,0.039207,0.979598,-0.197107,-0.000000,0.979598,-0.200969,-0.000000,0.979598,-0.200969,-0.000000,0.921707,-0.387887,-0.075673,0.921707,-0.380434,-0.000000,0.979598,-0.200969], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.075673,0.921707,-0.380434,-0.039207,0.979598,-0.197107,-0.039207,0.979598,-0.197107,-0.075673,0.921707,-0.380434,-0.148438,0.921707,-0.358361,-0.039207,0.979598,-0.197107,-0.148438,0.921707,-0.358361,-0.076908,0.979598,-0.185671,-0.076908,0.979598,-0.185671,-0.148438,0.921707,-0.358361], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.215498,0.921707,-0.322516,-0.076908,0.979598,-0.185671,-0.215498,0.921707,-0.322516,-0.111652,0.979598,-0.167100,-0.111652,0.979598,-0.167100,-0.215498,0.921707,-0.322516,-0.274277,0.921707,-0.274277,-0.111652,0.979598,-0.167100,-0.274277,0.921707,-0.274277,-0.142106,0.979598,-0.142107], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.142106,0.979598,-0.142107,-0.274277,0.921707,-0.274277,-0.322516,0.921707,-0.215498,-0.142106,0.979598,-0.142107,-0.322516,0.921707,-0.215498,-0.167100,0.979598,-0.111652,-0.167100,0.979598,-0.111652,-0.322516,0.921707,-0.215498,-0.358361,0.921707,-0.148438,-0.167100,0.979598,-0.111652], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.358361,0.921707,-0.148438,-0.185671,0.979598,-0.076907,-0.185671,0.979598,-0.076907,-0.358361,0.921707,-0.148438,-0.380434,0.921707,-0.075673,-0.185671,0.979598,-0.076907,-0.380434,0.921707,-0.075673,-0.197107,0.979598,-0.039207,-0.197107,0.979598,-0.039207,-0.380434,0.921707,-0.075673], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.387887,0.921707,0.000000,-0.197107,0.979598,-0.039207,-0.387887,0.921707,0.000000,-0.200969,0.979598,0.000000,-0.200969,0.979598,0.000000,-0.387887,0.921707,0.000000,-0.380434,0.921707,0.075673,-0.200969,0.979598,0.000000,-0.380434,0.921707,0.075673,-0.197107,0.979598,0.039207], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.197107,0.979598,0.039207,-0.380434,0.921707,0.075673,-0.358361,0.921707,0.148438,-0.197107,0.979598,0.039207,-0.358361,0.921707,0.148438,-0.185671,0.979598,0.076908,-0.185671,0.979598,0.076908,-0.358361,0.921707,0.148438,-0.322516,0.921707,0.215499,-0.185671,0.979598,0.076908], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.322516,0.921707,0.215499,-0.167100,0.979598,0.111652,-0.167100,0.979598,0.111652,-0.322516,0.921707,0.215499,-0.274277,0.921707,0.274278,-0.167100,0.979598,0.111652,-0.274277,0.921707,0.274278,-0.142106,0.979598,0.142107,-0.142106,0.979598,0.142107,-0.274277,0.921707,0.274278], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.215498,0.921707,0.322516,-0.142106,0.979598,0.142107,-0.215498,0.921707,0.322516,-0.111652,0.979598,0.167100,-0.111652,0.979598,0.167100,-0.215498,0.921707,0.322516,-0.148438,0.921707,0.358361,-0.111652,0.979598,0.167100,-0.148438,0.921707,0.358361,-0.076907,0.979598,0.185671], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.076907,0.979598,0.185671,-0.148438,0.921707,0.358361,-0.075673,0.921707,0.380434,-0.076907,0.979598,0.185671,-0.075673,0.921707,0.380434,-0.039207,0.979598,0.197107,-0.039207,0.979598,0.197107,-0.075673,0.921707,0.380434,0.000000,0.921707,0.387887,-0.039207,0.979598,0.197107], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,0.921707,0.387887,0.000000,0.979598,0.200969,0.000000,0.979598,0.200969,0.000000,0.921707,0.387887,0.075673,0.921707,0.380434,0.000000,0.979598,0.200969,0.075673,0.921707,0.380434,0.039207,0.979598,0.197107,0.039207,0.979598,0.197107,0.075673,0.921707,0.380434], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.148438,0.921707,0.358361,0.039207,0.979598,0.197107,0.148438,0.921707,0.358361,0.076908,0.979598,0.185671,0.076908,0.979598,0.185671,0.148438,0.921707,0.358361,0.215499,0.921707,0.322516,0.076908,0.979598,0.185671,0.215499,0.921707,0.322516,0.111653,0.979598,0.167099], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.111653,0.979598,0.167099,0.215499,0.921707,0.322516,0.274278,0.921707,0.274277,0.111653,0.979598,0.167099,0.274278,0.921707,0.274277,0.142107,0.979598,0.142106,0.142107,0.979598,0.142106,0.274278,0.921707,0.274277,0.322516,0.921707,0.215498,0.142107,0.979598,0.142106], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.322516,0.921707,0.215498,0.167100,0.979598,0.111652,0.167100,0.979598,0.111652,0.322516,0.921707,0.215498,0.358361,0.921707,0.148437,0.167100,0.979598,0.111652,0.358361,0.921707,0.148437,0.185671,0.979598,0.076907,0.185671,0.979598,0.076907,0.358361,0.921707,0.148437], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.380434,0.921707,0.075672,0.185671,0.979598,0.076907,0.380434,0.921707,0.075672,0.197107,0.979598,0.039207,0.197107,0.979598,0.039207,0.380434,0.921707,0.075672,0.387887,0.921707,-0.000001,0.197107,0.979598,0.039207,0.387887,0.921707,-0.000001,0.200969,0.979598,-0.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.200969,0.979598,-0.000000,0.387887,0.921707,-0.000001,0.380434,0.921707,-0.075674,0.200969,0.979598,-0.000000,0.380434,0.921707,-0.075674,0.197107,0.979598,-0.039207,0.197107,0.979598,-0.039207,0.380434,0.921707,-0.075674,0.358361,0.921707,-0.148439,0.197107,0.979598,-0.039207], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.358361,0.921707,-0.148439,0.185671,0.979598,-0.076908,0.185671,0.979598,-0.076908,0.358361,0.921707,-0.148439,0.322516,0.921707,-0.215499,0.185671,0.979598,-0.076908,0.322516,0.921707,-0.215499,0.167099,0.979598,-0.111653,0.167099,0.979598,-0.111653,0.322516,0.921707,-0.215499], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.274277,0.921707,-0.274278,0.167099,0.979598,-0.111653,0.274277,0.921707,-0.274278,0.142106,0.979598,-0.142107,0.142106,0.979598,-0.142107,0.274277,0.921707,-0.274278,0.215498,0.921707,-0.322517,0.142106,0.979598,-0.142107,0.215498,0.921707,-0.322517,0.111652,0.979598,-0.167100], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.111652,0.979598,-0.167100,0.215498,0.921707,-0.322517,0.148437,0.921707,-0.358361,0.111652,0.979598,-0.167100,0.148437,0.921707,-0.358361,0.076907,0.979598,-0.185671,0.076907,0.979598,-0.185671,0.148437,0.921707,-0.358361,0.075672,0.921707,-0.380434,0.076907,0.979598,-0.185671], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.075672,0.921707,-0.380434,0.039207,0.979598,-0.197107,0.039207,0.979598,-0.197107,0.075672,0.921707,-0.380434,-0.000000,0.921707,-0.387887,0.039207,0.979598,-0.197107,-0.000000,0.921707,-0.387887,-0.000000,0.979598,-0.200969,-0.000000,0.921707,-0.387887,-0.000000,0.828645,-0.559775], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.109207,0.828645,-0.549019,-0.000000,0.921707,-0.387887,-0.109207,0.828645,-0.549019,-0.075673,0.921707,-0.380434,-0.075673,0.921707,-0.380434,-0.109207,0.828645,-0.549019,-0.214217,0.828645,-0.517165,-0.075673,0.921707,-0.380434,-0.214217,0.828645,-0.517165,-0.148438,0.921707,-0.358361], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.148438,0.921707,-0.358361,-0.214217,0.828645,-0.517165,-0.310994,0.828645,-0.465436,-0.148438,0.921707,-0.358361,-0.310994,0.828645,-0.465436,-0.215498,0.921707,-0.322516,-0.215498,0.921707,-0.322516,-0.310994,0.828645,-0.465436,-0.395821,0.828645,-0.395821,-0.215498,0.921707,-0.322516], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.395821,0.828645,-0.395821,-0.274277,0.921707,-0.274277,-0.274277,0.921707,-0.274277,-0.395821,0.828645,-0.395821,-0.465436,0.828645,-0.310994,-0.274277,0.921707,-0.274277,-0.465436,0.828645,-0.310994,-0.322516,0.921707,-0.215498,-0.322516,0.921707,-0.215498,-0.465436,0.828645,-0.310994], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.517165,0.828645,-0.214216,-0.322516,0.921707,-0.215498,-0.517165,0.828645,-0.214216,-0.358361,0.921707,-0.148438,-0.358361,0.921707,-0.148438,-0.517165,0.828645,-0.214216,-0.549019,0.828645,-0.109207,-0.358361,0.921707,-0.148438,-0.549019,0.828645,-0.109207,-0.380434,0.921707,-0.075673], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.380434,0.921707,-0.075673,-0.549019,0.828645,-0.109207,-0.559775,0.828645,0.000000,-0.380434,0.921707,-0.075673,-0.559775,0.828645,0.000000,-0.387887,0.921707,0.000000,-0.387887,0.921707,0.000000,-0.559775,0.828645,0.000000,-0.549019,0.828645,0.109207,-0.387887,0.921707,0.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.549019,0.828645,0.109207,-0.380434,0.921707,0.075673,-0.380434,0.921707,0.075673,-0.549019,0.828645,0.109207,-0.517165,0.828645,0.214217,-0.380434,0.921707,0.075673,-0.517165,0.828645,0.214217,-0.358361,0.921707,0.148438,-0.358361,0.921707,0.148438,-0.517165,0.828645,0.214217], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.465436,0.828645,0.310995,-0.358361,0.921707,0.148438,-0.465436,0.828645,0.310995,-0.322516,0.921707,0.215499,-0.322516,0.921707,0.215499,-0.465436,0.828645,0.310995,-0.395820,0.828645,0.395821,-0.322516,0.921707,0.215499,-0.395820,0.828645,0.395821,-0.274277,0.921707,0.274278], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.274277,0.921707,0.274278,-0.395820,0.828645,0.395821,-0.310994,0.828645,0.465436,-0.274277,0.921707,0.274278,-0.310994,0.828645,0.465436,-0.215498,0.921707,0.322516,-0.215498,0.921707,0.322516,-0.310994,0.828645,0.465436,-0.214216,0.828645,0.517165,-0.215498,0.921707,0.322516], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.214216,0.828645,0.517165,-0.148438,0.921707,0.358361,-0.148438,0.921707,0.358361,-0.214216,0.828645,0.517165,-0.109206,0.828645,0.549019,-0.148438,0.921707,0.358361,-0.109206,0.828645,0.549019,-0.075673,0.921707,0.380434,-0.075673,0.921707,0.380434,-0.109206,0.828645,0.549019], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000001,0.828645,0.559775,-0.075673,0.921707,0.380434,0.000001,0.828645,0.559775,0.000000,0.921707,0.387887,0.000000,0.921707,0.387887,0.000001,0.828645,0.559775,0.109207,0.828645,0.549019,0.000000,0.921707,0.387887,0.109207,0.828645,0.549019,0.075673,0.921707,0.380434], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.075673,0.921707,0.380434,0.109207,0.828645,0.549019,0.214217,0.828645,0.517164,0.075673,0.921707,0.380434,0.214217,0.828645,0.517164,0.148438,0.921707,0.358361,0.148438,0.921707,0.358361,0.214217,0.828645,0.517164,0.310995,0.828645,0.465435,0.148438,0.921707,0.358361], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.310995,0.828645,0.465435,0.215499,0.921707,0.322516,0.215499,0.921707,0.322516,0.310995,0.828645,0.465435,0.395821,0.828645,0.395820,0.215499,0.921707,0.322516,0.395821,0.828645,0.395820,0.274278,0.921707,0.274277,0.274278,0.921707,0.274277,0.395821,0.828645,0.395820], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.465436,0.828645,0.310994,0.274278,0.921707,0.274277,0.465436,0.828645,0.310994,0.322516,0.921707,0.215498,0.322516,0.921707,0.215498,0.465436,0.828645,0.310994,0.517165,0.828645,0.214216,0.322516,0.921707,0.215498,0.517165,0.828645,0.214216,0.358361,0.921707,0.148437], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.358361,0.921707,0.148437,0.517165,0.828645,0.214216,0.549019,0.828645,0.109206,0.358361,0.921707,0.148437,0.549019,0.828645,0.109206,0.380434,0.921707,0.075672,0.380434,0.921707,0.075672,0.549019,0.828645,0.109206,0.559775,0.828645,-0.000001,0.380434,0.921707,0.075672], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.559775,0.828645,-0.000001,0.387887,0.921707,-0.000001,0.387887,0.921707,-0.000001,0.559775,0.828645,-0.000001,0.549019,0.828645,-0.109208,0.387887,0.921707,-0.000001,0.549019,0.828645,-0.109208,0.380434,0.921707,-0.075674,0.380434,0.921707,-0.075674,0.549019,0.828645,-0.109208], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.517164,0.828645,-0.214217,0.380434,0.921707,-0.075674,0.517164,0.828645,-0.214217,0.358361,0.921707,-0.148439,0.358361,0.921707,-0.148439,0.517164,0.828645,-0.214217,0.465435,0.828645,-0.310995,0.358361,0.921707,-0.148439,0.465435,0.828645,-0.310995,0.322516,0.921707,-0.215499], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.322516,0.921707,-0.215499,0.465435,0.828645,-0.310995,0.395820,0.828645,-0.395821,0.322516,0.921707,-0.215499,0.395820,0.828645,-0.395821,0.274277,0.921707,-0.274278,0.274277,0.921707,-0.274278,0.395820,0.828645,-0.395821,0.310993,0.828645,-0.465436,0.274277,0.921707,-0.274278], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.310993,0.828645,-0.465436,0.215498,0.921707,-0.322517,0.215498,0.921707,-0.322517,0.310993,0.828645,-0.465436,0.214215,0.828645,-0.517165,0.215498,0.921707,-0.322517,0.214215,0.828645,-0.517165,0.148437,0.921707,-0.358361,0.148437,0.921707,-0.358361,0.214215,0.828645,-0.517165], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.109206,0.828645,-0.549019,0.148437,0.921707,-0.358361,0.109206,0.828645,-0.549019,0.075672,0.921707,-0.380434,0.075672,0.921707,-0.380434,0.109206,0.828645,-0.549019,-0.000000,0.828645,-0.559775,0.075672,0.921707,-0.380434,-0.000000,0.828645,-0.559775,-0.000000,0.921707,-0.387887], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.000000,0.828645,-0.559775,-0.000000,0.704059,-0.710141,-0.138542,0.704059,-0.696496,-0.000000,0.828645,-0.559775,-0.138542,0.704059,-0.696496,-0.109207,0.828645,-0.549019,-0.109207,0.828645,-0.549019,-0.138542,0.704059,-0.696496,-0.271759,0.704059,-0.656085,-0.109207,0.828645,-0.549019], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.271759,0.704059,-0.656085,-0.214217,0.828645,-0.517165,-0.214217,0.828645,-0.517165,-0.271759,0.704059,-0.656085,-0.394533,0.704059,-0.590461,-0.214217,0.828645,-0.517165,-0.394533,0.704059,-0.590461,-0.310994,0.828645,-0.465436,-0.310994,0.828645,-0.465436,-0.394533,0.704059,-0.590461], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.502146,0.704059,-0.502146,-0.310994,0.828645,-0.465436,-0.502146,0.704059,-0.502146,-0.395821,0.828645,-0.395821,-0.395821,0.828645,-0.395821,-0.502146,0.704059,-0.502146,-0.590461,0.704059,-0.394533,-0.395821,0.828645,-0.395821,-0.590461,0.704059,-0.394533,-0.465436,0.828645,-0.310994], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.465436,0.828645,-0.310994,-0.590461,0.704059,-0.394533,-0.656085,0.704059,-0.271759,-0.465436,0.828645,-0.310994,-0.656085,0.704059,-0.271759,-0.517165,0.828645,-0.214216,-0.517165,0.828645,-0.214216,-0.656085,0.704059,-0.271759,-0.696496,0.704059,-0.138542,-0.517165,0.828645,-0.214216], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.696496,0.704059,-0.138542,-0.549019,0.828645,-0.109207,-0.549019,0.828645,-0.109207,-0.696496,0.704059,-0.138542,-0.710141,0.704059,0.000000,-0.549019,0.828645,-0.109207,-0.710141,0.704059,0.000000,-0.559775,0.828645,0.000000,-0.559775,0.828645,0.000000,-0.710141,0.704059,0.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.696496,0.704059,0.138542,-0.559775,0.828645,0.000000,-0.696496,0.704059,0.138542,-0.549019,0.828645,0.109207,-0.549019,0.828645,0.109207,-0.696496,0.704059,0.138542,-0.656085,0.704059,0.271760,-0.549019,0.828645,0.109207,-0.656085,0.704059,0.271760,-0.517165,0.828645,0.214217], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.517165,0.828645,0.214217,-0.656085,0.704059,0.271760,-0.590461,0.704059,0.394534,-0.517165,0.828645,0.214217,-0.590461,0.704059,0.394534,-0.465436,0.828645,0.310995,-0.465436,0.828645,0.310995,-0.590461,0.704059,0.394534,-0.502145,0.704059,0.502146,-0.465436,0.828645,0.310995], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.502145,0.704059,0.502146,-0.395820,0.828645,0.395821,-0.395820,0.828645,0.395821,-0.502145,0.704059,0.502146,-0.394533,0.704059,0.590461,-0.395820,0.828645,0.395821,-0.394533,0.704059,0.590461,-0.310994,0.828645,0.465436,-0.310994,0.828645,0.465436,-0.394533,0.704059,0.590461], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.271759,0.704059,0.656085,-0.310994,0.828645,0.465436,-0.271759,0.704059,0.656085,-0.214216,0.828645,0.517165,-0.214216,0.828645,0.517165,-0.271759,0.704059,0.656085,-0.138541,0.704059,0.696496,-0.214216,0.828645,0.517165,-0.138541,0.704059,0.696496,-0.109206,0.828645,0.549019], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.109206,0.828645,0.549019,-0.138541,0.704059,0.696496,0.000001,0.704059,0.710141,-0.109206,0.828645,0.549019,0.000001,0.704059,0.710141,0.000001,0.828645,0.559775,0.000001,0.828645,0.559775,0.000001,0.704059,0.710141,0.138542,0.704059,0.696496,0.000001,0.828645,0.559775], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.138542,0.704059,0.696496,0.109207,0.828645,0.549019,0.109207,0.828645,0.549019,0.138542,0.704059,0.696496,0.271760,0.704059,0.656085,0.109207,0.828645,0.549019,0.271760,0.704059,0.656085,0.214217,0.828645,0.517164,0.214217,0.828645,0.517164,0.271760,0.704059,0.656085], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.394534,0.704059,0.590460,0.214217,0.828645,0.517164,0.394534,0.704059,0.590460,0.310995,0.828645,0.465435,0.310995,0.828645,0.465435,0.394534,0.704059,0.590460,0.502146,0.704059,0.502145,0.310995,0.828645,0.465435,0.502146,0.704059,0.502145,0.395821,0.828645,0.395820], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.395821,0.828645,0.395820,0.502146,0.704059,0.502145,0.590462,0.704059,0.394533,0.395821,0.828645,0.395820,0.590462,0.704059,0.394533,0.465436,0.828645,0.310994,0.465436,0.828645,0.310994,0.590462,0.704059,0.394533,0.656086,0.704059,0.271758,0.465436,0.828645,0.310994], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.656086,0.704059,0.271758,0.517165,0.828645,0.214216,0.517165,0.828645,0.214216,0.656086,0.704059,0.271758,0.696496,0.704059,0.138541,0.517165,0.828645,0.214216,0.696496,0.704059,0.138541,0.549019,0.828645,0.109206,0.549019,0.828645,0.109206,0.696496,0.704059,0.138541], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.710141,0.704059,-0.000001,0.549019,0.828645,0.109206,0.710141,0.704059,-0.000001,0.559775,0.828645,-0.000001,0.559775,0.828645,-0.000001,0.710141,0.704059,-0.000001,0.696496,0.704059,-0.138543,0.559775,0.828645,-0.000001,0.696496,0.704059,-0.138543,0.549019,0.828645,-0.109208], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.549019,0.828645,-0.109208,0.696496,0.704059,-0.138543,0.656085,0.704059,-0.271760,0.549019,0.828645,-0.109208,0.656085,0.704059,-0.271760,0.517164,0.828645,-0.214217,0.517164,0.828645,-0.214217,0.656085,0.704059,-0.271760,0.590460,0.704059,-0.394535,0.517164,0.828645,-0.214217], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.590460,0.704059,-0.394535,0.465435,0.828645,-0.310995,0.465435,0.828645,-0.310995,0.590460,0.704059,-0.394535,0.502145,0.704059,-0.502147,0.465435,0.828645,-0.310995,0.502145,0.704059,-0.502147,0.395820,0.828645,-0.395821,0.395820,0.828645,-0.395821,0.502145,0.704059,-0.502147], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.394532,0.704059,-0.590462,0.395820,0.828645,-0.395821,0.394532,0.704059,-0.590462,0.310993,0.828645,-0.465436,0.310993,0.828645,-0.465436,0.394532,0.704059,-0.590462,0.271758,0.704059,-0.656086,0.310993,0.828645,-0.465436,0.271758,0.704059,-0.656086,0.214215,0.828645,-0.517165], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.214215,0.828645,-0.517165,0.271758,0.704059,-0.656086,0.138540,0.704059,-0.696496,0.214215,0.828645,-0.517165,0.138540,0.704059,-0.696496,0.109206,0.828645,-0.549019,0.109206,0.828645,-0.549019,0.138540,0.704059,-0.696496,-0.000000,0.704059,-0.710141,0.109206,0.828645,-0.549019], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.000000,0.704059,-0.710141,-0.000000,0.828645,-0.559775,-0.000000,0.704059,-0.710141,-0.000001,0.552761,-0.833340,-0.162577,0.552761,-0.817327,-0.000000,0.704059,-0.710141,-0.162577,0.552761,-0.817327,-0.138542,0.704059,-0.696496,-0.138542,0.704059,-0.696496,-0.162577,0.552761,-0.817327], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.318905,0.552761,-0.769905,-0.138542,0.704059,-0.696496,-0.318905,0.552761,-0.769905,-0.271759,0.704059,-0.656085,-0.271759,0.704059,-0.656085,-0.318905,0.552761,-0.769905,-0.462979,0.552761,-0.692897,-0.271759,0.704059,-0.656085,-0.462979,0.552761,-0.692897,-0.394533,0.704059,-0.590461], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.394533,0.704059,-0.590461,-0.462979,0.552761,-0.692897,-0.589260,0.552761,-0.589260,-0.394533,0.704059,-0.590461,-0.589260,0.552761,-0.589260,-0.502146,0.704059,-0.502146,-0.502146,0.704059,-0.502146,-0.589260,0.552761,-0.589260,-0.692897,0.552761,-0.462979,-0.502146,0.704059,-0.502146], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.692897,0.552761,-0.462979,-0.590461,0.704059,-0.394533,-0.590461,0.704059,-0.394533,-0.692897,0.552761,-0.462979,-0.769906,0.552761,-0.318905,-0.590461,0.704059,-0.394533,-0.769906,0.552761,-0.318905,-0.656085,0.704059,-0.271759,-0.656085,0.704059,-0.271759,-0.769906,0.552761,-0.318905], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.817327,0.552761,-0.162576,-0.656085,0.704059,-0.271759,-0.817327,0.552761,-0.162576,-0.696496,0.704059,-0.138542,-0.696496,0.704059,-0.138542,-0.817327,0.552761,-0.162576,-0.833340,0.552761,0.000000,-0.696496,0.704059,-0.138542,-0.833340,0.552761,0.000000,-0.710141,0.704059,0.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.710141,0.704059,0.000000,-0.833340,0.552761,0.000000,-0.817327,0.552761,0.162577,-0.710141,0.704059,0.000000,-0.817327,0.552761,0.162577,-0.696496,0.704059,0.138542,-0.696496,0.704059,0.138542,-0.817327,0.552761,0.162577,-0.769905,0.552761,0.318906,-0.696496,0.704059,0.138542], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.769905,0.552761,0.318906,-0.656085,0.704059,0.271760,-0.656085,0.704059,0.271760,-0.769905,0.552761,0.318906,-0.692896,0.552761,0.462979,-0.656085,0.704059,0.271760,-0.692896,0.552761,0.462979,-0.590461,0.704059,0.394534,-0.590461,0.704059,0.394534,-0.692896,0.552761,0.462979], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.589260,0.552761,0.589261,-0.590461,0.704059,0.394534,-0.589260,0.552761,0.589261,-0.502145,0.704059,0.502146,-0.502145,0.704059,0.502146,-0.589260,0.552761,0.589261,-0.462978,0.552761,0.692897,-0.502145,0.704059,0.502146,-0.462978,0.552761,0.692897,-0.394533,0.704059,0.590461], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.394533,0.704059,0.590461,-0.462978,0.552761,0.692897,-0.318905,0.552761,0.769906,-0.394533,0.704059,0.590461,-0.318905,0.552761,0.769906,-0.271759,0.704059,0.656085,-0.271759,0.704059,0.656085,-0.318905,0.552761,0.769906,-0.162576,0.552761,0.817328,-0.271759,0.704059,0.656085], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.162576,0.552761,0.817328,-0.138541,0.704059,0.696496,-0.138541,0.704059,0.696496,-0.162576,0.552761,0.817328,0.000001,0.552761,0.833340,-0.138541,0.704059,0.696496,0.000001,0.552761,0.833340,0.000001,0.704059,0.710141,0.000001,0.704059,0.710141,0.000001,0.552761,0.833340], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.162577,0.552761,0.817327,0.000001,0.704059,0.710141,0.162577,0.552761,0.817327,0.138542,0.704059,0.696496,0.138542,0.704059,0.696496,0.162577,0.552761,0.817327,0.318906,0.552761,0.769905,0.138542,0.704059,0.696496,0.318906,0.552761,0.769905,0.271760,0.704059,0.656085], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.271760,0.704059,0.656085,0.318906,0.552761,0.769905,0.462980,0.552761,0.692896,0.271760,0.704059,0.656085,0.462980,0.552761,0.692896,0.394534,0.704059,0.590460,0.394534,0.704059,0.590460,0.462980,0.552761,0.692896,0.589261,0.552761,0.589259,0.394534,0.704059,0.590460], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.589261,0.552761,0.589259,0.502146,0.704059,0.502145,0.502146,0.704059,0.502145,0.589261,0.552761,0.589259,0.692897,0.552761,0.462978,0.502146,0.704059,0.502145,0.692897,0.552761,0.462978,0.590462,0.704059,0.394533,0.590462,0.704059,0.394533,0.692897,0.552761,0.462978], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.769906,0.552761,0.318904,0.590462,0.704059,0.394533,0.769906,0.552761,0.318904,0.656086,0.704059,0.271758,0.656086,0.704059,0.271758,0.769906,0.552761,0.318904,0.817328,0.552761,0.162575,0.656086,0.704059,0.271758,0.817328,0.552761,0.162575,0.696496,0.704059,0.138541], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.696496,0.704059,0.138541,0.817328,0.552761,0.162575,0.833340,0.552761,-0.000001,0.696496,0.704059,0.138541,0.833340,0.552761,-0.000001,0.710141,0.704059,-0.000001,0.710141,0.704059,-0.000001,0.833340,0.552761,-0.000001,0.817327,0.552761,-0.162578,0.710141,0.704059,-0.000001], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.817327,0.552761,-0.162578,0.696496,0.704059,-0.138543,0.696496,0.704059,-0.138543,0.817327,0.552761,-0.162578,0.769905,0.552761,-0.318907,0.696496,0.704059,-0.138543,0.769905,0.552761,-0.318907,0.656085,0.704059,-0.271760,0.656085,0.704059,-0.271760,0.769905,0.552761,-0.318907], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.692896,0.552761,-0.462980,0.656085,0.704059,-0.271760,0.692896,0.552761,-0.462980,0.590460,0.704059,-0.394535,0.590460,0.704059,-0.394535,0.692896,0.552761,-0.462980,0.589259,0.552761,-0.589261,0.590460,0.704059,-0.394535,0.589259,0.552761,-0.589261,0.502145,0.704059,-0.502147], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.502145,0.704059,-0.502147,0.589259,0.552761,-0.589261,0.462977,0.552761,-0.692898,0.502145,0.704059,-0.502147,0.462977,0.552761,-0.692898,0.394532,0.704059,-0.590462,0.394532,0.704059,-0.590462,0.462977,0.552761,-0.692898,0.318904,0.552761,-0.769906,0.394532,0.704059,-0.590462], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.318904,0.552761,-0.769906,0.271758,0.704059,-0.656086,0.271758,0.704059,-0.656086,0.318904,0.552761,-0.769906,0.162575,0.552761,-0.817328,0.271758,0.704059,-0.656086,0.162575,0.552761,-0.817328,0.138540,0.704059,-0.696496,0.138540,0.704059,-0.696496,0.162575,0.552761,-0.817328], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.000001,0.552761,-0.833340,0.138540,0.704059,-0.696496,-0.000001,0.552761,-0.833340,-0.000000,0.704059,-0.710141,-0.000001,0.552761,-0.833340,-0.000001,0.380537,-0.924766,-0.180413,0.380537,-0.906997,-0.000001,0.552761,-0.833340,-0.180413,0.380537,-0.906997,-0.162577,0.552761,-0.817327], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.162577,0.552761,-0.817327,-0.180413,0.380537,-0.906997,-0.353892,0.380537,-0.854372,-0.162577,0.552761,-0.817327,-0.353892,0.380537,-0.854372,-0.318905,0.552761,-0.769905,-0.318905,0.552761,-0.769905,-0.353892,0.380537,-0.854372,-0.513772,0.380537,-0.768914,-0.318905,0.552761,-0.769905], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.513772,0.380537,-0.768914,-0.462979,0.552761,-0.692897,-0.462979,0.552761,-0.692897,-0.513772,0.380537,-0.768914,-0.653908,0.380537,-0.653908,-0.462979,0.552761,-0.692897,-0.653908,0.380537,-0.653908,-0.589260,0.552761,-0.589260,-0.589260,0.552761,-0.589260,-0.653908,0.380537,-0.653908], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.768915,0.380537,-0.513772,-0.589260,0.552761,-0.589260,-0.768915,0.380537,-0.513772,-0.692897,0.552761,-0.462979,-0.692897,0.552761,-0.462979,-0.768915,0.380537,-0.513772,-0.854372,0.380537,-0.353892,-0.692897,0.552761,-0.462979,-0.854372,0.380537,-0.353892,-0.769906,0.552761,-0.318905], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.769906,0.552761,-0.318905,-0.854372,0.380537,-0.353892,-0.906997,0.380537,-0.180413,-0.769906,0.552761,-0.318905,-0.906997,0.380537,-0.180413,-0.817327,0.552761,-0.162576,-0.817327,0.552761,-0.162576,-0.906997,0.380537,-0.180413,-0.924766,0.380537,0.000000,-0.817327,0.552761,-0.162576], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.924766,0.380537,0.000000,-0.833340,0.552761,0.000000,-0.833340,0.552761,0.000000,-0.924766,0.380537,0.000000,-0.906996,0.380537,0.180413,-0.833340,0.552761,0.000000,-0.906996,0.380537,0.180413,-0.817327,0.552761,0.162577,-0.817327,0.552761,0.162577,-0.906996,0.380537,0.180413], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.854372,0.380537,0.353893,-0.817327,0.552761,0.162577,-0.854372,0.380537,0.353893,-0.769905,0.552761,0.318906,-0.769905,0.552761,0.318906,-0.854372,0.380537,0.353893,-0.768914,0.380537,0.513773,-0.769905,0.552761,0.318906,-0.768914,0.380537,0.513773,-0.692896,0.552761,0.462979], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.692896,0.552761,0.462979,-0.768914,0.380537,0.513773,-0.653908,0.380537,0.653908,-0.692896,0.552761,0.462979,-0.653908,0.380537,0.653908,-0.589260,0.552761,0.589261,-0.589260,0.552761,0.589261,-0.653908,0.380537,0.653908,-0.513772,0.380537,0.768915,-0.589260,0.552761,0.589261], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.513772,0.380537,0.768915,-0.462978,0.552761,0.692897,-0.462978,0.552761,0.692897,-0.513772,0.380537,0.768915,-0.353892,0.380537,0.854372,-0.462978,0.552761,0.692897,-0.353892,0.380537,0.854372,-0.318905,0.552761,0.769906,-0.318905,0.552761,0.769906,-0.353892,0.380537,0.854372], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.180412,0.380537,0.906997,-0.318905,0.552761,0.769906,-0.180412,0.380537,0.906997,-0.162576,0.552761,0.817328,-0.162576,0.552761,0.817328,-0.180412,0.380537,0.906997,0.000001,0.380537,0.924766,-0.162576,0.552761,0.817328,0.000001,0.380537,0.924766,0.000001,0.552761,0.833340], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000001,0.552761,0.833340,0.000001,0.380537,0.924766,0.180414,0.380537,0.906996,0.000001,0.552761,0.833340,0.180414,0.380537,0.906996,0.162577,0.552761,0.817327,0.162577,0.552761,0.817327,0.180414,0.380537,0.906996,0.353893,0.380537,0.854372,0.162577,0.552761,0.817327], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.353893,0.380537,0.854372,0.318906,0.552761,0.769905,0.318906,0.552761,0.769905,0.353893,0.380537,0.854372,0.513773,0.380537,0.768914,0.318906,0.552761,0.769905,0.513773,0.380537,0.768914,0.462980,0.552761,0.692896,0.462980,0.552761,0.692896,0.513773,0.380537,0.768914], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.653909,0.380537,0.653907,0.462980,0.552761,0.692896,0.653909,0.380537,0.653907,0.589261,0.552761,0.589259,0.589261,0.552761,0.589259,0.653909,0.380537,0.653907,0.768915,0.380537,0.513771,0.589261,0.552761,0.589259,0.768915,0.380537,0.513771,0.692897,0.552761,0.462978], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.692897,0.552761,0.462978,0.768915,0.380537,0.513771,0.854373,0.380537,0.353891,0.692897,0.552761,0.462978,0.854373,0.380537,0.353891,0.769906,0.552761,0.318904,0.769906,0.552761,0.318904,0.854373,0.380537,0.353891,0.906997,0.380537,0.180411,0.769906,0.552761,0.318904], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.906997,0.380537,0.180411,0.817328,0.552761,0.162575,0.817328,0.552761,0.162575,0.906997,0.380537,0.180411,0.924766,0.380537,-0.000001,0.817328,0.552761,0.162575,0.924766,0.380537,-0.000001,0.833340,0.552761,-0.000001,0.833340,0.552761,-0.000001,0.924766,0.380537,-0.000001], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.906996,0.380537,-0.180414,0.833340,0.552761,-0.000001,0.906996,0.380537,-0.180414,0.817327,0.552761,-0.162578,0.817327,0.552761,-0.162578,0.906996,0.380537,-0.180414,0.854371,0.380537,-0.353894,0.817327,0.552761,-0.162578,0.854371,0.380537,-0.353894,0.769905,0.552761,-0.318907], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.769905,0.552761,-0.318907,0.854371,0.380537,-0.353894,0.768914,0.380537,-0.513774,0.769905,0.552761,-0.318907,0.768914,0.380537,-0.513774,0.692896,0.552761,-0.462980,0.692896,0.552761,-0.462980,0.768914,0.380537,-0.513774,0.653907,0.380537,-0.653909,0.692896,0.552761,-0.462980], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.653907,0.380537,-0.653909,0.589259,0.552761,-0.589261,0.589259,0.552761,-0.589261,0.653907,0.380537,-0.653909,0.513771,0.380537,-0.768916,0.589259,0.552761,-0.589261,0.513771,0.380537,-0.768916,0.462977,0.552761,-0.692898,0.462977,0.552761,-0.692898,0.513771,0.380537,-0.768916], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.353891,0.380537,-0.854373,0.462977,0.552761,-0.692898,0.353891,0.380537,-0.854373,0.318904,0.552761,-0.769906,0.318904,0.552761,-0.769906,0.353891,0.380537,-0.854373,0.180411,0.380537,-0.906997,0.318904,0.552761,-0.769906,0.180411,0.380537,-0.906997,0.162575,0.552761,-0.817328], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.162575,0.552761,-0.817328,0.180411,0.380537,-0.906997,-0.000001,0.380537,-0.924766,0.162575,0.552761,-0.817328,-0.000001,0.380537,-0.924766,-0.000001,0.552761,-0.833340,-0.000001,0.380537,-0.924766,-0.000001,0.193930,-0.981015,-0.191387,0.193930,-0.962165,-0.000001,0.380537,-0.924766], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.191387,0.193930,-0.962165,-0.180413,0.380537,-0.906997,-0.180413,0.380537,-0.906997,-0.191387,0.193930,-0.962165,-0.375418,0.193930,-0.906340,-0.180413,0.380537,-0.906997,-0.375418,0.193930,-0.906340,-0.353892,0.380537,-0.854372,-0.353892,0.380537,-0.854372,-0.375418,0.193930,-0.906340], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.545023,0.193930,-0.815684,-0.353892,0.380537,-0.854372,-0.545023,0.193930,-0.815684,-0.513772,0.380537,-0.768914,-0.513772,0.380537,-0.768914,-0.545023,0.193930,-0.815684,-0.693683,0.193930,-0.693683,-0.513772,0.380537,-0.768914,-0.693683,0.193930,-0.693683,-0.653908,0.380537,-0.653908], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.653908,0.380537,-0.653908,-0.693683,0.193930,-0.693683,-0.815684,0.193930,-0.545023,-0.653908,0.380537,-0.653908,-0.815684,0.193930,-0.545023,-0.768915,0.380537,-0.513772,-0.768915,0.380537,-0.513772,-0.815684,0.193930,-0.545023,-0.906340,0.193930,-0.375418,-0.768915,0.380537,-0.513772], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.906340,0.193930,-0.375418,-0.854372,0.380537,-0.353892,-0.854372,0.380537,-0.353892,-0.906340,0.193930,-0.375418,-0.962165,0.193930,-0.191386,-0.854372,0.380537,-0.353892,-0.962165,0.193930,-0.191386,-0.906997,0.380537,-0.180413,-0.906997,0.380537,-0.180413,-0.962165,0.193930,-0.191386], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.981015,0.193930,0.000000,-0.906997,0.380537,-0.180413,-0.981015,0.193930,0.000000,-0.924766,0.380537,0.000000,-0.924766,0.380537,0.000000,-0.981015,0.193930,0.000000,-0.962165,0.193930,0.191387,-0.924766,0.380537,0.000000,-0.962165,0.193930,0.191387,-0.906996,0.380537,0.180413], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.906996,0.380537,0.180413,-0.962165,0.193930,0.191387,-0.906340,0.193930,0.375419,-0.906996,0.380537,0.180413,-0.906340,0.193930,0.375419,-0.854372,0.380537,0.353893,-0.854372,0.380537,0.353893,-0.906340,0.193930,0.375419,-0.815684,0.193930,0.545023,-0.854372,0.380537,0.353893], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.815684,0.193930,0.545023,-0.768914,0.380537,0.513773,-0.768914,0.380537,0.513773,-0.815684,0.193930,0.545023,-0.693682,0.193930,0.693683,-0.768914,0.380537,0.513773,-0.693682,0.193930,0.693683,-0.653908,0.380537,0.653908,-0.653908,0.380537,0.653908,-0.693682,0.193930,0.693683], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.545022,0.193930,0.815685,-0.653908,0.380537,0.653908,-0.545022,0.193930,0.815685,-0.513772,0.380537,0.768915,-0.513772,0.380537,0.768915,-0.545022,0.193930,0.815685,-0.375418,0.193930,0.906340,-0.513772,0.380537,0.768915,-0.375418,0.193930,0.906340,-0.353892,0.380537,0.854372], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.353892,0.380537,0.854372,-0.375418,0.193930,0.906340,-0.191386,0.193930,0.962165,-0.353892,0.380537,0.854372,-0.191386,0.193930,0.962165,-0.180412,0.380537,0.906997,-0.180412,0.380537,0.906997,-0.191386,0.193930,0.962165,0.000001,0.193930,0.981015,-0.180412,0.380537,0.906997], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000001,0.193930,0.981015,0.000001,0.380537,0.924766,0.000001,0.380537,0.924766,0.000001,0.193930,0.981015,0.191388,0.193930,0.962165,0.000001,0.380537,0.924766,0.191388,0.193930,0.962165,0.180414,0.380537,0.906996,0.180414,0.380537,0.906996,0.191388,0.193930,0.962165], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.375419,0.193930,0.906340,0.180414,0.380537,0.906996,0.375419,0.193930,0.906340,0.353893,0.380537,0.854372,0.353893,0.380537,0.854372,0.375419,0.193930,0.906340,0.545024,0.193930,0.815684,0.353893,0.380537,0.854372,0.545024,0.193930,0.815684,0.513773,0.380537,0.768914], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.513773,0.380537,0.768914,0.545024,0.193930,0.815684,0.693683,0.193930,0.693682,0.513773,0.380537,0.768914,0.693683,0.193930,0.693682,0.653909,0.380537,0.653907,0.653909,0.380537,0.653907,0.693683,0.193930,0.693682,0.815685,0.193930,0.545022,0.653909,0.380537,0.653907], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.815685,0.193930,0.545022,0.768915,0.380537,0.513771,0.768915,0.380537,0.513771,0.815685,0.193930,0.545022,0.906341,0.193930,0.375417,0.768915,0.380537,0.513771,0.906341,0.193930,0.375417,0.854373,0.380537,0.353891,0.854373,0.380537,0.353891,0.906341,0.193930,0.375417], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.962166,0.193930,0.191385,0.854373,0.380537,0.353891,0.962166,0.193930,0.191385,0.906997,0.380537,0.180411,0.906997,0.380537,0.180411,0.962166,0.193930,0.191385,0.981015,0.193930,-0.000002,0.906997,0.380537,0.180411,0.981015,0.193930,-0.000002,0.924766,0.380537,-0.000001], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.924766,0.380537,-0.000001,0.981015,0.193930,-0.000002,0.962165,0.193930,-0.191388,0.924766,0.380537,-0.000001,0.962165,0.193930,-0.191388,0.906996,0.380537,-0.180414,0.906996,0.380537,-0.180414,0.962165,0.193930,-0.191388,0.906339,0.193930,-0.375420,0.906996,0.380537,-0.180414], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.906339,0.193930,-0.375420,0.854371,0.380537,-0.353894,0.854371,0.380537,-0.353894,0.906339,0.193930,-0.375420,0.815683,0.193930,-0.545024,0.854371,0.380537,-0.353894,0.815683,0.193930,-0.545024,0.768914,0.380537,-0.513774,0.768914,0.380537,-0.513774,0.815683,0.193930,-0.545024], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.693681,0.193930,-0.693684,0.768914,0.380537,-0.513774,0.693681,0.193930,-0.693684,0.653907,0.380537,-0.653909,0.653907,0.380537,-0.653909,0.693681,0.193930,-0.693684,0.545021,0.193930,-0.815686,0.653907,0.380537,-0.653909,0.545021,0.193930,-0.815686,0.513771,0.380537,-0.768916], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.513771,0.380537,-0.768916,0.545021,0.193930,-0.815686,0.375416,0.193930,-0.906341,0.513771,0.380537,-0.768916,0.375416,0.193930,-0.906341,0.353891,0.380537,-0.854373,0.353891,0.380537,-0.854373,0.375416,0.193930,-0.906341,0.191385,0.193930,-0.962166,0.353891,0.380537,-0.854373], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.191385,0.193930,-0.962166,0.180411,0.380537,-0.906997,0.180411,0.380537,-0.906997,0.191385,0.193930,-0.962166,-0.000001,0.193930,-0.981015,0.180411,0.380537,-0.906997,-0.000001,0.193930,-0.981015,-0.000001,0.380537,-0.924766,-0.000001,0.193930,-0.981015,-0.000001,0.000000,-1.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.195090,0.000000,-0.980785,-0.000001,0.193930,-0.981015,-0.195090,0.000000,-0.980785,-0.191387,0.193930,-0.962165,-0.191387,0.193930,-0.962165,-0.195090,0.000000,-0.980785,-0.382683,0.000000,-0.923880,-0.191387,0.193930,-0.962165,-0.382683,0.000000,-0.923880,-0.375418,0.193930,-0.906340], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.375418,0.193930,-0.906340,-0.382683,0.000000,-0.923880,-0.555570,0.000000,-0.831470,-0.375418,0.193930,-0.906340,-0.555570,0.000000,-0.831470,-0.545023,0.193930,-0.815684,-0.545023,0.193930,-0.815684,-0.555570,0.000000,-0.831470,-0.707107,0.000000,-0.707107,-0.545023,0.193930,-0.815684], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.707107,0.000000,-0.707107,-0.693683,0.193930,-0.693683,-0.693683,0.193930,-0.693683,-0.707107,0.000000,-0.707107,-0.831470,0.000000,-0.555570,-0.693683,0.193930,-0.693683,-0.831470,0.000000,-0.555570,-0.815684,0.193930,-0.545023,-0.815684,0.193930,-0.545023,-0.831470,0.000000,-0.555570], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.923880,0.000000,-0.382683,-0.815684,0.193930,-0.545023,-0.923880,0.000000,-0.382683,-0.906340,0.193930,-0.375418,-0.906340,0.193930,-0.375418,-0.923880,0.000000,-0.382683,-0.980785,0.000000,-0.195090,-0.906340,0.193930,-0.375418,-0.980785,0.000000,-0.195090,-0.962165,0.193930,-0.191386], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.962165,0.193930,-0.191386,-0.980785,0.000000,-0.195090,-1.000000,0.000000,0.000000,-0.962165,0.193930,-0.191386,-1.000000,0.000000,0.000000,-0.981015,0.193930,0.000000,-0.981015,0.193930,0.000000,-1.000000,0.000000,0.000000,-0.980785,0.000000,0.195091,-0.981015,0.193930,0.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.980785,0.000000,0.195091,-0.962165,0.193930,0.191387,-0.962165,0.193930,0.191387,-0.980785,0.000000,0.195091,-0.923879,0.000000,0.382684,-0.962165,0.193930,0.191387,-0.923879,0.000000,0.382684,-0.906340,0.193930,0.375419,-0.906340,0.193930,0.375419,-0.923879,0.000000,0.382684], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.831469,0.000000,0.555571,-0.906340,0.193930,0.375419,-0.831469,0.000000,0.555571,-0.815684,0.193930,0.545023,-0.815684,0.193930,0.545023,-0.831469,0.000000,0.555571,-0.707106,0.000000,0.707107,-0.815684,0.193930,0.545023,-0.707106,0.000000,0.707107,-0.693682,0.193930,0.693683], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.693682,0.193930,0.693683,-0.707106,0.000000,0.707107,-0.555570,0.000000,0.831470,-0.693682,0.193930,0.693683,-0.555570,0.000000,0.831470,-0.545022,0.193930,0.815685,-0.545022,0.193930,0.815685,-0.555570,0.000000,0.831470,-0.382683,0.000000,0.923880,-0.545022,0.193930,0.815685], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.382683,0.000000,0.923880,-0.375418,0.193930,0.906340,-0.375418,0.193930,0.906340,-0.382683,0.000000,0.923880,-0.195089,0.000000,0.980785,-0.375418,0.193930,0.906340,-0.195089,0.000000,0.980785,-0.191386,0.193930,0.962165,-0.191386,0.193930,0.962165,-0.195089,0.000000,0.980785], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000001,0.000000,1.000000,-0.191386,0.193930,0.962165,0.000001,0.000000,1.000000,0.000001,0.193930,0.981015,0.000001,0.193930,0.981015,0.000001,0.000000,1.000000,0.195091,0.000000,0.980785,0.000001,0.193930,0.981015,0.195091,0.000000,0.980785,0.191388,0.193930,0.962165], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.191388,0.193930,0.962165,0.195091,0.000000,0.980785,0.382684,0.000000,0.923879,0.191388,0.193930,0.962165,0.382684,0.000000,0.923879,0.375419,0.193930,0.906340,0.375419,0.193930,0.906340,0.382684,0.000000,0.923879,0.555571,0.000000,0.831469,0.375419,0.193930,0.906340], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.555571,0.000000,0.831469,0.545024,0.193930,0.815684,0.545024,0.193930,0.815684,0.555571,0.000000,0.831469,0.707108,0.000000,0.707106,0.545024,0.193930,0.815684,0.707108,0.000000,0.707106,0.693683,0.193930,0.693682,0.693683,0.193930,0.693682,0.707108,0.000000,0.707106], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.831470,0.000000,0.555569,0.693683,0.193930,0.693682,0.831470,0.000000,0.555569,0.815685,0.193930,0.545022,0.815685,0.193930,0.545022,0.831470,0.000000,0.555569,0.923880,0.000000,0.382682,0.815685,0.193930,0.545022,0.923880,0.000000,0.382682,0.906341,0.193930,0.375417], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.906341,0.193930,0.375417,0.923880,0.000000,0.382682,0.980786,0.000000,0.195089,0.906341,0.193930,0.375417,0.980786,0.000000,0.195089,0.962166,0.193930,0.191385,0.962166,0.193930,0.191385,0.980786,0.000000,0.195089,1.000000,0.000000,-0.000001,0.962166,0.193930,0.191385], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([1.000000,0.000000,-0.000001,0.981015,0.193930,-0.000002,0.981015,0.193930,-0.000002,1.000000,0.000000,-0.000001,0.980785,0.000000,-0.195092,0.981015,0.193930,-0.000002,0.980785,0.000000,-0.195092,0.962165,0.193930,-0.191388,0.962165,0.193930,-0.191388,0.980785,0.000000,-0.195092], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.923879,0.000000,-0.382685,0.962165,0.193930,-0.191388,0.923879,0.000000,-0.382685,0.906339,0.193930,-0.375420,0.906339,0.193930,-0.375420,0.923879,0.000000,-0.382685,0.831469,0.000000,-0.555572,0.906339,0.193930,-0.375420,0.831469,0.000000,-0.555572,0.815683,0.193930,-0.545024], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.815683,0.193930,-0.545024,0.831469,0.000000,-0.555572,0.707105,0.000000,-0.707108,0.815683,0.193930,-0.545024,0.707105,0.000000,-0.707108,0.693681,0.193930,-0.693684,0.693681,0.193930,-0.693684,0.707105,0.000000,-0.707108,0.555569,0.000000,-0.831471,0.693681,0.193930,-0.693684], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.555569,0.000000,-0.831471,0.545021,0.193930,-0.815686,0.545021,0.193930,-0.815686,0.555569,0.000000,-0.831471,0.382682,0.000000,-0.923880,0.545021,0.193930,-0.815686,0.382682,0.000000,-0.923880,0.375416,0.193930,-0.906341,0.375416,0.193930,-0.906341,0.382682,0.000000,-0.923880], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.195089,0.000000,-0.980786,0.375416,0.193930,-0.906341,0.195089,0.000000,-0.980786,0.191385,0.193930,-0.962166,0.191385,0.193930,-0.962166,0.195089,0.000000,-0.980786,-0.000001,0.000000,-1.000000,0.191385,0.193930,-0.962166,-0.000001,0.000000,-1.000000,-0.000001,0.193930,-0.981015], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.000001,0.000000,-1.000000,-0.000001,-0.193930,-0.981015,-0.191387,-0.193930,-0.962165,-0.000001,0.000000,-1.000000,-0.191387,-0.193930,-0.962165,-0.195090,0.000000,-0.980785,-0.195090,0.000000,-0.980785,-0.191387,-0.193930,-0.962165,-0.375418,-0.193930,-0.906340,-0.195090,0.000000,-0.980785], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.375418,-0.193930,-0.906340,-0.382683,0.000000,-0.923880,-0.382683,0.000000,-0.923880,-0.375418,-0.193930,-0.906340,-0.545023,-0.193930,-0.815684,-0.382683,0.000000,-0.923880,-0.545023,-0.193930,-0.815684,-0.555570,0.000000,-0.831470,-0.555570,0.000000,-0.831470,-0.545023,-0.193930,-0.815684], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.693683,-0.193930,-0.693683,-0.555570,0.000000,-0.831470,-0.693683,-0.193930,-0.693683,-0.707107,0.000000,-0.707107,-0.707107,0.000000,-0.707107,-0.693683,-0.193930,-0.693683,-0.815684,-0.193930,-0.545023,-0.707107,0.000000,-0.707107,-0.815684,-0.193930,-0.545023,-0.831470,0.000000,-0.555570], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.831470,0.000000,-0.555570,-0.815684,-0.193930,-0.545023,-0.906340,-0.193930,-0.375418,-0.831470,0.000000,-0.555570,-0.906340,-0.193930,-0.375418,-0.923880,0.000000,-0.382683,-0.923880,0.000000,-0.382683,-0.906340,-0.193930,-0.375418,-0.962165,-0.193930,-0.191386,-0.923880,0.000000,-0.382683], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.962165,-0.193930,-0.191386,-0.980785,0.000000,-0.195090,-0.980785,0.000000,-0.195090,-0.962165,-0.193930,-0.191386,-0.981015,-0.193930,0.000000,-0.980785,0.000000,-0.195090,-0.981015,-0.193930,0.000000,-1.000000,0.000000,0.000000,-1.000000,0.000000,0.000000,-0.981015,-0.193930,0.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.962165,-0.193930,0.191387,-1.000000,0.000000,0.000000,-0.962165,-0.193930,0.191387,-0.980785,0.000000,0.195091,-0.980785,0.000000,0.195091,-0.962165,-0.193930,0.191387,-0.906340,-0.193930,0.375419,-0.980785,0.000000,0.195091,-0.906340,-0.193930,0.375419,-0.923879,0.000000,0.382684], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.923879,0.000000,0.382684,-0.906340,-0.193930,0.375419,-0.815684,-0.193930,0.545023,-0.923879,0.000000,0.382684,-0.815684,-0.193930,0.545023,-0.831469,0.000000,0.555571,-0.831469,0.000000,0.555571,-0.815684,-0.193930,0.545023,-0.693682,-0.193930,0.693683,-0.831469,0.000000,0.555571], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.693682,-0.193930,0.693683,-0.707106,0.000000,0.707107,-0.707106,0.000000,0.707107,-0.693682,-0.193930,0.693683,-0.545022,-0.193930,0.815685,-0.707106,0.000000,0.707107,-0.545022,-0.193930,0.815685,-0.555570,0.000000,0.831470,-0.555570,0.000000,0.831470,-0.545022,-0.193930,0.815685], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.375418,-0.193930,0.906340,-0.555570,0.000000,0.831470,-0.375418,-0.193930,0.906340,-0.382683,0.000000,0.923880,-0.382683,0.000000,0.923880,-0.375418,-0.193930,0.906340,-0.191386,-0.193930,0.962166,-0.382683,0.000000,0.923880,-0.191386,-0.193930,0.962166,-0.195089,0.000000,0.980785], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.195089,0.000000,0.980785,-0.191386,-0.193930,0.962166,0.000001,-0.193930,0.981015,-0.195089,0.000000,0.980785,0.000001,-0.193930,0.981015,0.000001,0.000000,1.000000,0.000001,0.000000,1.000000,0.000001,-0.193930,0.981015,0.191388,-0.193930,0.962165,0.000001,0.000000,1.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.191388,-0.193930,0.962165,0.195091,0.000000,0.980785,0.195091,0.000000,0.980785,0.191388,-0.193930,0.962165,0.375419,-0.193930,0.906340,0.195091,0.000000,0.980785,0.375419,-0.193930,0.906340,0.382684,0.000000,0.923879,0.382684,0.000000,0.923879,0.375419,-0.193930,0.906340], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.545024,-0.193930,0.815684,0.382684,0.000000,0.923879,0.545024,-0.193930,0.815684,0.555571,0.000000,0.831469,0.555571,0.000000,0.831469,0.545024,-0.193930,0.815684,0.693683,-0.193930,0.693682,0.555571,0.000000,0.831469,0.693683,-0.193930,0.693682,0.707108,0.000000,0.707106], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.707108,0.000000,0.707106,0.693683,-0.193930,0.693682,0.815685,-0.193930,0.545022,0.707108,0.000000,0.707106,0.815685,-0.193930,0.545022,0.831470,0.000000,0.555569,0.831470,0.000000,0.555569,0.815685,-0.193930,0.545022,0.906341,-0.193930,0.375417,0.831470,0.000000,0.555569], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.906341,-0.193930,0.375417,0.923880,0.000000,0.382682,0.923880,0.000000,0.382682,0.906341,-0.193930,0.375417,0.962166,-0.193930,0.191385,0.923880,0.000000,0.382682,0.962166,-0.193930,0.191385,0.980786,0.000000,0.195089,0.980786,0.000000,0.195089,0.962166,-0.193930,0.191385], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.981015,-0.193930,-0.000002,0.980786,0.000000,0.195089,0.981015,-0.193930,-0.000002,1.000000,0.000000,-0.000001,1.000000,0.000000,-0.000001,0.981015,-0.193930,-0.000002,0.962165,-0.193930,-0.191388,1.000000,0.000000,-0.000001,0.962165,-0.193930,-0.191388,0.980785,0.000000,-0.195092], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.980785,0.000000,-0.195092,0.962165,-0.193930,-0.191388,0.906339,-0.193930,-0.375420,0.980785,0.000000,-0.195092,0.906339,-0.193930,-0.375420,0.923879,0.000000,-0.382685,0.923879,0.000000,-0.382685,0.906339,-0.193930,-0.375420,0.815683,-0.193930,-0.545024,0.923879,0.000000,-0.382685], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.815683,-0.193930,-0.545024,0.831469,0.000000,-0.555572,0.831469,0.000000,-0.555572,0.815683,-0.193930,-0.545024,0.693681,-0.193930,-0.693684,0.831469,0.000000,-0.555572,0.693681,-0.193930,-0.693684,0.707105,0.000000,-0.707108,0.707105,0.000000,-0.707108,0.693681,-0.193930,-0.693684], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.545021,-0.193930,-0.815686,0.707105,0.000000,-0.707108,0.545021,-0.193930,-0.815686,0.555569,0.000000,-0.831471,0.555569,0.000000,-0.831471,0.545021,-0.193930,-0.815686,0.375417,-0.193930,-0.906341,0.555569,0.000000,-0.831471,0.375417,-0.193930,-0.906341,0.382682,0.000000,-0.923880], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.382682,0.000000,-0.923880,0.375417,-0.193930,-0.906341,0.191385,-0.193930,-0.962166,0.382682,0.000000,-0.923880,0.191385,-0.193930,-0.962166,0.195089,0.000000,-0.980786,0.195089,0.000000,-0.980786,0.191385,-0.193930,-0.962166,-0.000001,-0.193930,-0.981015,0.195089,0.000000,-0.980786], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.000001,-0.193930,-0.981015,-0.000001,0.000000,-1.000000,-0.000001,-0.193930,-0.981015,-0.000001,-0.380537,-0.924766,-0.180413,-0.380537,-0.906997,-0.000001,-0.193930,-0.981015,-0.180413,-0.380537,-0.906997,-0.191387,-0.193930,-0.962165,-0.191387,-0.193930,-0.962165,-0.180413,-0.380537,-0.906997], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.353892,-0.380537,-0.854372,-0.191387,-0.193930,-0.962165,-0.353892,-0.380537,-0.854372,-0.375418,-0.193930,-0.906340,-0.375418,-0.193930,-0.906340,-0.353892,-0.380537,-0.854372,-0.513772,-0.380537,-0.768915,-0.375418,-0.193930,-0.906340,-0.513772,-0.380537,-0.768915,-0.545023,-0.193930,-0.815684], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.545023,-0.193930,-0.815684,-0.513772,-0.380537,-0.768915,-0.653908,-0.380537,-0.653908,-0.545023,-0.193930,-0.815684,-0.653908,-0.380537,-0.653908,-0.693683,-0.193930,-0.693683,-0.693683,-0.193930,-0.693683,-0.653908,-0.380537,-0.653908,-0.768915,-0.380537,-0.513772,-0.693683,-0.193930,-0.693683], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.768915,-0.380537,-0.513772,-0.815684,-0.193930,-0.545023,-0.815684,-0.193930,-0.545023,-0.768915,-0.380537,-0.513772,-0.854372,-0.380537,-0.353892,-0.815684,-0.193930,-0.545023,-0.854372,-0.380537,-0.353892,-0.906340,-0.193930,-0.375418,-0.906340,-0.193930,-0.375418,-0.854372,-0.380537,-0.353892], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.906997,-0.380537,-0.180413,-0.906340,-0.193930,-0.375418,-0.906997,-0.380537,-0.180413,-0.962165,-0.193930,-0.191386,-0.962165,-0.193930,-0.191386,-0.906997,-0.380537,-0.180413,-0.924766,-0.380537,0.000000,-0.962165,-0.193930,-0.191386,-0.924766,-0.380537,0.000000,-0.981015,-0.193930,0.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.981015,-0.193930,0.000000,-0.924766,-0.380537,0.000000,-0.906996,-0.380537,0.180413,-0.981015,-0.193930,0.000000,-0.906996,-0.380537,0.180413,-0.962165,-0.193930,0.191387,-0.962165,-0.193930,0.191387,-0.906996,-0.380537,0.180413,-0.854372,-0.380537,0.353893,-0.962165,-0.193930,0.191387], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.854372,-0.380537,0.353893,-0.906340,-0.193930,0.375419,-0.906340,-0.193930,0.375419,-0.854372,-0.380537,0.353893,-0.768914,-0.380537,0.513773,-0.906340,-0.193930,0.375419,-0.768914,-0.380537,0.513773,-0.815684,-0.193930,0.545023,-0.815684,-0.193930,0.545023,-0.768914,-0.380537,0.513773], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.653908,-0.380537,0.653908,-0.815684,-0.193930,0.545023,-0.653908,-0.380537,0.653908,-0.693682,-0.193930,0.693683,-0.693682,-0.193930,0.693683,-0.653908,-0.380537,0.653908,-0.513772,-0.380537,0.768915,-0.693682,-0.193930,0.693683,-0.513772,-0.380537,0.768915,-0.545022,-0.193930,0.815685], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.545022,-0.193930,0.815685,-0.513772,-0.380537,0.768915,-0.353892,-0.380537,0.854372,-0.545022,-0.193930,0.815685,-0.353892,-0.380537,0.854372,-0.375418,-0.193930,0.906340,-0.375418,-0.193930,0.906340,-0.353892,-0.380537,0.854372,-0.180412,-0.380537,0.906997,-0.375418,-0.193930,0.906340], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.180412,-0.380537,0.906997,-0.191386,-0.193930,0.962166,-0.191386,-0.193930,0.962166,-0.180412,-0.380537,0.906997,0.000001,-0.380537,0.924766,-0.191386,-0.193930,0.962166,0.000001,-0.380537,0.924766,0.000001,-0.193930,0.981015,0.000001,-0.193930,0.981015,0.000001,-0.380537,0.924766], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.180414,-0.380537,0.906996,0.000001,-0.193930,0.981015,0.180414,-0.380537,0.906996,0.191388,-0.193930,0.962165,0.191388,-0.193930,0.962165,0.180414,-0.380537,0.906996,0.353893,-0.380537,0.854372,0.191388,-0.193930,0.962165,0.353893,-0.380537,0.854372,0.375419,-0.193930,0.906340], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.375419,-0.193930,0.906340,0.353893,-0.380537,0.854372,0.513773,-0.380537,0.768914,0.375419,-0.193930,0.906340,0.513773,-0.380537,0.768914,0.545024,-0.193930,0.815684,0.545024,-0.193930,0.815684,0.513773,-0.380537,0.768914,0.653909,-0.380537,0.653907,0.545024,-0.193930,0.815684], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.653909,-0.380537,0.653907,0.693683,-0.193930,0.693682,0.693683,-0.193930,0.693682,0.653909,-0.380537,0.653907,0.768915,-0.380537,0.513771,0.693683,-0.193930,0.693682,0.768915,-0.380537,0.513771,0.815685,-0.193930,0.545022,0.815685,-0.193930,0.545022,0.768915,-0.380537,0.513771], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.854373,-0.380537,0.353891,0.815685,-0.193930,0.545022,0.854373,-0.380537,0.353891,0.906341,-0.193930,0.375417,0.906341,-0.193930,0.375417,0.854373,-0.380537,0.353891,0.906997,-0.380537,0.180411,0.906341,-0.193930,0.375417,0.906997,-0.380537,0.180411,0.962166,-0.193930,0.191385], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.962166,-0.193930,0.191385,0.906997,-0.380537,0.180411,0.924766,-0.380537,-0.000001,0.962166,-0.193930,0.191385,0.924766,-0.380537,-0.000001,0.981015,-0.193930,-0.000002,0.981015,-0.193930,-0.000002,0.924766,-0.380537,-0.000001,0.906996,-0.380537,-0.180414,0.981015,-0.193930,-0.000002], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.906996,-0.380537,-0.180414,0.962165,-0.193930,-0.191388,0.962165,-0.193930,-0.191388,0.906996,-0.380537,-0.180414,0.854371,-0.380537,-0.353894,0.962165,-0.193930,-0.191388,0.854371,-0.380537,-0.353894,0.906339,-0.193930,-0.375420,0.906339,-0.193930,-0.375420,0.854371,-0.380537,-0.353894], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.768914,-0.380537,-0.513774,0.906339,-0.193930,-0.375420,0.768914,-0.380537,-0.513774,0.815683,-0.193930,-0.545024,0.815683,-0.193930,-0.545024,0.768914,-0.380537,-0.513774,0.653907,-0.380537,-0.653909,0.815683,-0.193930,-0.545024,0.653907,-0.380537,-0.653909,0.693681,-0.193930,-0.693684], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.693681,-0.193930,-0.693684,0.653907,-0.380537,-0.653909,0.513771,-0.380537,-0.768916,0.693681,-0.193930,-0.693684,0.513771,-0.380537,-0.768916,0.545021,-0.193930,-0.815686,0.545021,-0.193930,-0.815686,0.513771,-0.380537,-0.768916,0.353891,-0.380537,-0.854373,0.545021,-0.193930,-0.815686], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.353891,-0.380537,-0.854373,0.375417,-0.193930,-0.906341,0.375417,-0.193930,-0.906341,0.353891,-0.380537,-0.854373,0.180411,-0.380537,-0.906997,0.375417,-0.193930,-0.906341,0.180411,-0.380537,-0.906997,0.191385,-0.193930,-0.962166,0.191385,-0.193930,-0.962166,0.180411,-0.380537,-0.906997], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.000001,-0.380537,-0.924766,0.191385,-0.193930,-0.962166,-0.000001,-0.380537,-0.924766,-0.000001,-0.193930,-0.981015,-0.000001,-0.380537,-0.924766,-0.000001,-0.552761,-0.833340,-0.162577,-0.552761,-0.817327,-0.000001,-0.380537,-0.924766,-0.162577,-0.552761,-0.817327,-0.180413,-0.380537,-0.906997], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.180413,-0.380537,-0.906997,-0.162577,-0.552761,-0.817327,-0.318905,-0.552761,-0.769906,-0.180413,-0.380537,-0.906997,-0.318905,-0.552761,-0.769906,-0.353892,-0.380537,-0.854372,-0.353892,-0.380537,-0.854372,-0.318905,-0.552761,-0.769906,-0.462979,-0.552761,-0.692897,-0.353892,-0.380537,-0.854372], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.462979,-0.552761,-0.692897,-0.513772,-0.380537,-0.768915,-0.513772,-0.380537,-0.768915,-0.462979,-0.552761,-0.692897,-0.589260,-0.552761,-0.589260,-0.513772,-0.380537,-0.768915,-0.589260,-0.552761,-0.589260,-0.653908,-0.380537,-0.653908,-0.653908,-0.380537,-0.653908,-0.589260,-0.552761,-0.589260], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.692897,-0.552761,-0.462979,-0.653908,-0.380537,-0.653908,-0.692897,-0.552761,-0.462979,-0.768915,-0.380537,-0.513772,-0.768915,-0.380537,-0.513772,-0.692897,-0.552761,-0.462979,-0.769906,-0.552761,-0.318905,-0.768915,-0.380537,-0.513772,-0.769906,-0.552761,-0.318905,-0.854372,-0.380537,-0.353892], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.854372,-0.380537,-0.353892,-0.769906,-0.552761,-0.318905,-0.817327,-0.552761,-0.162576,-0.854372,-0.380537,-0.353892,-0.817327,-0.552761,-0.162576,-0.906997,-0.380537,-0.180413,-0.906997,-0.380537,-0.180413,-0.817327,-0.552761,-0.162576,-0.833340,-0.552761,0.000000,-0.906997,-0.380537,-0.180413], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.833340,-0.552761,0.000000,-0.924766,-0.380537,0.000000,-0.924766,-0.380537,0.000000,-0.833340,-0.552761,0.000000,-0.817327,-0.552761,0.162577,-0.924766,-0.380537,0.000000,-0.817327,-0.552761,0.162577,-0.906996,-0.380537,0.180413,-0.906996,-0.380537,0.180413,-0.817327,-0.552761,0.162577], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.769905,-0.552761,0.318906,-0.906996,-0.380537,0.180413,-0.769905,-0.552761,0.318906,-0.854372,-0.380537,0.353893,-0.854372,-0.380537,0.353893,-0.769905,-0.552761,0.318906,-0.692896,-0.552761,0.462979,-0.854372,-0.380537,0.353893,-0.692896,-0.552761,0.462979,-0.768914,-0.380537,0.513773], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.768914,-0.380537,0.513773,-0.692896,-0.552761,0.462979,-0.589260,-0.552761,0.589261,-0.768914,-0.380537,0.513773,-0.589260,-0.552761,0.589261,-0.653908,-0.380537,0.653908,-0.653908,-0.380537,0.653908,-0.589260,-0.552761,0.589261,-0.462978,-0.552761,0.692897,-0.653908,-0.380537,0.653908], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.462978,-0.552761,0.692897,-0.513772,-0.380537,0.768915,-0.513772,-0.380537,0.768915,-0.462978,-0.552761,0.692897,-0.318905,-0.552761,0.769906,-0.513772,-0.380537,0.768915,-0.318905,-0.552761,0.769906,-0.353892,-0.380537,0.854372,-0.353892,-0.380537,0.854372,-0.318905,-0.552761,0.769906], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.162576,-0.552761,0.817328,-0.353892,-0.380537,0.854372,-0.162576,-0.552761,0.817328,-0.180412,-0.380537,0.906997,-0.180412,-0.380537,0.906997,-0.162576,-0.552761,0.817328,0.000001,-0.552761,0.833340,-0.180412,-0.380537,0.906997,0.000001,-0.552761,0.833340,0.000001,-0.380537,0.924766], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000001,-0.380537,0.924766,0.000001,-0.552761,0.833340,0.162577,-0.552761,0.817327,0.000001,-0.380537,0.924766,0.162577,-0.552761,0.817327,0.180414,-0.380537,0.906996,0.180414,-0.380537,0.906996,0.162577,-0.552761,0.817327,0.318906,-0.552761,0.769905,0.180414,-0.380537,0.906996], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.318906,-0.552761,0.769905,0.353893,-0.380537,0.854372,0.353893,-0.380537,0.854372,0.318906,-0.552761,0.769905,0.462980,-0.552761,0.692896,0.353893,-0.380537,0.854372,0.462980,-0.552761,0.692896,0.513773,-0.380537,0.768914,0.513773,-0.380537,0.768914,0.462980,-0.552761,0.692896], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.589261,-0.552761,0.589260,0.513773,-0.380537,0.768914,0.589261,-0.552761,0.589260,0.653909,-0.380537,0.653907,0.653909,-0.380537,0.653907,0.589261,-0.552761,0.589260,0.692897,-0.552761,0.462978,0.653909,-0.380537,0.653907,0.692897,-0.552761,0.462978,0.768915,-0.380537,0.513771], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.768915,-0.380537,0.513771,0.692897,-0.552761,0.462978,0.769906,-0.552761,0.318904,0.768915,-0.380537,0.513771,0.769906,-0.552761,0.318904,0.854373,-0.380537,0.353891,0.854373,-0.380537,0.353891,0.769906,-0.552761,0.318904,0.817328,-0.552761,0.162575,0.854373,-0.380537,0.353891], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.817328,-0.552761,0.162575,0.906997,-0.380537,0.180411,0.906997,-0.380537,0.180411,0.817328,-0.552761,0.162575,0.833340,-0.552761,-0.000001,0.906997,-0.380537,0.180411,0.833340,-0.552761,-0.000001,0.924766,-0.380537,-0.000001,0.924766,-0.380537,-0.000001,0.833340,-0.552761,-0.000001], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.817327,-0.552761,-0.162578,0.924766,-0.380537,-0.000001,0.817327,-0.552761,-0.162578,0.906996,-0.380537,-0.180414,0.906996,-0.380537,-0.180414,0.817327,-0.552761,-0.162578,0.769905,-0.552761,-0.318907,0.906996,-0.380537,-0.180414,0.769905,-0.552761,-0.318907,0.854371,-0.380537,-0.353894], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.854371,-0.380537,-0.353894,0.769905,-0.552761,-0.318907,0.692896,-0.552761,-0.462980,0.854371,-0.380537,-0.353894,0.692896,-0.552761,-0.462980,0.768914,-0.380537,-0.513774,0.768914,-0.380537,-0.513774,0.692896,-0.552761,-0.462980,0.589259,-0.552761,-0.589261,0.768914,-0.380537,-0.513774], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.589259,-0.552761,-0.589261,0.653907,-0.380537,-0.653909,0.653907,-0.380537,-0.653909,0.589259,-0.552761,-0.589261,0.462977,-0.552761,-0.692898,0.653907,-0.380537,-0.653909,0.462977,-0.552761,-0.692898,0.513771,-0.380537,-0.768916,0.513771,-0.380537,-0.768916,0.462977,-0.552761,-0.692898], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.318904,-0.552761,-0.769906,0.513771,-0.380537,-0.768916,0.318904,-0.552761,-0.769906,0.353891,-0.380537,-0.854373,0.353891,-0.380537,-0.854373,0.318904,-0.552761,-0.769906,0.162575,-0.552761,-0.817328,0.353891,-0.380537,-0.854373,0.162575,-0.552761,-0.817328,0.180411,-0.380537,-0.906997], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.180411,-0.380537,-0.906997,0.162575,-0.552761,-0.817328,-0.000001,-0.552761,-0.833340,0.180411,-0.380537,-0.906997,-0.000001,-0.552761,-0.833340,-0.000001,-0.380537,-0.924766,-0.000001,-0.552761,-0.833340,-0.000000,-0.704059,-0.710141,-0.138542,-0.704059,-0.696496,-0.000001,-0.552761,-0.833340], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.138542,-0.704059,-0.696496,-0.162577,-0.552761,-0.817327,-0.162577,-0.552761,-0.817327,-0.138542,-0.704059,-0.696496,-0.271759,-0.704059,-0.656085,-0.162577,-0.552761,-0.817327,-0.271759,-0.704059,-0.656085,-0.318905,-0.552761,-0.769906,-0.318905,-0.552761,-0.769906,-0.271759,-0.704059,-0.656085], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.394533,-0.704059,-0.590461,-0.318905,-0.552761,-0.769906,-0.394533,-0.704059,-0.590461,-0.462979,-0.552761,-0.692897,-0.462979,-0.552761,-0.692897,-0.394533,-0.704059,-0.590461,-0.502146,-0.704059,-0.502146,-0.462979,-0.552761,-0.692897,-0.502146,-0.704059,-0.502146,-0.589260,-0.552761,-0.589260], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.589260,-0.552761,-0.589260,-0.502146,-0.704059,-0.502146,-0.590461,-0.704059,-0.394533,-0.589260,-0.552761,-0.589260,-0.590461,-0.704059,-0.394533,-0.692897,-0.552761,-0.462979,-0.692897,-0.552761,-0.462979,-0.590461,-0.704059,-0.394533,-0.656085,-0.704059,-0.271759,-0.692897,-0.552761,-0.462979], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.656085,-0.704059,-0.271759,-0.769906,-0.552761,-0.318905,-0.769906,-0.552761,-0.318905,-0.656085,-0.704059,-0.271759,-0.696496,-0.704059,-0.138541,-0.769906,-0.552761,-0.318905,-0.696496,-0.704059,-0.138541,-0.817327,-0.552761,-0.162576,-0.817327,-0.552761,-0.162576,-0.696496,-0.704059,-0.138541], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.710141,-0.704059,0.000000,-0.817327,-0.552761,-0.162576,-0.710141,-0.704059,0.000000,-0.833340,-0.552761,0.000000,-0.833340,-0.552761,0.000000,-0.710141,-0.704059,0.000000,-0.696496,-0.704059,0.138542,-0.833340,-0.552761,0.000000,-0.696496,-0.704059,0.138542,-0.817327,-0.552761,0.162577], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.817327,-0.552761,0.162577,-0.696496,-0.704059,0.138542,-0.656085,-0.704059,0.271760,-0.817327,-0.552761,0.162577,-0.656085,-0.704059,0.271760,-0.769905,-0.552761,0.318906,-0.769905,-0.552761,0.318906,-0.656085,-0.704059,0.271760,-0.590461,-0.704059,0.394534,-0.769905,-0.552761,0.318906], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.590461,-0.704059,0.394534,-0.692896,-0.552761,0.462979,-0.692896,-0.552761,0.462979,-0.590461,-0.704059,0.394534,-0.502146,-0.704059,0.502146,-0.692896,-0.552761,0.462979,-0.502146,-0.704059,0.502146,-0.589260,-0.552761,0.589261,-0.589260,-0.552761,0.589261,-0.502146,-0.704059,0.502146], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.394533,-0.704059,0.590461,-0.589260,-0.552761,0.589261,-0.394533,-0.704059,0.590461,-0.462978,-0.552761,0.692897,-0.462978,-0.552761,0.692897,-0.394533,-0.704059,0.590461,-0.271759,-0.704059,0.656085,-0.462978,-0.552761,0.692897,-0.271759,-0.704059,0.656085,-0.318905,-0.552761,0.769906], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.318905,-0.552761,0.769906,-0.271759,-0.704059,0.656085,-0.138541,-0.704059,0.696496,-0.318905,-0.552761,0.769906,-0.138541,-0.704059,0.696496,-0.162576,-0.552761,0.817328,-0.162576,-0.552761,0.817328,-0.138541,-0.704059,0.696496,0.000001,-0.704059,0.710141,-0.162576,-0.552761,0.817328], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000001,-0.704059,0.710141,0.000001,-0.552761,0.833340,0.000001,-0.552761,0.833340,0.000001,-0.704059,0.710141,0.138542,-0.704059,0.696496,0.000001,-0.552761,0.833340,0.138542,-0.704059,0.696496,0.162577,-0.552761,0.817327,0.162577,-0.552761,0.817327,0.138542,-0.704059,0.696496], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.271760,-0.704059,0.656085,0.162577,-0.552761,0.817327,0.271760,-0.704059,0.656085,0.318906,-0.552761,0.769905,0.318906,-0.552761,0.769905,0.271760,-0.704059,0.656085,0.394534,-0.704059,0.590461,0.318906,-0.552761,0.769905,0.394534,-0.704059,0.590461,0.462980,-0.552761,0.692896], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.462980,-0.552761,0.692896,0.394534,-0.704059,0.590461,0.502146,-0.704059,0.502145,0.462980,-0.552761,0.692896,0.502146,-0.704059,0.502145,0.589261,-0.552761,0.589260,0.589261,-0.552761,0.589260,0.502146,-0.704059,0.502145,0.590462,-0.704059,0.394533,0.589261,-0.552761,0.589260], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.590462,-0.704059,0.394533,0.692897,-0.552761,0.462978,0.692897,-0.552761,0.462978,0.590462,-0.704059,0.394533,0.656086,-0.704059,0.271758,0.692897,-0.552761,0.462978,0.656086,-0.704059,0.271758,0.769906,-0.552761,0.318904,0.769906,-0.552761,0.318904,0.656086,-0.704059,0.271758], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.696496,-0.704059,0.138541,0.769906,-0.552761,0.318904,0.696496,-0.704059,0.138541,0.817328,-0.552761,0.162575,0.817328,-0.552761,0.162575,0.696496,-0.704059,0.138541,0.710141,-0.704059,-0.000001,0.817328,-0.552761,0.162575,0.710141,-0.704059,-0.000001,0.833340,-0.552761,-0.000001], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.833340,-0.552761,-0.000001,0.710141,-0.704059,-0.000001,0.696496,-0.704059,-0.138543,0.833340,-0.552761,-0.000001,0.696496,-0.704059,-0.138543,0.817327,-0.552761,-0.162578,0.817327,-0.552761,-0.162578,0.696496,-0.704059,-0.138543,0.656085,-0.704059,-0.271760,0.817327,-0.552761,-0.162578], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.656085,-0.704059,-0.271760,0.769905,-0.552761,-0.318907,0.769905,-0.552761,-0.318907,0.656085,-0.704059,-0.271760,0.590460,-0.704059,-0.394535,0.769905,-0.552761,-0.318907,0.590460,-0.704059,-0.394535,0.692896,-0.552761,-0.462980,0.692896,-0.552761,-0.462980,0.590460,-0.704059,-0.394535], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.502145,-0.704059,-0.502147,0.692896,-0.552761,-0.462980,0.502145,-0.704059,-0.502147,0.589259,-0.552761,-0.589261,0.589259,-0.552761,-0.589261,0.502145,-0.704059,-0.502147,0.394532,-0.704059,-0.590462,0.589259,-0.552761,-0.589261,0.394532,-0.704059,-0.590462,0.462977,-0.552761,-0.692898], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.462977,-0.552761,-0.692898,0.394532,-0.704059,-0.590462,0.271758,-0.704059,-0.656086,0.462977,-0.552761,-0.692898,0.271758,-0.704059,-0.656086,0.318904,-0.552761,-0.769906,0.318904,-0.552761,-0.769906,0.271758,-0.704059,-0.656086,0.138540,-0.704059,-0.696497,0.318904,-0.552761,-0.769906], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.138540,-0.704059,-0.696497,0.162575,-0.552761,-0.817328,0.162575,-0.552761,-0.817328,0.138540,-0.704059,-0.696497,-0.000000,-0.704059,-0.710141,0.162575,-0.552761,-0.817328,-0.000000,-0.704059,-0.710141,-0.000001,-0.552761,-0.833340,-0.000000,-0.704059,-0.710141,-0.000000,-0.828645,-0.559775], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.109207,-0.828645,-0.549019,-0.000000,-0.704059,-0.710141,-0.109207,-0.828645,-0.549019,-0.138542,-0.704059,-0.696496,-0.138542,-0.704059,-0.696496,-0.109207,-0.828645,-0.549019,-0.214217,-0.828645,-0.517165,-0.138542,-0.704059,-0.696496,-0.214217,-0.828645,-0.517165,-0.271759,-0.704059,-0.656085], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.271759,-0.704059,-0.656085,-0.214217,-0.828645,-0.517165,-0.310994,-0.828645,-0.465436,-0.271759,-0.704059,-0.656085,-0.310994,-0.828645,-0.465436,-0.394533,-0.704059,-0.590461,-0.394533,-0.704059,-0.590461,-0.310994,-0.828645,-0.465436,-0.395821,-0.828645,-0.395821,-0.394533,-0.704059,-0.590461], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.395821,-0.828645,-0.395821,-0.502146,-0.704059,-0.502146,-0.502146,-0.704059,-0.502146,-0.395821,-0.828645,-0.395821,-0.465436,-0.828645,-0.310994,-0.502146,-0.704059,-0.502146,-0.465436,-0.828645,-0.310994,-0.590461,-0.704059,-0.394533,-0.590461,-0.704059,-0.394533,-0.465436,-0.828645,-0.310994], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.517165,-0.828645,-0.214217,-0.590461,-0.704059,-0.394533,-0.517165,-0.828645,-0.214217,-0.656085,-0.704059,-0.271759,-0.656085,-0.704059,-0.271759,-0.517165,-0.828645,-0.214217,-0.549019,-0.828645,-0.109207,-0.656085,-0.704059,-0.271759,-0.549019,-0.828645,-0.109207,-0.696496,-0.704059,-0.138541], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.696496,-0.704059,-0.138541,-0.549019,-0.828645,-0.109207,-0.559775,-0.828645,0.000000,-0.696496,-0.704059,-0.138541,-0.559775,-0.828645,0.000000,-0.710141,-0.704059,0.000000,-0.710141,-0.704059,0.000000,-0.559775,-0.828645,0.000000,-0.549019,-0.828645,0.109207,-0.710141,-0.704059,0.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.549019,-0.828645,0.109207,-0.696496,-0.704059,0.138542,-0.696496,-0.704059,0.138542,-0.549019,-0.828645,0.109207,-0.517165,-0.828645,0.214217,-0.696496,-0.704059,0.138542,-0.517165,-0.828645,0.214217,-0.656085,-0.704059,0.271760,-0.656085,-0.704059,0.271760,-0.517165,-0.828645,0.214217], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.465436,-0.828645,0.310995,-0.656085,-0.704059,0.271760,-0.465436,-0.828645,0.310995,-0.590461,-0.704059,0.394534,-0.590461,-0.704059,0.394534,-0.465436,-0.828645,0.310995,-0.395820,-0.828645,0.395821,-0.590461,-0.704059,0.394534,-0.395820,-0.828645,0.395821,-0.502146,-0.704059,0.502146], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.502146,-0.704059,0.502146,-0.395820,-0.828645,0.395821,-0.310994,-0.828645,0.465436,-0.502146,-0.704059,0.502146,-0.310994,-0.828645,0.465436,-0.394533,-0.704059,0.590461,-0.394533,-0.704059,0.590461,-0.310994,-0.828645,0.465436,-0.214216,-0.828645,0.517165,-0.394533,-0.704059,0.590461], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.214216,-0.828645,0.517165,-0.271759,-0.704059,0.656085,-0.271759,-0.704059,0.656085,-0.214216,-0.828645,0.517165,-0.109206,-0.828645,0.549019,-0.271759,-0.704059,0.656085,-0.109206,-0.828645,0.549019,-0.138541,-0.704059,0.696496,-0.138541,-0.704059,0.696496,-0.109206,-0.828645,0.549019], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000001,-0.828645,0.559775,-0.138541,-0.704059,0.696496,0.000001,-0.828645,0.559775,0.000001,-0.704059,0.710141,0.000001,-0.704059,0.710141,0.000001,-0.828645,0.559775,0.109207,-0.828645,0.549019,0.000001,-0.704059,0.710141,0.109207,-0.828645,0.549019,0.138542,-0.704059,0.696496], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.138542,-0.704059,0.696496,0.109207,-0.828645,0.549019,0.214217,-0.828645,0.517164,0.138542,-0.704059,0.696496,0.214217,-0.828645,0.517164,0.271760,-0.704059,0.656085,0.271760,-0.704059,0.656085,0.214217,-0.828645,0.517164,0.310995,-0.828645,0.465436,0.271760,-0.704059,0.656085], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.310995,-0.828645,0.465436,0.394534,-0.704059,0.590461,0.394534,-0.704059,0.590461,0.310995,-0.828645,0.465436,0.395821,-0.828645,0.395820,0.394534,-0.704059,0.590461,0.395821,-0.828645,0.395820,0.502146,-0.704059,0.502145,0.502146,-0.704059,0.502145,0.395821,-0.828645,0.395820], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.465436,-0.828645,0.310994,0.502146,-0.704059,0.502145,0.465436,-0.828645,0.310994,0.590462,-0.704059,0.394533,0.590462,-0.704059,0.394533,0.465436,-0.828645,0.310994,0.517165,-0.828645,0.214216,0.590462,-0.704059,0.394533,0.517165,-0.828645,0.214216,0.656086,-0.704059,0.271758], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.656086,-0.704059,0.271758,0.517165,-0.828645,0.214216,0.549019,-0.828645,0.109206,0.656086,-0.704059,0.271758,0.549019,-0.828645,0.109206,0.696496,-0.704059,0.138541,0.696496,-0.704059,0.138541,0.549019,-0.828645,0.109206,0.559775,-0.828645,-0.000001,0.696496,-0.704059,0.138541], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.559775,-0.828645,-0.000001,0.710141,-0.704059,-0.000001,0.710141,-0.704059,-0.000001,0.559775,-0.828645,-0.000001,0.549019,-0.828645,-0.109208,0.710141,-0.704059,-0.000001,0.549019,-0.828645,-0.109208,0.696496,-0.704059,-0.138543,0.696496,-0.704059,-0.138543,0.549019,-0.828645,-0.109208], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.517164,-0.828645,-0.214217,0.696496,-0.704059,-0.138543,0.517164,-0.828645,-0.214217,0.656085,-0.704059,-0.271760,0.656085,-0.704059,-0.271760,0.517164,-0.828645,-0.214217,0.465435,-0.828645,-0.310995,0.656085,-0.704059,-0.271760,0.465435,-0.828645,-0.310995,0.590460,-0.704059,-0.394535], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.590460,-0.704059,-0.394535,0.465435,-0.828645,-0.310995,0.395820,-0.828645,-0.395822,0.590460,-0.704059,-0.394535,0.395820,-0.828645,-0.395822,0.502145,-0.704059,-0.502147,0.502145,-0.704059,-0.502147,0.395820,-0.828645,-0.395822,0.310993,-0.828645,-0.465437,0.502145,-0.704059,-0.502147], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.310993,-0.828645,-0.465437,0.394532,-0.704059,-0.590462,0.394532,-0.704059,-0.590462,0.310993,-0.828645,-0.465437,0.214216,-0.828645,-0.517165,0.394532,-0.704059,-0.590462,0.214216,-0.828645,-0.517165,0.271758,-0.704059,-0.656086,0.271758,-0.704059,-0.656086,0.214216,-0.828645,-0.517165], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.109206,-0.828645,-0.549019,0.271758,-0.704059,-0.656086,0.109206,-0.828645,-0.549019,0.138540,-0.704059,-0.696497,0.138540,-0.704059,-0.696497,0.109206,-0.828645,-0.549019,-0.000000,-0.828645,-0.559775,0.138540,-0.704059,-0.696497,-0.000000,-0.828645,-0.559775,-0.000000,-0.704059,-0.710141], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.000000,-0.828645,-0.559775,-0.000000,-0.921707,-0.387887,-0.075673,-0.921707,-0.380433,-0.000000,-0.828645,-0.559775,-0.075673,-0.921707,-0.380433,-0.109207,-0.828645,-0.549019,-0.109207,-0.828645,-0.549019,-0.075673,-0.921707,-0.380433,-0.148438,-0.921707,-0.358361,-0.109207,-0.828645,-0.549019], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.148438,-0.921707,-0.358361,-0.214217,-0.828645,-0.517165,-0.214217,-0.828645,-0.517165,-0.148438,-0.921707,-0.358361,-0.215498,-0.921707,-0.322516,-0.214217,-0.828645,-0.517165,-0.215498,-0.921707,-0.322516,-0.310994,-0.828645,-0.465436,-0.310994,-0.828645,-0.465436,-0.215498,-0.921707,-0.322516], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.274277,-0.921707,-0.274277,-0.310994,-0.828645,-0.465436,-0.274277,-0.921707,-0.274277,-0.395821,-0.828645,-0.395821,-0.395821,-0.828645,-0.395821,-0.274277,-0.921707,-0.274277,-0.322516,-0.921707,-0.215498,-0.395821,-0.828645,-0.395821,-0.322516,-0.921707,-0.215498,-0.465436,-0.828645,-0.310994], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.465436,-0.828645,-0.310994,-0.322516,-0.921707,-0.215498,-0.358361,-0.921707,-0.148438,-0.465436,-0.828645,-0.310994,-0.358361,-0.921707,-0.148438,-0.517165,-0.828645,-0.214217,-0.517165,-0.828645,-0.214217,-0.358361,-0.921707,-0.148438,-0.380434,-0.921707,-0.075673,-0.517165,-0.828645,-0.214217], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.380434,-0.921707,-0.075673,-0.549019,-0.828645,-0.109207,-0.549019,-0.828645,-0.109207,-0.380434,-0.921707,-0.075673,-0.387887,-0.921707,0.000000,-0.549019,-0.828645,-0.109207,-0.387887,-0.921707,0.000000,-0.559775,-0.828645,0.000000,-0.559775,-0.828645,0.000000,-0.387887,-0.921707,0.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.380434,-0.921707,0.075673,-0.559775,-0.828645,0.000000,-0.380434,-0.921707,0.075673,-0.549019,-0.828645,0.109207,-0.549019,-0.828645,0.109207,-0.380434,-0.921707,0.075673,-0.358361,-0.921707,0.148438,-0.549019,-0.828645,0.109207,-0.358361,-0.921707,0.148438,-0.517165,-0.828645,0.214217], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.517165,-0.828645,0.214217,-0.358361,-0.921707,0.148438,-0.322516,-0.921707,0.215498,-0.517165,-0.828645,0.214217,-0.322516,-0.921707,0.215498,-0.465436,-0.828645,0.310995,-0.465436,-0.828645,0.310995,-0.322516,-0.921707,0.215498,-0.274277,-0.921707,0.274277,-0.465436,-0.828645,0.310995], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.274277,-0.921707,0.274277,-0.395820,-0.828645,0.395821,-0.395820,-0.828645,0.395821,-0.274277,-0.921707,0.274277,-0.215498,-0.921707,0.322516,-0.395820,-0.828645,0.395821,-0.215498,-0.921707,0.322516,-0.310994,-0.828645,0.465436,-0.310994,-0.828645,0.465436,-0.215498,-0.921707,0.322516], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.148437,-0.921707,0.358361,-0.310994,-0.828645,0.465436,-0.148437,-0.921707,0.358361,-0.214216,-0.828645,0.517165,-0.214216,-0.828645,0.517165,-0.148437,-0.921707,0.358361,-0.075673,-0.921707,0.380434,-0.214216,-0.828645,0.517165,-0.075673,-0.921707,0.380434,-0.109206,-0.828645,0.549019], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.109206,-0.828645,0.549019,-0.075673,-0.921707,0.380434,0.000000,-0.921707,0.387887,-0.109206,-0.828645,0.549019,0.000000,-0.921707,0.387887,0.000001,-0.828645,0.559775,0.000001,-0.828645,0.559775,0.000000,-0.921707,0.387887,0.075673,-0.921707,0.380433,0.000001,-0.828645,0.559775], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.075673,-0.921707,0.380433,0.109207,-0.828645,0.549019,0.109207,-0.828645,0.549019,0.075673,-0.921707,0.380433,0.148438,-0.921707,0.358360,0.109207,-0.828645,0.549019,0.148438,-0.921707,0.358360,0.214217,-0.828645,0.517164,0.214217,-0.828645,0.517164,0.148438,-0.921707,0.358360], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.215499,-0.921707,0.322516,0.214217,-0.828645,0.517164,0.215499,-0.921707,0.322516,0.310995,-0.828645,0.465436,0.310995,-0.828645,0.465436,0.215499,-0.921707,0.322516,0.274278,-0.921707,0.274277,0.310995,-0.828645,0.465436,0.274278,-0.921707,0.274277,0.395821,-0.828645,0.395820], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.395821,-0.828645,0.395820,0.274278,-0.921707,0.274277,0.322516,-0.921707,0.215498,0.395821,-0.828645,0.395820,0.322516,-0.921707,0.215498,0.465436,-0.828645,0.310994,0.465436,-0.828645,0.310994,0.322516,-0.921707,0.215498,0.358361,-0.921707,0.148437,0.465436,-0.828645,0.310994], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.358361,-0.921707,0.148437,0.517165,-0.828645,0.214216,0.517165,-0.828645,0.214216,0.358361,-0.921707,0.148437,0.380434,-0.921707,0.075672,0.517165,-0.828645,0.214216,0.380434,-0.921707,0.075672,0.549019,-0.828645,0.109206,0.549019,-0.828645,0.109206,0.380434,-0.921707,0.075672], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.387887,-0.921707,-0.000001,0.549019,-0.828645,0.109206,0.387887,-0.921707,-0.000001,0.559775,-0.828645,-0.000001,0.559775,-0.828645,-0.000001,0.387887,-0.921707,-0.000001,0.380433,-0.921707,-0.075674,0.559775,-0.828645,-0.000001,0.380433,-0.921707,-0.075674,0.549019,-0.828645,-0.109208], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.549019,-0.828645,-0.109208,0.380433,-0.921707,-0.075674,0.358360,-0.921707,-0.148438,0.549019,-0.828645,-0.109208,0.358360,-0.921707,-0.148438,0.517164,-0.828645,-0.214217,0.517164,-0.828645,-0.214217,0.358360,-0.921707,-0.148438,0.322516,-0.921707,-0.215499,0.517164,-0.828645,-0.214217], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.322516,-0.921707,-0.215499,0.465435,-0.828645,-0.310995,0.465435,-0.828645,-0.310995,0.322516,-0.921707,-0.215499,0.274277,-0.921707,-0.274278,0.465435,-0.828645,-0.310995,0.274277,-0.921707,-0.274278,0.395820,-0.828645,-0.395822,0.395820,-0.828645,-0.395822,0.274277,-0.921707,-0.274278], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.215498,-0.921707,-0.322516,0.395820,-0.828645,-0.395822,0.215498,-0.921707,-0.322516,0.310993,-0.828645,-0.465437,0.310993,-0.828645,-0.465437,0.215498,-0.921707,-0.322516,0.148437,-0.921707,-0.358361,0.310993,-0.828645,-0.465437,0.148437,-0.921707,-0.358361,0.214216,-0.828645,-0.517165], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.214216,-0.828645,-0.517165,0.148437,-0.921707,-0.358361,0.075672,-0.921707,-0.380434,0.214216,-0.828645,-0.517165,0.075672,-0.921707,-0.380434,0.109206,-0.828645,-0.549019,0.109206,-0.828645,-0.549019,0.075672,-0.921707,-0.380434,-0.000000,-0.921707,-0.387887,0.109206,-0.828645,-0.549019], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.000000,-0.921707,-0.387887,-0.000000,-0.828645,-0.559775,-0.000000,-0.921707,-0.387887,-0.000000,-0.979598,-0.200969,-0.039207,-0.979598,-0.197107,-0.000000,-0.921707,-0.387887,-0.039207,-0.979598,-0.197107,-0.075673,-0.921707,-0.380433,-0.075673,-0.921707,-0.380433,-0.039207,-0.979598,-0.197107], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.076907,-0.979598,-0.185671,-0.075673,-0.921707,-0.380433,-0.076907,-0.979598,-0.185671,-0.148438,-0.921707,-0.358361,-0.148438,-0.921707,-0.358361,-0.076907,-0.979598,-0.185671,-0.111652,-0.979598,-0.167099,-0.148438,-0.921707,-0.358361,-0.111652,-0.979598,-0.167099,-0.215498,-0.921707,-0.322516], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.215498,-0.921707,-0.322516,-0.111652,-0.979598,-0.167099,-0.142106,-0.979598,-0.142106,-0.215498,-0.921707,-0.322516,-0.142106,-0.979598,-0.142106,-0.274277,-0.921707,-0.274277,-0.274277,-0.921707,-0.274277,-0.142106,-0.979598,-0.142106,-0.167099,-0.979598,-0.111652,-0.274277,-0.921707,-0.274277], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.167099,-0.979598,-0.111652,-0.322516,-0.921707,-0.215498,-0.322516,-0.921707,-0.215498,-0.167099,-0.979598,-0.111652,-0.185671,-0.979598,-0.076907,-0.322516,-0.921707,-0.215498,-0.185671,-0.979598,-0.076907,-0.358361,-0.921707,-0.148438,-0.358361,-0.921707,-0.148438,-0.185671,-0.979598,-0.076907], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.197107,-0.979598,-0.039207,-0.358361,-0.921707,-0.148438,-0.197107,-0.979598,-0.039207,-0.380434,-0.921707,-0.075673,-0.380434,-0.921707,-0.075673,-0.197107,-0.979598,-0.039207,-0.200969,-0.979598,0.000000,-0.380434,-0.921707,-0.075673,-0.200969,-0.979598,0.000000,-0.387887,-0.921707,0.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.387887,-0.921707,0.000000,-0.200969,-0.979598,0.000000,-0.197107,-0.979598,0.039207,-0.387887,-0.921707,0.000000,-0.197107,-0.979598,0.039207,-0.380434,-0.921707,0.075673,-0.380434,-0.921707,0.075673,-0.197107,-0.979598,0.039207,-0.185671,-0.979598,0.076907,-0.380434,-0.921707,0.075673], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.185671,-0.979598,0.076907,-0.358361,-0.921707,0.148438,-0.358361,-0.921707,0.148438,-0.185671,-0.979598,0.076907,-0.167099,-0.979598,0.111652,-0.358361,-0.921707,0.148438,-0.167099,-0.979598,0.111652,-0.322516,-0.921707,0.215498,-0.322516,-0.921707,0.215498,-0.167099,-0.979598,0.111652], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.142106,-0.979598,0.142106,-0.322516,-0.921707,0.215498,-0.142106,-0.979598,0.142106,-0.274277,-0.921707,0.274277,-0.274277,-0.921707,0.274277,-0.142106,-0.979598,0.142106,-0.111652,-0.979598,0.167099,-0.274277,-0.921707,0.274277,-0.111652,-0.979598,0.167099,-0.215498,-0.921707,0.322516], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.215498,-0.921707,0.322516,-0.111652,-0.979598,0.167099,-0.076907,-0.979598,0.185671,-0.215498,-0.921707,0.322516,-0.076907,-0.979598,0.185671,-0.148437,-0.921707,0.358361,-0.148437,-0.921707,0.358361,-0.076907,-0.979598,0.185671,-0.039207,-0.979598,0.197107,-0.148437,-0.921707,0.358361], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.039207,-0.979598,0.197107,-0.075673,-0.921707,0.380434,-0.075673,-0.921707,0.380434,-0.039207,-0.979598,0.197107,0.000000,-0.979598,0.200969,-0.075673,-0.921707,0.380434,0.000000,-0.979598,0.200969,0.000000,-0.921707,0.387887,0.000000,-0.921707,0.387887,0.000000,-0.979598,0.200969], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.039207,-0.979598,0.197107,0.000000,-0.921707,0.387887,0.039207,-0.979598,0.197107,0.075673,-0.921707,0.380433,0.075673,-0.921707,0.380433,0.039207,-0.979598,0.197107,0.076908,-0.979598,0.185671,0.075673,-0.921707,0.380433,0.076908,-0.979598,0.185671,0.148438,-0.921707,0.358360], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.148438,-0.921707,0.358360,0.076908,-0.979598,0.185671,0.111652,-0.979598,0.167099,0.148438,-0.921707,0.358360,0.111652,-0.979598,0.167099,0.215499,-0.921707,0.322516,0.215499,-0.921707,0.322516,0.111652,-0.979598,0.167099,0.142106,-0.979598,0.142106,0.215499,-0.921707,0.322516], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.142106,-0.979598,0.142106,0.274278,-0.921707,0.274277,0.274278,-0.921707,0.274277,0.142106,-0.979598,0.142106,0.167099,-0.979598,0.111652,0.274278,-0.921707,0.274277,0.167099,-0.979598,0.111652,0.322516,-0.921707,0.215498,0.322516,-0.921707,0.215498,0.167099,-0.979598,0.111652], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.185671,-0.979598,0.076907,0.322516,-0.921707,0.215498,0.185671,-0.979598,0.076907,0.358361,-0.921707,0.148437,0.358361,-0.921707,0.148437,0.185671,-0.979598,0.076907,0.197107,-0.979598,0.039207,0.358361,-0.921707,0.148437,0.197107,-0.979598,0.039207,0.380434,-0.921707,0.075672], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.380434,-0.921707,0.075672,0.197107,-0.979598,0.039207,0.200969,-0.979598,-0.000000,0.380434,-0.921707,0.075672,0.200969,-0.979598,-0.000000,0.387887,-0.921707,-0.000001,0.387887,-0.921707,-0.000001,0.200969,-0.979598,-0.000000,0.197107,-0.979598,-0.039207,0.387887,-0.921707,-0.000001], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.197107,-0.979598,-0.039207,0.380433,-0.921707,-0.075674,0.380433,-0.921707,-0.075674,0.197107,-0.979598,-0.039207,0.185671,-0.979598,-0.076908,0.380433,-0.921707,-0.075674,0.185671,-0.979598,-0.076908,0.358360,-0.921707,-0.148438,0.358360,-0.921707,-0.148438,0.185671,-0.979598,-0.076908], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.167099,-0.979598,-0.111652,0.358360,-0.921707,-0.148438,0.167099,-0.979598,-0.111652,0.322516,-0.921707,-0.215499,0.322516,-0.921707,-0.215499,0.167099,-0.979598,-0.111652,0.142106,-0.979598,-0.142107,0.322516,-0.921707,-0.215499,0.142106,-0.979598,-0.142107,0.274277,-0.921707,-0.274278], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.274277,-0.921707,-0.274278,0.142106,-0.979598,-0.142107,0.111652,-0.979598,-0.167100,0.274277,-0.921707,-0.274278,0.111652,-0.979598,-0.167100,0.215498,-0.921707,-0.322516,0.215498,-0.921707,-0.322516,0.111652,-0.979598,-0.167100,0.076907,-0.979598,-0.185671,0.215498,-0.921707,-0.322516], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.076907,-0.979598,-0.185671,0.148437,-0.921707,-0.358361,0.148437,-0.921707,-0.358361,0.076907,-0.979598,-0.185671,0.039207,-0.979598,-0.197107,0.148437,-0.921707,-0.358361,0.039207,-0.979598,-0.197107,0.075672,-0.921707,-0.380434,0.075672,-0.921707,-0.380434,0.039207,-0.979598,-0.197107], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.000000,-0.979598,-0.200969,0.075672,-0.921707,-0.380434,-0.000000,-0.979598,-0.200969,-0.000000,-0.921707,-0.387887,-0.000000,-1.000000,0.000000,-0.039207,-0.979598,-0.197107,-0.000000,-0.979598,-0.200969,-0.000000,-1.000000,0.000000,-0.076907,-0.979598,-0.185671,-0.039207,-0.979598,-0.197107], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.000000,-1.000000,0.000000,-0.111652,-0.979598,-0.167099,-0.076907,-0.979598,-0.185671,-0.000000,-1.000000,0.000000,-0.142106,-0.979598,-0.142106,-0.111652,-0.979598,-0.167099,-0.000000,-1.000000,0.000000,-0.167099,-0.979598,-0.111652,-0.142106,-0.979598,-0.142106,-0.000000,-1.000000,0.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.185671,-0.979598,-0.076907,-0.167099,-0.979598,-0.111652,-0.000000,-1.000000,0.000000,-0.197107,-0.979598,-0.039207,-0.185671,-0.979598,-0.076907,-0.000000,-1.000000,0.000000,-0.200969,-0.979598,0.000000,-0.197107,-0.979598,-0.039207,-0.000000,-1.000000,0.000000,-0.197107,-0.979598,0.039207], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.200969,-0.979598,0.000000,-0.000000,-1.000000,0.000000,-0.185671,-0.979598,0.076907,-0.197107,-0.979598,0.039207,-0.000000,-1.000000,0.000000,-0.167099,-0.979598,0.111652,-0.185671,-0.979598,0.076907,-0.000000,-1.000000,0.000000,-0.142106,-0.979598,0.142106,-0.167099,-0.979598,0.111652], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.000000,-1.000000,0.000000,-0.111652,-0.979598,0.167099,-0.142106,-0.979598,0.142106,-0.000000,-1.000000,0.000000,-0.076907,-0.979598,0.185671,-0.111652,-0.979598,0.167099,-0.000000,-1.000000,0.000000,-0.039207,-0.979598,0.197107,-0.076907,-0.979598,0.185671,-0.000000,-1.000000,0.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,-0.979598,0.200969,-0.039207,-0.979598,0.197107,-0.000000,-1.000000,0.000000,0.039207,-0.979598,0.197107,0.000000,-0.979598,0.200969,-0.000000,-1.000000,0.000000,0.076908,-0.979598,0.185671,0.039207,-0.979598,0.197107,-0.000000,-1.000000,0.000000,0.111652,-0.979598,0.167099], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.076908,-0.979598,0.185671,-0.000000,-1.000000,0.000000,0.142106,-0.979598,0.142106,0.111652,-0.979598,0.167099,-0.000000,-1.000000,0.000000,0.167099,-0.979598,0.111652,0.142106,-0.979598,0.142106,-0.000000,-1.000000,0.000000,0.185671,-0.979598,0.076907,0.167099,-0.979598,0.111652], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.000000,-1.000000,0.000000,0.197107,-0.979598,0.039207,0.185671,-0.979598,0.076907,-0.000000,-1.000000,0.000000,0.200969,-0.979598,-0.000000,0.197107,-0.979598,0.039207,-0.000000,-1.000000,0.000000,0.197107,-0.979598,-0.039207,0.200969,-0.979598,-0.000000,-0.000000,-1.000000,0.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.185671,-0.979598,-0.076908,0.197107,-0.979598,-0.039207,-0.000000,-1.000000,0.000000,0.167099,-0.979598,-0.111652,0.185671,-0.979598,-0.076908,-0.000000,-1.000000,0.000000,0.142106,-0.979598,-0.142107,0.167099,-0.979598,-0.111652,-0.000000,-1.000000,0.000000,0.111652,-0.979598,-0.167100], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.142106,-0.979598,-0.142107,-0.000000,-1.000000,0.000000,0.076907,-0.979598,-0.185671,0.111652,-0.979598,-0.167100,-0.000000,-1.000000,0.000000,0.039207,-0.979598,-0.197107,0.076907,-0.979598,-0.185671,-0.000000,-1.000000,0.000000,-0.000000,-0.979598,-0.200969,0.039207,-0.979598,-0.197107], Java.type("float[]"))));

	/** Large attribute array: IndexedFaceSet DEF='Sphere002-GEOMETRY' coordIndex field, scene-graph level=5, element #49, 3840 total numbers */
	this.Sphere002_GEOMETRY_5_49_coordIndex = new MFInt32(Java.to([0,1,2,-1,3,4,5,-1,6,7,8,-1,9,10,11,-1,12,13,14,-1,15,16,17,-1,18,19,20,-1,21,22,23,-1,24,25,26,-1,27,28,29,-1,30,31,32,-1,33,34,35,-1,36,37,38,-1,39,40,41,-1,42,43,44,-1,45,46,47,-1,48,49,50,-1,51,52,53,-1,54,55,56,-1,57,58,59,-1,60,61,62,-1,63,64,65,-1,66,67,68,-1,69,70,71,-1,72,73,74,-1,75,76,77,-1,78,79,80,-1,81,82,83,-1,84,85,86,-1,87,88,89,-1,90,91,92,-1,93,94,95,-1,96,97,98,-1,99,100,101,-1,102,103,104,-1,105,106,107,-1,108,109,110,-1,111,112,113,-1,114,115,116,-1,117,118,119,-1,120,121,122,-1,123,124,125,-1,126,127,128,-1,129,130,131,-1,132,133,134,-1,135,136,137,-1,138,139,140,-1,141,142,143,-1,144,145,146,-1,147,148,149,-1,150,151,152,-1,153,154,155,-1,156,157,158,-1,159,160,161,-1,162,163,164,-1,165,166,167,-1,168,169,170,-1,171,172,173,-1,174,175,176,-1,177,178,179,-1,180,181,182,-1,183,184,185,-1,186,187,188,-1,189,190,191,-1,192,193,194,-1,195,196,197,-1,198,199,200,-1,201,202,203,-1,204,205,206,-1,207,208,209,-1,210,211,212,-1,213,214,215,-1,216,217,218,-1,219,220,221,-1,222,223,224,-1,225,226,227,-1,228,229,230,-1,231,232,233,-1,234,235,236,-1,237,238,239,-1,240,241,242,-1,243,244,245,-1,246,247,248,-1,249,250,251,-1,252,253,254,-1,255,256,257,-1,258,259,260,-1,261,262,263,-1,264,265,266,-1,267,268,269,-1,270,271,272,-1,273,274,275,-1,276,277,278,-1,279,280,281,-1,282,283,284,-1,285,286,287,-1,288,289,290,-1,291,292,293,-1,294,295,296,-1,297,298,299,-1,300,301,302,-1,303,304,305,-1,306,307,308,-1,309,310,311,-1,312,313,314,-1,315,316,317,-1,318,319,320,-1,321,322,323,-1,324,325,326,-1,327,328,329,-1,330,331,332,-1,333,334,335,-1,336,337,338,-1,339,340,341,-1,342,343,344,-1,345,346,347,-1,348,349,350,-1,351,352,353,-1,354,355,356,-1,357,358,359,-1,360,361,362,-1,363,364,365,-1,366,367,368,-1,369,370,371,-1,372,373,374,-1,375,376,377,-1,378,379,380,-1,381,382,383,-1,384,385,386,-1,387,388,389,-1,390,391,392,-1,393,394,395,-1,396,397,398,-1,399,400,401,-1,402,403,404,-1,405,406,407,-1,408,409,410,-1,411,412,413,-1,414,415,416,-1,417,418,419,-1,420,421,422,-1,423,424,425,-1,426,427,428,-1,429,430,431,-1,432,433,434,-1,435,436,437,-1,438,439,440,-1,441,442,443,-1,444,445,446,-1,447,448,449,-1,450,451,452,-1,453,454,455,-1,456,457,458,-1,459,460,461,-1,462,463,464,-1,465,466,467,-1,468,469,470,-1,471,472,473,-1,474,475,476,-1,477,478,479,-1,480,481,482,-1,483,484,485,-1,486,487,488,-1,489,490,491,-1,492,493,494,-1,495,496,497,-1,498,499,500,-1,501,502,503,-1,504,505,506,-1,507,508,509,-1,510,511,512,-1,513,514,515,-1,516,517,518,-1,519,520,521,-1,522,523,524,-1,525,526,527,-1,528,529,530,-1,531,532,533,-1,534,535,536,-1,537,538,539,-1,540,541,542,-1,543,544,545,-1,546,547,548,-1,549,550,551,-1,552,553,554,-1,555,556,557,-1,558,559,560,-1,561,562,563,-1,564,565,566,-1,567,568,569,-1,570,571,572,-1,573,574,575,-1,576,577,578,-1,579,580,581,-1,582,583,584,-1,585,586,587,-1,588,589,590,-1,591,592,593,-1,594,595,596,-1,597,598,599,-1,600,601,602,-1,603,604,605,-1,606,607,608,-1,609,610,611,-1,612,613,614,-1,615,616,617,-1,618,619,620,-1,621,622,623,-1,624,625,626,-1,627,628,629,-1,630,631,632,-1,633,634,635,-1,636,637,638,-1,639,640,641,-1,642,643,644,-1,645,646,647,-1,648,649,650,-1,651,652,653,-1,654,655,656,-1,657,658,659,-1,660,661,662,-1,663,664,665,-1,666,667,668,-1,669,670,671,-1,672,673,674,-1,675,676,677,-1,678,679,680,-1,681,682,683,-1,684,685,686,-1,687,688,689,-1,690,691,692,-1,693,694,695,-1,696,697,698,-1,699,700,701,-1,702,703,704,-1,705,706,707,-1,708,709,710,-1,711,712,713,-1,714,715,716,-1,717,718,719,-1,720,721,722,-1,723,724,725,-1,726,727,728,-1,729,730,731,-1,732,733,734,-1,735,736,737,-1,738,739,740,-1,741,742,743,-1,744,745,746,-1,747,748,749,-1,750,751,752,-1,753,754,755,-1,756,757,758,-1,759,760,761,-1,762,763,764,-1,765,766,767,-1,768,769,770,-1,771,772,773,-1,774,775,776,-1,777,778,779,-1,780,781,782,-1,783,784,785,-1,786,787,788,-1,789,790,791,-1,792,793,794,-1,795,796,797,-1,798,799,800,-1,801,802,803,-1,804,805,806,-1,807,808,809,-1,810,811,812,-1,813,814,815,-1,816,817,818,-1,819,820,821,-1,822,823,824,-1,825,826,827,-1,828,829,830,-1,831,832,833,-1,834,835,836,-1,837,838,839,-1,840,841,842,-1,843,844,845,-1,846,847,848,-1,849,850,851,-1,852,853,854,-1,855,856,857,-1,858,859,860,-1,861,862,863,-1,864,865,866,-1,867,868,869,-1,870,871,872,-1,873,874,875,-1,876,877,878,-1,879,880,881,-1,882,883,884,-1,885,886,887,-1,888,889,890,-1,891,892,893,-1,894,895,896,-1,897,898,899,-1,900,901,902,-1,903,904,905,-1,906,907,908,-1,909,910,911,-1,912,913,914,-1,915,916,917,-1,918,919,920,-1,921,922,923,-1,924,925,926,-1,927,928,929,-1,930,931,932,-1,933,934,935,-1,936,937,938,-1,939,940,941,-1,942,943,944,-1,945,946,947,-1,948,949,950,-1,951,952,953,-1,954,955,956,-1,957,958,959,-1,960,961,962,-1,963,964,965,-1,966,967,968,-1,969,970,971,-1,972,973,974,-1,975,976,977,-1,978,979,980,-1,981,982,983,-1,984,985,986,-1,987,988,989,-1,990,991,992,-1,993,994,995,-1,996,997,998,-1,999,1000,1001,-1,1002,1003,1004,-1,1005,1006,1007,-1,1008,1009,1010,-1,1011,1012,1013,-1,1014,1015,1016,-1,1017,1018,1019,-1,1020,1021,1022,-1,1023,1024,1025,-1,1026,1027,1028,-1,1029,1030,1031,-1,1032,1033,1034,-1,1035,1036,1037,-1,1038,1039,1040,-1,1041,1042,1043,-1,1044,1045,1046,-1,1047,1048,1049,-1,1050,1051,1052,-1,1053,1054,1055,-1,1056,1057,1058,-1,1059,1060,1061,-1,1062,1063,1064,-1,1065,1066,1067,-1,1068,1069,1070,-1,1071,1072,1073,-1,1074,1075,1076,-1,1077,1078,1079,-1,1080,1081,1082,-1,1083,1084,1085,-1,1086,1087,1088,-1,1089,1090,1091,-1,1092,1093,1094,-1,1095,1096,1097,-1,1098,1099,1100,-1,1101,1102,1103,-1,1104,1105,1106,-1,1107,1108,1109,-1,1110,1111,1112,-1,1113,1114,1115,-1,1116,1117,1118,-1,1119,1120,1121,-1,1122,1123,1124,-1,1125,1126,1127,-1,1128,1129,1130,-1,1131,1132,1133,-1,1134,1135,1136,-1,1137,1138,1139,-1,1140,1141,1142,-1,1143,1144,1145,-1,1146,1147,1148,-1,1149,1150,1151,-1,1152,1153,1154,-1,1155,1156,1157,-1,1158,1159,1160,-1,1161,1162,1163,-1,1164,1165,1166,-1,1167,1168,1169,-1,1170,1171,1172,-1,1173,1174,1175,-1,1176,1177,1178,-1,1179,1180,1181,-1,1182,1183,1184,-1,1185,1186,1187,-1,1188,1189,1190,-1,1191,1192,1193,-1,1194,1195,1196,-1,1197,1198,1199,-1,1200,1201,1202,-1,1203,1204,1205,-1,1206,1207,1208,-1,1209,1210,1211,-1,1212,1213,1214,-1,1215,1216,1217,-1,1218,1219,1220,-1,1221,1222,1223,-1,1224,1225,1226,-1,1227,1228,1229,-1,1230,1231,1232,-1,1233,1234,1235,-1,1236,1237,1238,-1,1239,1240,1241,-1,1242,1243,1244,-1,1245,1246,1247,-1,1248,1249,1250,-1,1251,1252,1253,-1,1254,1255,1256,-1,1257,1258,1259,-1,1260,1261,1262,-1,1263,1264,1265,-1,1266,1267,1268,-1,1269,1270,1271,-1,1272,1273,1274,-1,1275,1276,1277,-1,1278,1279,1280,-1,1281,1282,1283,-1,1284,1285,1286,-1,1287,1288,1289,-1,1290,1291,1292,-1,1293,1294,1295,-1,1296,1297,1298,-1,1299,1300,1301,-1,1302,1303,1304,-1,1305,1306,1307,-1,1308,1309,1310,-1,1311,1312,1313,-1,1314,1315,1316,-1,1317,1318,1319,-1,1320,1321,1322,-1,1323,1324,1325,-1,1326,1327,1328,-1,1329,1330,1331,-1,1332,1333,1334,-1,1335,1336,1337,-1,1338,1339,1340,-1,1341,1342,1343,-1,1344,1345,1346,-1,1347,1348,1349,-1,1350,1351,1352,-1,1353,1354,1355,-1,1356,1357,1358,-1,1359,1360,1361,-1,1362,1363,1364,-1,1365,1366,1367,-1,1368,1369,1370,-1,1371,1372,1373,-1,1374,1375,1376,-1,1377,1378,1379,-1,1380,1381,1382,-1,1383,1384,1385,-1,1386,1387,1388,-1,1389,1390,1391,-1,1392,1393,1394,-1,1395,1396,1397,-1,1398,1399,1400,-1,1401,1402,1403,-1,1404,1405,1406,-1,1407,1408,1409,-1,1410,1411,1412,-1,1413,1414,1415,-1,1416,1417,1418,-1,1419,1420,1421,-1,1422,1423,1424,-1,1425,1426,1427,-1,1428,1429,1430,-1,1431,1432,1433,-1,1434,1435,1436,-1,1437,1438,1439,-1,1440,1441,1442,-1,1443,1444,1445,-1,1446,1447,1448,-1,1449,1450,1451,-1,1452,1453,1454,-1,1455,1456,1457,-1,1458,1459,1460,-1,1461,1462,1463,-1,1464,1465,1466,-1,1467,1468,1469,-1,1470,1471,1472,-1,1473,1474,1475,-1,1476,1477,1478,-1,1479,1480,1481,-1,1482,1483,1484,-1,1485,1486,1487,-1,1488,1489,1490,-1,1491,1492,1493,-1,1494,1495,1496,-1,1497,1498,1499,-1,1500,1501,1502,-1,1503,1504,1505,-1,1506,1507,1508,-1,1509,1510,1511,-1,1512,1513,1514,-1,1515,1516,1517,-1,1518,1519,1520,-1,1521,1522,1523,-1,1524,1525,1526,-1,1527,1528,1529,-1,1530,1531,1532,-1,1533,1534,1535,-1,1536,1537,1538,-1,1539,1540,1541,-1,1542,1543,1544,-1,1545,1546,1547,-1,1548,1549,1550,-1,1551,1552,1553,-1,1554,1555,1556,-1,1557,1558,1559,-1,1560,1561,1562,-1,1563,1564,1565,-1,1566,1567,1568,-1,1569,1570,1571,-1,1572,1573,1574,-1,1575,1576,1577,-1,1578,1579,1580,-1,1581,1582,1583,-1,1584,1585,1586,-1,1587,1588,1589,-1,1590,1591,1592,-1,1593,1594,1595,-1,1596,1597,1598,-1,1599,1600,1601,-1,1602,1603,1604,-1,1605,1606,1607,-1,1608,1609,1610,-1,1611,1612,1613,-1,1614,1615,1616,-1,1617,1618,1619,-1,1620,1621,1622,-1,1623,1624,1625,-1,1626,1627,1628,-1,1629,1630,1631,-1,1632,1633,1634,-1,1635,1636,1637,-1,1638,1639,1640,-1,1641,1642,1643,-1,1644,1645,1646,-1,1647,1648,1649,-1,1650,1651,1652,-1,1653,1654,1655,-1,1656,1657,1658,-1,1659,1660,1661,-1,1662,1663,1664,-1,1665,1666,1667,-1,1668,1669,1670,-1,1671,1672,1673,-1,1674,1675,1676,-1,1677,1678,1679,-1,1680,1681,1682,-1,1683,1684,1685,-1,1686,1687,1688,-1,1689,1690,1691,-1,1692,1693,1694,-1,1695,1696,1697,-1,1698,1699,1700,-1,1701,1702,1703,-1,1704,1705,1706,-1,1707,1708,1709,-1,1710,1711,1712,-1,1713,1714,1715,-1,1716,1717,1718,-1,1719,1720,1721,-1,1722,1723,1724,-1,1725,1726,1727,-1,1728,1729,1730,-1,1731,1732,1733,-1,1734,1735,1736,-1,1737,1738,1739,-1,1740,1741,1742,-1,1743,1744,1745,-1,1746,1747,1748,-1,1749,1750,1751,-1,1752,1753,1754,-1,1755,1756,1757,-1,1758,1759,1760,-1,1761,1762,1763,-1,1764,1765,1766,-1,1767,1768,1769,-1,1770,1771,1772,-1,1773,1774,1775,-1,1776,1777,1778,-1,1779,1780,1781,-1,1782,1783,1784,-1,1785,1786,1787,-1,1788,1789,1790,-1,1791,1792,1793,-1,1794,1795,1796,-1,1797,1798,1799,-1,1800,1801,1802,-1,1803,1804,1805,-1,1806,1807,1808,-1,1809,1810,1811,-1,1812,1813,1814,-1,1815,1816,1817,-1,1818,1819,1820,-1,1821,1822,1823,-1,1824,1825,1826,-1,1827,1828,1829,-1,1830,1831,1832,-1,1833,1834,1835,-1,1836,1837,1838,-1,1839,1840,1841,-1,1842,1843,1844,-1,1845,1846,1847,-1,1848,1849,1850,-1,1851,1852,1853,-1,1854,1855,1856,-1,1857,1858,1859,-1,1860,1861,1862,-1,1863,1864,1865,-1,1866,1867,1868,-1,1869,1870,1871,-1,1872,1873,1874,-1,1875,1876,1877,-1,1878,1879,1880,-1,1881,1882,1883,-1,1884,1885,1886,-1,1887,1888,1889,-1,1890,1891,1892,-1,1893,1894,1895,-1,1896,1897,1898,-1,1899,1900,1901,-1,1902,1903,1904,-1,1905,1906,1907,-1,1908,1909,1910,-1,1911,1912,1913,-1,1914,1915,1916,-1,1917,1918,1919,-1,1920,1921,1922,-1,1923,1924,1925,-1,1926,1927,1928,-1,1929,1930,1931,-1,1932,1933,1934,-1,1935,1936,1937,-1,1938,1939,1940,-1,1941,1942,1943,-1,1944,1945,1946,-1,1947,1948,1949,-1,1950,1951,1952,-1,1953,1954,1955,-1,1956,1957,1958,-1,1959,1960,1961,-1,1962,1963,1964,-1,1965,1966,1967,-1,1968,1969,1970,-1,1971,1972,1973,-1,1974,1975,1976,-1,1977,1978,1979,-1,1980,1981,1982,-1,1983,1984,1985,-1,1986,1987,1988,-1,1989,1990,1991,-1,1992,1993,1994,-1,1995,1996,1997,-1,1998,1999,2000,-1,2001,2002,2003,-1,2004,2005,2006,-1,2007,2008,2009,-1,2010,2011,2012,-1,2013,2014,2015,-1,2016,2017,2018,-1,2019,2020,2021,-1,2022,2023,2024,-1,2025,2026,2027,-1,2028,2029,2030,-1,2031,2032,2033,-1,2034,2035,2036,-1,2037,2038,2039,-1,2040,2041,2042,-1,2043,2044,2045,-1,2046,2047,2048,-1,2049,2050,2051,-1,2052,2053,2054,-1,2055,2056,2057,-1,2058,2059,2060,-1,2061,2062,2063,-1,2064,2065,2066,-1,2067,2068,2069,-1,2070,2071,2072,-1,2073,2074,2075,-1,2076,2077,2078,-1,2079,2080,2081,-1,2082,2083,2084,-1,2085,2086,2087,-1,2088,2089,2090,-1,2091,2092,2093,-1,2094,2095,2096,-1,2097,2098,2099,-1,2100,2101,2102,-1,2103,2104,2105,-1,2106,2107,2108,-1,2109,2110,2111,-1,2112,2113,2114,-1,2115,2116,2117,-1,2118,2119,2120,-1,2121,2122,2123,-1,2124,2125,2126,-1,2127,2128,2129,-1,2130,2131,2132,-1,2133,2134,2135,-1,2136,2137,2138,-1,2139,2140,2141,-1,2142,2143,2144,-1,2145,2146,2147,-1,2148,2149,2150,-1,2151,2152,2153,-1,2154,2155,2156,-1,2157,2158,2159,-1,2160,2161,2162,-1,2163,2164,2165,-1,2166,2167,2168,-1,2169,2170,2171,-1,2172,2173,2174,-1,2175,2176,2177,-1,2178,2179,2180,-1,2181,2182,2183,-1,2184,2185,2186,-1,2187,2188,2189,-1,2190,2191,2192,-1,2193,2194,2195,-1,2196,2197,2198,-1,2199,2200,2201,-1,2202,2203,2204,-1,2205,2206,2207,-1,2208,2209,2210,-1,2211,2212,2213,-1,2214,2215,2216,-1,2217,2218,2219,-1,2220,2221,2222,-1,2223,2224,2225,-1,2226,2227,2228,-1,2229,2230,2231,-1,2232,2233,2234,-1,2235,2236,2237,-1,2238,2239,2240,-1,2241,2242,2243,-1,2244,2245,2246,-1,2247,2248,2249,-1,2250,2251,2252,-1,2253,2254,2255,-1,2256,2257,2258,-1,2259,2260,2261,-1,2262,2263,2264,-1,2265,2266,2267,-1,2268,2269,2270,-1,2271,2272,2273,-1,2274,2275,2276,-1,2277,2278,2279,-1,2280,2281,2282,-1,2283,2284,2285,-1,2286,2287,2288,-1,2289,2290,2291,-1,2292,2293,2294,-1,2295,2296,2297,-1,2298,2299,2300,-1,2301,2302,2303,-1,2304,2305,2306,-1,2307,2308,2309,-1,2310,2311,2312,-1,2313,2314,2315,-1,2316,2317,2318,-1,2319,2320,2321,-1,2322,2323,2324,-1,2325,2326,2327,-1,2328,2329,2330,-1,2331,2332,2333,-1,2334,2335,2336,-1,2337,2338,2339,-1,2340,2341,2342,-1,2343,2344,2345,-1,2346,2347,2348,-1,2349,2350,2351,-1,2352,2353,2354,-1,2355,2356,2357,-1,2358,2359,2360,-1,2361,2362,2363,-1,2364,2365,2366,-1,2367,2368,2369,-1,2370,2371,2372,-1,2373,2374,2375,-1,2376,2377,2378,-1,2379,2380,2381,-1,2382,2383,2384,-1,2385,2386,2387,-1,2388,2389,2390,-1,2391,2392,2393,-1,2394,2395,2396,-1,2397,2398,2399,-1,2400,2401,2402,-1,2403,2404,2405,-1,2406,2407,2408,-1,2409,2410,2411,-1,2412,2413,2414,-1,2415,2416,2417,-1,2418,2419,2420,-1,2421,2422,2423,-1,2424,2425,2426,-1,2427,2428,2429,-1,2430,2431,2432,-1,2433,2434,2435,-1,2436,2437,2438,-1,2439,2440,2441,-1,2442,2443,2444,-1,2445,2446,2447,-1,2448,2449,2450,-1,2451,2452,2453,-1,2454,2455,2456,-1,2457,2458,2459,-1,2460,2461,2462,-1,2463,2464,2465,-1,2466,2467,2468,-1,2469,2470,2471,-1,2472,2473,2474,-1,2475,2476,2477,-1,2478,2479,2480,-1,2481,2482,2483,-1,2484,2485,2486,-1,2487,2488,2489,-1,2490,2491,2492,-1,2493,2494,2495,-1,2496,2497,2498,-1,2499,2500,2501,-1,2502,2503,2504,-1,2505,2506,2507,-1,2508,2509,2510,-1,2511,2512,2513,-1,2514,2515,2516,-1,2517,2518,2519,-1,2520,2521,2522,-1,2523,2524,2525,-1,2526,2527,2528,-1,2529,2530,2531,-1,2532,2533,2534,-1,2535,2536,2537,-1,2538,2539,2540,-1,2541,2542,2543,-1,2544,2545,2546,-1,2547,2548,2549,-1,2550,2551,2552,-1,2553,2554,2555,-1,2556,2557,2558,-1,2559,2560,2561,-1,2562,2563,2564,-1,2565,2566,2567,-1,2568,2569,2570,-1,2571,2572,2573,-1,2574,2575,2576,-1,2577,2578,2579,-1,2580,2581,2582,-1,2583,2584,2585,-1,2586,2587,2588,-1,2589,2590,2591,-1,2592,2593,2594,-1,2595,2596,2597,-1,2598,2599,2600,-1,2601,2602,2603,-1,2604,2605,2606,-1,2607,2608,2609,-1,2610,2611,2612,-1,2613,2614,2615,-1,2616,2617,2618,-1,2619,2620,2621,-1,2622,2623,2624,-1,2625,2626,2627,-1,2628,2629,2630,-1,2631,2632,2633,-1,2634,2635,2636,-1,2637,2638,2639,-1,2640,2641,2642,-1,2643,2644,2645,-1,2646,2647,2648,-1,2649,2650,2651,-1,2652,2653,2654,-1,2655,2656,2657,-1,2658,2659,2660,-1,2661,2662,2663,-1,2664,2665,2666,-1,2667,2668,2669,-1,2670,2671,2672,-1,2673,2674,2675,-1,2676,2677,2678,-1,2679,2680,2681,-1,2682,2683,2684,-1,2685,2686,2687,-1,2688,2689,2690,-1,2691,2692,2693,-1,2694,2695,2696,-1,2697,2698,2699,-1,2700,2701,2702,-1,2703,2704,2705,-1,2706,2707,2708,-1,2709,2710,2711,-1,2712,2713,2714,-1,2715,2716,2717,-1,2718,2719,2720,-1,2721,2722,2723,-1,2724,2725,2726,-1,2727,2728,2729,-1,2730,2731,2732,-1,2733,2734,2735,-1,2736,2737,2738,-1,2739,2740,2741,-1,2742,2743,2744,-1,2745,2746,2747,-1,2748,2749,2750,-1,2751,2752,2753,-1,2754,2755,2756,-1,2757,2758,2759,-1,2760,2761,2762,-1,2763,2764,2765,-1,2766,2767,2768,-1,2769,2770,2771,-1,2772,2773,2774,-1,2775,2776,2777,-1,2778,2779,2780,-1,2781,2782,2783,-1,2784,2785,2786,-1,2787,2788,2789,-1,2790,2791,2792,-1,2793,2794,2795,-1,2796,2797,2798,-1,2799,2800,2801,-1,2802,2803,2804,-1,2805,2806,2807,-1,2808,2809,2810,-1,2811,2812,2813,-1,2814,2815,2816,-1,2817,2818,2819,-1,2820,2821,2822,-1,2823,2824,2825,-1,2826,2827,2828,-1,2829,2830,2831,-1,2832,2833,2834,-1,2835,2836,2837,-1,2838,2839,2840,-1,2841,2842,2843,-1,2844,2845,2846,-1,2847,2848,2849,-1,2850,2851,2852,-1,2853,2854,2855,-1,2856,2857,2858,-1,2859,2860,2861,-1,2862,2863,2864,-1,2865,2866,2867,-1,2868,2869,2870,-1,2871,2872,2873,-1,2874,2875,2876,-1,2877,2878,2879,-1], Java.type("int[]")));

	/** Large attribute array: Coordinate point field, scene-graph level=6, element #49, 8640 total numbers made up of 2880 3-tuple values */
	this.Coordinate_6_49_point = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([0.000000,50.000000,0.000000,0.000000,49.039261,-9.754517,-1.903015,49.039261,-9.567078,0.000000,50.000000,0.000000,-1.903015,49.039261,-9.567078,-3.732910,49.039261,-9.012024,0.000000,50.000000,0.000000,-3.732910,49.039261,-9.012024,-5.419312,49.039261,-8.110596,0.000000,50.000000,0.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-5.419312,49.039261,-8.110596,-6.897461,49.039261,-6.897461,0.000000,50.000000,0.000000,-6.897461,49.039261,-6.897461,-8.110596,49.039261,-5.419312,0.000000,50.000000,0.000000,-8.110596,49.039261,-5.419312,-9.012024,49.039261,-3.732910,0.000000,50.000000,0.000000,-9.012024,49.039261,-3.732910], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-9.567078,49.039261,-1.903015,0.000000,50.000000,0.000000,-9.567078,49.039261,-1.903015,-9.754517,49.039261,0.000000,0.000000,50.000000,0.000000,-9.754517,49.039261,0.000000,-9.567078,49.039261,1.903015,0.000000,50.000000,0.000000,-9.567078,49.039261,1.903015,-9.012024,49.039261,3.732910], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,50.000000,0.000000,-9.012024,49.039261,3.732910,-8.110596,49.039261,5.419312,0.000000,50.000000,0.000000,-8.110596,49.039261,5.419312,-6.897461,49.039261,6.897461,0.000000,50.000000,0.000000,-6.897461,49.039261,6.897461,-5.419312,49.039261,8.110596,0.000000,50.000000,0.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-5.419312,49.039261,8.110596,-3.732910,49.039261,9.012024,0.000000,50.000000,0.000000,-3.732910,49.039261,9.012024,-1.903015,49.039261,9.567078,0.000000,50.000000,0.000000,-1.903015,49.039261,9.567078,0.000000,49.039261,9.754517,0.000000,50.000000,0.000000,0.000000,49.039261,9.754517], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([1.903015,49.039261,9.567078,0.000000,50.000000,0.000000,1.903015,49.039261,9.567078,3.732910,49.039261,9.012024,0.000000,50.000000,0.000000,3.732910,49.039261,9.012024,5.419312,49.039261,8.110596,0.000000,50.000000,0.000000,5.419312,49.039261,8.110596,6.897522,49.039261,6.897461], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,50.000000,0.000000,6.897522,49.039261,6.897461,8.110596,49.039261,5.419312,0.000000,50.000000,0.000000,8.110596,49.039261,5.419312,9.012024,49.039261,3.732849,0.000000,50.000000,0.000000,9.012024,49.039261,3.732849,9.567078,49.039261,1.903015,0.000000,50.000000,0.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([9.567078,49.039261,1.903015,9.754517,49.039261,0.000000,0.000000,50.000000,0.000000,9.754517,49.039261,0.000000,9.567078,49.039261,-1.903015,0.000000,50.000000,0.000000,9.567078,49.039261,-1.903015,9.011963,49.039261,-3.732910,0.000000,50.000000,0.000000,9.011963,49.039261,-3.732910], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([8.110596,49.039261,-5.419312,0.000000,50.000000,0.000000,8.110596,49.039261,-5.419312,6.897461,49.039261,-6.897522,0.000000,50.000000,0.000000,6.897461,49.039261,-6.897522,5.419312,49.039261,-8.110596,0.000000,50.000000,0.000000,5.419312,49.039261,-8.110596,3.732849,49.039261,-9.012024], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,50.000000,0.000000,3.732849,49.039261,-9.012024,1.903015,49.039261,-9.567078,0.000000,50.000000,0.000000,1.903015,49.039261,-9.567078,0.000000,49.039261,-9.754517,0.000000,49.039261,-9.754517,0.000000,46.193974,-19.134155,-3.732910,46.193974,-18.766541,0.000000,49.039261,-9.754517], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-3.732910,46.193974,-18.766541,-1.903015,49.039261,-9.567078,-1.903015,49.039261,-9.567078,-3.732910,46.193974,-18.766541,-7.322327,46.193974,-17.677673,-1.903015,49.039261,-9.567078,-7.322327,46.193974,-17.677673,-3.732910,49.039261,-9.012024,-3.732910,49.039261,-9.012024,-7.322327,46.193974,-17.677673], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-10.630371,46.193974,-15.909485,-3.732910,49.039261,-9.012024,-10.630371,46.193974,-15.909485,-5.419312,49.039261,-8.110596,-5.419312,49.039261,-8.110596,-10.630371,46.193974,-15.909485,-13.529907,46.193974,-13.529907,-5.419312,49.039261,-8.110596,-13.529907,46.193974,-13.529907,-6.897461,49.039261,-6.897461], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-6.897461,49.039261,-6.897461,-13.529907,46.193974,-13.529907,-15.909485,46.193974,-10.630371,-6.897461,49.039261,-6.897461,-15.909485,46.193974,-10.630371,-8.110596,49.039261,-5.419312,-8.110596,49.039261,-5.419312,-15.909485,46.193974,-10.630371,-17.677673,46.193974,-7.322327,-8.110596,49.039261,-5.419312], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-17.677673,46.193974,-7.322327,-9.012024,49.039261,-3.732910,-9.012024,49.039261,-3.732910,-17.677673,46.193974,-7.322327,-18.766541,46.193974,-3.732910,-9.012024,49.039261,-3.732910,-18.766541,46.193974,-3.732910,-9.567078,49.039261,-1.903015,-9.567078,49.039261,-1.903015,-18.766541,46.193974,-3.732910], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-19.134155,46.193974,0.000000,-9.567078,49.039261,-1.903015,-19.134155,46.193974,0.000000,-9.754517,49.039261,0.000000,-9.754517,49.039261,0.000000,-19.134155,46.193974,0.000000,-18.766541,46.193974,3.732910,-9.754517,49.039261,0.000000,-18.766541,46.193974,3.732910,-9.567078,49.039261,1.903015], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-9.567078,49.039261,1.903015,-18.766541,46.193974,3.732910,-17.677673,46.193974,7.322327,-9.567078,49.039261,1.903015,-17.677673,46.193974,7.322327,-9.012024,49.039261,3.732910,-9.012024,49.039261,3.732910,-17.677673,46.193974,7.322327,-15.909485,46.193974,10.630371,-9.012024,49.039261,3.732910], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-15.909485,46.193974,10.630371,-8.110596,49.039261,5.419312,-8.110596,49.039261,5.419312,-15.909485,46.193974,10.630371,-13.529907,46.193974,13.529907,-8.110596,49.039261,5.419312,-13.529907,46.193974,13.529907,-6.897461,49.039261,6.897461,-6.897461,49.039261,6.897461,-13.529907,46.193974,13.529907], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-10.630371,46.193974,15.909485,-6.897461,49.039261,6.897461,-10.630371,46.193974,15.909485,-5.419312,49.039261,8.110596,-5.419312,49.039261,8.110596,-10.630371,46.193974,15.909485,-7.322327,46.193974,17.677673,-5.419312,49.039261,8.110596,-7.322327,46.193974,17.677673,-3.732910,49.039261,9.012024], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-3.732910,49.039261,9.012024,-7.322327,46.193974,17.677673,-3.732849,46.193974,18.766541,-3.732910,49.039261,9.012024,-3.732849,46.193974,18.766541,-1.903015,49.039261,9.567078,-1.903015,49.039261,9.567078,-3.732849,46.193974,18.766541,0.000000,46.193974,19.134155,-1.903015,49.039261,9.567078], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,46.193974,19.134155,0.000000,49.039261,9.754517,0.000000,49.039261,9.754517,0.000000,46.193974,19.134155,3.732910,46.193974,18.766479,0.000000,49.039261,9.754517,3.732910,46.193974,18.766479,1.903015,49.039261,9.567078,1.903015,49.039261,9.567078,3.732910,46.193974,18.766479], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([7.322327,46.193974,17.677673,1.903015,49.039261,9.567078,7.322327,46.193974,17.677673,3.732910,49.039261,9.012024,3.732910,49.039261,9.012024,7.322327,46.193974,17.677673,10.630371,46.193974,15.909485,3.732910,49.039261,9.012024,10.630371,46.193974,15.909485,5.419312,49.039261,8.110596], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([5.419312,49.039261,8.110596,10.630371,46.193974,15.909485,13.529907,46.193974,13.529907,5.419312,49.039261,8.110596,13.529907,46.193974,13.529907,6.897522,49.039261,6.897461,6.897522,49.039261,6.897461,13.529907,46.193974,13.529907,15.909485,46.193974,10.630371,6.897522,49.039261,6.897461], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([15.909485,46.193974,10.630371,8.110596,49.039261,5.419312,8.110596,49.039261,5.419312,15.909485,46.193974,10.630371,17.677673,46.193974,7.322327,8.110596,49.039261,5.419312,17.677673,46.193974,7.322327,9.012024,49.039261,3.732849,9.012024,49.039261,3.732849,17.677673,46.193974,7.322327], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([18.766541,46.193974,3.732849,9.012024,49.039261,3.732849,18.766541,46.193974,3.732849,9.567078,49.039261,1.903015,9.567078,49.039261,1.903015,18.766541,46.193974,3.732849,19.134155,46.193974,-0.000061,9.567078,49.039261,1.903015,19.134155,46.193974,-0.000061,9.754517,49.039261,0.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([9.754517,49.039261,0.000000,19.134155,46.193974,-0.000061,18.766479,46.193974,-3.732910,9.754517,49.039261,0.000000,18.766479,46.193974,-3.732910,9.567078,49.039261,-1.903015,9.567078,49.039261,-1.903015,18.766479,46.193974,-3.732910,17.677673,46.193974,-7.322388,9.567078,49.039261,-1.903015], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([17.677673,46.193974,-7.322388,9.011963,49.039261,-3.732910,9.011963,49.039261,-3.732910,17.677673,46.193974,-7.322388,15.909485,46.193974,-10.630432,9.011963,49.039261,-3.732910,15.909485,46.193974,-10.630432,8.110596,49.039261,-5.419312,8.110596,49.039261,-5.419312,15.909485,46.193974,-10.630432], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([13.529907,46.193974,-13.529907,8.110596,49.039261,-5.419312,13.529907,46.193974,-13.529907,6.897461,49.039261,-6.897522,6.897461,49.039261,-6.897522,13.529907,46.193974,-13.529907,10.630371,46.193974,-15.909485,6.897461,49.039261,-6.897522,10.630371,46.193974,-15.909485,5.419312,49.039261,-8.110596], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([5.419312,49.039261,-8.110596,10.630371,46.193974,-15.909485,7.322266,46.193974,-17.677673,5.419312,49.039261,-8.110596,7.322266,46.193974,-17.677673,3.732849,49.039261,-9.012024,3.732849,49.039261,-9.012024,7.322266,46.193974,-17.677673,3.732849,46.193974,-18.766541,3.732849,49.039261,-9.012024], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([3.732849,46.193974,-18.766541,1.903015,49.039261,-9.567078,1.903015,49.039261,-9.567078,3.732849,46.193974,-18.766541,0.000000,46.193974,-19.134155,1.903015,49.039261,-9.567078,0.000000,46.193974,-19.134155,0.000000,49.039261,-9.754517,0.000000,46.193974,-19.134155,0.000000,41.573479,-27.778503], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-5.419312,41.573479,-27.244751,0.000000,46.193974,-19.134155,-5.419312,41.573479,-27.244751,-3.732910,46.193974,-18.766541,-3.732910,46.193974,-18.766541,-5.419312,41.573479,-27.244751,-10.630371,41.573479,-25.664001,-3.732910,46.193974,-18.766541,-10.630371,41.573479,-25.664001,-7.322327,46.193974,-17.677673], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-7.322327,46.193974,-17.677673,-10.630371,41.573479,-25.664001,-15.432922,41.573479,-23.096985,-7.322327,46.193974,-17.677673,-15.432922,41.573479,-23.096985,-10.630371,46.193974,-15.909485,-10.630371,46.193974,-15.909485,-15.432922,41.573479,-23.096985,-19.642395,41.573479,-19.642395,-10.630371,46.193974,-15.909485], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-19.642395,41.573479,-19.642395,-13.529907,46.193974,-13.529907,-13.529907,46.193974,-13.529907,-19.642395,41.573479,-19.642395,-23.096985,41.573479,-15.432922,-13.529907,46.193974,-13.529907,-23.096985,41.573479,-15.432922,-15.909485,46.193974,-10.630371,-15.909485,46.193974,-10.630371,-23.096985,41.573479,-15.432922], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-25.664001,41.573479,-10.630371,-15.909485,46.193974,-10.630371,-25.664001,41.573479,-10.630371,-17.677673,46.193974,-7.322327,-17.677673,46.193974,-7.322327,-25.664001,41.573479,-10.630371,-27.244751,41.573479,-5.419312,-17.677673,46.193974,-7.322327,-27.244751,41.573479,-5.419312,-18.766541,46.193974,-3.732910], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-18.766541,46.193974,-3.732910,-27.244751,41.573479,-5.419312,-27.778503,41.573479,0.000000,-18.766541,46.193974,-3.732910,-27.778503,41.573479,0.000000,-19.134155,46.193974,0.000000,-19.134155,46.193974,0.000000,-27.778503,41.573479,0.000000,-27.244751,41.573479,5.419312,-19.134155,46.193974,0.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-27.244751,41.573479,5.419312,-18.766541,46.193974,3.732910,-18.766541,46.193974,3.732910,-27.244751,41.573479,5.419312,-25.664001,41.573479,10.630371,-18.766541,46.193974,3.732910,-25.664001,41.573479,10.630371,-17.677673,46.193974,7.322327,-17.677673,46.193974,7.322327,-25.664001,41.573479,10.630371], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-23.096985,41.573479,15.432922,-17.677673,46.193974,7.322327,-23.096985,41.573479,15.432922,-15.909485,46.193974,10.630371,-15.909485,46.193974,10.630371,-23.096985,41.573479,15.432922,-19.642334,41.573479,19.642395,-15.909485,46.193974,10.630371,-19.642334,41.573479,19.642395,-13.529907,46.193974,13.529907], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-13.529907,46.193974,13.529907,-19.642334,41.573479,19.642395,-15.432922,41.573479,23.096985,-13.529907,46.193974,13.529907,-15.432922,41.573479,23.096985,-10.630371,46.193974,15.909485,-10.630371,46.193974,15.909485,-15.432922,41.573479,23.096985,-10.630371,41.573479,25.664001,-10.630371,46.193974,15.909485], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-10.630371,41.573479,25.664001,-7.322327,46.193974,17.677673,-7.322327,46.193974,17.677673,-10.630371,41.573479,25.664001,-5.419312,41.573479,27.244751,-7.322327,46.193974,17.677673,-5.419312,41.573479,27.244751,-3.732849,46.193974,18.766541,-3.732849,46.193974,18.766541,-5.419312,41.573479,27.244751], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,41.573479,27.778503,-3.732849,46.193974,18.766541,0.000000,41.573479,27.778503,0.000000,46.193974,19.134155,0.000000,46.193974,19.134155,0.000000,41.573479,27.778503,5.419373,41.573479,27.244751,0.000000,46.193974,19.134155,5.419373,41.573479,27.244751,3.732910,46.193974,18.766479], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([3.732910,46.193974,18.766479,5.419373,41.573479,27.244751,10.630432,41.573479,25.664001,3.732910,46.193974,18.766479,10.630432,41.573479,25.664001,7.322327,46.193974,17.677673,7.322327,46.193974,17.677673,10.630432,41.573479,25.664001,15.432922,41.573479,23.096985,7.322327,46.193974,17.677673], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([15.432922,41.573479,23.096985,10.630371,46.193974,15.909485,10.630371,46.193974,15.909485,15.432922,41.573479,23.096985,19.642395,41.573479,19.642334,10.630371,46.193974,15.909485,19.642395,41.573479,19.642334,13.529907,46.193974,13.529907,13.529907,46.193974,13.529907,19.642395,41.573479,19.642334], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([23.096985,41.573479,15.432861,13.529907,46.193974,13.529907,23.096985,41.573479,15.432861,15.909485,46.193974,10.630371,15.909485,46.193974,10.630371,23.096985,41.573479,15.432861,25.664001,41.573479,10.630310,15.909485,46.193974,10.630371,25.664001,41.573479,10.630310,17.677673,46.193974,7.322327], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([17.677673,46.193974,7.322327,25.664001,41.573479,10.630310,27.244751,41.573479,5.419250,17.677673,46.193974,7.322327,27.244751,41.573479,5.419250,18.766541,46.193974,3.732849,18.766541,46.193974,3.732849,27.244751,41.573479,5.419250,27.778503,41.573479,-0.000061,18.766541,46.193974,3.732849], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([27.778503,41.573479,-0.000061,19.134155,46.193974,-0.000061,19.134155,46.193974,-0.000061,27.778503,41.573479,-0.000061,27.244751,41.573479,-5.419373,19.134155,46.193974,-0.000061,27.244751,41.573479,-5.419373,18.766479,46.193974,-3.732910,18.766479,46.193974,-3.732910,27.244751,41.573479,-5.419373], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([25.664001,41.573479,-10.630432,18.766479,46.193974,-3.732910,25.664001,41.573479,-10.630432,17.677673,46.193974,-7.322388,17.677673,46.193974,-7.322388,25.664001,41.573479,-10.630432,23.096985,41.573479,-15.432983,17.677673,46.193974,-7.322388,23.096985,41.573479,-15.432983,15.909485,46.193974,-10.630432], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([15.909485,46.193974,-10.630432,23.096985,41.573479,-15.432983,19.642334,41.573479,-19.642395,15.909485,46.193974,-10.630432,19.642334,41.573479,-19.642395,13.529907,46.193974,-13.529907,13.529907,46.193974,-13.529907,19.642334,41.573479,-19.642395,15.432861,41.573479,-23.097046,13.529907,46.193974,-13.529907], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([15.432861,41.573479,-23.097046,10.630371,46.193974,-15.909485,10.630371,46.193974,-15.909485,15.432861,41.573479,-23.097046,10.630310,41.573479,-25.664001,10.630371,46.193974,-15.909485,10.630310,41.573479,-25.664001,7.322266,46.193974,-17.677673,7.322266,46.193974,-17.677673,10.630310,41.573479,-25.664001], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([5.419250,41.573479,-27.244751,7.322266,46.193974,-17.677673,5.419250,41.573479,-27.244751,3.732849,46.193974,-18.766541,3.732849,46.193974,-18.766541,5.419250,41.573479,-27.244751,0.000000,41.573479,-27.778503,3.732849,46.193974,-18.766541,0.000000,41.573479,-27.778503,0.000000,46.193974,-19.134155], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,41.573479,-27.778503,0.000000,35.355339,-35.355347,-6.897461,35.355339,-34.676025,0.000000,41.573479,-27.778503,-6.897461,35.355339,-34.676025,-5.419312,41.573479,-27.244751,-5.419312,41.573479,-27.244751,-6.897461,35.355339,-34.676025,-13.529907,35.355339,-32.664063,-5.419312,41.573479,-27.244751], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-13.529907,35.355339,-32.664063,-10.630371,41.573479,-25.664001,-10.630371,41.573479,-25.664001,-13.529907,35.355339,-32.664063,-19.642395,35.355339,-29.396912,-10.630371,41.573479,-25.664001,-19.642395,35.355339,-29.396912,-15.432922,41.573479,-23.096985,-15.432922,41.573479,-23.096985,-19.642395,35.355339,-29.396912], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-25.000000,35.355339,-25.000000,-15.432922,41.573479,-23.096985,-25.000000,35.355339,-25.000000,-19.642395,41.573479,-19.642395,-19.642395,41.573479,-19.642395,-25.000000,35.355339,-25.000000,-29.396912,35.355339,-19.642395,-19.642395,41.573479,-19.642395,-29.396912,35.355339,-19.642395,-23.096985,41.573479,-15.432922], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-23.096985,41.573479,-15.432922,-29.396912,35.355339,-19.642395,-32.664063,35.355339,-13.529907,-23.096985,41.573479,-15.432922,-32.664063,35.355339,-13.529907,-25.664001,41.573479,-10.630371,-25.664001,41.573479,-10.630371,-32.664063,35.355339,-13.529907,-34.676025,35.355339,-6.897461,-25.664001,41.573479,-10.630371], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-34.676025,35.355339,-6.897461,-27.244751,41.573479,-5.419312,-27.244751,41.573479,-5.419312,-34.676025,35.355339,-6.897461,-35.355347,35.355339,0.000000,-27.244751,41.573479,-5.419312,-35.355347,35.355339,0.000000,-27.778503,41.573479,0.000000,-27.778503,41.573479,0.000000,-35.355347,35.355339,0.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-34.675964,35.355339,6.897522,-27.778503,41.573479,0.000000,-34.675964,35.355339,6.897522,-27.244751,41.573479,5.419312,-27.244751,41.573479,5.419312,-34.675964,35.355339,6.897522,-32.664063,35.355339,13.529907,-27.244751,41.573479,5.419312,-32.664063,35.355339,13.529907,-25.664001,41.573479,10.630371], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-25.664001,41.573479,10.630371,-32.664063,35.355339,13.529907,-29.396851,35.355339,19.642395,-25.664001,41.573479,10.630371,-29.396851,35.355339,19.642395,-23.096985,41.573479,15.432922,-23.096985,41.573479,15.432922,-29.396851,35.355339,19.642395,-25.000000,35.355339,25.000000,-23.096985,41.573479,15.432922], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-25.000000,35.355339,25.000000,-19.642334,41.573479,19.642395,-19.642334,41.573479,19.642395,-25.000000,35.355339,25.000000,-19.642334,35.355339,29.396912,-19.642334,41.573479,19.642395,-19.642334,35.355339,29.396912,-15.432922,41.573479,23.096985,-15.432922,41.573479,23.096985,-19.642334,35.355339,29.396912], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-13.529846,35.355339,32.664063,-15.432922,41.573479,23.096985,-13.529846,35.355339,32.664063,-10.630371,41.573479,25.664001,-10.630371,41.573479,25.664001,-13.529846,35.355339,32.664063,-6.897461,35.355339,34.676025,-10.630371,41.573479,25.664001,-6.897461,35.355339,34.676025,-5.419312,41.573479,27.244751], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-5.419312,41.573479,27.244751,-6.897461,35.355339,34.676025,0.000061,35.355339,35.355347,-5.419312,41.573479,27.244751,0.000061,35.355339,35.355347,0.000000,41.573479,27.778503,0.000000,41.573479,27.778503,0.000061,35.355339,35.355347,6.897522,35.355339,34.675964,0.000000,41.573479,27.778503], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([6.897522,35.355339,34.675964,5.419373,41.573479,27.244751,5.419373,41.573479,27.244751,6.897522,35.355339,34.675964,13.529968,35.355339,32.664063,5.419373,41.573479,27.244751,13.529968,35.355339,32.664063,10.630432,41.573479,25.664001,10.630432,41.573479,25.664001,13.529968,35.355339,32.664063], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([19.642395,35.355339,29.396851,10.630432,41.573479,25.664001,19.642395,35.355339,29.396851,15.432922,41.573479,23.096985,15.432922,41.573479,23.096985,19.642395,35.355339,29.396851,25.000000,35.355339,24.999939,15.432922,41.573479,23.096985,25.000000,35.355339,24.999939,19.642395,41.573479,19.642334], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([19.642395,41.573479,19.642334,25.000000,35.355339,24.999939,29.396912,35.355339,19.642334,19.642395,41.573479,19.642334,29.396912,35.355339,19.642334,23.096985,41.573479,15.432861,23.096985,41.573479,15.432861,29.396912,35.355339,19.642334,32.664063,35.355339,13.529846,23.096985,41.573479,15.432861], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([32.664063,35.355339,13.529846,25.664001,41.573479,10.630310,25.664001,41.573479,10.630310,32.664063,35.355339,13.529846,34.676025,35.355339,6.897461,25.664001,41.573479,10.630310,34.676025,35.355339,6.897461,27.244751,41.573479,5.419250,27.244751,41.573479,5.419250,34.676025,35.355339,6.897461], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([35.355347,35.355339,-0.000061,27.244751,41.573479,5.419250,35.355347,35.355339,-0.000061,27.778503,41.573479,-0.000061,27.778503,41.573479,-0.000061,35.355347,35.355339,-0.000061,34.675964,35.355339,-6.897522,27.778503,41.573479,-0.000061,34.675964,35.355339,-6.897522,27.244751,41.573479,-5.419373], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([27.244751,41.573479,-5.419373,34.675964,35.355339,-6.897522,32.664063,35.355339,-13.529968,27.244751,41.573479,-5.419373,32.664063,35.355339,-13.529968,25.664001,41.573479,-10.630432,25.664001,41.573479,-10.630432,32.664063,35.355339,-13.529968,29.396851,35.355339,-19.642456,25.664001,41.573479,-10.630432], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([29.396851,35.355339,-19.642456,23.096985,41.573479,-15.432983,23.096985,41.573479,-15.432983,29.396851,35.355339,-19.642456,24.999939,35.355339,-25.000061,23.096985,41.573479,-15.432983,24.999939,35.355339,-25.000061,19.642334,41.573479,-19.642395,19.642334,41.573479,-19.642395,24.999939,35.355339,-25.000061], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([19.642334,35.355339,-29.396912,19.642334,41.573479,-19.642395,19.642334,35.355339,-29.396912,15.432861,41.573479,-23.097046,15.432861,41.573479,-23.097046,19.642334,35.355339,-29.396912,13.529846,35.355339,-32.664124,15.432861,41.573479,-23.097046,13.529846,35.355339,-32.664124,10.630310,41.573479,-25.664001], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([10.630310,41.573479,-25.664001,13.529846,35.355339,-32.664124,6.897400,35.355339,-34.676025,10.630310,41.573479,-25.664001,6.897400,35.355339,-34.676025,5.419250,41.573479,-27.244751,5.419250,41.573479,-27.244751,6.897400,35.355339,-34.676025,0.000000,35.355339,-35.355347,5.419250,41.573479,-27.244751], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,35.355339,-35.355347,0.000000,41.573479,-27.778503,0.000000,35.355339,-35.355347,0.000000,27.778509,-41.573486,-8.110596,27.778509,-40.774658,0.000000,35.355339,-35.355347,-8.110596,27.778509,-40.774658,-6.897461,35.355339,-34.676025,-6.897461,35.355339,-34.676025,-8.110596,27.778509,-40.774658], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-15.909485,27.778509,-38.408875,-6.897461,35.355339,-34.676025,-15.909485,27.778509,-38.408875,-13.529907,35.355339,-32.664063,-13.529907,35.355339,-32.664063,-15.909485,27.778509,-38.408875,-23.096985,27.778509,-34.567078,-13.529907,35.355339,-32.664063,-23.096985,27.778509,-34.567078,-19.642395,35.355339,-29.396912], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-19.642395,35.355339,-29.396912,-23.096985,27.778509,-34.567078,-29.396912,27.778509,-29.396912,-19.642395,35.355339,-29.396912,-29.396912,27.778509,-29.396912,-25.000000,35.355339,-25.000000,-25.000000,35.355339,-25.000000,-29.396912,27.778509,-29.396912,-34.567078,27.778509,-23.096985,-25.000000,35.355339,-25.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-34.567078,27.778509,-23.096985,-29.396912,35.355339,-19.642395,-29.396912,35.355339,-19.642395,-34.567078,27.778509,-23.096985,-38.408875,27.778509,-15.909485,-29.396912,35.355339,-19.642395,-38.408875,27.778509,-15.909485,-32.664063,35.355339,-13.529907,-32.664063,35.355339,-13.529907,-38.408875,27.778509,-15.909485], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-40.774658,27.778509,-8.110596,-32.664063,35.355339,-13.529907,-40.774658,27.778509,-8.110596,-34.676025,35.355339,-6.897461,-34.676025,35.355339,-6.897461,-40.774658,27.778509,-8.110596,-41.573486,27.778509,0.000000,-34.676025,35.355339,-6.897461,-41.573486,27.778509,0.000000,-35.355347,35.355339,0.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-35.355347,35.355339,0.000000,-41.573486,27.778509,0.000000,-40.774658,27.778509,8.110596,-35.355347,35.355339,0.000000,-40.774658,27.778509,8.110596,-34.675964,35.355339,6.897522,-34.675964,35.355339,6.897522,-40.774658,27.778509,8.110596,-38.408875,27.778509,15.909485,-34.675964,35.355339,6.897522], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-38.408875,27.778509,15.909485,-32.664063,35.355339,13.529907,-32.664063,35.355339,13.529907,-38.408875,27.778509,15.909485,-34.567078,27.778509,23.096985,-32.664063,35.355339,13.529907,-34.567078,27.778509,23.096985,-29.396851,35.355339,19.642395,-29.396851,35.355339,19.642395,-34.567078,27.778509,23.096985], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-29.396851,27.778509,29.396912,-29.396851,35.355339,19.642395,-29.396851,27.778509,29.396912,-25.000000,35.355339,25.000000,-25.000000,35.355339,25.000000,-29.396851,27.778509,29.396912,-23.096985,27.778509,34.567078,-25.000000,35.355339,25.000000,-23.096985,27.778509,34.567078,-19.642334,35.355339,29.396912], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-19.642334,35.355339,29.396912,-23.096985,27.778509,34.567078,-15.909424,27.778509,38.408936,-19.642334,35.355339,29.396912,-15.909424,27.778509,38.408936,-13.529846,35.355339,32.664063,-13.529846,35.355339,32.664063,-15.909424,27.778509,38.408936,-8.110535,27.778509,40.774658,-13.529846,35.355339,32.664063], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-8.110535,27.778509,40.774658,-6.897461,35.355339,34.676025,-6.897461,35.355339,34.676025,-8.110535,27.778509,40.774658,0.000061,27.778509,41.573486,-6.897461,35.355339,34.676025,0.000061,27.778509,41.573486,0.000061,35.355339,35.355347,0.000061,35.355339,35.355347,0.000061,27.778509,41.573486], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([8.110657,27.778509,40.774658,0.000061,35.355339,35.355347,8.110657,27.778509,40.774658,6.897522,35.355339,34.675964,6.897522,35.355339,34.675964,8.110657,27.778509,40.774658,15.909546,27.778509,38.408875,6.897522,35.355339,34.675964,15.909546,27.778509,38.408875,13.529968,35.355339,32.664063], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([13.529968,35.355339,32.664063,15.909546,27.778509,38.408875,23.097046,27.778509,34.567078,13.529968,35.355339,32.664063,23.097046,27.778509,34.567078,19.642395,35.355339,29.396851,19.642395,35.355339,29.396851,23.097046,27.778509,34.567078,29.396912,27.778509,29.396851,19.642395,35.355339,29.396851], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([29.396912,27.778509,29.396851,25.000000,35.355339,24.999939,25.000000,35.355339,24.999939,29.396912,27.778509,29.396851,34.567139,27.778509,23.096924,25.000000,35.355339,24.999939,34.567139,27.778509,23.096924,29.396912,35.355339,19.642334,29.396912,35.355339,19.642334,34.567139,27.778509,23.096924], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([38.408936,27.778509,15.909424,29.396912,35.355339,19.642334,38.408936,27.778509,15.909424,32.664063,35.355339,13.529846,32.664063,35.355339,13.529846,38.408936,27.778509,15.909424,40.774658,27.778509,8.110535,32.664063,35.355339,13.529846,40.774658,27.778509,8.110535,34.676025,35.355339,6.897461], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([34.676025,35.355339,6.897461,40.774658,27.778509,8.110535,41.573486,27.778509,-0.000061,34.676025,35.355339,6.897461,41.573486,27.778509,-0.000061,35.355347,35.355339,-0.000061,35.355347,35.355339,-0.000061,41.573486,27.778509,-0.000061,40.774658,27.778509,-8.110657,35.355347,35.355339,-0.000061], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([40.774658,27.778509,-8.110657,34.675964,35.355339,-6.897522,34.675964,35.355339,-6.897522,40.774658,27.778509,-8.110657,38.408875,27.778509,-15.909546,34.675964,35.355339,-6.897522,38.408875,27.778509,-15.909546,32.664063,35.355339,-13.529968,32.664063,35.355339,-13.529968,38.408875,27.778509,-15.909546], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([34.567017,27.778509,-23.097046,32.664063,35.355339,-13.529968,34.567017,27.778509,-23.097046,29.396851,35.355339,-19.642456,29.396851,35.355339,-19.642456,34.567017,27.778509,-23.097046,29.396851,27.778509,-29.396973,29.396851,35.355339,-19.642456,29.396851,27.778509,-29.396973,24.999939,35.355339,-25.000061], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([24.999939,35.355339,-25.000061,29.396851,27.778509,-29.396973,23.096924,27.778509,-34.567139,24.999939,35.355339,-25.000061,23.096924,27.778509,-34.567139,19.642334,35.355339,-29.396912,19.642334,35.355339,-29.396912,23.096924,27.778509,-34.567139,15.909424,27.778509,-38.408936,19.642334,35.355339,-29.396912], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([15.909424,27.778509,-38.408936,13.529846,35.355339,-32.664124,13.529846,35.355339,-32.664124,15.909424,27.778509,-38.408936,8.110474,27.778509,-40.774658,13.529846,35.355339,-32.664124,8.110474,27.778509,-40.774658,6.897400,35.355339,-34.676025,6.897400,35.355339,-34.676025,8.110474,27.778509,-40.774658], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,27.778509,-41.573486,6.897400,35.355339,-34.676025,0.000000,27.778509,-41.573486,0.000000,35.355339,-35.355347,0.000000,27.778509,-41.573486,0.000000,19.134171,-46.193970,-9.012024,19.134171,-45.306396,0.000000,27.778509,-41.573486,-9.012024,19.134171,-45.306396,-8.110596,27.778509,-40.774658], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-8.110596,27.778509,-40.774658,-9.012024,19.134171,-45.306396,-17.677673,19.134171,-42.677673,-8.110596,27.778509,-40.774658,-17.677673,19.134171,-42.677673,-15.909485,27.778509,-38.408875,-15.909485,27.778509,-38.408875,-17.677673,19.134171,-42.677673,-25.664001,19.134171,-38.408875,-15.909485,27.778509,-38.408875], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-25.664001,19.134171,-38.408875,-23.096985,27.778509,-34.567078,-23.096985,27.778509,-34.567078,-25.664001,19.134171,-38.408875,-32.664063,19.134171,-32.664063,-23.096985,27.778509,-34.567078,-32.664063,19.134171,-32.664063,-29.396912,27.778509,-29.396912,-29.396912,27.778509,-29.396912,-32.664063,19.134171,-32.664063], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-38.408875,19.134171,-25.664001,-29.396912,27.778509,-29.396912,-38.408875,19.134171,-25.664001,-34.567078,27.778509,-23.096985,-34.567078,27.778509,-23.096985,-38.408875,19.134171,-25.664001,-42.677673,19.134171,-17.677673,-34.567078,27.778509,-23.096985,-42.677673,19.134171,-17.677673,-38.408875,27.778509,-15.909485], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-38.408875,27.778509,-15.909485,-42.677673,19.134171,-17.677673,-45.306396,19.134171,-9.011963,-38.408875,27.778509,-15.909485,-45.306396,19.134171,-9.011963,-40.774658,27.778509,-8.110596,-40.774658,27.778509,-8.110596,-45.306396,19.134171,-9.011963,-46.193970,19.134171,0.000000,-40.774658,27.778509,-8.110596], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-46.193970,19.134171,0.000000,-41.573486,27.778509,0.000000,-41.573486,27.778509,0.000000,-46.193970,19.134171,0.000000,-45.306396,19.134171,9.012024,-41.573486,27.778509,0.000000,-45.306396,19.134171,9.012024,-40.774658,27.778509,8.110596,-40.774658,27.778509,8.110596,-45.306396,19.134171,9.012024], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-42.677673,19.134171,17.677673,-40.774658,27.778509,8.110596,-42.677673,19.134171,17.677673,-38.408875,27.778509,15.909485,-38.408875,27.778509,15.909485,-42.677673,19.134171,17.677673,-38.408875,19.134171,25.664001,-38.408875,27.778509,15.909485,-38.408875,19.134171,25.664001,-34.567078,27.778509,23.096985], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-34.567078,27.778509,23.096985,-38.408875,19.134171,25.664001,-32.664063,19.134171,32.664063,-34.567078,27.778509,23.096985,-32.664063,19.134171,32.664063,-29.396851,27.778509,29.396912,-29.396851,27.778509,29.396912,-32.664063,19.134171,32.664063,-25.663940,19.134171,38.408936,-29.396851,27.778509,29.396912], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-25.663940,19.134171,38.408936,-23.096985,27.778509,34.567078,-23.096985,27.778509,34.567078,-25.663940,19.134171,38.408936,-17.677612,19.134171,42.677673,-23.096985,27.778509,34.567078,-17.677612,19.134171,42.677673,-15.909424,27.778509,38.408936,-15.909424,27.778509,38.408936,-17.677612,19.134171,42.677673], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-9.011963,19.134171,45.306396,-15.909424,27.778509,38.408936,-9.011963,19.134171,45.306396,-8.110535,27.778509,40.774658,-8.110535,27.778509,40.774658,-9.011963,19.134171,45.306396,0.000061,19.134171,46.193970,-8.110535,27.778509,40.774658,0.000061,19.134171,46.193970,0.000061,27.778509,41.573486], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000061,27.778509,41.573486,0.000061,19.134171,46.193970,9.012024,19.134171,45.306335,0.000061,27.778509,41.573486,9.012024,19.134171,45.306335,8.110657,27.778509,40.774658,8.110657,27.778509,40.774658,9.012024,19.134171,45.306335,17.677734,19.134171,42.677673,8.110657,27.778509,40.774658], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([17.677734,19.134171,42.677673,15.909546,27.778509,38.408875,15.909546,27.778509,38.408875,17.677734,19.134171,42.677673,25.664063,19.134171,38.408875,15.909546,27.778509,38.408875,25.664063,19.134171,38.408875,23.097046,27.778509,34.567078,23.097046,27.778509,34.567078,25.664063,19.134171,38.408875], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([32.664124,19.134171,32.664063,23.097046,27.778509,34.567078,32.664124,19.134171,32.664063,29.396912,27.778509,29.396851,29.396912,27.778509,29.396851,32.664124,19.134171,32.664063,38.408936,19.134171,25.663940,29.396912,27.778509,29.396851,38.408936,19.134171,25.663940,34.567139,27.778509,23.096924], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([34.567139,27.778509,23.096924,38.408936,19.134171,25.663940,42.677673,19.134171,17.677612,34.567139,27.778509,23.096924,42.677673,19.134171,17.677612,38.408936,27.778509,15.909424,38.408936,27.778509,15.909424,42.677673,19.134171,17.677612,45.306396,19.134171,9.011902,38.408936,27.778509,15.909424], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([45.306396,19.134171,9.011902,40.774658,27.778509,8.110535,40.774658,27.778509,8.110535,45.306396,19.134171,9.011902,46.193970,19.134171,-0.000061,40.774658,27.778509,8.110535,46.193970,19.134171,-0.000061,41.573486,27.778509,-0.000061,41.573486,27.778509,-0.000061,46.193970,19.134171,-0.000061], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([45.306335,19.134171,-9.012085,41.573486,27.778509,-0.000061,45.306335,19.134171,-9.012085,40.774658,27.778509,-8.110657,40.774658,27.778509,-8.110657,45.306335,19.134171,-9.012085,42.677612,19.134171,-17.677734,40.774658,27.778509,-8.110657,42.677612,19.134171,-17.677734,38.408875,27.778509,-15.909546], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([38.408875,27.778509,-15.909546,42.677612,19.134171,-17.677734,38.408813,19.134171,-25.664063,38.408875,27.778509,-15.909546,38.408813,19.134171,-25.664063,34.567017,27.778509,-23.097046,34.567017,27.778509,-23.097046,38.408813,19.134171,-25.664063,32.664001,19.134171,-32.664124,34.567017,27.778509,-23.097046], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([32.664001,19.134171,-32.664124,29.396851,27.778509,-29.396973,29.396851,27.778509,-29.396973,32.664001,19.134171,-32.664124,25.663940,19.134171,-38.408936,29.396851,27.778509,-29.396973,25.663940,19.134171,-38.408936,23.096924,27.778509,-34.567139,23.096924,27.778509,-34.567139,25.663940,19.134171,-38.408936], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([17.677551,19.134171,-42.677734,23.096924,27.778509,-34.567139,17.677551,19.134171,-42.677734,15.909424,27.778509,-38.408936,15.909424,27.778509,-38.408936,17.677551,19.134171,-42.677734,9.011902,19.134171,-45.306396,15.909424,27.778509,-38.408936,9.011902,19.134171,-45.306396,8.110474,27.778509,-40.774658], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([8.110474,27.778509,-40.774658,9.011902,19.134171,-45.306396,0.000000,19.134171,-46.193970,8.110474,27.778509,-40.774658,0.000000,19.134171,-46.193970,0.000000,27.778509,-41.573486,0.000000,19.134171,-46.193970,0.000000,9.754518,-49.039246,-9.567078,9.754518,-48.096985,0.000000,19.134171,-46.193970], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-9.567078,9.754518,-48.096985,-9.012024,19.134171,-45.306396,-9.012024,19.134171,-45.306396,-9.567078,9.754518,-48.096985,-18.766479,9.754518,-45.306396,-9.012024,19.134171,-45.306396,-18.766479,9.754518,-45.306396,-17.677673,19.134171,-42.677673,-17.677673,19.134171,-42.677673,-18.766479,9.754518,-45.306396], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-27.244751,9.754518,-40.774658,-17.677673,19.134171,-42.677673,-27.244751,9.754518,-40.774658,-25.664001,19.134171,-38.408875,-25.664001,19.134171,-38.408875,-27.244751,9.754518,-40.774658,-34.676025,9.754518,-34.676025,-25.664001,19.134171,-38.408875,-34.676025,9.754518,-34.676025,-32.664063,19.134171,-32.664063], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-32.664063,19.134171,-32.664063,-34.676025,9.754518,-34.676025,-40.774658,9.754518,-27.244751,-32.664063,19.134171,-32.664063,-40.774658,9.754518,-27.244751,-38.408875,19.134171,-25.664001,-38.408875,19.134171,-25.664001,-40.774658,9.754518,-27.244751,-45.306396,9.754518,-18.766479,-38.408875,19.134171,-25.664001], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-45.306396,9.754518,-18.766479,-42.677673,19.134171,-17.677673,-42.677673,19.134171,-17.677673,-45.306396,9.754518,-18.766479,-48.096985,9.754518,-9.567078,-42.677673,19.134171,-17.677673,-48.096985,9.754518,-9.567078,-45.306396,19.134171,-9.011963,-45.306396,19.134171,-9.011963,-48.096985,9.754518,-9.567078], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-49.039246,9.754518,0.000000,-45.306396,19.134171,-9.011963,-49.039246,9.754518,0.000000,-46.193970,19.134171,0.000000,-46.193970,19.134171,0.000000,-49.039246,9.754518,0.000000,-48.096985,9.754518,9.567078,-46.193970,19.134171,0.000000,-48.096985,9.754518,9.567078,-45.306396,19.134171,9.012024], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-45.306396,19.134171,9.012024,-48.096985,9.754518,9.567078,-45.306335,9.754518,18.766541,-45.306396,19.134171,9.012024,-45.306335,9.754518,18.766541,-42.677673,19.134171,17.677673,-42.677673,19.134171,17.677673,-45.306335,9.754518,18.766541,-40.774658,9.754518,27.244751,-42.677673,19.134171,17.677673], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-40.774658,9.754518,27.244751,-38.408875,19.134171,25.664001,-38.408875,19.134171,25.664001,-40.774658,9.754518,27.244751,-34.675964,9.754518,34.676025,-38.408875,19.134171,25.664001,-34.675964,9.754518,34.676025,-32.664063,19.134171,32.664063,-32.664063,19.134171,32.664063,-34.675964,9.754518,34.676025], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-27.244751,9.754518,40.774658,-32.664063,19.134171,32.664063,-27.244751,9.754518,40.774658,-25.663940,19.134171,38.408936,-25.663940,19.134171,38.408936,-27.244751,9.754518,40.774658,-18.766479,9.754518,45.306396,-25.663940,19.134171,38.408936,-18.766479,9.754518,45.306396,-17.677612,19.134171,42.677673], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-17.677612,19.134171,42.677673,-18.766479,9.754518,45.306396,-9.567017,9.754518,48.096985,-17.677612,19.134171,42.677673,-9.567017,9.754518,48.096985,-9.011963,19.134171,45.306396,-9.011963,19.134171,45.306396,-9.567017,9.754518,48.096985,0.000061,9.754518,49.039246,-9.011963,19.134171,45.306396], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000061,9.754518,49.039246,0.000061,19.134171,46.193970,0.000061,19.134171,46.193970,0.000061,9.754518,49.039246,9.567139,9.754518,48.096985,0.000061,19.134171,46.193970,9.567139,9.754518,48.096985,9.012024,19.134171,45.306335,9.012024,19.134171,45.306335,9.567139,9.754518,48.096985], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([18.766541,9.754518,45.306335,9.012024,19.134171,45.306335,18.766541,9.754518,45.306335,17.677734,19.134171,42.677673,17.677734,19.134171,42.677673,18.766541,9.754518,45.306335,27.244812,9.754518,40.774597,17.677734,19.134171,42.677673,27.244812,9.754518,40.774597,25.664063,19.134171,38.408875], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([25.664063,19.134171,38.408875,27.244812,9.754518,40.774597,34.676025,9.754518,34.675964,25.664063,19.134171,38.408875,34.676025,9.754518,34.675964,32.664124,19.134171,32.664063,32.664124,19.134171,32.664063,34.676025,9.754518,34.675964,40.774719,9.754518,27.244690,32.664124,19.134171,32.664063], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([40.774719,9.754518,27.244690,38.408936,19.134171,25.663940,38.408936,19.134171,25.663940,40.774719,9.754518,27.244690,45.306396,9.754518,18.766418,38.408936,19.134171,25.663940,45.306396,9.754518,18.766418,42.677673,19.134171,17.677612,42.677673,19.134171,17.677612,45.306396,9.754518,18.766418], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([48.096985,9.754518,9.567017,42.677673,19.134171,17.677612,48.096985,9.754518,9.567017,45.306396,19.134171,9.011902,45.306396,19.134171,9.011902,48.096985,9.754518,9.567017,49.039246,9.754518,-0.000061,45.306396,19.134171,9.011902,49.039246,9.754518,-0.000061,46.193970,19.134171,-0.000061], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([46.193970,19.134171,-0.000061,49.039246,9.754518,-0.000061,48.096985,9.754518,-9.567139,46.193970,19.134171,-0.000061,48.096985,9.754518,-9.567139,45.306335,19.134171,-9.012085,45.306335,19.134171,-9.012085,48.096985,9.754518,-9.567139,45.306335,9.754518,-18.766602,45.306335,19.134171,-9.012085], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([45.306335,9.754518,-18.766602,42.677612,19.134171,-17.677734,42.677612,19.134171,-17.677734,45.306335,9.754518,-18.766602,40.774597,9.754518,-27.244812,42.677612,19.134171,-17.677734,40.774597,9.754518,-27.244812,38.408813,19.134171,-25.664063,38.408813,19.134171,-25.664063,40.774597,9.754518,-27.244812], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([34.675903,9.754518,-34.676086,38.408813,19.134171,-25.664063,34.675903,9.754518,-34.676086,32.664001,19.134171,-32.664124,32.664001,19.134171,-32.664124,34.675903,9.754518,-34.676086,27.244690,9.754518,-40.774719,32.664001,19.134171,-32.664124,27.244690,9.754518,-40.774719,25.663940,19.134171,-38.408936], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([25.663940,19.134171,-38.408936,27.244690,9.754518,-40.774719,18.766418,9.754518,-45.306396,25.663940,19.134171,-38.408936,18.766418,9.754518,-45.306396,17.677551,19.134171,-42.677734,17.677551,19.134171,-42.677734,18.766418,9.754518,-45.306396,9.566956,9.754518,-48.096985,17.677551,19.134171,-42.677734], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([9.566956,9.754518,-48.096985,9.011902,19.134171,-45.306396,9.011902,19.134171,-45.306396,9.566956,9.754518,-48.096985,0.000000,9.754518,-49.039246,9.011902,19.134171,-45.306396,0.000000,9.754518,-49.039246,0.000000,19.134171,-46.193970,0.000000,9.754518,-49.039246,0.000000,0.000004,-50.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-9.754517,0.000004,-49.039246,0.000000,9.754518,-49.039246,-9.754517,0.000004,-49.039246,-9.567078,9.754518,-48.096985,-9.567078,9.754518,-48.096985,-9.754517,0.000004,-49.039246,-19.134155,0.000004,-46.193970,-9.567078,9.754518,-48.096985,-19.134155,0.000004,-46.193970,-18.766479,9.754518,-45.306396], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-18.766479,9.754518,-45.306396,-19.134155,0.000004,-46.193970,-27.778503,0.000004,-41.573486,-18.766479,9.754518,-45.306396,-27.778503,0.000004,-41.573486,-27.244751,9.754518,-40.774658,-27.244751,9.754518,-40.774658,-27.778503,0.000004,-41.573486,-35.355347,0.000004,-35.355347,-27.244751,9.754518,-40.774658], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-35.355347,0.000004,-35.355347,-34.676025,9.754518,-34.676025,-34.676025,9.754518,-34.676025,-35.355347,0.000004,-35.355347,-41.573486,0.000004,-27.778503,-34.676025,9.754518,-34.676025,-41.573486,0.000004,-27.778503,-40.774658,9.754518,-27.244751,-40.774658,9.754518,-27.244751,-41.573486,0.000004,-27.778503], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-46.193970,0.000004,-19.134155,-40.774658,9.754518,-27.244751,-46.193970,0.000004,-19.134155,-45.306396,9.754518,-18.766479,-45.306396,9.754518,-18.766479,-46.193970,0.000004,-19.134155,-49.039246,0.000004,-9.754517,-45.306396,9.754518,-18.766479,-49.039246,0.000004,-9.754517,-48.096985,9.754518,-9.567078], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-48.096985,9.754518,-9.567078,-49.039246,0.000004,-9.754517,-50.000000,0.000004,0.000000,-48.096985,9.754518,-9.567078,-50.000000,0.000004,0.000000,-49.039246,9.754518,0.000000,-49.039246,9.754518,0.000000,-50.000000,0.000004,0.000000,-49.039246,0.000004,9.754517,-49.039246,9.754518,0.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-49.039246,0.000004,9.754517,-48.096985,9.754518,9.567078,-48.096985,9.754518,9.567078,-49.039246,0.000004,9.754517,-46.193970,0.000004,19.134216,-48.096985,9.754518,9.567078,-46.193970,0.000004,19.134216,-45.306335,9.754518,18.766541,-45.306335,9.754518,18.766541,-46.193970,0.000004,19.134216], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-41.573486,0.000004,27.778564,-45.306335,9.754518,18.766541,-41.573486,0.000004,27.778564,-40.774658,9.754518,27.244751,-40.774658,9.754518,27.244751,-41.573486,0.000004,27.778564,-35.355347,0.000004,35.355347,-40.774658,9.754518,27.244751,-35.355347,0.000004,35.355347,-34.675964,9.754518,34.676025], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-34.675964,9.754518,34.676025,-35.355347,0.000004,35.355347,-27.778503,0.000004,41.573486,-34.675964,9.754518,34.676025,-27.778503,0.000004,41.573486,-27.244751,9.754518,40.774658,-27.244751,9.754518,40.774658,-27.778503,0.000004,41.573486,-19.134155,0.000004,46.193970,-27.244751,9.754518,40.774658], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-19.134155,0.000004,46.193970,-18.766479,9.754518,45.306396,-18.766479,9.754518,45.306396,-19.134155,0.000004,46.193970,-9.754456,0.000004,49.039246,-18.766479,9.754518,45.306396,-9.754456,0.000004,49.039246,-9.567017,9.754518,48.096985,-9.567017,9.754518,48.096985,-9.754456,0.000004,49.039246], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000061,0.000004,50.000000,-9.567017,9.754518,48.096985,0.000061,0.000004,50.000000,0.000061,9.754518,49.039246,0.000061,9.754518,49.039246,0.000061,0.000004,50.000000,9.754578,0.000004,49.039246,0.000061,9.754518,49.039246,9.754578,0.000004,49.039246,9.567139,9.754518,48.096985], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([9.567139,9.754518,48.096985,9.754578,0.000004,49.039246,19.134216,0.000004,46.193970,9.567139,9.754518,48.096985,19.134216,0.000004,46.193970,18.766541,9.754518,45.306335,18.766541,9.754518,45.306335,19.134216,0.000004,46.193970,27.778564,0.000004,41.573425,18.766541,9.754518,45.306335], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([27.778564,0.000004,41.573425,27.244812,9.754518,40.774597,27.244812,9.754518,40.774597,27.778564,0.000004,41.573425,35.355408,0.000004,35.355286,27.244812,9.754518,40.774597,35.355408,0.000004,35.355286,34.676025,9.754518,34.675964,34.676025,9.754518,34.675964,35.355408,0.000004,35.355286], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([41.573486,0.000004,27.778442,34.676025,9.754518,34.675964,41.573486,0.000004,27.778442,40.774719,9.754518,27.244690,40.774719,9.754518,27.244690,41.573486,0.000004,27.778442,46.194031,0.000004,19.134094,40.774719,9.754518,27.244690,46.194031,0.000004,19.134094,45.306396,9.754518,18.766418], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([45.306396,9.754518,18.766418,46.194031,0.000004,19.134094,49.039307,0.000004,9.754456,45.306396,9.754518,18.766418,49.039307,0.000004,9.754456,48.096985,9.754518,9.567017,48.096985,9.754518,9.567017,49.039307,0.000004,9.754456,50.000000,0.000004,-0.000061,48.096985,9.754518,9.567017], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([50.000000,0.000004,-0.000061,49.039246,9.754518,-0.000061,49.039246,9.754518,-0.000061,50.000000,0.000004,-0.000061,49.039246,0.000004,-9.754578,49.039246,9.754518,-0.000061,49.039246,0.000004,-9.754578,48.096985,9.754518,-9.567139,48.096985,9.754518,-9.567139,49.039246,0.000004,-9.754578], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([46.193970,0.000004,-19.134277,48.096985,9.754518,-9.567139,46.193970,0.000004,-19.134277,45.306335,9.754518,-18.766602,45.306335,9.754518,-18.766602,46.193970,0.000004,-19.134277,41.573425,0.000004,-27.778564,45.306335,9.754518,-18.766602,41.573425,0.000004,-27.778564,40.774597,9.754518,-27.244812], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([40.774597,9.754518,-27.244812,41.573425,0.000004,-27.778564,35.355286,0.000004,-35.355408,40.774597,9.754518,-27.244812,35.355286,0.000004,-35.355408,34.675903,9.754518,-34.676086,34.675903,9.754518,-34.676086,35.355286,0.000004,-35.355408,27.778442,0.000004,-41.573547,34.675903,9.754518,-34.676086], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([27.778442,0.000004,-41.573547,27.244690,9.754518,-40.774719,27.244690,9.754518,-40.774719,27.778442,0.000004,-41.573547,19.134094,0.000004,-46.194031,27.244690,9.754518,-40.774719,19.134094,0.000004,-46.194031,18.766418,9.754518,-45.306396,18.766418,9.754518,-45.306396,19.134094,0.000004,-46.194031], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([9.754395,0.000004,-49.039307,18.766418,9.754518,-45.306396,9.754395,0.000004,-49.039307,9.566956,9.754518,-48.096985,9.566956,9.754518,-48.096985,9.754395,0.000004,-49.039307,0.000000,0.000004,-50.000000,9.566956,9.754518,-48.096985,0.000000,0.000004,-50.000000,0.000000,9.754518,-49.039246], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,0.000004,-50.000000,0.000000,-9.754510,-49.039246,-9.567078,-9.754510,-48.096985,0.000000,0.000004,-50.000000,-9.567078,-9.754510,-48.096985,-9.754517,0.000004,-49.039246,-9.754517,0.000004,-49.039246,-9.567078,-9.754510,-48.096985,-18.766541,-9.754510,-45.306396,-9.754517,0.000004,-49.039246], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-18.766541,-9.754510,-45.306396,-19.134155,0.000004,-46.193970,-19.134155,0.000004,-46.193970,-18.766541,-9.754510,-45.306396,-27.244751,-9.754510,-40.774658,-19.134155,0.000004,-46.193970,-27.244751,-9.754510,-40.774658,-27.778503,0.000004,-41.573486,-27.778503,0.000004,-41.573486,-27.244751,-9.754510,-40.774658], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-34.676025,-9.754510,-34.676025,-27.778503,0.000004,-41.573486,-34.676025,-9.754510,-34.676025,-35.355347,0.000004,-35.355347,-35.355347,0.000004,-35.355347,-34.676025,-9.754510,-34.676025,-40.774658,-9.754510,-27.244751,-35.355347,0.000004,-35.355347,-40.774658,-9.754510,-27.244751,-41.573486,0.000004,-27.778503], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-41.573486,0.000004,-27.778503,-40.774658,-9.754510,-27.244751,-45.306396,-9.754510,-18.766479,-41.573486,0.000004,-27.778503,-45.306396,-9.754510,-18.766479,-46.193970,0.000004,-19.134155,-46.193970,0.000004,-19.134155,-45.306396,-9.754510,-18.766479,-48.096985,-9.754510,-9.567078,-46.193970,0.000004,-19.134155], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-48.096985,-9.754510,-9.567078,-49.039246,0.000004,-9.754517,-49.039246,0.000004,-9.754517,-48.096985,-9.754510,-9.567078,-49.039246,-9.754510,0.000000,-49.039246,0.000004,-9.754517,-49.039246,-9.754510,0.000000,-50.000000,0.000004,0.000000,-50.000000,0.000004,0.000000,-49.039246,-9.754510,0.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-48.096985,-9.754510,9.567078,-50.000000,0.000004,0.000000,-48.096985,-9.754510,9.567078,-49.039246,0.000004,9.754517,-49.039246,0.000004,9.754517,-48.096985,-9.754510,9.567078,-45.306335,-9.754510,18.766541,-49.039246,0.000004,9.754517,-45.306335,-9.754510,18.766541,-46.193970,0.000004,19.134216], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-46.193970,0.000004,19.134216,-45.306335,-9.754510,18.766541,-40.774658,-9.754510,27.244751,-46.193970,0.000004,19.134216,-40.774658,-9.754510,27.244751,-41.573486,0.000004,27.778564,-41.573486,0.000004,27.778564,-40.774658,-9.754510,27.244751,-34.675964,-9.754510,34.676025,-41.573486,0.000004,27.778564], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-34.675964,-9.754510,34.676025,-35.355347,0.000004,35.355347,-35.355347,0.000004,35.355347,-34.675964,-9.754510,34.676025,-27.244751,-9.754510,40.774658,-35.355347,0.000004,35.355347,-27.244751,-9.754510,40.774658,-27.778503,0.000004,41.573486,-27.778503,0.000004,41.573486,-27.244751,-9.754510,40.774658], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-18.766479,-9.754510,45.306396,-27.778503,0.000004,41.573486,-18.766479,-9.754510,45.306396,-19.134155,0.000004,46.193970,-19.134155,0.000004,46.193970,-18.766479,-9.754510,45.306396,-9.567017,-9.754510,48.096985,-19.134155,0.000004,46.193970,-9.567017,-9.754510,48.096985,-9.754456,0.000004,49.039246], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-9.754456,0.000004,49.039246,-9.567017,-9.754510,48.096985,0.000061,-9.754510,49.039246,-9.754456,0.000004,49.039246,0.000061,-9.754510,49.039246,0.000061,0.000004,50.000000,0.000061,0.000004,50.000000,0.000061,-9.754510,49.039246,9.567139,-9.754510,48.096985,0.000061,0.000004,50.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([9.567139,-9.754510,48.096985,9.754578,0.000004,49.039246,9.754578,0.000004,49.039246,9.567139,-9.754510,48.096985,18.766541,-9.754510,45.306335,9.754578,0.000004,49.039246,18.766541,-9.754510,45.306335,19.134216,0.000004,46.193970,19.134216,0.000004,46.193970,18.766541,-9.754510,45.306335], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([27.244812,-9.754510,40.774597,19.134216,0.000004,46.193970,27.244812,-9.754510,40.774597,27.778564,0.000004,41.573425,27.778564,0.000004,41.573425,27.244812,-9.754510,40.774597,34.676025,-9.754510,34.675964,27.778564,0.000004,41.573425,34.676025,-9.754510,34.675964,35.355408,0.000004,35.355286], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([35.355408,0.000004,35.355286,34.676025,-9.754510,34.675964,40.774719,-9.754510,27.244690,35.355408,0.000004,35.355286,40.774719,-9.754510,27.244690,41.573486,0.000004,27.778442,41.573486,0.000004,27.778442,40.774719,-9.754510,27.244690,45.306396,-9.754510,18.766479,41.573486,0.000004,27.778442], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([45.306396,-9.754510,18.766479,46.194031,0.000004,19.134094,46.194031,0.000004,19.134094,45.306396,-9.754510,18.766479,48.096985,-9.754510,9.567017,46.194031,0.000004,19.134094,48.096985,-9.754510,9.567017,49.039307,0.000004,9.754456,49.039307,0.000004,9.754456,48.096985,-9.754510,9.567017], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([49.039246,-9.754510,-0.000061,49.039307,0.000004,9.754456,49.039246,-9.754510,-0.000061,50.000000,0.000004,-0.000061,50.000000,0.000004,-0.000061,49.039246,-9.754510,-0.000061,48.096985,-9.754510,-9.567139,50.000000,0.000004,-0.000061,48.096985,-9.754510,-9.567139,49.039246,0.000004,-9.754578], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([49.039246,0.000004,-9.754578,48.096985,-9.754510,-9.567139,45.306335,-9.754510,-18.766602,49.039246,0.000004,-9.754578,45.306335,-9.754510,-18.766602,46.193970,0.000004,-19.134277,46.193970,0.000004,-19.134277,45.306335,-9.754510,-18.766602,40.774597,-9.754510,-27.244812,46.193970,0.000004,-19.134277], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([40.774597,-9.754510,-27.244812,41.573425,0.000004,-27.778564,41.573425,0.000004,-27.778564,40.774597,-9.754510,-27.244812,34.675903,-9.754510,-34.676086,41.573425,0.000004,-27.778564,34.675903,-9.754510,-34.676086,35.355286,0.000004,-35.355408,35.355286,0.000004,-35.355408,34.675903,-9.754510,-34.676086], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([27.244690,-9.754510,-40.774719,35.355286,0.000004,-35.355408,27.244690,-9.754510,-40.774719,27.778442,0.000004,-41.573547,27.778442,0.000004,-41.573547,27.244690,-9.754510,-40.774719,18.766418,-9.754510,-45.306396,27.778442,0.000004,-41.573547,18.766418,-9.754510,-45.306396,19.134094,0.000004,-46.194031], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([19.134094,0.000004,-46.194031,18.766418,-9.754510,-45.306396,9.566956,-9.754510,-48.096985,19.134094,0.000004,-46.194031,9.566956,-9.754510,-48.096985,9.754395,0.000004,-49.039307,9.754395,0.000004,-49.039307,9.566956,-9.754510,-48.096985,0.000000,-9.754510,-49.039246,9.754395,0.000004,-49.039307], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,-9.754510,-49.039246,0.000000,0.000004,-50.000000,0.000000,-9.754510,-49.039246,0.000000,-19.134163,-46.193970,-9.012024,-19.134163,-45.306396,0.000000,-9.754510,-49.039246,-9.012024,-19.134163,-45.306396,-9.567078,-9.754510,-48.096985,-9.567078,-9.754510,-48.096985,-9.012024,-19.134163,-45.306396], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-17.677673,-19.134163,-42.677673,-9.567078,-9.754510,-48.096985,-17.677673,-19.134163,-42.677673,-18.766541,-9.754510,-45.306396,-18.766541,-9.754510,-45.306396,-17.677673,-19.134163,-42.677673,-25.664001,-19.134163,-38.408875,-18.766541,-9.754510,-45.306396,-25.664001,-19.134163,-38.408875,-27.244751,-9.754510,-40.774658], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-27.244751,-9.754510,-40.774658,-25.664001,-19.134163,-38.408875,-32.664063,-19.134163,-32.664063,-27.244751,-9.754510,-40.774658,-32.664063,-19.134163,-32.664063,-34.676025,-9.754510,-34.676025,-34.676025,-9.754510,-34.676025,-32.664063,-19.134163,-32.664063,-38.408875,-19.134163,-25.664001,-34.676025,-9.754510,-34.676025], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-38.408875,-19.134163,-25.664001,-40.774658,-9.754510,-27.244751,-40.774658,-9.754510,-27.244751,-38.408875,-19.134163,-25.664001,-42.677673,-19.134163,-17.677673,-40.774658,-9.754510,-27.244751,-42.677673,-19.134163,-17.677673,-45.306396,-9.754510,-18.766479,-45.306396,-9.754510,-18.766479,-42.677673,-19.134163,-17.677673], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-45.306396,-19.134163,-9.011963,-45.306396,-9.754510,-18.766479,-45.306396,-19.134163,-9.011963,-48.096985,-9.754510,-9.567078,-48.096985,-9.754510,-9.567078,-45.306396,-19.134163,-9.011963,-46.193970,-19.134163,0.000000,-48.096985,-9.754510,-9.567078,-46.193970,-19.134163,0.000000,-49.039246,-9.754510,0.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-49.039246,-9.754510,0.000000,-46.193970,-19.134163,0.000000,-45.306396,-19.134163,9.012024,-49.039246,-9.754510,0.000000,-45.306396,-19.134163,9.012024,-48.096985,-9.754510,9.567078,-48.096985,-9.754510,9.567078,-45.306396,-19.134163,9.012024,-42.677673,-19.134163,17.677673,-48.096985,-9.754510,9.567078], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-42.677673,-19.134163,17.677673,-45.306335,-9.754510,18.766541,-45.306335,-9.754510,18.766541,-42.677673,-19.134163,17.677673,-38.408875,-19.134163,25.664001,-45.306335,-9.754510,18.766541,-38.408875,-19.134163,25.664001,-40.774658,-9.754510,27.244751,-40.774658,-9.754510,27.244751,-38.408875,-19.134163,25.664001], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-32.664063,-19.134163,32.664124,-40.774658,-9.754510,27.244751,-32.664063,-19.134163,32.664124,-34.675964,-9.754510,34.676025,-34.675964,-9.754510,34.676025,-32.664063,-19.134163,32.664124,-25.663940,-19.134163,38.408936,-34.675964,-9.754510,34.676025,-25.663940,-19.134163,38.408936,-27.244751,-9.754510,40.774658], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-27.244751,-9.754510,40.774658,-25.663940,-19.134163,38.408936,-17.677612,-19.134163,42.677673,-27.244751,-9.754510,40.774658,-17.677612,-19.134163,42.677673,-18.766479,-9.754510,45.306396,-18.766479,-9.754510,45.306396,-17.677612,-19.134163,42.677673,-9.011963,-19.134163,45.306396,-18.766479,-9.754510,45.306396], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-9.011963,-19.134163,45.306396,-9.567017,-9.754510,48.096985,-9.567017,-9.754510,48.096985,-9.011963,-19.134163,45.306396,0.000061,-19.134163,46.193970,-9.567017,-9.754510,48.096985,0.000061,-19.134163,46.193970,0.000061,-9.754510,49.039246,0.000061,-9.754510,49.039246,0.000061,-19.134163,46.193970], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([9.012024,-19.134163,45.306335,0.000061,-9.754510,49.039246,9.012024,-19.134163,45.306335,9.567139,-9.754510,48.096985,9.567139,-9.754510,48.096985,9.012024,-19.134163,45.306335,17.677734,-19.134163,42.677673,9.567139,-9.754510,48.096985,17.677734,-19.134163,42.677673,18.766541,-9.754510,45.306335], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([18.766541,-9.754510,45.306335,17.677734,-19.134163,42.677673,25.664063,-19.134163,38.408875,18.766541,-9.754510,45.306335,25.664063,-19.134163,38.408875,27.244812,-9.754510,40.774597,27.244812,-9.754510,40.774597,25.664063,-19.134163,38.408875,32.664124,-19.134163,32.664063,27.244812,-9.754510,40.774597], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([32.664124,-19.134163,32.664063,34.676025,-9.754510,34.675964,34.676025,-9.754510,34.675964,32.664124,-19.134163,32.664063,38.408936,-19.134163,25.663940,34.676025,-9.754510,34.675964,38.408936,-19.134163,25.663940,40.774719,-9.754510,27.244690,40.774719,-9.754510,27.244690,38.408936,-19.134163,25.663940], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([42.677673,-19.134163,17.677612,40.774719,-9.754510,27.244690,42.677673,-19.134163,17.677612,45.306396,-9.754510,18.766479,45.306396,-9.754510,18.766479,42.677673,-19.134163,17.677612,45.306396,-19.134163,9.011902,45.306396,-9.754510,18.766479,45.306396,-19.134163,9.011902,48.096985,-9.754510,9.567017], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([48.096985,-9.754510,9.567017,45.306396,-19.134163,9.011902,46.193970,-19.134163,-0.000061,48.096985,-9.754510,9.567017,46.193970,-19.134163,-0.000061,49.039246,-9.754510,-0.000061,49.039246,-9.754510,-0.000061,46.193970,-19.134163,-0.000061,45.306335,-19.134163,-9.012085,49.039246,-9.754510,-0.000061], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([45.306335,-19.134163,-9.012085,48.096985,-9.754510,-9.567139,48.096985,-9.754510,-9.567139,45.306335,-19.134163,-9.012085,42.677612,-19.134163,-17.677734,48.096985,-9.754510,-9.567139,42.677612,-19.134163,-17.677734,45.306335,-9.754510,-18.766602,45.306335,-9.754510,-18.766602,42.677612,-19.134163,-17.677734], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([38.408813,-19.134163,-25.664063,45.306335,-9.754510,-18.766602,38.408813,-19.134163,-25.664063,40.774597,-9.754510,-27.244812,40.774597,-9.754510,-27.244812,38.408813,-19.134163,-25.664063,32.664001,-19.134163,-32.664124,40.774597,-9.754510,-27.244812,32.664001,-19.134163,-32.664124,34.675903,-9.754510,-34.676086], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([34.675903,-9.754510,-34.676086,32.664001,-19.134163,-32.664124,25.663940,-19.134163,-38.408936,34.675903,-9.754510,-34.676086,25.663940,-19.134163,-38.408936,27.244690,-9.754510,-40.774719,27.244690,-9.754510,-40.774719,25.663940,-19.134163,-38.408936,17.677612,-19.134163,-42.677734,27.244690,-9.754510,-40.774719], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([17.677612,-19.134163,-42.677734,18.766418,-9.754510,-45.306396,18.766418,-9.754510,-45.306396,17.677612,-19.134163,-42.677734,9.011902,-19.134163,-45.306396,18.766418,-9.754510,-45.306396,9.011902,-19.134163,-45.306396,9.566956,-9.754510,-48.096985,9.566956,-9.754510,-48.096985,9.011902,-19.134163,-45.306396], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,-19.134163,-46.193970,9.566956,-9.754510,-48.096985,0.000000,-19.134163,-46.193970,0.000000,-9.754510,-49.039246,0.000000,-19.134163,-46.193970,0.000000,-27.778509,-41.573486,-8.110596,-27.778509,-40.774658,0.000000,-19.134163,-46.193970,-8.110596,-27.778509,-40.774658,-9.012024,-19.134163,-45.306396], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-9.012024,-19.134163,-45.306396,-8.110596,-27.778509,-40.774658,-15.909485,-27.778509,-38.408875,-9.012024,-19.134163,-45.306396,-15.909485,-27.778509,-38.408875,-17.677673,-19.134163,-42.677673,-17.677673,-19.134163,-42.677673,-15.909485,-27.778509,-38.408875,-23.096985,-27.778509,-34.567078,-17.677673,-19.134163,-42.677673], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-23.096985,-27.778509,-34.567078,-25.664001,-19.134163,-38.408875,-25.664001,-19.134163,-38.408875,-23.096985,-27.778509,-34.567078,-29.396912,-27.778509,-29.396912,-25.664001,-19.134163,-38.408875,-29.396912,-27.778509,-29.396912,-32.664063,-19.134163,-32.664063,-32.664063,-19.134163,-32.664063,-29.396912,-27.778509,-29.396912], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-34.567078,-27.778509,-23.096985,-32.664063,-19.134163,-32.664063,-34.567078,-27.778509,-23.096985,-38.408875,-19.134163,-25.664001,-38.408875,-19.134163,-25.664001,-34.567078,-27.778509,-23.096985,-38.408875,-27.778509,-15.909485,-38.408875,-19.134163,-25.664001,-38.408875,-27.778509,-15.909485,-42.677673,-19.134163,-17.677673], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-42.677673,-19.134163,-17.677673,-38.408875,-27.778509,-15.909485,-40.774658,-27.778509,-8.110596,-42.677673,-19.134163,-17.677673,-40.774658,-27.778509,-8.110596,-45.306396,-19.134163,-9.011963,-45.306396,-19.134163,-9.011963,-40.774658,-27.778509,-8.110596,-41.573486,-27.778509,0.000000,-45.306396,-19.134163,-9.011963], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-41.573486,-27.778509,0.000000,-46.193970,-19.134163,0.000000,-46.193970,-19.134163,0.000000,-41.573486,-27.778509,0.000000,-40.774658,-27.778509,8.110596,-46.193970,-19.134163,0.000000,-40.774658,-27.778509,8.110596,-45.306396,-19.134163,9.012024,-45.306396,-19.134163,9.012024,-40.774658,-27.778509,8.110596], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-38.408875,-27.778509,15.909485,-45.306396,-19.134163,9.012024,-38.408875,-27.778509,15.909485,-42.677673,-19.134163,17.677673,-42.677673,-19.134163,17.677673,-38.408875,-27.778509,15.909485,-34.567078,-27.778509,23.096985,-42.677673,-19.134163,17.677673,-34.567078,-27.778509,23.096985,-38.408875,-19.134163,25.664001], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-38.408875,-19.134163,25.664001,-34.567078,-27.778509,23.096985,-29.396851,-27.778509,29.396912,-38.408875,-19.134163,25.664001,-29.396851,-27.778509,29.396912,-32.664063,-19.134163,32.664124,-32.664063,-19.134163,32.664124,-29.396851,-27.778509,29.396912,-23.096985,-27.778509,34.567078,-32.664063,-19.134163,32.664124], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-23.096985,-27.778509,34.567078,-25.663940,-19.134163,38.408936,-25.663940,-19.134163,38.408936,-23.096985,-27.778509,34.567078,-15.909424,-27.778509,38.408936,-25.663940,-19.134163,38.408936,-15.909424,-27.778509,38.408936,-17.677612,-19.134163,42.677673,-17.677612,-19.134163,42.677673,-15.909424,-27.778509,38.408936], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-8.110535,-27.778509,40.774658,-17.677612,-19.134163,42.677673,-8.110535,-27.778509,40.774658,-9.011963,-19.134163,45.306396,-9.011963,-19.134163,45.306396,-8.110535,-27.778509,40.774658,0.000061,-27.778509,41.573486,-9.011963,-19.134163,45.306396,0.000061,-27.778509,41.573486,0.000061,-19.134163,46.193970], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000061,-19.134163,46.193970,0.000061,-27.778509,41.573486,8.110657,-27.778509,40.774658,0.000061,-19.134163,46.193970,8.110657,-27.778509,40.774658,9.012024,-19.134163,45.306335,9.012024,-19.134163,45.306335,8.110657,-27.778509,40.774658,15.909546,-27.778509,38.408875,9.012024,-19.134163,45.306335], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([15.909546,-27.778509,38.408875,17.677734,-19.134163,42.677673,17.677734,-19.134163,42.677673,15.909546,-27.778509,38.408875,23.097046,-27.778509,34.567078,17.677734,-19.134163,42.677673,23.097046,-27.778509,34.567078,25.664063,-19.134163,38.408875,25.664063,-19.134163,38.408875,23.097046,-27.778509,34.567078], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([29.396912,-27.778509,29.396851,25.664063,-19.134163,38.408875,29.396912,-27.778509,29.396851,32.664124,-19.134163,32.664063,32.664124,-19.134163,32.664063,29.396912,-27.778509,29.396851,34.567139,-27.778509,23.096924,32.664124,-19.134163,32.664063,34.567139,-27.778509,23.096924,38.408936,-19.134163,25.663940], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([38.408936,-19.134163,25.663940,34.567139,-27.778509,23.096924,38.408936,-27.778509,15.909424,38.408936,-19.134163,25.663940,38.408936,-27.778509,15.909424,42.677673,-19.134163,17.677612,42.677673,-19.134163,17.677612,38.408936,-27.778509,15.909424,40.774658,-27.778509,8.110535,42.677673,-19.134163,17.677612], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([40.774658,-27.778509,8.110535,45.306396,-19.134163,9.011902,45.306396,-19.134163,9.011902,40.774658,-27.778509,8.110535,41.573486,-27.778509,-0.000061,45.306396,-19.134163,9.011902,41.573486,-27.778509,-0.000061,46.193970,-19.134163,-0.000061,46.193970,-19.134163,-0.000061,41.573486,-27.778509,-0.000061], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([40.774658,-27.778509,-8.110657,46.193970,-19.134163,-0.000061,40.774658,-27.778509,-8.110657,45.306335,-19.134163,-9.012085,45.306335,-19.134163,-9.012085,40.774658,-27.778509,-8.110657,38.408875,-27.778509,-15.909546,45.306335,-19.134163,-9.012085,38.408875,-27.778509,-15.909546,42.677612,-19.134163,-17.677734], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([42.677612,-19.134163,-17.677734,38.408875,-27.778509,-15.909546,34.567017,-27.778509,-23.097046,42.677612,-19.134163,-17.677734,34.567017,-27.778509,-23.097046,38.408813,-19.134163,-25.664063,38.408813,-19.134163,-25.664063,34.567017,-27.778509,-23.097046,29.396851,-27.778509,-29.396973,38.408813,-19.134163,-25.664063], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([29.396851,-27.778509,-29.396973,32.664001,-19.134163,-32.664124,32.664001,-19.134163,-32.664124,29.396851,-27.778509,-29.396973,23.096924,-27.778509,-34.567139,32.664001,-19.134163,-32.664124,23.096924,-27.778509,-34.567139,25.663940,-19.134163,-38.408936,25.663940,-19.134163,-38.408936,23.096924,-27.778509,-34.567139], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([15.909424,-27.778509,-38.408936,25.663940,-19.134163,-38.408936,15.909424,-27.778509,-38.408936,17.677612,-19.134163,-42.677734,17.677612,-19.134163,-42.677734,15.909424,-27.778509,-38.408936,8.110474,-27.778509,-40.774658,17.677612,-19.134163,-42.677734,8.110474,-27.778509,-40.774658,9.011902,-19.134163,-45.306396], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([9.011902,-19.134163,-45.306396,8.110474,-27.778509,-40.774658,0.000000,-27.778509,-41.573486,9.011902,-19.134163,-45.306396,0.000000,-27.778509,-41.573486,0.000000,-19.134163,-46.193970,0.000000,-27.778509,-41.573486,0.000000,-35.355339,-35.355347,-6.897461,-35.355339,-34.676025,0.000000,-27.778509,-41.573486], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-6.897461,-35.355339,-34.676025,-8.110596,-27.778509,-40.774658,-8.110596,-27.778509,-40.774658,-6.897461,-35.355339,-34.676025,-13.529907,-35.355339,-32.664063,-8.110596,-27.778509,-40.774658,-13.529907,-35.355339,-32.664063,-15.909485,-27.778509,-38.408875,-15.909485,-27.778509,-38.408875,-13.529907,-35.355339,-32.664063], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-19.642395,-35.355339,-29.396912,-15.909485,-27.778509,-38.408875,-19.642395,-35.355339,-29.396912,-23.096985,-27.778509,-34.567078,-23.096985,-27.778509,-34.567078,-19.642395,-35.355339,-29.396912,-25.000000,-35.355339,-25.000000,-23.096985,-27.778509,-34.567078,-25.000000,-35.355339,-25.000000,-29.396912,-27.778509,-29.396912], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-29.396912,-27.778509,-29.396912,-25.000000,-35.355339,-25.000000,-29.396912,-35.355339,-19.642395,-29.396912,-27.778509,-29.396912,-29.396912,-35.355339,-19.642395,-34.567078,-27.778509,-23.096985,-34.567078,-27.778509,-23.096985,-29.396912,-35.355339,-19.642395,-32.664063,-35.355339,-13.529907,-34.567078,-27.778509,-23.096985], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-32.664063,-35.355339,-13.529907,-38.408875,-27.778509,-15.909485,-38.408875,-27.778509,-15.909485,-32.664063,-35.355339,-13.529907,-34.676025,-35.355339,-6.897461,-38.408875,-27.778509,-15.909485,-34.676025,-35.355339,-6.897461,-40.774658,-27.778509,-8.110596,-40.774658,-27.778509,-8.110596,-34.676025,-35.355339,-6.897461], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-35.355347,-35.355339,0.000000,-40.774658,-27.778509,-8.110596,-35.355347,-35.355339,0.000000,-41.573486,-27.778509,0.000000,-41.573486,-27.778509,0.000000,-35.355347,-35.355339,0.000000,-34.675964,-35.355339,6.897522,-41.573486,-27.778509,0.000000,-34.675964,-35.355339,6.897522,-40.774658,-27.778509,8.110596], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-40.774658,-27.778509,8.110596,-34.675964,-35.355339,6.897522,-32.664063,-35.355339,13.529907,-40.774658,-27.778509,8.110596,-32.664063,-35.355339,13.529907,-38.408875,-27.778509,15.909485,-38.408875,-27.778509,15.909485,-32.664063,-35.355339,13.529907,-29.396851,-35.355339,19.642395,-38.408875,-27.778509,15.909485], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-29.396851,-35.355339,19.642395,-34.567078,-27.778509,23.096985,-34.567078,-27.778509,23.096985,-29.396851,-35.355339,19.642395,-25.000000,-35.355339,25.000000,-34.567078,-27.778509,23.096985,-25.000000,-35.355339,25.000000,-29.396851,-27.778509,29.396912,-29.396851,-27.778509,29.396912,-25.000000,-35.355339,25.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-19.642334,-35.355339,29.396912,-29.396851,-27.778509,29.396912,-19.642334,-35.355339,29.396912,-23.096985,-27.778509,34.567078,-23.096985,-27.778509,34.567078,-19.642334,-35.355339,29.396912,-13.529846,-35.355339,32.664063,-23.096985,-27.778509,34.567078,-13.529846,-35.355339,32.664063,-15.909424,-27.778509,38.408936], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-15.909424,-27.778509,38.408936,-13.529846,-35.355339,32.664063,-6.897461,-35.355339,34.676025,-15.909424,-27.778509,38.408936,-6.897461,-35.355339,34.676025,-8.110535,-27.778509,40.774658,-8.110535,-27.778509,40.774658,-6.897461,-35.355339,34.676025,0.000061,-35.355339,35.355347,-8.110535,-27.778509,40.774658], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000061,-35.355339,35.355347,0.000061,-27.778509,41.573486,0.000061,-27.778509,41.573486,0.000061,-35.355339,35.355347,6.897522,-35.355339,34.675964,0.000061,-27.778509,41.573486,6.897522,-35.355339,34.675964,8.110657,-27.778509,40.774658,8.110657,-27.778509,40.774658,6.897522,-35.355339,34.675964], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([13.529968,-35.355339,32.664063,8.110657,-27.778509,40.774658,13.529968,-35.355339,32.664063,15.909546,-27.778509,38.408875,15.909546,-27.778509,38.408875,13.529968,-35.355339,32.664063,19.642395,-35.355339,29.396851,15.909546,-27.778509,38.408875,19.642395,-35.355339,29.396851,23.097046,-27.778509,34.567078], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([23.097046,-27.778509,34.567078,19.642395,-35.355339,29.396851,25.000000,-35.355339,24.999939,23.097046,-27.778509,34.567078,25.000000,-35.355339,24.999939,29.396912,-27.778509,29.396851,29.396912,-27.778509,29.396851,25.000000,-35.355339,24.999939,29.396912,-35.355339,19.642334,29.396912,-27.778509,29.396851], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([29.396912,-35.355339,19.642334,34.567139,-27.778509,23.096924,34.567139,-27.778509,23.096924,29.396912,-35.355339,19.642334,32.664063,-35.355339,13.529846,34.567139,-27.778509,23.096924,32.664063,-35.355339,13.529846,38.408936,-27.778509,15.909424,38.408936,-27.778509,15.909424,32.664063,-35.355339,13.529846], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([34.676025,-35.355339,6.897461,38.408936,-27.778509,15.909424,34.676025,-35.355339,6.897461,40.774658,-27.778509,8.110535,40.774658,-27.778509,8.110535,34.676025,-35.355339,6.897461,35.355347,-35.355339,-0.000061,40.774658,-27.778509,8.110535,35.355347,-35.355339,-0.000061,41.573486,-27.778509,-0.000061], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([41.573486,-27.778509,-0.000061,35.355347,-35.355339,-0.000061,34.675964,-35.355339,-6.897522,41.573486,-27.778509,-0.000061,34.675964,-35.355339,-6.897522,40.774658,-27.778509,-8.110657,40.774658,-27.778509,-8.110657,34.675964,-35.355339,-6.897522,32.664063,-35.355339,-13.529968,40.774658,-27.778509,-8.110657], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([32.664063,-35.355339,-13.529968,38.408875,-27.778509,-15.909546,38.408875,-27.778509,-15.909546,32.664063,-35.355339,-13.529968,29.396851,-35.355339,-19.642456,38.408875,-27.778509,-15.909546,29.396851,-35.355339,-19.642456,34.567017,-27.778509,-23.097046,34.567017,-27.778509,-23.097046,29.396851,-35.355339,-19.642456], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([24.999939,-35.355339,-25.000061,34.567017,-27.778509,-23.097046,24.999939,-35.355339,-25.000061,29.396851,-27.778509,-29.396973,29.396851,-27.778509,-29.396973,24.999939,-35.355339,-25.000061,19.642334,-35.355339,-29.396912,29.396851,-27.778509,-29.396973,19.642334,-35.355339,-29.396912,23.096924,-27.778509,-34.567139], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([23.096924,-27.778509,-34.567139,19.642334,-35.355339,-29.396912,13.529846,-35.355339,-32.664124,23.096924,-27.778509,-34.567139,13.529846,-35.355339,-32.664124,15.909424,-27.778509,-38.408936,15.909424,-27.778509,-38.408936,13.529846,-35.355339,-32.664124,6.897400,-35.355339,-34.676025,15.909424,-27.778509,-38.408936], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([6.897400,-35.355339,-34.676025,8.110474,-27.778509,-40.774658,8.110474,-27.778509,-40.774658,6.897400,-35.355339,-34.676025,0.000000,-35.355339,-35.355347,8.110474,-27.778509,-40.774658,0.000000,-35.355339,-35.355347,0.000000,-27.778509,-41.573486,0.000000,-35.355339,-35.355347,0.000000,-41.573483,-27.778503], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-5.419312,-41.573483,-27.244751,0.000000,-35.355339,-35.355347,-5.419312,-41.573483,-27.244751,-6.897461,-35.355339,-34.676025,-6.897461,-35.355339,-34.676025,-5.419312,-41.573483,-27.244751,-10.630371,-41.573483,-25.664001,-6.897461,-35.355339,-34.676025,-10.630371,-41.573483,-25.664001,-13.529907,-35.355339,-32.664063], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-13.529907,-35.355339,-32.664063,-10.630371,-41.573483,-25.664001,-15.432922,-41.573483,-23.096985,-13.529907,-35.355339,-32.664063,-15.432922,-41.573483,-23.096985,-19.642395,-35.355339,-29.396912,-19.642395,-35.355339,-29.396912,-15.432922,-41.573483,-23.096985,-19.642395,-41.573483,-19.642395,-19.642395,-35.355339,-29.396912], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-19.642395,-41.573483,-19.642395,-25.000000,-35.355339,-25.000000,-25.000000,-35.355339,-25.000000,-19.642395,-41.573483,-19.642395,-23.096985,-41.573483,-15.432922,-25.000000,-35.355339,-25.000000,-23.096985,-41.573483,-15.432922,-29.396912,-35.355339,-19.642395,-29.396912,-35.355339,-19.642395,-23.096985,-41.573483,-15.432922], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-25.664001,-41.573483,-10.630371,-29.396912,-35.355339,-19.642395,-25.664001,-41.573483,-10.630371,-32.664063,-35.355339,-13.529907,-32.664063,-35.355339,-13.529907,-25.664001,-41.573483,-10.630371,-27.244751,-41.573483,-5.419312,-32.664063,-35.355339,-13.529907,-27.244751,-41.573483,-5.419312,-34.676025,-35.355339,-6.897461], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-34.676025,-35.355339,-6.897461,-27.244751,-41.573483,-5.419312,-27.778503,-41.573483,0.000000,-34.676025,-35.355339,-6.897461,-27.778503,-41.573483,0.000000,-35.355347,-35.355339,0.000000,-35.355347,-35.355339,0.000000,-27.778503,-41.573483,0.000000,-27.244751,-41.573483,5.419312,-35.355347,-35.355339,0.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-27.244751,-41.573483,5.419312,-34.675964,-35.355339,6.897522,-34.675964,-35.355339,6.897522,-27.244751,-41.573483,5.419312,-25.664001,-41.573483,10.630371,-34.675964,-35.355339,6.897522,-25.664001,-41.573483,10.630371,-32.664063,-35.355339,13.529907,-32.664063,-35.355339,13.529907,-25.664001,-41.573483,10.630371], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-23.096985,-41.573483,15.432922,-32.664063,-35.355339,13.529907,-23.096985,-41.573483,15.432922,-29.396851,-35.355339,19.642395,-29.396851,-35.355339,19.642395,-23.096985,-41.573483,15.432922,-19.642334,-41.573483,19.642395,-29.396851,-35.355339,19.642395,-19.642334,-41.573483,19.642395,-25.000000,-35.355339,25.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-25.000000,-35.355339,25.000000,-19.642334,-41.573483,19.642395,-15.432922,-41.573483,23.096985,-25.000000,-35.355339,25.000000,-15.432922,-41.573483,23.096985,-19.642334,-35.355339,29.396912,-19.642334,-35.355339,29.396912,-15.432922,-41.573483,23.096985,-10.630371,-41.573483,25.664001,-19.642334,-35.355339,29.396912], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-10.630371,-41.573483,25.664001,-13.529846,-35.355339,32.664063,-13.529846,-35.355339,32.664063,-10.630371,-41.573483,25.664001,-5.419312,-41.573483,27.244751,-13.529846,-35.355339,32.664063,-5.419312,-41.573483,27.244751,-6.897461,-35.355339,34.676025,-6.897461,-35.355339,34.676025,-5.419312,-41.573483,27.244751], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,-41.573483,27.778503,-6.897461,-35.355339,34.676025,0.000000,-41.573483,27.778503,0.000061,-35.355339,35.355347,0.000061,-35.355339,35.355347,0.000000,-41.573483,27.778503,5.419373,-41.573483,27.244751,0.000061,-35.355339,35.355347,5.419373,-41.573483,27.244751,6.897522,-35.355339,34.675964], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([6.897522,-35.355339,34.675964,5.419373,-41.573483,27.244751,10.630432,-41.573483,25.664001,6.897522,-35.355339,34.675964,10.630432,-41.573483,25.664001,13.529968,-35.355339,32.664063,13.529968,-35.355339,32.664063,10.630432,-41.573483,25.664001,15.432922,-41.573483,23.096985,13.529968,-35.355339,32.664063], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([15.432922,-41.573483,23.096985,19.642395,-35.355339,29.396851,19.642395,-35.355339,29.396851,15.432922,-41.573483,23.096985,19.642395,-41.573483,19.642334,19.642395,-35.355339,29.396851,19.642395,-41.573483,19.642334,25.000000,-35.355339,24.999939,25.000000,-35.355339,24.999939,19.642395,-41.573483,19.642334], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([23.096985,-41.573483,15.432861,25.000000,-35.355339,24.999939,23.096985,-41.573483,15.432861,29.396912,-35.355339,19.642334,29.396912,-35.355339,19.642334,23.096985,-41.573483,15.432861,25.664001,-41.573483,10.630310,29.396912,-35.355339,19.642334,25.664001,-41.573483,10.630310,32.664063,-35.355339,13.529846], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([32.664063,-35.355339,13.529846,25.664001,-41.573483,10.630310,27.244751,-41.573483,5.419250,32.664063,-35.355339,13.529846,27.244751,-41.573483,5.419250,34.676025,-35.355339,6.897461,34.676025,-35.355339,6.897461,27.244751,-41.573483,5.419250,27.778503,-41.573483,-0.000061,34.676025,-35.355339,6.897461], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([27.778503,-41.573483,-0.000061,35.355347,-35.355339,-0.000061,35.355347,-35.355339,-0.000061,27.778503,-41.573483,-0.000061,27.244751,-41.573483,-5.419373,35.355347,-35.355339,-0.000061,27.244751,-41.573483,-5.419373,34.675964,-35.355339,-6.897522,34.675964,-35.355339,-6.897522,27.244751,-41.573483,-5.419373], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([25.664001,-41.573483,-10.630432,34.675964,-35.355339,-6.897522,25.664001,-41.573483,-10.630432,32.664063,-35.355339,-13.529968,32.664063,-35.355339,-13.529968,25.664001,-41.573483,-10.630432,23.096985,-41.573483,-15.432983,32.664063,-35.355339,-13.529968,23.096985,-41.573483,-15.432983,29.396851,-35.355339,-19.642456], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([29.396851,-35.355339,-19.642456,23.096985,-41.573483,-15.432983,19.642334,-41.573483,-19.642395,29.396851,-35.355339,-19.642456,19.642334,-41.573483,-19.642395,24.999939,-35.355339,-25.000061,24.999939,-35.355339,-25.000061,19.642334,-41.573483,-19.642395,15.432861,-41.573483,-23.097046,24.999939,-35.355339,-25.000061], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([15.432861,-41.573483,-23.097046,19.642334,-35.355339,-29.396912,19.642334,-35.355339,-29.396912,15.432861,-41.573483,-23.097046,10.630310,-41.573483,-25.664001,19.642334,-35.355339,-29.396912,10.630310,-41.573483,-25.664001,13.529846,-35.355339,-32.664124,13.529846,-35.355339,-32.664124,10.630310,-41.573483,-25.664001], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([5.419250,-41.573483,-27.244751,13.529846,-35.355339,-32.664124,5.419250,-41.573483,-27.244751,6.897400,-35.355339,-34.676025,6.897400,-35.355339,-34.676025,5.419250,-41.573483,-27.244751,0.000000,-41.573483,-27.778503,6.897400,-35.355339,-34.676025,0.000000,-41.573483,-27.778503,0.000000,-35.355339,-35.355347], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,-41.573483,-27.778503,0.000000,-46.193981,-19.134155,-3.732910,-46.193981,-18.766479,0.000000,-41.573483,-27.778503,-3.732910,-46.193981,-18.766479,-5.419312,-41.573483,-27.244751,-5.419312,-41.573483,-27.244751,-3.732910,-46.193981,-18.766479,-7.322327,-46.193981,-17.677673,-5.419312,-41.573483,-27.244751], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-7.322327,-46.193981,-17.677673,-10.630371,-41.573483,-25.664001,-10.630371,-41.573483,-25.664001,-7.322327,-46.193981,-17.677673,-10.630371,-46.193981,-15.909485,-10.630371,-41.573483,-25.664001,-10.630371,-46.193981,-15.909485,-15.432922,-41.573483,-23.096985,-15.432922,-41.573483,-23.096985,-10.630371,-46.193981,-15.909485], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-13.529907,-46.193981,-13.529907,-15.432922,-41.573483,-23.096985,-13.529907,-46.193981,-13.529907,-19.642395,-41.573483,-19.642395,-19.642395,-41.573483,-19.642395,-13.529907,-46.193981,-13.529907,-15.909485,-46.193981,-10.630371,-19.642395,-41.573483,-19.642395,-15.909485,-46.193981,-10.630371,-23.096985,-41.573483,-15.432922], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-23.096985,-41.573483,-15.432922,-15.909485,-46.193981,-10.630371,-17.677673,-46.193981,-7.322327,-23.096985,-41.573483,-15.432922,-17.677673,-46.193981,-7.322327,-25.664001,-41.573483,-10.630371,-25.664001,-41.573483,-10.630371,-17.677673,-46.193981,-7.322327,-18.766479,-46.193981,-3.732910,-25.664001,-41.573483,-10.630371], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-18.766479,-46.193981,-3.732910,-27.244751,-41.573483,-5.419312,-27.244751,-41.573483,-5.419312,-18.766479,-46.193981,-3.732910,-19.134155,-46.193981,0.000000,-27.244751,-41.573483,-5.419312,-19.134155,-46.193981,0.000000,-27.778503,-41.573483,0.000000,-27.778503,-41.573483,0.000000,-19.134155,-46.193981,0.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-18.766479,-46.193981,3.732910,-27.778503,-41.573483,0.000000,-18.766479,-46.193981,3.732910,-27.244751,-41.573483,5.419312,-27.244751,-41.573483,5.419312,-18.766479,-46.193981,3.732910,-17.677673,-46.193981,7.322327,-27.244751,-41.573483,5.419312,-17.677673,-46.193981,7.322327,-25.664001,-41.573483,10.630371], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-25.664001,-41.573483,10.630371,-17.677673,-46.193981,7.322327,-15.909485,-46.193981,10.630371,-25.664001,-41.573483,10.630371,-15.909485,-46.193981,10.630371,-23.096985,-41.573483,15.432922,-23.096985,-41.573483,15.432922,-15.909485,-46.193981,10.630371,-13.529907,-46.193981,13.529907,-23.096985,-41.573483,15.432922], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-13.529907,-46.193981,13.529907,-19.642334,-41.573483,19.642395,-19.642334,-41.573483,19.642395,-13.529907,-46.193981,13.529907,-10.630371,-46.193981,15.909485,-19.642334,-41.573483,19.642395,-10.630371,-46.193981,15.909485,-15.432922,-41.573483,23.096985,-15.432922,-41.573483,23.096985,-10.630371,-46.193981,15.909485], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-7.322327,-46.193981,17.677673,-15.432922,-41.573483,23.096985,-7.322327,-46.193981,17.677673,-10.630371,-41.573483,25.664001,-10.630371,-41.573483,25.664001,-7.322327,-46.193981,17.677673,-3.732849,-46.193981,18.766479,-10.630371,-41.573483,25.664001,-3.732849,-46.193981,18.766479,-5.419312,-41.573483,27.244751], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-5.419312,-41.573483,27.244751,-3.732849,-46.193981,18.766479,0.000000,-46.193981,19.134155,-5.419312,-41.573483,27.244751,0.000000,-46.193981,19.134155,0.000000,-41.573483,27.778503,0.000000,-41.573483,27.778503,0.000000,-46.193981,19.134155,3.732910,-46.193981,18.766479,0.000000,-41.573483,27.778503], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([3.732910,-46.193981,18.766479,5.419373,-41.573483,27.244751,5.419373,-41.573483,27.244751,3.732910,-46.193981,18.766479,7.322327,-46.193981,17.677673,5.419373,-41.573483,27.244751,7.322327,-46.193981,17.677673,10.630432,-41.573483,25.664001,10.630432,-41.573483,25.664001,7.322327,-46.193981,17.677673], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([10.630371,-46.193981,15.909485,10.630432,-41.573483,25.664001,10.630371,-46.193981,15.909485,15.432922,-41.573483,23.096985,15.432922,-41.573483,23.096985,10.630371,-46.193981,15.909485,13.529907,-46.193981,13.529907,15.432922,-41.573483,23.096985,13.529907,-46.193981,13.529907,19.642395,-41.573483,19.642334], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([19.642395,-41.573483,19.642334,13.529907,-46.193981,13.529907,15.909485,-46.193981,10.630371,19.642395,-41.573483,19.642334,15.909485,-46.193981,10.630371,23.096985,-41.573483,15.432861,23.096985,-41.573483,15.432861,15.909485,-46.193981,10.630371,17.677673,-46.193981,7.322327,23.096985,-41.573483,15.432861], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([17.677673,-46.193981,7.322327,25.664001,-41.573483,10.630310,25.664001,-41.573483,10.630310,17.677673,-46.193981,7.322327,18.766479,-46.193981,3.732849,25.664001,-41.573483,10.630310,18.766479,-46.193981,3.732849,27.244751,-41.573483,5.419250,27.244751,-41.573483,5.419250,18.766479,-46.193981,3.732849], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([19.134155,-46.193981,-0.000061,27.244751,-41.573483,5.419250,19.134155,-46.193981,-0.000061,27.778503,-41.573483,-0.000061,27.778503,-41.573483,-0.000061,19.134155,-46.193981,-0.000061,18.766479,-46.193981,-3.732910,27.778503,-41.573483,-0.000061,18.766479,-46.193981,-3.732910,27.244751,-41.573483,-5.419373], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([27.244751,-41.573483,-5.419373,18.766479,-46.193981,-3.732910,17.677673,-46.193981,-7.322388,27.244751,-41.573483,-5.419373,17.677673,-46.193981,-7.322388,25.664001,-41.573483,-10.630432,25.664001,-41.573483,-10.630432,17.677673,-46.193981,-7.322388,15.909485,-46.193981,-10.630371,25.664001,-41.573483,-10.630432], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([15.909485,-46.193981,-10.630371,23.096985,-41.573483,-15.432983,23.096985,-41.573483,-15.432983,15.909485,-46.193981,-10.630371,13.529846,-46.193981,-13.529907,23.096985,-41.573483,-15.432983,13.529846,-46.193981,-13.529907,19.642334,-41.573483,-19.642395,19.642334,-41.573483,-19.642395,13.529846,-46.193981,-13.529907], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([10.630310,-46.193981,-15.909485,19.642334,-41.573483,-19.642395,10.630310,-46.193981,-15.909485,15.432861,-41.573483,-23.097046,15.432861,-41.573483,-23.097046,10.630310,-46.193981,-15.909485,7.322266,-46.193981,-17.677673,15.432861,-41.573483,-23.097046,7.322266,-46.193981,-17.677673,10.630310,-41.573483,-25.664001], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([10.630310,-41.573483,-25.664001,7.322266,-46.193981,-17.677673,3.732849,-46.193981,-18.766541,10.630310,-41.573483,-25.664001,3.732849,-46.193981,-18.766541,5.419250,-41.573483,-27.244751,5.419250,-41.573483,-27.244751,3.732849,-46.193981,-18.766541,0.000000,-46.193981,-19.134155,5.419250,-41.573483,-27.244751], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,-46.193981,-19.134155,0.000000,-41.573483,-27.778503,0.000000,-46.193981,-19.134155,0.000000,-49.039265,-9.754517,-1.903015,-49.039265,-9.567078,0.000000,-46.193981,-19.134155,-1.903015,-49.039265,-9.567078,-3.732910,-46.193981,-18.766479,-3.732910,-46.193981,-18.766479,-1.903015,-49.039265,-9.567078], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-3.732910,-49.039265,-9.011963,-3.732910,-46.193981,-18.766479,-3.732910,-49.039265,-9.011963,-7.322327,-46.193981,-17.677673,-7.322327,-46.193981,-17.677673,-3.732910,-49.039265,-9.011963,-5.419312,-49.039265,-8.110596,-7.322327,-46.193981,-17.677673,-5.419312,-49.039265,-8.110596,-10.630371,-46.193981,-15.909485], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-10.630371,-46.193981,-15.909485,-5.419312,-49.039265,-8.110596,-6.897461,-49.039265,-6.897461,-10.630371,-46.193981,-15.909485,-6.897461,-49.039265,-6.897461,-13.529907,-46.193981,-13.529907,-13.529907,-46.193981,-13.529907,-6.897461,-49.039265,-6.897461,-8.110596,-49.039265,-5.419312,-13.529907,-46.193981,-13.529907], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-8.110596,-49.039265,-5.419312,-15.909485,-46.193981,-10.630371,-15.909485,-46.193981,-10.630371,-8.110596,-49.039265,-5.419312,-9.011963,-49.039265,-3.732910,-15.909485,-46.193981,-10.630371,-9.011963,-49.039265,-3.732910,-17.677673,-46.193981,-7.322327,-17.677673,-46.193981,-7.322327,-9.011963,-49.039265,-3.732910], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-9.567078,-49.039265,-1.903015,-17.677673,-46.193981,-7.322327,-9.567078,-49.039265,-1.903015,-18.766479,-46.193981,-3.732910,-18.766479,-46.193981,-3.732910,-9.567078,-49.039265,-1.903015,-9.754517,-49.039265,0.000000,-18.766479,-46.193981,-3.732910,-9.754517,-49.039265,0.000000,-19.134155,-46.193981,0.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-19.134155,-46.193981,0.000000,-9.754517,-49.039265,0.000000,-9.567078,-49.039265,1.903015,-19.134155,-46.193981,0.000000,-9.567078,-49.039265,1.903015,-18.766479,-46.193981,3.732910,-18.766479,-46.193981,3.732910,-9.567078,-49.039265,1.903015,-9.011963,-49.039265,3.732910,-18.766479,-46.193981,3.732910], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-9.011963,-49.039265,3.732910,-17.677673,-46.193981,7.322327,-17.677673,-46.193981,7.322327,-9.011963,-49.039265,3.732910,-8.110596,-49.039265,5.419312,-17.677673,-46.193981,7.322327,-8.110596,-49.039265,5.419312,-15.909485,-46.193981,10.630371,-15.909485,-46.193981,10.630371,-8.110596,-49.039265,5.419312], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-6.897461,-49.039265,6.897461,-15.909485,-46.193981,10.630371,-6.897461,-49.039265,6.897461,-13.529907,-46.193981,13.529907,-13.529907,-46.193981,13.529907,-6.897461,-49.039265,6.897461,-5.419312,-49.039265,8.110596,-13.529907,-46.193981,13.529907,-5.419312,-49.039265,8.110596,-10.630371,-46.193981,15.909485], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-10.630371,-46.193981,15.909485,-5.419312,-49.039265,8.110596,-3.732910,-49.039265,9.011963,-10.630371,-46.193981,15.909485,-3.732910,-49.039265,9.011963,-7.322327,-46.193981,17.677673,-7.322327,-46.193981,17.677673,-3.732910,-49.039265,9.011963,-1.903015,-49.039265,9.567078,-7.322327,-46.193981,17.677673], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-1.903015,-49.039265,9.567078,-3.732849,-46.193981,18.766479,-3.732849,-46.193981,18.766479,-1.903015,-49.039265,9.567078,0.000000,-49.039265,9.754517,-3.732849,-46.193981,18.766479,0.000000,-49.039265,9.754517,0.000000,-46.193981,19.134155,0.000000,-46.193981,19.134155,0.000000,-49.039265,9.754517], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([1.903015,-49.039265,9.567078,0.000000,-46.193981,19.134155,1.903015,-49.039265,9.567078,3.732910,-46.193981,18.766479,3.732910,-46.193981,18.766479,1.903015,-49.039265,9.567078,3.732910,-49.039265,9.011963,3.732910,-46.193981,18.766479,3.732910,-49.039265,9.011963,7.322327,-46.193981,17.677673], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([7.322327,-46.193981,17.677673,3.732910,-49.039265,9.011963,5.419312,-49.039265,8.110596,7.322327,-46.193981,17.677673,5.419312,-49.039265,8.110596,10.630371,-46.193981,15.909485,10.630371,-46.193981,15.909485,5.419312,-49.039265,8.110596,6.897461,-49.039265,6.897461,10.630371,-46.193981,15.909485], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([6.897461,-49.039265,6.897461,13.529907,-46.193981,13.529907,13.529907,-46.193981,13.529907,6.897461,-49.039265,6.897461,8.110596,-49.039265,5.419312,13.529907,-46.193981,13.529907,8.110596,-49.039265,5.419312,15.909485,-46.193981,10.630371,15.909485,-46.193981,10.630371,8.110596,-49.039265,5.419312], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([9.011963,-49.039265,3.732849,15.909485,-46.193981,10.630371,9.011963,-49.039265,3.732849,17.677673,-46.193981,7.322327,17.677673,-46.193981,7.322327,9.011963,-49.039265,3.732849,9.567078,-49.039265,1.903015,17.677673,-46.193981,7.322327,9.567078,-49.039265,1.903015,18.766479,-46.193981,3.732849], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([18.766479,-46.193981,3.732849,9.567078,-49.039265,1.903015,9.754517,-49.039265,0.000000,18.766479,-46.193981,3.732849,9.754517,-49.039265,0.000000,19.134155,-46.193981,-0.000061,19.134155,-46.193981,-0.000061,9.754517,-49.039265,0.000000,9.567078,-49.039265,-1.903015,19.134155,-46.193981,-0.000061], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([9.567078,-49.039265,-1.903015,18.766479,-46.193981,-3.732910,18.766479,-46.193981,-3.732910,9.567078,-49.039265,-1.903015,9.011963,-49.039265,-3.732910,18.766479,-46.193981,-3.732910,9.011963,-49.039265,-3.732910,17.677673,-46.193981,-7.322388,17.677673,-46.193981,-7.322388,9.011963,-49.039265,-3.732910], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([8.110535,-49.039265,-5.419312,17.677673,-46.193981,-7.322388,8.110535,-49.039265,-5.419312,15.909485,-46.193981,-10.630371,15.909485,-46.193981,-10.630371,8.110535,-49.039265,-5.419312,6.897461,-49.039265,-6.897461,15.909485,-46.193981,-10.630371,6.897461,-49.039265,-6.897461,13.529846,-46.193981,-13.529907], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([13.529846,-46.193981,-13.529907,6.897461,-49.039265,-6.897461,5.419312,-49.039265,-8.110596,13.529846,-46.193981,-13.529907,5.419312,-49.039265,-8.110596,10.630310,-46.193981,-15.909485,10.630310,-46.193981,-15.909485,5.419312,-49.039265,-8.110596,3.732849,-49.039265,-9.012024,10.630310,-46.193981,-15.909485], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([3.732849,-49.039265,-9.012024,7.322266,-46.193981,-17.677673,7.322266,-46.193981,-17.677673,3.732849,-49.039265,-9.012024,1.903015,-49.039265,-9.567078,7.322266,-46.193981,-17.677673,1.903015,-49.039265,-9.567078,3.732849,-46.193981,-18.766541,3.732849,-46.193981,-18.766541,1.903015,-49.039265,-9.567078], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,-49.039265,-9.754517,3.732849,-46.193981,-18.766541,0.000000,-49.039265,-9.754517,0.000000,-46.193981,-19.134155,0.000000,-50.000000,0.000000,-1.903015,-49.039265,-9.567078,0.000000,-49.039265,-9.754517,0.000000,-50.000000,0.000000,-3.732910,-49.039265,-9.011963,-1.903015,-49.039265,-9.567078], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,-50.000000,0.000000,-5.419312,-49.039265,-8.110596,-3.732910,-49.039265,-9.011963,0.000000,-50.000000,0.000000,-6.897461,-49.039265,-6.897461,-5.419312,-49.039265,-8.110596,0.000000,-50.000000,0.000000,-8.110596,-49.039265,-5.419312,-6.897461,-49.039265,-6.897461,0.000000,-50.000000,0.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-9.011963,-49.039265,-3.732910,-8.110596,-49.039265,-5.419312,0.000000,-50.000000,0.000000,-9.567078,-49.039265,-1.903015,-9.011963,-49.039265,-3.732910,0.000000,-50.000000,0.000000,-9.754517,-49.039265,0.000000,-9.567078,-49.039265,-1.903015,0.000000,-50.000000,0.000000,-9.567078,-49.039265,1.903015], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-9.754517,-49.039265,0.000000,0.000000,-50.000000,0.000000,-9.011963,-49.039265,3.732910,-9.567078,-49.039265,1.903015,0.000000,-50.000000,0.000000,-8.110596,-49.039265,5.419312,-9.011963,-49.039265,3.732910,0.000000,-50.000000,0.000000,-6.897461,-49.039265,6.897461,-8.110596,-49.039265,5.419312], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,-50.000000,0.000000,-5.419312,-49.039265,8.110596,-6.897461,-49.039265,6.897461,0.000000,-50.000000,0.000000,-3.732910,-49.039265,9.011963,-5.419312,-49.039265,8.110596,0.000000,-50.000000,0.000000,-1.903015,-49.039265,9.567078,-3.732910,-49.039265,9.011963,0.000000,-50.000000,0.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,-49.039265,9.754517,-1.903015,-49.039265,9.567078,0.000000,-50.000000,0.000000,1.903015,-49.039265,9.567078,0.000000,-49.039265,9.754517,0.000000,-50.000000,0.000000,3.732910,-49.039265,9.011963,1.903015,-49.039265,9.567078,0.000000,-50.000000,0.000000,5.419312,-49.039265,8.110596], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([3.732910,-49.039265,9.011963,0.000000,-50.000000,0.000000,6.897461,-49.039265,6.897461,5.419312,-49.039265,8.110596,0.000000,-50.000000,0.000000,8.110596,-49.039265,5.419312,6.897461,-49.039265,6.897461,0.000000,-50.000000,0.000000,9.011963,-49.039265,3.732849,8.110596,-49.039265,5.419312], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,-50.000000,0.000000,9.567078,-49.039265,1.903015,9.011963,-49.039265,3.732849,0.000000,-50.000000,0.000000,9.754517,-49.039265,0.000000,9.567078,-49.039265,1.903015,0.000000,-50.000000,0.000000,9.567078,-49.039265,-1.903015,9.754517,-49.039265,0.000000,0.000000,-50.000000,0.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([9.011963,-49.039265,-3.732910,9.567078,-49.039265,-1.903015,0.000000,-50.000000,0.000000,8.110535,-49.039265,-5.419312,9.011963,-49.039265,-3.732910,0.000000,-50.000000,0.000000,6.897461,-49.039265,-6.897461,8.110535,-49.039265,-5.419312,0.000000,-50.000000,0.000000,5.419312,-49.039265,-8.110596], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([6.897461,-49.039265,-6.897461,0.000000,-50.000000,0.000000,3.732849,-49.039265,-9.012024,5.419312,-49.039265,-8.110596,0.000000,-50.000000,0.000000,1.903015,-49.039265,-9.567078,3.732849,-49.039265,-9.012024,0.000000,-50.000000,0.000000,0.000000,-49.039265,-9.754517,1.903015,-49.039265,-9.567078], Java.type("float[]"))));

	/** Large attribute array: Normal vector field, scene-graph level=6, element #50, 8640 total numbers made up of 2880 3-tuple values */
	this.Normal_6_50_vector = new MFVec3f() /* splitting up long array to improve readability */
	.append(new MFVec3f(Java.to([-0.000000,1.000000,-0.000000,-0.000000,0.979598,-0.200969,-0.039207,0.979598,-0.197107,-0.000000,1.000000,-0.000000,-0.039207,0.979598,-0.197107,-0.076908,0.979598,-0.185671,-0.000000,1.000000,-0.000000,-0.076908,0.979598,-0.185671,-0.111652,0.979598,-0.167100,-0.000000,1.000000,-0.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.111652,0.979598,-0.167100,-0.142106,0.979598,-0.142107,-0.000000,1.000000,-0.000000,-0.142106,0.979598,-0.142107,-0.167100,0.979598,-0.111652,-0.000000,1.000000,-0.000000,-0.167100,0.979598,-0.111652,-0.185671,0.979598,-0.076907,-0.000000,1.000000,-0.000000,-0.185671,0.979598,-0.076907], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.197107,0.979598,-0.039207,-0.000000,1.000000,-0.000000,-0.197107,0.979598,-0.039207,-0.200969,0.979598,0.000000,-0.000000,1.000000,-0.000000,-0.200969,0.979598,0.000000,-0.197107,0.979598,0.039207,-0.000000,1.000000,-0.000000,-0.197107,0.979598,0.039207,-0.185671,0.979598,0.076908], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.000000,1.000000,-0.000000,-0.185671,0.979598,0.076908,-0.167100,0.979598,0.111652,-0.000000,1.000000,-0.000000,-0.167100,0.979598,0.111652,-0.142106,0.979598,0.142107,-0.000000,1.000000,-0.000000,-0.142106,0.979598,0.142107,-0.111652,0.979598,0.167100,-0.000000,1.000000,-0.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.111652,0.979598,0.167100,-0.076907,0.979598,0.185671,-0.000000,1.000000,-0.000000,-0.076907,0.979598,0.185671,-0.039207,0.979598,0.197107,-0.000000,1.000000,-0.000000,-0.039207,0.979598,0.197107,0.000000,0.979598,0.200969,-0.000000,1.000000,-0.000000,0.000000,0.979598,0.200969], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.039207,0.979598,0.197107,-0.000000,1.000000,-0.000000,0.039207,0.979598,0.197107,0.076908,0.979598,0.185671,-0.000000,1.000000,-0.000000,0.076908,0.979598,0.185671,0.111653,0.979598,0.167099,-0.000000,1.000000,-0.000000,0.111653,0.979598,0.167099,0.142107,0.979598,0.142106], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.000000,1.000000,-0.000000,0.142107,0.979598,0.142106,0.167100,0.979598,0.111652,-0.000000,1.000000,-0.000000,0.167100,0.979598,0.111652,0.185671,0.979598,0.076907,-0.000000,1.000000,-0.000000,0.185671,0.979598,0.076907,0.197107,0.979598,0.039207,-0.000000,1.000000,-0.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.197107,0.979598,0.039207,0.200969,0.979598,-0.000000,-0.000000,1.000000,-0.000000,0.200969,0.979598,-0.000000,0.197107,0.979598,-0.039207,-0.000000,1.000000,-0.000000,0.197107,0.979598,-0.039207,0.185671,0.979598,-0.076908,-0.000000,1.000000,-0.000000,0.185671,0.979598,-0.076908], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.167099,0.979598,-0.111653,-0.000000,1.000000,-0.000000,0.167099,0.979598,-0.111653,0.142106,0.979598,-0.142107,-0.000000,1.000000,-0.000000,0.142106,0.979598,-0.142107,0.111652,0.979598,-0.167100,-0.000000,1.000000,-0.000000,0.111652,0.979598,-0.167100,0.076907,0.979598,-0.185671], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.000000,1.000000,-0.000000,0.076907,0.979598,-0.185671,0.039207,0.979598,-0.197107,-0.000000,1.000000,-0.000000,0.039207,0.979598,-0.197107,-0.000000,0.979598,-0.200969,-0.000000,0.979598,-0.200969,-0.000000,0.921707,-0.387887,-0.075673,0.921707,-0.380434,-0.000000,0.979598,-0.200969], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.075673,0.921707,-0.380434,-0.039207,0.979598,-0.197107,-0.039207,0.979598,-0.197107,-0.075673,0.921707,-0.380434,-0.148438,0.921707,-0.358361,-0.039207,0.979598,-0.197107,-0.148438,0.921707,-0.358361,-0.076908,0.979598,-0.185671,-0.076908,0.979598,-0.185671,-0.148438,0.921707,-0.358361], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.215498,0.921707,-0.322516,-0.076908,0.979598,-0.185671,-0.215498,0.921707,-0.322516,-0.111652,0.979598,-0.167100,-0.111652,0.979598,-0.167100,-0.215498,0.921707,-0.322516,-0.274277,0.921707,-0.274277,-0.111652,0.979598,-0.167100,-0.274277,0.921707,-0.274277,-0.142106,0.979598,-0.142107], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.142106,0.979598,-0.142107,-0.274277,0.921707,-0.274277,-0.322516,0.921707,-0.215498,-0.142106,0.979598,-0.142107,-0.322516,0.921707,-0.215498,-0.167100,0.979598,-0.111652,-0.167100,0.979598,-0.111652,-0.322516,0.921707,-0.215498,-0.358361,0.921707,-0.148438,-0.167100,0.979598,-0.111652], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.358361,0.921707,-0.148438,-0.185671,0.979598,-0.076907,-0.185671,0.979598,-0.076907,-0.358361,0.921707,-0.148438,-0.380434,0.921707,-0.075673,-0.185671,0.979598,-0.076907,-0.380434,0.921707,-0.075673,-0.197107,0.979598,-0.039207,-0.197107,0.979598,-0.039207,-0.380434,0.921707,-0.075673], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.387887,0.921707,0.000000,-0.197107,0.979598,-0.039207,-0.387887,0.921707,0.000000,-0.200969,0.979598,0.000000,-0.200969,0.979598,0.000000,-0.387887,0.921707,0.000000,-0.380434,0.921707,0.075673,-0.200969,0.979598,0.000000,-0.380434,0.921707,0.075673,-0.197107,0.979598,0.039207], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.197107,0.979598,0.039207,-0.380434,0.921707,0.075673,-0.358361,0.921707,0.148438,-0.197107,0.979598,0.039207,-0.358361,0.921707,0.148438,-0.185671,0.979598,0.076908,-0.185671,0.979598,0.076908,-0.358361,0.921707,0.148438,-0.322516,0.921707,0.215499,-0.185671,0.979598,0.076908], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.322516,0.921707,0.215499,-0.167100,0.979598,0.111652,-0.167100,0.979598,0.111652,-0.322516,0.921707,0.215499,-0.274277,0.921707,0.274278,-0.167100,0.979598,0.111652,-0.274277,0.921707,0.274278,-0.142106,0.979598,0.142107,-0.142106,0.979598,0.142107,-0.274277,0.921707,0.274278], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.215498,0.921707,0.322516,-0.142106,0.979598,0.142107,-0.215498,0.921707,0.322516,-0.111652,0.979598,0.167100,-0.111652,0.979598,0.167100,-0.215498,0.921707,0.322516,-0.148438,0.921707,0.358361,-0.111652,0.979598,0.167100,-0.148438,0.921707,0.358361,-0.076907,0.979598,0.185671], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.076907,0.979598,0.185671,-0.148438,0.921707,0.358361,-0.075673,0.921707,0.380434,-0.076907,0.979598,0.185671,-0.075673,0.921707,0.380434,-0.039207,0.979598,0.197107,-0.039207,0.979598,0.197107,-0.075673,0.921707,0.380434,0.000000,0.921707,0.387887,-0.039207,0.979598,0.197107], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,0.921707,0.387887,0.000000,0.979598,0.200969,0.000000,0.979598,0.200969,0.000000,0.921707,0.387887,0.075673,0.921707,0.380434,0.000000,0.979598,0.200969,0.075673,0.921707,0.380434,0.039207,0.979598,0.197107,0.039207,0.979598,0.197107,0.075673,0.921707,0.380434], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.148438,0.921707,0.358361,0.039207,0.979598,0.197107,0.148438,0.921707,0.358361,0.076908,0.979598,0.185671,0.076908,0.979598,0.185671,0.148438,0.921707,0.358361,0.215499,0.921707,0.322516,0.076908,0.979598,0.185671,0.215499,0.921707,0.322516,0.111653,0.979598,0.167099], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.111653,0.979598,0.167099,0.215499,0.921707,0.322516,0.274278,0.921707,0.274277,0.111653,0.979598,0.167099,0.274278,0.921707,0.274277,0.142107,0.979598,0.142106,0.142107,0.979598,0.142106,0.274278,0.921707,0.274277,0.322516,0.921707,0.215498,0.142107,0.979598,0.142106], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.322516,0.921707,0.215498,0.167100,0.979598,0.111652,0.167100,0.979598,0.111652,0.322516,0.921707,0.215498,0.358361,0.921707,0.148437,0.167100,0.979598,0.111652,0.358361,0.921707,0.148437,0.185671,0.979598,0.076907,0.185671,0.979598,0.076907,0.358361,0.921707,0.148437], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.380434,0.921707,0.075672,0.185671,0.979598,0.076907,0.380434,0.921707,0.075672,0.197107,0.979598,0.039207,0.197107,0.979598,0.039207,0.380434,0.921707,0.075672,0.387887,0.921707,-0.000001,0.197107,0.979598,0.039207,0.387887,0.921707,-0.000001,0.200969,0.979598,-0.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.200969,0.979598,-0.000000,0.387887,0.921707,-0.000001,0.380434,0.921707,-0.075674,0.200969,0.979598,-0.000000,0.380434,0.921707,-0.075674,0.197107,0.979598,-0.039207,0.197107,0.979598,-0.039207,0.380434,0.921707,-0.075674,0.358361,0.921707,-0.148439,0.197107,0.979598,-0.039207], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.358361,0.921707,-0.148439,0.185671,0.979598,-0.076908,0.185671,0.979598,-0.076908,0.358361,0.921707,-0.148439,0.322516,0.921707,-0.215499,0.185671,0.979598,-0.076908,0.322516,0.921707,-0.215499,0.167099,0.979598,-0.111653,0.167099,0.979598,-0.111653,0.322516,0.921707,-0.215499], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.274277,0.921707,-0.274278,0.167099,0.979598,-0.111653,0.274277,0.921707,-0.274278,0.142106,0.979598,-0.142107,0.142106,0.979598,-0.142107,0.274277,0.921707,-0.274278,0.215498,0.921707,-0.322517,0.142106,0.979598,-0.142107,0.215498,0.921707,-0.322517,0.111652,0.979598,-0.167100], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.111652,0.979598,-0.167100,0.215498,0.921707,-0.322517,0.148437,0.921707,-0.358361,0.111652,0.979598,-0.167100,0.148437,0.921707,-0.358361,0.076907,0.979598,-0.185671,0.076907,0.979598,-0.185671,0.148437,0.921707,-0.358361,0.075672,0.921707,-0.380434,0.076907,0.979598,-0.185671], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.075672,0.921707,-0.380434,0.039207,0.979598,-0.197107,0.039207,0.979598,-0.197107,0.075672,0.921707,-0.380434,-0.000000,0.921707,-0.387887,0.039207,0.979598,-0.197107,-0.000000,0.921707,-0.387887,-0.000000,0.979598,-0.200969,-0.000000,0.921707,-0.387887,-0.000000,0.828645,-0.559775], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.109207,0.828645,-0.549019,-0.000000,0.921707,-0.387887,-0.109207,0.828645,-0.549019,-0.075673,0.921707,-0.380434,-0.075673,0.921707,-0.380434,-0.109207,0.828645,-0.549019,-0.214217,0.828645,-0.517165,-0.075673,0.921707,-0.380434,-0.214217,0.828645,-0.517165,-0.148438,0.921707,-0.358361], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.148438,0.921707,-0.358361,-0.214217,0.828645,-0.517165,-0.310994,0.828645,-0.465436,-0.148438,0.921707,-0.358361,-0.310994,0.828645,-0.465436,-0.215498,0.921707,-0.322516,-0.215498,0.921707,-0.322516,-0.310994,0.828645,-0.465436,-0.395821,0.828645,-0.395821,-0.215498,0.921707,-0.322516], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.395821,0.828645,-0.395821,-0.274277,0.921707,-0.274277,-0.274277,0.921707,-0.274277,-0.395821,0.828645,-0.395821,-0.465436,0.828645,-0.310994,-0.274277,0.921707,-0.274277,-0.465436,0.828645,-0.310994,-0.322516,0.921707,-0.215498,-0.322516,0.921707,-0.215498,-0.465436,0.828645,-0.310994], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.517165,0.828645,-0.214216,-0.322516,0.921707,-0.215498,-0.517165,0.828645,-0.214216,-0.358361,0.921707,-0.148438,-0.358361,0.921707,-0.148438,-0.517165,0.828645,-0.214216,-0.549019,0.828645,-0.109207,-0.358361,0.921707,-0.148438,-0.549019,0.828645,-0.109207,-0.380434,0.921707,-0.075673], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.380434,0.921707,-0.075673,-0.549019,0.828645,-0.109207,-0.559775,0.828645,0.000000,-0.380434,0.921707,-0.075673,-0.559775,0.828645,0.000000,-0.387887,0.921707,0.000000,-0.387887,0.921707,0.000000,-0.559775,0.828645,0.000000,-0.549019,0.828645,0.109207,-0.387887,0.921707,0.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.549019,0.828645,0.109207,-0.380434,0.921707,0.075673,-0.380434,0.921707,0.075673,-0.549019,0.828645,0.109207,-0.517165,0.828645,0.214217,-0.380434,0.921707,0.075673,-0.517165,0.828645,0.214217,-0.358361,0.921707,0.148438,-0.358361,0.921707,0.148438,-0.517165,0.828645,0.214217], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.465436,0.828645,0.310995,-0.358361,0.921707,0.148438,-0.465436,0.828645,0.310995,-0.322516,0.921707,0.215499,-0.322516,0.921707,0.215499,-0.465436,0.828645,0.310995,-0.395820,0.828645,0.395821,-0.322516,0.921707,0.215499,-0.395820,0.828645,0.395821,-0.274277,0.921707,0.274278], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.274277,0.921707,0.274278,-0.395820,0.828645,0.395821,-0.310994,0.828645,0.465436,-0.274277,0.921707,0.274278,-0.310994,0.828645,0.465436,-0.215498,0.921707,0.322516,-0.215498,0.921707,0.322516,-0.310994,0.828645,0.465436,-0.214216,0.828645,0.517165,-0.215498,0.921707,0.322516], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.214216,0.828645,0.517165,-0.148438,0.921707,0.358361,-0.148438,0.921707,0.358361,-0.214216,0.828645,0.517165,-0.109206,0.828645,0.549019,-0.148438,0.921707,0.358361,-0.109206,0.828645,0.549019,-0.075673,0.921707,0.380434,-0.075673,0.921707,0.380434,-0.109206,0.828645,0.549019], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000001,0.828645,0.559775,-0.075673,0.921707,0.380434,0.000001,0.828645,0.559775,0.000000,0.921707,0.387887,0.000000,0.921707,0.387887,0.000001,0.828645,0.559775,0.109207,0.828645,0.549019,0.000000,0.921707,0.387887,0.109207,0.828645,0.549019,0.075673,0.921707,0.380434], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.075673,0.921707,0.380434,0.109207,0.828645,0.549019,0.214217,0.828645,0.517164,0.075673,0.921707,0.380434,0.214217,0.828645,0.517164,0.148438,0.921707,0.358361,0.148438,0.921707,0.358361,0.214217,0.828645,0.517164,0.310995,0.828645,0.465435,0.148438,0.921707,0.358361], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.310995,0.828645,0.465435,0.215499,0.921707,0.322516,0.215499,0.921707,0.322516,0.310995,0.828645,0.465435,0.395821,0.828645,0.395820,0.215499,0.921707,0.322516,0.395821,0.828645,0.395820,0.274278,0.921707,0.274277,0.274278,0.921707,0.274277,0.395821,0.828645,0.395820], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.465436,0.828645,0.310994,0.274278,0.921707,0.274277,0.465436,0.828645,0.310994,0.322516,0.921707,0.215498,0.322516,0.921707,0.215498,0.465436,0.828645,0.310994,0.517165,0.828645,0.214216,0.322516,0.921707,0.215498,0.517165,0.828645,0.214216,0.358361,0.921707,0.148437], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.358361,0.921707,0.148437,0.517165,0.828645,0.214216,0.549019,0.828645,0.109206,0.358361,0.921707,0.148437,0.549019,0.828645,0.109206,0.380434,0.921707,0.075672,0.380434,0.921707,0.075672,0.549019,0.828645,0.109206,0.559775,0.828645,-0.000001,0.380434,0.921707,0.075672], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.559775,0.828645,-0.000001,0.387887,0.921707,-0.000001,0.387887,0.921707,-0.000001,0.559775,0.828645,-0.000001,0.549019,0.828645,-0.109208,0.387887,0.921707,-0.000001,0.549019,0.828645,-0.109208,0.380434,0.921707,-0.075674,0.380434,0.921707,-0.075674,0.549019,0.828645,-0.109208], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.517164,0.828645,-0.214217,0.380434,0.921707,-0.075674,0.517164,0.828645,-0.214217,0.358361,0.921707,-0.148439,0.358361,0.921707,-0.148439,0.517164,0.828645,-0.214217,0.465435,0.828645,-0.310995,0.358361,0.921707,-0.148439,0.465435,0.828645,-0.310995,0.322516,0.921707,-0.215499], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.322516,0.921707,-0.215499,0.465435,0.828645,-0.310995,0.395820,0.828645,-0.395821,0.322516,0.921707,-0.215499,0.395820,0.828645,-0.395821,0.274277,0.921707,-0.274278,0.274277,0.921707,-0.274278,0.395820,0.828645,-0.395821,0.310993,0.828645,-0.465436,0.274277,0.921707,-0.274278], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.310993,0.828645,-0.465436,0.215498,0.921707,-0.322517,0.215498,0.921707,-0.322517,0.310993,0.828645,-0.465436,0.214215,0.828645,-0.517165,0.215498,0.921707,-0.322517,0.214215,0.828645,-0.517165,0.148437,0.921707,-0.358361,0.148437,0.921707,-0.358361,0.214215,0.828645,-0.517165], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.109206,0.828645,-0.549019,0.148437,0.921707,-0.358361,0.109206,0.828645,-0.549019,0.075672,0.921707,-0.380434,0.075672,0.921707,-0.380434,0.109206,0.828645,-0.549019,-0.000000,0.828645,-0.559775,0.075672,0.921707,-0.380434,-0.000000,0.828645,-0.559775,-0.000000,0.921707,-0.387887], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.000000,0.828645,-0.559775,-0.000000,0.704059,-0.710141,-0.138542,0.704059,-0.696496,-0.000000,0.828645,-0.559775,-0.138542,0.704059,-0.696496,-0.109207,0.828645,-0.549019,-0.109207,0.828645,-0.549019,-0.138542,0.704059,-0.696496,-0.271759,0.704059,-0.656085,-0.109207,0.828645,-0.549019], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.271759,0.704059,-0.656085,-0.214217,0.828645,-0.517165,-0.214217,0.828645,-0.517165,-0.271759,0.704059,-0.656085,-0.394533,0.704059,-0.590461,-0.214217,0.828645,-0.517165,-0.394533,0.704059,-0.590461,-0.310994,0.828645,-0.465436,-0.310994,0.828645,-0.465436,-0.394533,0.704059,-0.590461], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.502146,0.704059,-0.502146,-0.310994,0.828645,-0.465436,-0.502146,0.704059,-0.502146,-0.395821,0.828645,-0.395821,-0.395821,0.828645,-0.395821,-0.502146,0.704059,-0.502146,-0.590461,0.704059,-0.394533,-0.395821,0.828645,-0.395821,-0.590461,0.704059,-0.394533,-0.465436,0.828645,-0.310994], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.465436,0.828645,-0.310994,-0.590461,0.704059,-0.394533,-0.656085,0.704059,-0.271759,-0.465436,0.828645,-0.310994,-0.656085,0.704059,-0.271759,-0.517165,0.828645,-0.214216,-0.517165,0.828645,-0.214216,-0.656085,0.704059,-0.271759,-0.696496,0.704059,-0.138542,-0.517165,0.828645,-0.214216], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.696496,0.704059,-0.138542,-0.549019,0.828645,-0.109207,-0.549019,0.828645,-0.109207,-0.696496,0.704059,-0.138542,-0.710141,0.704059,0.000000,-0.549019,0.828645,-0.109207,-0.710141,0.704059,0.000000,-0.559775,0.828645,0.000000,-0.559775,0.828645,0.000000,-0.710141,0.704059,0.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.696496,0.704059,0.138542,-0.559775,0.828645,0.000000,-0.696496,0.704059,0.138542,-0.549019,0.828645,0.109207,-0.549019,0.828645,0.109207,-0.696496,0.704059,0.138542,-0.656085,0.704059,0.271760,-0.549019,0.828645,0.109207,-0.656085,0.704059,0.271760,-0.517165,0.828645,0.214217], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.517165,0.828645,0.214217,-0.656085,0.704059,0.271760,-0.590461,0.704059,0.394534,-0.517165,0.828645,0.214217,-0.590461,0.704059,0.394534,-0.465436,0.828645,0.310995,-0.465436,0.828645,0.310995,-0.590461,0.704059,0.394534,-0.502145,0.704059,0.502146,-0.465436,0.828645,0.310995], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.502145,0.704059,0.502146,-0.395820,0.828645,0.395821,-0.395820,0.828645,0.395821,-0.502145,0.704059,0.502146,-0.394533,0.704059,0.590461,-0.395820,0.828645,0.395821,-0.394533,0.704059,0.590461,-0.310994,0.828645,0.465436,-0.310994,0.828645,0.465436,-0.394533,0.704059,0.590461], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.271759,0.704059,0.656085,-0.310994,0.828645,0.465436,-0.271759,0.704059,0.656085,-0.214216,0.828645,0.517165,-0.214216,0.828645,0.517165,-0.271759,0.704059,0.656085,-0.138541,0.704059,0.696496,-0.214216,0.828645,0.517165,-0.138541,0.704059,0.696496,-0.109206,0.828645,0.549019], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.109206,0.828645,0.549019,-0.138541,0.704059,0.696496,0.000001,0.704059,0.710141,-0.109206,0.828645,0.549019,0.000001,0.704059,0.710141,0.000001,0.828645,0.559775,0.000001,0.828645,0.559775,0.000001,0.704059,0.710141,0.138542,0.704059,0.696496,0.000001,0.828645,0.559775], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.138542,0.704059,0.696496,0.109207,0.828645,0.549019,0.109207,0.828645,0.549019,0.138542,0.704059,0.696496,0.271760,0.704059,0.656085,0.109207,0.828645,0.549019,0.271760,0.704059,0.656085,0.214217,0.828645,0.517164,0.214217,0.828645,0.517164,0.271760,0.704059,0.656085], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.394534,0.704059,0.590460,0.214217,0.828645,0.517164,0.394534,0.704059,0.590460,0.310995,0.828645,0.465435,0.310995,0.828645,0.465435,0.394534,0.704059,0.590460,0.502146,0.704059,0.502145,0.310995,0.828645,0.465435,0.502146,0.704059,0.502145,0.395821,0.828645,0.395820], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.395821,0.828645,0.395820,0.502146,0.704059,0.502145,0.590462,0.704059,0.394533,0.395821,0.828645,0.395820,0.590462,0.704059,0.394533,0.465436,0.828645,0.310994,0.465436,0.828645,0.310994,0.590462,0.704059,0.394533,0.656086,0.704059,0.271758,0.465436,0.828645,0.310994], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.656086,0.704059,0.271758,0.517165,0.828645,0.214216,0.517165,0.828645,0.214216,0.656086,0.704059,0.271758,0.696496,0.704059,0.138541,0.517165,0.828645,0.214216,0.696496,0.704059,0.138541,0.549019,0.828645,0.109206,0.549019,0.828645,0.109206,0.696496,0.704059,0.138541], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.710141,0.704059,-0.000001,0.549019,0.828645,0.109206,0.710141,0.704059,-0.000001,0.559775,0.828645,-0.000001,0.559775,0.828645,-0.000001,0.710141,0.704059,-0.000001,0.696496,0.704059,-0.138543,0.559775,0.828645,-0.000001,0.696496,0.704059,-0.138543,0.549019,0.828645,-0.109208], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.549019,0.828645,-0.109208,0.696496,0.704059,-0.138543,0.656085,0.704059,-0.271760,0.549019,0.828645,-0.109208,0.656085,0.704059,-0.271760,0.517164,0.828645,-0.214217,0.517164,0.828645,-0.214217,0.656085,0.704059,-0.271760,0.590460,0.704059,-0.394535,0.517164,0.828645,-0.214217], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.590460,0.704059,-0.394535,0.465435,0.828645,-0.310995,0.465435,0.828645,-0.310995,0.590460,0.704059,-0.394535,0.502145,0.704059,-0.502147,0.465435,0.828645,-0.310995,0.502145,0.704059,-0.502147,0.395820,0.828645,-0.395821,0.395820,0.828645,-0.395821,0.502145,0.704059,-0.502147], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.394532,0.704059,-0.590462,0.395820,0.828645,-0.395821,0.394532,0.704059,-0.590462,0.310993,0.828645,-0.465436,0.310993,0.828645,-0.465436,0.394532,0.704059,-0.590462,0.271758,0.704059,-0.656086,0.310993,0.828645,-0.465436,0.271758,0.704059,-0.656086,0.214215,0.828645,-0.517165], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.214215,0.828645,-0.517165,0.271758,0.704059,-0.656086,0.138540,0.704059,-0.696496,0.214215,0.828645,-0.517165,0.138540,0.704059,-0.696496,0.109206,0.828645,-0.549019,0.109206,0.828645,-0.549019,0.138540,0.704059,-0.696496,-0.000000,0.704059,-0.710141,0.109206,0.828645,-0.549019], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.000000,0.704059,-0.710141,-0.000000,0.828645,-0.559775,-0.000000,0.704059,-0.710141,-0.000001,0.552761,-0.833340,-0.162577,0.552761,-0.817327,-0.000000,0.704059,-0.710141,-0.162577,0.552761,-0.817327,-0.138542,0.704059,-0.696496,-0.138542,0.704059,-0.696496,-0.162577,0.552761,-0.817327], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.318905,0.552761,-0.769905,-0.138542,0.704059,-0.696496,-0.318905,0.552761,-0.769905,-0.271759,0.704059,-0.656085,-0.271759,0.704059,-0.656085,-0.318905,0.552761,-0.769905,-0.462979,0.552761,-0.692897,-0.271759,0.704059,-0.656085,-0.462979,0.552761,-0.692897,-0.394533,0.704059,-0.590461], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.394533,0.704059,-0.590461,-0.462979,0.552761,-0.692897,-0.589260,0.552761,-0.589260,-0.394533,0.704059,-0.590461,-0.589260,0.552761,-0.589260,-0.502146,0.704059,-0.502146,-0.502146,0.704059,-0.502146,-0.589260,0.552761,-0.589260,-0.692897,0.552761,-0.462979,-0.502146,0.704059,-0.502146], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.692897,0.552761,-0.462979,-0.590461,0.704059,-0.394533,-0.590461,0.704059,-0.394533,-0.692897,0.552761,-0.462979,-0.769906,0.552761,-0.318905,-0.590461,0.704059,-0.394533,-0.769906,0.552761,-0.318905,-0.656085,0.704059,-0.271759,-0.656085,0.704059,-0.271759,-0.769906,0.552761,-0.318905], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.817327,0.552761,-0.162576,-0.656085,0.704059,-0.271759,-0.817327,0.552761,-0.162576,-0.696496,0.704059,-0.138542,-0.696496,0.704059,-0.138542,-0.817327,0.552761,-0.162576,-0.833340,0.552761,0.000000,-0.696496,0.704059,-0.138542,-0.833340,0.552761,0.000000,-0.710141,0.704059,0.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.710141,0.704059,0.000000,-0.833340,0.552761,0.000000,-0.817327,0.552761,0.162577,-0.710141,0.704059,0.000000,-0.817327,0.552761,0.162577,-0.696496,0.704059,0.138542,-0.696496,0.704059,0.138542,-0.817327,0.552761,0.162577,-0.769905,0.552761,0.318906,-0.696496,0.704059,0.138542], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.769905,0.552761,0.318906,-0.656085,0.704059,0.271760,-0.656085,0.704059,0.271760,-0.769905,0.552761,0.318906,-0.692896,0.552761,0.462979,-0.656085,0.704059,0.271760,-0.692896,0.552761,0.462979,-0.590461,0.704059,0.394534,-0.590461,0.704059,0.394534,-0.692896,0.552761,0.462979], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.589260,0.552761,0.589261,-0.590461,0.704059,0.394534,-0.589260,0.552761,0.589261,-0.502145,0.704059,0.502146,-0.502145,0.704059,0.502146,-0.589260,0.552761,0.589261,-0.462978,0.552761,0.692897,-0.502145,0.704059,0.502146,-0.462978,0.552761,0.692897,-0.394533,0.704059,0.590461], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.394533,0.704059,0.590461,-0.462978,0.552761,0.692897,-0.318905,0.552761,0.769906,-0.394533,0.704059,0.590461,-0.318905,0.552761,0.769906,-0.271759,0.704059,0.656085,-0.271759,0.704059,0.656085,-0.318905,0.552761,0.769906,-0.162576,0.552761,0.817328,-0.271759,0.704059,0.656085], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.162576,0.552761,0.817328,-0.138541,0.704059,0.696496,-0.138541,0.704059,0.696496,-0.162576,0.552761,0.817328,0.000001,0.552761,0.833340,-0.138541,0.704059,0.696496,0.000001,0.552761,0.833340,0.000001,0.704059,0.710141,0.000001,0.704059,0.710141,0.000001,0.552761,0.833340], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.162577,0.552761,0.817327,0.000001,0.704059,0.710141,0.162577,0.552761,0.817327,0.138542,0.704059,0.696496,0.138542,0.704059,0.696496,0.162577,0.552761,0.817327,0.318906,0.552761,0.769905,0.138542,0.704059,0.696496,0.318906,0.552761,0.769905,0.271760,0.704059,0.656085], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.271760,0.704059,0.656085,0.318906,0.552761,0.769905,0.462980,0.552761,0.692896,0.271760,0.704059,0.656085,0.462980,0.552761,0.692896,0.394534,0.704059,0.590460,0.394534,0.704059,0.590460,0.462980,0.552761,0.692896,0.589261,0.552761,0.589259,0.394534,0.704059,0.590460], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.589261,0.552761,0.589259,0.502146,0.704059,0.502145,0.502146,0.704059,0.502145,0.589261,0.552761,0.589259,0.692897,0.552761,0.462978,0.502146,0.704059,0.502145,0.692897,0.552761,0.462978,0.590462,0.704059,0.394533,0.590462,0.704059,0.394533,0.692897,0.552761,0.462978], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.769906,0.552761,0.318904,0.590462,0.704059,0.394533,0.769906,0.552761,0.318904,0.656086,0.704059,0.271758,0.656086,0.704059,0.271758,0.769906,0.552761,0.318904,0.817328,0.552761,0.162575,0.656086,0.704059,0.271758,0.817328,0.552761,0.162575,0.696496,0.704059,0.138541], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.696496,0.704059,0.138541,0.817328,0.552761,0.162575,0.833340,0.552761,-0.000001,0.696496,0.704059,0.138541,0.833340,0.552761,-0.000001,0.710141,0.704059,-0.000001,0.710141,0.704059,-0.000001,0.833340,0.552761,-0.000001,0.817327,0.552761,-0.162578,0.710141,0.704059,-0.000001], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.817327,0.552761,-0.162578,0.696496,0.704059,-0.138543,0.696496,0.704059,-0.138543,0.817327,0.552761,-0.162578,0.769905,0.552761,-0.318907,0.696496,0.704059,-0.138543,0.769905,0.552761,-0.318907,0.656085,0.704059,-0.271760,0.656085,0.704059,-0.271760,0.769905,0.552761,-0.318907], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.692896,0.552761,-0.462980,0.656085,0.704059,-0.271760,0.692896,0.552761,-0.462980,0.590460,0.704059,-0.394535,0.590460,0.704059,-0.394535,0.692896,0.552761,-0.462980,0.589259,0.552761,-0.589261,0.590460,0.704059,-0.394535,0.589259,0.552761,-0.589261,0.502145,0.704059,-0.502147], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.502145,0.704059,-0.502147,0.589259,0.552761,-0.589261,0.462977,0.552761,-0.692898,0.502145,0.704059,-0.502147,0.462977,0.552761,-0.692898,0.394532,0.704059,-0.590462,0.394532,0.704059,-0.590462,0.462977,0.552761,-0.692898,0.318904,0.552761,-0.769906,0.394532,0.704059,-0.590462], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.318904,0.552761,-0.769906,0.271758,0.704059,-0.656086,0.271758,0.704059,-0.656086,0.318904,0.552761,-0.769906,0.162575,0.552761,-0.817328,0.271758,0.704059,-0.656086,0.162575,0.552761,-0.817328,0.138540,0.704059,-0.696496,0.138540,0.704059,-0.696496,0.162575,0.552761,-0.817328], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.000001,0.552761,-0.833340,0.138540,0.704059,-0.696496,-0.000001,0.552761,-0.833340,-0.000000,0.704059,-0.710141,-0.000001,0.552761,-0.833340,-0.000001,0.380537,-0.924766,-0.180413,0.380537,-0.906997,-0.000001,0.552761,-0.833340,-0.180413,0.380537,-0.906997,-0.162577,0.552761,-0.817327], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.162577,0.552761,-0.817327,-0.180413,0.380537,-0.906997,-0.353892,0.380537,-0.854372,-0.162577,0.552761,-0.817327,-0.353892,0.380537,-0.854372,-0.318905,0.552761,-0.769905,-0.318905,0.552761,-0.769905,-0.353892,0.380537,-0.854372,-0.513772,0.380537,-0.768914,-0.318905,0.552761,-0.769905], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.513772,0.380537,-0.768914,-0.462979,0.552761,-0.692897,-0.462979,0.552761,-0.692897,-0.513772,0.380537,-0.768914,-0.653908,0.380537,-0.653908,-0.462979,0.552761,-0.692897,-0.653908,0.380537,-0.653908,-0.589260,0.552761,-0.589260,-0.589260,0.552761,-0.589260,-0.653908,0.380537,-0.653908], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.768915,0.380537,-0.513772,-0.589260,0.552761,-0.589260,-0.768915,0.380537,-0.513772,-0.692897,0.552761,-0.462979,-0.692897,0.552761,-0.462979,-0.768915,0.380537,-0.513772,-0.854372,0.380537,-0.353892,-0.692897,0.552761,-0.462979,-0.854372,0.380537,-0.353892,-0.769906,0.552761,-0.318905], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.769906,0.552761,-0.318905,-0.854372,0.380537,-0.353892,-0.906997,0.380537,-0.180413,-0.769906,0.552761,-0.318905,-0.906997,0.380537,-0.180413,-0.817327,0.552761,-0.162576,-0.817327,0.552761,-0.162576,-0.906997,0.380537,-0.180413,-0.924766,0.380537,0.000000,-0.817327,0.552761,-0.162576], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.924766,0.380537,0.000000,-0.833340,0.552761,0.000000,-0.833340,0.552761,0.000000,-0.924766,0.380537,0.000000,-0.906996,0.380537,0.180413,-0.833340,0.552761,0.000000,-0.906996,0.380537,0.180413,-0.817327,0.552761,0.162577,-0.817327,0.552761,0.162577,-0.906996,0.380537,0.180413], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.854372,0.380537,0.353893,-0.817327,0.552761,0.162577,-0.854372,0.380537,0.353893,-0.769905,0.552761,0.318906,-0.769905,0.552761,0.318906,-0.854372,0.380537,0.353893,-0.768914,0.380537,0.513773,-0.769905,0.552761,0.318906,-0.768914,0.380537,0.513773,-0.692896,0.552761,0.462979], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.692896,0.552761,0.462979,-0.768914,0.380537,0.513773,-0.653908,0.380537,0.653908,-0.692896,0.552761,0.462979,-0.653908,0.380537,0.653908,-0.589260,0.552761,0.589261,-0.589260,0.552761,0.589261,-0.653908,0.380537,0.653908,-0.513772,0.380537,0.768915,-0.589260,0.552761,0.589261], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.513772,0.380537,0.768915,-0.462978,0.552761,0.692897,-0.462978,0.552761,0.692897,-0.513772,0.380537,0.768915,-0.353892,0.380537,0.854372,-0.462978,0.552761,0.692897,-0.353892,0.380537,0.854372,-0.318905,0.552761,0.769906,-0.318905,0.552761,0.769906,-0.353892,0.380537,0.854372], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.180412,0.380537,0.906997,-0.318905,0.552761,0.769906,-0.180412,0.380537,0.906997,-0.162576,0.552761,0.817328,-0.162576,0.552761,0.817328,-0.180412,0.380537,0.906997,0.000001,0.380537,0.924766,-0.162576,0.552761,0.817328,0.000001,0.380537,0.924766,0.000001,0.552761,0.833340], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000001,0.552761,0.833340,0.000001,0.380537,0.924766,0.180414,0.380537,0.906996,0.000001,0.552761,0.833340,0.180414,0.380537,0.906996,0.162577,0.552761,0.817327,0.162577,0.552761,0.817327,0.180414,0.380537,0.906996,0.353893,0.380537,0.854372,0.162577,0.552761,0.817327], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.353893,0.380537,0.854372,0.318906,0.552761,0.769905,0.318906,0.552761,0.769905,0.353893,0.380537,0.854372,0.513773,0.380537,0.768914,0.318906,0.552761,0.769905,0.513773,0.380537,0.768914,0.462980,0.552761,0.692896,0.462980,0.552761,0.692896,0.513773,0.380537,0.768914], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.653909,0.380537,0.653907,0.462980,0.552761,0.692896,0.653909,0.380537,0.653907,0.589261,0.552761,0.589259,0.589261,0.552761,0.589259,0.653909,0.380537,0.653907,0.768915,0.380537,0.513771,0.589261,0.552761,0.589259,0.768915,0.380537,0.513771,0.692897,0.552761,0.462978], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.692897,0.552761,0.462978,0.768915,0.380537,0.513771,0.854373,0.380537,0.353891,0.692897,0.552761,0.462978,0.854373,0.380537,0.353891,0.769906,0.552761,0.318904,0.769906,0.552761,0.318904,0.854373,0.380537,0.353891,0.906997,0.380537,0.180411,0.769906,0.552761,0.318904], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.906997,0.380537,0.180411,0.817328,0.552761,0.162575,0.817328,0.552761,0.162575,0.906997,0.380537,0.180411,0.924766,0.380537,-0.000001,0.817328,0.552761,0.162575,0.924766,0.380537,-0.000001,0.833340,0.552761,-0.000001,0.833340,0.552761,-0.000001,0.924766,0.380537,-0.000001], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.906996,0.380537,-0.180414,0.833340,0.552761,-0.000001,0.906996,0.380537,-0.180414,0.817327,0.552761,-0.162578,0.817327,0.552761,-0.162578,0.906996,0.380537,-0.180414,0.854371,0.380537,-0.353894,0.817327,0.552761,-0.162578,0.854371,0.380537,-0.353894,0.769905,0.552761,-0.318907], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.769905,0.552761,-0.318907,0.854371,0.380537,-0.353894,0.768914,0.380537,-0.513774,0.769905,0.552761,-0.318907,0.768914,0.380537,-0.513774,0.692896,0.552761,-0.462980,0.692896,0.552761,-0.462980,0.768914,0.380537,-0.513774,0.653907,0.380537,-0.653909,0.692896,0.552761,-0.462980], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.653907,0.380537,-0.653909,0.589259,0.552761,-0.589261,0.589259,0.552761,-0.589261,0.653907,0.380537,-0.653909,0.513771,0.380537,-0.768916,0.589259,0.552761,-0.589261,0.513771,0.380537,-0.768916,0.462977,0.552761,-0.692898,0.462977,0.552761,-0.692898,0.513771,0.380537,-0.768916], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.353891,0.380537,-0.854373,0.462977,0.552761,-0.692898,0.353891,0.380537,-0.854373,0.318904,0.552761,-0.769906,0.318904,0.552761,-0.769906,0.353891,0.380537,-0.854373,0.180411,0.380537,-0.906997,0.318904,0.552761,-0.769906,0.180411,0.380537,-0.906997,0.162575,0.552761,-0.817328], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.162575,0.552761,-0.817328,0.180411,0.380537,-0.906997,-0.000001,0.380537,-0.924766,0.162575,0.552761,-0.817328,-0.000001,0.380537,-0.924766,-0.000001,0.552761,-0.833340,-0.000001,0.380537,-0.924766,-0.000001,0.193930,-0.981015,-0.191387,0.193930,-0.962165,-0.000001,0.380537,-0.924766], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.191387,0.193930,-0.962165,-0.180413,0.380537,-0.906997,-0.180413,0.380537,-0.906997,-0.191387,0.193930,-0.962165,-0.375418,0.193930,-0.906340,-0.180413,0.380537,-0.906997,-0.375418,0.193930,-0.906340,-0.353892,0.380537,-0.854372,-0.353892,0.380537,-0.854372,-0.375418,0.193930,-0.906340], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.545023,0.193930,-0.815684,-0.353892,0.380537,-0.854372,-0.545023,0.193930,-0.815684,-0.513772,0.380537,-0.768914,-0.513772,0.380537,-0.768914,-0.545023,0.193930,-0.815684,-0.693683,0.193930,-0.693683,-0.513772,0.380537,-0.768914,-0.693683,0.193930,-0.693683,-0.653908,0.380537,-0.653908], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.653908,0.380537,-0.653908,-0.693683,0.193930,-0.693683,-0.815684,0.193930,-0.545023,-0.653908,0.380537,-0.653908,-0.815684,0.193930,-0.545023,-0.768915,0.380537,-0.513772,-0.768915,0.380537,-0.513772,-0.815684,0.193930,-0.545023,-0.906340,0.193930,-0.375418,-0.768915,0.380537,-0.513772], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.906340,0.193930,-0.375418,-0.854372,0.380537,-0.353892,-0.854372,0.380537,-0.353892,-0.906340,0.193930,-0.375418,-0.962165,0.193930,-0.191386,-0.854372,0.380537,-0.353892,-0.962165,0.193930,-0.191386,-0.906997,0.380537,-0.180413,-0.906997,0.380537,-0.180413,-0.962165,0.193930,-0.191386], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.981015,0.193930,0.000000,-0.906997,0.380537,-0.180413,-0.981015,0.193930,0.000000,-0.924766,0.380537,0.000000,-0.924766,0.380537,0.000000,-0.981015,0.193930,0.000000,-0.962165,0.193930,0.191387,-0.924766,0.380537,0.000000,-0.962165,0.193930,0.191387,-0.906996,0.380537,0.180413], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.906996,0.380537,0.180413,-0.962165,0.193930,0.191387,-0.906340,0.193930,0.375419,-0.906996,0.380537,0.180413,-0.906340,0.193930,0.375419,-0.854372,0.380537,0.353893,-0.854372,0.380537,0.353893,-0.906340,0.193930,0.375419,-0.815684,0.193930,0.545023,-0.854372,0.380537,0.353893], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.815684,0.193930,0.545023,-0.768914,0.380537,0.513773,-0.768914,0.380537,0.513773,-0.815684,0.193930,0.545023,-0.693682,0.193930,0.693683,-0.768914,0.380537,0.513773,-0.693682,0.193930,0.693683,-0.653908,0.380537,0.653908,-0.653908,0.380537,0.653908,-0.693682,0.193930,0.693683], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.545022,0.193930,0.815685,-0.653908,0.380537,0.653908,-0.545022,0.193930,0.815685,-0.513772,0.380537,0.768915,-0.513772,0.380537,0.768915,-0.545022,0.193930,0.815685,-0.375418,0.193930,0.906340,-0.513772,0.380537,0.768915,-0.375418,0.193930,0.906340,-0.353892,0.380537,0.854372], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.353892,0.380537,0.854372,-0.375418,0.193930,0.906340,-0.191386,0.193930,0.962165,-0.353892,0.380537,0.854372,-0.191386,0.193930,0.962165,-0.180412,0.380537,0.906997,-0.180412,0.380537,0.906997,-0.191386,0.193930,0.962165,0.000001,0.193930,0.981015,-0.180412,0.380537,0.906997], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000001,0.193930,0.981015,0.000001,0.380537,0.924766,0.000001,0.380537,0.924766,0.000001,0.193930,0.981015,0.191388,0.193930,0.962165,0.000001,0.380537,0.924766,0.191388,0.193930,0.962165,0.180414,0.380537,0.906996,0.180414,0.380537,0.906996,0.191388,0.193930,0.962165], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.375419,0.193930,0.906340,0.180414,0.380537,0.906996,0.375419,0.193930,0.906340,0.353893,0.380537,0.854372,0.353893,0.380537,0.854372,0.375419,0.193930,0.906340,0.545024,0.193930,0.815684,0.353893,0.380537,0.854372,0.545024,0.193930,0.815684,0.513773,0.380537,0.768914], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.513773,0.380537,0.768914,0.545024,0.193930,0.815684,0.693683,0.193930,0.693682,0.513773,0.380537,0.768914,0.693683,0.193930,0.693682,0.653909,0.380537,0.653907,0.653909,0.380537,0.653907,0.693683,0.193930,0.693682,0.815685,0.193930,0.545022,0.653909,0.380537,0.653907], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.815685,0.193930,0.545022,0.768915,0.380537,0.513771,0.768915,0.380537,0.513771,0.815685,0.193930,0.545022,0.906341,0.193930,0.375417,0.768915,0.380537,0.513771,0.906341,0.193930,0.375417,0.854373,0.380537,0.353891,0.854373,0.380537,0.353891,0.906341,0.193930,0.375417], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.962166,0.193930,0.191385,0.854373,0.380537,0.353891,0.962166,0.193930,0.191385,0.906997,0.380537,0.180411,0.906997,0.380537,0.180411,0.962166,0.193930,0.191385,0.981015,0.193930,-0.000002,0.906997,0.380537,0.180411,0.981015,0.193930,-0.000002,0.924766,0.380537,-0.000001], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.924766,0.380537,-0.000001,0.981015,0.193930,-0.000002,0.962165,0.193930,-0.191388,0.924766,0.380537,-0.000001,0.962165,0.193930,-0.191388,0.906996,0.380537,-0.180414,0.906996,0.380537,-0.180414,0.962165,0.193930,-0.191388,0.906339,0.193930,-0.375420,0.906996,0.380537,-0.180414], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.906339,0.193930,-0.375420,0.854371,0.380537,-0.353894,0.854371,0.380537,-0.353894,0.906339,0.193930,-0.375420,0.815683,0.193930,-0.545024,0.854371,0.380537,-0.353894,0.815683,0.193930,-0.545024,0.768914,0.380537,-0.513774,0.768914,0.380537,-0.513774,0.815683,0.193930,-0.545024], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.693681,0.193930,-0.693684,0.768914,0.380537,-0.513774,0.693681,0.193930,-0.693684,0.653907,0.380537,-0.653909,0.653907,0.380537,-0.653909,0.693681,0.193930,-0.693684,0.545021,0.193930,-0.815686,0.653907,0.380537,-0.653909,0.545021,0.193930,-0.815686,0.513771,0.380537,-0.768916], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.513771,0.380537,-0.768916,0.545021,0.193930,-0.815686,0.375416,0.193930,-0.906341,0.513771,0.380537,-0.768916,0.375416,0.193930,-0.906341,0.353891,0.380537,-0.854373,0.353891,0.380537,-0.854373,0.375416,0.193930,-0.906341,0.191385,0.193930,-0.962166,0.353891,0.380537,-0.854373], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.191385,0.193930,-0.962166,0.180411,0.380537,-0.906997,0.180411,0.380537,-0.906997,0.191385,0.193930,-0.962166,-0.000001,0.193930,-0.981015,0.180411,0.380537,-0.906997,-0.000001,0.193930,-0.981015,-0.000001,0.380537,-0.924766,-0.000001,0.193930,-0.981015,-0.000001,0.000000,-1.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.195090,0.000000,-0.980785,-0.000001,0.193930,-0.981015,-0.195090,0.000000,-0.980785,-0.191387,0.193930,-0.962165,-0.191387,0.193930,-0.962165,-0.195090,0.000000,-0.980785,-0.382683,0.000000,-0.923880,-0.191387,0.193930,-0.962165,-0.382683,0.000000,-0.923880,-0.375418,0.193930,-0.906340], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.375418,0.193930,-0.906340,-0.382683,0.000000,-0.923880,-0.555570,0.000000,-0.831470,-0.375418,0.193930,-0.906340,-0.555570,0.000000,-0.831470,-0.545023,0.193930,-0.815684,-0.545023,0.193930,-0.815684,-0.555570,0.000000,-0.831470,-0.707107,0.000000,-0.707107,-0.545023,0.193930,-0.815684], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.707107,0.000000,-0.707107,-0.693683,0.193930,-0.693683,-0.693683,0.193930,-0.693683,-0.707107,0.000000,-0.707107,-0.831470,0.000000,-0.555570,-0.693683,0.193930,-0.693683,-0.831470,0.000000,-0.555570,-0.815684,0.193930,-0.545023,-0.815684,0.193930,-0.545023,-0.831470,0.000000,-0.555570], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.923880,0.000000,-0.382683,-0.815684,0.193930,-0.545023,-0.923880,0.000000,-0.382683,-0.906340,0.193930,-0.375418,-0.906340,0.193930,-0.375418,-0.923880,0.000000,-0.382683,-0.980785,0.000000,-0.195090,-0.906340,0.193930,-0.375418,-0.980785,0.000000,-0.195090,-0.962165,0.193930,-0.191386], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.962165,0.193930,-0.191386,-0.980785,0.000000,-0.195090,-1.000000,0.000000,0.000000,-0.962165,0.193930,-0.191386,-1.000000,0.000000,0.000000,-0.981015,0.193930,0.000000,-0.981015,0.193930,0.000000,-1.000000,0.000000,0.000000,-0.980785,0.000000,0.195091,-0.981015,0.193930,0.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.980785,0.000000,0.195091,-0.962165,0.193930,0.191387,-0.962165,0.193930,0.191387,-0.980785,0.000000,0.195091,-0.923879,0.000000,0.382684,-0.962165,0.193930,0.191387,-0.923879,0.000000,0.382684,-0.906340,0.193930,0.375419,-0.906340,0.193930,0.375419,-0.923879,0.000000,0.382684], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.831469,0.000000,0.555571,-0.906340,0.193930,0.375419,-0.831469,0.000000,0.555571,-0.815684,0.193930,0.545023,-0.815684,0.193930,0.545023,-0.831469,0.000000,0.555571,-0.707106,0.000000,0.707107,-0.815684,0.193930,0.545023,-0.707106,0.000000,0.707107,-0.693682,0.193930,0.693683], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.693682,0.193930,0.693683,-0.707106,0.000000,0.707107,-0.555570,0.000000,0.831470,-0.693682,0.193930,0.693683,-0.555570,0.000000,0.831470,-0.545022,0.193930,0.815685,-0.545022,0.193930,0.815685,-0.555570,0.000000,0.831470,-0.382683,0.000000,0.923880,-0.545022,0.193930,0.815685], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.382683,0.000000,0.923880,-0.375418,0.193930,0.906340,-0.375418,0.193930,0.906340,-0.382683,0.000000,0.923880,-0.195089,0.000000,0.980785,-0.375418,0.193930,0.906340,-0.195089,0.000000,0.980785,-0.191386,0.193930,0.962165,-0.191386,0.193930,0.962165,-0.195089,0.000000,0.980785], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000001,0.000000,1.000000,-0.191386,0.193930,0.962165,0.000001,0.000000,1.000000,0.000001,0.193930,0.981015,0.000001,0.193930,0.981015,0.000001,0.000000,1.000000,0.195091,0.000000,0.980785,0.000001,0.193930,0.981015,0.195091,0.000000,0.980785,0.191388,0.193930,0.962165], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.191388,0.193930,0.962165,0.195091,0.000000,0.980785,0.382684,0.000000,0.923879,0.191388,0.193930,0.962165,0.382684,0.000000,0.923879,0.375419,0.193930,0.906340,0.375419,0.193930,0.906340,0.382684,0.000000,0.923879,0.555571,0.000000,0.831469,0.375419,0.193930,0.906340], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.555571,0.000000,0.831469,0.545024,0.193930,0.815684,0.545024,0.193930,0.815684,0.555571,0.000000,0.831469,0.707108,0.000000,0.707106,0.545024,0.193930,0.815684,0.707108,0.000000,0.707106,0.693683,0.193930,0.693682,0.693683,0.193930,0.693682,0.707108,0.000000,0.707106], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.831470,0.000000,0.555569,0.693683,0.193930,0.693682,0.831470,0.000000,0.555569,0.815685,0.193930,0.545022,0.815685,0.193930,0.545022,0.831470,0.000000,0.555569,0.923880,0.000000,0.382682,0.815685,0.193930,0.545022,0.923880,0.000000,0.382682,0.906341,0.193930,0.375417], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.906341,0.193930,0.375417,0.923880,0.000000,0.382682,0.980786,0.000000,0.195089,0.906341,0.193930,0.375417,0.980786,0.000000,0.195089,0.962166,0.193930,0.191385,0.962166,0.193930,0.191385,0.980786,0.000000,0.195089,1.000000,0.000000,-0.000001,0.962166,0.193930,0.191385], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([1.000000,0.000000,-0.000001,0.981015,0.193930,-0.000002,0.981015,0.193930,-0.000002,1.000000,0.000000,-0.000001,0.980785,0.000000,-0.195092,0.981015,0.193930,-0.000002,0.980785,0.000000,-0.195092,0.962165,0.193930,-0.191388,0.962165,0.193930,-0.191388,0.980785,0.000000,-0.195092], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.923879,0.000000,-0.382685,0.962165,0.193930,-0.191388,0.923879,0.000000,-0.382685,0.906339,0.193930,-0.375420,0.906339,0.193930,-0.375420,0.923879,0.000000,-0.382685,0.831469,0.000000,-0.555572,0.906339,0.193930,-0.375420,0.831469,0.000000,-0.555572,0.815683,0.193930,-0.545024], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.815683,0.193930,-0.545024,0.831469,0.000000,-0.555572,0.707105,0.000000,-0.707108,0.815683,0.193930,-0.545024,0.707105,0.000000,-0.707108,0.693681,0.193930,-0.693684,0.693681,0.193930,-0.693684,0.707105,0.000000,-0.707108,0.555569,0.000000,-0.831471,0.693681,0.193930,-0.693684], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.555569,0.000000,-0.831471,0.545021,0.193930,-0.815686,0.545021,0.193930,-0.815686,0.555569,0.000000,-0.831471,0.382682,0.000000,-0.923880,0.545021,0.193930,-0.815686,0.382682,0.000000,-0.923880,0.375416,0.193930,-0.906341,0.375416,0.193930,-0.906341,0.382682,0.000000,-0.923880], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.195089,0.000000,-0.980786,0.375416,0.193930,-0.906341,0.195089,0.000000,-0.980786,0.191385,0.193930,-0.962166,0.191385,0.193930,-0.962166,0.195089,0.000000,-0.980786,-0.000001,0.000000,-1.000000,0.191385,0.193930,-0.962166,-0.000001,0.000000,-1.000000,-0.000001,0.193930,-0.981015], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.000001,0.000000,-1.000000,-0.000001,-0.193930,-0.981015,-0.191387,-0.193930,-0.962165,-0.000001,0.000000,-1.000000,-0.191387,-0.193930,-0.962165,-0.195090,0.000000,-0.980785,-0.195090,0.000000,-0.980785,-0.191387,-0.193930,-0.962165,-0.375418,-0.193930,-0.906340,-0.195090,0.000000,-0.980785], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.375418,-0.193930,-0.906340,-0.382683,0.000000,-0.923880,-0.382683,0.000000,-0.923880,-0.375418,-0.193930,-0.906340,-0.545023,-0.193930,-0.815684,-0.382683,0.000000,-0.923880,-0.545023,-0.193930,-0.815684,-0.555570,0.000000,-0.831470,-0.555570,0.000000,-0.831470,-0.545023,-0.193930,-0.815684], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.693683,-0.193930,-0.693683,-0.555570,0.000000,-0.831470,-0.693683,-0.193930,-0.693683,-0.707107,0.000000,-0.707107,-0.707107,0.000000,-0.707107,-0.693683,-0.193930,-0.693683,-0.815684,-0.193930,-0.545023,-0.707107,0.000000,-0.707107,-0.815684,-0.193930,-0.545023,-0.831470,0.000000,-0.555570], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.831470,0.000000,-0.555570,-0.815684,-0.193930,-0.545023,-0.906340,-0.193930,-0.375418,-0.831470,0.000000,-0.555570,-0.906340,-0.193930,-0.375418,-0.923880,0.000000,-0.382683,-0.923880,0.000000,-0.382683,-0.906340,-0.193930,-0.375418,-0.962165,-0.193930,-0.191386,-0.923880,0.000000,-0.382683], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.962165,-0.193930,-0.191386,-0.980785,0.000000,-0.195090,-0.980785,0.000000,-0.195090,-0.962165,-0.193930,-0.191386,-0.981015,-0.193930,0.000000,-0.980785,0.000000,-0.195090,-0.981015,-0.193930,0.000000,-1.000000,0.000000,0.000000,-1.000000,0.000000,0.000000,-0.981015,-0.193930,0.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.962165,-0.193930,0.191387,-1.000000,0.000000,0.000000,-0.962165,-0.193930,0.191387,-0.980785,0.000000,0.195091,-0.980785,0.000000,0.195091,-0.962165,-0.193930,0.191387,-0.906340,-0.193930,0.375419,-0.980785,0.000000,0.195091,-0.906340,-0.193930,0.375419,-0.923879,0.000000,0.382684], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.923879,0.000000,0.382684,-0.906340,-0.193930,0.375419,-0.815684,-0.193930,0.545023,-0.923879,0.000000,0.382684,-0.815684,-0.193930,0.545023,-0.831469,0.000000,0.555571,-0.831469,0.000000,0.555571,-0.815684,-0.193930,0.545023,-0.693682,-0.193930,0.693683,-0.831469,0.000000,0.555571], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.693682,-0.193930,0.693683,-0.707106,0.000000,0.707107,-0.707106,0.000000,0.707107,-0.693682,-0.193930,0.693683,-0.545022,-0.193930,0.815685,-0.707106,0.000000,0.707107,-0.545022,-0.193930,0.815685,-0.555570,0.000000,0.831470,-0.555570,0.000000,0.831470,-0.545022,-0.193930,0.815685], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.375418,-0.193930,0.906340,-0.555570,0.000000,0.831470,-0.375418,-0.193930,0.906340,-0.382683,0.000000,0.923880,-0.382683,0.000000,0.923880,-0.375418,-0.193930,0.906340,-0.191386,-0.193930,0.962166,-0.382683,0.000000,0.923880,-0.191386,-0.193930,0.962166,-0.195089,0.000000,0.980785], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.195089,0.000000,0.980785,-0.191386,-0.193930,0.962166,0.000001,-0.193930,0.981015,-0.195089,0.000000,0.980785,0.000001,-0.193930,0.981015,0.000001,0.000000,1.000000,0.000001,0.000000,1.000000,0.000001,-0.193930,0.981015,0.191388,-0.193930,0.962165,0.000001,0.000000,1.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.191388,-0.193930,0.962165,0.195091,0.000000,0.980785,0.195091,0.000000,0.980785,0.191388,-0.193930,0.962165,0.375419,-0.193930,0.906340,0.195091,0.000000,0.980785,0.375419,-0.193930,0.906340,0.382684,0.000000,0.923879,0.382684,0.000000,0.923879,0.375419,-0.193930,0.906340], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.545024,-0.193930,0.815684,0.382684,0.000000,0.923879,0.545024,-0.193930,0.815684,0.555571,0.000000,0.831469,0.555571,0.000000,0.831469,0.545024,-0.193930,0.815684,0.693683,-0.193930,0.693682,0.555571,0.000000,0.831469,0.693683,-0.193930,0.693682,0.707108,0.000000,0.707106], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.707108,0.000000,0.707106,0.693683,-0.193930,0.693682,0.815685,-0.193930,0.545022,0.707108,0.000000,0.707106,0.815685,-0.193930,0.545022,0.831470,0.000000,0.555569,0.831470,0.000000,0.555569,0.815685,-0.193930,0.545022,0.906341,-0.193930,0.375417,0.831470,0.000000,0.555569], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.906341,-0.193930,0.375417,0.923880,0.000000,0.382682,0.923880,0.000000,0.382682,0.906341,-0.193930,0.375417,0.962166,-0.193930,0.191385,0.923880,0.000000,0.382682,0.962166,-0.193930,0.191385,0.980786,0.000000,0.195089,0.980786,0.000000,0.195089,0.962166,-0.193930,0.191385], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.981015,-0.193930,-0.000002,0.980786,0.000000,0.195089,0.981015,-0.193930,-0.000002,1.000000,0.000000,-0.000001,1.000000,0.000000,-0.000001,0.981015,-0.193930,-0.000002,0.962165,-0.193930,-0.191388,1.000000,0.000000,-0.000001,0.962165,-0.193930,-0.191388,0.980785,0.000000,-0.195092], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.980785,0.000000,-0.195092,0.962165,-0.193930,-0.191388,0.906339,-0.193930,-0.375420,0.980785,0.000000,-0.195092,0.906339,-0.193930,-0.375420,0.923879,0.000000,-0.382685,0.923879,0.000000,-0.382685,0.906339,-0.193930,-0.375420,0.815683,-0.193930,-0.545024,0.923879,0.000000,-0.382685], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.815683,-0.193930,-0.545024,0.831469,0.000000,-0.555572,0.831469,0.000000,-0.555572,0.815683,-0.193930,-0.545024,0.693681,-0.193930,-0.693684,0.831469,0.000000,-0.555572,0.693681,-0.193930,-0.693684,0.707105,0.000000,-0.707108,0.707105,0.000000,-0.707108,0.693681,-0.193930,-0.693684], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.545021,-0.193930,-0.815686,0.707105,0.000000,-0.707108,0.545021,-0.193930,-0.815686,0.555569,0.000000,-0.831471,0.555569,0.000000,-0.831471,0.545021,-0.193930,-0.815686,0.375417,-0.193930,-0.906341,0.555569,0.000000,-0.831471,0.375417,-0.193930,-0.906341,0.382682,0.000000,-0.923880], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.382682,0.000000,-0.923880,0.375417,-0.193930,-0.906341,0.191385,-0.193930,-0.962166,0.382682,0.000000,-0.923880,0.191385,-0.193930,-0.962166,0.195089,0.000000,-0.980786,0.195089,0.000000,-0.980786,0.191385,-0.193930,-0.962166,-0.000001,-0.193930,-0.981015,0.195089,0.000000,-0.980786], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.000001,-0.193930,-0.981015,-0.000001,0.000000,-1.000000,-0.000001,-0.193930,-0.981015,-0.000001,-0.380537,-0.924766,-0.180413,-0.380537,-0.906997,-0.000001,-0.193930,-0.981015,-0.180413,-0.380537,-0.906997,-0.191387,-0.193930,-0.962165,-0.191387,-0.193930,-0.962165,-0.180413,-0.380537,-0.906997], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.353892,-0.380537,-0.854372,-0.191387,-0.193930,-0.962165,-0.353892,-0.380537,-0.854372,-0.375418,-0.193930,-0.906340,-0.375418,-0.193930,-0.906340,-0.353892,-0.380537,-0.854372,-0.513772,-0.380537,-0.768915,-0.375418,-0.193930,-0.906340,-0.513772,-0.380537,-0.768915,-0.545023,-0.193930,-0.815684], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.545023,-0.193930,-0.815684,-0.513772,-0.380537,-0.768915,-0.653908,-0.380537,-0.653908,-0.545023,-0.193930,-0.815684,-0.653908,-0.380537,-0.653908,-0.693683,-0.193930,-0.693683,-0.693683,-0.193930,-0.693683,-0.653908,-0.380537,-0.653908,-0.768915,-0.380537,-0.513772,-0.693683,-0.193930,-0.693683], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.768915,-0.380537,-0.513772,-0.815684,-0.193930,-0.545023,-0.815684,-0.193930,-0.545023,-0.768915,-0.380537,-0.513772,-0.854372,-0.380537,-0.353892,-0.815684,-0.193930,-0.545023,-0.854372,-0.380537,-0.353892,-0.906340,-0.193930,-0.375418,-0.906340,-0.193930,-0.375418,-0.854372,-0.380537,-0.353892], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.906997,-0.380537,-0.180413,-0.906340,-0.193930,-0.375418,-0.906997,-0.380537,-0.180413,-0.962165,-0.193930,-0.191386,-0.962165,-0.193930,-0.191386,-0.906997,-0.380537,-0.180413,-0.924766,-0.380537,0.000000,-0.962165,-0.193930,-0.191386,-0.924766,-0.380537,0.000000,-0.981015,-0.193930,0.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.981015,-0.193930,0.000000,-0.924766,-0.380537,0.000000,-0.906996,-0.380537,0.180413,-0.981015,-0.193930,0.000000,-0.906996,-0.380537,0.180413,-0.962165,-0.193930,0.191387,-0.962165,-0.193930,0.191387,-0.906996,-0.380537,0.180413,-0.854372,-0.380537,0.353893,-0.962165,-0.193930,0.191387], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.854372,-0.380537,0.353893,-0.906340,-0.193930,0.375419,-0.906340,-0.193930,0.375419,-0.854372,-0.380537,0.353893,-0.768914,-0.380537,0.513773,-0.906340,-0.193930,0.375419,-0.768914,-0.380537,0.513773,-0.815684,-0.193930,0.545023,-0.815684,-0.193930,0.545023,-0.768914,-0.380537,0.513773], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.653908,-0.380537,0.653908,-0.815684,-0.193930,0.545023,-0.653908,-0.380537,0.653908,-0.693682,-0.193930,0.693683,-0.693682,-0.193930,0.693683,-0.653908,-0.380537,0.653908,-0.513772,-0.380537,0.768915,-0.693682,-0.193930,0.693683,-0.513772,-0.380537,0.768915,-0.545022,-0.193930,0.815685], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.545022,-0.193930,0.815685,-0.513772,-0.380537,0.768915,-0.353892,-0.380537,0.854372,-0.545022,-0.193930,0.815685,-0.353892,-0.380537,0.854372,-0.375418,-0.193930,0.906340,-0.375418,-0.193930,0.906340,-0.353892,-0.380537,0.854372,-0.180412,-0.380537,0.906997,-0.375418,-0.193930,0.906340], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.180412,-0.380537,0.906997,-0.191386,-0.193930,0.962166,-0.191386,-0.193930,0.962166,-0.180412,-0.380537,0.906997,0.000001,-0.380537,0.924766,-0.191386,-0.193930,0.962166,0.000001,-0.380537,0.924766,0.000001,-0.193930,0.981015,0.000001,-0.193930,0.981015,0.000001,-0.380537,0.924766], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.180414,-0.380537,0.906996,0.000001,-0.193930,0.981015,0.180414,-0.380537,0.906996,0.191388,-0.193930,0.962165,0.191388,-0.193930,0.962165,0.180414,-0.380537,0.906996,0.353893,-0.380537,0.854372,0.191388,-0.193930,0.962165,0.353893,-0.380537,0.854372,0.375419,-0.193930,0.906340], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.375419,-0.193930,0.906340,0.353893,-0.380537,0.854372,0.513773,-0.380537,0.768914,0.375419,-0.193930,0.906340,0.513773,-0.380537,0.768914,0.545024,-0.193930,0.815684,0.545024,-0.193930,0.815684,0.513773,-0.380537,0.768914,0.653909,-0.380537,0.653907,0.545024,-0.193930,0.815684], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.653909,-0.380537,0.653907,0.693683,-0.193930,0.693682,0.693683,-0.193930,0.693682,0.653909,-0.380537,0.653907,0.768915,-0.380537,0.513771,0.693683,-0.193930,0.693682,0.768915,-0.380537,0.513771,0.815685,-0.193930,0.545022,0.815685,-0.193930,0.545022,0.768915,-0.380537,0.513771], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.854373,-0.380537,0.353891,0.815685,-0.193930,0.545022,0.854373,-0.380537,0.353891,0.906341,-0.193930,0.375417,0.906341,-0.193930,0.375417,0.854373,-0.380537,0.353891,0.906997,-0.380537,0.180411,0.906341,-0.193930,0.375417,0.906997,-0.380537,0.180411,0.962166,-0.193930,0.191385], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.962166,-0.193930,0.191385,0.906997,-0.380537,0.180411,0.924766,-0.380537,-0.000001,0.962166,-0.193930,0.191385,0.924766,-0.380537,-0.000001,0.981015,-0.193930,-0.000002,0.981015,-0.193930,-0.000002,0.924766,-0.380537,-0.000001,0.906996,-0.380537,-0.180414,0.981015,-0.193930,-0.000002], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.906996,-0.380537,-0.180414,0.962165,-0.193930,-0.191388,0.962165,-0.193930,-0.191388,0.906996,-0.380537,-0.180414,0.854371,-0.380537,-0.353894,0.962165,-0.193930,-0.191388,0.854371,-0.380537,-0.353894,0.906339,-0.193930,-0.375420,0.906339,-0.193930,-0.375420,0.854371,-0.380537,-0.353894], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.768914,-0.380537,-0.513774,0.906339,-0.193930,-0.375420,0.768914,-0.380537,-0.513774,0.815683,-0.193930,-0.545024,0.815683,-0.193930,-0.545024,0.768914,-0.380537,-0.513774,0.653907,-0.380537,-0.653909,0.815683,-0.193930,-0.545024,0.653907,-0.380537,-0.653909,0.693681,-0.193930,-0.693684], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.693681,-0.193930,-0.693684,0.653907,-0.380537,-0.653909,0.513771,-0.380537,-0.768916,0.693681,-0.193930,-0.693684,0.513771,-0.380537,-0.768916,0.545021,-0.193930,-0.815686,0.545021,-0.193930,-0.815686,0.513771,-0.380537,-0.768916,0.353891,-0.380537,-0.854373,0.545021,-0.193930,-0.815686], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.353891,-0.380537,-0.854373,0.375417,-0.193930,-0.906341,0.375417,-0.193930,-0.906341,0.353891,-0.380537,-0.854373,0.180411,-0.380537,-0.906997,0.375417,-0.193930,-0.906341,0.180411,-0.380537,-0.906997,0.191385,-0.193930,-0.962166,0.191385,-0.193930,-0.962166,0.180411,-0.380537,-0.906997], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.000001,-0.380537,-0.924766,0.191385,-0.193930,-0.962166,-0.000001,-0.380537,-0.924766,-0.000001,-0.193930,-0.981015,-0.000001,-0.380537,-0.924766,-0.000001,-0.552761,-0.833340,-0.162577,-0.552761,-0.817327,-0.000001,-0.380537,-0.924766,-0.162577,-0.552761,-0.817327,-0.180413,-0.380537,-0.906997], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.180413,-0.380537,-0.906997,-0.162577,-0.552761,-0.817327,-0.318905,-0.552761,-0.769906,-0.180413,-0.380537,-0.906997,-0.318905,-0.552761,-0.769906,-0.353892,-0.380537,-0.854372,-0.353892,-0.380537,-0.854372,-0.318905,-0.552761,-0.769906,-0.462979,-0.552761,-0.692897,-0.353892,-0.380537,-0.854372], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.462979,-0.552761,-0.692897,-0.513772,-0.380537,-0.768915,-0.513772,-0.380537,-0.768915,-0.462979,-0.552761,-0.692897,-0.589260,-0.552761,-0.589260,-0.513772,-0.380537,-0.768915,-0.589260,-0.552761,-0.589260,-0.653908,-0.380537,-0.653908,-0.653908,-0.380537,-0.653908,-0.589260,-0.552761,-0.589260], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.692897,-0.552761,-0.462979,-0.653908,-0.380537,-0.653908,-0.692897,-0.552761,-0.462979,-0.768915,-0.380537,-0.513772,-0.768915,-0.380537,-0.513772,-0.692897,-0.552761,-0.462979,-0.769906,-0.552761,-0.318905,-0.768915,-0.380537,-0.513772,-0.769906,-0.552761,-0.318905,-0.854372,-0.380537,-0.353892], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.854372,-0.380537,-0.353892,-0.769906,-0.552761,-0.318905,-0.817327,-0.552761,-0.162576,-0.854372,-0.380537,-0.353892,-0.817327,-0.552761,-0.162576,-0.906997,-0.380537,-0.180413,-0.906997,-0.380537,-0.180413,-0.817327,-0.552761,-0.162576,-0.833340,-0.552761,0.000000,-0.906997,-0.380537,-0.180413], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.833340,-0.552761,0.000000,-0.924766,-0.380537,0.000000,-0.924766,-0.380537,0.000000,-0.833340,-0.552761,0.000000,-0.817327,-0.552761,0.162577,-0.924766,-0.380537,0.000000,-0.817327,-0.552761,0.162577,-0.906996,-0.380537,0.180413,-0.906996,-0.380537,0.180413,-0.817327,-0.552761,0.162577], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.769905,-0.552761,0.318906,-0.906996,-0.380537,0.180413,-0.769905,-0.552761,0.318906,-0.854372,-0.380537,0.353893,-0.854372,-0.380537,0.353893,-0.769905,-0.552761,0.318906,-0.692896,-0.552761,0.462979,-0.854372,-0.380537,0.353893,-0.692896,-0.552761,0.462979,-0.768914,-0.380537,0.513773], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.768914,-0.380537,0.513773,-0.692896,-0.552761,0.462979,-0.589260,-0.552761,0.589261,-0.768914,-0.380537,0.513773,-0.589260,-0.552761,0.589261,-0.653908,-0.380537,0.653908,-0.653908,-0.380537,0.653908,-0.589260,-0.552761,0.589261,-0.462978,-0.552761,0.692897,-0.653908,-0.380537,0.653908], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.462978,-0.552761,0.692897,-0.513772,-0.380537,0.768915,-0.513772,-0.380537,0.768915,-0.462978,-0.552761,0.692897,-0.318905,-0.552761,0.769906,-0.513772,-0.380537,0.768915,-0.318905,-0.552761,0.769906,-0.353892,-0.380537,0.854372,-0.353892,-0.380537,0.854372,-0.318905,-0.552761,0.769906], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.162576,-0.552761,0.817328,-0.353892,-0.380537,0.854372,-0.162576,-0.552761,0.817328,-0.180412,-0.380537,0.906997,-0.180412,-0.380537,0.906997,-0.162576,-0.552761,0.817328,0.000001,-0.552761,0.833340,-0.180412,-0.380537,0.906997,0.000001,-0.552761,0.833340,0.000001,-0.380537,0.924766], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000001,-0.380537,0.924766,0.000001,-0.552761,0.833340,0.162577,-0.552761,0.817327,0.000001,-0.380537,0.924766,0.162577,-0.552761,0.817327,0.180414,-0.380537,0.906996,0.180414,-0.380537,0.906996,0.162577,-0.552761,0.817327,0.318906,-0.552761,0.769905,0.180414,-0.380537,0.906996], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.318906,-0.552761,0.769905,0.353893,-0.380537,0.854372,0.353893,-0.380537,0.854372,0.318906,-0.552761,0.769905,0.462980,-0.552761,0.692896,0.353893,-0.380537,0.854372,0.462980,-0.552761,0.692896,0.513773,-0.380537,0.768914,0.513773,-0.380537,0.768914,0.462980,-0.552761,0.692896], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.589261,-0.552761,0.589260,0.513773,-0.380537,0.768914,0.589261,-0.552761,0.589260,0.653909,-0.380537,0.653907,0.653909,-0.380537,0.653907,0.589261,-0.552761,0.589260,0.692897,-0.552761,0.462978,0.653909,-0.380537,0.653907,0.692897,-0.552761,0.462978,0.768915,-0.380537,0.513771], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.768915,-0.380537,0.513771,0.692897,-0.552761,0.462978,0.769906,-0.552761,0.318904,0.768915,-0.380537,0.513771,0.769906,-0.552761,0.318904,0.854373,-0.380537,0.353891,0.854373,-0.380537,0.353891,0.769906,-0.552761,0.318904,0.817328,-0.552761,0.162575,0.854373,-0.380537,0.353891], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.817328,-0.552761,0.162575,0.906997,-0.380537,0.180411,0.906997,-0.380537,0.180411,0.817328,-0.552761,0.162575,0.833340,-0.552761,-0.000001,0.906997,-0.380537,0.180411,0.833340,-0.552761,-0.000001,0.924766,-0.380537,-0.000001,0.924766,-0.380537,-0.000001,0.833340,-0.552761,-0.000001], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.817327,-0.552761,-0.162578,0.924766,-0.380537,-0.000001,0.817327,-0.552761,-0.162578,0.906996,-0.380537,-0.180414,0.906996,-0.380537,-0.180414,0.817327,-0.552761,-0.162578,0.769905,-0.552761,-0.318907,0.906996,-0.380537,-0.180414,0.769905,-0.552761,-0.318907,0.854371,-0.380537,-0.353894], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.854371,-0.380537,-0.353894,0.769905,-0.552761,-0.318907,0.692896,-0.552761,-0.462980,0.854371,-0.380537,-0.353894,0.692896,-0.552761,-0.462980,0.768914,-0.380537,-0.513774,0.768914,-0.380537,-0.513774,0.692896,-0.552761,-0.462980,0.589259,-0.552761,-0.589261,0.768914,-0.380537,-0.513774], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.589259,-0.552761,-0.589261,0.653907,-0.380537,-0.653909,0.653907,-0.380537,-0.653909,0.589259,-0.552761,-0.589261,0.462977,-0.552761,-0.692898,0.653907,-0.380537,-0.653909,0.462977,-0.552761,-0.692898,0.513771,-0.380537,-0.768916,0.513771,-0.380537,-0.768916,0.462977,-0.552761,-0.692898], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.318904,-0.552761,-0.769906,0.513771,-0.380537,-0.768916,0.318904,-0.552761,-0.769906,0.353891,-0.380537,-0.854373,0.353891,-0.380537,-0.854373,0.318904,-0.552761,-0.769906,0.162575,-0.552761,-0.817328,0.353891,-0.380537,-0.854373,0.162575,-0.552761,-0.817328,0.180411,-0.380537,-0.906997], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.180411,-0.380537,-0.906997,0.162575,-0.552761,-0.817328,-0.000001,-0.552761,-0.833340,0.180411,-0.380537,-0.906997,-0.000001,-0.552761,-0.833340,-0.000001,-0.380537,-0.924766,-0.000001,-0.552761,-0.833340,-0.000000,-0.704059,-0.710141,-0.138542,-0.704059,-0.696496,-0.000001,-0.552761,-0.833340], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.138542,-0.704059,-0.696496,-0.162577,-0.552761,-0.817327,-0.162577,-0.552761,-0.817327,-0.138542,-0.704059,-0.696496,-0.271759,-0.704059,-0.656085,-0.162577,-0.552761,-0.817327,-0.271759,-0.704059,-0.656085,-0.318905,-0.552761,-0.769906,-0.318905,-0.552761,-0.769906,-0.271759,-0.704059,-0.656085], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.394533,-0.704059,-0.590461,-0.318905,-0.552761,-0.769906,-0.394533,-0.704059,-0.590461,-0.462979,-0.552761,-0.692897,-0.462979,-0.552761,-0.692897,-0.394533,-0.704059,-0.590461,-0.502146,-0.704059,-0.502146,-0.462979,-0.552761,-0.692897,-0.502146,-0.704059,-0.502146,-0.589260,-0.552761,-0.589260], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.589260,-0.552761,-0.589260,-0.502146,-0.704059,-0.502146,-0.590461,-0.704059,-0.394533,-0.589260,-0.552761,-0.589260,-0.590461,-0.704059,-0.394533,-0.692897,-0.552761,-0.462979,-0.692897,-0.552761,-0.462979,-0.590461,-0.704059,-0.394533,-0.656085,-0.704059,-0.271759,-0.692897,-0.552761,-0.462979], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.656085,-0.704059,-0.271759,-0.769906,-0.552761,-0.318905,-0.769906,-0.552761,-0.318905,-0.656085,-0.704059,-0.271759,-0.696496,-0.704059,-0.138541,-0.769906,-0.552761,-0.318905,-0.696496,-0.704059,-0.138541,-0.817327,-0.552761,-0.162576,-0.817327,-0.552761,-0.162576,-0.696496,-0.704059,-0.138541], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.710141,-0.704059,0.000000,-0.817327,-0.552761,-0.162576,-0.710141,-0.704059,0.000000,-0.833340,-0.552761,0.000000,-0.833340,-0.552761,0.000000,-0.710141,-0.704059,0.000000,-0.696496,-0.704059,0.138542,-0.833340,-0.552761,0.000000,-0.696496,-0.704059,0.138542,-0.817327,-0.552761,0.162577], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.817327,-0.552761,0.162577,-0.696496,-0.704059,0.138542,-0.656085,-0.704059,0.271760,-0.817327,-0.552761,0.162577,-0.656085,-0.704059,0.271760,-0.769905,-0.552761,0.318906,-0.769905,-0.552761,0.318906,-0.656085,-0.704059,0.271760,-0.590461,-0.704059,0.394534,-0.769905,-0.552761,0.318906], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.590461,-0.704059,0.394534,-0.692896,-0.552761,0.462979,-0.692896,-0.552761,0.462979,-0.590461,-0.704059,0.394534,-0.502146,-0.704059,0.502146,-0.692896,-0.552761,0.462979,-0.502146,-0.704059,0.502146,-0.589260,-0.552761,0.589261,-0.589260,-0.552761,0.589261,-0.502146,-0.704059,0.502146], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.394533,-0.704059,0.590461,-0.589260,-0.552761,0.589261,-0.394533,-0.704059,0.590461,-0.462978,-0.552761,0.692897,-0.462978,-0.552761,0.692897,-0.394533,-0.704059,0.590461,-0.271759,-0.704059,0.656085,-0.462978,-0.552761,0.692897,-0.271759,-0.704059,0.656085,-0.318905,-0.552761,0.769906], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.318905,-0.552761,0.769906,-0.271759,-0.704059,0.656085,-0.138541,-0.704059,0.696496,-0.318905,-0.552761,0.769906,-0.138541,-0.704059,0.696496,-0.162576,-0.552761,0.817328,-0.162576,-0.552761,0.817328,-0.138541,-0.704059,0.696496,0.000001,-0.704059,0.710141,-0.162576,-0.552761,0.817328], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000001,-0.704059,0.710141,0.000001,-0.552761,0.833340,0.000001,-0.552761,0.833340,0.000001,-0.704059,0.710141,0.138542,-0.704059,0.696496,0.000001,-0.552761,0.833340,0.138542,-0.704059,0.696496,0.162577,-0.552761,0.817327,0.162577,-0.552761,0.817327,0.138542,-0.704059,0.696496], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.271760,-0.704059,0.656085,0.162577,-0.552761,0.817327,0.271760,-0.704059,0.656085,0.318906,-0.552761,0.769905,0.318906,-0.552761,0.769905,0.271760,-0.704059,0.656085,0.394534,-0.704059,0.590461,0.318906,-0.552761,0.769905,0.394534,-0.704059,0.590461,0.462980,-0.552761,0.692896], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.462980,-0.552761,0.692896,0.394534,-0.704059,0.590461,0.502146,-0.704059,0.502145,0.462980,-0.552761,0.692896,0.502146,-0.704059,0.502145,0.589261,-0.552761,0.589260,0.589261,-0.552761,0.589260,0.502146,-0.704059,0.502145,0.590462,-0.704059,0.394533,0.589261,-0.552761,0.589260], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.590462,-0.704059,0.394533,0.692897,-0.552761,0.462978,0.692897,-0.552761,0.462978,0.590462,-0.704059,0.394533,0.656086,-0.704059,0.271758,0.692897,-0.552761,0.462978,0.656086,-0.704059,0.271758,0.769906,-0.552761,0.318904,0.769906,-0.552761,0.318904,0.656086,-0.704059,0.271758], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.696496,-0.704059,0.138541,0.769906,-0.552761,0.318904,0.696496,-0.704059,0.138541,0.817328,-0.552761,0.162575,0.817328,-0.552761,0.162575,0.696496,-0.704059,0.138541,0.710141,-0.704059,-0.000001,0.817328,-0.552761,0.162575,0.710141,-0.704059,-0.000001,0.833340,-0.552761,-0.000001], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.833340,-0.552761,-0.000001,0.710141,-0.704059,-0.000001,0.696496,-0.704059,-0.138543,0.833340,-0.552761,-0.000001,0.696496,-0.704059,-0.138543,0.817327,-0.552761,-0.162578,0.817327,-0.552761,-0.162578,0.696496,-0.704059,-0.138543,0.656085,-0.704059,-0.271760,0.817327,-0.552761,-0.162578], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.656085,-0.704059,-0.271760,0.769905,-0.552761,-0.318907,0.769905,-0.552761,-0.318907,0.656085,-0.704059,-0.271760,0.590460,-0.704059,-0.394535,0.769905,-0.552761,-0.318907,0.590460,-0.704059,-0.394535,0.692896,-0.552761,-0.462980,0.692896,-0.552761,-0.462980,0.590460,-0.704059,-0.394535], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.502145,-0.704059,-0.502147,0.692896,-0.552761,-0.462980,0.502145,-0.704059,-0.502147,0.589259,-0.552761,-0.589261,0.589259,-0.552761,-0.589261,0.502145,-0.704059,-0.502147,0.394532,-0.704059,-0.590462,0.589259,-0.552761,-0.589261,0.394532,-0.704059,-0.590462,0.462977,-0.552761,-0.692898], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.462977,-0.552761,-0.692898,0.394532,-0.704059,-0.590462,0.271758,-0.704059,-0.656086,0.462977,-0.552761,-0.692898,0.271758,-0.704059,-0.656086,0.318904,-0.552761,-0.769906,0.318904,-0.552761,-0.769906,0.271758,-0.704059,-0.656086,0.138540,-0.704059,-0.696497,0.318904,-0.552761,-0.769906], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.138540,-0.704059,-0.696497,0.162575,-0.552761,-0.817328,0.162575,-0.552761,-0.817328,0.138540,-0.704059,-0.696497,-0.000000,-0.704059,-0.710141,0.162575,-0.552761,-0.817328,-0.000000,-0.704059,-0.710141,-0.000001,-0.552761,-0.833340,-0.000000,-0.704059,-0.710141,-0.000000,-0.828645,-0.559775], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.109207,-0.828645,-0.549019,-0.000000,-0.704059,-0.710141,-0.109207,-0.828645,-0.549019,-0.138542,-0.704059,-0.696496,-0.138542,-0.704059,-0.696496,-0.109207,-0.828645,-0.549019,-0.214217,-0.828645,-0.517165,-0.138542,-0.704059,-0.696496,-0.214217,-0.828645,-0.517165,-0.271759,-0.704059,-0.656085], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.271759,-0.704059,-0.656085,-0.214217,-0.828645,-0.517165,-0.310994,-0.828645,-0.465436,-0.271759,-0.704059,-0.656085,-0.310994,-0.828645,-0.465436,-0.394533,-0.704059,-0.590461,-0.394533,-0.704059,-0.590461,-0.310994,-0.828645,-0.465436,-0.395821,-0.828645,-0.395821,-0.394533,-0.704059,-0.590461], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.395821,-0.828645,-0.395821,-0.502146,-0.704059,-0.502146,-0.502146,-0.704059,-0.502146,-0.395821,-0.828645,-0.395821,-0.465436,-0.828645,-0.310994,-0.502146,-0.704059,-0.502146,-0.465436,-0.828645,-0.310994,-0.590461,-0.704059,-0.394533,-0.590461,-0.704059,-0.394533,-0.465436,-0.828645,-0.310994], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.517165,-0.828645,-0.214217,-0.590461,-0.704059,-0.394533,-0.517165,-0.828645,-0.214217,-0.656085,-0.704059,-0.271759,-0.656085,-0.704059,-0.271759,-0.517165,-0.828645,-0.214217,-0.549019,-0.828645,-0.109207,-0.656085,-0.704059,-0.271759,-0.549019,-0.828645,-0.109207,-0.696496,-0.704059,-0.138541], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.696496,-0.704059,-0.138541,-0.549019,-0.828645,-0.109207,-0.559775,-0.828645,0.000000,-0.696496,-0.704059,-0.138541,-0.559775,-0.828645,0.000000,-0.710141,-0.704059,0.000000,-0.710141,-0.704059,0.000000,-0.559775,-0.828645,0.000000,-0.549019,-0.828645,0.109207,-0.710141,-0.704059,0.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.549019,-0.828645,0.109207,-0.696496,-0.704059,0.138542,-0.696496,-0.704059,0.138542,-0.549019,-0.828645,0.109207,-0.517165,-0.828645,0.214217,-0.696496,-0.704059,0.138542,-0.517165,-0.828645,0.214217,-0.656085,-0.704059,0.271760,-0.656085,-0.704059,0.271760,-0.517165,-0.828645,0.214217], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.465436,-0.828645,0.310995,-0.656085,-0.704059,0.271760,-0.465436,-0.828645,0.310995,-0.590461,-0.704059,0.394534,-0.590461,-0.704059,0.394534,-0.465436,-0.828645,0.310995,-0.395820,-0.828645,0.395821,-0.590461,-0.704059,0.394534,-0.395820,-0.828645,0.395821,-0.502146,-0.704059,0.502146], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.502146,-0.704059,0.502146,-0.395820,-0.828645,0.395821,-0.310994,-0.828645,0.465436,-0.502146,-0.704059,0.502146,-0.310994,-0.828645,0.465436,-0.394533,-0.704059,0.590461,-0.394533,-0.704059,0.590461,-0.310994,-0.828645,0.465436,-0.214216,-0.828645,0.517165,-0.394533,-0.704059,0.590461], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.214216,-0.828645,0.517165,-0.271759,-0.704059,0.656085,-0.271759,-0.704059,0.656085,-0.214216,-0.828645,0.517165,-0.109206,-0.828645,0.549019,-0.271759,-0.704059,0.656085,-0.109206,-0.828645,0.549019,-0.138541,-0.704059,0.696496,-0.138541,-0.704059,0.696496,-0.109206,-0.828645,0.549019], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000001,-0.828645,0.559775,-0.138541,-0.704059,0.696496,0.000001,-0.828645,0.559775,0.000001,-0.704059,0.710141,0.000001,-0.704059,0.710141,0.000001,-0.828645,0.559775,0.109207,-0.828645,0.549019,0.000001,-0.704059,0.710141,0.109207,-0.828645,0.549019,0.138542,-0.704059,0.696496], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.138542,-0.704059,0.696496,0.109207,-0.828645,0.549019,0.214217,-0.828645,0.517164,0.138542,-0.704059,0.696496,0.214217,-0.828645,0.517164,0.271760,-0.704059,0.656085,0.271760,-0.704059,0.656085,0.214217,-0.828645,0.517164,0.310995,-0.828645,0.465436,0.271760,-0.704059,0.656085], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.310995,-0.828645,0.465436,0.394534,-0.704059,0.590461,0.394534,-0.704059,0.590461,0.310995,-0.828645,0.465436,0.395821,-0.828645,0.395820,0.394534,-0.704059,0.590461,0.395821,-0.828645,0.395820,0.502146,-0.704059,0.502145,0.502146,-0.704059,0.502145,0.395821,-0.828645,0.395820], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.465436,-0.828645,0.310994,0.502146,-0.704059,0.502145,0.465436,-0.828645,0.310994,0.590462,-0.704059,0.394533,0.590462,-0.704059,0.394533,0.465436,-0.828645,0.310994,0.517165,-0.828645,0.214216,0.590462,-0.704059,0.394533,0.517165,-0.828645,0.214216,0.656086,-0.704059,0.271758], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.656086,-0.704059,0.271758,0.517165,-0.828645,0.214216,0.549019,-0.828645,0.109206,0.656086,-0.704059,0.271758,0.549019,-0.828645,0.109206,0.696496,-0.704059,0.138541,0.696496,-0.704059,0.138541,0.549019,-0.828645,0.109206,0.559775,-0.828645,-0.000001,0.696496,-0.704059,0.138541], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.559775,-0.828645,-0.000001,0.710141,-0.704059,-0.000001,0.710141,-0.704059,-0.000001,0.559775,-0.828645,-0.000001,0.549019,-0.828645,-0.109208,0.710141,-0.704059,-0.000001,0.549019,-0.828645,-0.109208,0.696496,-0.704059,-0.138543,0.696496,-0.704059,-0.138543,0.549019,-0.828645,-0.109208], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.517164,-0.828645,-0.214217,0.696496,-0.704059,-0.138543,0.517164,-0.828645,-0.214217,0.656085,-0.704059,-0.271760,0.656085,-0.704059,-0.271760,0.517164,-0.828645,-0.214217,0.465435,-0.828645,-0.310995,0.656085,-0.704059,-0.271760,0.465435,-0.828645,-0.310995,0.590460,-0.704059,-0.394535], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.590460,-0.704059,-0.394535,0.465435,-0.828645,-0.310995,0.395820,-0.828645,-0.395822,0.590460,-0.704059,-0.394535,0.395820,-0.828645,-0.395822,0.502145,-0.704059,-0.502147,0.502145,-0.704059,-0.502147,0.395820,-0.828645,-0.395822,0.310993,-0.828645,-0.465437,0.502145,-0.704059,-0.502147], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.310993,-0.828645,-0.465437,0.394532,-0.704059,-0.590462,0.394532,-0.704059,-0.590462,0.310993,-0.828645,-0.465437,0.214216,-0.828645,-0.517165,0.394532,-0.704059,-0.590462,0.214216,-0.828645,-0.517165,0.271758,-0.704059,-0.656086,0.271758,-0.704059,-0.656086,0.214216,-0.828645,-0.517165], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.109206,-0.828645,-0.549019,0.271758,-0.704059,-0.656086,0.109206,-0.828645,-0.549019,0.138540,-0.704059,-0.696497,0.138540,-0.704059,-0.696497,0.109206,-0.828645,-0.549019,-0.000000,-0.828645,-0.559775,0.138540,-0.704059,-0.696497,-0.000000,-0.828645,-0.559775,-0.000000,-0.704059,-0.710141], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.000000,-0.828645,-0.559775,-0.000000,-0.921707,-0.387887,-0.075673,-0.921707,-0.380433,-0.000000,-0.828645,-0.559775,-0.075673,-0.921707,-0.380433,-0.109207,-0.828645,-0.549019,-0.109207,-0.828645,-0.549019,-0.075673,-0.921707,-0.380433,-0.148438,-0.921707,-0.358361,-0.109207,-0.828645,-0.549019], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.148438,-0.921707,-0.358361,-0.214217,-0.828645,-0.517165,-0.214217,-0.828645,-0.517165,-0.148438,-0.921707,-0.358361,-0.215498,-0.921707,-0.322516,-0.214217,-0.828645,-0.517165,-0.215498,-0.921707,-0.322516,-0.310994,-0.828645,-0.465436,-0.310994,-0.828645,-0.465436,-0.215498,-0.921707,-0.322516], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.274277,-0.921707,-0.274277,-0.310994,-0.828645,-0.465436,-0.274277,-0.921707,-0.274277,-0.395821,-0.828645,-0.395821,-0.395821,-0.828645,-0.395821,-0.274277,-0.921707,-0.274277,-0.322516,-0.921707,-0.215498,-0.395821,-0.828645,-0.395821,-0.322516,-0.921707,-0.215498,-0.465436,-0.828645,-0.310994], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.465436,-0.828645,-0.310994,-0.322516,-0.921707,-0.215498,-0.358361,-0.921707,-0.148438,-0.465436,-0.828645,-0.310994,-0.358361,-0.921707,-0.148438,-0.517165,-0.828645,-0.214217,-0.517165,-0.828645,-0.214217,-0.358361,-0.921707,-0.148438,-0.380434,-0.921707,-0.075673,-0.517165,-0.828645,-0.214217], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.380434,-0.921707,-0.075673,-0.549019,-0.828645,-0.109207,-0.549019,-0.828645,-0.109207,-0.380434,-0.921707,-0.075673,-0.387887,-0.921707,0.000000,-0.549019,-0.828645,-0.109207,-0.387887,-0.921707,0.000000,-0.559775,-0.828645,0.000000,-0.559775,-0.828645,0.000000,-0.387887,-0.921707,0.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.380434,-0.921707,0.075673,-0.559775,-0.828645,0.000000,-0.380434,-0.921707,0.075673,-0.549019,-0.828645,0.109207,-0.549019,-0.828645,0.109207,-0.380434,-0.921707,0.075673,-0.358361,-0.921707,0.148438,-0.549019,-0.828645,0.109207,-0.358361,-0.921707,0.148438,-0.517165,-0.828645,0.214217], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.517165,-0.828645,0.214217,-0.358361,-0.921707,0.148438,-0.322516,-0.921707,0.215498,-0.517165,-0.828645,0.214217,-0.322516,-0.921707,0.215498,-0.465436,-0.828645,0.310995,-0.465436,-0.828645,0.310995,-0.322516,-0.921707,0.215498,-0.274277,-0.921707,0.274277,-0.465436,-0.828645,0.310995], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.274277,-0.921707,0.274277,-0.395820,-0.828645,0.395821,-0.395820,-0.828645,0.395821,-0.274277,-0.921707,0.274277,-0.215498,-0.921707,0.322516,-0.395820,-0.828645,0.395821,-0.215498,-0.921707,0.322516,-0.310994,-0.828645,0.465436,-0.310994,-0.828645,0.465436,-0.215498,-0.921707,0.322516], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.148437,-0.921707,0.358361,-0.310994,-0.828645,0.465436,-0.148437,-0.921707,0.358361,-0.214216,-0.828645,0.517165,-0.214216,-0.828645,0.517165,-0.148437,-0.921707,0.358361,-0.075673,-0.921707,0.380434,-0.214216,-0.828645,0.517165,-0.075673,-0.921707,0.380434,-0.109206,-0.828645,0.549019], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.109206,-0.828645,0.549019,-0.075673,-0.921707,0.380434,0.000000,-0.921707,0.387887,-0.109206,-0.828645,0.549019,0.000000,-0.921707,0.387887,0.000001,-0.828645,0.559775,0.000001,-0.828645,0.559775,0.000000,-0.921707,0.387887,0.075673,-0.921707,0.380433,0.000001,-0.828645,0.559775], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.075673,-0.921707,0.380433,0.109207,-0.828645,0.549019,0.109207,-0.828645,0.549019,0.075673,-0.921707,0.380433,0.148438,-0.921707,0.358360,0.109207,-0.828645,0.549019,0.148438,-0.921707,0.358360,0.214217,-0.828645,0.517164,0.214217,-0.828645,0.517164,0.148438,-0.921707,0.358360], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.215499,-0.921707,0.322516,0.214217,-0.828645,0.517164,0.215499,-0.921707,0.322516,0.310995,-0.828645,0.465436,0.310995,-0.828645,0.465436,0.215499,-0.921707,0.322516,0.274278,-0.921707,0.274277,0.310995,-0.828645,0.465436,0.274278,-0.921707,0.274277,0.395821,-0.828645,0.395820], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.395821,-0.828645,0.395820,0.274278,-0.921707,0.274277,0.322516,-0.921707,0.215498,0.395821,-0.828645,0.395820,0.322516,-0.921707,0.215498,0.465436,-0.828645,0.310994,0.465436,-0.828645,0.310994,0.322516,-0.921707,0.215498,0.358361,-0.921707,0.148437,0.465436,-0.828645,0.310994], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.358361,-0.921707,0.148437,0.517165,-0.828645,0.214216,0.517165,-0.828645,0.214216,0.358361,-0.921707,0.148437,0.380434,-0.921707,0.075672,0.517165,-0.828645,0.214216,0.380434,-0.921707,0.075672,0.549019,-0.828645,0.109206,0.549019,-0.828645,0.109206,0.380434,-0.921707,0.075672], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.387887,-0.921707,-0.000001,0.549019,-0.828645,0.109206,0.387887,-0.921707,-0.000001,0.559775,-0.828645,-0.000001,0.559775,-0.828645,-0.000001,0.387887,-0.921707,-0.000001,0.380433,-0.921707,-0.075674,0.559775,-0.828645,-0.000001,0.380433,-0.921707,-0.075674,0.549019,-0.828645,-0.109208], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.549019,-0.828645,-0.109208,0.380433,-0.921707,-0.075674,0.358360,-0.921707,-0.148438,0.549019,-0.828645,-0.109208,0.358360,-0.921707,-0.148438,0.517164,-0.828645,-0.214217,0.517164,-0.828645,-0.214217,0.358360,-0.921707,-0.148438,0.322516,-0.921707,-0.215499,0.517164,-0.828645,-0.214217], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.322516,-0.921707,-0.215499,0.465435,-0.828645,-0.310995,0.465435,-0.828645,-0.310995,0.322516,-0.921707,-0.215499,0.274277,-0.921707,-0.274278,0.465435,-0.828645,-0.310995,0.274277,-0.921707,-0.274278,0.395820,-0.828645,-0.395822,0.395820,-0.828645,-0.395822,0.274277,-0.921707,-0.274278], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.215498,-0.921707,-0.322516,0.395820,-0.828645,-0.395822,0.215498,-0.921707,-0.322516,0.310993,-0.828645,-0.465437,0.310993,-0.828645,-0.465437,0.215498,-0.921707,-0.322516,0.148437,-0.921707,-0.358361,0.310993,-0.828645,-0.465437,0.148437,-0.921707,-0.358361,0.214216,-0.828645,-0.517165], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.214216,-0.828645,-0.517165,0.148437,-0.921707,-0.358361,0.075672,-0.921707,-0.380434,0.214216,-0.828645,-0.517165,0.075672,-0.921707,-0.380434,0.109206,-0.828645,-0.549019,0.109206,-0.828645,-0.549019,0.075672,-0.921707,-0.380434,-0.000000,-0.921707,-0.387887,0.109206,-0.828645,-0.549019], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.000000,-0.921707,-0.387887,-0.000000,-0.828645,-0.559775,-0.000000,-0.921707,-0.387887,-0.000000,-0.979598,-0.200969,-0.039207,-0.979598,-0.197107,-0.000000,-0.921707,-0.387887,-0.039207,-0.979598,-0.197107,-0.075673,-0.921707,-0.380433,-0.075673,-0.921707,-0.380433,-0.039207,-0.979598,-0.197107], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.076907,-0.979598,-0.185671,-0.075673,-0.921707,-0.380433,-0.076907,-0.979598,-0.185671,-0.148438,-0.921707,-0.358361,-0.148438,-0.921707,-0.358361,-0.076907,-0.979598,-0.185671,-0.111652,-0.979598,-0.167099,-0.148438,-0.921707,-0.358361,-0.111652,-0.979598,-0.167099,-0.215498,-0.921707,-0.322516], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.215498,-0.921707,-0.322516,-0.111652,-0.979598,-0.167099,-0.142106,-0.979598,-0.142106,-0.215498,-0.921707,-0.322516,-0.142106,-0.979598,-0.142106,-0.274277,-0.921707,-0.274277,-0.274277,-0.921707,-0.274277,-0.142106,-0.979598,-0.142106,-0.167099,-0.979598,-0.111652,-0.274277,-0.921707,-0.274277], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.167099,-0.979598,-0.111652,-0.322516,-0.921707,-0.215498,-0.322516,-0.921707,-0.215498,-0.167099,-0.979598,-0.111652,-0.185671,-0.979598,-0.076907,-0.322516,-0.921707,-0.215498,-0.185671,-0.979598,-0.076907,-0.358361,-0.921707,-0.148438,-0.358361,-0.921707,-0.148438,-0.185671,-0.979598,-0.076907], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.197107,-0.979598,-0.039207,-0.358361,-0.921707,-0.148438,-0.197107,-0.979598,-0.039207,-0.380434,-0.921707,-0.075673,-0.380434,-0.921707,-0.075673,-0.197107,-0.979598,-0.039207,-0.200969,-0.979598,0.000000,-0.380434,-0.921707,-0.075673,-0.200969,-0.979598,0.000000,-0.387887,-0.921707,0.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.387887,-0.921707,0.000000,-0.200969,-0.979598,0.000000,-0.197107,-0.979598,0.039207,-0.387887,-0.921707,0.000000,-0.197107,-0.979598,0.039207,-0.380434,-0.921707,0.075673,-0.380434,-0.921707,0.075673,-0.197107,-0.979598,0.039207,-0.185671,-0.979598,0.076907,-0.380434,-0.921707,0.075673], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.185671,-0.979598,0.076907,-0.358361,-0.921707,0.148438,-0.358361,-0.921707,0.148438,-0.185671,-0.979598,0.076907,-0.167099,-0.979598,0.111652,-0.358361,-0.921707,0.148438,-0.167099,-0.979598,0.111652,-0.322516,-0.921707,0.215498,-0.322516,-0.921707,0.215498,-0.167099,-0.979598,0.111652], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.142106,-0.979598,0.142106,-0.322516,-0.921707,0.215498,-0.142106,-0.979598,0.142106,-0.274277,-0.921707,0.274277,-0.274277,-0.921707,0.274277,-0.142106,-0.979598,0.142106,-0.111652,-0.979598,0.167099,-0.274277,-0.921707,0.274277,-0.111652,-0.979598,0.167099,-0.215498,-0.921707,0.322516], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.215498,-0.921707,0.322516,-0.111652,-0.979598,0.167099,-0.076907,-0.979598,0.185671,-0.215498,-0.921707,0.322516,-0.076907,-0.979598,0.185671,-0.148437,-0.921707,0.358361,-0.148437,-0.921707,0.358361,-0.076907,-0.979598,0.185671,-0.039207,-0.979598,0.197107,-0.148437,-0.921707,0.358361], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.039207,-0.979598,0.197107,-0.075673,-0.921707,0.380434,-0.075673,-0.921707,0.380434,-0.039207,-0.979598,0.197107,0.000000,-0.979598,0.200969,-0.075673,-0.921707,0.380434,0.000000,-0.979598,0.200969,0.000000,-0.921707,0.387887,0.000000,-0.921707,0.387887,0.000000,-0.979598,0.200969], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.039207,-0.979598,0.197107,0.000000,-0.921707,0.387887,0.039207,-0.979598,0.197107,0.075673,-0.921707,0.380433,0.075673,-0.921707,0.380433,0.039207,-0.979598,0.197107,0.076908,-0.979598,0.185671,0.075673,-0.921707,0.380433,0.076908,-0.979598,0.185671,0.148438,-0.921707,0.358360], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.148438,-0.921707,0.358360,0.076908,-0.979598,0.185671,0.111652,-0.979598,0.167099,0.148438,-0.921707,0.358360,0.111652,-0.979598,0.167099,0.215499,-0.921707,0.322516,0.215499,-0.921707,0.322516,0.111652,-0.979598,0.167099,0.142106,-0.979598,0.142106,0.215499,-0.921707,0.322516], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.142106,-0.979598,0.142106,0.274278,-0.921707,0.274277,0.274278,-0.921707,0.274277,0.142106,-0.979598,0.142106,0.167099,-0.979598,0.111652,0.274278,-0.921707,0.274277,0.167099,-0.979598,0.111652,0.322516,-0.921707,0.215498,0.322516,-0.921707,0.215498,0.167099,-0.979598,0.111652], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.185671,-0.979598,0.076907,0.322516,-0.921707,0.215498,0.185671,-0.979598,0.076907,0.358361,-0.921707,0.148437,0.358361,-0.921707,0.148437,0.185671,-0.979598,0.076907,0.197107,-0.979598,0.039207,0.358361,-0.921707,0.148437,0.197107,-0.979598,0.039207,0.380434,-0.921707,0.075672], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.380434,-0.921707,0.075672,0.197107,-0.979598,0.039207,0.200969,-0.979598,-0.000000,0.380434,-0.921707,0.075672,0.200969,-0.979598,-0.000000,0.387887,-0.921707,-0.000001,0.387887,-0.921707,-0.000001,0.200969,-0.979598,-0.000000,0.197107,-0.979598,-0.039207,0.387887,-0.921707,-0.000001], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.197107,-0.979598,-0.039207,0.380433,-0.921707,-0.075674,0.380433,-0.921707,-0.075674,0.197107,-0.979598,-0.039207,0.185671,-0.979598,-0.076908,0.380433,-0.921707,-0.075674,0.185671,-0.979598,-0.076908,0.358360,-0.921707,-0.148438,0.358360,-0.921707,-0.148438,0.185671,-0.979598,-0.076908], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.167099,-0.979598,-0.111652,0.358360,-0.921707,-0.148438,0.167099,-0.979598,-0.111652,0.322516,-0.921707,-0.215499,0.322516,-0.921707,-0.215499,0.167099,-0.979598,-0.111652,0.142106,-0.979598,-0.142107,0.322516,-0.921707,-0.215499,0.142106,-0.979598,-0.142107,0.274277,-0.921707,-0.274278], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.274277,-0.921707,-0.274278,0.142106,-0.979598,-0.142107,0.111652,-0.979598,-0.167100,0.274277,-0.921707,-0.274278,0.111652,-0.979598,-0.167100,0.215498,-0.921707,-0.322516,0.215498,-0.921707,-0.322516,0.111652,-0.979598,-0.167100,0.076907,-0.979598,-0.185671,0.215498,-0.921707,-0.322516], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.076907,-0.979598,-0.185671,0.148437,-0.921707,-0.358361,0.148437,-0.921707,-0.358361,0.076907,-0.979598,-0.185671,0.039207,-0.979598,-0.197107,0.148437,-0.921707,-0.358361,0.039207,-0.979598,-0.197107,0.075672,-0.921707,-0.380434,0.075672,-0.921707,-0.380434,0.039207,-0.979598,-0.197107], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.000000,-0.979598,-0.200969,0.075672,-0.921707,-0.380434,-0.000000,-0.979598,-0.200969,-0.000000,-0.921707,-0.387887,-0.000000,-1.000000,0.000000,-0.039207,-0.979598,-0.197107,-0.000000,-0.979598,-0.200969,-0.000000,-1.000000,0.000000,-0.076907,-0.979598,-0.185671,-0.039207,-0.979598,-0.197107], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.000000,-1.000000,0.000000,-0.111652,-0.979598,-0.167099,-0.076907,-0.979598,-0.185671,-0.000000,-1.000000,0.000000,-0.142106,-0.979598,-0.142106,-0.111652,-0.979598,-0.167099,-0.000000,-1.000000,0.000000,-0.167099,-0.979598,-0.111652,-0.142106,-0.979598,-0.142106,-0.000000,-1.000000,0.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.185671,-0.979598,-0.076907,-0.167099,-0.979598,-0.111652,-0.000000,-1.000000,0.000000,-0.197107,-0.979598,-0.039207,-0.185671,-0.979598,-0.076907,-0.000000,-1.000000,0.000000,-0.200969,-0.979598,0.000000,-0.197107,-0.979598,-0.039207,-0.000000,-1.000000,0.000000,-0.197107,-0.979598,0.039207], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.200969,-0.979598,0.000000,-0.000000,-1.000000,0.000000,-0.185671,-0.979598,0.076907,-0.197107,-0.979598,0.039207,-0.000000,-1.000000,0.000000,-0.167099,-0.979598,0.111652,-0.185671,-0.979598,0.076907,-0.000000,-1.000000,0.000000,-0.142106,-0.979598,0.142106,-0.167099,-0.979598,0.111652], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.000000,-1.000000,0.000000,-0.111652,-0.979598,0.167099,-0.142106,-0.979598,0.142106,-0.000000,-1.000000,0.000000,-0.076907,-0.979598,0.185671,-0.111652,-0.979598,0.167099,-0.000000,-1.000000,0.000000,-0.039207,-0.979598,0.197107,-0.076907,-0.979598,0.185671,-0.000000,-1.000000,0.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.000000,-0.979598,0.200969,-0.039207,-0.979598,0.197107,-0.000000,-1.000000,0.000000,0.039207,-0.979598,0.197107,0.000000,-0.979598,0.200969,-0.000000,-1.000000,0.000000,0.076908,-0.979598,0.185671,0.039207,-0.979598,0.197107,-0.000000,-1.000000,0.000000,0.111652,-0.979598,0.167099], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.076908,-0.979598,0.185671,-0.000000,-1.000000,0.000000,0.142106,-0.979598,0.142106,0.111652,-0.979598,0.167099,-0.000000,-1.000000,0.000000,0.167099,-0.979598,0.111652,0.142106,-0.979598,0.142106,-0.000000,-1.000000,0.000000,0.185671,-0.979598,0.076907,0.167099,-0.979598,0.111652], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([-0.000000,-1.000000,0.000000,0.197107,-0.979598,0.039207,0.185671,-0.979598,0.076907,-0.000000,-1.000000,0.000000,0.200969,-0.979598,-0.000000,0.197107,-0.979598,0.039207,-0.000000,-1.000000,0.000000,0.197107,-0.979598,-0.039207,0.200969,-0.979598,-0.000000,-0.000000,-1.000000,0.000000], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.185671,-0.979598,-0.076908,0.197107,-0.979598,-0.039207,-0.000000,-1.000000,0.000000,0.167099,-0.979598,-0.111652,0.185671,-0.979598,-0.076908,-0.000000,-1.000000,0.000000,0.142106,-0.979598,-0.142107,0.167099,-0.979598,-0.111652,-0.000000,-1.000000,0.000000,0.111652,-0.979598,-0.167100], Java.type("float[]"))))
	.append(new MFVec3f(Java.to([0.142106,-0.979598,-0.142107,-0.000000,-1.000000,0.000000,0.076907,-0.979598,-0.185671,0.111652,-0.979598,-0.167100,-0.000000,-1.000000,0.000000,0.039207,-0.979598,-0.197107,0.076907,-0.979598,-0.185671,-0.000000,-1.000000,0.000000,-0.000000,-0.979598,-0.200969,0.039207,-0.979598,-0.197107], Java.type("float[]"))));
  this.x3dModel = new X3D().setProfile("Full").setVersion("4.0")
  .setHead(new head()
    .addMeta(new meta().setName("title").setContent("SpatialAudioCameraAnimation.x3d"))
    .addMeta(new meta().setName("description").setContent("In the last demo, there are two sound sources in different positions. Through the immersion in the X3D scene the user could attend a rational navigation. Whenever the camera moves in the direction of an existing sound source, the strength of this source increases, while the sound strength of the other (the second one) decreases and vice versa. Through this process, great realism of the scene is achieved, since it emulates the spatial sound in real world."))
    .addMeta(new meta().setName("info").setContent("This work presents an innovative solution of the spatial sound in X3DOM framework, that based on a combinational methodology. Specifically, we suggested the enrichment of X3DOM with spatial sound features, using both the X3D sound nodes and the structure of Web Audio API."))
    .addMeta(new meta().setName("creator").setContent("Efi Lakka, Athanasios Malamos, Dick Puk, Don Brutzman"))
    .addMeta(new meta().setName("created").setContent("28 October 2020"))
    .addMeta(new meta().setName("modified").setContent("18 November 2020"))
    .addMeta(new meta().setName("reference").setContent("CHANGELOG.txt"))
    .addMeta(new meta().setName("TODO").setContent("credit for audio files"))
    .addMeta(new meta().setName("reference").setContent("http://www.medialab.teicrete.gr/minipages/x3domAudio"))
    .addMeta(new meta().setName("identifier").setContent("https://x3dgraphics.com/examples/X3dForAdvancedModeling/AudioSpatialSound/SpatialAudioCameraAnimation.x3d"))
    .addMeta(new meta().setName("generator").setContent("X3D-Edit 4.0, https://savage.nps.edu/X3D-Edit"))
    .addMeta(new meta().setName("license").setContent("../license.html")))
  .setScene(new Scene()
    .addChild(new WorldInfo().setTitle("SpatialAudioCameraAnimation.x3d"))
    .addChild(new NavigationInfo(