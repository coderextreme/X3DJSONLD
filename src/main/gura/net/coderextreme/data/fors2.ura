X3D:
    profile: "Immersive"
    version: "3.3"
    head:
        meta:
            name: "creator"
            content: "John W Carlson"
        meta:
            name: "created"
            content: "December 13 2015"
        meta:
            name: "modified"
            content: "April 18 2017"
        meta:
            name: "title"
            content: "fors2.x3d"
        meta:
            name: "identifier"
            content: "https://coderextreme.net/X3DJSONLD/src/main/data/fors2.x3d"
        meta:
            name: "description"
            content: "beginnings of a force directed graph in 3D"
        meta:
            name: "generator"
            content: "Vim, X3D-Edit, https://savage.nps.edu/X3D-Edit"
    Scene:
        ProtoDeclare:
            name: "node"
            ProtoInterface:
                field:
                    name: "position"
                    accessType: "inputOutput"
                    type: "SFVec3f"
                    value: "0 0 0"
            ProtoBody:
                Transform:
                    DEF: "transform"
                    IS:
                        connect:
                            nodeField: "translation"
                            protoField: "position"
                    Shape:
#comment before Sphere
#comment after Sphere
#comment after Appearance
                        Sphere:
                        Appearance:
#comment before Material
#comment after Material
                            Material:
                                diffuseColor: [1, 0, 0]
                PositionInterpolator:
                    DEF: "NodePosition"
                    key: [0, 1]
                    keyValue: [0, 0, 0, 0, 5, 0]
                Script:
                    DEF: "MoveBall"
                    field:
                        name: "translation"
                        accessType: "inputOutput"
                        type: "SFVec3f"
                        value: "50 50 0"
                    field:
                        name: "old"
                        accessType: "inputOutput"
                        type: "SFVec3f"
                        value: "0 0 0"
                    field:
                        name: "set_cycle"
                        accessType: "inputOnly"
                        type: "SFTime"
                    field:
                        name: "keyValue"
                        accessType: "outputOnly"
                        type: "MFVec3f"
(.setSourceCode "\\newline					function set_cycle(value) {\\newline                                                old = translation;\\newline						translation = new SFVec3f(Math.random()*100-50, Math.random()*100-50, Math.random()*100-50);\\newline                                                keyValue = new MFVec3f([old, translation]);\\newline						// Browser.println(translation);\\newline					}\\newline")                TimeSensor:
                    DEF: "nodeClock"
                    cycleInterval: 3.0
                    loop: true
                ROUTE:
                    fromNode: "nodeClock"
                    fromField: "cycleTime"
                    toNode: "MoveBall"
                    toField: "set_cycle"
                ROUTE:
                    fromNode: "nodeClock"
                    fromField: "fraction_changed"
                    toNode: "NodePosition"
                    toField: "set_fraction"
                ROUTE:
                    fromNode: "MoveBall"
                    fromField: "keyValue"
                    toNode: "NodePosition"
                    toField: "keyValue"
                ROUTE:
                    fromNode: "NodePosition"
                    fromField: "value_changed"
                    toNode: "transform"
                    toField: "set_translation"
        ProtoDeclare:
            name: "cyl"
            ProtoInterface:
                field:
                    name: "positionA"
                    accessType: "inputOnly"
                    type: "SFVec3f"
                field:
                    name: "positionB"
                    accessType: "inputOnly"
                    type: "SFVec3f"
            ProtoBody:
                Shape:
                    Extrusion:
                        DEF: "extrusion"
                        creaseAngle: 0.785
                        crossSection: [1, 0, 0.92, -0.38, 0.71, -0.71, 0.38, -0.92, 0, -1, -0.38, -0.92, -0.71, -0.71, -0.92, -0.38, -1, 0, -0.92, 0.38, -0.71, 0.71, -0.38, 0.92, 0, 1, 0.38, 0.92, 0.71, 0.71, 0.92, 0.38, 1, 0]
                        spine: [0, -50, 0, 0, 0, 0, 0, 50, 0]
                    Appearance:
                        Material:
                            diffuseColor: [0, 1, 0]
                Script:
                    DEF: "MoveCylinder"
                    field:
                        name: "spine"
                        accessType: "inputOutput"
                        type: "MFVec3f"
                        value: "0 -50 0 0 0 0 0 50 0"
                    field:
                        name: "set_endA"
                        accessType: "inputOnly"
                        type: "SFVec3f"
                    field:
                        name: "set_endB"
                        accessType: "inputOnly"
                        type: "SFVec3f"
                    IS:
                        connect:
                            nodeField: "set_endA"
                            protoField: "positionA"
                        connect:
                            nodeField: "set_endB"
                            protoField: "positionB"
(.setSourceCode "\\newline\\newline                function set_endA(value) {\\newline		    if (typeof spine === \"undefined\") {\\newline		        spine = new MFVec3f([value, value]);\\newline		    } else {\\newline		        spine = new MFVec3f([value, spine[1]]);\\newline		    }\\newline                }\\newline\\newline                function set_endB(value) {\\newline		    if (typeof spine === \"undefined\") {\\newline		        spine = new MFVec3f([value, value]);\\newline		    } else {\\newline		        spine = new MFVec3f([spine[0], value]);\\newline		    }\\newline                }\\newline\\newline                function set_spine(value) {\\newline		    Browser.print('\\n'+'\"');\\newline                    spine = value;\\newline                }\\newline")                ROUTE:
                    fromNode: "MoveCylinder"
                    fromField: "spine"
                    toNode: "extrusion"
                    toField: "set_spine"
        Transform:
            scale: [0.1, 0.1, 0.1]
            ProtoInstance:
                name: "node"
                DEF: "nodeA"
                fieldValue:
                    name: "position"
                    value: "-50 -50 -50"
            ProtoInstance:
                name: "node"
                DEF: "nodeB"
                fieldValue:
                    name: "position"
                    value: "50 50 50"
            ProtoInstance:
                name: "cyl"
                DEF: "linkA"
                fieldValue:
                    name: "positionA"
                    value: "0 0 0"
                fieldValue:
                    name: "positionB"
                    value: "50 50 50"
        ROUTE:
            fromNode: "nodeA"
            fromField: "position"
            toNode: "linkA"
            toField: "positionA"
        ROUTE:
            fromNode: "nodeB"
            fromField: "position"
            toNode: "linkA"
            toField: "positionB"
