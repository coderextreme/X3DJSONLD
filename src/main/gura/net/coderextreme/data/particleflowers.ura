X3D:
    profile: "Immersive"
    version: "4.0"
    head:
        component: [
            name: "EnvironmentalEffects"
            level: 3
        ],
        component: [
            name: "Shaders"
            level: 1
        ],
        component: [
            name: "CubeMapTexturing"
            level: 1
        ],
        component: [
            name: "Texturing"
            level: 1
        ],
        component: [
            name: "Rendering"
            level: 1
        ],
        component: [
            name: "Grouping"
            level: 3
        ],
        component: [
            name: "Core"
            level: 1
        ],
        component: [
            name: "ParticleSystems"
            level: 3
        ],
        meta: [
            name: "title"
            content: "particleflowers.x3d"
        ],
        meta: [
            name: "creator"
            content: "John Carlson"
        ],
        meta: [
            name: "description"
            content: "A flower particle system"
        ],
        meta: [
            name: "identifier"
            content: "https://coderextreme.net/X3DJSONLD/src/main/data/particleflowers.x3d"
        ]
    Scene:
        WorldInfo: [
            title: "particleflowers.x3d"
        ],
        NavigationInfo: [
            type: ["ANY", "EXAMINE", "FLY", "LOOKAT"]
        ],
        Viewpoint: [
            description: "Tour Views"
            position: [0, 0, 12]
        ],
        Background: [
            backUrl: ["https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_back.png", "../resources/images/all_probes/stpeters_cross/stpeters_back.png"]
            bottomUrl: ["https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_bottom.png", "../resources/images/all_probes/stpeters_cross/stpeters_bottom.png"]
            frontUrl: ["https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_front.png", "../resources/images/all_probes/stpeters_cross/stpeters_front.png"]
            leftUrl: ["https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_left.png", "../resources/images/all_probes/stpeters_cross/stpeters_left.png"]
            rightUrl: ["https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_right.png", "../resources/images/all_probes/stpeters_cross/stpeters_right.png"]
            topUrl: ["https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_top.png", "../resources/images/all_probes/stpeters_cross/stpeters_top.png"]
        ],
        Group: [
            ParticleSystem: [
                maxParticles: 20
                geometryType: "GEOMETRY"
                BoundedPhysicsModel: [
                    Sphere:
                        radius: 100.0
                ],
                ExplosionEmitter:
                    speed: 2.0
                    variation: 0.75
                Appearance:
                    Material:
                        diffuseColor: [0.7, 0.7, 0.7]
                        specularColor: [0.5, 0.5, 0.5]
                    ComposedCubeMapTexture:
                        DEF: "texture"
                        ImageTexture:
                            url: ["https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_back.png", "../resources/images/all_probes/stpeters_cross/stpeters_back.png"]
                        ImageTexture:
                            url: ["https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_bottom.png", "../resources/images/all_probes/stpeters_cross/stpeters_bottom.png"]
                        ImageTexture:
                            url: ["https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_front.png", "../resources/images/all_probes/stpeters_cross/stpeters_front.png"]
                        ImageTexture:
                            url: ["https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_left.png", "../resources/images/all_probes/stpeters_cross/stpeters_left.png"]
                        ImageTexture:
                            url: ["https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_right.png", "../resources/images/all_probes/stpeters_cross/stpeters_right.png"]
                        ImageTexture:
                            url: ["https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_top.png", "../resources/images/all_probes/stpeters_cross/stpeters_top.png"]
                    ComposedShader: [
                        DEF: "x_ite"
                        language: "GLSL"
                        field: [
                            name: "chromaticDispertion"
                            accessType: "initializeOnly"
                            type: "SFVec3f"
                            value: "0.98 1 1.033"
                        ],
                        field: [
                            name: "cube"
                            type: "SFNode"
                            accessType: "initializeOnly"
                            ComposedCubeMapTexture: [
                                USE: "texture"
                            ]
                        ],
                        field: [
                            name: "bias"
                            accessType: "initializeOnly"
                            type: "SFFloat"
                            value: "0.5"
                        ],
                        field: [
                            name: "scale"
                            accessType: "initializeOnly"
                            type: "SFFloat"
                            value: "0.5"
                        ],
                        field: [
                            name: "power"
                            accessType: "initializeOnly"
                            type: "SFFloat"
                            value: "2"
                        ],
                        field: [
                            name: "a"
                            type: "SFFloat"
                            accessType: "inputOutput"
                            value: "2"
                        ],
                        field: [
                            name: "b"
                            type: "SFFloat"
                            accessType: "inputOutput"
                            value: "1"
                        ],
                        field: [
                            name: "c"
                            type: "SFFloat"
                            accessType: "inputOutput"
                            value: "5"
                        ],
                        field: [
                            name: "d"
                            type: "SFFloat"
                            accessType: "inputOutput"
                            value: "5"
                        ],
                        field: [
                            name: "tdelta"
                            type: "SFFloat"
                            accessType: "inputOutput"
                            value: "0"
                        ],
                        field: [
                            name: "pdelta"
                            type: "SFFloat"
                            accessType: "inputOutput"
                            value: "0"
                        ],
                        ShaderPart: [
                            url: ["https://coderextreme.net/X3DJSONLD/src/main/shaders/x_ite_flower_particles.vs", "../shaders/x_ite_flower_particles.vs"]
                            type: "VERTEX"
                        ],
                        ShaderPart: [
                            url: ["https://coderextreme.net/X3DJSONLD/src/main/shaders/commonnew.fs", "../shaders/commonnew.fs"]
                            type: "FRAGMENT"
                        ]
                    ]
                Sphere:
            ],
            Script: [
                DEF: "Animate"
                field: [
                    name: "translation"
                    accessType: "inputOutput"
                    type: "SFVec3f"
                    value: "0 0 0"
                ],
                field: [
                    name: "velocity"
                    accessType: "inputOutput"
                    type: "SFVec3f"
                    value: "0 0 0"
                ],
                field: [
                    name: "set_fraction"
                    accessType: "inputOnly"
                    type: "SFFloat"
                ],
                field: [
                    name: "a"
                    type: "SFFloat"
                    accessType: "inputOutput"
                    value: "0.5"
                ],
                field: [
                    name: "b"
                    type: "SFFloat"
                    accessType: "inputOutput"
                    value: "0.5"
                ],
                field: [
                    name: "c"
                    type: "SFFloat"
                    accessType: "inputOutput"
                    value: "3"
                ],
                field: [
                    name: "d"
                    type: "SFFloat"
                    accessType: "inputOutput"
                    value: "3"
                ],
                field: [
                    name: "tdelta"
                    type: "SFFloat"
                    accessType: "inputOutput"
                    value: "0.5"
                ],
                field: [
                    name: "pdelta"
                    type: "SFFloat"
                    accessType: "inputOutput"
                    value: "0.5"
                ],
#ecmascript:
#
#			function initialize() {
#			    translation = new SFVec3f(0, 0, 0);
#			    velocity = new SFVec3f(
#			    	Math.random() - 0.5,
#				Math.random() - 0.5,
#				Math.random() - 0.5);
#			}
#			function set_fraction() {
#			    translation = new SFVec3f(
#			    	translation.x + velocity.x,
#				translation.y + velocity.y,
#				translation.z + velocity.z);
#			    for (var j = 0; j <= 2; j++) {
#				    if (Math.abs(translation.x) > 10) {
#					initialize();
#				    } else if (Math.abs(translation.y) > 10) {
#					initialize();
#				    } else if (Math.abs(translation.z) > 10) {
#					initialize();
#				    } else {
#					velocity.x += Math.random() * 0.2 - 0.1;
#					velocity.y += Math.random() * 0.2 - 0.1;
#					velocity.z += Math.random() * 0.2 - 0.1;
#				    }
#			    }
#			    animate_flowers();
#			}
#
#			function animate_flowers(fraction, eventTime) {
#				var choice = Math.floor(Math.random() * 4);
#				switch (choice) {
#				case 0:
#					a += Math.random() * 0.2 - 0.1;
#					break;
#				case 1:
#					b += Math.random() * 0.2 - 0.1;
#					break;
#				case 2:
#					c += Math.random() * 2 - 1;
#					break;
#				case 3:
#					d += Math.random() * 2 - 1;
#					break;
#				}
#				tdelta = tdelta + 0.05;
#				pdelta = pdelta + 0.05;
#				if (a > 1) {
#					a =  0.5;
#				}
#				if (b > 1) {
#					b =  0.5;
#				}
#				if (c < 1) {
#					c =  4;
#				}
#				if (d < 1) {
#					d =  4;
#				}
#				if (c > 10) {
#					c = 4;
#				}
#				if (d > 10) {
#					d = 4;
#				}
#			}
            ],
            TimeSensor: [
                DEF: "TourTime"
                cycleInterval: 5.0
                loop: true
            ],
            ROUTE: [
                fromNode: "TourTime"
                fromField: "fraction_changed"
                toNode: "Animate"
                toField: "set_fraction"
            ],
            ROUTE: [
                fromNode: "Animate"
                fromField: "a"
                toNode: "x_ite"
                toField: "a"
            ],
            ROUTE: [
                fromNode: "Animate"
                fromField: "b"
                toNode: "x_ite"
                toField: "b"
            ],
            ROUTE: [
                fromNode: "Animate"
                fromField: "c"
                toNode: "x_ite"
                toField: "c"
            ],
            ROUTE: [
                fromNode: "Animate"
                fromField: "d"
                toNode: "x_ite"
                toField: "d"
            ],
            ROUTE: [
                fromNode: "Animate"
                fromField: "pdelta"
                toNode: "x_ite"
                toField: "pdelta"
            ],
            ROUTE: [
                fromNode: "Animate"
                fromField: "tdelta"
                toNode: "x_ite"
                toField: "tdelta"
            ]
        ]
