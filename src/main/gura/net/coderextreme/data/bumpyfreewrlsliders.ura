X3D:
    profile: "Full"
    version: "4.0"
    setHead: [
        head: [
            component: [
                name: "Scripting"
                level: 1
            ],
            component: [
                name: "EnvironmentalEffects"
                level: 3
            ],
            component: [
                name: "Shaders"
                level: 1
            ],
            component: [
                name: "CubeMapTexturing"
                level: 1
            ],
            component: [
                name: "Texturing"
                level: 1
            ],
            component: [
                name: "Rendering"
                level: 1
            ],
            component: [
                name: "Grouping"
                level: 3
            ],
            component: [
                name: "Core"
                level: 1
            ],
            component: [
                name: "DIS"
                level: 2
            ],
#<component name='Shape' level='4'></component>
#Additional authoring resources for meta-tags: http://www.dublincore.org/documents/dcmi-terms http://www.dublincore.org/documents/dces http://www.w3.org/TR/html4/struct/global.html#h-7.4.4 http://vancouver-webpages.com/META http://vancouver-webpages.com/META/about-mk-metas2.html Additional authoring resources for language codes: ftp://ftp.isi.edu/in-notes/bcp/bcp47.txt http://www.loc.gov/standards/iso639-2/langhome.html http://www.iana.org/numbers.html#L
            meta: [
                name: "title"
                content: "bumpfreewrlsliders.x3d"
            ],
            meta: [
                name: "description"
                content: "*enter description here, short-sentence summaries preferred*"
            ],
            meta: [
                name: "creator"
                content: "Doug Sanden, Christoph Valentin, John Carlson"
            ],
            meta: [
                name: "translator"
                content: "*if manually translating VRML-to-X3D, enter name of person translating here*"
            ],
            meta: [
                name: "created"
                content: "*enter date of initial version here*"
            ],
            meta: [
                name: "translated"
                content: "*enter date of translation here*"
            ],
            meta: [
                name: "modified"
                content: "*enter date of latest revision here*"
            ],
            meta: [
                name: "version"
                content: "*enter version here, if any*"
            ],
            meta: [
                name: "reference"
                content: "*enter reference citation or relative/online url here*"
            ],
            meta: [
                name: "reference"
                content: "*enter additional url/bibliographic reference information here*"
            ],
            meta: [
                name: "requires"
                content: "*enter reference resource here if required to support function, delivery, or coherence of content*"
            ],
            meta: [
                name: "rights"
                content: "*enter copyright information here* Example: Copyright (c) Web3D Consortium Inc. 2008, 2024"
            ],
            meta: [
                name: "drawing"
                content: "*enter drawing filename/url here*"
            ],
            meta: [
                name: "MovingImage"
                content: "*enter movie filename/url here*"
            ],
            meta: [
                name: "photo"
                content: "*enter photo filename/url here*"
            ],
            meta: [
                name: "subject"
                content: "*enter subject keywords here*"
            ],
            meta: [
                name: "accessRights"
                content: "*enter permission statements or url here*"
            ],
            meta: [
                name: "identifier"
                content: "*enter online Uniform Resource Identifier (URI) or Uniform Resource Locator (URL) address for this file here*"
            ],
            meta: [
                name: "generator"
                content: "PSPad, http://www.pspad.com/"
            ],
            meta: [
                name: "license"
                content: "license.html"
            ]
        ]
    ]#"The Flower Review (TPREV)", a simple MU scene using DIS Sensor Event Distribution, It is assumed the reviewers (users) have a non-X3D voice channel (e.g. TeamSpeak) open for their "discussion about the teapot"
    setScene: [
        Scene: [
#LayerSet with two layers, navigation happens in layer 1
            LayerSet: [
                activeLayer: 1
                order: [1, 2]
#the first Layer contains the main scenery - "The Review of the Flower (DIS Multiuser)"
#the second layer contains the sliders that are moved with the user's display like a HUD (heads up display)
                Layer: [
                    pickable: true
                    objectType: ["ALL"]
#basic nodes, which might be present in any scene
                    NavigationInfo: [
                        type: ["EXAMINE"]
                        avatarSize: [0.25, 1.75, 0.75]
                    ],
                    DirectionalLight: [
                        ambientIntensity: 0.2
                        direction: [0, -1, 0]
                    ],
                    DirectionalLight: [
                        ambientIntensity: 0.2
                        direction: [-1, -0.1, -1]
                    ],
                    Viewpoint: [
                        description: "My Overview"
                        fieldOfView: 1.570796
                        position: [0, 1.75, 60]
                    ],
#this group contains the red/green/blue 3D crosshair
                    Group: [
#Arrow X
                        Transform: [
                            translation: [25, 0, 0]
                            rotation: [0, 0, -1, 1.57]
                            Shape: [
                                setGeometry: [
                                    Cylinder: [
                                        DEF: "Shaft"
                                        radius: 0.35
                                        height: 50.0
                                    ]
                                ]
                                setAppearance: [
                                    Appearance: [
                                        setMaterial: [
                                            Material: [
                                                DEF: "RED"
                                                diffuseColor: [1, 0, 0]
                                                emissiveColor: [1, 0, 0]
                                            ]
                                        ]
                                    ]
                                ]
                            ]
                        ],
                        Transform: [
                            translation: [50, 0, 0]
                            rotation: [0, 0, -1, 1.57]
                            Shape: [
                                setGeometry: [
                                    Cone: [
                                        DEF: "Tip"
                                        bottomRadius: 0.8
                                        height: 3.0
                                    ]
                                ]
                                setAppearance: [
                                    Appearance: [
                                        setMaterial: [
                                            Material: [
                                                USE: "RED"
                                            ]
                                        ]
                                    ]
                                ]
                            ]
                        ],
#Arrow Y
                        Transform: [
                            translation: [0, 25, 0]
                            Shape: [
                                setGeometry: [
                                    Cylinder: [
                                        USE: "Shaft"
                                    ]
                                ]
                                setAppearance: [
                                    Appearance: [
                                        setMaterial: [
                                            Material: [
                                                DEF: "GREEN"
                                                diffuseColor: [0, 1, 0]
                                                emissiveColor: [0, 1, 0]
                                            ]
                                        ]
                                    ]
                                ]
                            ]
                        ],
                        Transform: [
                            translation: [0, 50, 0]
                            Shape: [
                                setGeometry: [
                                    Cone: [
                                        USE: "Tip"
                                    ]
                                ]
                                setAppearance: [
                                    Appearance: [
                                        setMaterial: [
                                            Material: [
                                                USE: "GREEN"
                                            ]
                                        ]
                                    ]
                                ]
                            ]
                        ],
#Arrow Z
                        Transform: [
                            translation: [0, 0, 25]
                            rotation: [1, 0, 0, 1.57]
                            Shape: [
                                setGeometry: [
                                    Cylinder: [
                                        USE: "Shaft"
                                    ]
                                ]
                                setAppearance: [
                                    Appearance: [
                                        setMaterial: [
                                            Material: [
                                                DEF: "BLUE"
                                                diffuseColor: [0, 0, 1]
                                                emissiveColor: [0, 0, 1]
                                            ]
                                        ]
                                    ]
                                ]
                            ]
                        ],
                        Transform: [
                            translation: [0, 0, 50]
                            rotation: [1, 0, 0, 1.57]
                            Shape: [
                                setGeometry: [
                                    Cone: [
                                        USE: "Tip"
                                    ]
                                ]
                                setAppearance: [
                                    Appearance: [
                                        setMaterial: [
                                            Material: [
                                                USE: "BLUE"
                                            ]
                                        ]
                                    ]
                                ]
                            ]
                        ]
                    ],
#the model that is being reviewed by the users of this scene
                    Transform: [
                        DEF: "FlowerTransform"
#<Inline DEF="Flower" url='"bumpyfreewrl.x3d"' />
#Images courtesy of Paul Debevec's Light Probe Image Gallery
                        Background: [
                            backUrl: ["../resources/images/all_probes/stpeters_cross/stpeters_back.png", "https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_back.png"]
                            bottomUrl: ["../resources/images/all_probes/stpeters_cross/stpeters_bottom.png", "https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_bottom.png"]
                            frontUrl: ["../resources/images/all_probes/stpeters_cross/stpeters_front.png", "https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_front.png"]
                            leftUrl: ["../resources/images/all_probes/stpeters_cross/stpeters_left.png", "https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_left.png"]
                            rightUrl: ["../resources/images/all_probes/stpeters_cross/stpeters_right.png", "https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_right.png"]
                            topUrl: ["../resources/images/all_probes/stpeters_cross/stpeters_top.png", "https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_top.png"]
                        ],
                        Shape: [
                            setGeometry: [
                                Sphere: [
                                    radius: 0.01
                                ]
                            ]
                            setAppearance: [
                                Appearance: [
                                    setMaterial: [
                                        Material: [
                                            diffuseColor: [0.7, 0.7, 0.7]
                                            specularColor: [0.5, 0.5, 0.5]
                                        ]
                                    ]
                                    setTexture: [
                                        ComposedCubeMapTexture: [
                                            DEF: "texture"
                                            setBackTexture: [
                                                ImageTexture: [
                                                    url: ["../resources/images/all_probes/stpeters_cross/stpeters_back.png", "https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_back.png"]
                                                ]
                                            ]
                                            setBottomTexture: [
                                                ImageTexture: [
                                                    url: ["../resources/images/all_probes/stpeters_cross/stpeters_bottom.png", "https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_bottom.png"]
                                                ]
                                            ]
                                            setFrontTexture: [
                                                ImageTexture: [
                                                    url: ["../resources/images/all_probes/stpeters_cross/stpeters_front.png", "https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_front.png"]
                                                ]
                                            ]
                                            setLeftTexture: [
                                                ImageTexture: [
                                                    url: ["../resources/images/all_probes/stpeters_cross/stpeters_left.png", "https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_left.png"]
                                                ]
                                            ]
                                            setRightTexture: [
                                                ImageTexture: [
                                                    url: ["../resources/images/all_probes/stpeters_cross/stpeters_right.png", "https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_right.png"]
                                                ]
                                            ]
                                            setTopTexture: [
                                                ImageTexture: [
                                                    url: ["../resources/images/all_probes/stpeters_cross/stpeters_top.png", "https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_top.png"]
                                                ]
                                            ]
                                        ]
                                    ],
                                    ComposedShader: [
                                        DEF: "freewrlShader"
                                        language: "GLSL"
                                        field: [
                                            name: "chromaticDispertion"
                                            accessType: "inputOnly"
                                            type: "SFVec3f"
                                            value: "0.98 1 1.033"
                                        ],
                                        field: [
                                            name: "fw_textureCoordGenType"
                                            accessType: "inputOnly"
                                            type: "SFInt32"
                                            value: "0"
                                        ],
                                        field: [
                                            name: "bias"
                                            type: "SFFloat"
                                            accessType: "inputOnly"
                                            value: "0.5"
                                        ],
                                        field: [
                                            name: "scale"
                                            type: "SFFloat"
                                            accessType: "inputOnly"
                                            value: "0.5"
                                        ],
                                        field: [
                                            name: "power"
                                            type: "SFFloat"
                                            accessType: "inputOnly"
                                            value: "2"
                                        ],
                                        field: [
                                            name: "a"
                                            type: "SFFloat"
                                            accessType: "inputOutput"
                                            value: "15"
                                        ],
                                        field: [
                                            name: "b"
                                            type: "SFFloat"
                                            accessType: "inputOutput"
                                            value: "5"
                                        ],
                                        field: [
                                            name: "c"
                                            type: "SFFloat"
                                            accessType: "inputOutput"
                                            value: "5"
                                        ],
                                        field: [
                                            name: "d"
                                            type: "SFFloat"
                                            accessType: "inputOutput"
                                            value: "5"
                                        ],
                                        field: [
                                            name: "tdelta"
                                            type: "SFFloat"
                                            accessType: "inputOutput"
                                            value: "0"
                                        ],
                                        field: [
                                            name: "pdelta"
                                            type: "SFFloat"
                                            accessType: "inputOutput"
                                            value: "0"
                                        ],
                                        ShaderPart: [
                                            url: ["../shaders/freewrl_flowers_chromatic.vs", "https://coderextreme.net/X3DJSONLD/src/main/shaders/freewrl_flowers_chromatic.vs"]
                                            type: "VERTEX"
                                        ],
                                        ShaderPart: [
                                            url: ["../shaders/freewrl_bubbles.fs", "https://coderextreme.net/X3DJSONLD/src/main/shaders/freewrl_bubbles.fs"]
                                            type: "FRAGMENT"
                                        ]
                                    ]
                                ]
                            ]
                        ]
                    ],
#DIS multiuser facilities
                    DISEntityManager: [
                        DEF: "EntityManager"
                        networkMode: "networkReader"
                        DISEntityTypeMapping: [
                            category: 77
                            specific: 1
                            url: ["../data/Leif8Final.x3d", "https://coderextreme.net/X3DJSONLD/src/main/data/Leif8Final.x3d"]
                        ],
                        DISEntityTypeMapping: [
                            category: 77
                            specific: 2
                            url: ["../data/Lily8Final.x3d", "https://coderextreme.net/X3DJSONLD/src/main/data/Lily8Final.x3d"]
                        ],
                        DISEntityTypeMapping: [
                            category: 77
                            specific: 3
                            url: ["../data/Tufani8Final.x3d", "https://coderextreme.net/X3DJSONLD/src/main/data/Tufani8Final.x3d"]
                        ],
                        DISEntityTypeMapping: [
                            category: 77
                            specific: 4
                            url: ["../data/Gramps8Final.x3d", "https://coderextreme.net/X3DJSONLD/src/main/data/Gramps8Final.x3d"]
                        ]
                    ],
                    Collision: [
                        enabled: false
                        Group: [
                            DEF: "AvatarHolder"
                        ]
                    ],
                    ROUTE: [
                        fromField: "addedEntities"
                        fromNode: "EntityManager"
                        toField: "addChildren"
                        toNode: "AvatarHolder"
                    ],
                    ROUTE: [
                        fromField: "removedEntities"
                        fromNode: "EntityManager"
                        toField: "removeChildren"
                        toNode: "AvatarHolder"
                    ]
                ],
                LayoutLayer: [
                    pickable: true
                    objectType: ["ALL"]
#positioning the LayoutLayer
#clipping the LayoutLayer
#the content (children) of the LayoutLayer
#first, the slider for scaling the model
                    Transform: [
                        translation: [0, 0, -3]
                        Shape: [
                            setAppearance: [
                                Appearance: [
                                    setMaterial: [
                                        Material: [
                                            diffuseColor: [0, 0, 0]
                                            transparency: 0.7
                                        ]
                                    ]
                                ]
                            ]
                            setGeometry: [
                                Box: [
                                    size: [100, 100, 0.02]
                                ]
                            ]
                        ]
                    ],
#the plane sensors
                    Transform: [
                        DEF: "aSlider"
                        translation: [0, 0.7, 0]
                        Transform: [
                            rotation: [0, 0, 1, 1.57]
                            Shape: [
                                setAppearance: [
                                    Appearance: [
                                        setMaterial: [
                                            Material: [ empty
                                            ]
                                        ]
                                    ]
                                ]
                                setGeometry: [
                                    Cylinder: [
                                        radius: 0.05
                                        height: 2.5
                                    ]
                                ]
                            ]
                        ],
                        Transform: [
                            DEF: "aTransform"
                            translation: [0, 0, 0.1]
                            PlaneSensor: [
                                DEF: "aSensor"
                                minPosition: [-20, 0]
                                maxPosition: [20, 0]
                            ],
                            Transform: [
                                translation: [0, 0, 0]
                                TouchSensor: [
                                    DEF: "aTS"
                                ],
                                Shape: [
                                    setGeometry: [
                                        Sphere: [
                                            radius: 0.08
                                        ]
                                    ]
                                    setAppearance: [
                                        Appearance: [
                                            setMaterial: [
                                                Material: [
                                                    diffuseColor: [1, 0, 0]
                                                ]
                                            ]
                                        ]
                                    ]
                                ]
                            ],
                            Shape: [
                                setGeometry: [
                                    Cylinder: [
                                        radius: 0.05
                                        height: 0.3
                                    ]
                                ]
                                setAppearance: [
                                    Appearance: [
                                        setMaterial: [
                                            Material: [ empty
                                            ]
                                        ]
                                    ]
                                ]
                            ]
                        ],
                        Transform: [
                            rotation: [0, 0, 1, 1.57]
                            Shape: [
                                setAppearance: [
                                    Appearance: [
                                        setMaterial: [
                                            Material: [ empty
                                            ]
                                        ]
                                    ]
                                ]
                                setGeometry: [
                                    Cylinder: [
                                        radius: 0.05
                                        height: 2.5
                                    ]
                                ]
                            ]
                        ]
                    ],
                    Transform: [
                        DEF: "bSlider"
                        translation: [0, 0.4, 0]
                        Transform: [
                            rotation: [0, 0, 1, 1.57]
                            Shape: [
                                setAppearance: [
                                    Appearance: [
                                        setMaterial: [
                                            Material: [ empty
                                            ]
                                        ]
                                    ]
                                ]
                                setGeometry: [
                                    Cylinder: [
                                        radius: 0.05
                                        height: 2.5
                                    ]
                                ]
                            ]
                        ],
                        Transform: [
                            DEF: "bTransform"
                            translation: [0, 0, 0.1]
                            PlaneSensor: [
                                DEF: "bSensor"
                                minPosition: [-20, 0]
                                maxPosition: [20, 0]
                            ],
                            Transform: [
                                translation: [0, 0, 0]
                                TouchSensor: [
                                    DEF: "bTS"
                                ],
                                Shape: [
                                    setGeometry: [
                                        Sphere: [
                                            radius: 0.08
                                        ]
                                    ]
                                    setAppearance: [
                                        Appearance: [
                                            setMaterial: [
                                                Material: [
                                                    diffuseColor: [1, 0, 0]
                                                ]
                                            ]
                                        ]
                                    ]
                                ]
                            ],
                            Shape: [
                                setGeometry: [
                                    Cylinder: [
                                        radius: 0.05
                                        height: 0.3
                                    ]
                                ]
                                setAppearance: [
                                    Appearance: [
                                        setMaterial: [
                                            Material: [ empty
                                            ]
                                        ]
                                    ]
                                ]
                            ]
                        ]
                    ],
                    Transform: [
                        DEF: "cSlider"
                        translation: [0, 0.1, 0]
                        Transform: [
                            rotation: [0, 0, 1, 1.57]
                            Shape: [
                                setAppearance: [
                                    Appearance: [
                                        setMaterial: [
                                            Material: [ empty
                                            ]
                                        ]
                                    ]
                                ]
                                setGeometry: [
                                    Cylinder: [
                                        radius: 0.05
                                        height: 2.5
                                    ]
                                ]
                            ]
                        ],
                        Transform: [
                            DEF: "cTransform"
                            translation: [0, 0, 0.1]
                            PlaneSensor: [
                                DEF: "cSensor"
                                minPosition: [-20, 0]
                                maxPosition: [20, 0]
                            ],
                            Transform: [
                                translation: [0, 0, 0]
                                TouchSensor: [
                                    DEF: "cTS"
                                ],
                                Shape: [
                                    setGeometry: [
                                        Sphere: [
                                            radius: 0.08
                                        ]
                                    ]
                                    setAppearance: [
                                        Appearance: [
                                            setMaterial: [
                                                Material: [
                                                    diffuseColor: [1, 0, 0]
                                                ]
                                            ]
                                        ]
                                    ]
                                ]
                            ],
                            Shape: [
                                setGeometry: [
                                    Cylinder: [
                                        radius: 0.05
                                        height: 0.3
                                    ]
                                ]
                                setAppearance: [
                                    Appearance: [
                                        setMaterial: [
                                            Material: [ empty
                                            ]
                                        ]
                                    ]
                                ]
                            ]
                        ]
                    ],
                    Transform: [
                        DEF: "dSlider"
                        translation: [0, -0.2, 0]
                        Transform: [
                            rotation: [0, 0, 1, 1.57]
                            Shape: [
                                setAppearance: [
                                    Appearance: [
                                        setMaterial: [
                                            Material: [ empty
                                            ]
                                        ]
                                    ]
                                ]
                                setGeometry: [
                                    Cylinder: [
                                        radius: 0.05
                                        height: 2.5
                                    ]
                                ]
                            ]
                        ],
                        Transform: [
                            DEF: "dTransform"
                            translation: [0, 0, 0.1]
                            PlaneSensor: [
                                DEF: "dSensor"
                                minPosition: [-20, 0]
                                maxPosition: [20, 0]
                            ],
                            Transform: [
                                translation: [0, 0, 0]
                                TouchSensor: [
                                    DEF: "dTS"
                                ],
                                Shape: [
                                    setGeometry: [
                                        Sphere: [
                                            radius: 0.08
                                        ]
                                    ]
                                    setAppearance: [
                                        Appearance: [
                                            setMaterial: [
                                                Material: [
                                                    diffuseColor: [1, 0, 0]
                                                ]
                                            ]
                                        ]
                                    ]
                                ]
                            ],
                            Shape: [
                                setGeometry: [
                                    Cylinder: [
                                        radius: 0.05
                                        height: 0.3
                                    ]
                                ]
                                setAppearance: [
                                    Appearance: [
                                        setMaterial: [
                                            Material: [ empty
                                            ]
                                        ]
                                    ]
                                ]
                            ]
                        ]
                    ],
                    Transform: [
                        DEF: "pdeltaSlider"
                        translation: [0, -0.5, 0]
                        Transform: [
                            rotation: [0, 0, 1, 1.57]
                            Shape: [
                                setAppearance: [
                                    Appearance: [
                                        setMaterial: [
                                            Material: [ empty
                                            ]
                                        ]
                                    ]
                                ]
                                setGeometry: [
                                    Cylinder: [
                                        radius: 0.05
                                        height: 2.5
                                    ]
                                ]
                            ]
                        ],
                        Transform: [
                            DEF: "pdeltaTransform"
                            translation: [0, 0, 0.1]
                            PlaneSensor: [
                                DEF: "pdeltaSensor"
                                minPosition: [-20, 0]
                                maxPosition: [20, 0]
                            ],
                            Transform: [
                                translation: [0, 0, 0]
                                TouchSensor: [
                                    DEF: "pdeltaTS"
                                ],
                                Shape: [
                                    setGeometry: [
                                        Sphere: [
                                            radius: 0.08
                                        ]
                                    ]
                                    setAppearance: [
                                        Appearance: [
                                            setMaterial: [
                                                Material: [
                                                    diffuseColor: [1, 0, 0]
                                                ]
                                            ]
                                        ]
                                    ]
                                ]
                            ],
                            Shape: [
                                setGeometry: [
                                    Cylinder: [
                                        radius: 0.05
                                        height: 0.3
                                    ]
                                ]
                                setAppearance: [
                                    Appearance: [
                                        setMaterial: [
                                            Material: [ empty
                                            ]
                                        ]
                                    ]
                                ]
                            ]
                        ]
                    ],
                    Transform: [
                        DEF: "tdeltaSlider"
                        translation: [0, -0.8, 0]
                        Transform: [
                            rotation: [0, 0, 1, 1.57]
                            Shape: [
                                setAppearance: [
                                    Appearance: [
                                        setMaterial: [
                                            Material: [ empty
                                            ]
                                        ]
                                    ]
                                ]
                                setGeometry: [
                                    Cylinder: [
                                        radius: 0.05
                                        height: 2.5
                                    ]
                                ]
                            ]
                        ],
                        Transform: [
                            DEF: "tdeltaTransform"
                            translation: [0, 0, 0.1]
                            PlaneSensor: [
                                DEF: "tdeltaSensor"
                                minPosition: [-20, 0]
                                maxPosition: [20, 0]
                            ],
                            Transform: [
                                translation: [0, 0, 0]
                                TouchSensor: [
                                    DEF: "tdeltaTS"
                                ],
                                Shape: [
                                    setGeometry: [
                                        Sphere: [
                                            radius: 0.08
                                        ]
                                    ]
                                    setAppearance: [
                                        Appearance: [
                                            setMaterial: [
                                                Material: [
                                                    diffuseColor: [1, 0, 0]
                                                ]
                                            ]
                                        ]
                                    ]
                                ]
                            ],
                            Shape: [
                                setGeometry: [
                                    Cylinder: [
                                        radius: 0.05
                                        height: 0.3
                                    ]
                                ]
                                setAppearance: [
                                    Appearance: [
                                        setMaterial: [
                                            Material: [ empty
                                            ]
                                        ]
                                    ]
                                ]
                            ]
                        ]
                    ],
                    Script: [
                        DEF: "aValueTransformerScript"
                        directOutput: true
                        mustEvaluate: true
                        field: [
                            name: "newTranslation"
                            accessType: "inputOnly"
                            type: "SFVec3f"
                            value: "1 1 1"
                        ],
                        field: [
                            name: "aValue"
                            accessType: "outputOnly"
                            type: "SFFloat"
                            value: "1"
                        ],
#ecmascript: function newTranslation(Value) { aValue = Value.x * 30; }
                    ],
                    Script: [
                        DEF: "bValueTransformerScript"
                        directOutput: true
                        mustEvaluate: true
                        field: [
                            name: "newTranslation"
                            accessType: "inputOnly"
                            type: "SFVec3f"
                            value: "1 1 1"
                        ],
                        field: [
                            name: "bValue"
                            accessType: "outputOnly"
                            type: "SFFloat"
                            value: "1"
                        ],
#ecmascript: function newTranslation(Value) { bValue = Value.x * 30; }
                    ],
                    Script: [
                        DEF: "cValueTransformerScript"
                        directOutput: true
                        mustEvaluate: true
                        field: [
                            name: "newTranslation"
                            accessType: "inputOnly"
                            type: "SFVec3f"
                            value: "1 1 1"
                        ],
                        field: [
                            name: "cValue"
                            accessType: "outputOnly"
                            type: "SFFloat"
                            value: "1"
                        ],
#ecmascript: function newTranslation(Value) { cValue = Value.x * 5; }
                    ],
                    Script: [
                        DEF: "dValueTransformerScript"
                        directOutput: true
                        mustEvaluate: true
                        field: [
                            name: "newTranslation"
                            accessType: "inputOnly"
                            type: "SFVec3f"
                            value: "1 1 1"
                        ],
                        field: [
                            name: "dValue"
                            accessType: "outputOnly"
                            type: "SFFloat"
                            value: "1"
                        ],
#ecmascript: function newTranslation(Value) { dValue = Value.x * 5; }
                    ],
                    Script: [
                        DEF: "pdeltaValueTransformerScript"
                        directOutput: true
                        mustEvaluate: true
                        field: [
                            name: "newTranslation"
                            accessType: "inputOnly"
                            type: "SFVec3f"
                            value: "1 1 1"
                        ],
                        field: [
                            name: "pdeltaValue"
                            accessType: "outputOnly"
                            type: "SFFloat"
                            value: "1"
                        ],
#ecmascript: function newTranslation(Value) { pdeltaValue = Value.x; }
                    ],
                    Script: [
                        DEF: "tdeltaValueTransformerScript"
                        directOutput: true
                        mustEvaluate: true
                        field: [
                            name: "newTranslation"
                            accessType: "inputOnly"
                            type: "SFVec3f"
                            value: "1 1 1"
                        ],
                        field: [
                            name: "tdeltaValue"
                            accessType: "outputOnly"
                            type: "SFFloat"
                            value: "1"
                        ],
#ecmascript: function newTranslation(Value) { tdeltaValue = Value.x; }
                    ],
                    ROUTE: [
                        fromField: "translation_changed"
                        fromNode: "aSensor"
                        toField: "set_translation"
                        toNode: "aTransform"
                    ],
                    ROUTE: [
                        fromField: "translation_changed"
                        fromNode: "bSensor"
                        toField: "set_translation"
                        toNode: "bTransform"
                    ],
                    ROUTE: [
                        fromField: "translation_changed"
                        fromNode: "cSensor"
                        toField: "set_translation"
                        toNode: "cTransform"
                    ],
                    ROUTE: [
                        fromField: "translation_changed"
                        fromNode: "dSensor"
                        toField: "set_translation"
                        toNode: "dTransform"
                    ],
                    ROUTE: [
                        fromField: "translation_changed"
                        fromNode: "pdeltaSensor"
                        toField: "set_translation"
                        toNode: "pdeltaTransform"
                    ],
                    ROUTE: [
                        fromField: "translation_changed"
                        fromNode: "tdeltaSensor"
                        toField: "set_translation"
                        toNode: "tdeltaTransform"
                    ],
                    ROUTE: [
                        fromField: "translation_changed"
                        fromNode: "aSensor"
                        toField: "newTranslation"
                        toNode: "aValueTransformerScript"
                    ],
                    ROUTE: [
                        fromField: "translation_changed"
                        fromNode: "bSensor"
                        toField: "newTranslation"
                        toNode: "bValueTransformerScript"
                    ],
                    ROUTE: [
                        fromField: "translation_changed"
                        fromNode: "cSensor"
                        toField: "newTranslation"
                        toNode: "cValueTransformerScript"
                    ],
                    ROUTE: [
                        fromField: "translation_changed"
                        fromNode: "dSensor"
                        toField: "newTranslation"
                        toNode: "dValueTransformerScript"
                    ],
                    ROUTE: [
                        fromField: "translation_changed"
                        fromNode: "pdeltaSensor"
                        toField: "newTranslation"
                        toNode: "pdeltaValueTransformerScript"
                    ],
                    ROUTE: [
                        fromField: "translation_changed"
                        fromNode: "tdeltaSensor"
                        toField: "newTranslation"
                        toNode: "tdeltaValueTransformerScript"
                    ],
                    ROUTE: [
                        fromField: "aValue"
                        fromNode: "aValueTransformerScript"
                        toField: "a"
                        toNode: "freewrlShader"
                    ],
                    ROUTE: [
                        fromField: "bValue"
                        fromNode: "bValueTransformerScript"
                        toField: "b"
                        toNode: "freewrlShader"
                    ],
                    ROUTE: [
                        fromField: "cValue"
                        fromNode: "cValueTransformerScript"
                        toField: "c"
                        toNode: "freewrlShader"
                    ],
                    ROUTE: [
                        fromField: "dValue"
                        fromNode: "dValueTransformerScript"
                        toField: "d"
                        toNode: "freewrlShader"
                    ],
                    ROUTE: [
                        fromField: "pdeltaValue"
                        fromNode: "pdeltaValueTransformerScript"
                        toField: "pdelta"
                        toNode: "freewrlShader"
                    ],
                    ROUTE: [
                        fromField: "tdeltaValue"
                        fromNode: "tdeltaValueTransformerScript"
                        toField: "tdelta"
                        toNode: "freewrlShader"
                    ]
                    setLayout: [
                        Layout: [
                            align: ["RIGHT", "BOTTOM"]
                            offset: [0, 0]
                            offsetUnits: ["WORLD", "WORLD"]
                            scaleMode: ["NONE", "NONE"]
                            size: [0.4, 1]
                            sizeUnits: ["WORLD", "WORLD"]
                        ]
                    ]
                    setViewport: [
                        Viewport: [
                            clipBoundary: [0, 1, 0, 1]
                        ]
                    ]
                ]
            ]
        ]
    ]
