X3D:
    profile: "Immersive"
    version: "4.0"
    setHead: [
        head: [
            component: [
                name: "Scripting"
                level: 1
            ],
            component: [
                name: "EnvironmentalEffects"
                level: 3
            ],
            component: [
                name: "Shaders"
                level: 1
            ],
            component: [
                name: "CubeMapTexturing"
                level: 1
            ],
            component: [
                name: "Texturing"
                level: 1
            ],
            component: [
                name: "Rendering"
                level: 1
            ],
            component: [
                name: "Grouping"
                level: 3
            ],
            component: [
                name: "Core"
                level: 1
            ],
#<component name='Shape' level='4'></component>
            meta: [
                name: "title"
                content: "mirror.x3d"
            ],
            meta: [
                name: "creator"
                content: "John Carlson"
            ],
            meta: [
                name: "generator"
                content: "manual"
            ],
            meta: [
                name: "identifier"
                content: "https://coderextreme.net/X3DJSONLD/src/main/data/mirror.x3d"
            ],
            meta: [
                name: "description"
                content: "sphere with alternating backgrounds"
            ]
        ]
    ]
    setScene: [
        Scene: [
            Viewpoint: [
                position: [0, 5, 100]
                description: "Switch background and images texture"
            ],
            TextureBackground: [
                setLeftTexture: [
                    ImageTexture: [
                        DEF: "leftBackgroundTexture"
                        url: ["../resources/images/all_probes/beach_cross/beach_left.png", "https://coderextrme.net/X3DJSONLD/src/main/resources/images/all_probes/beach_cross/beach_left.png"]
                    ]
                ]
                setRightTexture: [
                    ImageTexture: [
                        DEF: "rightBackgroundTexture"
                        url: ["../resources/images/all_probes/beach_cross/beach_right.png", "https://coderextrme.net/X3DJSONLD/src/main/resources/images/all_probes/beach_cross/beach_right.png"]
                    ]
                ]
                setFrontTexture: [
                    ImageTexture: [
                        DEF: "frontBackgroundTexture"
                        url: ["../resources/images/all_probes/beach_cross/beach_front.png", "https://coderextrme.net/X3DJSONLD/src/main/resources/images/all_probes/beach_cross/beach_front.png"]
                    ]
                ]
                setBackTexture: [
                    ImageTexture: [
                        DEF: "backBackgroundTexture"
                        url: ["../resources/images/all_probes/beach_cross/beach_back.png", "https://coderextrme.net/X3DJSONLD/src/main/resources/images/all_probes/beach_cross/beach_back.png"]
                    ]
                ]
                setTopTexture: [
                    ImageTexture: [
                        DEF: "topBackgroundTexture"
                        url: ["../resources/images/all_probes/beach_cross/beach_top.png", "https://coderextrme.net/X3DJSONLD/src/main/resources/images/all_probes/beach_cross/beach_top.png"]
                    ]
                ]
                setBottomTexture: [
                    ImageTexture: [
                        DEF: "bottomBackgroundTexture"
                        url: ["../resources/images/all_probes/beach_cross/beach_bottom.png", "https://coderextrme.net/X3DJSONLD/src/main/resources/images/all_probes/beach_cross/beach_bottom.png"]
                    ]
                ]
            ],
            Transform: [
                Shape: [
                    setAppearance: [
                        Appearance: [
                            setMaterial: [
                                Material: [
                                    diffuseColor: [0.7, 0.7, 0.7]
                                    specularColor: [0.5, 0.5, 0.5]
                                ]
                            ]
                            setTexture: [
                                ComposedCubeMapTexture: [
                                    setBackTexture: [
                                        ImageTexture: [
                                            DEF: "backShader"
                                            url: ["../resources/images/all_probes/beach_cross/beach_back.png", "https://coderextrme.net/X3DJSONLD/src/main/resources/images/all_probes/beach_cross/beach_back.png"]
                                        ]
                                    ]
                                    setBottomTexture: [
                                        ImageTexture: [
                                            DEF: "bottomShader"
                                            url: ["../resources/images/all_probes/beach_cross/beach_bottom.png", "https://coderextrme.net/X3DJSONLD/src/main/resources/images/all_probes/beach_cross/beach_bottom.png"]
                                        ]
                                    ]
                                    setFrontTexture: [
                                        ImageTexture: [
                                            DEF: "frontShader"
                                            url: ["../resources/images/all_probes/beach_cross/beach_front.png", "https://coderextrme.net/X3DJSONLD/src/main/resources/images/all_probes/beach_cross/beach_front.png"]
                                        ]
                                    ]
                                    setLeftTexture: [
                                        ImageTexture: [
                                            DEF: "leftShader"
                                            url: ["../resources/images/all_probes/beach_cross/beach_left.png", "https://coderextrme.net/X3DJSONLD/src/main/resources/images/all_probes/beach_cross/beach_left.png"]
                                        ]
                                    ]
                                    setRightTexture: [
                                        ImageTexture: [
                                            DEF: "rightShader"
                                            url: ["../resources/images/all_probes/beach_cross/beach_right.png", "https://coderextrme.net/X3DJSONLD/src/main/resources/images/all_probes/beach_cross/beach_right.png"]
                                        ]
                                    ]
                                    setTopTexture: [
                                        ImageTexture: [
                                            DEF: "topShader"
                                            url: ["../resources/images/all_probes/beach_cross/beach_top.png", "https://coderextrme.net/X3DJSONLD/src/main/resources/images/all_probes/beach_cross/beach_top.png"]
                                        ]
                                    ]
                                ]
                            ],
                            ComposedShader: [
                                DEF: "x3dom"
                                language: "GLSL"
                                field: [
                                    name: "chromaticDispertion"
                                    accessType: "inputOutput"
                                    type: "SFVec3f"
                                    value: "0.98 1 1.033"
                                ],
                                field: [
                                    name: "cube"
                                    accessType: "inputOutput"
                                    type: "SFInt32"
                                    value: "0"
                                ],
                                field: [
                                    name: "bias"
                                    accessType: "inputOutput"
                                    type: "SFFloat"
                                    value: "0.5"
                                ],
                                field: [
                                    name: "scale"
                                    accessType: "inputOutput"
                                    type: "SFFloat"
                                    value: "0.5"
                                ],
                                field: [
                                    name: "power"
                                    accessType: "inputOutput"
                                    type: "SFFloat"
                                    value: "2"
                                ],
                                ShaderPart: [
                                    url: ["../shaders/x3dom.vs", "https://coderextreme.net/X3DJSONLD/src/main/shaders/x3dom.vs"]
                                    type: "VERTEX"
                                ],
                                ShaderPart: [
                                    url: ["../shaders/mix.fs", "https://coderextreme.net/X3DJSONLD/src/main/shaders/mix.fs"]
                                    type: "FRAGMENT"
                                ]
                            ],
                            ComposedShader: [
                                DEF: "x_ite"
                                language: "GLSL"
#http://hypertextbook.com/facts/2005/JustinChe.shtml
                                field: [
                                    name: "chromaticDispertion"
                                    accessType: "inputOutput"
                                    type: "SFVec3f"
                                    value: "0.98 1 1.033"
                                ],
                                field: [
                                    name: "cube"
                                    accessType: "inputOutput"
                                    type: "SFInt32"
                                    value: "0"
                                ],
                                field: [
                                    name: "bias"
                                    accessType: "inputOutput"
                                    type: "SFFloat"
                                    value: "0.5"
                                ],
                                field: [
                                    name: "scale"
                                    accessType: "inputOutput"
                                    type: "SFFloat"
                                    value: "0.5"
                                ],
                                field: [
                                    name: "power"
                                    accessType: "inputOutput"
                                    type: "SFFloat"
                                    value: "2"
                                ],
                                ShaderPart: [
                                    url: ["../shaders/x_ite.vs", "https://coderextreme.net/X3DJSONLD/src/main/shaders/x_ite.vs"]
                                    type: "VERTEX"
                                ],
                                ShaderPart: [
                                    url: ["../shaders/x_itemix.fs", "https://coderextreme.net/X3DJSONLD/src/main/shaders/x_itemix.fs"]
                                    type: "FRAGMENT"
                                ]
                            ]
                        ]
                    ]
                    setGeometry: [
                        Sphere: [
                            radius: 30.0
                        ]
                    ]
                ],
                Script: [
                    DEF: "UrlSelector"
                    directOutput: true
                    field: [
                        name: "frontUrls"
                        type: "MFString"
                        accessType: "initializeOnly"
                        value: "\"../resources/images/all_probes/beach_cross/beach_front.png\" \"../resources/images/all_probes/building_cross/building_front.png\" \"../resources/images/all_probes/campus_cross/campus_front.png\" \"../resources/images/all_probes/galileo_cross/galileo_front.png\" \"../resources/images/all_probes/grace_cross/grace_front.png\" \"../resources/images/all_probes/kitchen_cross/kitchen_front.png\" \"../resources/images/all_probes/rnl_cross/rnl_front.png\" \"../resources/images/all_probes/stpeters_cross/stpeters_front.png\" \"../resources/images/all_probes/uffizi_cross/uffizi_front.png\""
                    ],
                    field: [
                        name: "backUrls"
                        type: "MFString"
                        accessType: "initializeOnly"
                        value: "\"../resources/images/all_probes/beach_cross/beach_back.png\" \"../resources/images/all_probes/building_cross/building_back.png\" \"../resources/images/all_probes/campus_cross/campus_back.png\" \"../resources/images/all_probes/galileo_cross/galileo_back.png\" \"../resources/images/all_probes/grace_cross/grace_back.png\" \"../resources/images/all_probes/kitchen_cross/kitchen_back.png\" \"../resources/images/all_probes/rnl_cross/rnl_back.png\" \"../resources/images/all_probes/stpeters_cross/stpeters_back.png\" \"../resources/images/all_probes/uffizi_cross/uffizi_back.png\""
                    ],
                    field: [
                        name: "leftUrls"
                        type: "MFString"
                        accessType: "initializeOnly"
                        value: "\"../resources/images/all_probes/beach_cross/beach_left.png\" \"../resources/images/all_probes/building_cross/building_left.png\" \"../resources/images/all_probes/campus_cross/campus_left.png\" \"../resources/images/all_probes/galileo_cross/galileo_left.png\" \"../resources/images/all_probes/grace_cross/grace_left.png\" \"../resources/images/all_probes/kitchen_cross/kitchen_left.png\" \"../resources/images/all_probes/rnl_cross/rnl_left.png\" \"../resources/images/all_probes/stpeters_cross/stpeters_left.png\" \"../resources/images/all_probes/uffizi_cross/uffizi_left.png\""
                    ],
                    field: [
                        name: "rightUrls"
                        type: "MFString"
                        accessType: "initializeOnly"
                        value: "\"../resources/images/all_probes/beach_cross/beach_right.png\" \"../resources/images/all_probes/building_cross/building_right.png\" \"../resources/images/all_probes/campus_cross/campus_right.png\" \"../resources/images/all_probes/galileo_cross/galileo_right.png\" \"../resources/images/all_probes/grace_cross/grace_right.png\" \"../resources/images/all_probes/kitchen_cross/kitchen_right.png\" \"../resources/images/all_probes/rnl_cross/rnl_right.png\" \"../resources/images/all_probes/stpeters_cross/stpeters_right.png\" \"../resources/images/all_probes/uffizi_cross/uffizi_right.png\""
                    ],
                    field: [
                        name: "topUrls"
                        type: "MFString"
                        accessType: "initializeOnly"
                        value: "\"../resources/images/all_probes/beach_cross/beach_top.png\" \"../resources/images/all_probes/building_cross/building_top.png\" \"../resources/images/all_probes/campus_cross/campus_top.png\" \"../resources/images/all_probes/galileo_cross/galileo_top.png\" \"../resources/images/all_probes/grace_cross/grace_top.png\" \"../resources/images/all_probes/kitchen_cross/kitchen_top.png\" \"../resources/images/all_probes/rnl_cross/rnl_top.png\" \"../resources/images/all_probes/stpeters_cross/stpeters_top.png\" \"../resources/images/all_probes/uffizi_cross/uffizi_top.png\""
                    ],
                    field: [
                        name: "bottomUrls"
                        type: "MFString"
                        accessType: "initializeOnly"
                        value: "\"../resources/images/all_probes/beach_cross/beach_bottom.png\" \"../resources/images/all_probes/building_cross/building_bottom.png\" \"../resources/images/all_probes/campus_cross/campus_bottom.png\" \"../resources/images/all_probes/galileo_cross/galileo_bottom.png\" \"../resources/images/all_probes/grace_cross/grace_bottom.png\" \"../resources/images/all_probes/kitchen_cross/kitchen_bottom.png\" \"../resources/images/all_probes/rnl_cross/rnl_bottom.png\" \"../resources/images/all_probes/stpeters_cross/stpeters_bottom.png\" \"../resources/images/all_probes/uffizi_cross/uffizi_bottom.png\""
                    ],
                    field: [
                        name: "front_changed"
                        type: "MFString"
                        accessType: "outputOnly"
                    ],
                    field: [
                        name: "back_changed"
                        type: "MFString"
                        accessType: "outputOnly"
                    ],
                    field: [
                        name: "left_changed"
                        type: "MFString"
                        accessType: "outputOnly"
                    ],
                    field: [
                        name: "right_changed"
                        type: "MFString"
                        accessType: "outputOnly"
                    ],
                    field: [
                        name: "top_changed"
                        type: "MFString"
                        accessType: "outputOnly"
                    ],
                    field: [
                        name: "bottom_changed"
                        type: "MFString"
                        accessType: "outputOnly"
                    ],
                    field: [
                        name: "set_fraction"
                        type: "SFFloat"
                        accessType: "inputOnly"
                    ],
                    field: [
                        name: "old"
                        type: "SFInt32"
                        accessType: "inputOutput"
                        value: "-1"
                    ],
#ecmascript:
#        function set_fraction( f, tm ) {
#	    var side = Math.floor(f*frontUrls.length);
#	    if (side > frontUrls.length-1) {
#	    	side = 0;
#	    }
#	    if (side != old) {
#	    	    Browser.print(f+" "+side);
#	    	    old = side;
#		    front_changed[0] = frontUrls[side];
#		    back_changed[0] = backUrls[side];
#		    left_changed[0] = leftUrls[side];
#		    right_changed[0] = rightUrls[side];
#		    top_changed[0] = topUrls[side];
#		    bottom_changed[0] = bottomUrls[side];
#            }
#        }
                ],
                TimeSensor: [
                    DEF: "Clock"
                    cycleInterval: 45.0
                    loop: true
                ],
                ROUTE: [
                    fromNode: "Clock"
                    fromField: "fraction_changed"
                    toNode: "UrlSelector"
                    toField: "set_fraction"
                ],
                ROUTE: [
                    fromNode: "UrlSelector"
                    fromField: "front_changed"
                    toNode: "frontBackgroundTexture"
                    toField: "url"
                ],
                ROUTE: [
                    fromNode: "UrlSelector"
                    fromField: "back_changed"
                    toNode: "backBackgroundTexture"
                    toField: "url"
                ],
                ROUTE: [
                    fromNode: "UrlSelector"
                    fromField: "left_changed"
                    toNode: "leftBackgroundTexture"
                    toField: "url"
                ],
                ROUTE: [
                    fromNode: "UrlSelector"
                    fromField: "right_changed"
                    toNode: "rightBackgroundTexture"
                    toField: "url"
                ],
                ROUTE: [
                    fromNode: "UrlSelector"
                    fromField: "top_changed"
                    toNode: "topBackgroundTexture"
                    toField: "url"
                ],
                ROUTE: [
                    fromNode: "UrlSelector"
                    fromField: "bottom_changed"
                    toNode: "bottomBackgroundTexture"
                    toField: "url"
                ],
                ROUTE: [
                    fromNode: "UrlSelector"
                    fromField: "front_changed"
                    toNode: "frontShader"
                    toField: "url"
                ],
                ROUTE: [
                    fromNode: "UrlSelector"
                    fromField: "back_changed"
                    toNode: "backShader"
                    toField: "url"
                ],
                ROUTE: [
                    fromNode: "UrlSelector"
                    fromField: "left_changed"
                    toNode: "leftShader"
                    toField: "url"
                ],
                ROUTE: [
                    fromNode: "UrlSelector"
                    fromField: "right_changed"
                    toNode: "rightShader"
                    toField: "url"
                ],
                ROUTE: [
                    fromNode: "UrlSelector"
                    fromField: "top_changed"
                    toNode: "topShader"
                    toField: "url"
                ],
                ROUTE: [
                    fromNode: "UrlSelector"
                    fromField: "bottom_changed"
                    toNode: "bottomShader"
                    toField: "url"
                ]
            ]
        ]
    ]
