X3D:
    profile: "Immersive"
    version: "4.0"
    setHead: [
        head: [
            component: [
                name: "Scripting"
                level: 1
            ],
            meta: [
                name: "title"
                content: "flowers2.x3d"
            ],
            meta: [
                name: "creator"
                content: "John Carlson"
            ],
            meta: [
                name: "created"
                content: "23 January 2005"
            ],
            meta: [
                name: "modified"
                content: "9 November 2024"
            ],
            meta: [
                name: "description"
                content: "2 random mathematical roses in spherical dimensions. rho = a + b * cos(c * theta) * cos(d * phi)"
            ],
            meta: [
                name: "identifier"
                content: "https://coderextreme.net/X3DJSONLD/src/main/data/flowers2.x3d"
            ],
            meta: [
                name: "generator"
                content: "manually written"
            ],
            meta: [
                name: "license"
                content: "https://www.web3d.org/x3d/content/examples/license.html"
            ]
        ]
    ]
    setScene: [
        Scene: [
            NavigationInfo: [ empty
            ],
            Viewpoint: [
                description: "Two mathematical orbitals"
                position: [0, 0, 50]
            ],
            Group: [
                DirectionalLight: [
                    direction: [1, 1, 1]
                ],
                ProtoDeclare: [
                    name: "orbit"
                    setProtoInterface: [
                        ProtoInterface: [
                            field: [
                                name: "translation"
                                accessType: "inputOutput"
                                type: "SFVec3f"
                                value: "-8 0 0"
                            ],
                            field: [
                                name: "diffuseColor"
                                accessType: "inputOutput"
                                type: "SFColor"
                                value: "1 0.5 0"
                            ],
                            field: [
                                name: "specularColor"
                                accessType: "inputOutput"
                                type: "SFColor"
                                value: "1 0.5 0"
                            ],
                            field: [
                                name: "transparency"
                                accessType: "inputOutput"
                                type: "SFFloat"
                                value: "0.75"
                            ]
                        ]
                    ]
                    setProtoBody: [
                        ProtoBody: [
                            Group: [
                                TimeSensor: [
                                    DEF: "Clock"
                                    cycleInterval: 16.0
                                    loop: true
                                ],
                                OrientationInterpolator: [
                                    DEF: "OrbitPath"
                                    key: [0, 0.5, 1]
                                    keyValue: [1, 0, 0, 0, 1, 0, 0, 3.14, 1, 0, 0, 6.28]
                                ],
                                Transform: [
                                    DEF: "OrbitTransform"
                                    IS: [
                                        connect: [
                                            nodeField: "translation"
                                            protoField: "translation"
                                        ]
                                    ],
                                    Shape: [
                                        setAppearance: [
                                            Appearance: [
                                                setMaterial: [
                                                    Material: [
                                                        IS: [
                                                            connect: [
                                                                nodeField: "diffuseColor"
                                                                protoField: "diffuseColor"
                                                            ],
                                                            connect: [
                                                                nodeField: "specularColor"
                                                                protoField: "specularColor"
                                                            ],
                                                            connect: [
                                                                nodeField: "transparency"
                                                                protoField: "transparency"
                                                            ]
                                                        ]
                                                    ]
                                                ]
                                            ]
                                        ],
#<IndexedFaceSet DEF="Orbit"> <Coordinate DEF="OrbitCoordinates"/> </IndexedFaceSet>
                                        setGeometry: [
                                            IndexedFaceSet: [
                                                ccw: false
                                                convex: false
                                                coordIndex: [0, 1, 2, -1]
                                                DEF: "Orbit"
                                                setCoord: [
                                                    Coordinate: [
                                                        DEF: "OrbitCoordinates"
                                                        point: [0, 0, 1, 0, 1, 0, 1, 0, 0]
                                                    ]
                                                ]
                                            ]
                                        ]
                                    ]
                                ],
                                Script: [
                                    DEF: "OrbitScript"
                                    field: [
                                        name: "set_fraction"
                                        accessType: "inputOnly"
                                        type: "SFFloat"
                                    ],
                                    field: [
                                        name: "coordinates"
                                        accessType: "inputOutput"
                                        type: "MFVec3f"
                                    ],
                                    field: [
                                        name: "coordIndexes"
                                        accessType: "inputOutput"
                                        type: "MFInt32"
                                    ],
                                    field: [
                                        name: "e"
                                        accessType: "inputOutput"
                                        type: "SFFloat"
                                        value: "5"
                                    ],
                                    field: [
                                        name: "f"
                                        accessType: "inputOutput"
                                        type: "SFFloat"
                                        value: "5"
                                    ],
                                    field: [
                                        name: "g"
                                        accessType: "inputOutput"
                                        type: "SFFloat"
                                        value: "5"
                                    ],
                                    field: [
                                        name: "h"
                                        accessType: "inputOutput"
                                        type: "SFFloat"
                                        value: "5"
                                    ],
                                    field: [
                                        name: "resolution"
                                        accessType: "inputOutput"
                                        type: "SFInt32"
                                        value: "50"
                                    ],
#ecmascript:
#
#			function initialize() {
#			     generateCoordinates();
#			     var arrIndex = 0;
#			     for (var i = 0; i < resolution-1; i++) {
#				for (var j = 0; j < resolution-1; j++) {
#				     coordIndexes[arrIndex++] = i*resolution+j;
#				     coordIndexes[arrIndex++] = i*resolution+j+1;
#				     coordIndexes[arrIndex++] = (i+1)*resolution+j+1;
#				     coordIndexes[arrIndex++] = (i+1)*resolution+j;
#				     coordIndexes[arrIndex++] = -1;
#				}
#			    }
#			}
#
#			function generateCoordinates() {
#			     var theta = 0.0;
#			     var phi = 0.0;
#			     var delta = (2 * 3.141592653) / (resolution-1);
#			     var arrIndex = 0;
#			     for (var i = 0; i < resolution; i++) {
#				for (var j = 0; j < resolution; j++) {
#					var rho = e + f * Math.cos(g * theta) * Math.cos(h * phi);
#					coordinates[arrIndex++] = new SFVec3f(
#						rho * Math.cos(phi) * Math.cos(theta),
#						rho * Math.cos(phi) * Math.sin(theta),
#						rho * Math.sin(phi)
#					);
#					theta += delta;
#				}
#				phi += delta;
#			     }
#			}
#
#			function set_fraction(fraction, eventTime) {
#				var choice = Math.floor(Math.random() * 4);
#				switch (choice) {
#				case 0:
#					e += Math.floor(Math.random() * 2) * 2 - 1;
#					break;
#				case 1:
#					f += Math.floor(Math.random() * 2) * 2 - 1;
#					break;
#				case 2:
#					g += Math.floor(Math.random() * 2) * 2 - 1;
#					break;
#				case 3:
#					h += Math.floor(Math.random() * 2) * 2 - 1;
#					break;
#				}
#				if (e < 1) {
#					f = 10;
#				}
#				if (f < 1) {
#					f = 10;
#				}
#				if (g < 1) {
#					g = 4;
#				}
#				if (h < 1) {
#					h = 4;
#				}
#				generateCoordinates();
#			}
                                ],
                                ROUTE: [
                                    fromNode: "OrbitScript"
                                    fromField: "coordIndexes"
                                    toNode: "Orbit"
                                    toField: "set_coordIndex"
                                ],
                                ROUTE: [
                                    fromNode: "OrbitScript"
                                    fromField: "coordinates"
                                    toNode: "OrbitCoordinates"
                                    toField: "point"
                                ],
                                ROUTE: [
                                    fromNode: "Clock"
                                    fromField: "fraction_changed"
                                    toNode: "OrbitScript"
                                    toField: "set_fraction"
                                ],
                                ROUTE: [
                                    fromNode: "OrbitPath"
                                    fromField: "value_changed"
                                    toNode: "OrbitTransform"
                                    toField: "rotation"
                                ],
                                ROUTE: [
                                    fromNode: "Clock"
                                    fromField: "fraction_changed"
                                    toNode: "OrbitPath"
                                    toField: "set_fraction"
                                ]
                            ]
                        ]
                    ]
                ],
                ProtoInstance: [
                    name: "orbit"
                    fieldValue: [
                        name: "translation"
                        value: "-8 0 0"
                    ],
                    fieldValue: [
                        name: "diffuseColor"
                        value: "1 0.5 0"
                    ],
                    fieldValue: [
                        name: "specularColor"
                        value: "1 0.5 0"
                    ],
                    fieldValue: [
                        name: "transparency"
                        value: "0.75"
                    ]
                ],
                ProtoInstance: [
                    name: "orbit"
                    fieldValue: [
                        name: "translation"
                        value: "8 0 0"
                    ],
                    fieldValue: [
                        name: "diffuseColor"
                        value: "0 0.5 1"
                    ],
                    fieldValue: [
                        name: "specularColor"
                        value: "0 0.5 1"
                    ],
                    fieldValue: [
                        name: "transparency"
                        value: "0.5"
                    ]
                ]
            ]
        ]
    ]
