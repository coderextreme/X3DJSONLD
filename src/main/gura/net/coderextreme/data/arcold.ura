X3D0: "X3D"
    profile: "Immersive"
    version: "3.3"
    head: head
        meta: meta
            name: "title"
            content: "arcold.x3d"
        meta: meta
            name: "creator"
            content: "John Carlson"
        meta: meta
            name: "generator"
            content: "manual"
        meta: meta
            name: "identifier"
            content: "https://coderextreme.net/X3DJSONLD/src/main/data/arc.x3d"
        meta: meta
            name: "description"
            content: "an attempt to implement an arc in a graph"
    scene: Scene
        children: Viewpoint
            position: [0, 0, 5]
            description: "a moving graph"
        children: Background
            skyColor: [0.4, 0.4, 0.4]
        children: Transform
            DEF: "trans1"
            children: Transform
                DEF: "rotscale1"
                child: Shape
                    appearance: Appearance
                        material: Material
                            diffuseColor: [0.2, 0.7, 0.7]
                    geometry: Cylinder
                        radius: 0.1
        children: Transform
            DEF: "trans2"
            children: Transform
                DEF: "rotscale2"
                child: Shape
                    appearance: Appearance
                        material: Material
                            diffuseColor: [0.2, 0.7, 0.7]
                    geometry: Cylinder
                        radius: 0.1
        children: Transform
            DEF: "trans3"
            children: Transform
                DEF: "rotscale3"
                child: Shape
                    appearance: Appearance
                        material: Material
                            diffuseColor: [0.2, 0.7, 0.7]
                    geometry: Cylinder
                        radius: 0.1
        children: ProtoDeclare
            name: "point"
            protoInterface: ProtoInterface
                field: field
                    name: "translation"
                    accessType: "inputOutput"
                    type: "SFVec3f"
                    value: "0 0 0"
            protoBody: ProtoBody
                children: Transform
                    DEF: "node"
                    IS: IS
                        connect: connect
                            nodeField: "translation"
                            protoField: "translation"
                    child: Shape
                        geometry: Sphere
                            radius: 0.1
                        appearance: Appearance
                            material: Material
                                diffuseColor: [1, 0, 0]
                    children: PositionInterpolator
                        DEF: "PI1"
                        key: [0, 1]
                        keyValue: [0, 0, 0, 0, 5, 0]
                    children: Script
                        DEF: "MB1"
                        field: field
                            name: "translation"
                            accessType: "inputOutput"
                            type: "SFVec3f"
                            value: "50 50 0"
                        field: field
                            name: "old"
                            accessType: "inputOutput"
                            type: "SFVec3f"
                            value: "0 0 0"
                        field: field
                            name: "set_location"
                            accessType: "inputOnly"
                            type: "SFTime"
                        field: field
                            name: "keyValue"
                            accessType: "outputOnly"
                            type: "MFVec3f"
(.setSourceCode "\\newline		function set_location(value) {\\newline                    old = translation;\\newline		    translation = new SFVec3f(Math.random()*10-5, Math.random()*10-5, Math.random()*10-5);\\newline                    keyValue = new MFVec3f([old, translation]);\\newline		    // Browser.println(translation);\\newline		}\\newline")                    children: TimeSensor
                        DEF: "CL1"
                        cycleInterval: 3.0
                        loop: true
                    children: ROUTE
                        fromNode: "CL1"
                        fromField: "cycleTime"
                        toNode: "MB1"
                        toField: "set_location"
                    children: ROUTE
                        fromNode: "CL1"
                        fromField: "fraction_changed"
                        toNode: "PI1"
                        toField: "set_fraction"
                    children: ROUTE
                        fromNode: "MB1"
                        fromField: "keyValue"
                        toNode: "PI1"
                        toField: "keyValue"
                    children: ROUTE
                        fromNode: "PI1"
                        fromField: "value_changed"
                        toNode: "node"
                        toField: "set_translation"
;from doug sanden
        children: ProtoDeclare
            name: "x3dconnector"
            protoInterface: ProtoInterface
                field: field
                    name: "startnode"
                    accessType: "inputOutput"
                    type: "SFNode"
                field: field
                    name: "endnode"
                    accessType: "inputOutput"
                    type: "SFNode"
                field: field
                    name: "transnode"
                    accessType: "inputOutput"
                    type: "SFNode"
                field: field
                    name: "rotscalenode"
                    accessType: "inputOutput"
                    type: "SFNode"
                field: field
                    name: "set_startpoint"
                    accessType: "inputOnly"
                    type: "SFVec3f"
                field: field
                    name: "set_endpoint"
                    accessType: "inputOnly"
                    type: "SFVec3f"
            protoBody: ProtoBody
                children: Script
                    DEF: "S1"
                    field: field
                        name: "startnode"
                        accessType: "inputOutput"
                        type: "SFNode"
                    field: field
                        name: "endnode"
                        accessType: "inputOutput"
                        type: "SFNode"
                    field: field
                        name: "transnode"
                        accessType: "inputOutput"
                        type: "SFNode"
                    field: field
                        name: "rotscalenode"
                        accessType: "inputOutput"
                        type: "SFNode"
                    field: field
                        name: "set_startpoint"
                        accessType: "inputOnly"
                        type: "SFVec3f"
                    field: field
                        name: "set_endpoint"
                        accessType: "inputOnly"
                        type: "SFVec3f"
                    IS: IS
                        connect: connect
                            nodeField: "startnode"
                            protoField: "startnode"
                        connect: connect
                            nodeField: "endnode"
                            protoField: "endnode"
                        connect: connect
                            nodeField: "transnode"
                            protoField: "transnode"
                        connect: connect
                            nodeField: "rotscalenode"
                            protoField: "rotscalenode"
                        connect: connect
                            nodeField: "set_startpoint"
                            protoField: "set_startpoint"
                        connect: connect
                            nodeField: "set_endpoint"
                            protoField: "set_endpoint"
(.setSourceCode "\\newline        function recompute(startpoint,endpoint){\\newline	    if (typeof endpoint === 'undefined') {\\newline		return;\\newline	    }\\newline            var dif = endpoint.subtract(startpoint);\\newline            var dist = dif.length()*0.5;\\newline            var dif2 = dif.multiply(0.5);\\newline            var norm = dif.normalize();\\newline            var transl = startpoint.add(dif2);\\newline	    if (typeof Quaternion !== 'undefined') {\\newline		    return {\\newline			    scale : new SFVec3f(1.0,dist,1.0),\\newline			    translation : transl,\\newline			    rotation : new Quaternion.rotateFromTo(new SFVec3f(0.0,1.0,0.0), norm)\\newline		    };\\newline	    } else {\\newline		    return {\\newline			    scale : new SFVec3f(1.0,dist,1.0),\\newline			    translation : transl,\\newline			    rotation : new SFRotation(new SFVec3f(0.0,1.0,0.0),norm)\\newline		    };\\newline	    }\\newline	}\\newline	function recompute_and_route(startpoint, endpoint) {\\newline		var trafo = recompute(startpoint, endpoint);\\newline		if (typeof trafo !== 'undefined') {\\newline			transnode.translation = trafo.translation;\\newline			rotscalenode.rotation = trafo.rotation;\\newline			rotscalenode.scale = trafo.scale;\\newline		} else {\\newline			Browser.print(\"recompute returned undefined\");\\newline		}\\newline	}\\newline        function initialize(){\\newline            recompute_and_route(startnode.translation,endnode.translation);\\newline        }\\newline        function set_startpoint(val,t){\\newline            recompute_and_route(val || startnode.translation,endnode.translation);\\newline        }\\newline        function set_endpoint(val,t){\\newline            recompute_and_route(startnode.translation,val || endnode.translation);\\newline        }\\newline")        children: ProtoInstance
            name: "point"
            DEF: "G1"
        children: ProtoInstance
            name: "point"
            DEF: "G2"
        children: ProtoInstance
            name: "point"
            DEF: "G3"
        children: ProtoInstance
            name: "point"
            DEF: "G4"
        children: ProtoInstance
            name: "x3dconnector"
            DEF: "connector1"
            fieldValue: fieldValue
                name: "startnode"
                children: ProtoInstance
                    USE: "G1"
            fieldValue: fieldValue
                name: "endnode"
                children: ProtoInstance
                    USE: "G2"
            fieldValue: fieldValue
                name: "transnode"
                children: Transform
                    USE: "trans1"
            fieldValue: fieldValue
                name: "rotscalenode"
                children: Transform
                    USE: "rotscale1"
        children: ProtoInstance
            name: "x3dconnector"
            DEF: "connector2"
            fieldValue: fieldValue
                name: "startnode"
                children: ProtoInstance
                    USE: "G1"
            fieldValue: fieldValue
                name: "endnode"
                children: ProtoInstance
                    USE: "G3"
            fieldValue: fieldValue
                name: "transnode"
                children: Transform
                    USE: "trans2"
            fieldValue: fieldValue
                name: "rotscalenode"
                children: Transform
                    USE: "rotscale2"
        children: ProtoInstance
            name: "x3dconnector"
            DEF: "connector3"
            fieldValue: fieldValue
                name: "startnode"
                children: ProtoInstance
                    USE: "G1"
            fieldValue: fieldValue
                name: "endnode"
                children: ProtoInstance
                    USE: "G4"
            fieldValue: fieldValue
                name: "transnode"
                children: Transform
                    USE: "trans3"
            fieldValue: fieldValue
                name: "rotscalenode"
                children: Transform
                    USE: "rotscale3"
        children: ROUTE
            fromNode: "G1"
            fromField: "translation_changed"
            toNode: "connector1"
            toField: "set_startpoint"
        children: ROUTE
            fromNode: "G2"
            fromField: "translation_changed"
            toNode: "connector1"
            toField: "set_endpoint"
        children: ROUTE
            fromNode: "G1"
            fromField: "translation_changed"
            toNode: "connector2"
            toField: "set_startpoint"
        children: ROUTE
            fromNode: "G3"
            fromField: "translation_changed"
            toNode: "connector2"
            toField: "set_endpoint"
        children: ROUTE
            fromNode: "G1"
            fromField: "translation_changed"
            toNode: "connector3"
            toField: "set_startpoint"
        children: ROUTE
            fromNode: "G4"
            fromField: "translation_changed"
            toNode: "connector3"
            toField: "set_endpoint"
