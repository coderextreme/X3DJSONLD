X3D:
    profile: "Immersive"
    version: "4.0"
    setHead: [
        head: [
            component: [
                name: "Scripting"
                level: 1
            ],
            component: [
                name: "EnvironmentalEffects"
                level: 3
            ],
            component: [
                name: "Shaders"
                level: 1
            ],
            component: [
                name: "CubeMapTexturing"
                level: 1
            ],
            component: [
                name: "Texturing"
                level: 1
            ],
            component: [
                name: "Rendering"
                level: 1
            ],
            component: [
                name: "Shape"
                level: 4
            ],
            component: [
                name: "Grouping"
                level: 3
            ],
            component: [
                name: "Core"
                level: 1
            ],
            meta: [
                name: "title"
                content: "flowers4.x3d"
            ],
            meta: [
                name: "creator"
                content: "John Carlson"
            ],
            meta: [
                name: "generator"
                content: "manual"
            ],
            meta: [
                name: "identifier"
                content: "https://coderextreme.net/X3DJSONLD/src/main/personal/flowers4.x3d"
            ],
            meta: [
                name: "description"
                content: "an animated flower"
            ]
        ]
    ]
    setScene: [
        Scene: [
            NavigationInfo: [ empty
            ],
            Background: [
                backUrl: ["../resources/images/all_probes/stpeters_cross/stpeters_back.png", "https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_back.png"]
                bottomUrl: ["../resources/images/all_probes/stpeters_cross/stpeters_bottom.png", "https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_bottom.png"]
                frontUrl: ["../resources/images/all_probes/stpeters_cross/stpeters_front.png", "https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_front.png"]
                leftUrl: ["../resources/images/all_probes/stpeters_cross/stpeters_left.png", "https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_left.png"]
                rightUrl: ["../resources/images/all_probes/stpeters_cross/stpeters_right.png", "https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_right.png"]
                topUrl: ["../resources/images/all_probes/stpeters_cross/stpeters_top.png", "https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_top.png"]
            ],
            Transform: [
                DEF: "transform"
                Shape: [
                    setAppearance: [
                        Appearance: [
                            setMaterial: [
                                Material: [
                                    diffuseColor: [0.7, 0.7, 0.7]
                                    specularColor: [0.5, 0.5, 0.5]
                                ]
                            ]
                            setTexture: [
                                ComposedCubeMapTexture: [
                                    setBackTexture: [
                                        ImageTexture: [
                                            url: ["../resources/images/all_probes/stpeters_cross/stpeters_back.png", "https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_back.png"]
                                        ]
                                    ]
                                    setBottomTexture: [
                                        ImageTexture: [
                                            url: ["../resources/images/all_probes/stpeters_cross/stpeters_bottom.png", "https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_bottom.png"]
                                        ]
                                    ]
                                    setFrontTexture: [
                                        ImageTexture: [
                                            url: ["../resources/images/all_probes/stpeters_cross/stpeters_front.png", "https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_front.png"]
                                        ]
                                    ]
                                    setLeftTexture: [
                                        ImageTexture: [
                                            url: ["../resources/images/all_probes/stpeters_cross/stpeters_left.png", "https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_left.png"]
                                        ]
                                    ]
                                    setRightTexture: [
                                        ImageTexture: [
                                            url: ["../resources/images/all_probes/stpeters_cross/stpeters_right.png", "https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_right.png"]
                                        ]
                                    ]
                                    setTopTexture: [
                                        ImageTexture: [
                                            url: ["../resources/images/all_probes/stpeters_cross/stpeters_top.png", "https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_top.png"]
                                        ]
                                    ]
                                ]
                            ],
                            ComposedShader: [
                                DEF: "shader"
                                language: "GLSL"
                                field: [
                                    name: "cube"
                                    type: "SFInt32"
                                    accessType: "inputOutput"
                                    value: "0"
                                ],
                                field: [
                                    name: "chromaticDispertion"
                                    accessType: "inputOutput"
                                    type: "SFVec3f"
                                    value: "0.98 1 1.033"
                                ],
                                field: [
                                    name: "bias"
                                    type: "SFFloat"
                                    accessType: "inputOutput"
                                    value: "0.5"
                                ],
                                field: [
                                    name: "scale"
                                    type: "SFFloat"
                                    accessType: "inputOutput"
                                    value: "0.5"
                                ],
                                field: [
                                    name: "power"
                                    type: "SFFloat"
                                    accessType: "inputOutput"
                                    value: "2"
                                ],
                                ShaderPart: [
                                    url: ["../shaders/x_ite.vs", "https://coderextreme.net/X3DJSONLD/src/main/shaders/x_ite.vs", "https://coderextreme.net/X3DJSONLD/src/main/shaders/x_ite.vs"]
                                    type: "VERTEX"
                                ],
                                ShaderPart: [
                                    url: ["../shaders/x_ite.fs", "https://coderextreme.net/X3DJSONLD/src/main/shaders/x_ite.fs", "https://coderextreme.net/X3DJSONLD/src/main/shaders/x_ite.fs"]
                                    type: "FRAGMENT"
                                ]
                            ]
                        ]
                    ],
#<Sphere>
                    setGeometry: [
                        IndexedFaceSet: [
                            convex: false
                            DEF: "Orbit"
                            setCoord: [
                                Coordinate: [
                                    DEF: "OrbitCoordinates"
                                ]
                            ]
                        ]
                    ]
                ]
            ],
            Script: [
                DEF: "OrbitScript"
                field: [
                    name: "set_fraction"
                    accessType: "inputOnly"
                    type: "SFFloat"
                ],
                field: [
                    name: "coordinates"
                    accessType: "inputOutput"
                    type: "MFVec3f"
                ],
                field: [
                    name: "coordIndexes"
                    accessType: "outputOnly"
                    type: "MFInt32"
                ],
                field: [
                    name: "e"
                    type: "SFFloat"
                    accessType: "inputOutput"
                    value: "5"
                ],
                field: [
                    name: "f"
                    type: "SFFloat"
                    accessType: "inputOutput"
                    value: "5"
                ],
                field: [
                    name: "g"
                    type: "SFFloat"
                    accessType: "inputOutput"
                    value: "5"
                ],
                field: [
                    name: "h"
                    type: "SFFloat"
                    accessType: "inputOutput"
                    value: "5"
                ],
#ecmascript:
#function initialize() {
#     var resolution = 100;
#     updateCoordinates(resolution);
#     var cis = [];
#     for ( i = 0; i < resolution-1; i++) {
#     	for ( j = 0; j < resolution-1; j++) {
#	     cis.push(i*resolution+j);
#	     cis.push(i*resolution+j+1);
#	     cis.push((i+1)*resolution+j+1);
#	     cis.push((i+1)*resolution+j);
#	     cis.push(-1);
#	}
#    }
#    coordIndexes = new MFInt32(...cis);
#}
#
#function updateCoordinates(resolution) {
#     var theta = 0.0;
#     var phi = 0.0;
#     var delta = (2 * 3.141592653) / (resolution-1);
#     var crds = [];
#     for ( i = 0; i < resolution; i++) {
#     	for ( j = 0; j < resolution; j++) {
#		var rho = e + f * Math.cos(g * theta) * Math.cos(h * phi);
#		crds.push(new SFVec3f(
#			rho * Math.cos(phi) * Math.cos(theta),
#			rho * Math.cos(phi) * Math.sin(theta),
#			rho * Math.sin(phi)
#		));
#		theta += delta;
#	}
#	phi += delta;
#     }
#     coordinates = new MFVec3f(...crds);
#}
#
#function set_fraction(fraction, eventTime) {
#	var choice = Math.floor(Math.random() * 4);
#	switch (choice) {
#	case 0:
#		e += Math.floor(Math.random() * 2) * 2 - 1;
#		break;
#	case 1:
#		f += Math.floor(Math.random() * 2) * 2 - 1;
#		break;
#	case 2:
#		g += Math.floor(Math.random() * 2) * 2 - 1;
#		break;
#	case 3:
#		h += Math.floor(Math.random() * 2) * 2 - 1;
#		break;
#	}
#	if (e < 1) {
#		e = 10;
#	}
#	if (f < 1) {
#		f = 10;
#	}
#	if (g < 1) {
#		g = 4;
#	}
#	if (h < 1) {
#		h = 4;
#	}
#	var resolution = 100;
#	updateCoordinates(resolution);
#}
            ],
            TimeSensor: [
                DEF: "Clock"
                cycleInterval: 16.0
                loop: true
            ],
            ROUTE: [
                fromField: "coordIndexes"
                fromNode: "OrbitScript"
                toField: "set_coordIndex"
                toNode: "Orbit"
            ],
            ROUTE: [
                fromField: "coordinates"
                fromNode: "OrbitScript"
                toField: "set_point"
                toNode: "OrbitCoordinates"
            ],
            ROUTE: [
                fromField: "fraction_changed"
                fromNode: "Clock"
                toField: "set_fraction"
                toNode: "OrbitScript"
            ]
        ]
    ]
