X3D:
    profile: "Immersive"
    version: "4.0"
    setHead: [
        head: [
            component: [
                name: "Scripting"
                level: 1
            ],
            component: [
                name: "EnvironmentalEffects"
                level: 3
            ],
            component: [
                name: "Shaders"
                level: 1
            ],
            component: [
                name: "CubeMapTexturing"
                level: 1
            ],
            component: [
                name: "Texturing"
                level: 1
            ],
            component: [
                name: "Rendering"
                level: 1
            ],
            component: [
                name: "Shape"
                level: 4
            ],
            component: [
                name: "Grouping"
                level: 3
            ],
            component: [
                name: "Core"
                level: 1
            ],
            meta: [
                name: "title"
                content: "flowers.x3d"
            ],
            meta: [
                name: "creator"
                content: "John Carlson"
            ],
            meta: [
                name: "description"
                content: "5 or more prismatic flowers"
            ],
            meta: [
                name: "generator"
                content: "X3D-Edit, https://savage.nps.edu/X3D-Edit"
            ],
            meta: [
                name: "identifier"
                content: "https://coderextreme.net/X3DJSONLD/src/main/personal/flowers.x3d"
            ]
        ]
    ]
    setScene: [
        Scene: [
            NavigationInfo: [ empty
            ],
#Images courtesy of Paul Debevec's Light Probe Image Gallery
            Background: [
                backUrl: ["../resources/images/all_probes/stpeters_cross/stpeters_back.png", "https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_back.png"]
                bottomUrl: ["../resources/images/all_probes/stpeters_cross/stpeters_bottom.png", "https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_bottom.png"]
                frontUrl: ["../resources/images/all_probes/stpeters_cross/stpeters_front.png", "https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_front.png"]
                leftUrl: ["../resources/images/all_probes/stpeters_cross/stpeters_left.png", "https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_left.png"]
                rightUrl: ["../resources/images/all_probes/stpeters_cross/stpeters_right.png", "https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_right.png"]
                topUrl: ["../resources/images/all_probes/stpeters_cross/stpeters_top.png", "https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_top.png"]
            ],
            ProtoDeclare: [
                name: "flower"
                setProtoBody: [
                    ProtoBody: [
                        Transform: [
                            DEF: "animate_transform"
                            Shape: [
                                setAppearance: [
                                    Appearance: [
                                        setMaterial: [
                                            Material: [
                                                diffuseColor: [0.7, 0.7, 0.7]
                                                specularColor: [0.5, 0.5, 0.5]
                                            ]
                                        ]
                                        setTexture: [
                                            ComposedCubeMapTexture: [
                                                DEF: "texture"
                                                setBackTexture: [
                                                    ImageTexture: [
                                                        url: ["../resources/images/all_probes/stpeters_cross/stpeters_back.png", "https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_back.png"]
                                                    ]
                                                ]
                                                setBottomTexture: [
                                                    ImageTexture: [
                                                        url: ["../resources/images/all_probes/stpeters_cross/stpeters_bottom.png", "https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_bottom.png"]
                                                    ]
                                                ]
                                                setFrontTexture: [
                                                    ImageTexture: [
                                                        url: ["../resources/images/all_probes/stpeters_cross/stpeters_front.png", "https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_front.png"]
                                                    ]
                                                ]
                                                setLeftTexture: [
                                                    ImageTexture: [
                                                        url: ["../resources/images/all_probes/stpeters_cross/stpeters_left.png", "https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_left.png"]
                                                    ]
                                                ]
                                                setRightTexture: [
                                                    ImageTexture: [
                                                        url: ["../resources/images/all_probes/stpeters_cross/stpeters_right.png", "https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_right.png"]
                                                    ]
                                                ]
                                                setTopTexture: [
                                                    ImageTexture: [
                                                        url: ["../resources/images/all_probes/stpeters_cross/stpeters_top.png", "https://coderextreme.net/X3DJSONLD/src/main/resources/images/all_probes/stpeters_cross/stpeters_top.png"]
                                                    ]
                                                ]
                                            ]
                                        ],
#<ComposedShader DEF='x3dom' language="GLSL"> <field name='cube' type='SFInt32' accessType='inputOutput' value='0'></field> <field name='cube' type='SFNode' accessType="inputOutput"> <ComposedCubeMapTexture USE="texture"/> </field> <field name='chromaticDispertion' accessType='initializeOnly' type='SFVec3f' value='0.98 1.0 1.033'></field> <field name='bias' type='SFFloat' accessType='inputOutput' value='0.5'></field> <field name='scale' type='SFFloat' accessType='inputOutput' value='0.5'></field> <field name='power' type='SFFloat' accessType='inputOutput' value='2'></field> <field name='a' type='SFFloat' accessType='inputOutput' value='10'></field> <field name='b' type='SFFloat' accessType='inputOutput' value='1'></field> <field name='c' type='SFFloat' accessType='inputOutput' value='20'></field> <field name='d' type='SFFloat' accessType='inputOutput' value='20'></field> <field name='tdelta' type='SFFloat' accessType='inputOutput' value='0'></field> <field name='pdelta' type='SFFloat' accessType='inputOutput' value='0'></field> <ShaderPart url='"https://coderextreme.net/X3DJSONLD/src/main/shaders/x3dom_flowers_chromatic.vs" "https://coderextreme.net/X3DJSONLD/src/main/shaders/x3dom_flowers_chromatic.vs"' containerField='parts' type='VERTEX'></ShaderPart> <ShaderPart url='"https://coderextreme.net/X3DJSONLD/src/main/shaders/common.fs" "https://coderextreme.net/X3DJSONLD/src/main/shaders/common.fs"' containerField='parts' type='FRAGMENT'></ShaderPart> </ComposedShader>
                                        ComposedShader: [
                                            DEF: "x_ite"
                                            language: "GLSL"
                                            field: [
                                                name: "cube"
                                                type: "SFNode"
                                                accessType: "inputOutput"
                                                ComposedCubeMapTexture: [
                                                    USE: "texture"
                                                ]
                                            ],
                                            field: [
                                                name: "chromaticDispertion"
                                                accessType: "initializeOnly"
                                                type: "SFVec3f"
                                                value: "0.98 1 1.033"
                                            ],
                                            field: [
                                                name: "bias"
                                                type: "SFFloat"
                                                accessType: "inputOnly"
                                                value: "0.5"
                                            ],
                                            field: [
                                                name: "scale"
                                                type: "SFFloat"
                                                accessType: "inputOnly"
                                                value: "0.5"
                                            ],
                                            field: [
                                                name: "power"
                                                type: "SFFloat"
                                                accessType: "inputOnly"
                                                value: "2"
                                            ],
                                            field: [
                                                name: "a"
                                                type: "SFFloat"
                                                accessType: "inputOnly"
                                                value: "10"
                                            ],
                                            field: [
                                                name: "b"
                                                type: "SFFloat"
                                                accessType: "inputOnly"
                                                value: "1"
                                            ],
                                            field: [
                                                name: "c"
                                                type: "SFFloat"
                                                accessType: "inputOnly"
                                                value: "20"
                                            ],
                                            field: [
                                                name: "d"
                                                type: "SFFloat"
                                                accessType: "inputOnly"
                                                value: "20"
                                            ],
                                            field: [
                                                name: "tdelta"
                                                type: "SFFloat"
                                                accessType: "inputOnly"
                                                value: "0"
                                            ],
                                            field: [
                                                name: "pdelta"
                                                type: "SFFloat"
                                                accessType: "inputOnly"
                                                value: "0"
                                            ],
                                            ShaderPart: [
                                                url: ["https://coderextreme.net/X3DJSONLD/src/main/shaders/x_ite_flowers_chromatic.vs", "https://coderextreme.net/X3DJSONLD/src/main/shaders/x_ite_flowers_chromatic.vs"]
                                                type: "VERTEX"
                                            ],
                                            ShaderPart: [
                                                url: ["https://coderextreme.net/X3DJSONLD/src/main/shaders/x_ite.fs", "https://coderextreme.net/X3DJSONLD/src/main/shaders/x_ite.fs"]
                                                type: "FRAGMENT"
                                            ]
                                        ]
                                    ]
                                ]
                                setGeometry: [
                                    Sphere: [ empty
                                    ]
                                ]
                            ]
                        ],
                        Script: [
                            DEF: "Animate"
                            field: [
                                name: "translation"
                                accessType: "inputOutput"
                                type: "SFVec3f"
                                value: "0 0 0"
                            ],
                            field: [
                                name: "velocity"
                                accessType: "inputOutput"
                                type: "SFVec3f"
                                value: "0 0 0"
                            ],
                            field: [
                                name: "set_fraction"
                                accessType: "inputOnly"
                                type: "SFFloat"
                            ],
                            field: [
                                name: "a"
                                type: "SFFloat"
                                accessType: "inputOutput"
                                value: "0.5"
                            ],
                            field: [
                                name: "b"
                                type: "SFFloat"
                                accessType: "inputOutput"
                                value: "0.5"
                            ],
                            field: [
                                name: "c"
                                type: "SFFloat"
                                accessType: "inputOutput"
                                value: "3"
                            ],
                            field: [
                                name: "d"
                                type: "SFFloat"
                                accessType: "inputOutput"
                                value: "3"
                            ],
                            field: [
                                name: "tdelta"
                                type: "SFFloat"
                                accessType: "inputOutput"
                                value: "0.5"
                            ],
                            field: [
                                name: "pdelta"
                                type: "SFFloat"
                                accessType: "inputOutput"
                                value: "0.5"
                            ],
#ecmascript:
#
#			function initialize() {
#			    translation = new SFVec3f(0, 0, 0);
#			    velocity = new SFVec3f(
#			    	Math.random() - 0.5,
#				Math.random() - 0.5,
#				Math.random() - 0.5);
#			}
#			function set_fraction() {
#			    translation = new SFVec3f(
#			    	translation.x + velocity.x,
#				translation.y + velocity.y,
#				translation.z + velocity.z);
#			    for (var j = 0; j <= 2; j++) {
#				    if (Math.abs(translation.x) > 10) {
#					initialize();
#				    } else if (Math.abs(translation.y) > 10) {
#					initialize();
#				    } else if (Math.abs(translation.z) > 10) {
#					initialize();
#				    } else {
#					velocity.x += Math.random() * 0.2 - 0.1;
#					velocity.y += Math.random() * 0.2 - 0.1;
#					velocity.z += Math.random() * 0.2 - 0.1;
#				    }
#			    }
#			    animate_flowers();
#			}
#
#			function animate_flowers(fraction, eventTime) {
#				var choice = Math.floor(Math.random() * 4);
#				switch (choice) {
#				case 0:
#					a += Math.random() * 0.2 - 0.1;
#					break;
#				case 1:
#					b += Math.random() * 0.2 - 0.1;
#					break;
#				case 2:
#					c += Math.random() * 2 - 1;
#					break;
#				case 3:
#					d += Math.random() * 2 - 1;
#					break;
#				}
#				tdelta = tdelta + 0.5;
#				pdelta = pdelta + 0.5;
#				if (a > 1) {
#					a =  0.5;
#				}
#				if (b > 1) {
#					b =  0.5;
#				}
#				if (c < 1) {
#					c =  4;
#				}
#				if (d < 1) {
#					d =  4;
#				}
#				if (c > 10) {
#					c = 4;
#				}
#				if (d > 10) {
#					d = 4;
#				}
#			}
                        ],
                        TimeSensor: [
                            DEF: "TourTime"
                            cycleInterval: 5.0
                            loop: true
                        ],
                        ROUTE: [
                            fromNode: "TourTime"
                            fromField: "fraction_changed"
                            toNode: "Animate"
                            toField: "set_fraction"
                        ],
                        ROUTE: [
                            fromNode: "Animate"
                            fromField: "translation_changed"
                            toNode: "animate_transform"
                            toField: "set_translation"
                        ],
                        ROUTE: [
                            fromNode: "Animate"
                            fromField: "a"
                            toNode: "x_ite"
                            toField: "a"
                        ],
                        ROUTE: [
                            fromNode: "Animate"
                            fromField: "b"
                            toNode: "x_ite"
                            toField: "b"
                        ],
                        ROUTE: [
                            fromNode: "Animate"
                            fromField: "c"
                            toNode: "x_ite"
                            toField: "c"
                        ],
                        ROUTE: [
                            fromNode: "Animate"
                            fromField: "d"
                            toNode: "x_ite"
                            toField: "d"
                        ],
                        ROUTE: [
                            fromNode: "Animate"
                            fromField: "pdelta"
                            toNode: "x_ite"
                            toField: "pdelta"
                        ],
                        ROUTE: [
                            fromNode: "Animate"
                            fromField: "tdelta"
                            toNode: "x_ite"
                            toField: "tdelta"
                        ],
#<ROUTE fromNode='Animate' fromField='a' toNode='x3dom' toField='a'/> <ROUTE fromNode='Animate' fromField='b' toNode='x3dom' toField='b'/> <ROUTE fromNode='Animate' fromField='c' toNode='x3dom' toField='c'/> <ROUTE fromNode='Animate' fromField='d' toNode='x3dom' toField='d'/> <ROUTE fromNode='Animate' fromField='pdelta' toNode='x3dom' toField='pdelta'/> <ROUTE fromNode='Animate' fromField='tdelta' toNode='x3dom' toField='tdelta'/>
                    ]
                ]
            ],
            ProtoInstance: [
                name: "flower"
            ],
            ProtoInstance: [
                name: "flower"
            ],
            ProtoInstance: [
                name: "flower"
            ]
        ]
    ]
